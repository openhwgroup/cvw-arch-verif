///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/rv64/F//WALLY-COV-fnmsub.s.S
// David_Harris@hmc.edu
// Created 2025-01-24 19:54:22.821759
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cmp_gpr_hazard raw test
fnmsub.s f6, f22, f4, f5 # perform first operation
fnmsub.s f16, f6, f3, f1 # perform second operation

# Testcase cmp_gpr_hazard raw test
fnmsub.s f15, f22, f1, f23 # perform first operation
fnmsub.s f10, f6, f15, f8 # perform second operation

# Testcase cmp_gpr_hazard waw test
fnmsub.s f11, f2, f30, f4 # perform first operation
fnmsub.s f11, f31, f2, f26 # perform second operation

# Testcase cmp_gpr_hazard waw test
fnmsub.s f15, f31, f3, f29 # perform first operation
fnmsub.s f15, f25, f16, f26 # perform second operation

# Testcase cmp_gpr_hazard war test
fnmsub.s f4, f10, f29, f19 # perform first operation
fnmsub.s f10, f26, f15, f29 # perform second operation

# Testcase cmp_gpr_hazard war test
fnmsub.s f6, f31, f27, f23 # perform first operation
fnmsub.s f27, f4, f26, f20 # perform second operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
li x0, 0x8063a78abad031ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x872ee866e6d6b33e # load x3 with value 0x872ee866e6d6b33e
sw x3, 0(x2) # store 0x872ee866e6d6b33e in memory
flw f0, 0(x2) # load 0x872ee866e6d6b33e from memory into f0
li x3, 0xa8d6a17485026519 # load x3 with value 0xa8d6a17485026519
sw x3, 0(x2) # store 0xa8d6a17485026519 in memory
flw f24, 0(x2) # load 0xa8d6a17485026519 from memory into f24
li x3, 0xd8eb983fe27d2a31 # load x3 with value 0xd8eb983fe27d2a31
sw x3, 0(x2) # store 0xd8eb983fe27d2a31 in memory
flw f31, 0(x2) # load 0xd8eb983fe27d2a31 from memory into f31
fnmsub.s f0, f0, f24, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
li x1, 0x5a99fe847c90092d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f8aaa180358d36b # load x3 with value 0x7f8aaa180358d36b
sw x3, 0(x2) # store 0x7f8aaa180358d36b in memory
flw f1, 0(x2) # load 0x7f8aaa180358d36b from memory into f1
li x3, 0xa01141d4ed611683 # load x3 with value 0xa01141d4ed611683
sw x3, 0(x2) # store 0xa01141d4ed611683 in memory
flw f24, 0(x2) # load 0xa01141d4ed611683 from memory into f24
li x3, 0xd0d85d163e3b3bad # load x3 with value 0xd0d85d163e3b3bad
sw x3, 0(x2) # store 0xd0d85d163e3b3bad in memory
flw f10, 0(x2) # load 0xd0d85d163e3b3bad from memory into f10
fnmsub.s f1, f1, f24, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
li x2, 0xf96ae7eb0d5a01a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6816c390ac41746e # load x3 with value 0x6816c390ac41746e
sw x3, 0(x2) # store 0x6816c390ac41746e in memory
flw f2, 0(x2) # load 0x6816c390ac41746e from memory into f2
li x3, 0x80b420865ef9d2d7 # load x3 with value 0x80b420865ef9d2d7
sw x3, 0(x2) # store 0x80b420865ef9d2d7 in memory
flw f10, 0(x2) # load 0x80b420865ef9d2d7 from memory into f10
li x3, 0xaa2dbb7ef4909cee # load x3 with value 0xaa2dbb7ef4909cee
sw x3, 0(x2) # store 0xaa2dbb7ef4909cee in memory
flw f3, 0(x2) # load 0xaa2dbb7ef4909cee from memory into f3
fnmsub.s f2, f2, f10, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
li x3, 0x5bde90af6fd5d11c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeea108c833c10f97 # load x3 with value 0xeea108c833c10f97
sw x3, 0(x2) # store 0xeea108c833c10f97 in memory
flw f3, 0(x2) # load 0xeea108c833c10f97 from memory into f3
li x3, 0x71f154698e37727d # load x3 with value 0x71f154698e37727d
sw x3, 0(x2) # store 0x71f154698e37727d in memory
flw f10, 0(x2) # load 0x71f154698e37727d from memory into f10
li x3, 0x360cd4cd63ddf2bc # load x3 with value 0x360cd4cd63ddf2bc
sw x3, 0(x2) # store 0x360cd4cd63ddf2bc in memory
flw f13, 0(x2) # load 0x360cd4cd63ddf2bc from memory into f13
fnmsub.s f3, f3, f10, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
li x4, 0xd67606c7e81ee6ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x73b254e857efaa8d # load x3 with value 0x73b254e857efaa8d
sw x3, 0(x2) # store 0x73b254e857efaa8d in memory
flw f4, 0(x2) # load 0x73b254e857efaa8d from memory into f4
li x3, 0xcfffa75d07183e00 # load x3 with value 0xcfffa75d07183e00
sw x3, 0(x2) # store 0xcfffa75d07183e00 in memory
flw f20, 0(x2) # load 0xcfffa75d07183e00 from memory into f20
li x3, 0xedb18eac8760fa92 # load x3 with value 0xedb18eac8760fa92
sw x3, 0(x2) # store 0xedb18eac8760fa92 in memory
flw f19, 0(x2) # load 0xedb18eac8760fa92 from memory into f19
fnmsub.s f4, f4, f20, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
li x5, 0x55c45015c7b7f126 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6adb35e77264818 # load x3 with value 0x6adb35e77264818
sw x3, 0(x2) # store 0x6adb35e77264818 in memory
flw f5, 0(x2) # load 0x6adb35e77264818 from memory into f5
li x3, 0x619f8679e1496584 # load x3 with value 0x619f8679e1496584
sw x3, 0(x2) # store 0x619f8679e1496584 in memory
flw f30, 0(x2) # load 0x619f8679e1496584 from memory into f30
li x3, 0xaf4a7565fb05646 # load x3 with value 0xaf4a7565fb05646
sw x3, 0(x2) # store 0xaf4a7565fb05646 in memory
flw f15, 0(x2) # load 0xaf4a7565fb05646 from memory into f15
fnmsub.s f5, f5, f30, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
li x6, 0x3574e7ddea1d724a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x130c4d138fa1608d # load x3 with value 0x130c4d138fa1608d
sw x3, 0(x2) # store 0x130c4d138fa1608d in memory
flw f6, 0(x2) # load 0x130c4d138fa1608d from memory into f6
li x3, 0xbce79ff635046de # load x3 with value 0xbce79ff635046de
sw x3, 0(x2) # store 0xbce79ff635046de in memory
flw f4, 0(x2) # load 0xbce79ff635046de from memory into f4
li x3, 0x7fba74e6acb0f668 # load x3 with value 0x7fba74e6acb0f668
sw x3, 0(x2) # store 0x7fba74e6acb0f668 in memory
flw f26, 0(x2) # load 0x7fba74e6acb0f668 from memory into f26
fnmsub.s f6, f6, f4, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
li x7, 0x30e4b3fb84816108 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcd22ab5a64443d8c # load x3 with value 0xcd22ab5a64443d8c
sw x3, 0(x2) # store 0xcd22ab5a64443d8c in memory
flw f7, 0(x2) # load 0xcd22ab5a64443d8c from memory into f7
li x3, 0xb7c91e72fc4ed6cd # load x3 with value 0xb7c91e72fc4ed6cd
sw x3, 0(x2) # store 0xb7c91e72fc4ed6cd in memory
flw f7, 0(x2) # load 0xb7c91e72fc4ed6cd from memory into f7
li x3, 0xbbc8b02e2e26849f # load x3 with value 0xbbc8b02e2e26849f
sw x3, 0(x2) # store 0xbbc8b02e2e26849f in memory
flw f23, 0(x2) # load 0xbbc8b02e2e26849f from memory into f23
fnmsub.s f7, f7, f7, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
li x8, 0x76baab1515c4fc59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfc1d40cc082e6944 # load x3 with value 0xfc1d40cc082e6944
sw x3, 0(x2) # store 0xfc1d40cc082e6944 in memory
flw f8, 0(x2) # load 0xfc1d40cc082e6944 from memory into f8
li x3, 0xc981284c71c84f50 # load x3 with value 0xc981284c71c84f50
sw x3, 0(x2) # store 0xc981284c71c84f50 in memory
flw f1, 0(x2) # load 0xc981284c71c84f50 from memory into f1
li x3, 0xaa87b23e1d192627 # load x3 with value 0xaa87b23e1d192627
sw x3, 0(x2) # store 0xaa87b23e1d192627 in memory
flw f23, 0(x2) # load 0xaa87b23e1d192627 from memory into f23
fnmsub.s f8, f8, f1, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
li x9, 0xe0716c883b1a40d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x21483ddcd2969011 # load x3 with value 0x21483ddcd2969011
sw x3, 0(x2) # store 0x21483ddcd2969011 in memory
flw f9, 0(x2) # load 0x21483ddcd2969011 from memory into f9
li x3, 0xdd1e12c85fd4c574 # load x3 with value 0xdd1e12c85fd4c574
sw x3, 0(x2) # store 0xdd1e12c85fd4c574 in memory
flw f3, 0(x2) # load 0xdd1e12c85fd4c574 from memory into f3
li x3, 0xe2d89d3b44a9710f # load x3 with value 0xe2d89d3b44a9710f
sw x3, 0(x2) # store 0xe2d89d3b44a9710f in memory
flw f12, 0(x2) # load 0xe2d89d3b44a9710f from memory into f12
fnmsub.s f9, f9, f3, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
li x10, 0xdf96b3c5647b1ed6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3b62d11475e6adc7 # load x3 with value 0x3b62d11475e6adc7
sw x3, 0(x2) # store 0x3b62d11475e6adc7 in memory
flw f10, 0(x2) # load 0x3b62d11475e6adc7 from memory into f10
li x3, 0xdb3d30e627ab4b4f # load x3 with value 0xdb3d30e627ab4b4f
sw x3, 0(x2) # store 0xdb3d30e627ab4b4f in memory
flw f31, 0(x2) # load 0xdb3d30e627ab4b4f from memory into f31
li x3, 0x2a6a7c01fa55880 # load x3 with value 0x2a6a7c01fa55880
sw x3, 0(x2) # store 0x2a6a7c01fa55880 in memory
flw f14, 0(x2) # load 0x2a6a7c01fa55880 from memory into f14
fnmsub.s f10, f10, f31, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
li x11, 0xb9d195666dfa4d86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4e35c07d655db20c # load x3 with value 0x4e35c07d655db20c
sw x3, 0(x2) # store 0x4e35c07d655db20c in memory
flw f11, 0(x2) # load 0x4e35c07d655db20c from memory into f11
li x3, 0xc6101647f3c6d575 # load x3 with value 0xc6101647f3c6d575
sw x3, 0(x2) # store 0xc6101647f3c6d575 in memory
flw f19, 0(x2) # load 0xc6101647f3c6d575 from memory into f19
li x3, 0x992f10c03d4ea6d2 # load x3 with value 0x992f10c03d4ea6d2
sw x3, 0(x2) # store 0x992f10c03d4ea6d2 in memory
flw f13, 0(x2) # load 0x992f10c03d4ea6d2 from memory into f13
fnmsub.s f11, f11, f19, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
li x12, 0x5e746ef5a07eebc0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x91a1ec55df1c08ab # load x3 with value 0x91a1ec55df1c08ab
sw x3, 0(x2) # store 0x91a1ec55df1c08ab in memory
flw f12, 0(x2) # load 0x91a1ec55df1c08ab from memory into f12
li x3, 0xb553dff5d9502ece # load x3 with value 0xb553dff5d9502ece
sw x3, 0(x2) # store 0xb553dff5d9502ece in memory
flw f7, 0(x2) # load 0xb553dff5d9502ece from memory into f7
li x3, 0xdeaa5822aeacf855 # load x3 with value 0xdeaa5822aeacf855
sw x3, 0(x2) # store 0xdeaa5822aeacf855 in memory
flw f22, 0(x2) # load 0xdeaa5822aeacf855 from memory into f22
fnmsub.s f12, f12, f7, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
li x13, 0x746b1faa3a49a098 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe9ea9e26221b10dc # load x3 with value 0xe9ea9e26221b10dc
sw x3, 0(x2) # store 0xe9ea9e26221b10dc in memory
flw f13, 0(x2) # load 0xe9ea9e26221b10dc from memory into f13
li x3, 0x22b04040cfe9559e # load x3 with value 0x22b04040cfe9559e
sw x3, 0(x2) # store 0x22b04040cfe9559e in memory
flw f7, 0(x2) # load 0x22b04040cfe9559e from memory into f7
li x3, 0x275a1ec269d7220d # load x3 with value 0x275a1ec269d7220d
sw x3, 0(x2) # store 0x275a1ec269d7220d in memory
flw f28, 0(x2) # load 0x275a1ec269d7220d from memory into f28
fnmsub.s f13, f13, f7, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
li x14, 0x80ad81862e2d3691 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2a98de84e8cddb67 # load x3 with value 0x2a98de84e8cddb67
sw x3, 0(x2) # store 0x2a98de84e8cddb67 in memory
flw f14, 0(x2) # load 0x2a98de84e8cddb67 from memory into f14
li x3, 0x29bc052a7534bfa # load x3 with value 0x29bc052a7534bfa
sw x3, 0(x2) # store 0x29bc052a7534bfa in memory
flw f13, 0(x2) # load 0x29bc052a7534bfa from memory into f13
li x3, 0x6c6a9f6a989aaff3 # load x3 with value 0x6c6a9f6a989aaff3
sw x3, 0(x2) # store 0x6c6a9f6a989aaff3 in memory
flw f7, 0(x2) # load 0x6c6a9f6a989aaff3 from memory into f7
fnmsub.s f14, f14, f13, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
li x15, 0xa33502c8b7ef4de0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5c5dc111e17c0933 # load x3 with value 0x5c5dc111e17c0933
sw x3, 0(x2) # store 0x5c5dc111e17c0933 in memory
flw f15, 0(x2) # load 0x5c5dc111e17c0933 from memory into f15
li x3, 0xd0970ec4a7e1f80c # load x3 with value 0xd0970ec4a7e1f80c
sw x3, 0(x2) # store 0xd0970ec4a7e1f80c in memory
flw f3, 0(x2) # load 0xd0970ec4a7e1f80c from memory into f3
li x3, 0x4b448528a8da10ec # load x3 with value 0x4b448528a8da10ec
sw x3, 0(x2) # store 0x4b448528a8da10ec in memory
flw f31, 0(x2) # load 0x4b448528a8da10ec from memory into f31
fnmsub.s f15, f15, f3, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
li x16, 0x2b05bb366ecf490c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe34762bcd2d2532 # load x3 with value 0xe34762bcd2d2532
sw x3, 0(x2) # store 0xe34762bcd2d2532 in memory
flw f16, 0(x2) # load 0xe34762bcd2d2532 from memory into f16
li x3, 0x2e6eafce553b96dd # load x3 with value 0x2e6eafce553b96dd
sw x3, 0(x2) # store 0x2e6eafce553b96dd in memory
flw f18, 0(x2) # load 0x2e6eafce553b96dd from memory into f18
li x3, 0xb8da8d4e793b3a70 # load x3 with value 0xb8da8d4e793b3a70
sw x3, 0(x2) # store 0xb8da8d4e793b3a70 in memory
flw f17, 0(x2) # load 0xb8da8d4e793b3a70 from memory into f17
fnmsub.s f16, f16, f18, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
li x17, 0x5f220be44bd5b263 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x885c241c1bae8b62 # load x3 with value 0x885c241c1bae8b62
sw x3, 0(x2) # store 0x885c241c1bae8b62 in memory
flw f17, 0(x2) # load 0x885c241c1bae8b62 from memory into f17
li x3, 0x3175921852464569 # load x3 with value 0x3175921852464569
sw x3, 0(x2) # store 0x3175921852464569 in memory
flw f31, 0(x2) # load 0x3175921852464569 from memory into f31
li x3, 0x626d94f7bd1850fb # load x3 with value 0x626d94f7bd1850fb
sw x3, 0(x2) # store 0x626d94f7bd1850fb in memory
flw f17, 0(x2) # load 0x626d94f7bd1850fb from memory into f17
fnmsub.s f17, f17, f31, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
li x18, 0x8103860dc939d3b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbdc65eb096d64776 # load x3 with value 0xbdc65eb096d64776
sw x3, 0(x2) # store 0xbdc65eb096d64776 in memory
flw f18, 0(x2) # load 0xbdc65eb096d64776 from memory into f18
li x3, 0xb5dc641018018b20 # load x3 with value 0xb5dc641018018b20
sw x3, 0(x2) # store 0xb5dc641018018b20 in memory
flw f22, 0(x2) # load 0xb5dc641018018b20 from memory into f22
li x3, 0xe8ff4817de83eca6 # load x3 with value 0xe8ff4817de83eca6
sw x3, 0(x2) # store 0xe8ff4817de83eca6 in memory
flw f1, 0(x2) # load 0xe8ff4817de83eca6 from memory into f1
fnmsub.s f18, f18, f22, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
li x19, 0x5f5d63eccfdd281a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x22f0d21363234f71 # load x3 with value 0x22f0d21363234f71
sw x3, 0(x2) # store 0x22f0d21363234f71 in memory
flw f19, 0(x2) # load 0x22f0d21363234f71 from memory into f19
li x3, 0xe8c59b64db4eca09 # load x3 with value 0xe8c59b64db4eca09
sw x3, 0(x2) # store 0xe8c59b64db4eca09 in memory
flw f15, 0(x2) # load 0xe8c59b64db4eca09 from memory into f15
li x3, 0x33d46a4d5f6b92ca # load x3 with value 0x33d46a4d5f6b92ca
sw x3, 0(x2) # store 0x33d46a4d5f6b92ca in memory
flw f20, 0(x2) # load 0x33d46a4d5f6b92ca from memory into f20
fnmsub.s f19, f19, f15, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
li x20, 0x077340b5370a09f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf90ad30da7a1027b # load x3 with value 0xf90ad30da7a1027b
sw x3, 0(x2) # store 0xf90ad30da7a1027b in memory
flw f20, 0(x2) # load 0xf90ad30da7a1027b from memory into f20
li x3, 0x9420faa4aa37b29b # load x3 with value 0x9420faa4aa37b29b
sw x3, 0(x2) # store 0x9420faa4aa37b29b in memory
flw f30, 0(x2) # load 0x9420faa4aa37b29b from memory into f30
li x3, 0x69541793dda7b1a4 # load x3 with value 0x69541793dda7b1a4
sw x3, 0(x2) # store 0x69541793dda7b1a4 in memory
flw f18, 0(x2) # load 0x69541793dda7b1a4 from memory into f18
fnmsub.s f20, f20, f30, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
li x21, 0xdf96142efdbca0fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb3c1641b10543d9 # load x3 with value 0xb3c1641b10543d9
sw x3, 0(x2) # store 0xb3c1641b10543d9 in memory
flw f21, 0(x2) # load 0xb3c1641b10543d9 from memory into f21
li x3, 0xd039972103a391fa # load x3 with value 0xd039972103a391fa
sw x3, 0(x2) # store 0xd039972103a391fa in memory
flw f20, 0(x2) # load 0xd039972103a391fa from memory into f20
li x3, 0xdcac7428803caac3 # load x3 with value 0xdcac7428803caac3
sw x3, 0(x2) # store 0xdcac7428803caac3 in memory
flw f13, 0(x2) # load 0xdcac7428803caac3 from memory into f13
fnmsub.s f21, f21, f20, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
li x22, 0xb3c3cb7d1c28eaf1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x276bf58632f08e1c # load x3 with value 0x276bf58632f08e1c
sw x3, 0(x2) # store 0x276bf58632f08e1c in memory
flw f22, 0(x2) # load 0x276bf58632f08e1c from memory into f22
li x3, 0xcc3c6051720607b4 # load x3 with value 0xcc3c6051720607b4
sw x3, 0(x2) # store 0xcc3c6051720607b4 in memory
flw f19, 0(x2) # load 0xcc3c6051720607b4 from memory into f19
li x3, 0x76b48085e8dd2c7 # load x3 with value 0x76b48085e8dd2c7
sw x3, 0(x2) # store 0x76b48085e8dd2c7 in memory
flw f22, 0(x2) # load 0x76b48085e8dd2c7 from memory into f22
fnmsub.s f22, f22, f19, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
li x23, 0xebd24e4f35d41753 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb627d3e6978377c5 # load x3 with value 0xb627d3e6978377c5
sw x3, 0(x2) # store 0xb627d3e6978377c5 in memory
flw f23, 0(x2) # load 0xb627d3e6978377c5 from memory into f23
li x3, 0x83fd6c3c61aebe64 # load x3 with value 0x83fd6c3c61aebe64
sw x3, 0(x2) # store 0x83fd6c3c61aebe64 in memory
flw f21, 0(x2) # load 0x83fd6c3c61aebe64 from memory into f21
li x3, 0xa231e877d6277260 # load x3 with value 0xa231e877d6277260
sw x3, 0(x2) # store 0xa231e877d6277260 in memory
flw f16, 0(x2) # load 0xa231e877d6277260 from memory into f16
fnmsub.s f23, f23, f21, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
li x24, 0x6002bf39b0c56b9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc3d1c464e04cad4f # load x3 with value 0xc3d1c464e04cad4f
sw x3, 0(x2) # store 0xc3d1c464e04cad4f in memory
flw f24, 0(x2) # load 0xc3d1c464e04cad4f from memory into f24
li x3, 0x65faa1826b994d52 # load x3 with value 0x65faa1826b994d52
sw x3, 0(x2) # store 0x65faa1826b994d52 in memory
flw f5, 0(x2) # load 0x65faa1826b994d52 from memory into f5
li x3, 0x5c22bbfc8f4d4b3c # load x3 with value 0x5c22bbfc8f4d4b3c
sw x3, 0(x2) # store 0x5c22bbfc8f4d4b3c in memory
flw f3, 0(x2) # load 0x5c22bbfc8f4d4b3c from memory into f3
fnmsub.s f24, f24, f5, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
li x25, 0x7cd580f061333610 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2c01d5b3d2b86a86 # load x3 with value 0x2c01d5b3d2b86a86
sw x3, 0(x2) # store 0x2c01d5b3d2b86a86 in memory
flw f25, 0(x2) # load 0x2c01d5b3d2b86a86 from memory into f25
li x3, 0xf177ba139d6e3e09 # load x3 with value 0xf177ba139d6e3e09
sw x3, 0(x2) # store 0xf177ba139d6e3e09 in memory
flw f20, 0(x2) # load 0xf177ba139d6e3e09 from memory into f20
li x3, 0xacc5a2f53aacbfb0 # load x3 with value 0xacc5a2f53aacbfb0
sw x3, 0(x2) # store 0xacc5a2f53aacbfb0 in memory
flw f9, 0(x2) # load 0xacc5a2f53aacbfb0 from memory into f9
fnmsub.s f25, f25, f20, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
li x26, 0x83bf0c35acffd1f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x13d91b1216b82cbe # load x3 with value 0x13d91b1216b82cbe
sw x3, 0(x2) # store 0x13d91b1216b82cbe in memory
flw f26, 0(x2) # load 0x13d91b1216b82cbe from memory into f26
li x3, 0x72049575a41dc342 # load x3 with value 0x72049575a41dc342
sw x3, 0(x2) # store 0x72049575a41dc342 in memory
flw f5, 0(x2) # load 0x72049575a41dc342 from memory into f5
li x3, 0x57ac4ffe6bcbbb9 # load x3 with value 0x57ac4ffe6bcbbb9
sw x3, 0(x2) # store 0x57ac4ffe6bcbbb9 in memory
flw f3, 0(x2) # load 0x57ac4ffe6bcbbb9 from memory into f3
fnmsub.s f26, f26, f5, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
li x27, 0x0e4d0cff26a8f7a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x14a95e9d7c20a393 # load x3 with value 0x14a95e9d7c20a393
sw x3, 0(x2) # store 0x14a95e9d7c20a393 in memory
flw f27, 0(x2) # load 0x14a95e9d7c20a393 from memory into f27
li x3, 0xa358dde74fcaa093 # load x3 with value 0xa358dde74fcaa093
sw x3, 0(x2) # store 0xa358dde74fcaa093 in memory
flw f8, 0(x2) # load 0xa358dde74fcaa093 from memory into f8
li x3, 0x8cba6acc039c090d # load x3 with value 0x8cba6acc039c090d
sw x3, 0(x2) # store 0x8cba6acc039c090d in memory
flw f29, 0(x2) # load 0x8cba6acc039c090d from memory into f29
fnmsub.s f27, f27, f8, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
li x28, 0x27188d6bc126c46c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x141c9b11d447f51b # load x3 with value 0x141c9b11d447f51b
sw x3, 0(x2) # store 0x141c9b11d447f51b in memory
flw f28, 0(x2) # load 0x141c9b11d447f51b from memory into f28
li x3, 0x86eee88494517d48 # load x3 with value 0x86eee88494517d48
sw x3, 0(x2) # store 0x86eee88494517d48 in memory
flw f31, 0(x2) # load 0x86eee88494517d48 from memory into f31
li x3, 0xf236c38cb9dc45e1 # load x3 with value 0xf236c38cb9dc45e1
sw x3, 0(x2) # store 0xf236c38cb9dc45e1 in memory
flw f14, 0(x2) # load 0xf236c38cb9dc45e1 from memory into f14
fnmsub.s f28, f28, f31, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
li x29, 0xd81d37b28dc1cea8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x610a08bf0e53da36 # load x3 with value 0x610a08bf0e53da36
sw x3, 0(x2) # store 0x610a08bf0e53da36 in memory
flw f29, 0(x2) # load 0x610a08bf0e53da36 from memory into f29
li x3, 0x1a417feabba5ba29 # load x3 with value 0x1a417feabba5ba29
sw x3, 0(x2) # store 0x1a417feabba5ba29 in memory
flw f30, 0(x2) # load 0x1a417feabba5ba29 from memory into f30
li x3, 0xa9cdb73396fad040 # load x3 with value 0xa9cdb73396fad040
sw x3, 0(x2) # store 0xa9cdb73396fad040 in memory
flw f20, 0(x2) # load 0xa9cdb73396fad040 from memory into f20
fnmsub.s f29, f29, f30, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
li x30, 0x0dcb4f03fb8c55fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x63d65ffe0d31597d # load x3 with value 0x63d65ffe0d31597d
sw x3, 0(x2) # store 0x63d65ffe0d31597d in memory
flw f30, 0(x2) # load 0x63d65ffe0d31597d from memory into f30
li x3, 0x3ca2c0016014eecc # load x3 with value 0x3ca2c0016014eecc
sw x3, 0(x2) # store 0x3ca2c0016014eecc in memory
flw f20, 0(x2) # load 0x3ca2c0016014eecc from memory into f20
li x3, 0xcafe2e5145a8639 # load x3 with value 0xcafe2e5145a8639
sw x3, 0(x2) # store 0xcafe2e5145a8639 in memory
flw f17, 0(x2) # load 0xcafe2e5145a8639 from memory into f17
fnmsub.s f30, f30, f20, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
li x31, 0xfb3faa754c493805 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc28b8aaf2de23e3e # load x3 with value 0xc28b8aaf2de23e3e
sw x3, 0(x2) # store 0xc28b8aaf2de23e3e in memory
flw f31, 0(x2) # load 0xc28b8aaf2de23e3e from memory into f31
li x3, 0x3d78d71cd2489968 # load x3 with value 0x3d78d71cd2489968
sw x3, 0(x2) # store 0x3d78d71cd2489968 in memory
flw f13, 0(x2) # load 0x3d78d71cd2489968 from memory into f13
li x3, 0x7b283477be15bce6 # load x3 with value 0x7b283477be15bce6
sw x3, 0(x2) # store 0x7b283477be15bce6 in memory
flw f2, 0(x2) # load 0x7b283477be15bce6 from memory into f2
fnmsub.s f31, f31, f13, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
li x0, 0x8bef62e71ae18cb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7928eece530cd9fa # load x3 with value 0x7928eece530cd9fa
sw x3, 0(x2) # store 0x7928eece530cd9fa in memory
flw f14, 0(x2) # load 0x7928eece530cd9fa from memory into f14
li x3, 0x573ea6843b31ea1d # load x3 with value 0x573ea6843b31ea1d
sw x3, 0(x2) # store 0x573ea6843b31ea1d in memory
flw f0, 0(x2) # load 0x573ea6843b31ea1d from memory into f0
li x3, 0x71d0e6cac420bf75 # load x3 with value 0x71d0e6cac420bf75
sw x3, 0(x2) # store 0x71d0e6cac420bf75 in memory
flw f18, 0(x2) # load 0x71d0e6cac420bf75 from memory into f18
fnmsub.s f0, f14, f0, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
li x1, 0xb3e9965b03b39ffd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x24ba184535c7927e # load x3 with value 0x24ba184535c7927e
sw x3, 0(x2) # store 0x24ba184535c7927e in memory
flw f2, 0(x2) # load 0x24ba184535c7927e from memory into f2
li x3, 0xb8b978bfa1a7d378 # load x3 with value 0xb8b978bfa1a7d378
sw x3, 0(x2) # store 0xb8b978bfa1a7d378 in memory
flw f1, 0(x2) # load 0xb8b978bfa1a7d378 from memory into f1
li x3, 0x9980fd225d44a21a # load x3 with value 0x9980fd225d44a21a
sw x3, 0(x2) # store 0x9980fd225d44a21a in memory
flw f23, 0(x2) # load 0x9980fd225d44a21a from memory into f23
fnmsub.s f1, f2, f1, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
li x2, 0xe760e09b20488c13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9c21cb574e271716 # load x3 with value 0x9c21cb574e271716
sw x3, 0(x2) # store 0x9c21cb574e271716 in memory
flw f19, 0(x2) # load 0x9c21cb574e271716 from memory into f19
li x3, 0xdd402cca44045fb0 # load x3 with value 0xdd402cca44045fb0
sw x3, 0(x2) # store 0xdd402cca44045fb0 in memory
flw f2, 0(x2) # load 0xdd402cca44045fb0 from memory into f2
li x3, 0x7578725db82b3199 # load x3 with value 0x7578725db82b3199
sw x3, 0(x2) # store 0x7578725db82b3199 in memory
flw f24, 0(x2) # load 0x7578725db82b3199 from memory into f24
fnmsub.s f2, f19, f2, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
li x3, 0x8c299e56b972cc4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x11e551440542f93b # load x3 with value 0x11e551440542f93b
sw x3, 0(x2) # store 0x11e551440542f93b in memory
flw f13, 0(x2) # load 0x11e551440542f93b from memory into f13
li x3, 0x8a666e6c7d175e1f # load x3 with value 0x8a666e6c7d175e1f
sw x3, 0(x2) # store 0x8a666e6c7d175e1f in memory
flw f3, 0(x2) # load 0x8a666e6c7d175e1f from memory into f3
li x3, 0x3347dd39b415995b # load x3 with value 0x3347dd39b415995b
sw x3, 0(x2) # store 0x3347dd39b415995b in memory
flw f9, 0(x2) # load 0x3347dd39b415995b from memory into f9
fnmsub.s f3, f13, f3, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
li x4, 0x2d2e8f71dd19e186 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa0a8941424f7566c # load x3 with value 0xa0a8941424f7566c
sw x3, 0(x2) # store 0xa0a8941424f7566c in memory
flw f4, 0(x2) # load 0xa0a8941424f7566c from memory into f4
li x3, 0x751b35e221ed515d # load x3 with value 0x751b35e221ed515d
sw x3, 0(x2) # store 0x751b35e221ed515d in memory
flw f4, 0(x2) # load 0x751b35e221ed515d from memory into f4
li x3, 0xa02df469991a5d7d # load x3 with value 0xa02df469991a5d7d
sw x3, 0(x2) # store 0xa02df469991a5d7d in memory
flw f13, 0(x2) # load 0xa02df469991a5d7d from memory into f13
fnmsub.s f4, f4, f4, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
li x5, 0x809ec0cfad29d4c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x88cae8f5ee1bf8e7 # load x3 with value 0x88cae8f5ee1bf8e7
sw x3, 0(x2) # store 0x88cae8f5ee1bf8e7 in memory
flw f19, 0(x2) # load 0x88cae8f5ee1bf8e7 from memory into f19
li x3, 0x6fac86baf5e94696 # load x3 with value 0x6fac86baf5e94696
sw x3, 0(x2) # store 0x6fac86baf5e94696 in memory
flw f5, 0(x2) # load 0x6fac86baf5e94696 from memory into f5
li x3, 0x416620126d4fdbce # load x3 with value 0x416620126d4fdbce
sw x3, 0(x2) # store 0x416620126d4fdbce in memory
flw f14, 0(x2) # load 0x416620126d4fdbce from memory into f14
fnmsub.s f5, f19, f5, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
li x6, 0xf8e3873b5c3f5446 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbd89edfbbcefa772 # load x3 with value 0xbd89edfbbcefa772
sw x3, 0(x2) # store 0xbd89edfbbcefa772 in memory
flw f21, 0(x2) # load 0xbd89edfbbcefa772 from memory into f21
li x3, 0xb027ea32f47a077c # load x3 with value 0xb027ea32f47a077c
sw x3, 0(x2) # store 0xb027ea32f47a077c in memory
flw f6, 0(x2) # load 0xb027ea32f47a077c from memory into f6
li x3, 0xfc7cf47b609434a9 # load x3 with value 0xfc7cf47b609434a9
sw x3, 0(x2) # store 0xfc7cf47b609434a9 in memory
flw f8, 0(x2) # load 0xfc7cf47b609434a9 from memory into f8
fnmsub.s f6, f21, f6, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
li x7, 0x2871db306e168b3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x28a92ffa6b4a077 # load x3 with value 0x28a92ffa6b4a077
sw x3, 0(x2) # store 0x28a92ffa6b4a077 in memory
flw f26, 0(x2) # load 0x28a92ffa6b4a077 from memory into f26
li x3, 0x2b7cb2118be89980 # load x3 with value 0x2b7cb2118be89980
sw x3, 0(x2) # store 0x2b7cb2118be89980 in memory
flw f7, 0(x2) # load 0x2b7cb2118be89980 from memory into f7
li x3, 0x5ce440a544247857 # load x3 with value 0x5ce440a544247857
sw x3, 0(x2) # store 0x5ce440a544247857 in memory
flw f23, 0(x2) # load 0x5ce440a544247857 from memory into f23
fnmsub.s f7, f26, f7, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
li x8, 0x16d9e6b034111831 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5ebea3365e26482 # load x3 with value 0x5ebea3365e26482
sw x3, 0(x2) # store 0x5ebea3365e26482 in memory
flw f21, 0(x2) # load 0x5ebea3365e26482 from memory into f21
li x3, 0x591c71fe825abc7e # load x3 with value 0x591c71fe825abc7e
sw x3, 0(x2) # store 0x591c71fe825abc7e in memory
flw f8, 0(x2) # load 0x591c71fe825abc7e from memory into f8
li x3, 0x41bebdeed04fb28f # load x3 with value 0x41bebdeed04fb28f
sw x3, 0(x2) # store 0x41bebdeed04fb28f in memory
flw f3, 0(x2) # load 0x41bebdeed04fb28f from memory into f3
fnmsub.s f8, f21, f8, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
li x9, 0xa7e8edfa313a49a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2f0749b0842957d7 # load x3 with value 0x2f0749b0842957d7
sw x3, 0(x2) # store 0x2f0749b0842957d7 in memory
flw f15, 0(x2) # load 0x2f0749b0842957d7 from memory into f15
li x3, 0x6d7411490cb45ba1 # load x3 with value 0x6d7411490cb45ba1
sw x3, 0(x2) # store 0x6d7411490cb45ba1 in memory
flw f9, 0(x2) # load 0x6d7411490cb45ba1 from memory into f9
li x3, 0x7cf33121fa014734 # load x3 with value 0x7cf33121fa014734
sw x3, 0(x2) # store 0x7cf33121fa014734 in memory
flw f4, 0(x2) # load 0x7cf33121fa014734 from memory into f4
fnmsub.s f9, f15, f9, f4 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
li x10, 0xf57c467a89b442ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x10cb0a6f7186283 # load x3 with value 0x10cb0a6f7186283
sw x3, 0(x2) # store 0x10cb0a6f7186283 in memory
flw f21, 0(x2) # load 0x10cb0a6f7186283 from memory into f21
li x3, 0x7e37a4e1974acd87 # load x3 with value 0x7e37a4e1974acd87
sw x3, 0(x2) # store 0x7e37a4e1974acd87 in memory
flw f10, 0(x2) # load 0x7e37a4e1974acd87 from memory into f10
li x3, 0x4cff02501d3fa557 # load x3 with value 0x4cff02501d3fa557
sw x3, 0(x2) # store 0x4cff02501d3fa557 in memory
flw f28, 0(x2) # load 0x4cff02501d3fa557 from memory into f28
fnmsub.s f10, f21, f10, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
li x11, 0x5050ced6ea2adc10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe455b7f325ff4b09 # load x3 with value 0xe455b7f325ff4b09
sw x3, 0(x2) # store 0xe455b7f325ff4b09 in memory
flw f26, 0(x2) # load 0xe455b7f325ff4b09 from memory into f26
li x3, 0x6f7f67f3b7f8e283 # load x3 with value 0x6f7f67f3b7f8e283
sw x3, 0(x2) # store 0x6f7f67f3b7f8e283 in memory
flw f11, 0(x2) # load 0x6f7f67f3b7f8e283 from memory into f11
li x3, 0x1219a6903642d199 # load x3 with value 0x1219a6903642d199
sw x3, 0(x2) # store 0x1219a6903642d199 in memory
flw f14, 0(x2) # load 0x1219a6903642d199 from memory into f14
fnmsub.s f11, f26, f11, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
li x12, 0xc2b4b66dcf58695b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x323021cf9d9d3acc # load x3 with value 0x323021cf9d9d3acc
sw x3, 0(x2) # store 0x323021cf9d9d3acc in memory
flw f30, 0(x2) # load 0x323021cf9d9d3acc from memory into f30
li x3, 0x78e1d947da0068d6 # load x3 with value 0x78e1d947da0068d6
sw x3, 0(x2) # store 0x78e1d947da0068d6 in memory
flw f12, 0(x2) # load 0x78e1d947da0068d6 from memory into f12
li x3, 0x5ccb16785f47f8f # load x3 with value 0x5ccb16785f47f8f
sw x3, 0(x2) # store 0x5ccb16785f47f8f in memory
flw f21, 0(x2) # load 0x5ccb16785f47f8f from memory into f21
fnmsub.s f12, f30, f12, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
li x13, 0x6a3f732253074427 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3cc48858efd55558 # load x3 with value 0x3cc48858efd55558
sw x3, 0(x2) # store 0x3cc48858efd55558 in memory
flw f1, 0(x2) # load 0x3cc48858efd55558 from memory into f1
li x3, 0xf42b73894d252f27 # load x3 with value 0xf42b73894d252f27
sw x3, 0(x2) # store 0xf42b73894d252f27 in memory
flw f13, 0(x2) # load 0xf42b73894d252f27 from memory into f13
li x3, 0xd1f339ae7db3ab9b # load x3 with value 0xd1f339ae7db3ab9b
sw x3, 0(x2) # store 0xd1f339ae7db3ab9b in memory
flw f30, 0(x2) # load 0xd1f339ae7db3ab9b from memory into f30
fnmsub.s f13, f1, f13, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
li x14, 0x154a816990b776fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4c367d82d5d7ed8e # load x3 with value 0x4c367d82d5d7ed8e
sw x3, 0(x2) # store 0x4c367d82d5d7ed8e in memory
flw f22, 0(x2) # load 0x4c367d82d5d7ed8e from memory into f22
li x3, 0x9ec851bc7d061cfc # load x3 with value 0x9ec851bc7d061cfc
sw x3, 0(x2) # store 0x9ec851bc7d061cfc in memory
flw f14, 0(x2) # load 0x9ec851bc7d061cfc from memory into f14
li x3, 0x72b4ad1844186940 # load x3 with value 0x72b4ad1844186940
sw x3, 0(x2) # store 0x72b4ad1844186940 in memory
flw f24, 0(x2) # load 0x72b4ad1844186940 from memory into f24
fnmsub.s f14, f22, f14, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
li x15, 0xfab42ae2511966e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfa51bb54f0aaf94e # load x3 with value 0xfa51bb54f0aaf94e
sw x3, 0(x2) # store 0xfa51bb54f0aaf94e in memory
flw f20, 0(x2) # load 0xfa51bb54f0aaf94e from memory into f20
li x3, 0x9ec001636b9330bb # load x3 with value 0x9ec001636b9330bb
sw x3, 0(x2) # store 0x9ec001636b9330bb in memory
flw f15, 0(x2) # load 0x9ec001636b9330bb from memory into f15
li x3, 0x6ac2c943a0c8b6c9 # load x3 with value 0x6ac2c943a0c8b6c9
sw x3, 0(x2) # store 0x6ac2c943a0c8b6c9 in memory
flw f5, 0(x2) # load 0x6ac2c943a0c8b6c9 from memory into f5
fnmsub.s f15, f20, f15, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
li x16, 0x5e9e7782630d7d97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf10d72851f5f441 # load x3 with value 0xf10d72851f5f441
sw x3, 0(x2) # store 0xf10d72851f5f441 in memory
flw f17, 0(x2) # load 0xf10d72851f5f441 from memory into f17
li x3, 0xc58d419748f1ede1 # load x3 with value 0xc58d419748f1ede1
sw x3, 0(x2) # store 0xc58d419748f1ede1 in memory
flw f16, 0(x2) # load 0xc58d419748f1ede1 from memory into f16
li x3, 0x8ed808146323b70e # load x3 with value 0x8ed808146323b70e
sw x3, 0(x2) # store 0x8ed808146323b70e in memory
flw f11, 0(x2) # load 0x8ed808146323b70e from memory into f11
fnmsub.s f16, f17, f16, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
li x17, 0xe6774edeafe24ff7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd05d3c26d546afe3 # load x3 with value 0xd05d3c26d546afe3
sw x3, 0(x2) # store 0xd05d3c26d546afe3 in memory
flw f16, 0(x2) # load 0xd05d3c26d546afe3 from memory into f16
li x3, 0x191554bf9ed149b1 # load x3 with value 0x191554bf9ed149b1
sw x3, 0(x2) # store 0x191554bf9ed149b1 in memory
flw f17, 0(x2) # load 0x191554bf9ed149b1 from memory into f17
li x3, 0x34c92f86c51ef40f # load x3 with value 0x34c92f86c51ef40f
sw x3, 0(x2) # store 0x34c92f86c51ef40f in memory
flw f6, 0(x2) # load 0x34c92f86c51ef40f from memory into f6
fnmsub.s f17, f16, f17, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
li x18, 0x5d79fdb9a33d867c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x52a1b93519cd4797 # load x3 with value 0x52a1b93519cd4797
sw x3, 0(x2) # store 0x52a1b93519cd4797 in memory
flw f5, 0(x2) # load 0x52a1b93519cd4797 from memory into f5
li x3, 0x9d103cba31b272ed # load x3 with value 0x9d103cba31b272ed
sw x3, 0(x2) # store 0x9d103cba31b272ed in memory
flw f18, 0(x2) # load 0x9d103cba31b272ed from memory into f18
li x3, 0xfb9a83db38dfb4c1 # load x3 with value 0xfb9a83db38dfb4c1
sw x3, 0(x2) # store 0xfb9a83db38dfb4c1 in memory
flw f23, 0(x2) # load 0xfb9a83db38dfb4c1 from memory into f23
fnmsub.s f18, f5, f18, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
li x19, 0xb4abb292f8d3c1ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb760ce1f78f7981b # load x3 with value 0xb760ce1f78f7981b
sw x3, 0(x2) # store 0xb760ce1f78f7981b in memory
flw f2, 0(x2) # load 0xb760ce1f78f7981b from memory into f2
li x3, 0xa1e2c206d6080e25 # load x3 with value 0xa1e2c206d6080e25
sw x3, 0(x2) # store 0xa1e2c206d6080e25 in memory
flw f19, 0(x2) # load 0xa1e2c206d6080e25 from memory into f19
li x3, 0xe74820f26611a7cc # load x3 with value 0xe74820f26611a7cc
sw x3, 0(x2) # store 0xe74820f26611a7cc in memory
flw f3, 0(x2) # load 0xe74820f26611a7cc from memory into f3
fnmsub.s f19, f2, f19, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
li x20, 0xad6b9e52589c11e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x241c45066c9b0fc0 # load x3 with value 0x241c45066c9b0fc0
sw x3, 0(x2) # store 0x241c45066c9b0fc0 in memory
flw f10, 0(x2) # load 0x241c45066c9b0fc0 from memory into f10
li x3, 0x934cbc0605117526 # load x3 with value 0x934cbc0605117526
sw x3, 0(x2) # store 0x934cbc0605117526 in memory
flw f20, 0(x2) # load 0x934cbc0605117526 from memory into f20
li x3, 0xfa3438b7289133dc # load x3 with value 0xfa3438b7289133dc
sw x3, 0(x2) # store 0xfa3438b7289133dc in memory
flw f31, 0(x2) # load 0xfa3438b7289133dc from memory into f31
fnmsub.s f20, f10, f20, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
li x21, 0xf7a1740d95c9278c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb37e3ae7a32d9165 # load x3 with value 0xb37e3ae7a32d9165
sw x3, 0(x2) # store 0xb37e3ae7a32d9165 in memory
flw f31, 0(x2) # load 0xb37e3ae7a32d9165 from memory into f31
li x3, 0x881d61b4a3672913 # load x3 with value 0x881d61b4a3672913
sw x3, 0(x2) # store 0x881d61b4a3672913 in memory
flw f21, 0(x2) # load 0x881d61b4a3672913 from memory into f21
li x3, 0x491d0d74e8397278 # load x3 with value 0x491d0d74e8397278
sw x3, 0(x2) # store 0x491d0d74e8397278 in memory
flw f9, 0(x2) # load 0x491d0d74e8397278 from memory into f9
fnmsub.s f21, f31, f21, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
li x22, 0xe0e2c3c779f7e156 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x25692a40a3ac8d27 # load x3 with value 0x25692a40a3ac8d27
sw x3, 0(x2) # store 0x25692a40a3ac8d27 in memory
flw f25, 0(x2) # load 0x25692a40a3ac8d27 from memory into f25
li x3, 0x100b0bcff8af6e99 # load x3 with value 0x100b0bcff8af6e99
sw x3, 0(x2) # store 0x100b0bcff8af6e99 in memory
flw f22, 0(x2) # load 0x100b0bcff8af6e99 from memory into f22
li x3, 0x94a279210b437e07 # load x3 with value 0x94a279210b437e07
sw x3, 0(x2) # store 0x94a279210b437e07 in memory
flw f11, 0(x2) # load 0x94a279210b437e07 from memory into f11
fnmsub.s f22, f25, f22, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
li x23, 0x13a68cb6265d8170 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5033d6dae119875e # load x3 with value 0x5033d6dae119875e
sw x3, 0(x2) # store 0x5033d6dae119875e in memory
flw f6, 0(x2) # load 0x5033d6dae119875e from memory into f6
li x3, 0xd0f4919141ad4dca # load x3 with value 0xd0f4919141ad4dca
sw x3, 0(x2) # store 0xd0f4919141ad4dca in memory
flw f23, 0(x2) # load 0xd0f4919141ad4dca from memory into f23
li x3, 0x75df70d565c1c550 # load x3 with value 0x75df70d565c1c550
sw x3, 0(x2) # store 0x75df70d565c1c550 in memory
flw f7, 0(x2) # load 0x75df70d565c1c550 from memory into f7
fnmsub.s f23, f6, f23, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
li x24, 0xdd53fbfe8d48bd6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2783e58f91147a7f # load x3 with value 0x2783e58f91147a7f
sw x3, 0(x2) # store 0x2783e58f91147a7f in memory
flw f10, 0(x2) # load 0x2783e58f91147a7f from memory into f10
li x3, 0x15a688d9116f4509 # load x3 with value 0x15a688d9116f4509
sw x3, 0(x2) # store 0x15a688d9116f4509 in memory
flw f24, 0(x2) # load 0x15a688d9116f4509 from memory into f24
li x3, 0xf5c6df1b44f5792f # load x3 with value 0xf5c6df1b44f5792f
sw x3, 0(x2) # store 0xf5c6df1b44f5792f in memory
flw f5, 0(x2) # load 0xf5c6df1b44f5792f from memory into f5
fnmsub.s f24, f10, f24, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
li x25, 0xf60988d2198ebbc7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb921c5e81f089846 # load x3 with value 0xb921c5e81f089846
sw x3, 0(x2) # store 0xb921c5e81f089846 in memory
flw f12, 0(x2) # load 0xb921c5e81f089846 from memory into f12
li x3, 0x6e0e877f84706d88 # load x3 with value 0x6e0e877f84706d88
sw x3, 0(x2) # store 0x6e0e877f84706d88 in memory
flw f25, 0(x2) # load 0x6e0e877f84706d88 from memory into f25
li x3, 0xd5162990ff22e7c6 # load x3 with value 0xd5162990ff22e7c6
sw x3, 0(x2) # store 0xd5162990ff22e7c6 in memory
flw f6, 0(x2) # load 0xd5162990ff22e7c6 from memory into f6
fnmsub.s f25, f12, f25, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
li x26, 0x6241a135cae98817 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x626e52d984280ac3 # load x3 with value 0x626e52d984280ac3
sw x3, 0(x2) # store 0x626e52d984280ac3 in memory
flw f8, 0(x2) # load 0x626e52d984280ac3 from memory into f8
li x3, 0x35419e8f2b070f7 # load x3 with value 0x35419e8f2b070f7
sw x3, 0(x2) # store 0x35419e8f2b070f7 in memory
flw f26, 0(x2) # load 0x35419e8f2b070f7 from memory into f26
li x3, 0xc8b8e7847df730ea # load x3 with value 0xc8b8e7847df730ea
sw x3, 0(x2) # store 0xc8b8e7847df730ea in memory
flw f5, 0(x2) # load 0xc8b8e7847df730ea from memory into f5
fnmsub.s f26, f8, f26, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
li x27, 0xe1f03a9adbfe9dea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3380a6a72a3051f2 # load x3 with value 0x3380a6a72a3051f2
sw x3, 0(x2) # store 0x3380a6a72a3051f2 in memory
flw f2, 0(x2) # load 0x3380a6a72a3051f2 from memory into f2
li x3, 0x29fa9c93aa42f809 # load x3 with value 0x29fa9c93aa42f809
sw x3, 0(x2) # store 0x29fa9c93aa42f809 in memory
flw f27, 0(x2) # load 0x29fa9c93aa42f809 from memory into f27
li x3, 0x15c5c39e6b54c3c0 # load x3 with value 0x15c5c39e6b54c3c0
sw x3, 0(x2) # store 0x15c5c39e6b54c3c0 in memory
flw f12, 0(x2) # load 0x15c5c39e6b54c3c0 from memory into f12
fnmsub.s f27, f2, f27, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
li x28, 0x363b02e817d5a7ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb82dfd065f53bd44 # load x3 with value 0xb82dfd065f53bd44
sw x3, 0(x2) # store 0xb82dfd065f53bd44 in memory
flw f5, 0(x2) # load 0xb82dfd065f53bd44 from memory into f5
li x3, 0xa2ee5af0d212db8c # load x3 with value 0xa2ee5af0d212db8c
sw x3, 0(x2) # store 0xa2ee5af0d212db8c in memory
flw f28, 0(x2) # load 0xa2ee5af0d212db8c from memory into f28
li x3, 0x6d0cd021ed38cd5e # load x3 with value 0x6d0cd021ed38cd5e
sw x3, 0(x2) # store 0x6d0cd021ed38cd5e in memory
flw f24, 0(x2) # load 0x6d0cd021ed38cd5e from memory into f24
fnmsub.s f28, f5, f28, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
li x29, 0xd7ffe0a60a7a53ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x750ca577ca96510b # load x3 with value 0x750ca577ca96510b
sw x3, 0(x2) # store 0x750ca577ca96510b in memory
flw f25, 0(x2) # load 0x750ca577ca96510b from memory into f25
li x3, 0x3115e23249fb5c54 # load x3 with value 0x3115e23249fb5c54
sw x3, 0(x2) # store 0x3115e23249fb5c54 in memory
flw f29, 0(x2) # load 0x3115e23249fb5c54 from memory into f29
li x3, 0x5ecaae9776d6d0bf # load x3 with value 0x5ecaae9776d6d0bf
sw x3, 0(x2) # store 0x5ecaae9776d6d0bf in memory
flw f16, 0(x2) # load 0x5ecaae9776d6d0bf from memory into f16
fnmsub.s f29, f25, f29, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
li x30, 0x9a7fb6a6c99a6ced # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6dd6f7cabd393580 # load x3 with value 0x6dd6f7cabd393580
sw x3, 0(x2) # store 0x6dd6f7cabd393580 in memory
flw f17, 0(x2) # load 0x6dd6f7cabd393580 from memory into f17
li x3, 0x1e08aa0b8f2dff7a # load x3 with value 0x1e08aa0b8f2dff7a
sw x3, 0(x2) # store 0x1e08aa0b8f2dff7a in memory
flw f30, 0(x2) # load 0x1e08aa0b8f2dff7a from memory into f30
li x3, 0x8a93fee68648b1b3 # load x3 with value 0x8a93fee68648b1b3
sw x3, 0(x2) # store 0x8a93fee68648b1b3 in memory
flw f18, 0(x2) # load 0x8a93fee68648b1b3 from memory into f18
fnmsub.s f30, f17, f30, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
li x31, 0x4e605993a141a6e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x41f07af76262c5d1 # load x3 with value 0x41f07af76262c5d1
sw x3, 0(x2) # store 0x41f07af76262c5d1 in memory
flw f29, 0(x2) # load 0x41f07af76262c5d1 from memory into f29
li x3, 0x4fb3198523d71f8a # load x3 with value 0x4fb3198523d71f8a
sw x3, 0(x2) # store 0x4fb3198523d71f8a in memory
flw f31, 0(x2) # load 0x4fb3198523d71f8a from memory into f31
li x3, 0xdae3a06520f3bdba # load x3 with value 0xdae3a06520f3bdba
sw x3, 0(x2) # store 0xdae3a06520f3bdba in memory
flw f14, 0(x2) # load 0xdae3a06520f3bdba from memory into f14
fnmsub.s f31, f29, f31, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
li x9, 0x5d735875217ce034 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0x6625e2547d60bb2e # load x3 with value 0x6625e2547d60bb2e
sw x3, 0(x2) # store 0x6625e2547d60bb2e in memory
flw f12, 0(x2) # load 0x6625e2547d60bb2e from memory into f12
li x3, 0xffcc281746b35cfe # load x3 with value 0xffcc281746b35cfe
sw x3, 0(x2) # store 0xffcc281746b35cfe in memory
flw f15, 0(x2) # load 0xffcc281746b35cfe from memory into f15
fnmsub.s f9, f3, f12, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000000)
li x25, 0xa27ad8d625217372 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0x3b229a4948cb76e4 # load x3 with value 0x3b229a4948cb76e4
sw x3, 0(x2) # store 0x3b229a4948cb76e4 in memory
flw f4, 0(x2) # load 0x3b229a4948cb76e4 from memory into f4
li x3, 0x280cdb81519fece6 # load x3 with value 0x280cdb81519fece6
sw x3, 0(x2) # store 0x280cdb81519fece6 in memory
flw f5, 0(x2) # load 0x280cdb81519fece6 from memory into f5
fnmsub.s f25, f22, f4, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3f800000)
li x31, 0x14a3a1f9315a4f7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x5ac3b94011998ece # load x3 with value 0x5ac3b94011998ece
sw x3, 0(x2) # store 0x5ac3b94011998ece in memory
flw f22, 0(x2) # load 0x5ac3b94011998ece from memory into f22
li x3, 0x55ce5f6e86ae8fae # load x3 with value 0x55ce5f6e86ae8fae
sw x3, 0(x2) # store 0x55ce5f6e86ae8fae in memory
flw f23, 0(x2) # load 0x55ce5f6e86ae8fae from memory into f23
fnmsub.s f31, f25, f22, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbf800000)
li x22, 0xc2a37c0b855c67b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0x5d716f87640a969c # load x3 with value 0x5d716f87640a969c
sw x3, 0(x2) # store 0x5d716f87640a969c in memory
flw f3, 0(x2) # load 0x5d716f87640a969c from memory into f3
li x3, 0x4740550b746b7dc0 # load x3 with value 0x4740550b746b7dc0
sw x3, 0(x2) # store 0x4740550b746b7dc0 in memory
flw f13, 0(x2) # load 0x4740550b746b7dc0 from memory into f13
fnmsub.s f22, f12, f3, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3fc00000)
li x7, 0xe47344864c4c9807 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0x9aaecfb24490d7f8 # load x3 with value 0x9aaecfb24490d7f8
sw x3, 0(x2) # store 0x9aaecfb24490d7f8 in memory
flw f18, 0(x2) # load 0x9aaecfb24490d7f8 from memory into f18
li x3, 0x93b45cbac0d8c5d8 # load x3 with value 0x93b45cbac0d8c5d8
sw x3, 0(x2) # store 0x93b45cbac0d8c5d8 in memory
flw f17, 0(x2) # load 0x93b45cbac0d8c5d8 from memory into f17
fnmsub.s f7, f22, f18, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbfc00000)
li x22, 0x70a577af8a9860e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
li x3, 0x642d7724d6c9b2ba # load x3 with value 0x642d7724d6c9b2ba
sw x3, 0(x2) # store 0x642d7724d6c9b2ba in memory
flw f5, 0(x2) # load 0x642d7724d6c9b2ba from memory into f5
li x3, 0x6fcd991e4cd9fb6 # load x3 with value 0x6fcd991e4cd9fb6
sw x3, 0(x2) # store 0x6fcd991e4cd9fb6 in memory
flw f27, 0(x2) # load 0x6fcd991e4cd9fb6 from memory into f27
fnmsub.s f22, f24, f5, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x40000000)
li x7, 0x60e3768644afd02e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0x9baa7999eabe5403 # load x3 with value 0x9baa7999eabe5403
sw x3, 0(x2) # store 0x9baa7999eabe5403 in memory
flw f18, 0(x2) # load 0x9baa7999eabe5403 from memory into f18
li x3, 0x2868ea6bb802e631 # load x3 with value 0x2868ea6bb802e631
sw x3, 0(x2) # store 0x2868ea6bb802e631 in memory
flw f10, 0(x2) # load 0x2868ea6bb802e631 from memory into f10
fnmsub.s f7, f31, f18, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc0000000)
li x30, 0xd261e63fe80d7238 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
li x3, 0x2dabd117320cf788 # load x3 with value 0x2dabd117320cf788
sw x3, 0(x2) # store 0x2dabd117320cf788 in memory
flw f6, 0(x2) # load 0x2dabd117320cf788 from memory into f6
li x3, 0xb45afb95e0fe72d0 # load x3 with value 0xb45afb95e0fe72d0
sw x3, 0(x2) # store 0xb45afb95e0fe72d0 in memory
flw f4, 0(x2) # load 0xb45afb95e0fe72d0 from memory into f4
fnmsub.s f30, f2, f6, f4 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800000)
li x4, 0xbdcdff3cce51135d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0x7c1a7343cdafbd0 # load x3 with value 0x7c1a7343cdafbd0
sw x3, 0(x2) # store 0x7c1a7343cdafbd0 in memory
flw f6, 0(x2) # load 0x7c1a7343cdafbd0 from memory into f6
li x3, 0x76404a6a486ae223 # load x3 with value 0x76404a6a486ae223
sw x3, 0(x2) # store 0x76404a6a486ae223 in memory
flw f24, 0(x2) # load 0x76404a6a486ae223 from memory into f24
fnmsub.s f4, f21, f6, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80800000)
li x3, 0x47bbe81f540189bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0x59679da8e81542c # load x3 with value 0x59679da8e81542c
sw x3, 0(x2) # store 0x59679da8e81542c in memory
flw f31, 0(x2) # load 0x59679da8e81542c from memory into f31
li x3, 0x5aba0c3ba5154a25 # load x3 with value 0x5aba0c3ba5154a25
sw x3, 0(x2) # store 0x5aba0c3ba5154a25 in memory
flw f10, 0(x2) # load 0x5aba0c3ba5154a25 from memory into f10
fnmsub.s f3, f21, f31, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f7fffff)
li x11, 0x0fdf91790194b999 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0xb859b486f6f927a9 # load x3 with value 0xb859b486f6f927a9
sw x3, 0(x2) # store 0xb859b486f6f927a9 in memory
flw f29, 0(x2) # load 0xb859b486f6f927a9 from memory into f29
li x3, 0xea04d59e3e0a0555 # load x3 with value 0xea04d59e3e0a0555
sw x3, 0(x2) # store 0xea04d59e3e0a0555 in memory
flw f23, 0(x2) # load 0xea04d59e3e0a0555 from memory into f23
fnmsub.s f11, f9, f29, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff7fffff)
li x12, 0xe8c1ec01ad34d05d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
li x3, 0xab3e851bc29e508f # load x3 with value 0xab3e851bc29e508f
sw x3, 0(x2) # store 0xab3e851bc29e508f in memory
flw f10, 0(x2) # load 0xab3e851bc29e508f from memory into f10
li x3, 0x5863a05635579977 # load x3 with value 0x5863a05635579977
sw x3, 0(x2) # store 0x5863a05635579977 in memory
flw f5, 0(x2) # load 0x5863a05635579977 from memory into f5
fnmsub.s f12, f17, f10, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffff)
li x14, 0xc7ecfdf9145d902d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
li x3, 0x4b5aa8efdc9a7246 # load x3 with value 0x4b5aa8efdc9a7246
sw x3, 0(x2) # store 0x4b5aa8efdc9a7246 in memory
flw f6, 0(x2) # load 0x4b5aa8efdc9a7246 from memory into f6
li x3, 0x2bf42a1ba6995589 # load x3 with value 0x2bf42a1ba6995589
sw x3, 0(x2) # store 0x2bf42a1ba6995589 in memory
flw f11, 0(x2) # load 0x2bf42a1ba6995589 from memory into f11
fnmsub.s f14, f26, f6, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x807fffff)
li x27, 0x8763572f4a37f4fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0x46bc4b5a13bcaa17 # load x3 with value 0x46bc4b5a13bcaa17
sw x3, 0(x2) # store 0x46bc4b5a13bcaa17 in memory
flw f2, 0(x2) # load 0x46bc4b5a13bcaa17 from memory into f2
li x3, 0xf64d017f7c7f74c1 # load x3 with value 0xf64d017f7c7f74c1
sw x3, 0(x2) # store 0xf64d017f7c7f74c1 in memory
flw f1, 0(x2) # load 0xf64d017f7c7f74c1 from memory into f1
fnmsub.s f27, f24, f2, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400000)
li x13, 0x2d00ce8af4fdb356 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
li x3, 0xee664fd6d185eaab # load x3 with value 0xee664fd6d185eaab
sw x3, 0(x2) # store 0xee664fd6d185eaab in memory
flw f16, 0(x2) # load 0xee664fd6d185eaab from memory into f16
li x3, 0xd549e2790d5f8e25 # load x3 with value 0xd549e2790d5f8e25
sw x3, 0(x2) # store 0xd549e2790d5f8e25 in memory
flw f3, 0(x2) # load 0xd549e2790d5f8e25 from memory into f3
fnmsub.s f13, f15, f16, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80400000)
li x1, 0x9b27f7258e1bc41b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0xac94109d92accc30 # load x3 with value 0xac94109d92accc30
sw x3, 0(x2) # store 0xac94109d92accc30 in memory
flw f30, 0(x2) # load 0xac94109d92accc30 from memory into f30
li x3, 0x30c92ea4cd31bf20 # load x3 with value 0x30c92ea4cd31bf20
sw x3, 0(x2) # store 0x30c92ea4cd31bf20 in memory
flw f21, 0(x2) # load 0x30c92ea4cd31bf20 from memory into f21
fnmsub.s f1, f14, f30, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
li x3, 0x10ee6821527c272d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0xb237fe7d56c2b591 # load x3 with value 0xb237fe7d56c2b591
sw x3, 0(x2) # store 0xb237fe7d56c2b591 in memory
flw f24, 0(x2) # load 0xb237fe7d56c2b591 from memory into f24
li x3, 0x5164409de7cdcaad # load x3 with value 0x5164409de7cdcaad
sw x3, 0(x2) # store 0x5164409de7cdcaad in memory
flw f22, 0(x2) # load 0x5164409de7cdcaad from memory into f22
fnmsub.s f3, f20, f24, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000001)
li x25, 0xa4f22cc5b833e0bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0xd2855711724715b3 # load x3 with value 0xd2855711724715b3
sw x3, 0(x2) # store 0xd2855711724715b3 in memory
flw f19, 0(x2) # load 0xd2855711724715b3 from memory into f19
li x3, 0xedf423ccd5b8b584 # load x3 with value 0xedf423ccd5b8b584
sw x3, 0(x2) # store 0xedf423ccd5b8b584 in memory
flw f11, 0(x2) # load 0xedf423ccd5b8b584 from memory into f11
fnmsub.s f25, f1, f19, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800000)
li x3, 0xa618b032b0d517cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0xc8946a3d9404d462 # load x3 with value 0xc8946a3d9404d462
sw x3, 0(x2) # store 0xc8946a3d9404d462 in memory
flw f2, 0(x2) # load 0xc8946a3d9404d462 from memory into f2
li x3, 0x37906155b347dcd6 # load x3 with value 0x37906155b347dcd6
sw x3, 0(x2) # store 0x37906155b347dcd6 in memory
flw f11, 0(x2) # load 0x37906155b347dcd6 from memory into f11
fnmsub.s f3, f29, f2, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff800000)
li x18, 0x23fcd0e324112a47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0xb2a3cf3a137ec926 # load x3 with value 0xb2a3cf3a137ec926
sw x3, 0(x2) # store 0xb2a3cf3a137ec926 in memory
flw f14, 0(x2) # load 0xb2a3cf3a137ec926 from memory into f14
li x3, 0xed3141c9a652f547 # load x3 with value 0xed3141c9a652f547
sw x3, 0(x2) # store 0xed3141c9a652f547 in memory
flw f7, 0(x2) # load 0xed3141c9a652f547 from memory into f7
fnmsub.s f18, f10, f14, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fc00000)
li x2, 0xc6a479479335e854 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
li x3, 0x333119727c683eba # load x3 with value 0x333119727c683eba
sw x3, 0(x2) # store 0x333119727c683eba in memory
flw f22, 0(x2) # load 0x333119727c683eba from memory into f22
li x3, 0x2cf860c7118a4f38 # load x3 with value 0x2cf860c7118a4f38
sw x3, 0(x2) # store 0x2cf860c7118a4f38 in memory
flw f10, 0(x2) # load 0x2cf860c7118a4f38 from memory into f10
fnmsub.s f2, f26, f22, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffff)
li x7, 0xa02c4352e29e3bcf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0xb536eed9c6ff51fd # load x3 with value 0xb536eed9c6ff51fd
sw x3, 0(x2) # store 0xb536eed9c6ff51fd in memory
flw f26, 0(x2) # load 0xb536eed9c6ff51fd from memory into f26
li x3, 0x1842bd3eb08bf92d # load x3 with value 0x1842bd3eb08bf92d
sw x3, 0(x2) # store 0x1842bd3eb08bf92d in memory
flw f29, 0(x2) # load 0x1842bd3eb08bf92d from memory into f29
fnmsub.s f7, f20, f26, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800001)
li x6, 0xbe2f51314302fd39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0x2b5367d56ca52557 # load x3 with value 0x2b5367d56ca52557
sw x3, 0(x2) # store 0x2b5367d56ca52557 in memory
flw f22, 0(x2) # load 0x2b5367d56ca52557 from memory into f22
li x3, 0x17f495f05c798480 # load x3 with value 0x17f495f05c798480
sw x3, 0(x2) # store 0x17f495f05c798480 in memory
flw f12, 0(x2) # load 0x17f495f05c798480 from memory into f12
fnmsub.s f6, f19, f22, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fbfffff)
li x25, 0x8dcb34b75b67485e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
li x3, 0x29b38c327d726785 # load x3 with value 0x29b38c327d726785
sw x3, 0(x2) # store 0x29b38c327d726785 in memory
flw f21, 0(x2) # load 0x29b38c327d726785 from memory into f21
li x3, 0x35a8029d2710afe4 # load x3 with value 0x35a8029d2710afe4
sw x3, 0(x2) # store 0x35a8029d2710afe4 in memory
flw f24, 0(x2) # load 0x35a8029d2710afe4 from memory into f24
fnmsub.s f25, f28, f21, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ef8654f)
li x10, 0xe3e8d6ef22296bec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0xda29672683f1b43b # load x3 with value 0xda29672683f1b43b
sw x3, 0(x2) # store 0xda29672683f1b43b in memory
flw f8, 0(x2) # load 0xda29672683f1b43b from memory into f8
li x3, 0x188595a20b0f5b52 # load x3 with value 0x188595a20b0f5b52
sw x3, 0(x2) # store 0x188595a20b0f5b52 in memory
flw f11, 0(x2) # load 0x188595a20b0f5b52 from memory into f11
fnmsub.s f10, f22, f8, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x813d9ab0)
li x28, 0x0e41da167af19c7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0x7c7a13a7c1965a67 # load x3 with value 0x7c7a13a7c1965a67
sw x3, 0(x2) # store 0x7c7a13a7c1965a67 in memory
flw f13, 0(x2) # load 0x7c7a13a7c1965a67 from memory into f13
li x3, 0xd25d5a77b8e1f1c7 # load x3 with value 0xd25d5a77b8e1f1c7
sw x3, 0(x2) # store 0xd25d5a77b8e1f1c7 in memory
flw f1, 0(x2) # load 0xd25d5a77b8e1f1c7 from memory into f1
fnmsub.s f28, f4, f13, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
li x6, 0x011638af45bca94e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x434d081ba3ba87ff # load x3 with value 0x434d081ba3ba87ff
sw x3, 0(x2) # store 0x434d081ba3ba87ff in memory
flw f23, 0(x2) # load 0x434d081ba3ba87ff from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0xd88a52d827fbf451 # load x3 with value 0xd88a52d827fbf451
sw x3, 0(x2) # store 0xd88a52d827fbf451 in memory
flw f26, 0(x2) # load 0xd88a52d827fbf451 from memory into f26
fnmsub.s f6, f23, f31, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000000)
li x21, 0x49d6d8177ed35293 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd4f247223104b173 # load x3 with value 0xd4f247223104b173
sw x3, 0(x2) # store 0xd4f247223104b173 in memory
flw f8, 0(x2) # load 0xd4f247223104b173 from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
li x3, 0x1db3802ad40a0070 # load x3 with value 0x1db3802ad40a0070
sw x3, 0(x2) # store 0x1db3802ad40a0070 in memory
flw f1, 0(x2) # load 0x1db3802ad40a0070 from memory into f1
fnmsub.s f21, f8, f30, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3f800000)
li x22, 0x651b58f1e2c0bd56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3d6e7d41e194eb01 # load x3 with value 0x3d6e7d41e194eb01
sw x3, 0(x2) # store 0x3d6e7d41e194eb01 in memory
flw f11, 0(x2) # load 0x3d6e7d41e194eb01 from memory into f11
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
li x3, 0x8a2e3c2b5455eb30 # load x3 with value 0x8a2e3c2b5455eb30
sw x3, 0(x2) # store 0x8a2e3c2b5455eb30 in memory
flw f30, 0(x2) # load 0x8a2e3c2b5455eb30 from memory into f30
fnmsub.s f22, f11, f3, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbf800000)
li x19, 0x0a036116f4a252a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb002ae63147851c8 # load x3 with value 0xb002ae63147851c8
sw x3, 0(x2) # store 0xb002ae63147851c8 in memory
flw f15, 0(x2) # load 0xb002ae63147851c8 from memory into f15
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
li x3, 0xf31391420bb1dd0e # load x3 with value 0xf31391420bb1dd0e
sw x3, 0(x2) # store 0xf31391420bb1dd0e in memory
flw f20, 0(x2) # load 0xf31391420bb1dd0e from memory into f20
fnmsub.s f19, f15, f3, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3fc00000)
li x31, 0xdcfca44782dcd7a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x99652ed476d417a7 # load x3 with value 0x99652ed476d417a7
sw x3, 0(x2) # store 0x99652ed476d417a7 in memory
flw f16, 0(x2) # load 0x99652ed476d417a7 from memory into f16
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
li x3, 0x390ab9c0c4069bb1 # load x3 with value 0x390ab9c0c4069bb1
sw x3, 0(x2) # store 0x390ab9c0c4069bb1 in memory
flw f21, 0(x2) # load 0x390ab9c0c4069bb1 from memory into f21
fnmsub.s f31, f16, f25, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbfc00000)
li x1, 0x463b24f218ee3faf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x32ea9610fdb829b4 # load x3 with value 0x32ea9610fdb829b4
sw x3, 0(x2) # store 0x32ea9610fdb829b4 in memory
flw f11, 0(x2) # load 0x32ea9610fdb829b4 from memory into f11
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0xa0db24d869ac8726 # load x3 with value 0xa0db24d869ac8726
sw x3, 0(x2) # store 0xa0db24d869ac8726 in memory
flw f10, 0(x2) # load 0xa0db24d869ac8726 from memory into f10
fnmsub.s f1, f11, f14, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x40000000)
li x5, 0xc7e1a5bf27600211 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x22e59e9a58d31697 # load x3 with value 0x22e59e9a58d31697
sw x3, 0(x2) # store 0x22e59e9a58d31697 in memory
flw f2, 0(x2) # load 0x22e59e9a58d31697 from memory into f2
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0xf67c400f930b1c59 # load x3 with value 0xf67c400f930b1c59
sw x3, 0(x2) # store 0xf67c400f930b1c59 in memory
flw f21, 0(x2) # load 0xf67c400f930b1c59 from memory into f21
fnmsub.s f5, f2, f4, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc0000000)
li x19, 0xf19804aba67b0889 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1560ed7b94e8c197 # load x3 with value 0x1560ed7b94e8c197
sw x3, 0(x2) # store 0x1560ed7b94e8c197 in memory
flw f17, 0(x2) # load 0x1560ed7b94e8c197 from memory into f17
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
li x3, 0x1062155eaeb3536b # load x3 with value 0x1062155eaeb3536b
sw x3, 0(x2) # store 0x1062155eaeb3536b in memory
flw f21, 0(x2) # load 0x1062155eaeb3536b from memory into f21
fnmsub.s f19, f17, f30, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800000)
li x12, 0x394e27274b2713e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb743774d2dad5427 # load x3 with value 0xb743774d2dad5427
sw x3, 0(x2) # store 0xb743774d2dad5427 in memory
flw f27, 0(x2) # load 0xb743774d2dad5427 from memory into f27
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
li x3, 0xf5999bf69d550e40 # load x3 with value 0xf5999bf69d550e40
sw x3, 0(x2) # store 0xf5999bf69d550e40 in memory
flw f31, 0(x2) # load 0xf5999bf69d550e40 from memory into f31
fnmsub.s f12, f27, f2, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80800000)
li x11, 0xc49cc73ff2c3a822 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xabd7aa6124bb67e0 # load x3 with value 0xabd7aa6124bb67e0
sw x3, 0(x2) # store 0xabd7aa6124bb67e0 in memory
flw f2, 0(x2) # load 0xabd7aa6124bb67e0 from memory into f2
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0x43dc1b472146d25e # load x3 with value 0x43dc1b472146d25e
sw x3, 0(x2) # store 0x43dc1b472146d25e in memory
flw f8, 0(x2) # load 0x43dc1b472146d25e from memory into f8
fnmsub.s f11, f2, f23, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f7fffff)
li x5, 0x9a75b4c4d2aaefbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb5196a94c3cf9d6d # load x3 with value 0xb5196a94c3cf9d6d
sw x3, 0(x2) # store 0xb5196a94c3cf9d6d in memory
flw f25, 0(x2) # load 0xb5196a94c3cf9d6d from memory into f25
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0x7b5f1dd476d61610 # load x3 with value 0x7b5f1dd476d61610
sw x3, 0(x2) # store 0x7b5f1dd476d61610 in memory
flw f22, 0(x2) # load 0x7b5f1dd476d61610 from memory into f22
fnmsub.s f5, f25, f13, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff7fffff)
li x31, 0x3b35e4b01c25326a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2ea792c7280dac81 # load x3 with value 0x2ea792c7280dac81
sw x3, 0(x2) # store 0x2ea792c7280dac81 in memory
flw f25, 0(x2) # load 0x2ea792c7280dac81 from memory into f25
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0x98403527bd1a9058 # load x3 with value 0x98403527bd1a9058
sw x3, 0(x2) # store 0x98403527bd1a9058 in memory
flw f18, 0(x2) # load 0x98403527bd1a9058 from memory into f18
fnmsub.s f31, f25, f19, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffff)
li x23, 0x60c244950cb4ce62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x671ce611e7e86120 # load x3 with value 0x671ce611e7e86120
sw x3, 0(x2) # store 0x671ce611e7e86120 in memory
flw f26, 0(x2) # load 0x671ce611e7e86120 from memory into f26
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0x6e80907dc2eceab4 # load x3 with value 0x6e80907dc2eceab4
sw x3, 0(x2) # store 0x6e80907dc2eceab4 in memory
flw f29, 0(x2) # load 0x6e80907dc2eceab4 from memory into f29
fnmsub.s f23, f26, f8, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x807fffff)
li x21, 0xed55a8f83f1b9fee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x34c190b42ec12056 # load x3 with value 0x34c190b42ec12056
sw x3, 0(x2) # store 0x34c190b42ec12056 in memory
flw f18, 0(x2) # load 0x34c190b42ec12056 from memory into f18
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
li x3, 0xed41b8a3be08e844 # load x3 with value 0xed41b8a3be08e844
sw x3, 0(x2) # store 0xed41b8a3be08e844 in memory
flw f14, 0(x2) # load 0xed41b8a3be08e844 from memory into f14
fnmsub.s f21, f18, f22, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400000)
li x29, 0xb39b551ea6ba2e66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb192a9bee5295d7e # load x3 with value 0xb192a9bee5295d7e
sw x3, 0(x2) # store 0xb192a9bee5295d7e in memory
flw f8, 0(x2) # load 0xb192a9bee5295d7e from memory into f8
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
li x3, 0xa4fee8cdf6b9f42a # load x3 with value 0xa4fee8cdf6b9f42a
sw x3, 0(x2) # store 0xa4fee8cdf6b9f42a in memory
flw f4, 0(x2) # load 0xa4fee8cdf6b9f42a from memory into f4
fnmsub.s f29, f8, f20, f4 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80400000)
li x26, 0x0e7530d8479866eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe00f3728765b7465 # load x3 with value 0xe00f3728765b7465
sw x3, 0(x2) # store 0xe00f3728765b7465 in memory
flw f29, 0(x2) # load 0xe00f3728765b7465 from memory into f29
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0x67dd4f73c2af1f16 # load x3 with value 0x67dd4f73c2af1f16
sw x3, 0(x2) # store 0x67dd4f73c2af1f16 in memory
flw f8, 0(x2) # load 0x67dd4f73c2af1f16 from memory into f8
fnmsub.s f26, f29, f14, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
li x20, 0xc77f17992072b37f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x44a9b1a87b3d9f5a # load x3 with value 0x44a9b1a87b3d9f5a
sw x3, 0(x2) # store 0x44a9b1a87b3d9f5a in memory
flw f16, 0(x2) # load 0x44a9b1a87b3d9f5a from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0xa625fb3b4f00c024 # load x3 with value 0xa625fb3b4f00c024
sw x3, 0(x2) # store 0xa625fb3b4f00c024 in memory
flw f25, 0(x2) # load 0xa625fb3b4f00c024 from memory into f25
fnmsub.s f20, f16, f30, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000001)
li x22, 0xc18a6fdcacee82ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3658852066cc54e5 # load x3 with value 0x3658852066cc54e5
sw x3, 0(x2) # store 0x3658852066cc54e5 in memory
flw f13, 0(x2) # load 0x3658852066cc54e5 from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0xeb5077bd7e34fd5a # load x3 with value 0xeb5077bd7e34fd5a
sw x3, 0(x2) # store 0xeb5077bd7e34fd5a in memory
flw f23, 0(x2) # load 0xeb5077bd7e34fd5a from memory into f23
fnmsub.s f22, f13, f5, f23 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800000)
li x15, 0x8c3c545e7f06c788 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc55e8f274c2cee1f # load x3 with value 0xc55e8f274c2cee1f
sw x3, 0(x2) # store 0xc55e8f274c2cee1f in memory
flw f5, 0(x2) # load 0xc55e8f274c2cee1f from memory into f5
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0x7cd45a030db0a8ed # load x3 with value 0x7cd45a030db0a8ed
sw x3, 0(x2) # store 0x7cd45a030db0a8ed in memory
flw f21, 0(x2) # load 0x7cd45a030db0a8ed from memory into f21
fnmsub.s f15, f5, f3, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff800000)
li x11, 0x1c9fda60b7d790de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1f0368e7c80f84da # load x3 with value 0x1f0368e7c80f84da
sw x3, 0(x2) # store 0x1f0368e7c80f84da in memory
flw f15, 0(x2) # load 0x1f0368e7c80f84da from memory into f15
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0x924762f857fa2e7d # load x3 with value 0x924762f857fa2e7d
sw x3, 0(x2) # store 0x924762f857fa2e7d in memory
flw f13, 0(x2) # load 0x924762f857fa2e7d from memory into f13
fnmsub.s f11, f15, f19, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fc00000)
li x7, 0x1f7e92fd4fd3eac8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x69cf92956c896578 # load x3 with value 0x69cf92956c896578
sw x3, 0(x2) # store 0x69cf92956c896578 in memory
flw f20, 0(x2) # load 0x69cf92956c896578 from memory into f20
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0x29df6b49007e7715 # load x3 with value 0x29df6b49007e7715
sw x3, 0(x2) # store 0x29df6b49007e7715 in memory
flw f22, 0(x2) # load 0x29df6b49007e7715 from memory into f22
fnmsub.s f7, f20, f31, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffff)
li x4, 0x8670b1148ce0d6a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x41e6f9da7edfa83b # load x3 with value 0x41e6f9da7edfa83b
sw x3, 0(x2) # store 0x41e6f9da7edfa83b in memory
flw f9, 0(x2) # load 0x41e6f9da7edfa83b from memory into f9
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x76395ff0f688fde2 # load x3 with value 0x76395ff0f688fde2
sw x3, 0(x2) # store 0x76395ff0f688fde2 in memory
flw f19, 0(x2) # load 0x76395ff0f688fde2 from memory into f19
fnmsub.s f4, f9, f10, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800001)
li x29, 0x3254b7b5c263c774 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xecdb55e4d818dd08 # load x3 with value 0xecdb55e4d818dd08
sw x3, 0(x2) # store 0xecdb55e4d818dd08 in memory
flw f8, 0(x2) # load 0xecdb55e4d818dd08 from memory into f8
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0xabb2821f0a515b35 # load x3 with value 0xabb2821f0a515b35
sw x3, 0(x2) # store 0xabb2821f0a515b35 in memory
flw f10, 0(x2) # load 0xabb2821f0a515b35 from memory into f10
fnmsub.s f29, f8, f14, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fbfffff)
li x7, 0x139783efd8023e2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3b946892f7437a1d # load x3 with value 0x3b946892f7437a1d
sw x3, 0(x2) # store 0x3b946892f7437a1d in memory
flw f23, 0(x2) # load 0x3b946892f7437a1d from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0x7e5a16c2c8cacd01 # load x3 with value 0x7e5a16c2c8cacd01
sw x3, 0(x2) # store 0x7e5a16c2c8cacd01 in memory
flw f31, 0(x2) # load 0x7e5a16c2c8cacd01 from memory into f31
fnmsub.s f7, f23, f15, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ef8654f)
li x28, 0x7678af8a0465fdea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6a8d21b5dacc208d # load x3 with value 0x6a8d21b5dacc208d
sw x3, 0(x2) # store 0x6a8d21b5dacc208d in memory
flw f5, 0(x2) # load 0x6a8d21b5dacc208d from memory into f5
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
li x3, 0xeafdd7aa4ef30b0b # load x3 with value 0xeafdd7aa4ef30b0b
sw x3, 0(x2) # store 0xeafdd7aa4ef30b0b in memory
flw f30, 0(x2) # load 0xeafdd7aa4ef30b0b from memory into f30
fnmsub.s f28, f5, f12, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x813d9ab0)
li x7, 0xd43891427e9ef549 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa3a05477a6f91e5f # load x3 with value 0xa3a05477a6f91e5f
sw x3, 0(x2) # store 0xa3a05477a6f91e5f in memory
flw f18, 0(x2) # load 0xa3a05477a6f91e5f from memory into f18
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0xd06351c37277f123 # load x3 with value 0xd06351c37277f123
sw x3, 0(x2) # store 0xd06351c37277f123 in memory
flw f3, 0(x2) # load 0xd06351c37277f123 from memory into f3
fnmsub.s f7, f18, f17, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
li x15, 0x4fcfbd4047fc6657 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x29118003a932d92 # load x3 with value 0x29118003a932d92
sw x3, 0(x2) # store 0x29118003a932d92 in memory
flw f25, 0(x2) # load 0x29118003a932d92 from memory into f25
li x3, 0x7f2157526f6d7300 # load x3 with value 0x7f2157526f6d7300
sw x3, 0(x2) # store 0x7f2157526f6d7300 in memory
flw f26, 0(x2) # load 0x7f2157526f6d7300 from memory into f26
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
fnmsub.s f15, f25, f26, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000000)
li x7, 0x98daa2babaf53980 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4d1ff06d5c3d519c # load x3 with value 0x4d1ff06d5c3d519c
sw x3, 0(x2) # store 0x4d1ff06d5c3d519c in memory
flw f23, 0(x2) # load 0x4d1ff06d5c3d519c from memory into f23
li x3, 0xfebeff924d739320 # load x3 with value 0xfebeff924d739320
sw x3, 0(x2) # store 0xfebeff924d739320 in memory
flw f3, 0(x2) # load 0xfebeff924d739320 from memory into f3
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
fnmsub.s f7, f23, f3, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3f800000)
li x23, 0x0e2958951d91d519 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf801dac3c02c3902 # load x3 with value 0xf801dac3c02c3902
sw x3, 0(x2) # store 0xf801dac3c02c3902 in memory
flw f28, 0(x2) # load 0xf801dac3c02c3902 from memory into f28
li x3, 0x1b58022d581c57d1 # load x3 with value 0x1b58022d581c57d1
sw x3, 0(x2) # store 0x1b58022d581c57d1 in memory
flw f14, 0(x2) # load 0x1b58022d581c57d1 from memory into f14
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
fnmsub.s f23, f28, f14, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbf800000)
li x24, 0x67d1e22ba7a564fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe487b71630511b53 # load x3 with value 0xe487b71630511b53
sw x3, 0(x2) # store 0xe487b71630511b53 in memory
flw f18, 0(x2) # load 0xe487b71630511b53 from memory into f18
li x3, 0xd62dfda813c63120 # load x3 with value 0xd62dfda813c63120
sw x3, 0(x2) # store 0xd62dfda813c63120 in memory
flw f4, 0(x2) # load 0xd62dfda813c63120 from memory into f4
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
fnmsub.s f24, f18, f4, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3fc00000)
li x9, 0xc444df11c5a22d6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe2e4a906640881f2 # load x3 with value 0xe2e4a906640881f2
sw x3, 0(x2) # store 0xe2e4a906640881f2 in memory
flw f21, 0(x2) # load 0xe2e4a906640881f2 from memory into f21
li x3, 0xf05c76fcec8c25ca # load x3 with value 0xf05c76fcec8c25ca
sw x3, 0(x2) # store 0xf05c76fcec8c25ca in memory
flw f31, 0(x2) # load 0xf05c76fcec8c25ca from memory into f31
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
fnmsub.s f9, f21, f31, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbfc00000)
li x30, 0xadc92d92061480e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe8f0efca91b76af6 # load x3 with value 0xe8f0efca91b76af6
sw x3, 0(x2) # store 0xe8f0efca91b76af6 in memory
flw f9, 0(x2) # load 0xe8f0efca91b76af6 from memory into f9
li x3, 0x5bf9a9bd7f26825c # load x3 with value 0x5bf9a9bd7f26825c
sw x3, 0(x2) # store 0x5bf9a9bd7f26825c in memory
flw f18, 0(x2) # load 0x5bf9a9bd7f26825c from memory into f18
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
fnmsub.s f30, f9, f18, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x40000000)
li x17, 0x132edf05c710ee9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdd4d96064c4c64e6 # load x3 with value 0xdd4d96064c4c64e6
sw x3, 0(x2) # store 0xdd4d96064c4c64e6 in memory
flw f6, 0(x2) # load 0xdd4d96064c4c64e6 from memory into f6
li x3, 0xda4465779c8e37d1 # load x3 with value 0xda4465779c8e37d1
sw x3, 0(x2) # store 0xda4465779c8e37d1 in memory
flw f20, 0(x2) # load 0xda4465779c8e37d1 from memory into f20
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
fnmsub.s f17, f6, f20, f15 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc0000000)
li x18, 0x1115d5b52f49a7f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3a69f93fc3075528 # load x3 with value 0x3a69f93fc3075528
sw x3, 0(x2) # store 0x3a69f93fc3075528 in memory
flw f20, 0(x2) # load 0x3a69f93fc3075528 from memory into f20
li x3, 0x704f93e506d5fbbe # load x3 with value 0x704f93e506d5fbbe
sw x3, 0(x2) # store 0x704f93e506d5fbbe in memory
flw f3, 0(x2) # load 0x704f93e506d5fbbe from memory into f3
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
fnmsub.s f18, f20, f3, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800000)
li x5, 0x9b73e9c8b35a750e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6e2373b565ce0603 # load x3 with value 0x6e2373b565ce0603
sw x3, 0(x2) # store 0x6e2373b565ce0603 in memory
flw f9, 0(x2) # load 0x6e2373b565ce0603 from memory into f9
li x3, 0x69c88127be374a2 # load x3 with value 0x69c88127be374a2
sw x3, 0(x2) # store 0x69c88127be374a2 in memory
flw f14, 0(x2) # load 0x69c88127be374a2 from memory into f14
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
fnmsub.s f5, f9, f14, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80800000)
li x13, 0x87e19f11e6a188f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb117e65bb70d2a22 # load x3 with value 0xb117e65bb70d2a22
sw x3, 0(x2) # store 0xb117e65bb70d2a22 in memory
flw f27, 0(x2) # load 0xb117e65bb70d2a22 from memory into f27
li x3, 0x171c5529b992a297 # load x3 with value 0x171c5529b992a297
sw x3, 0(x2) # store 0x171c5529b992a297 in memory
flw f31, 0(x2) # load 0x171c5529b992a297 from memory into f31
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
fnmsub.s f13, f27, f31, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f7fffff)
li x18, 0xfd0fc0164c4fdc3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1f2d1d412d7116c4 # load x3 with value 0x1f2d1d412d7116c4
sw x3, 0(x2) # store 0x1f2d1d412d7116c4 in memory
flw f24, 0(x2) # load 0x1f2d1d412d7116c4 from memory into f24
li x3, 0x7256e3799c26337f # load x3 with value 0x7256e3799c26337f
sw x3, 0(x2) # store 0x7256e3799c26337f in memory
flw f21, 0(x2) # load 0x7256e3799c26337f from memory into f21
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
fnmsub.s f18, f24, f21, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff7fffff)
li x5, 0x1902b24e20b66881 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x369a3a4e9bf94ce2 # load x3 with value 0x369a3a4e9bf94ce2
sw x3, 0(x2) # store 0x369a3a4e9bf94ce2 in memory
flw f20, 0(x2) # load 0x369a3a4e9bf94ce2 from memory into f20
li x3, 0xff26fcaba9ea5286 # load x3 with value 0xff26fcaba9ea5286
sw x3, 0(x2) # store 0xff26fcaba9ea5286 in memory
flw f25, 0(x2) # load 0xff26fcaba9ea5286 from memory into f25
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
fnmsub.s f5, f20, f25, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffff)
li x28, 0x39403f3a67ce7d49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcb406b118c7ab102 # load x3 with value 0xcb406b118c7ab102
sw x3, 0(x2) # store 0xcb406b118c7ab102 in memory
flw f31, 0(x2) # load 0xcb406b118c7ab102 from memory into f31
li x3, 0xc2c15916262a038b # load x3 with value 0xc2c15916262a038b
sw x3, 0(x2) # store 0xc2c15916262a038b in memory
flw f5, 0(x2) # load 0xc2c15916262a038b from memory into f5
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
fnmsub.s f28, f31, f5, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x807fffff)
li x27, 0xd3043bb1f74515dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc7a6f8bc798620a2 # load x3 with value 0xc7a6f8bc798620a2
sw x3, 0(x2) # store 0xc7a6f8bc798620a2 in memory
flw f29, 0(x2) # load 0xc7a6f8bc798620a2 from memory into f29
li x3, 0x710a114d8dc06c7a # load x3 with value 0x710a114d8dc06c7a
sw x3, 0(x2) # store 0x710a114d8dc06c7a in memory
flw f18, 0(x2) # load 0x710a114d8dc06c7a from memory into f18
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
fnmsub.s f27, f29, f18, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400000)
li x3, 0x7466e22795702277 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xceed5deb030a43f6 # load x3 with value 0xceed5deb030a43f6
sw x3, 0(x2) # store 0xceed5deb030a43f6 in memory
flw f9, 0(x2) # load 0xceed5deb030a43f6 from memory into f9
li x3, 0xf55249b567ef4bb5 # load x3 with value 0xf55249b567ef4bb5
sw x3, 0(x2) # store 0xf55249b567ef4bb5 in memory
flw f17, 0(x2) # load 0xf55249b567ef4bb5 from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fnmsub.s f3, f9, f17, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80400000)
li x12, 0x0c179c0efb8a3433 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf566713e2de9d0d2 # load x3 with value 0xf566713e2de9d0d2
sw x3, 0(x2) # store 0xf566713e2de9d0d2 in memory
flw f19, 0(x2) # load 0xf566713e2de9d0d2 from memory into f19
li x3, 0xd69943412e1c70d4 # load x3 with value 0xd69943412e1c70d4
sw x3, 0(x2) # store 0xd69943412e1c70d4 in memory
flw f9, 0(x2) # load 0xd69943412e1c70d4 from memory into f9
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
fnmsub.s f12, f19, f9, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
li x6, 0x59d8e9c88edd9f68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x27248981bae5872c # load x3 with value 0x27248981bae5872c
sw x3, 0(x2) # store 0x27248981bae5872c in memory
flw f9, 0(x2) # load 0x27248981bae5872c from memory into f9
li x3, 0x9c986eb3913021f2 # load x3 with value 0x9c986eb3913021f2
sw x3, 0(x2) # store 0x9c986eb3913021f2 in memory
flw f28, 0(x2) # load 0x9c986eb3913021f2 from memory into f28
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
fnmsub.s f6, f9, f28, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000001)
li x24, 0xfc33b85f726bf6da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x973dcab3cf0a77dc # load x3 with value 0x973dcab3cf0a77dc
sw x3, 0(x2) # store 0x973dcab3cf0a77dc in memory
flw f9, 0(x2) # load 0x973dcab3cf0a77dc from memory into f9
li x3, 0xdd9d90b250f22d07 # load x3 with value 0xdd9d90b250f22d07
sw x3, 0(x2) # store 0xdd9d90b250f22d07 in memory
flw f17, 0(x2) # load 0xdd9d90b250f22d07 from memory into f17
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
fnmsub.s f24, f9, f17, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800000)
li x24, 0x7259a76b6f1fe3fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x510febcd0972995b # load x3 with value 0x510febcd0972995b
sw x3, 0(x2) # store 0x510febcd0972995b in memory
flw f16, 0(x2) # load 0x510febcd0972995b from memory into f16
li x3, 0xf629a53335305804 # load x3 with value 0xf629a53335305804
sw x3, 0(x2) # store 0xf629a53335305804 in memory
flw f7, 0(x2) # load 0xf629a53335305804 from memory into f7
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
fnmsub.s f24, f16, f7, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff800000)
li x16, 0x6a870e9d049d06cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb115b1be3340f7b6 # load x3 with value 0xb115b1be3340f7b6
sw x3, 0(x2) # store 0xb115b1be3340f7b6 in memory
flw f17, 0(x2) # load 0xb115b1be3340f7b6 from memory into f17
li x3, 0xacc0126d56626b60 # load x3 with value 0xacc0126d56626b60
sw x3, 0(x2) # store 0xacc0126d56626b60 in memory
flw f6, 0(x2) # load 0xacc0126d56626b60 from memory into f6
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
fnmsub.s f16, f17, f6, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fc00000)
li x20, 0xd7fdcde432568f68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9c9d7868088df2d # load x3 with value 0x9c9d7868088df2d
sw x3, 0(x2) # store 0x9c9d7868088df2d in memory
flw f21, 0(x2) # load 0x9c9d7868088df2d from memory into f21
li x3, 0x3ceda6b1680ad7b2 # load x3 with value 0x3ceda6b1680ad7b2
sw x3, 0(x2) # store 0x3ceda6b1680ad7b2 in memory
flw f23, 0(x2) # load 0x3ceda6b1680ad7b2 from memory into f23
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
fnmsub.s f20, f21, f23, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffff)
li x25, 0x43f85c29eec56727 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x17faf937e718ff2d # load x3 with value 0x17faf937e718ff2d
sw x3, 0(x2) # store 0x17faf937e718ff2d in memory
flw f27, 0(x2) # load 0x17faf937e718ff2d from memory into f27
li x3, 0x5d4d36c06c2d2f3c # load x3 with value 0x5d4d36c06c2d2f3c
sw x3, 0(x2) # store 0x5d4d36c06c2d2f3c in memory
flw f21, 0(x2) # load 0x5d4d36c06c2d2f3c from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
fnmsub.s f25, f27, f21, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800001)
li x28, 0xd3b10694b0fb92c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa16527f3948bf6fd # load x3 with value 0xa16527f3948bf6fd
sw x3, 0(x2) # store 0xa16527f3948bf6fd in memory
flw f26, 0(x2) # load 0xa16527f3948bf6fd from memory into f26
li x3, 0xe5ebe24826a371d1 # load x3 with value 0xe5ebe24826a371d1
sw x3, 0(x2) # store 0xe5ebe24826a371d1 in memory
flw f16, 0(x2) # load 0xe5ebe24826a371d1 from memory into f16
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
fnmsub.s f28, f26, f16, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fbfffff)
li x31, 0xfe0df8532492bf93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8a8d4c78451c3b11 # load x3 with value 0x8a8d4c78451c3b11
sw x3, 0(x2) # store 0x8a8d4c78451c3b11 in memory
flw f8, 0(x2) # load 0x8a8d4c78451c3b11 from memory into f8
li x3, 0x89597c88027c379 # load x3 with value 0x89597c88027c379
sw x3, 0(x2) # store 0x89597c88027c379 in memory
flw f25, 0(x2) # load 0x89597c88027c379 from memory into f25
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
fnmsub.s f31, f8, f25, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ef8654f)
li x29, 0xe6593e500583c3b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5e81cf0d803dd157 # load x3 with value 0x5e81cf0d803dd157
sw x3, 0(x2) # store 0x5e81cf0d803dd157 in memory
flw f24, 0(x2) # load 0x5e81cf0d803dd157 from memory into f24
li x3, 0x1808bab4ec9cfd # load x3 with value 0x1808bab4ec9cfd
sw x3, 0(x2) # store 0x1808bab4ec9cfd in memory
flw f23, 0(x2) # load 0x1808bab4ec9cfd from memory into f23
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fnmsub.s f29, f24, f23, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x813d9ab0)
li x21, 0xd753b64a59e45aac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x325b04e539949c59 # load x3 with value 0x325b04e539949c59
sw x3, 0(x2) # store 0x325b04e539949c59 in memory
flw f13, 0(x2) # load 0x325b04e539949c59 from memory into f13
li x3, 0xcb4fb83364cbc813 # load x3 with value 0xcb4fb83364cbc813
sw x3, 0(x2) # store 0xcb4fb83364cbc813 in memory
flw f11, 0(x2) # load 0xcb4fb83364cbc813 from memory into f11
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
fnmsub.s f21, f13, f11, f28 # perform operation

# Testcase cp_frm
li x15, 0xeecc526798b23d60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4a4e6c4aff7f7544 # load x3 with value 0x4a4e6c4aff7f7544
sw x3, 0(x2) # store 0x4a4e6c4aff7f7544 in memory
flw f18, 0(x2) # load 0x4a4e6c4aff7f7544 from memory into f18
li x3, 0x9937fb793d366846 # load x3 with value 0x9937fb793d366846
sw x3, 0(x2) # store 0x9937fb793d366846 in memory
flw f23, 0(x2) # load 0x9937fb793d366846 from memory into f23
li x3, 0x00000013 # load x3 with value 0x00000013
sw x3, 0(x2) # store 0x00000013 in memory
flw f19, 0(x2) # load 0x00000013 from memory into f19
fnmsub.s f15, f18, f23, f19, dyn # perform operation
fnmsub.s f15, f18, f23, f19, rdn # perform operation
fnmsub.s f15, f18, f23, f19, rmm # perform operation
fnmsub.s f15, f18, f23, f19, rne # perform operation
fnmsub.s f15, f18, f23, f19, rtz # perform operation
fnmsub.s f15, f18, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f18, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f18, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f18, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f18, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f18, f23, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
li x9, 0x3c80b277e1bc48c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x6977ddae826b1cfa # load x3 with value 0x6977ddae826b1cfa
sw x3, 0(x2) # store 0x6977ddae826b1cfa in memory
flw f18, 0(x2) # load 0x6977ddae826b1cfa from memory into f18
fnmsub.s f9, f24, f16, f18, dyn # perform operation
fnmsub.s f9, f24, f16, f18, rdn # perform operation
fnmsub.s f9, f24, f16, f18, rmm # perform operation
fnmsub.s f9, f24, f16, f18, rne # perform operation
fnmsub.s f9, f24, f16, f18, rtz # perform operation
fnmsub.s f9, f24, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f24, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f24, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f24, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f24, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f24, f16, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000000)
li x7, 0x11c96d925d4fbece # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0x436daec0c4c527d6 # load x3 with value 0x436daec0c4c527d6
sw x3, 0(x2) # store 0x436daec0c4c527d6 in memory
flw f16, 0(x2) # load 0x436daec0c4c527d6 from memory into f16
fnmsub.s f7, f30, f3, f16, dyn # perform operation
fnmsub.s f7, f30, f3, f16, rdn # perform operation
fnmsub.s f7, f30, f3, f16, rmm # perform operation
fnmsub.s f7, f30, f3, f16, rne # perform operation
fnmsub.s f7, f30, f3, f16, rtz # perform operation
fnmsub.s f7, f30, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f30, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f30, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f30, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f30, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f30, f3, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3f800000)
li x21, 0xb040d90949b38ee8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
li x3, 0x34c5beec25a15aa3 # load x3 with value 0x34c5beec25a15aa3
sw x3, 0(x2) # store 0x34c5beec25a15aa3 in memory
flw f22, 0(x2) # load 0x34c5beec25a15aa3 from memory into f22
fnmsub.s f21, f17, f4, f22, dyn # perform operation
fnmsub.s f21, f17, f4, f22, rdn # perform operation
fnmsub.s f21, f17, f4, f22, rmm # perform operation
fnmsub.s f21, f17, f4, f22, rne # perform operation
fnmsub.s f21, f17, f4, f22, rtz # perform operation
fnmsub.s f21, f17, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f17, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f17, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f17, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f17, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f17, f4, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbf800000)
li x13, 0x49ac7680c3bc4ba3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0x69920bd2f9c0466 # load x3 with value 0x69920bd2f9c0466
sw x3, 0(x2) # store 0x69920bd2f9c0466 in memory
flw f29, 0(x2) # load 0x69920bd2f9c0466 from memory into f29
fnmsub.s f13, f9, f20, f29, dyn # perform operation
fnmsub.s f13, f9, f20, f29, rdn # perform operation
fnmsub.s f13, f9, f20, f29, rmm # perform operation
fnmsub.s f13, f9, f20, f29, rne # perform operation
fnmsub.s f13, f9, f20, f29, rtz # perform operation
fnmsub.s f13, f9, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f9, f20, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3fc00000)
li x14, 0xc1d3446c4cd25eec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0xca5ec1a1b6efd4b2 # load x3 with value 0xca5ec1a1b6efd4b2
sw x3, 0(x2) # store 0xca5ec1a1b6efd4b2 in memory
flw f1, 0(x2) # load 0xca5ec1a1b6efd4b2 from memory into f1
fnmsub.s f14, f9, f4, f1, dyn # perform operation
fnmsub.s f14, f9, f4, f1, rdn # perform operation
fnmsub.s f14, f9, f4, f1, rmm # perform operation
fnmsub.s f14, f9, f4, f1, rne # perform operation
fnmsub.s f14, f9, f4, f1, rtz # perform operation
fnmsub.s f14, f9, f4, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f9, f4, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f9, f4, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f9, f4, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f9, f4, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f9, f4, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbfc00000)
li x8, 0xa0ed32705a2ea57b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0x2a7208e9df8c57fd # load x3 with value 0x2a7208e9df8c57fd
sw x3, 0(x2) # store 0x2a7208e9df8c57fd in memory
flw f10, 0(x2) # load 0x2a7208e9df8c57fd from memory into f10
fnmsub.s f8, f12, f1, f10, dyn # perform operation
fnmsub.s f8, f12, f1, f10, rdn # perform operation
fnmsub.s f8, f12, f1, f10, rmm # perform operation
fnmsub.s f8, f12, f1, f10, rne # perform operation
fnmsub.s f8, f12, f1, f10, rtz # perform operation
fnmsub.s f8, f12, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f12, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f12, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f12, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f12, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f12, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x40000000)
li x7, 0x09676e972bae5875 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0xda79248f2c5feaf2 # load x3 with value 0xda79248f2c5feaf2
sw x3, 0(x2) # store 0xda79248f2c5feaf2 in memory
flw f2, 0(x2) # load 0xda79248f2c5feaf2 from memory into f2
fnmsub.s f7, f4, f8, f2, dyn # perform operation
fnmsub.s f7, f4, f8, f2, rdn # perform operation
fnmsub.s f7, f4, f8, f2, rmm # perform operation
fnmsub.s f7, f4, f8, f2, rne # perform operation
fnmsub.s f7, f4, f8, f2, rtz # perform operation
fnmsub.s f7, f4, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f4, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f4, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f4, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f4, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f4, f8, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc0000000)
li x22, 0xcda187db42e235c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x2256eb2e6bedbe9f # load x3 with value 0x2256eb2e6bedbe9f
sw x3, 0(x2) # store 0x2256eb2e6bedbe9f in memory
flw f11, 0(x2) # load 0x2256eb2e6bedbe9f from memory into f11
fnmsub.s f22, f18, f31, f11, dyn # perform operation
fnmsub.s f22, f18, f31, f11, rdn # perform operation
fnmsub.s f22, f18, f31, f11, rmm # perform operation
fnmsub.s f22, f18, f31, f11, rne # perform operation
fnmsub.s f22, f18, f31, f11, rtz # perform operation
fnmsub.s f22, f18, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f18, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f18, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f18, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f18, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f18, f31, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800000)
li x12, 0x92b3f75ac367c865 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
li x3, 0xc1568a602dd7df74 # load x3 with value 0xc1568a602dd7df74
sw x3, 0(x2) # store 0xc1568a602dd7df74 in memory
flw f16, 0(x2) # load 0xc1568a602dd7df74 from memory into f16
fnmsub.s f12, f26, f15, f16, dyn # perform operation
fnmsub.s f12, f26, f15, f16, rdn # perform operation
fnmsub.s f12, f26, f15, f16, rmm # perform operation
fnmsub.s f12, f26, f15, f16, rne # perform operation
fnmsub.s f12, f26, f15, f16, rtz # perform operation
fnmsub.s f12, f26, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f26, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f26, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f26, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f26, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f26, f15, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80800000)
li x18, 0xc8d8e95b026dae8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0x298c3b569c9140d6 # load x3 with value 0x298c3b569c9140d6
sw x3, 0(x2) # store 0x298c3b569c9140d6 in memory
flw f1, 0(x2) # load 0x298c3b569c9140d6 from memory into f1
fnmsub.s f18, f24, f15, f1, dyn # perform operation
fnmsub.s f18, f24, f15, f1, rdn # perform operation
fnmsub.s f18, f24, f15, f1, rmm # perform operation
fnmsub.s f18, f24, f15, f1, rne # perform operation
fnmsub.s f18, f24, f15, f1, rtz # perform operation
fnmsub.s f18, f24, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f24, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f24, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f24, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f24, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f24, f15, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f7fffff)
li x6, 0xd6294087c58f2a4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0x8e740722a17a4ddb # load x3 with value 0x8e740722a17a4ddb
sw x3, 0(x2) # store 0x8e740722a17a4ddb in memory
flw f31, 0(x2) # load 0x8e740722a17a4ddb from memory into f31
fnmsub.s f6, f14, f28, f31, dyn # perform operation
fnmsub.s f6, f14, f28, f31, rdn # perform operation
fnmsub.s f6, f14, f28, f31, rmm # perform operation
fnmsub.s f6, f14, f28, f31, rne # perform operation
fnmsub.s f6, f14, f28, f31, rtz # perform operation
fnmsub.s f6, f14, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f14, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f14, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f14, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f14, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f14, f28, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff7fffff)
li x3, 0xfb52e8b052186d2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0x9447808d5a1cd662 # load x3 with value 0x9447808d5a1cd662
sw x3, 0(x2) # store 0x9447808d5a1cd662 in memory
flw f10, 0(x2) # load 0x9447808d5a1cd662 from memory into f10
fnmsub.s f3, f19, f8, f10, dyn # perform operation
fnmsub.s f3, f19, f8, f10, rdn # perform operation
fnmsub.s f3, f19, f8, f10, rmm # perform operation
fnmsub.s f3, f19, f8, f10, rne # perform operation
fnmsub.s f3, f19, f8, f10, rtz # perform operation
fnmsub.s f3, f19, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f19, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f19, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f19, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f19, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f19, f8, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffff)
li x7, 0xdc5e3d471925dc00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0xcf9392ef247339a6 # load x3 with value 0xcf9392ef247339a6
sw x3, 0(x2) # store 0xcf9392ef247339a6 in memory
flw f10, 0(x2) # load 0xcf9392ef247339a6 from memory into f10
fnmsub.s f7, f20, f8, f10, dyn # perform operation
fnmsub.s f7, f20, f8, f10, rdn # perform operation
fnmsub.s f7, f20, f8, f10, rmm # perform operation
fnmsub.s f7, f20, f8, f10, rne # perform operation
fnmsub.s f7, f20, f8, f10, rtz # perform operation
fnmsub.s f7, f20, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f20, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f20, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f20, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f20, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f20, f8, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x807fffff)
li x13, 0xe80b85306709b342 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
li x3, 0xc65b7016f318a0fe # load x3 with value 0xc65b7016f318a0fe
sw x3, 0(x2) # store 0xc65b7016f318a0fe in memory
flw f7, 0(x2) # load 0xc65b7016f318a0fe from memory into f7
fnmsub.s f13, f3, f19, f7, dyn # perform operation
fnmsub.s f13, f3, f19, f7, rdn # perform operation
fnmsub.s f13, f3, f19, f7, rmm # perform operation
fnmsub.s f13, f3, f19, f7, rne # perform operation
fnmsub.s f13, f3, f19, f7, rtz # perform operation
fnmsub.s f13, f3, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f3, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f3, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f3, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f3, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f3, f19, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400000)
li x3, 0xc3ded2265c35170c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0x2beb09d9d7fc2d59 # load x3 with value 0x2beb09d9d7fc2d59
sw x3, 0(x2) # store 0x2beb09d9d7fc2d59 in memory
flw f4, 0(x2) # load 0x2beb09d9d7fc2d59 from memory into f4
fnmsub.s f3, f29, f6, f4, dyn # perform operation
fnmsub.s f3, f29, f6, f4, rdn # perform operation
fnmsub.s f3, f29, f6, f4, rmm # perform operation
fnmsub.s f3, f29, f6, f4, rne # perform operation
fnmsub.s f3, f29, f6, f4, rtz # perform operation
fnmsub.s f3, f29, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f29, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f29, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f29, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f29, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f29, f6, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80400000)
li x10, 0x87df1cf04a719591 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0xbed70231c06ee42c # load x3 with value 0xbed70231c06ee42c
sw x3, 0(x2) # store 0xbed70231c06ee42c in memory
flw f29, 0(x2) # load 0xbed70231c06ee42c from memory into f29
fnmsub.s f10, f20, f27, f29, dyn # perform operation
fnmsub.s f10, f20, f27, f29, rdn # perform operation
fnmsub.s f10, f20, f27, f29, rmm # perform operation
fnmsub.s f10, f20, f27, f29, rne # perform operation
fnmsub.s f10, f20, f27, f29, rtz # perform operation
fnmsub.s f10, f20, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f20, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f20, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f20, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f20, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f20, f27, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
li x31, 0x6f3f05bcf6e3134d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
li x3, 0xae8d14b1c714a02c # load x3 with value 0xae8d14b1c714a02c
sw x3, 0(x2) # store 0xae8d14b1c714a02c in memory
flw f5, 0(x2) # load 0xae8d14b1c714a02c from memory into f5
fnmsub.s f31, f21, f9, f5, dyn # perform operation
fnmsub.s f31, f21, f9, f5, rdn # perform operation
fnmsub.s f31, f21, f9, f5, rmm # perform operation
fnmsub.s f31, f21, f9, f5, rne # perform operation
fnmsub.s f31, f21, f9, f5, rtz # perform operation
fnmsub.s f31, f21, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f21, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f21, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f21, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f21, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f21, f9, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000001)
li x3, 0x3ad8036bd0c4364a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0x78f0ea34b2d6cc61 # load x3 with value 0x78f0ea34b2d6cc61
sw x3, 0(x2) # store 0x78f0ea34b2d6cc61 in memory
flw f24, 0(x2) # load 0x78f0ea34b2d6cc61 from memory into f24
fnmsub.s f3, f27, f12, f24, dyn # perform operation
fnmsub.s f3, f27, f12, f24, rdn # perform operation
fnmsub.s f3, f27, f12, f24, rmm # perform operation
fnmsub.s f3, f27, f12, f24, rne # perform operation
fnmsub.s f3, f27, f12, f24, rtz # perform operation
fnmsub.s f3, f27, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f27, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800000)
li x10, 0x5507301a3f5fe433 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0x5f377dc79da8e7d6 # load x3 with value 0x5f377dc79da8e7d6
sw x3, 0(x2) # store 0x5f377dc79da8e7d6 in memory
flw f19, 0(x2) # load 0x5f377dc79da8e7d6 from memory into f19
fnmsub.s f10, f11, f9, f19, dyn # perform operation
fnmsub.s f10, f11, f9, f19, rdn # perform operation
fnmsub.s f10, f11, f9, f19, rmm # perform operation
fnmsub.s f10, f11, f9, f19, rne # perform operation
fnmsub.s f10, f11, f9, f19, rtz # perform operation
fnmsub.s f10, f11, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f11, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f11, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f11, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f11, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f11, f9, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff800000)
li x23, 0xb4195a1455e29986 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0x39058bfd21dd0bb3 # load x3 with value 0x39058bfd21dd0bb3
sw x3, 0(x2) # store 0x39058bfd21dd0bb3 in memory
flw f19, 0(x2) # load 0x39058bfd21dd0bb3 from memory into f19
fnmsub.s f23, f27, f28, f19, dyn # perform operation
fnmsub.s f23, f27, f28, f19, rdn # perform operation
fnmsub.s f23, f27, f28, f19, rmm # perform operation
fnmsub.s f23, f27, f28, f19, rne # perform operation
fnmsub.s f23, f27, f28, f19, rtz # perform operation
fnmsub.s f23, f27, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f27, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f27, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f27, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f27, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f27, f28, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fc00000)
li x19, 0x418cc912077bacd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0xbdd99cbbbf21623a # load x3 with value 0xbdd99cbbbf21623a
sw x3, 0(x2) # store 0xbdd99cbbbf21623a in memory
flw f30, 0(x2) # load 0xbdd99cbbbf21623a from memory into f30
fnmsub.s f19, f25, f7, f30, dyn # perform operation
fnmsub.s f19, f25, f7, f30, rdn # perform operation
fnmsub.s f19, f25, f7, f30, rmm # perform operation
fnmsub.s f19, f25, f7, f30, rne # perform operation
fnmsub.s f19, f25, f7, f30, rtz # perform operation
fnmsub.s f19, f25, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f25, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f25, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f25, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f25, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f25, f7, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffff)
li x5, 0x6f134100ee5cda14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
li x3, 0x6293cbdfc77ac5aa # load x3 with value 0x6293cbdfc77ac5aa
sw x3, 0(x2) # store 0x6293cbdfc77ac5aa in memory
flw f10, 0(x2) # load 0x6293cbdfc77ac5aa from memory into f10
fnmsub.s f5, f8, f11, f10, dyn # perform operation
fnmsub.s f5, f8, f11, f10, rdn # perform operation
fnmsub.s f5, f8, f11, f10, rmm # perform operation
fnmsub.s f5, f8, f11, f10, rne # perform operation
fnmsub.s f5, f8, f11, f10, rtz # perform operation
fnmsub.s f5, f8, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f8, f11, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800001)
li x4, 0x1d866e25da31d405 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
li x3, 0x5630d3f4d2bb6f67 # load x3 with value 0x5630d3f4d2bb6f67
sw x3, 0(x2) # store 0x5630d3f4d2bb6f67 in memory
flw f24, 0(x2) # load 0x5630d3f4d2bb6f67 from memory into f24
fnmsub.s f4, f2, f31, f24, dyn # perform operation
fnmsub.s f4, f2, f31, f24, rdn # perform operation
fnmsub.s f4, f2, f31, f24, rmm # perform operation
fnmsub.s f4, f2, f31, f24, rne # perform operation
fnmsub.s f4, f2, f31, f24, rtz # perform operation
fnmsub.s f4, f2, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f2, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f2, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f2, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f2, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f2, f31, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fbfffff)
li x13, 0xffbef99d35c88a44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0x767b88d6d441840e # load x3 with value 0x767b88d6d441840e
sw x3, 0(x2) # store 0x767b88d6d441840e in memory
flw f27, 0(x2) # load 0x767b88d6d441840e from memory into f27
fnmsub.s f13, f22, f26, f27, dyn # perform operation
fnmsub.s f13, f22, f26, f27, rdn # perform operation
fnmsub.s f13, f22, f26, f27, rmm # perform operation
fnmsub.s f13, f22, f26, f27, rne # perform operation
fnmsub.s f13, f22, f26, f27, rtz # perform operation
fnmsub.s f13, f22, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f22, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f22, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f22, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f22, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f22, f26, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ef8654f)
li x15, 0xb2969d163f730629 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
li x3, 0x15215e61b5b1f4da # load x3 with value 0x15215e61b5b1f4da
sw x3, 0(x2) # store 0x15215e61b5b1f4da in memory
flw f9, 0(x2) # load 0x15215e61b5b1f4da from memory into f9
fnmsub.s f15, f6, f19, f9, dyn # perform operation
fnmsub.s f15, f6, f19, f9, rdn # perform operation
fnmsub.s f15, f6, f19, f9, rmm # perform operation
fnmsub.s f15, f6, f19, f9, rne # perform operation
fnmsub.s f15, f6, f19, f9, rtz # perform operation
fnmsub.s f15, f6, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f6, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f6, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f6, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f6, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f6, f19, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x813d9ab0)
li x8, 0xf7afc9e067bdd070 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
li x3, 0x71b172b80abf8b87 # load x3 with value 0x71b172b80abf8b87
sw x3, 0(x2) # store 0x71b172b80abf8b87 in memory
flw f7, 0(x2) # load 0x71b172b80abf8b87 from memory into f7
fnmsub.s f8, f4, f29, f7, dyn # perform operation
fnmsub.s f8, f4, f29, f7, rdn # perform operation
fnmsub.s f8, f4, f29, f7, rmm # perform operation
fnmsub.s f8, f4, f29, f7, rne # perform operation
fnmsub.s f8, f4, f29, f7, rtz # perform operation
fnmsub.s f8, f4, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f4, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f4, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f4, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f4, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f4, f29, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x0)
li x26, 0x0e64d4f635da40b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x75ca04a30b5c44fe # load x3 with value 0x75ca04a30b5c44fe
sw x3, 0(x2) # store 0x75ca04a30b5c44fe in memory
flw f18, 0(x2) # load 0x75ca04a30b5c44fe from memory into f18
fnmsub.s f26, f12, f22, f18, dyn # perform operation
fnmsub.s f26, f12, f22, f18, rdn # perform operation
fnmsub.s f26, f12, f22, f18, rmm # perform operation
fnmsub.s f26, f12, f22, f18, rne # perform operation
fnmsub.s f26, f12, f22, f18, rtz # perform operation
fnmsub.s f26, f12, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f12, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f12, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f12, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f12, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f12, f22, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000000)
li x13, 0x3424b7e2c55b7114 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0xfff9f452ec798761 # load x3 with value 0xfff9f452ec798761
sw x3, 0(x2) # store 0xfff9f452ec798761 in memory
flw f17, 0(x2) # load 0xfff9f452ec798761 from memory into f17
fnmsub.s f13, f28, f3, f17, dyn # perform operation
fnmsub.s f13, f28, f3, f17, rdn # perform operation
fnmsub.s f13, f28, f3, f17, rmm # perform operation
fnmsub.s f13, f28, f3, f17, rne # perform operation
fnmsub.s f13, f28, f3, f17, rtz # perform operation
fnmsub.s f13, f28, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f28, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f28, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f28, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f28, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f28, f3, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3f800000)
li x20, 0xf5555a926a7cd027 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0xd8f3248b0cccf9a7 # load x3 with value 0xd8f3248b0cccf9a7
sw x3, 0(x2) # store 0xd8f3248b0cccf9a7 in memory
flw f23, 0(x2) # load 0xd8f3248b0cccf9a7 from memory into f23
fnmsub.s f20, f31, f18, f23, dyn # perform operation
fnmsub.s f20, f31, f18, f23, rdn # perform operation
fnmsub.s f20, f31, f18, f23, rmm # perform operation
fnmsub.s f20, f31, f18, f23, rne # perform operation
fnmsub.s f20, f31, f18, f23, rtz # perform operation
fnmsub.s f20, f31, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f31, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f31, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f31, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f31, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f31, f18, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbf800000)
li x3, 0xf7087428523d84a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0x3e49dee0a518822a # load x3 with value 0x3e49dee0a518822a
sw x3, 0(x2) # store 0x3e49dee0a518822a in memory
flw f29, 0(x2) # load 0x3e49dee0a518822a from memory into f29
fnmsub.s f3, f1, f7, f29, dyn # perform operation
fnmsub.s f3, f1, f7, f29, rdn # perform operation
fnmsub.s f3, f1, f7, f29, rmm # perform operation
fnmsub.s f3, f1, f7, f29, rne # perform operation
fnmsub.s f3, f1, f7, f29, rtz # perform operation
fnmsub.s f3, f1, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f1, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f1, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f1, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f1, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f1, f7, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3fc00000)
li x22, 0x17c941497a4727d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0x85828257ecd75a09 # load x3 with value 0x85828257ecd75a09
sw x3, 0(x2) # store 0x85828257ecd75a09 in memory
flw f16, 0(x2) # load 0x85828257ecd75a09 from memory into f16
fnmsub.s f22, f14, f4, f16, dyn # perform operation
fnmsub.s f22, f14, f4, f16, rdn # perform operation
fnmsub.s f22, f14, f4, f16, rmm # perform operation
fnmsub.s f22, f14, f4, f16, rne # perform operation
fnmsub.s f22, f14, f4, f16, rtz # perform operation
fnmsub.s f22, f14, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f14, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f14, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f14, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f14, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f14, f4, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbfc00000)
li x10, 0x3d93126b68b01f41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0x6816631edcf876fe # load x3 with value 0x6816631edcf876fe
sw x3, 0(x2) # store 0x6816631edcf876fe in memory
flw f22, 0(x2) # load 0x6816631edcf876fe from memory into f22
fnmsub.s f10, f1, f25, f22, dyn # perform operation
fnmsub.s f10, f1, f25, f22, rdn # perform operation
fnmsub.s f10, f1, f25, f22, rmm # perform operation
fnmsub.s f10, f1, f25, f22, rne # perform operation
fnmsub.s f10, f1, f25, f22, rtz # perform operation
fnmsub.s f10, f1, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f1, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f1, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f1, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f1, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f1, f25, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x40000000)
li x31, 0x6029213b7ff5e135 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0xb958cb987f39dac1 # load x3 with value 0xb958cb987f39dac1
sw x3, 0(x2) # store 0xb958cb987f39dac1 in memory
flw f7, 0(x2) # load 0xb958cb987f39dac1 from memory into f7
fnmsub.s f31, f10, f26, f7, dyn # perform operation
fnmsub.s f31, f10, f26, f7, rdn # perform operation
fnmsub.s f31, f10, f26, f7, rmm # perform operation
fnmsub.s f31, f10, f26, f7, rne # perform operation
fnmsub.s f31, f10, f26, f7, rtz # perform operation
fnmsub.s f31, f10, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f10, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f10, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f10, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f10, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f10, f26, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xc0000000)
li x31, 0xb4a2e763019e6aad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0xad326f91ba08a139 # load x3 with value 0xad326f91ba08a139
sw x3, 0(x2) # store 0xad326f91ba08a139 in memory
flw f16, 0(x2) # load 0xad326f91ba08a139 from memory into f16
fnmsub.s f31, f11, f26, f16, dyn # perform operation
fnmsub.s f31, f11, f26, f16, rdn # perform operation
fnmsub.s f31, f11, f26, f16, rmm # perform operation
fnmsub.s f31, f11, f26, f16, rne # perform operation
fnmsub.s f31, f11, f26, f16, rtz # perform operation
fnmsub.s f31, f11, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f11, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f11, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f11, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f11, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f11, f26, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x800000)
li x26, 0x21eb10585cb8282a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
li x3, 0x8e23c049641b8775 # load x3 with value 0x8e23c049641b8775
sw x3, 0(x2) # store 0x8e23c049641b8775 in memory
flw f20, 0(x2) # load 0x8e23c049641b8775 from memory into f20
fnmsub.s f26, f7, f28, f20, dyn # perform operation
fnmsub.s f26, f7, f28, f20, rdn # perform operation
fnmsub.s f26, f7, f28, f20, rmm # perform operation
fnmsub.s f26, f7, f28, f20, rne # perform operation
fnmsub.s f26, f7, f28, f20, rtz # perform operation
fnmsub.s f26, f7, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f7, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f7, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f7, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f7, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f7, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80800000)
li x28, 0x65ff3133294f2d18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0x5af9255ae52b93d1 # load x3 with value 0x5af9255ae52b93d1
sw x3, 0(x2) # store 0x5af9255ae52b93d1 in memory
flw f26, 0(x2) # load 0x5af9255ae52b93d1 from memory into f26
fnmsub.s f28, f27, f24, f26, dyn # perform operation
fnmsub.s f28, f27, f24, f26, rdn # perform operation
fnmsub.s f28, f27, f24, f26, rmm # perform operation
fnmsub.s f28, f27, f24, f26, rne # perform operation
fnmsub.s f28, f27, f24, f26, rtz # perform operation
fnmsub.s f28, f27, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f27, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f27, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f27, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f27, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f27, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f7fffff)
li x28, 0xf0fa497734012da8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
li x3, 0x71362f175973a970 # load x3 with value 0x71362f175973a970
sw x3, 0(x2) # store 0x71362f175973a970 in memory
flw f18, 0(x2) # load 0x71362f175973a970 from memory into f18
fnmsub.s f28, f16, f27, f18, dyn # perform operation
fnmsub.s f28, f16, f27, f18, rdn # perform operation
fnmsub.s f28, f16, f27, f18, rmm # perform operation
fnmsub.s f28, f16, f27, f18, rne # perform operation
fnmsub.s f28, f16, f27, f18, rtz # perform operation
fnmsub.s f28, f16, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f16, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f16, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f16, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f16, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f16, f27, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff7fffff)
li x23, 0x08615285b4c31ec5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0x317701dd2e83021a # load x3 with value 0x317701dd2e83021a
sw x3, 0(x2) # store 0x317701dd2e83021a in memory
flw f31, 0(x2) # load 0x317701dd2e83021a from memory into f31
fnmsub.s f23, f7, f30, f31, dyn # perform operation
fnmsub.s f23, f7, f30, f31, rdn # perform operation
fnmsub.s f23, f7, f30, f31, rmm # perform operation
fnmsub.s f23, f7, f30, f31, rne # perform operation
fnmsub.s f23, f7, f30, f31, rtz # perform operation
fnmsub.s f23, f7, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f7, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f7, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f7, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f7, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f7, f30, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffff)
li x31, 0x52c2cc54fcaa8dc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
li x3, 0x453276090295c6fb # load x3 with value 0x453276090295c6fb
sw x3, 0(x2) # store 0x453276090295c6fb in memory
flw f19, 0(x2) # load 0x453276090295c6fb from memory into f19
fnmsub.s f31, f24, f18, f19, dyn # perform operation
fnmsub.s f31, f24, f18, f19, rdn # perform operation
fnmsub.s f31, f24, f18, f19, rmm # perform operation
fnmsub.s f31, f24, f18, f19, rne # perform operation
fnmsub.s f31, f24, f18, f19, rtz # perform operation
fnmsub.s f31, f24, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f24, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f24, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f24, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f24, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f24, f18, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x807fffff)
li x19, 0x5569e36a8454bc4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
li x3, 0x3cc28c48df3769b0 # load x3 with value 0x3cc28c48df3769b0
sw x3, 0(x2) # store 0x3cc28c48df3769b0 in memory
flw f22, 0(x2) # load 0x3cc28c48df3769b0 from memory into f22
fnmsub.s f19, f8, f13, f22, dyn # perform operation
fnmsub.s f19, f8, f13, f22, rdn # perform operation
fnmsub.s f19, f8, f13, f22, rmm # perform operation
fnmsub.s f19, f8, f13, f22, rne # perform operation
fnmsub.s f19, f8, f13, f22, rtz # perform operation
fnmsub.s f19, f8, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f8, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f8, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f8, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f8, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f8, f13, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x400000)
li x9, 0x4b08e894573298b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x908d418437e6f6f0 # load x3 with value 0x908d418437e6f6f0
sw x3, 0(x2) # store 0x908d418437e6f6f0 in memory
flw f28, 0(x2) # load 0x908d418437e6f6f0 from memory into f28
fnmsub.s f9, f25, f4, f28, dyn # perform operation
fnmsub.s f9, f25, f4, f28, rdn # perform operation
fnmsub.s f9, f25, f4, f28, rmm # perform operation
fnmsub.s f9, f25, f4, f28, rne # perform operation
fnmsub.s f9, f25, f4, f28, rtz # perform operation
fnmsub.s f9, f25, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f25, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f25, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f25, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f25, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f25, f4, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80400000)
li x5, 0xe3bad3d00a77ded2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
li x3, 0xfe92677f2bc7d6d2 # load x3 with value 0xfe92677f2bc7d6d2
sw x3, 0(x2) # store 0xfe92677f2bc7d6d2 in memory
flw f19, 0(x2) # load 0xfe92677f2bc7d6d2 from memory into f19
fnmsub.s f5, f24, f21, f19, dyn # perform operation
fnmsub.s f5, f24, f21, f19, rdn # perform operation
fnmsub.s f5, f24, f21, f19, rmm # perform operation
fnmsub.s f5, f24, f21, f19, rne # perform operation
fnmsub.s f5, f24, f21, f19, rtz # perform operation
fnmsub.s f5, f24, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f24, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f24, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f24, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f24, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f24, f21, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x1)
li x25, 0x702eb859ee8822b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
li x3, 0x8e1e829b117228fa # load x3 with value 0x8e1e829b117228fa
sw x3, 0(x2) # store 0x8e1e829b117228fa in memory
flw f24, 0(x2) # load 0x8e1e829b117228fa from memory into f24
fnmsub.s f25, f29, f9, f24, dyn # perform operation
fnmsub.s f25, f29, f9, f24, rdn # perform operation
fnmsub.s f25, f29, f9, f24, rmm # perform operation
fnmsub.s f25, f29, f9, f24, rne # perform operation
fnmsub.s f25, f29, f9, f24, rtz # perform operation
fnmsub.s f25, f29, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f29, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f29, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f29, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f29, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f29, f9, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000001)
li x18, 0x0554d6c4b2f41651 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0x9ad13b101fd59bdf # load x3 with value 0x9ad13b101fd59bdf
sw x3, 0(x2) # store 0x9ad13b101fd59bdf in memory
flw f8, 0(x2) # load 0x9ad13b101fd59bdf from memory into f8
fnmsub.s f18, f9, f26, f8, dyn # perform operation
fnmsub.s f18, f9, f26, f8, rdn # perform operation
fnmsub.s f18, f9, f26, f8, rmm # perform operation
fnmsub.s f18, f9, f26, f8, rne # perform operation
fnmsub.s f18, f9, f26, f8, rtz # perform operation
fnmsub.s f18, f9, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f9, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f9, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f9, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f9, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f9, f26, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800000)
li x17, 0x32d2e2c5df57e989 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
li x3, 0xa371427dab9617c2 # load x3 with value 0xa371427dab9617c2
sw x3, 0(x2) # store 0xa371427dab9617c2 in memory
flw f13, 0(x2) # load 0xa371427dab9617c2 from memory into f13
fnmsub.s f17, f3, f12, f13, dyn # perform operation
fnmsub.s f17, f3, f12, f13, rdn # perform operation
fnmsub.s f17, f3, f12, f13, rmm # perform operation
fnmsub.s f17, f3, f12, f13, rne # perform operation
fnmsub.s f17, f3, f12, f13, rtz # perform operation
fnmsub.s f17, f3, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f3, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f3, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f3, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f3, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f3, f12, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff800000)
li x20, 0x7f02057d3e9764c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0xc97aca4912ecd7a8 # load x3 with value 0xc97aca4912ecd7a8
sw x3, 0(x2) # store 0xc97aca4912ecd7a8 in memory
flw f2, 0(x2) # load 0xc97aca4912ecd7a8 from memory into f2
fnmsub.s f20, f13, f21, f2, dyn # perform operation
fnmsub.s f20, f13, f21, f2, rdn # perform operation
fnmsub.s f20, f13, f21, f2, rmm # perform operation
fnmsub.s f20, f13, f21, f2, rne # perform operation
fnmsub.s f20, f13, f21, f2, rtz # perform operation
fnmsub.s f20, f13, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f13, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f13, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f13, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f13, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f13, f21, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fc00000)
li x27, 0x3ce0dfebf3adbfa1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0xe6338c3654a98341 # load x3 with value 0xe6338c3654a98341
sw x3, 0(x2) # store 0xe6338c3654a98341 in memory
flw f7, 0(x2) # load 0xe6338c3654a98341 from memory into f7
fnmsub.s f27, f3, f31, f7, dyn # perform operation
fnmsub.s f27, f3, f31, f7, rdn # perform operation
fnmsub.s f27, f3, f31, f7, rmm # perform operation
fnmsub.s f27, f3, f31, f7, rne # perform operation
fnmsub.s f27, f3, f31, f7, rtz # perform operation
fnmsub.s f27, f3, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f3, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f3, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f3, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f3, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f3, f31, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffffff)
li x28, 0x598a8b112391b7a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0xf93b813f9b745f12 # load x3 with value 0xf93b813f9b745f12
sw x3, 0(x2) # store 0xf93b813f9b745f12 in memory
flw f9, 0(x2) # load 0xf93b813f9b745f12 from memory into f9
fnmsub.s f28, f13, f10, f9, dyn # perform operation
fnmsub.s f28, f13, f10, f9, rdn # perform operation
fnmsub.s f28, f13, f10, f9, rmm # perform operation
fnmsub.s f28, f13, f10, f9, rne # perform operation
fnmsub.s f28, f13, f10, f9, rtz # perform operation
fnmsub.s f28, f13, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f13, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f13, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f13, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f13, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f13, f10, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800001)
li x15, 0xb3c5a93d77a84439 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0x36192be7efcdf8b5 # load x3 with value 0x36192be7efcdf8b5
sw x3, 0(x2) # store 0x36192be7efcdf8b5 in memory
flw f18, 0(x2) # load 0x36192be7efcdf8b5 from memory into f18
fnmsub.s f15, f10, f13, f18, dyn # perform operation
fnmsub.s f15, f10, f13, f18, rdn # perform operation
fnmsub.s f15, f10, f13, f18, rmm # perform operation
fnmsub.s f15, f10, f13, f18, rne # perform operation
fnmsub.s f15, f10, f13, f18, rtz # perform operation
fnmsub.s f15, f10, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f10, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f10, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f10, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f10, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f10, f13, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fbfffff)
li x13, 0x6925728b57e87dae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
li x3, 0x71a01f250bfc6779 # load x3 with value 0x71a01f250bfc6779
sw x3, 0(x2) # store 0x71a01f250bfc6779 in memory
flw f26, 0(x2) # load 0x71a01f250bfc6779 from memory into f26
fnmsub.s f13, f11, f10, f26, dyn # perform operation
fnmsub.s f13, f11, f10, f26, rdn # perform operation
fnmsub.s f13, f11, f10, f26, rmm # perform operation
fnmsub.s f13, f11, f10, f26, rne # perform operation
fnmsub.s f13, f11, f10, f26, rtz # perform operation
fnmsub.s f13, f11, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f11, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f11, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f11, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f11, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f11, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7ef8654f)
li x13, 0x0b80e107a73e99d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
li x3, 0xa997a62e83bc59d5 # load x3 with value 0xa997a62e83bc59d5
sw x3, 0(x2) # store 0xa997a62e83bc59d5 in memory
flw f30, 0(x2) # load 0xa997a62e83bc59d5 from memory into f30
fnmsub.s f13, f1, f16, f30, dyn # perform operation
fnmsub.s f13, f1, f16, f30, rdn # perform operation
fnmsub.s f13, f1, f16, f30, rmm # perform operation
fnmsub.s f13, f1, f16, f30, rne # perform operation
fnmsub.s f13, f1, f16, f30, rtz # perform operation
fnmsub.s f13, f1, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f1, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f1, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f1, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f1, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f1, f16, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x813d9ab0)
li x27, 0x8a0a6f5ada2d57af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0x6b157989689b5aa3 # load x3 with value 0x6b157989689b5aa3
sw x3, 0(x2) # store 0x6b157989689b5aa3 in memory
flw f24, 0(x2) # load 0x6b157989689b5aa3 from memory into f24
fnmsub.s f27, f12, f21, f24, dyn # perform operation
fnmsub.s f27, f12, f21, f24, rdn # perform operation
fnmsub.s f27, f12, f21, f24, rmm # perform operation
fnmsub.s f27, f12, f21, f24, rne # perform operation
fnmsub.s f27, f12, f21, f24, rtz # perform operation
fnmsub.s f27, f12, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f12, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f12, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f12, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f12, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f12, f21, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x0)
li x2, 0x2d467b611e94b77c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x97b43f60d9208821 # load x3 with value 0x97b43f60d9208821
sw x3, 0(x2) # store 0x97b43f60d9208821 in memory
flw f29, 0(x2) # load 0x97b43f60d9208821 from memory into f29
fnmsub.s f2, f21, f16, f29, dyn # perform operation
fnmsub.s f2, f21, f16, f29, rdn # perform operation
fnmsub.s f2, f21, f16, f29, rmm # perform operation
fnmsub.s f2, f21, f16, f29, rne # perform operation
fnmsub.s f2, f21, f16, f29, rtz # perform operation
fnmsub.s f2, f21, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f21, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000000)
li x26, 0x6c5b34ed8c0ed72d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0xa4e4d1d3b3ce1526 # load x3 with value 0xa4e4d1d3b3ce1526
sw x3, 0(x2) # store 0xa4e4d1d3b3ce1526 in memory
flw f21, 0(x2) # load 0xa4e4d1d3b3ce1526 from memory into f21
fnmsub.s f26, f19, f16, f21, dyn # perform operation
fnmsub.s f26, f19, f16, f21, rdn # perform operation
fnmsub.s f26, f19, f16, f21, rmm # perform operation
fnmsub.s f26, f19, f16, f21, rne # perform operation
fnmsub.s f26, f19, f16, f21, rtz # perform operation
fnmsub.s f26, f19, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f19, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f19, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f19, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f19, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f19, f16, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3f800000)
li x27, 0xf0ffa70e767add35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0x30dd2bcf04d35c25 # load x3 with value 0x30dd2bcf04d35c25
sw x3, 0(x2) # store 0x30dd2bcf04d35c25 in memory
flw f19, 0(x2) # load 0x30dd2bcf04d35c25 from memory into f19
fnmsub.s f27, f13, f7, f19, dyn # perform operation
fnmsub.s f27, f13, f7, f19, rdn # perform operation
fnmsub.s f27, f13, f7, f19, rmm # perform operation
fnmsub.s f27, f13, f7, f19, rne # perform operation
fnmsub.s f27, f13, f7, f19, rtz # perform operation
fnmsub.s f27, f13, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f13, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f13, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f13, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f13, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f13, f7, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbf800000)
li x28, 0x9611e689f37d6011 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0x10a04c6ba94f51d3 # load x3 with value 0x10a04c6ba94f51d3
sw x3, 0(x2) # store 0x10a04c6ba94f51d3 in memory
flw f16, 0(x2) # load 0x10a04c6ba94f51d3 from memory into f16
fnmsub.s f28, f9, f30, f16, dyn # perform operation
fnmsub.s f28, f9, f30, f16, rdn # perform operation
fnmsub.s f28, f9, f30, f16, rmm # perform operation
fnmsub.s f28, f9, f30, f16, rne # perform operation
fnmsub.s f28, f9, f30, f16, rtz # perform operation
fnmsub.s f28, f9, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f9, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f9, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f9, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f9, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f9, f30, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3fc00000)
li x6, 0xb4c3972e6b185ee9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0xc086195e6153e0be # load x3 with value 0xc086195e6153e0be
sw x3, 0(x2) # store 0xc086195e6153e0be in memory
flw f27, 0(x2) # load 0xc086195e6153e0be from memory into f27
fnmsub.s f6, f9, f13, f27, dyn # perform operation
fnmsub.s f6, f9, f13, f27, rdn # perform operation
fnmsub.s f6, f9, f13, f27, rmm # perform operation
fnmsub.s f6, f9, f13, f27, rne # perform operation
fnmsub.s f6, f9, f13, f27, rtz # perform operation
fnmsub.s f6, f9, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f9, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f9, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f9, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f9, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f9, f13, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbfc00000)
li x23, 0x0a970f185d2211cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0x87d8792e5b0c0a50 # load x3 with value 0x87d8792e5b0c0a50
sw x3, 0(x2) # store 0x87d8792e5b0c0a50 in memory
flw f5, 0(x2) # load 0x87d8792e5b0c0a50 from memory into f5
fnmsub.s f23, f10, f26, f5, dyn # perform operation
fnmsub.s f23, f10, f26, f5, rdn # perform operation
fnmsub.s f23, f10, f26, f5, rmm # perform operation
fnmsub.s f23, f10, f26, f5, rne # perform operation
fnmsub.s f23, f10, f26, f5, rtz # perform operation
fnmsub.s f23, f10, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f10, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f10, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f10, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f10, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f10, f26, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x40000000)
li x24, 0x27f471ce279d8a3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
li x3, 0xea536ab3601694b0 # load x3 with value 0xea536ab3601694b0
sw x3, 0(x2) # store 0xea536ab3601694b0 in memory
flw f11, 0(x2) # load 0xea536ab3601694b0 from memory into f11
fnmsub.s f24, f31, f21, f11, dyn # perform operation
fnmsub.s f24, f31, f21, f11, rdn # perform operation
fnmsub.s f24, f31, f21, f11, rmm # perform operation
fnmsub.s f24, f31, f21, f11, rne # perform operation
fnmsub.s f24, f31, f21, f11, rtz # perform operation
fnmsub.s f24, f31, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f31, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f31, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f31, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f31, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f31, f21, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xc0000000)
li x6, 0x99bd957b7c2766f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
li x3, 0x44d233a35295ac4d # load x3 with value 0x44d233a35295ac4d
sw x3, 0(x2) # store 0x44d233a35295ac4d in memory
flw f29, 0(x2) # load 0x44d233a35295ac4d from memory into f29
fnmsub.s f6, f11, f5, f29, dyn # perform operation
fnmsub.s f6, f11, f5, f29, rdn # perform operation
fnmsub.s f6, f11, f5, f29, rmm # perform operation
fnmsub.s f6, f11, f5, f29, rne # perform operation
fnmsub.s f6, f11, f5, f29, rtz # perform operation
fnmsub.s f6, f11, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f11, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f11, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f11, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f11, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f11, f5, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x800000)
li x15, 0x6e41e765bb09d7e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0x634fbb82503e5886 # load x3 with value 0x634fbb82503e5886
sw x3, 0(x2) # store 0x634fbb82503e5886 in memory
flw f13, 0(x2) # load 0x634fbb82503e5886 from memory into f13
fnmsub.s f15, f17, f27, f13, dyn # perform operation
fnmsub.s f15, f17, f27, f13, rdn # perform operation
fnmsub.s f15, f17, f27, f13, rmm # perform operation
fnmsub.s f15, f17, f27, f13, rne # perform operation
fnmsub.s f15, f17, f27, f13, rtz # perform operation
fnmsub.s f15, f17, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f17, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f17, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f17, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f17, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f17, f27, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80800000)
li x29, 0x4243a29837c68632 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0x82721a73c74e453e # load x3 with value 0x82721a73c74e453e
sw x3, 0(x2) # store 0x82721a73c74e453e in memory
flw f2, 0(x2) # load 0x82721a73c74e453e from memory into f2
fnmsub.s f29, f23, f27, f2, dyn # perform operation
fnmsub.s f29, f23, f27, f2, rdn # perform operation
fnmsub.s f29, f23, f27, f2, rmm # perform operation
fnmsub.s f29, f23, f27, f2, rne # perform operation
fnmsub.s f29, f23, f27, f2, rtz # perform operation
fnmsub.s f29, f23, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f23, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f23, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f23, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f23, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f23, f27, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f7fffff)
li x23, 0x28973e046563425e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
li x3, 0x155ea6e6c6bef7d5 # load x3 with value 0x155ea6e6c6bef7d5
sw x3, 0(x2) # store 0x155ea6e6c6bef7d5 in memory
flw f8, 0(x2) # load 0x155ea6e6c6bef7d5 from memory into f8
fnmsub.s f23, f21, f17, f8, dyn # perform operation
fnmsub.s f23, f21, f17, f8, rdn # perform operation
fnmsub.s f23, f21, f17, f8, rmm # perform operation
fnmsub.s f23, f21, f17, f8, rne # perform operation
fnmsub.s f23, f21, f17, f8, rtz # perform operation
fnmsub.s f23, f21, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f21, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f21, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f21, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f21, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f21, f17, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff7fffff)
li x3, 0xb14bfba1cf3e0bb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0x3991d28c93b04d19 # load x3 with value 0x3991d28c93b04d19
sw x3, 0(x2) # store 0x3991d28c93b04d19 in memory
flw f4, 0(x2) # load 0x3991d28c93b04d19 from memory into f4
fnmsub.s f3, f31, f18, f4, dyn # perform operation
fnmsub.s f3, f31, f18, f4, rdn # perform operation
fnmsub.s f3, f31, f18, f4, rmm # perform operation
fnmsub.s f3, f31, f18, f4, rne # perform operation
fnmsub.s f3, f31, f18, f4, rtz # perform operation
fnmsub.s f3, f31, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f31, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f31, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f31, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f31, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f31, f18, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffff)
li x25, 0x1bbc95ead0b8096a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0x363cdf97e7d3fa76 # load x3 with value 0x363cdf97e7d3fa76
sw x3, 0(x2) # store 0x363cdf97e7d3fa76 in memory
flw f9, 0(x2) # load 0x363cdf97e7d3fa76 from memory into f9
fnmsub.s f25, f17, f20, f9, dyn # perform operation
fnmsub.s f25, f17, f20, f9, rdn # perform operation
fnmsub.s f25, f17, f20, f9, rmm # perform operation
fnmsub.s f25, f17, f20, f9, rne # perform operation
fnmsub.s f25, f17, f20, f9, rtz # perform operation
fnmsub.s f25, f17, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f17, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f17, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f17, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f17, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f17, f20, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x807fffff)
li x15, 0x8053a2d2a67e9967 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0x989d8987c73b29ac # load x3 with value 0x989d8987c73b29ac
sw x3, 0(x2) # store 0x989d8987c73b29ac in memory
flw f10, 0(x2) # load 0x989d8987c73b29ac from memory into f10
fnmsub.s f15, f1, f21, f10, dyn # perform operation
fnmsub.s f15, f1, f21, f10, rdn # perform operation
fnmsub.s f15, f1, f21, f10, rmm # perform operation
fnmsub.s f15, f1, f21, f10, rne # perform operation
fnmsub.s f15, f1, f21, f10, rtz # perform operation
fnmsub.s f15, f1, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f1, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f1, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f1, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f1, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f1, f21, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x400000)
li x20, 0xbd1747c6ecc12029 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0x683e23735cd5cafb # load x3 with value 0x683e23735cd5cafb
sw x3, 0(x2) # store 0x683e23735cd5cafb in memory
flw f26, 0(x2) # load 0x683e23735cd5cafb from memory into f26
fnmsub.s f20, f31, f30, f26, dyn # perform operation
fnmsub.s f20, f31, f30, f26, rdn # perform operation
fnmsub.s f20, f31, f30, f26, rmm # perform operation
fnmsub.s f20, f31, f30, f26, rne # perform operation
fnmsub.s f20, f31, f30, f26, rtz # perform operation
fnmsub.s f20, f31, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f31, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f31, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f31, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f31, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f31, f30, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80400000)
li x12, 0x69281305c7c292cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0x36ac191b37df68b6 # load x3 with value 0x36ac191b37df68b6
sw x3, 0(x2) # store 0x36ac191b37df68b6 in memory
flw f31, 0(x2) # load 0x36ac191b37df68b6 from memory into f31
fnmsub.s f12, f6, f13, f31, dyn # perform operation
fnmsub.s f12, f6, f13, f31, rdn # perform operation
fnmsub.s f12, f6, f13, f31, rmm # perform operation
fnmsub.s f12, f6, f13, f31, rne # perform operation
fnmsub.s f12, f6, f13, f31, rtz # perform operation
fnmsub.s f12, f6, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f6, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f6, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f6, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f6, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f6, f13, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x1)
li x18, 0x199549f0eca817bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x1a308864c6ba31b3 # load x3 with value 0x1a308864c6ba31b3
sw x3, 0(x2) # store 0x1a308864c6ba31b3 in memory
flw f5, 0(x2) # load 0x1a308864c6ba31b3 from memory into f5
fnmsub.s f18, f22, f7, f5, dyn # perform operation
fnmsub.s f18, f22, f7, f5, rdn # perform operation
fnmsub.s f18, f22, f7, f5, rmm # perform operation
fnmsub.s f18, f22, f7, f5, rne # perform operation
fnmsub.s f18, f22, f7, f5, rtz # perform operation
fnmsub.s f18, f22, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f22, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f22, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f22, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f22, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f22, f7, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000001)
li x3, 0xdf7160c19c353c6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
li x3, 0x6de5b4f664d1c1a9 # load x3 with value 0x6de5b4f664d1c1a9
sw x3, 0(x2) # store 0x6de5b4f664d1c1a9 in memory
flw f18, 0(x2) # load 0x6de5b4f664d1c1a9 from memory into f18
fnmsub.s f3, f20, f10, f18, dyn # perform operation
fnmsub.s f3, f20, f10, f18, rdn # perform operation
fnmsub.s f3, f20, f10, f18, rmm # perform operation
fnmsub.s f3, f20, f10, f18, rne # perform operation
fnmsub.s f3, f20, f10, f18, rtz # perform operation
fnmsub.s f3, f20, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f20, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f20, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f20, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f20, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f20, f10, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800000)
li x29, 0x42f7a1cc4c85fe20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
li x3, 0xcd48559941ddb01e # load x3 with value 0xcd48559941ddb01e
sw x3, 0(x2) # store 0xcd48559941ddb01e in memory
flw f28, 0(x2) # load 0xcd48559941ddb01e from memory into f28
fnmsub.s f29, f21, f12, f28, dyn # perform operation
fnmsub.s f29, f21, f12, f28, rdn # perform operation
fnmsub.s f29, f21, f12, f28, rmm # perform operation
fnmsub.s f29, f21, f12, f28, rne # perform operation
fnmsub.s f29, f21, f12, f28, rtz # perform operation
fnmsub.s f29, f21, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f21, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f21, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f21, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f21, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f21, f12, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff800000)
li x31, 0x7ca7210e8edd70d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0xd0517c6c76e0f947 # load x3 with value 0xd0517c6c76e0f947
sw x3, 0(x2) # store 0xd0517c6c76e0f947 in memory
flw f8, 0(x2) # load 0xd0517c6c76e0f947 from memory into f8
fnmsub.s f31, f18, f14, f8, dyn # perform operation
fnmsub.s f31, f18, f14, f8, rdn # perform operation
fnmsub.s f31, f18, f14, f8, rmm # perform operation
fnmsub.s f31, f18, f14, f8, rne # perform operation
fnmsub.s f31, f18, f14, f8, rtz # perform operation
fnmsub.s f31, f18, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f18, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f18, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f18, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f18, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f18, f14, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fc00000)
li x9, 0xaf9e4f40f840f977 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x4824eb396d0f606 # load x3 with value 0x4824eb396d0f606
sw x3, 0(x2) # store 0x4824eb396d0f606 in memory
flw f16, 0(x2) # load 0x4824eb396d0f606 from memory into f16
fnmsub.s f9, f2, f23, f16, dyn # perform operation
fnmsub.s f9, f2, f23, f16, rdn # perform operation
fnmsub.s f9, f2, f23, f16, rmm # perform operation
fnmsub.s f9, f2, f23, f16, rne # perform operation
fnmsub.s f9, f2, f23, f16, rtz # perform operation
fnmsub.s f9, f2, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f2, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f2, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f2, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f2, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f2, f23, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffffff)
li x18, 0x84a94c15ba9b98f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0xcc90b18b21d63777 # load x3 with value 0xcc90b18b21d63777
sw x3, 0(x2) # store 0xcc90b18b21d63777 in memory
flw f5, 0(x2) # load 0xcc90b18b21d63777 from memory into f5
fnmsub.s f18, f22, f3, f5, dyn # perform operation
fnmsub.s f18, f22, f3, f5, rdn # perform operation
fnmsub.s f18, f22, f3, f5, rmm # perform operation
fnmsub.s f18, f22, f3, f5, rne # perform operation
fnmsub.s f18, f22, f3, f5, rtz # perform operation
fnmsub.s f18, f22, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f22, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f22, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f22, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f22, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f22, f3, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800001)
li x31, 0x234923f83d1e8a09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0x279dcddb1f803f67 # load x3 with value 0x279dcddb1f803f67
sw x3, 0(x2) # store 0x279dcddb1f803f67 in memory
flw f11, 0(x2) # load 0x279dcddb1f803f67 from memory into f11
fnmsub.s f31, f16, f18, f11, dyn # perform operation
fnmsub.s f31, f16, f18, f11, rdn # perform operation
fnmsub.s f31, f16, f18, f11, rmm # perform operation
fnmsub.s f31, f16, f18, f11, rne # perform operation
fnmsub.s f31, f16, f18, f11, rtz # perform operation
fnmsub.s f31, f16, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f16, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f16, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f16, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f16, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f16, f18, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fbfffff)
li x15, 0xd94bd263c5aa3e39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0x27e8d4bd54535495 # load x3 with value 0x27e8d4bd54535495
sw x3, 0(x2) # store 0x27e8d4bd54535495 in memory
flw f13, 0(x2) # load 0x27e8d4bd54535495 from memory into f13
fnmsub.s f15, f21, f25, f13, dyn # perform operation
fnmsub.s f15, f21, f25, f13, rdn # perform operation
fnmsub.s f15, f21, f25, f13, rmm # perform operation
fnmsub.s f15, f21, f25, f13, rne # perform operation
fnmsub.s f15, f21, f25, f13, rtz # perform operation
fnmsub.s f15, f21, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f21, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f21, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f21, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f21, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f21, f25, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7ef8654f)
li x10, 0x20a88e8e0562cec4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
li x3, 0xb6c05afccc9e213f # load x3 with value 0xb6c05afccc9e213f
sw x3, 0(x2) # store 0xb6c05afccc9e213f in memory
flw f15, 0(x2) # load 0xb6c05afccc9e213f from memory into f15
fnmsub.s f10, f31, f19, f15, dyn # perform operation
fnmsub.s f10, f31, f19, f15, rdn # perform operation
fnmsub.s f10, f31, f19, f15, rmm # perform operation
fnmsub.s f10, f31, f19, f15, rne # perform operation
fnmsub.s f10, f31, f19, f15, rtz # perform operation
fnmsub.s f10, f31, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f31, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f31, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f31, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f31, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f31, f19, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x813d9ab0)
li x30, 0xdf78725b0564b0ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
li x3, 0x85f8dcbea0f4c7a3 # load x3 with value 0x85f8dcbea0f4c7a3
sw x3, 0(x2) # store 0x85f8dcbea0f4c7a3 in memory
flw f2, 0(x2) # load 0x85f8dcbea0f4c7a3 from memory into f2
fnmsub.s f30, f10, f3, f2, dyn # perform operation
fnmsub.s f30, f10, f3, f2, rdn # perform operation
fnmsub.s f30, f10, f3, f2, rmm # perform operation
fnmsub.s f30, f10, f3, f2, rne # perform operation
fnmsub.s f30, f10, f3, f2, rtz # perform operation
fnmsub.s f30, f10, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f10, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f10, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f10, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f10, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f10, f3, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x0)
li x1, 0x8d6276c4e69a03a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0x8c19aac9976b3a27 # load x3 with value 0x8c19aac9976b3a27
sw x3, 0(x2) # store 0x8c19aac9976b3a27 in memory
flw f4, 0(x2) # load 0x8c19aac9976b3a27 from memory into f4
fnmsub.s f1, f21, f28, f4, dyn # perform operation
fnmsub.s f1, f21, f28, f4, rdn # perform operation
fnmsub.s f1, f21, f28, f4, rmm # perform operation
fnmsub.s f1, f21, f28, f4, rne # perform operation
fnmsub.s f1, f21, f28, f4, rtz # perform operation
fnmsub.s f1, f21, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f21, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f21, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f21, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f21, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f21, f28, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000000)
li x26, 0x1d8ef446419c1e4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
li x3, 0xa94f51d0868e41fb # load x3 with value 0xa94f51d0868e41fb
sw x3, 0(x2) # store 0xa94f51d0868e41fb in memory
flw f17, 0(x2) # load 0xa94f51d0868e41fb from memory into f17
fnmsub.s f26, f30, f12, f17, dyn # perform operation
fnmsub.s f26, f30, f12, f17, rdn # perform operation
fnmsub.s f26, f30, f12, f17, rmm # perform operation
fnmsub.s f26, f30, f12, f17, rne # perform operation
fnmsub.s f26, f30, f12, f17, rtz # perform operation
fnmsub.s f26, f30, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f30, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f30, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f30, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f30, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f30, f12, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3f800000)
li x3, 0x756f70d6a4365fbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x8da3a2d7dc35ba69 # load x3 with value 0x8da3a2d7dc35ba69
sw x3, 0(x2) # store 0x8da3a2d7dc35ba69 in memory
flw f18, 0(x2) # load 0x8da3a2d7dc35ba69 from memory into f18
fnmsub.s f3, f31, f21, f18, dyn # perform operation
fnmsub.s f3, f31, f21, f18, rdn # perform operation
fnmsub.s f3, f31, f21, f18, rmm # perform operation
fnmsub.s f3, f31, f21, f18, rne # perform operation
fnmsub.s f3, f31, f21, f18, rtz # perform operation
fnmsub.s f3, f31, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f31, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f31, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f31, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f31, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f31, f21, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbf800000)
li x13, 0x2170b764f1296b72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0x8e0fe47861c58355 # load x3 with value 0x8e0fe47861c58355
sw x3, 0(x2) # store 0x8e0fe47861c58355 in memory
flw f26, 0(x2) # load 0x8e0fe47861c58355 from memory into f26
fnmsub.s f13, f18, f21, f26, dyn # perform operation
fnmsub.s f13, f18, f21, f26, rdn # perform operation
fnmsub.s f13, f18, f21, f26, rmm # perform operation
fnmsub.s f13, f18, f21, f26, rne # perform operation
fnmsub.s f13, f18, f21, f26, rtz # perform operation
fnmsub.s f13, f18, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f18, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f18, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f18, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f18, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f18, f21, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3fc00000)
li x7, 0x6a65ec94e331ab1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0xc790ee17d1834b82 # load x3 with value 0xc790ee17d1834b82
sw x3, 0(x2) # store 0xc790ee17d1834b82 in memory
flw f21, 0(x2) # load 0xc790ee17d1834b82 from memory into f21
fnmsub.s f7, f26, f9, f21, dyn # perform operation
fnmsub.s f7, f26, f9, f21, rdn # perform operation
fnmsub.s f7, f26, f9, f21, rmm # perform operation
fnmsub.s f7, f26, f9, f21, rne # perform operation
fnmsub.s f7, f26, f9, f21, rtz # perform operation
fnmsub.s f7, f26, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f26, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f26, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f26, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f26, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f26, f9, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbfc00000)
li x30, 0x6464d9abb054c964 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0x1439bf22024b0e9b # load x3 with value 0x1439bf22024b0e9b
sw x3, 0(x2) # store 0x1439bf22024b0e9b in memory
flw f23, 0(x2) # load 0x1439bf22024b0e9b from memory into f23
fnmsub.s f30, f14, f1, f23, dyn # perform operation
fnmsub.s f30, f14, f1, f23, rdn # perform operation
fnmsub.s f30, f14, f1, f23, rmm # perform operation
fnmsub.s f30, f14, f1, f23, rne # perform operation
fnmsub.s f30, f14, f1, f23, rtz # perform operation
fnmsub.s f30, f14, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f14, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f14, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f14, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f14, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f14, f1, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x40000000)
li x9, 0xc971a1b552fa8004 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0x25033b18fac12190 # load x3 with value 0x25033b18fac12190
sw x3, 0(x2) # store 0x25033b18fac12190 in memory
flw f20, 0(x2) # load 0x25033b18fac12190 from memory into f20
fnmsub.s f9, f30, f26, f20, dyn # perform operation
fnmsub.s f9, f30, f26, f20, rdn # perform operation
fnmsub.s f9, f30, f26, f20, rmm # perform operation
fnmsub.s f9, f30, f26, f20, rne # perform operation
fnmsub.s f9, f30, f26, f20, rtz # perform operation
fnmsub.s f9, f30, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f30, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f30, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f30, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f30, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f30, f26, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xc0000000)
li x10, 0x7210c74712e4b15e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0x2c42aa3a0903d3a3 # load x3 with value 0x2c42aa3a0903d3a3
sw x3, 0(x2) # store 0x2c42aa3a0903d3a3 in memory
flw f30, 0(x2) # load 0x2c42aa3a0903d3a3 from memory into f30
fnmsub.s f10, f2, f29, f30, dyn # perform operation
fnmsub.s f10, f2, f29, f30, rdn # perform operation
fnmsub.s f10, f2, f29, f30, rmm # perform operation
fnmsub.s f10, f2, f29, f30, rne # perform operation
fnmsub.s f10, f2, f29, f30, rtz # perform operation
fnmsub.s f10, f2, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f2, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f2, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f2, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f2, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f2, f29, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x800000)
li x17, 0xa649bc2cf7eee4fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0xdbbb2255b19321a0 # load x3 with value 0xdbbb2255b19321a0
sw x3, 0(x2) # store 0xdbbb2255b19321a0 in memory
flw f7, 0(x2) # load 0xdbbb2255b19321a0 from memory into f7
fnmsub.s f17, f23, f18, f7, dyn # perform operation
fnmsub.s f17, f23, f18, f7, rdn # perform operation
fnmsub.s f17, f23, f18, f7, rmm # perform operation
fnmsub.s f17, f23, f18, f7, rne # perform operation
fnmsub.s f17, f23, f18, f7, rtz # perform operation
fnmsub.s f17, f23, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f23, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f23, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f23, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f23, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f23, f18, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80800000)
li x19, 0x2950ed632e68b7c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
li x3, 0x33ae68764f4de09d # load x3 with value 0x33ae68764f4de09d
sw x3, 0(x2) # store 0x33ae68764f4de09d in memory
flw f20, 0(x2) # load 0x33ae68764f4de09d from memory into f20
fnmsub.s f19, f16, f29, f20, dyn # perform operation
fnmsub.s f19, f16, f29, f20, rdn # perform operation
fnmsub.s f19, f16, f29, f20, rmm # perform operation
fnmsub.s f19, f16, f29, f20, rne # perform operation
fnmsub.s f19, f16, f29, f20, rtz # perform operation
fnmsub.s f19, f16, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f16, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f16, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f16, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f16, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f16, f29, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f7fffff)
li x30, 0xfb5816946108fa49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0x8ee10aade6c689 # load x3 with value 0x8ee10aade6c689
sw x3, 0(x2) # store 0x8ee10aade6c689 in memory
flw f12, 0(x2) # load 0x8ee10aade6c689 from memory into f12
fnmsub.s f30, f1, f24, f12, dyn # perform operation
fnmsub.s f30, f1, f24, f12, rdn # perform operation
fnmsub.s f30, f1, f24, f12, rmm # perform operation
fnmsub.s f30, f1, f24, f12, rne # perform operation
fnmsub.s f30, f1, f24, f12, rtz # perform operation
fnmsub.s f30, f1, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f1, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f1, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f1, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f1, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f1, f24, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff7fffff)
li x10, 0x0536a7d54164c0df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0xfec4f73b1e1ecece # load x3 with value 0xfec4f73b1e1ecece
sw x3, 0(x2) # store 0xfec4f73b1e1ecece in memory
flw f23, 0(x2) # load 0xfec4f73b1e1ecece from memory into f23
fnmsub.s f10, f4, f21, f23, dyn # perform operation
fnmsub.s f10, f4, f21, f23, rdn # perform operation
fnmsub.s f10, f4, f21, f23, rmm # perform operation
fnmsub.s f10, f4, f21, f23, rne # perform operation
fnmsub.s f10, f4, f21, f23, rtz # perform operation
fnmsub.s f10, f4, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f4, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f4, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f4, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f4, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f4, f21, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffff)
li x4, 0x3fb5d121d8f95315 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0xfb8ce52e14d8e241 # load x3 with value 0xfb8ce52e14d8e241
sw x3, 0(x2) # store 0xfb8ce52e14d8e241 in memory
flw f30, 0(x2) # load 0xfb8ce52e14d8e241 from memory into f30
fnmsub.s f4, f13, f19, f30, dyn # perform operation
fnmsub.s f4, f13, f19, f30, rdn # perform operation
fnmsub.s f4, f13, f19, f30, rmm # perform operation
fnmsub.s f4, f13, f19, f30, rne # perform operation
fnmsub.s f4, f13, f19, f30, rtz # perform operation
fnmsub.s f4, f13, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f13, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f13, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f13, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f13, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f13, f19, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x807fffff)
li x14, 0x4a9c223b02c2293c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
li x3, 0x360a8584cbfe8b25 # load x3 with value 0x360a8584cbfe8b25
sw x3, 0(x2) # store 0x360a8584cbfe8b25 in memory
flw f27, 0(x2) # load 0x360a8584cbfe8b25 from memory into f27
fnmsub.s f14, f9, f22, f27, dyn # perform operation
fnmsub.s f14, f9, f22, f27, rdn # perform operation
fnmsub.s f14, f9, f22, f27, rmm # perform operation
fnmsub.s f14, f9, f22, f27, rne # perform operation
fnmsub.s f14, f9, f22, f27, rtz # perform operation
fnmsub.s f14, f9, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f9, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f9, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f9, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f9, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f9, f22, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x400000)
li x23, 0x7022f81e87774165 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
li x3, 0xeef7d29936ea855 # load x3 with value 0xeef7d29936ea855
sw x3, 0(x2) # store 0xeef7d29936ea855 in memory
flw f30, 0(x2) # load 0xeef7d29936ea855 from memory into f30
fnmsub.s f23, f26, f31, f30, dyn # perform operation
fnmsub.s f23, f26, f31, f30, rdn # perform operation
fnmsub.s f23, f26, f31, f30, rmm # perform operation
fnmsub.s f23, f26, f31, f30, rne # perform operation
fnmsub.s f23, f26, f31, f30, rtz # perform operation
fnmsub.s f23, f26, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f26, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f26, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f26, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f26, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f26, f31, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80400000)
li x31, 0xbc500919e300a67d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0x59be44f5beaa79d5 # load x3 with value 0x59be44f5beaa79d5
sw x3, 0(x2) # store 0x59be44f5beaa79d5 in memory
flw f15, 0(x2) # load 0x59be44f5beaa79d5 from memory into f15
fnmsub.s f31, f1, f5, f15, dyn # perform operation
fnmsub.s f31, f1, f5, f15, rdn # perform operation
fnmsub.s f31, f1, f5, f15, rmm # perform operation
fnmsub.s f31, f1, f5, f15, rne # perform operation
fnmsub.s f31, f1, f5, f15, rtz # perform operation
fnmsub.s f31, f1, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f1, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f1, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f1, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f1, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f1, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x1)
li x22, 0x73bcde5aef5d8841 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
li x3, 0xb3bac477e751f73e # load x3 with value 0xb3bac477e751f73e
sw x3, 0(x2) # store 0xb3bac477e751f73e in memory
flw f17, 0(x2) # load 0xb3bac477e751f73e from memory into f17
fnmsub.s f22, f15, f28, f17, dyn # perform operation
fnmsub.s f22, f15, f28, f17, rdn # perform operation
fnmsub.s f22, f15, f28, f17, rmm # perform operation
fnmsub.s f22, f15, f28, f17, rne # perform operation
fnmsub.s f22, f15, f28, f17, rtz # perform operation
fnmsub.s f22, f15, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f15, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f15, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f15, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f15, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f15, f28, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000001)
li x11, 0xd04ae4d993477e52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0x3af64b04bb1764ad # load x3 with value 0x3af64b04bb1764ad
sw x3, 0(x2) # store 0x3af64b04bb1764ad in memory
flw f27, 0(x2) # load 0x3af64b04bb1764ad from memory into f27
fnmsub.s f11, f30, f5, f27, dyn # perform operation
fnmsub.s f11, f30, f5, f27, rdn # perform operation
fnmsub.s f11, f30, f5, f27, rmm # perform operation
fnmsub.s f11, f30, f5, f27, rne # perform operation
fnmsub.s f11, f30, f5, f27, rtz # perform operation
fnmsub.s f11, f30, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f30, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f30, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f30, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f30, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f30, f5, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800000)
li x22, 0x31e0fa9eb2c77eda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0xda83ee2b344763cc # load x3 with value 0xda83ee2b344763cc
sw x3, 0(x2) # store 0xda83ee2b344763cc in memory
flw f18, 0(x2) # load 0xda83ee2b344763cc from memory into f18
fnmsub.s f22, f16, f30, f18, dyn # perform operation
fnmsub.s f22, f16, f30, f18, rdn # perform operation
fnmsub.s f22, f16, f30, f18, rmm # perform operation
fnmsub.s f22, f16, f30, f18, rne # perform operation
fnmsub.s f22, f16, f30, f18, rtz # perform operation
fnmsub.s f22, f16, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f16, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f16, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f16, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f16, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f16, f30, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff800000)
li x3, 0x1aad8dc41cd0e27d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0x52ba4f2f12743b98 # load x3 with value 0x52ba4f2f12743b98
sw x3, 0(x2) # store 0x52ba4f2f12743b98 in memory
flw f13, 0(x2) # load 0x52ba4f2f12743b98 from memory into f13
fnmsub.s f3, f28, f18, f13, dyn # perform operation
fnmsub.s f3, f28, f18, f13, rdn # perform operation
fnmsub.s f3, f28, f18, f13, rmm # perform operation
fnmsub.s f3, f28, f18, f13, rne # perform operation
fnmsub.s f3, f28, f18, f13, rtz # perform operation
fnmsub.s f3, f28, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f28, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f28, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f28, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f28, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f28, f18, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fc00000)
li x18, 0x42a76a093ab43225 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0xb191799b184f44a4 # load x3 with value 0xb191799b184f44a4
sw x3, 0(x2) # store 0xb191799b184f44a4 in memory
flw f7, 0(x2) # load 0xb191799b184f44a4 from memory into f7
fnmsub.s f18, f27, f22, f7, dyn # perform operation
fnmsub.s f18, f27, f22, f7, rdn # perform operation
fnmsub.s f18, f27, f22, f7, rmm # perform operation
fnmsub.s f18, f27, f22, f7, rne # perform operation
fnmsub.s f18, f27, f22, f7, rtz # perform operation
fnmsub.s f18, f27, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f27, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f27, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f27, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f27, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f27, f22, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffffff)
li x10, 0xe4ed3168da81e364 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0xc4de3267a5d009c # load x3 with value 0xc4de3267a5d009c
sw x3, 0(x2) # store 0xc4de3267a5d009c in memory
flw f30, 0(x2) # load 0xc4de3267a5d009c from memory into f30
fnmsub.s f10, f24, f22, f30, dyn # perform operation
fnmsub.s f10, f24, f22, f30, rdn # perform operation
fnmsub.s f10, f24, f22, f30, rmm # perform operation
fnmsub.s f10, f24, f22, f30, rne # perform operation
fnmsub.s f10, f24, f22, f30, rtz # perform operation
fnmsub.s f10, f24, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f24, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f24, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f24, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f24, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f24, f22, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800001)
li x6, 0x35b57816ba691842 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0x61d0d250ebb78e07 # load x3 with value 0x61d0d250ebb78e07
sw x3, 0(x2) # store 0x61d0d250ebb78e07 in memory
flw f23, 0(x2) # load 0x61d0d250ebb78e07 from memory into f23
fnmsub.s f6, f7, f13, f23, dyn # perform operation
fnmsub.s f6, f7, f13, f23, rdn # perform operation
fnmsub.s f6, f7, f13, f23, rmm # perform operation
fnmsub.s f6, f7, f13, f23, rne # perform operation
fnmsub.s f6, f7, f13, f23, rtz # perform operation
fnmsub.s f6, f7, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f7, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f7, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f7, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f7, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f7, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fbfffff)
li x13, 0x4ae9ccc748301c99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
li x3, 0xd56549ef9a5803e0 # load x3 with value 0xd56549ef9a5803e0
sw x3, 0(x2) # store 0xd56549ef9a5803e0 in memory
flw f24, 0(x2) # load 0xd56549ef9a5803e0 from memory into f24
fnmsub.s f13, f2, f18, f24, dyn # perform operation
fnmsub.s f13, f2, f18, f24, rdn # perform operation
fnmsub.s f13, f2, f18, f24, rmm # perform operation
fnmsub.s f13, f2, f18, f24, rne # perform operation
fnmsub.s f13, f2, f18, f24, rtz # perform operation
fnmsub.s f13, f2, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f2, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f2, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f2, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f2, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f2, f18, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7ef8654f)
li x15, 0xd844ed3c1b24a50f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0xcc063405c8e63af4 # load x3 with value 0xcc063405c8e63af4
sw x3, 0(x2) # store 0xcc063405c8e63af4 in memory
flw f29, 0(x2) # load 0xcc063405c8e63af4 from memory into f29
fnmsub.s f15, f9, f11, f29, dyn # perform operation
fnmsub.s f15, f9, f11, f29, rdn # perform operation
fnmsub.s f15, f9, f11, f29, rmm # perform operation
fnmsub.s f15, f9, f11, f29, rne # perform operation
fnmsub.s f15, f9, f11, f29, rtz # perform operation
fnmsub.s f15, f9, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f9, f11, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x813d9ab0)
li x25, 0xd395d8cac3f14c14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0xb53126fa914982d9 # load x3 with value 0xb53126fa914982d9
sw x3, 0(x2) # store 0xb53126fa914982d9 in memory
flw f31, 0(x2) # load 0xb53126fa914982d9 from memory into f31
fnmsub.s f25, f10, f12, f31, dyn # perform operation
fnmsub.s f25, f10, f12, f31, rdn # perform operation
fnmsub.s f25, f10, f12, f31, rmm # perform operation
fnmsub.s f25, f10, f12, f31, rne # perform operation
fnmsub.s f25, f10, f12, f31, rtz # perform operation
fnmsub.s f25, f10, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f10, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f10, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f10, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f10, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f10, f12, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x0)
li x15, 0x43e628cccf43d7aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0xc11b62922fbbeca7 # load x3 with value 0xc11b62922fbbeca7
sw x3, 0(x2) # store 0xc11b62922fbbeca7 in memory
flw f4, 0(x2) # load 0xc11b62922fbbeca7 from memory into f4
fnmsub.s f15, f9, f26, f4, dyn # perform operation
fnmsub.s f15, f9, f26, f4, rdn # perform operation
fnmsub.s f15, f9, f26, f4, rmm # perform operation
fnmsub.s f15, f9, f26, f4, rne # perform operation
fnmsub.s f15, f9, f26, f4, rtz # perform operation
fnmsub.s f15, f9, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f9, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f9, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f9, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f9, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f9, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000000)
li x6, 0xda1ae52de9407f36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0x4d5d4fd63573a180 # load x3 with value 0x4d5d4fd63573a180
sw x3, 0(x2) # store 0x4d5d4fd63573a180 in memory
flw f3, 0(x2) # load 0x4d5d4fd63573a180 from memory into f3
fnmsub.s f6, f18, f20, f3, dyn # perform operation
fnmsub.s f6, f18, f20, f3, rdn # perform operation
fnmsub.s f6, f18, f20, f3, rmm # perform operation
fnmsub.s f6, f18, f20, f3, rne # perform operation
fnmsub.s f6, f18, f20, f3, rtz # perform operation
fnmsub.s f6, f18, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f18, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f18, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f18, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f18, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f18, f20, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3f800000)
li x5, 0xd0be3c20285689c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0xec77f2033639e47a # load x3 with value 0xec77f2033639e47a
sw x3, 0(x2) # store 0xec77f2033639e47a in memory
flw f20, 0(x2) # load 0xec77f2033639e47a from memory into f20
fnmsub.s f5, f13, f7, f20, dyn # perform operation
fnmsub.s f5, f13, f7, f20, rdn # perform operation
fnmsub.s f5, f13, f7, f20, rmm # perform operation
fnmsub.s f5, f13, f7, f20, rne # perform operation
fnmsub.s f5, f13, f7, f20, rtz # perform operation
fnmsub.s f5, f13, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f13, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f13, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f13, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f13, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f13, f7, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbf800000)
li x23, 0x5c1019c8a6f70b37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
li x3, 0x346be6ad3c89bf72 # load x3 with value 0x346be6ad3c89bf72
sw x3, 0(x2) # store 0x346be6ad3c89bf72 in memory
flw f6, 0(x2) # load 0x346be6ad3c89bf72 from memory into f6
fnmsub.s f23, f4, f29, f6, dyn # perform operation
fnmsub.s f23, f4, f29, f6, rdn # perform operation
fnmsub.s f23, f4, f29, f6, rmm # perform operation
fnmsub.s f23, f4, f29, f6, rne # perform operation
fnmsub.s f23, f4, f29, f6, rtz # perform operation
fnmsub.s f23, f4, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f4, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f4, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f4, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f4, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f4, f29, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3fc00000)
li x17, 0x2e3b561d00de0ea2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
li x3, 0x430555315454e8bd # load x3 with value 0x430555315454e8bd
sw x3, 0(x2) # store 0x430555315454e8bd in memory
flw f28, 0(x2) # load 0x430555315454e8bd from memory into f28
fnmsub.s f17, f15, f20, f28, dyn # perform operation
fnmsub.s f17, f15, f20, f28, rdn # perform operation
fnmsub.s f17, f15, f20, f28, rmm # perform operation
fnmsub.s f17, f15, f20, f28, rne # perform operation
fnmsub.s f17, f15, f20, f28, rtz # perform operation
fnmsub.s f17, f15, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f15, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f15, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f15, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f15, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f15, f20, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbfc00000)
li x18, 0x8776201955003e8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0xe3d29248f153e504 # load x3 with value 0xe3d29248f153e504
sw x3, 0(x2) # store 0xe3d29248f153e504 in memory
flw f9, 0(x2) # load 0xe3d29248f153e504 from memory into f9
fnmsub.s f18, f22, f7, f9, dyn # perform operation
fnmsub.s f18, f22, f7, f9, rdn # perform operation
fnmsub.s f18, f22, f7, f9, rmm # perform operation
fnmsub.s f18, f22, f7, f9, rne # perform operation
fnmsub.s f18, f22, f7, f9, rtz # perform operation
fnmsub.s f18, f22, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f22, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f22, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f22, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f22, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f22, f7, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x40000000)
li x4, 0xc5a7dae5f7b037fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0x80bd9ecd8c8a31b4 # load x3 with value 0x80bd9ecd8c8a31b4
sw x3, 0(x2) # store 0x80bd9ecd8c8a31b4 in memory
flw f16, 0(x2) # load 0x80bd9ecd8c8a31b4 from memory into f16
fnmsub.s f4, f22, f27, f16, dyn # perform operation
fnmsub.s f4, f22, f27, f16, rdn # perform operation
fnmsub.s f4, f22, f27, f16, rmm # perform operation
fnmsub.s f4, f22, f27, f16, rne # perform operation
fnmsub.s f4, f22, f27, f16, rtz # perform operation
fnmsub.s f4, f22, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f22, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f22, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f22, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f22, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f22, f27, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xc0000000)
li x1, 0xd40a0b8c16d50a5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
li x3, 0x11c9ca2bacb3edaf # load x3 with value 0x11c9ca2bacb3edaf
sw x3, 0(x2) # store 0x11c9ca2bacb3edaf in memory
flw f17, 0(x2) # load 0x11c9ca2bacb3edaf from memory into f17
fnmsub.s f1, f12, f28, f17, dyn # perform operation
fnmsub.s f1, f12, f28, f17, rdn # perform operation
fnmsub.s f1, f12, f28, f17, rmm # perform operation
fnmsub.s f1, f12, f28, f17, rne # perform operation
fnmsub.s f1, f12, f28, f17, rtz # perform operation
fnmsub.s f1, f12, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f12, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f12, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f12, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f12, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f12, f28, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x800000)
li x3, 0x5a28e04157b7d4c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0x2ff55e2ade79653d # load x3 with value 0x2ff55e2ade79653d
sw x3, 0(x2) # store 0x2ff55e2ade79653d in memory
flw f18, 0(x2) # load 0x2ff55e2ade79653d from memory into f18
fnmsub.s f3, f22, f4, f18, dyn # perform operation
fnmsub.s f3, f22, f4, f18, rdn # perform operation
fnmsub.s f3, f22, f4, f18, rmm # perform operation
fnmsub.s f3, f22, f4, f18, rne # perform operation
fnmsub.s f3, f22, f4, f18, rtz # perform operation
fnmsub.s f3, f22, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f22, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f22, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f22, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f22, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f22, f4, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80800000)
li x7, 0xadf6d1240fb10c48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0x33d924d17494d93 # load x3 with value 0x33d924d17494d93
sw x3, 0(x2) # store 0x33d924d17494d93 in memory
flw f8, 0(x2) # load 0x33d924d17494d93 from memory into f8
fnmsub.s f7, f31, f2, f8, dyn # perform operation
fnmsub.s f7, f31, f2, f8, rdn # perform operation
fnmsub.s f7, f31, f2, f8, rmm # perform operation
fnmsub.s f7, f31, f2, f8, rne # perform operation
fnmsub.s f7, f31, f2, f8, rtz # perform operation
fnmsub.s f7, f31, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f31, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f31, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f31, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f31, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f31, f2, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f7fffff)
li x2, 0x935c2756c9cc6ec5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0xffe4cedb470fe5c4 # load x3 with value 0xffe4cedb470fe5c4
sw x3, 0(x2) # store 0xffe4cedb470fe5c4 in memory
flw f30, 0(x2) # load 0xffe4cedb470fe5c4 from memory into f30
fnmsub.s f2, f21, f19, f30, dyn # perform operation
fnmsub.s f2, f21, f19, f30, rdn # perform operation
fnmsub.s f2, f21, f19, f30, rmm # perform operation
fnmsub.s f2, f21, f19, f30, rne # perform operation
fnmsub.s f2, f21, f19, f30, rtz # perform operation
fnmsub.s f2, f21, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f21, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f21, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f21, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f21, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f21, f19, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff7fffff)
li x19, 0xcfd94fea61cd853f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
li x3, 0xeddb19dd96ede0c3 # load x3 with value 0xeddb19dd96ede0c3
sw x3, 0(x2) # store 0xeddb19dd96ede0c3 in memory
flw f18, 0(x2) # load 0xeddb19dd96ede0c3 from memory into f18
fnmsub.s f19, f1, f4, f18, dyn # perform operation
fnmsub.s f19, f1, f4, f18, rdn # perform operation
fnmsub.s f19, f1, f4, f18, rmm # perform operation
fnmsub.s f19, f1, f4, f18, rne # perform operation
fnmsub.s f19, f1, f4, f18, rtz # perform operation
fnmsub.s f19, f1, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f1, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f1, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f1, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f1, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f1, f4, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffff)
li x21, 0xba6162e56c0fd913 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0x1b875b9f3a1ec1d6 # load x3 with value 0x1b875b9f3a1ec1d6
sw x3, 0(x2) # store 0x1b875b9f3a1ec1d6 in memory
flw f24, 0(x2) # load 0x1b875b9f3a1ec1d6 from memory into f24
fnmsub.s f21, f17, f19, f24, dyn # perform operation
fnmsub.s f21, f17, f19, f24, rdn # perform operation
fnmsub.s f21, f17, f19, f24, rmm # perform operation
fnmsub.s f21, f17, f19, f24, rne # perform operation
fnmsub.s f21, f17, f19, f24, rtz # perform operation
fnmsub.s f21, f17, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f17, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f17, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f17, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f17, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f17, f19, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x807fffff)
li x20, 0x2f4edc203c648ba3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
li x3, 0xead3f9799f6363fd # load x3 with value 0xead3f9799f6363fd
sw x3, 0(x2) # store 0xead3f9799f6363fd in memory
flw f27, 0(x2) # load 0xead3f9799f6363fd from memory into f27
fnmsub.s f20, f30, f1, f27, dyn # perform operation
fnmsub.s f20, f30, f1, f27, rdn # perform operation
fnmsub.s f20, f30, f1, f27, rmm # perform operation
fnmsub.s f20, f30, f1, f27, rne # perform operation
fnmsub.s f20, f30, f1, f27, rtz # perform operation
fnmsub.s f20, f30, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f30, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f30, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f30, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f30, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f30, f1, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x400000)
li x27, 0x4e7a833eda463b20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
li x3, 0x3043319a8756b7b3 # load x3 with value 0x3043319a8756b7b3
sw x3, 0(x2) # store 0x3043319a8756b7b3 in memory
flw f30, 0(x2) # load 0x3043319a8756b7b3 from memory into f30
fnmsub.s f27, f13, f17, f30, dyn # perform operation
fnmsub.s f27, f13, f17, f30, rdn # perform operation
fnmsub.s f27, f13, f17, f30, rmm # perform operation
fnmsub.s f27, f13, f17, f30, rne # perform operation
fnmsub.s f27, f13, f17, f30, rtz # perform operation
fnmsub.s f27, f13, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f13, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f13, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f13, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f13, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f13, f17, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80400000)
li x12, 0x21a597768349425b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0x13edca7fc97a72f8 # load x3 with value 0x13edca7fc97a72f8
sw x3, 0(x2) # store 0x13edca7fc97a72f8 in memory
flw f19, 0(x2) # load 0x13edca7fc97a72f8 from memory into f19
fnmsub.s f12, f15, f10, f19, dyn # perform operation
fnmsub.s f12, f15, f10, f19, rdn # perform operation
fnmsub.s f12, f15, f10, f19, rmm # perform operation
fnmsub.s f12, f15, f10, f19, rne # perform operation
fnmsub.s f12, f15, f10, f19, rtz # perform operation
fnmsub.s f12, f15, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f15, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f15, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f15, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f15, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f15, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x1)
li x7, 0xe7f3e46fdc908e25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0xdd5dc9fc9540e855 # load x3 with value 0xdd5dc9fc9540e855
sw x3, 0(x2) # store 0xdd5dc9fc9540e855 in memory
flw f31, 0(x2) # load 0xdd5dc9fc9540e855 from memory into f31
fnmsub.s f7, f9, f13, f31, dyn # perform operation
fnmsub.s f7, f9, f13, f31, rdn # perform operation
fnmsub.s f7, f9, f13, f31, rmm # perform operation
fnmsub.s f7, f9, f13, f31, rne # perform operation
fnmsub.s f7, f9, f13, f31, rtz # perform operation
fnmsub.s f7, f9, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f9, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f9, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f9, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f9, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f9, f13, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000001)
li x5, 0x11b5e7becc74f15a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0xda48d93e5e0dfb7d # load x3 with value 0xda48d93e5e0dfb7d
sw x3, 0(x2) # store 0xda48d93e5e0dfb7d in memory
flw f26, 0(x2) # load 0xda48d93e5e0dfb7d from memory into f26
fnmsub.s f5, f28, f23, f26, dyn # perform operation
fnmsub.s f5, f28, f23, f26, rdn # perform operation
fnmsub.s f5, f28, f23, f26, rmm # perform operation
fnmsub.s f5, f28, f23, f26, rne # perform operation
fnmsub.s f5, f28, f23, f26, rtz # perform operation
fnmsub.s f5, f28, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f28, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f28, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f28, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f28, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f28, f23, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800000)
li x6, 0x6563c8ac21c2b9b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0x42e5b9ade5b0f46d # load x3 with value 0x42e5b9ade5b0f46d
sw x3, 0(x2) # store 0x42e5b9ade5b0f46d in memory
flw f10, 0(x2) # load 0x42e5b9ade5b0f46d from memory into f10
fnmsub.s f6, f29, f21, f10, dyn # perform operation
fnmsub.s f6, f29, f21, f10, rdn # perform operation
fnmsub.s f6, f29, f21, f10, rmm # perform operation
fnmsub.s f6, f29, f21, f10, rne # perform operation
fnmsub.s f6, f29, f21, f10, rtz # perform operation
fnmsub.s f6, f29, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f29, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f29, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f29, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f29, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f29, f21, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff800000)
li x24, 0x10a37298929745a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
li x3, 0x964b81fd8e6d613c # load x3 with value 0x964b81fd8e6d613c
sw x3, 0(x2) # store 0x964b81fd8e6d613c in memory
flw f25, 0(x2) # load 0x964b81fd8e6d613c from memory into f25
fnmsub.s f24, f12, f27, f25, dyn # perform operation
fnmsub.s f24, f12, f27, f25, rdn # perform operation
fnmsub.s f24, f12, f27, f25, rmm # perform operation
fnmsub.s f24, f12, f27, f25, rne # perform operation
fnmsub.s f24, f12, f27, f25, rtz # perform operation
fnmsub.s f24, f12, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f12, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f12, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f12, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f12, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f12, f27, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fc00000)
li x15, 0x0650445f696f477d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
li x3, 0x775c63e14696ba25 # load x3 with value 0x775c63e14696ba25
sw x3, 0(x2) # store 0x775c63e14696ba25 in memory
flw f5, 0(x2) # load 0x775c63e14696ba25 from memory into f5
fnmsub.s f15, f18, f27, f5, dyn # perform operation
fnmsub.s f15, f18, f27, f5, rdn # perform operation
fnmsub.s f15, f18, f27, f5, rmm # perform operation
fnmsub.s f15, f18, f27, f5, rne # perform operation
fnmsub.s f15, f18, f27, f5, rtz # perform operation
fnmsub.s f15, f18, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f18, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f18, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f18, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f18, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f18, f27, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffffff)
li x29, 0xb7a16d50c932e1fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
li x3, 0x31f88a60a96f96f4 # load x3 with value 0x31f88a60a96f96f4
sw x3, 0(x2) # store 0x31f88a60a96f96f4 in memory
flw f2, 0(x2) # load 0x31f88a60a96f96f4 from memory into f2
fnmsub.s f29, f22, f31, f2, dyn # perform operation
fnmsub.s f29, f22, f31, f2, rdn # perform operation
fnmsub.s f29, f22, f31, f2, rmm # perform operation
fnmsub.s f29, f22, f31, f2, rne # perform operation
fnmsub.s f29, f22, f31, f2, rtz # perform operation
fnmsub.s f29, f22, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f22, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f22, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f22, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f22, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f22, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800001)
li x26, 0x11fba837e919ba1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
li x3, 0x6fa1018c2c12b4de # load x3 with value 0x6fa1018c2c12b4de
sw x3, 0(x2) # store 0x6fa1018c2c12b4de in memory
flw f17, 0(x2) # load 0x6fa1018c2c12b4de from memory into f17
fnmsub.s f26, f9, f8, f17, dyn # perform operation
fnmsub.s f26, f9, f8, f17, rdn # perform operation
fnmsub.s f26, f9, f8, f17, rmm # perform operation
fnmsub.s f26, f9, f8, f17, rne # perform operation
fnmsub.s f26, f9, f8, f17, rtz # perform operation
fnmsub.s f26, f9, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f9, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f9, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f9, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f9, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f9, f8, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fbfffff)
li x13, 0x922735f78f6ea369 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0xaa6b92b14167a60b # load x3 with value 0xaa6b92b14167a60b
sw x3, 0(x2) # store 0xaa6b92b14167a60b in memory
flw f21, 0(x2) # load 0xaa6b92b14167a60b from memory into f21
fnmsub.s f13, f28, f6, f21, dyn # perform operation
fnmsub.s f13, f28, f6, f21, rdn # perform operation
fnmsub.s f13, f28, f6, f21, rmm # perform operation
fnmsub.s f13, f28, f6, f21, rne # perform operation
fnmsub.s f13, f28, f6, f21, rtz # perform operation
fnmsub.s f13, f28, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f28, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f28, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f28, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f28, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f28, f6, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7ef8654f)
li x6, 0x76ec214a1ab3d229 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
li x3, 0xbd8b262831430748 # load x3 with value 0xbd8b262831430748
sw x3, 0(x2) # store 0xbd8b262831430748 in memory
flw f10, 0(x2) # load 0xbd8b262831430748 from memory into f10
fnmsub.s f6, f20, f8, f10, dyn # perform operation
fnmsub.s f6, f20, f8, f10, rdn # perform operation
fnmsub.s f6, f20, f8, f10, rmm # perform operation
fnmsub.s f6, f20, f8, f10, rne # perform operation
fnmsub.s f6, f20, f8, f10, rtz # perform operation
fnmsub.s f6, f20, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f20, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f20, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f20, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f20, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f20, f8, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x813d9ab0)
li x26, 0x39336f4ee90ed188 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0xd4c2e69b007d6640 # load x3 with value 0xd4c2e69b007d6640
sw x3, 0(x2) # store 0xd4c2e69b007d6640 in memory
flw f21, 0(x2) # load 0xd4c2e69b007d6640 from memory into f21
fnmsub.s f26, f13, f27, f21, dyn # perform operation
fnmsub.s f26, f13, f27, f21, rdn # perform operation
fnmsub.s f26, f13, f27, f21, rmm # perform operation
fnmsub.s f26, f13, f27, f21, rne # perform operation
fnmsub.s f26, f13, f27, f21, rtz # perform operation
fnmsub.s f26, f13, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f13, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f13, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f13, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f13, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f13, f27, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x0)
li x11, 0xebebe3e5372b43d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0xd3b6869e5018bb28 # load x3 with value 0xd3b6869e5018bb28
sw x3, 0(x2) # store 0xd3b6869e5018bb28 in memory
flw f7, 0(x2) # load 0xd3b6869e5018bb28 from memory into f7
fnmsub.s f11, f23, f21, f7, dyn # perform operation
fnmsub.s f11, f23, f21, f7, rdn # perform operation
fnmsub.s f11, f23, f21, f7, rmm # perform operation
fnmsub.s f11, f23, f21, f7, rne # perform operation
fnmsub.s f11, f23, f21, f7, rtz # perform operation
fnmsub.s f11, f23, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f23, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f23, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f23, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f23, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f23, f21, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000000)
li x7, 0x7b2f1e71a60a48f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
li x3, 0xb51ec73a8398c0ea # load x3 with value 0xb51ec73a8398c0ea
sw x3, 0(x2) # store 0xb51ec73a8398c0ea in memory
flw f26, 0(x2) # load 0xb51ec73a8398c0ea from memory into f26
fnmsub.s f7, f15, f5, f26, dyn # perform operation
fnmsub.s f7, f15, f5, f26, rdn # perform operation
fnmsub.s f7, f15, f5, f26, rmm # perform operation
fnmsub.s f7, f15, f5, f26, rne # perform operation
fnmsub.s f7, f15, f5, f26, rtz # perform operation
fnmsub.s f7, f15, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f15, f5, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3f800000)
li x26, 0x7180e87a2d5561f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
li x3, 0xe593a291425ea473 # load x3 with value 0xe593a291425ea473
sw x3, 0(x2) # store 0xe593a291425ea473 in memory
flw f16, 0(x2) # load 0xe593a291425ea473 from memory into f16
fnmsub.s f26, f28, f4, f16, dyn # perform operation
fnmsub.s f26, f28, f4, f16, rdn # perform operation
fnmsub.s f26, f28, f4, f16, rmm # perform operation
fnmsub.s f26, f28, f4, f16, rne # perform operation
fnmsub.s f26, f28, f4, f16, rtz # perform operation
fnmsub.s f26, f28, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f28, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f28, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f28, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f28, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f28, f4, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbf800000)
li x27, 0x6e8abfa212a342fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0x3263276727c07345 # load x3 with value 0x3263276727c07345
sw x3, 0(x2) # store 0x3263276727c07345 in memory
flw f5, 0(x2) # load 0x3263276727c07345 from memory into f5
fnmsub.s f27, f7, f30, f5, dyn # perform operation
fnmsub.s f27, f7, f30, f5, rdn # perform operation
fnmsub.s f27, f7, f30, f5, rmm # perform operation
fnmsub.s f27, f7, f30, f5, rne # perform operation
fnmsub.s f27, f7, f30, f5, rtz # perform operation
fnmsub.s f27, f7, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f7, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f7, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f7, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f7, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f7, f30, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3fc00000)
li x27, 0xe6273ee428956b32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0xc4e554b82e48bafc # load x3 with value 0xc4e554b82e48bafc
sw x3, 0(x2) # store 0xc4e554b82e48bafc in memory
flw f16, 0(x2) # load 0xc4e554b82e48bafc from memory into f16
fnmsub.s f27, f7, f3, f16, dyn # perform operation
fnmsub.s f27, f7, f3, f16, rdn # perform operation
fnmsub.s f27, f7, f3, f16, rmm # perform operation
fnmsub.s f27, f7, f3, f16, rne # perform operation
fnmsub.s f27, f7, f3, f16, rtz # perform operation
fnmsub.s f27, f7, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f7, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f7, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f7, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f7, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f7, f3, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbfc00000)
li x21, 0x988d8e846703b5da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0x725e9117a3662e0d # load x3 with value 0x725e9117a3662e0d
sw x3, 0(x2) # store 0x725e9117a3662e0d in memory
flw f9, 0(x2) # load 0x725e9117a3662e0d from memory into f9
fnmsub.s f21, f27, f8, f9, dyn # perform operation
fnmsub.s f21, f27, f8, f9, rdn # perform operation
fnmsub.s f21, f27, f8, f9, rmm # perform operation
fnmsub.s f21, f27, f8, f9, rne # perform operation
fnmsub.s f21, f27, f8, f9, rtz # perform operation
fnmsub.s f21, f27, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f27, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f27, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f27, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f27, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f27, f8, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x40000000)
li x21, 0xc6ab8b7c3475d8bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0xbd4f7d43515973b # load x3 with value 0xbd4f7d43515973b
sw x3, 0(x2) # store 0xbd4f7d43515973b in memory
flw f22, 0(x2) # load 0xbd4f7d43515973b from memory into f22
fnmsub.s f21, f14, f25, f22, dyn # perform operation
fnmsub.s f21, f14, f25, f22, rdn # perform operation
fnmsub.s f21, f14, f25, f22, rmm # perform operation
fnmsub.s f21, f14, f25, f22, rne # perform operation
fnmsub.s f21, f14, f25, f22, rtz # perform operation
fnmsub.s f21, f14, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f14, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f14, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f14, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f14, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f14, f25, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xc0000000)
li x13, 0xfc7288fdb33a260f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
li x3, 0x942bb5c90f19b283 # load x3 with value 0x942bb5c90f19b283
sw x3, 0(x2) # store 0x942bb5c90f19b283 in memory
flw f26, 0(x2) # load 0x942bb5c90f19b283 from memory into f26
fnmsub.s f13, f29, f30, f26, dyn # perform operation
fnmsub.s f13, f29, f30, f26, rdn # perform operation
fnmsub.s f13, f29, f30, f26, rmm # perform operation
fnmsub.s f13, f29, f30, f26, rne # perform operation
fnmsub.s f13, f29, f30, f26, rtz # perform operation
fnmsub.s f13, f29, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f29, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f29, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f29, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f29, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f29, f30, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x800000)
li x29, 0xf024df5b079927fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
li x3, 0x5fd155831775815f # load x3 with value 0x5fd155831775815f
sw x3, 0(x2) # store 0x5fd155831775815f in memory
flw f30, 0(x2) # load 0x5fd155831775815f from memory into f30
fnmsub.s f29, f5, f22, f30, dyn # perform operation
fnmsub.s f29, f5, f22, f30, rdn # perform operation
fnmsub.s f29, f5, f22, f30, rmm # perform operation
fnmsub.s f29, f5, f22, f30, rne # perform operation
fnmsub.s f29, f5, f22, f30, rtz # perform operation
fnmsub.s f29, f5, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f5, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f5, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f5, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f5, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f5, f22, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80800000)
li x27, 0xc6898c2060501c4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0x33c3a36956984e7e # load x3 with value 0x33c3a36956984e7e
sw x3, 0(x2) # store 0x33c3a36956984e7e in memory
flw f21, 0(x2) # load 0x33c3a36956984e7e from memory into f21
fnmsub.s f27, f17, f16, f21, dyn # perform operation
fnmsub.s f27, f17, f16, f21, rdn # perform operation
fnmsub.s f27, f17, f16, f21, rmm # perform operation
fnmsub.s f27, f17, f16, f21, rne # perform operation
fnmsub.s f27, f17, f16, f21, rtz # perform operation
fnmsub.s f27, f17, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f17, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f17, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f17, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f17, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f17, f16, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f7fffff)
li x19, 0xdd59148165444a3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
li x3, 0x160dfe666778aa30 # load x3 with value 0x160dfe666778aa30
sw x3, 0(x2) # store 0x160dfe666778aa30 in memory
flw f28, 0(x2) # load 0x160dfe666778aa30 from memory into f28
fnmsub.s f19, f1, f27, f28, dyn # perform operation
fnmsub.s f19, f1, f27, f28, rdn # perform operation
fnmsub.s f19, f1, f27, f28, rmm # perform operation
fnmsub.s f19, f1, f27, f28, rne # perform operation
fnmsub.s f19, f1, f27, f28, rtz # perform operation
fnmsub.s f19, f1, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f1, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f1, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f1, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f1, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f1, f27, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff7fffff)
li x25, 0xa3f21ee07feaffa0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
li x3, 0xd3d98782ca869028 # load x3 with value 0xd3d98782ca869028
sw x3, 0(x2) # store 0xd3d98782ca869028 in memory
flw f23, 0(x2) # load 0xd3d98782ca869028 from memory into f23
fnmsub.s f25, f4, f1, f23, dyn # perform operation
fnmsub.s f25, f4, f1, f23, rdn # perform operation
fnmsub.s f25, f4, f1, f23, rmm # perform operation
fnmsub.s f25, f4, f1, f23, rne # perform operation
fnmsub.s f25, f4, f1, f23, rtz # perform operation
fnmsub.s f25, f4, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f4, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f4, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f4, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f4, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f4, f1, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffff)
li x17, 0xd305c843c5545649 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0xe898e1a7db60a0c6 # load x3 with value 0xe898e1a7db60a0c6
sw x3, 0(x2) # store 0xe898e1a7db60a0c6 in memory
flw f3, 0(x2) # load 0xe898e1a7db60a0c6 from memory into f3
fnmsub.s f17, f26, f15, f3, dyn # perform operation
fnmsub.s f17, f26, f15, f3, rdn # perform operation
fnmsub.s f17, f26, f15, f3, rmm # perform operation
fnmsub.s f17, f26, f15, f3, rne # perform operation
fnmsub.s f17, f26, f15, f3, rtz # perform operation
fnmsub.s f17, f26, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f26, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f26, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f26, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f26, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f26, f15, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x807fffff)
li x3, 0x78cb107bed662481 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0x78c2761caad3d8f6 # load x3 with value 0x78c2761caad3d8f6
sw x3, 0(x2) # store 0x78c2761caad3d8f6 in memory
flw f23, 0(x2) # load 0x78c2761caad3d8f6 from memory into f23
fnmsub.s f3, f7, f11, f23, dyn # perform operation
fnmsub.s f3, f7, f11, f23, rdn # perform operation
fnmsub.s f3, f7, f11, f23, rmm # perform operation
fnmsub.s f3, f7, f11, f23, rne # perform operation
fnmsub.s f3, f7, f11, f23, rtz # perform operation
fnmsub.s f3, f7, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f7, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f7, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f7, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f7, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f7, f11, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x400000)
li x28, 0x2615fa1964a25c2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0xbbf3999eb5e3ecb0 # load x3 with value 0xbbf3999eb5e3ecb0
sw x3, 0(x2) # store 0xbbf3999eb5e3ecb0 in memory
flw f20, 0(x2) # load 0xbbf3999eb5e3ecb0 from memory into f20
fnmsub.s f28, f29, f22, f20, dyn # perform operation
fnmsub.s f28, f29, f22, f20, rdn # perform operation
fnmsub.s f28, f29, f22, f20, rmm # perform operation
fnmsub.s f28, f29, f22, f20, rne # perform operation
fnmsub.s f28, f29, f22, f20, rtz # perform operation
fnmsub.s f28, f29, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f29, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f29, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f29, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f29, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f29, f22, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80400000)
li x14, 0xea7dd43d80929134 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0x281b4fdeded96174 # load x3 with value 0x281b4fdeded96174
sw x3, 0(x2) # store 0x281b4fdeded96174 in memory
flw f29, 0(x2) # load 0x281b4fdeded96174 from memory into f29
fnmsub.s f14, f23, f1, f29, dyn # perform operation
fnmsub.s f14, f23, f1, f29, rdn # perform operation
fnmsub.s f14, f23, f1, f29, rmm # perform operation
fnmsub.s f14, f23, f1, f29, rne # perform operation
fnmsub.s f14, f23, f1, f29, rtz # perform operation
fnmsub.s f14, f23, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f23, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f23, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f23, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f23, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f23, f1, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x1)
li x20, 0x01256cc239dc5b82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x60a5d15a3ac87304 # load x3 with value 0x60a5d15a3ac87304
sw x3, 0(x2) # store 0x60a5d15a3ac87304 in memory
flw f25, 0(x2) # load 0x60a5d15a3ac87304 from memory into f25
fnmsub.s f20, f16, f26, f25, dyn # perform operation
fnmsub.s f20, f16, f26, f25, rdn # perform operation
fnmsub.s f20, f16, f26, f25, rmm # perform operation
fnmsub.s f20, f16, f26, f25, rne # perform operation
fnmsub.s f20, f16, f26, f25, rtz # perform operation
fnmsub.s f20, f16, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f16, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f16, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f16, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f16, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f16, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000001)
li x16, 0x0d260a644d5db3d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x25a0e4b41f07899a # load x3 with value 0x25a0e4b41f07899a
sw x3, 0(x2) # store 0x25a0e4b41f07899a in memory
flw f15, 0(x2) # load 0x25a0e4b41f07899a from memory into f15
fnmsub.s f16, f27, f20, f15, dyn # perform operation
fnmsub.s f16, f27, f20, f15, rdn # perform operation
fnmsub.s f16, f27, f20, f15, rmm # perform operation
fnmsub.s f16, f27, f20, f15, rne # perform operation
fnmsub.s f16, f27, f20, f15, rtz # perform operation
fnmsub.s f16, f27, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f27, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f27, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f27, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f27, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f27, f20, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800000)
li x7, 0x090a228486d87a3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
li x3, 0x41cb0a9627b34b51 # load x3 with value 0x41cb0a9627b34b51
sw x3, 0(x2) # store 0x41cb0a9627b34b51 in memory
flw f28, 0(x2) # load 0x41cb0a9627b34b51 from memory into f28
fnmsub.s f7, f26, f1, f28, dyn # perform operation
fnmsub.s f7, f26, f1, f28, rdn # perform operation
fnmsub.s f7, f26, f1, f28, rmm # perform operation
fnmsub.s f7, f26, f1, f28, rne # perform operation
fnmsub.s f7, f26, f1, f28, rtz # perform operation
fnmsub.s f7, f26, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f26, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f26, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f26, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f26, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f26, f1, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff800000)
li x4, 0xf07fb2ddc5e6fe8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0x94d81f77a8e38563 # load x3 with value 0x94d81f77a8e38563
sw x3, 0(x2) # store 0x94d81f77a8e38563 in memory
flw f22, 0(x2) # load 0x94d81f77a8e38563 from memory into f22
fnmsub.s f4, f2, f9, f22, dyn # perform operation
fnmsub.s f4, f2, f9, f22, rdn # perform operation
fnmsub.s f4, f2, f9, f22, rmm # perform operation
fnmsub.s f4, f2, f9, f22, rne # perform operation
fnmsub.s f4, f2, f9, f22, rtz # perform operation
fnmsub.s f4, f2, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f2, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f2, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f2, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f2, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f2, f9, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fc00000)
li x17, 0x9e7281a8c9f24a05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
li x3, 0x779b970e304020c9 # load x3 with value 0x779b970e304020c9
sw x3, 0(x2) # store 0x779b970e304020c9 in memory
flw f9, 0(x2) # load 0x779b970e304020c9 from memory into f9
fnmsub.s f17, f27, f26, f9, dyn # perform operation
fnmsub.s f17, f27, f26, f9, rdn # perform operation
fnmsub.s f17, f27, f26, f9, rmm # perform operation
fnmsub.s f17, f27, f26, f9, rne # perform operation
fnmsub.s f17, f27, f26, f9, rtz # perform operation
fnmsub.s f17, f27, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f27, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f27, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f27, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f27, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f27, f26, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffffff)
li x4, 0x3d22a80715d9c5a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x5edd28a05108c750 # load x3 with value 0x5edd28a05108c750
sw x3, 0(x2) # store 0x5edd28a05108c750 in memory
flw f8, 0(x2) # load 0x5edd28a05108c750 from memory into f8
fnmsub.s f4, f3, f10, f8, dyn # perform operation
fnmsub.s f4, f3, f10, f8, rdn # perform operation
fnmsub.s f4, f3, f10, f8, rmm # perform operation
fnmsub.s f4, f3, f10, f8, rne # perform operation
fnmsub.s f4, f3, f10, f8, rtz # perform operation
fnmsub.s f4, f3, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f3, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f3, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f3, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f3, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f3, f10, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800001)
li x22, 0xe17f462de6a4045b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0x5bac893ac7554124 # load x3 with value 0x5bac893ac7554124
sw x3, 0(x2) # store 0x5bac893ac7554124 in memory
flw f30, 0(x2) # load 0x5bac893ac7554124 from memory into f30
fnmsub.s f22, f4, f12, f30, dyn # perform operation
fnmsub.s f22, f4, f12, f30, rdn # perform operation
fnmsub.s f22, f4, f12, f30, rmm # perform operation
fnmsub.s f22, f4, f12, f30, rne # perform operation
fnmsub.s f22, f4, f12, f30, rtz # perform operation
fnmsub.s f22, f4, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f4, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f4, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f4, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f4, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f4, f12, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fbfffff)
li x19, 0x54bad569531154de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0x7d7ffc4f5f705aa1 # load x3 with value 0x7d7ffc4f5f705aa1
sw x3, 0(x2) # store 0x7d7ffc4f5f705aa1 in memory
flw f25, 0(x2) # load 0x7d7ffc4f5f705aa1 from memory into f25
fnmsub.s f19, f5, f3, f25, dyn # perform operation
fnmsub.s f19, f5, f3, f25, rdn # perform operation
fnmsub.s f19, f5, f3, f25, rmm # perform operation
fnmsub.s f19, f5, f3, f25, rne # perform operation
fnmsub.s f19, f5, f3, f25, rtz # perform operation
fnmsub.s f19, f5, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f5, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f5, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f5, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f5, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f5, f3, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7ef8654f)
li x14, 0xd183e6faa6c16099 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0xe1c70db75b587737 # load x3 with value 0xe1c70db75b587737
sw x3, 0(x2) # store 0xe1c70db75b587737 in memory
flw f20, 0(x2) # load 0xe1c70db75b587737 from memory into f20
fnmsub.s f14, f16, f26, f20, dyn # perform operation
fnmsub.s f14, f16, f26, f20, rdn # perform operation
fnmsub.s f14, f16, f26, f20, rmm # perform operation
fnmsub.s f14, f16, f26, f20, rne # perform operation
fnmsub.s f14, f16, f26, f20, rtz # perform operation
fnmsub.s f14, f16, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f16, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f16, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f16, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f16, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f16, f26, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x813d9ab0)
li x2, 0x8fd6b3aec9578d72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0x26da125f90c0b25c # load x3 with value 0x26da125f90c0b25c
sw x3, 0(x2) # store 0x26da125f90c0b25c in memory
flw f3, 0(x2) # load 0x26da125f90c0b25c from memory into f3
fnmsub.s f2, f31, f15, f3, dyn # perform operation
fnmsub.s f2, f31, f15, f3, rdn # perform operation
fnmsub.s f2, f31, f15, f3, rmm # perform operation
fnmsub.s f2, f31, f15, f3, rne # perform operation
fnmsub.s f2, f31, f15, f3, rtz # perform operation
fnmsub.s f2, f31, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f31, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f31, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f31, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f31, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f31, f15, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x0)
li x19, 0xedc6b18bd95faf6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0x61d07e9a05d8c4ee # load x3 with value 0x61d07e9a05d8c4ee
sw x3, 0(x2) # store 0x61d07e9a05d8c4ee in memory
flw f27, 0(x2) # load 0x61d07e9a05d8c4ee from memory into f27
fnmsub.s f19, f23, f25, f27, dyn # perform operation
fnmsub.s f19, f23, f25, f27, rdn # perform operation
fnmsub.s f19, f23, f25, f27, rmm # perform operation
fnmsub.s f19, f23, f25, f27, rne # perform operation
fnmsub.s f19, f23, f25, f27, rtz # perform operation
fnmsub.s f19, f23, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f23, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f23, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f23, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f23, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f23, f25, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000000)
li x26, 0x9315091d2c8dd1f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0xaf9dc2fb3a3a93f1 # load x3 with value 0xaf9dc2fb3a3a93f1
sw x3, 0(x2) # store 0xaf9dc2fb3a3a93f1 in memory
flw f2, 0(x2) # load 0xaf9dc2fb3a3a93f1 from memory into f2
fnmsub.s f26, f6, f27, f2, dyn # perform operation
fnmsub.s f26, f6, f27, f2, rdn # perform operation
fnmsub.s f26, f6, f27, f2, rmm # perform operation
fnmsub.s f26, f6, f27, f2, rne # perform operation
fnmsub.s f26, f6, f27, f2, rtz # perform operation
fnmsub.s f26, f6, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f6, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f6, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f6, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f6, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f6, f27, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3f800000)
li x23, 0x2c442fa5d3e2405e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0x97c0557777745f3b # load x3 with value 0x97c0557777745f3b
sw x3, 0(x2) # store 0x97c0557777745f3b in memory
flw f18, 0(x2) # load 0x97c0557777745f3b from memory into f18
fnmsub.s f23, f14, f19, f18, dyn # perform operation
fnmsub.s f23, f14, f19, f18, rdn # perform operation
fnmsub.s f23, f14, f19, f18, rmm # perform operation
fnmsub.s f23, f14, f19, f18, rne # perform operation
fnmsub.s f23, f14, f19, f18, rtz # perform operation
fnmsub.s f23, f14, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f14, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f14, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f14, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f14, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f14, f19, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbf800000)
li x30, 0x0ee5bed95bce8cb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
li x3, 0xbfba25195f57e1cc # load x3 with value 0xbfba25195f57e1cc
sw x3, 0(x2) # store 0xbfba25195f57e1cc in memory
flw f31, 0(x2) # load 0xbfba25195f57e1cc from memory into f31
fnmsub.s f30, f26, f11, f31, dyn # perform operation
fnmsub.s f30, f26, f11, f31, rdn # perform operation
fnmsub.s f30, f26, f11, f31, rmm # perform operation
fnmsub.s f30, f26, f11, f31, rne # perform operation
fnmsub.s f30, f26, f11, f31, rtz # perform operation
fnmsub.s f30, f26, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f26, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f26, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f26, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f26, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f26, f11, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3fc00000)
li x28, 0x3d382c6e345280f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0x32a41b47827d2fc5 # load x3 with value 0x32a41b47827d2fc5
sw x3, 0(x2) # store 0x32a41b47827d2fc5 in memory
flw f19, 0(x2) # load 0x32a41b47827d2fc5 from memory into f19
fnmsub.s f28, f11, f8, f19, dyn # perform operation
fnmsub.s f28, f11, f8, f19, rdn # perform operation
fnmsub.s f28, f11, f8, f19, rmm # perform operation
fnmsub.s f28, f11, f8, f19, rne # perform operation
fnmsub.s f28, f11, f8, f19, rtz # perform operation
fnmsub.s f28, f11, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f11, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f11, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f11, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f11, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f11, f8, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbfc00000)
li x10, 0x38be6e1474724c02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0xa4ea9920c58a00c8 # load x3 with value 0xa4ea9920c58a00c8
sw x3, 0(x2) # store 0xa4ea9920c58a00c8 in memory
flw f21, 0(x2) # load 0xa4ea9920c58a00c8 from memory into f21
fnmsub.s f10, f19, f27, f21, dyn # perform operation
fnmsub.s f10, f19, f27, f21, rdn # perform operation
fnmsub.s f10, f19, f27, f21, rmm # perform operation
fnmsub.s f10, f19, f27, f21, rne # perform operation
fnmsub.s f10, f19, f27, f21, rtz # perform operation
fnmsub.s f10, f19, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f19, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f19, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f19, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f19, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f19, f27, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x40000000)
li x21, 0xecc8d75f82f9eb38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0x1adce318109f4b54 # load x3 with value 0x1adce318109f4b54
sw x3, 0(x2) # store 0x1adce318109f4b54 in memory
flw f5, 0(x2) # load 0x1adce318109f4b54 from memory into f5
fnmsub.s f21, f14, f11, f5, dyn # perform operation
fnmsub.s f21, f14, f11, f5, rdn # perform operation
fnmsub.s f21, f14, f11, f5, rmm # perform operation
fnmsub.s f21, f14, f11, f5, rne # perform operation
fnmsub.s f21, f14, f11, f5, rtz # perform operation
fnmsub.s f21, f14, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f14, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f14, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f14, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f14, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f14, f11, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xc0000000)
li x19, 0x4a85f018b2a125be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
li x3, 0x559dcf6690216be1 # load x3 with value 0x559dcf6690216be1
sw x3, 0(x2) # store 0x559dcf6690216be1 in memory
flw f12, 0(x2) # load 0x559dcf6690216be1 from memory into f12
fnmsub.s f19, f17, f25, f12, dyn # perform operation
fnmsub.s f19, f17, f25, f12, rdn # perform operation
fnmsub.s f19, f17, f25, f12, rmm # perform operation
fnmsub.s f19, f17, f25, f12, rne # perform operation
fnmsub.s f19, f17, f25, f12, rtz # perform operation
fnmsub.s f19, f17, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f17, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f17, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f17, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f17, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f17, f25, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x800000)
li x16, 0x9df4734dfa6ae9b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0x2d4808d672c20a4a # load x3 with value 0x2d4808d672c20a4a
sw x3, 0(x2) # store 0x2d4808d672c20a4a in memory
flw f25, 0(x2) # load 0x2d4808d672c20a4a from memory into f25
fnmsub.s f16, f26, f20, f25, dyn # perform operation
fnmsub.s f16, f26, f20, f25, rdn # perform operation
fnmsub.s f16, f26, f20, f25, rmm # perform operation
fnmsub.s f16, f26, f20, f25, rne # perform operation
fnmsub.s f16, f26, f20, f25, rtz # perform operation
fnmsub.s f16, f26, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f26, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f26, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f26, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f26, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f26, f20, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80800000)
li x14, 0x28f0c7a6fa48966a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x768d6246484592f0 # load x3 with value 0x768d6246484592f0
sw x3, 0(x2) # store 0x768d6246484592f0 in memory
flw f1, 0(x2) # load 0x768d6246484592f0 from memory into f1
fnmsub.s f14, f7, f20, f1, dyn # perform operation
fnmsub.s f14, f7, f20, f1, rdn # perform operation
fnmsub.s f14, f7, f20, f1, rmm # perform operation
fnmsub.s f14, f7, f20, f1, rne # perform operation
fnmsub.s f14, f7, f20, f1, rtz # perform operation
fnmsub.s f14, f7, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f7, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f7, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f7, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f7, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f7, f20, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f7fffff)
li x15, 0xf04e1d1d5d1d96c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x66c230fe4092650 # load x3 with value 0x66c230fe4092650
sw x3, 0(x2) # store 0x66c230fe4092650 in memory
flw f4, 0(x2) # load 0x66c230fe4092650 from memory into f4
fnmsub.s f15, f8, f21, f4, dyn # perform operation
fnmsub.s f15, f8, f21, f4, rdn # perform operation
fnmsub.s f15, f8, f21, f4, rmm # perform operation
fnmsub.s f15, f8, f21, f4, rne # perform operation
fnmsub.s f15, f8, f21, f4, rtz # perform operation
fnmsub.s f15, f8, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f8, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f8, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f8, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f8, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f8, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff7fffff)
li x7, 0xbcff2fbc4577323f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0xdce2ea8423edd845 # load x3 with value 0xdce2ea8423edd845
sw x3, 0(x2) # store 0xdce2ea8423edd845 in memory
flw f19, 0(x2) # load 0xdce2ea8423edd845 from memory into f19
fnmsub.s f7, f27, f6, f19, dyn # perform operation
fnmsub.s f7, f27, f6, f19, rdn # perform operation
fnmsub.s f7, f27, f6, f19, rmm # perform operation
fnmsub.s f7, f27, f6, f19, rne # perform operation
fnmsub.s f7, f27, f6, f19, rtz # perform operation
fnmsub.s f7, f27, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f27, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f27, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f27, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f27, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f27, f6, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffff)
li x21, 0xc6e1e4b058cb0493 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0xb05ff34b4bb1b7a1 # load x3 with value 0xb05ff34b4bb1b7a1
sw x3, 0(x2) # store 0xb05ff34b4bb1b7a1 in memory
flw f11, 0(x2) # load 0xb05ff34b4bb1b7a1 from memory into f11
fnmsub.s f21, f28, f20, f11, dyn # perform operation
fnmsub.s f21, f28, f20, f11, rdn # perform operation
fnmsub.s f21, f28, f20, f11, rmm # perform operation
fnmsub.s f21, f28, f20, f11, rne # perform operation
fnmsub.s f21, f28, f20, f11, rtz # perform operation
fnmsub.s f21, f28, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f28, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f28, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f28, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f28, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f28, f20, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x807fffff)
li x14, 0xace2b47004169909 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x10dae4a54927a68f # load x3 with value 0x10dae4a54927a68f
sw x3, 0(x2) # store 0x10dae4a54927a68f in memory
flw f19, 0(x2) # load 0x10dae4a54927a68f from memory into f19
fnmsub.s f14, f31, f3, f19, dyn # perform operation
fnmsub.s f14, f31, f3, f19, rdn # perform operation
fnmsub.s f14, f31, f3, f19, rmm # perform operation
fnmsub.s f14, f31, f3, f19, rne # perform operation
fnmsub.s f14, f31, f3, f19, rtz # perform operation
fnmsub.s f14, f31, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f31, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f31, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f31, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f31, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f31, f3, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x400000)
li x30, 0x907b21886dcd20a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0x7d792e8ea0c7cb2d # load x3 with value 0x7d792e8ea0c7cb2d
sw x3, 0(x2) # store 0x7d792e8ea0c7cb2d in memory
flw f5, 0(x2) # load 0x7d792e8ea0c7cb2d from memory into f5
fnmsub.s f30, f19, f11, f5, dyn # perform operation
fnmsub.s f30, f19, f11, f5, rdn # perform operation
fnmsub.s f30, f19, f11, f5, rmm # perform operation
fnmsub.s f30, f19, f11, f5, rne # perform operation
fnmsub.s f30, f19, f11, f5, rtz # perform operation
fnmsub.s f30, f19, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f19, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f19, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f19, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f19, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f19, f11, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80400000)
li x19, 0xe1fefc7480c10300 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
li x3, 0xec2f22b9edc70a95 # load x3 with value 0xec2f22b9edc70a95
sw x3, 0(x2) # store 0xec2f22b9edc70a95 in memory
flw f6, 0(x2) # load 0xec2f22b9edc70a95 from memory into f6
fnmsub.s f19, f24, f25, f6, dyn # perform operation
fnmsub.s f19, f24, f25, f6, rdn # perform operation
fnmsub.s f19, f24, f25, f6, rmm # perform operation
fnmsub.s f19, f24, f25, f6, rne # perform operation
fnmsub.s f19, f24, f25, f6, rtz # perform operation
fnmsub.s f19, f24, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f24, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f24, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f24, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f24, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f24, f25, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x1)
li x14, 0xea53e002d286bf15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0xb79e19d8a1b04a19 # load x3 with value 0xb79e19d8a1b04a19
sw x3, 0(x2) # store 0xb79e19d8a1b04a19 in memory
flw f15, 0(x2) # load 0xb79e19d8a1b04a19 from memory into f15
fnmsub.s f14, f17, f6, f15, dyn # perform operation
fnmsub.s f14, f17, f6, f15, rdn # perform operation
fnmsub.s f14, f17, f6, f15, rmm # perform operation
fnmsub.s f14, f17, f6, f15, rne # perform operation
fnmsub.s f14, f17, f6, f15, rtz # perform operation
fnmsub.s f14, f17, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f17, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f17, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f17, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f17, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f17, f6, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000001)
li x27, 0x8d9624dfdd1e0fd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0xeb7d3606e9e298af # load x3 with value 0xeb7d3606e9e298af
sw x3, 0(x2) # store 0xeb7d3606e9e298af in memory
flw f16, 0(x2) # load 0xeb7d3606e9e298af from memory into f16
fnmsub.s f27, f4, f20, f16, dyn # perform operation
fnmsub.s f27, f4, f20, f16, rdn # perform operation
fnmsub.s f27, f4, f20, f16, rmm # perform operation
fnmsub.s f27, f4, f20, f16, rne # perform operation
fnmsub.s f27, f4, f20, f16, rtz # perform operation
fnmsub.s f27, f4, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f4, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f4, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f4, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f4, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f4, f20, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800000)
li x16, 0x27b8d1088fee78c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0x37954c6db6346b12 # load x3 with value 0x37954c6db6346b12
sw x3, 0(x2) # store 0x37954c6db6346b12 in memory
flw f25, 0(x2) # load 0x37954c6db6346b12 from memory into f25
fnmsub.s f16, f6, f7, f25, dyn # perform operation
fnmsub.s f16, f6, f7, f25, rdn # perform operation
fnmsub.s f16, f6, f7, f25, rmm # perform operation
fnmsub.s f16, f6, f7, f25, rne # perform operation
fnmsub.s f16, f6, f7, f25, rtz # perform operation
fnmsub.s f16, f6, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f6, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f6, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f6, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f6, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f6, f7, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff800000)
li x30, 0x0d2c788281896a25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0x55a4f3a9667e91f3 # load x3 with value 0x55a4f3a9667e91f3
sw x3, 0(x2) # store 0x55a4f3a9667e91f3 in memory
flw f25, 0(x2) # load 0x55a4f3a9667e91f3 from memory into f25
fnmsub.s f30, f9, f17, f25, dyn # perform operation
fnmsub.s f30, f9, f17, f25, rdn # perform operation
fnmsub.s f30, f9, f17, f25, rmm # perform operation
fnmsub.s f30, f9, f17, f25, rne # perform operation
fnmsub.s f30, f9, f17, f25, rtz # perform operation
fnmsub.s f30, f9, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f9, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f9, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f9, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f9, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f9, f17, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fc00000)
li x19, 0x9ec4d51370229723 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0xd4410d14d6fc9003 # load x3 with value 0xd4410d14d6fc9003
sw x3, 0(x2) # store 0xd4410d14d6fc9003 in memory
flw f9, 0(x2) # load 0xd4410d14d6fc9003 from memory into f9
fnmsub.s f19, f17, f1, f9, dyn # perform operation
fnmsub.s f19, f17, f1, f9, rdn # perform operation
fnmsub.s f19, f17, f1, f9, rmm # perform operation
fnmsub.s f19, f17, f1, f9, rne # perform operation
fnmsub.s f19, f17, f1, f9, rtz # perform operation
fnmsub.s f19, f17, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f17, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f17, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f17, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f17, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f17, f1, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffffff)
li x30, 0x8cad4ce358d52397 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0x1993f4be9ebcb3b0 # load x3 with value 0x1993f4be9ebcb3b0
sw x3, 0(x2) # store 0x1993f4be9ebcb3b0 in memory
flw f5, 0(x2) # load 0x1993f4be9ebcb3b0 from memory into f5
fnmsub.s f30, f27, f17, f5, dyn # perform operation
fnmsub.s f30, f27, f17, f5, rdn # perform operation
fnmsub.s f30, f27, f17, f5, rmm # perform operation
fnmsub.s f30, f27, f17, f5, rne # perform operation
fnmsub.s f30, f27, f17, f5, rtz # perform operation
fnmsub.s f30, f27, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f27, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f27, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f27, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f27, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f27, f17, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800001)
li x5, 0x532b8da757e27814 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0xdf48a4c9d1367fce # load x3 with value 0xdf48a4c9d1367fce
sw x3, 0(x2) # store 0xdf48a4c9d1367fce in memory
flw f9, 0(x2) # load 0xdf48a4c9d1367fce from memory into f9
fnmsub.s f5, f24, f13, f9, dyn # perform operation
fnmsub.s f5, f24, f13, f9, rdn # perform operation
fnmsub.s f5, f24, f13, f9, rmm # perform operation
fnmsub.s f5, f24, f13, f9, rne # perform operation
fnmsub.s f5, f24, f13, f9, rtz # perform operation
fnmsub.s f5, f24, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f24, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f24, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f24, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f24, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f24, f13, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fbfffff)
li x20, 0x725b9d0bd518358d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
li x3, 0x25c7e192c490682a # load x3 with value 0x25c7e192c490682a
sw x3, 0(x2) # store 0x25c7e192c490682a in memory
flw f25, 0(x2) # load 0x25c7e192c490682a from memory into f25
fnmsub.s f20, f2, f22, f25, dyn # perform operation
fnmsub.s f20, f2, f22, f25, rdn # perform operation
fnmsub.s f20, f2, f22, f25, rmm # perform operation
fnmsub.s f20, f2, f22, f25, rne # perform operation
fnmsub.s f20, f2, f22, f25, rtz # perform operation
fnmsub.s f20, f2, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f2, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f2, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f2, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f2, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f2, f22, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7ef8654f)
li x7, 0x407c81dd31a6c727 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0x6ac4e1c9b8a79580 # load x3 with value 0x6ac4e1c9b8a79580
sw x3, 0(x2) # store 0x6ac4e1c9b8a79580 in memory
flw f9, 0(x2) # load 0x6ac4e1c9b8a79580 from memory into f9
fnmsub.s f7, f14, f30, f9, dyn # perform operation
fnmsub.s f7, f14, f30, f9, rdn # perform operation
fnmsub.s f7, f14, f30, f9, rmm # perform operation
fnmsub.s f7, f14, f30, f9, rne # perform operation
fnmsub.s f7, f14, f30, f9, rtz # perform operation
fnmsub.s f7, f14, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f14, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f14, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f14, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f14, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f14, f30, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x813d9ab0)
li x17, 0xcf229eb7206df4b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x14ec73badc947085 # load x3 with value 0x14ec73badc947085
sw x3, 0(x2) # store 0x14ec73badc947085 in memory
flw f18, 0(x2) # load 0x14ec73badc947085 from memory into f18
fnmsub.s f17, f9, f30, f18, dyn # perform operation
fnmsub.s f17, f9, f30, f18, rdn # perform operation
fnmsub.s f17, f9, f30, f18, rmm # perform operation
fnmsub.s f17, f9, f30, f18, rne # perform operation
fnmsub.s f17, f9, f30, f18, rtz # perform operation
fnmsub.s f17, f9, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f9, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f9, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f9, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f9, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f9, f30, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x0)
li x4, 0x9a270ef17b2a4628 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0xde3282f9b32bdb73 # load x3 with value 0xde3282f9b32bdb73
sw x3, 0(x2) # store 0xde3282f9b32bdb73 in memory
flw f10, 0(x2) # load 0xde3282f9b32bdb73 from memory into f10
fnmsub.s f4, f31, f28, f10, dyn # perform operation
fnmsub.s f4, f31, f28, f10, rdn # perform operation
fnmsub.s f4, f31, f28, f10, rmm # perform operation
fnmsub.s f4, f31, f28, f10, rne # perform operation
fnmsub.s f4, f31, f28, f10, rtz # perform operation
fnmsub.s f4, f31, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f31, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f31, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f31, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f31, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f31, f28, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000000)
li x26, 0x195bc24e0d15380e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0x268db12540fc758c # load x3 with value 0x268db12540fc758c
sw x3, 0(x2) # store 0x268db12540fc758c in memory
flw f16, 0(x2) # load 0x268db12540fc758c from memory into f16
fnmsub.s f26, f22, f15, f16, dyn # perform operation
fnmsub.s f26, f22, f15, f16, rdn # perform operation
fnmsub.s f26, f22, f15, f16, rmm # perform operation
fnmsub.s f26, f22, f15, f16, rne # perform operation
fnmsub.s f26, f22, f15, f16, rtz # perform operation
fnmsub.s f26, f22, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f22, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f22, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f22, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f22, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f22, f15, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3f800000)
li x20, 0xe0760d0c0cffee4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0x3f11317957af1d38 # load x3 with value 0x3f11317957af1d38
sw x3, 0(x2) # store 0x3f11317957af1d38 in memory
flw f16, 0(x2) # load 0x3f11317957af1d38 from memory into f16
fnmsub.s f20, f21, f24, f16, dyn # perform operation
fnmsub.s f20, f21, f24, f16, rdn # perform operation
fnmsub.s f20, f21, f24, f16, rmm # perform operation
fnmsub.s f20, f21, f24, f16, rne # perform operation
fnmsub.s f20, f21, f24, f16, rtz # perform operation
fnmsub.s f20, f21, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f21, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f21, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f21, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f21, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f21, f24, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbf800000)
li x24, 0xe01b0db68db24c81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0x6a71d5ae329907cf # load x3 with value 0x6a71d5ae329907cf
sw x3, 0(x2) # store 0x6a71d5ae329907cf in memory
flw f8, 0(x2) # load 0x6a71d5ae329907cf from memory into f8
fnmsub.s f24, f5, f23, f8, dyn # perform operation
fnmsub.s f24, f5, f23, f8, rdn # perform operation
fnmsub.s f24, f5, f23, f8, rmm # perform operation
fnmsub.s f24, f5, f23, f8, rne # perform operation
fnmsub.s f24, f5, f23, f8, rtz # perform operation
fnmsub.s f24, f5, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f5, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f5, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f5, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f5, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f5, f23, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3fc00000)
li x18, 0xe0dee7535528ca1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0x640c7a2e32e2521b # load x3 with value 0x640c7a2e32e2521b
sw x3, 0(x2) # store 0x640c7a2e32e2521b in memory
flw f11, 0(x2) # load 0x640c7a2e32e2521b from memory into f11
fnmsub.s f18, f19, f28, f11, dyn # perform operation
fnmsub.s f18, f19, f28, f11, rdn # perform operation
fnmsub.s f18, f19, f28, f11, rmm # perform operation
fnmsub.s f18, f19, f28, f11, rne # perform operation
fnmsub.s f18, f19, f28, f11, rtz # perform operation
fnmsub.s f18, f19, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f19, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f19, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f19, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f19, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f19, f28, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbfc00000)
li x26, 0x1fec4aa4aff690fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0x11c757a123fa1566 # load x3 with value 0x11c757a123fa1566
sw x3, 0(x2) # store 0x11c757a123fa1566 in memory
flw f8, 0(x2) # load 0x11c757a123fa1566 from memory into f8
fnmsub.s f26, f12, f5, f8, dyn # perform operation
fnmsub.s f26, f12, f5, f8, rdn # perform operation
fnmsub.s f26, f12, f5, f8, rmm # perform operation
fnmsub.s f26, f12, f5, f8, rne # perform operation
fnmsub.s f26, f12, f5, f8, rtz # perform operation
fnmsub.s f26, f12, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f12, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f12, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f12, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f12, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f12, f5, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x40000000)
li x11, 0xa80074b3ebb84b82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
li x3, 0x9bfab87c7aaa5588 # load x3 with value 0x9bfab87c7aaa5588
sw x3, 0(x2) # store 0x9bfab87c7aaa5588 in memory
flw f28, 0(x2) # load 0x9bfab87c7aaa5588 from memory into f28
fnmsub.s f11, f27, f3, f28, dyn # perform operation
fnmsub.s f11, f27, f3, f28, rdn # perform operation
fnmsub.s f11, f27, f3, f28, rmm # perform operation
fnmsub.s f11, f27, f3, f28, rne # perform operation
fnmsub.s f11, f27, f3, f28, rtz # perform operation
fnmsub.s f11, f27, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f27, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f27, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f27, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f27, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f27, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xc0000000)
li x16, 0xf02bfce8586ffa4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
li x3, 0x4f1dbbe261d4b0a4 # load x3 with value 0x4f1dbbe261d4b0a4
sw x3, 0(x2) # store 0x4f1dbbe261d4b0a4 in memory
flw f28, 0(x2) # load 0x4f1dbbe261d4b0a4 from memory into f28
fnmsub.s f16, f14, f25, f28, dyn # perform operation
fnmsub.s f16, f14, f25, f28, rdn # perform operation
fnmsub.s f16, f14, f25, f28, rmm # perform operation
fnmsub.s f16, f14, f25, f28, rne # perform operation
fnmsub.s f16, f14, f25, f28, rtz # perform operation
fnmsub.s f16, f14, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f14, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f14, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f14, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f14, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f14, f25, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x800000)
li x30, 0x297f721db0042ddf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0x34e1be8ca8516b32 # load x3 with value 0x34e1be8ca8516b32
sw x3, 0(x2) # store 0x34e1be8ca8516b32 in memory
flw f17, 0(x2) # load 0x34e1be8ca8516b32 from memory into f17
fnmsub.s f30, f24, f16, f17, dyn # perform operation
fnmsub.s f30, f24, f16, f17, rdn # perform operation
fnmsub.s f30, f24, f16, f17, rmm # perform operation
fnmsub.s f30, f24, f16, f17, rne # perform operation
fnmsub.s f30, f24, f16, f17, rtz # perform operation
fnmsub.s f30, f24, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f24, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f24, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f24, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f24, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f24, f16, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80800000)
li x15, 0x6df25684bf6eabfe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0xf67a491b7ba82b1 # load x3 with value 0xf67a491b7ba82b1
sw x3, 0(x2) # store 0xf67a491b7ba82b1 in memory
flw f9, 0(x2) # load 0xf67a491b7ba82b1 from memory into f9
fnmsub.s f15, f3, f27, f9, dyn # perform operation
fnmsub.s f15, f3, f27, f9, rdn # perform operation
fnmsub.s f15, f3, f27, f9, rmm # perform operation
fnmsub.s f15, f3, f27, f9, rne # perform operation
fnmsub.s f15, f3, f27, f9, rtz # perform operation
fnmsub.s f15, f3, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f3, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f3, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f3, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f3, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f3, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f7fffff)
li x15, 0xb754bee4fa8dad1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0x52123d1767038d8c # load x3 with value 0x52123d1767038d8c
sw x3, 0(x2) # store 0x52123d1767038d8c in memory
flw f6, 0(x2) # load 0x52123d1767038d8c from memory into f6
fnmsub.s f15, f30, f19, f6, dyn # perform operation
fnmsub.s f15, f30, f19, f6, rdn # perform operation
fnmsub.s f15, f30, f19, f6, rmm # perform operation
fnmsub.s f15, f30, f19, f6, rne # perform operation
fnmsub.s f15, f30, f19, f6, rtz # perform operation
fnmsub.s f15, f30, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f30, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f30, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f30, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f30, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f30, f19, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff7fffff)
li x16, 0x4cbd8d044e9acda1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0x1d17029b628d47c7 # load x3 with value 0x1d17029b628d47c7
sw x3, 0(x2) # store 0x1d17029b628d47c7 in memory
flw f11, 0(x2) # load 0x1d17029b628d47c7 from memory into f11
fnmsub.s f16, f1, f19, f11, dyn # perform operation
fnmsub.s f16, f1, f19, f11, rdn # perform operation
fnmsub.s f16, f1, f19, f11, rmm # perform operation
fnmsub.s f16, f1, f19, f11, rne # perform operation
fnmsub.s f16, f1, f19, f11, rtz # perform operation
fnmsub.s f16, f1, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f1, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f1, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f1, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f1, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f1, f19, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffff)
li x10, 0xdcc5212017fdc9cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
li x3, 0xe242c6f1d2ada93a # load x3 with value 0xe242c6f1d2ada93a
sw x3, 0(x2) # store 0xe242c6f1d2ada93a in memory
flw f13, 0(x2) # load 0xe242c6f1d2ada93a from memory into f13
fnmsub.s f10, f3, f7, f13, dyn # perform operation
fnmsub.s f10, f3, f7, f13, rdn # perform operation
fnmsub.s f10, f3, f7, f13, rmm # perform operation
fnmsub.s f10, f3, f7, f13, rne # perform operation
fnmsub.s f10, f3, f7, f13, rtz # perform operation
fnmsub.s f10, f3, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f3, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f3, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f3, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f3, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f3, f7, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x807fffff)
li x18, 0xe827f17bdda45a71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0xa2db833023e6d817 # load x3 with value 0xa2db833023e6d817
sw x3, 0(x2) # store 0xa2db833023e6d817 in memory
flw f6, 0(x2) # load 0xa2db833023e6d817 from memory into f6
fnmsub.s f18, f4, f11, f6, dyn # perform operation
fnmsub.s f18, f4, f11, f6, rdn # perform operation
fnmsub.s f18, f4, f11, f6, rmm # perform operation
fnmsub.s f18, f4, f11, f6, rne # perform operation
fnmsub.s f18, f4, f11, f6, rtz # perform operation
fnmsub.s f18, f4, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f4, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f4, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f4, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f4, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f4, f11, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x400000)
li x20, 0x85dcceb51d45c98b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x4e4a122b2afa7aa5 # load x3 with value 0x4e4a122b2afa7aa5
sw x3, 0(x2) # store 0x4e4a122b2afa7aa5 in memory
flw f13, 0(x2) # load 0x4e4a122b2afa7aa5 from memory into f13
fnmsub.s f20, f6, f4, f13, dyn # perform operation
fnmsub.s f20, f6, f4, f13, rdn # perform operation
fnmsub.s f20, f6, f4, f13, rmm # perform operation
fnmsub.s f20, f6, f4, f13, rne # perform operation
fnmsub.s f20, f6, f4, f13, rtz # perform operation
fnmsub.s f20, f6, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f6, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f6, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f6, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f6, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f6, f4, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80400000)
li x23, 0x70461e58d2ddd42b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0xba6724e75706c0d1 # load x3 with value 0xba6724e75706c0d1
sw x3, 0(x2) # store 0xba6724e75706c0d1 in memory
flw f31, 0(x2) # load 0xba6724e75706c0d1 from memory into f31
fnmsub.s f23, f7, f5, f31, dyn # perform operation
fnmsub.s f23, f7, f5, f31, rdn # perform operation
fnmsub.s f23, f7, f5, f31, rmm # perform operation
fnmsub.s f23, f7, f5, f31, rne # perform operation
fnmsub.s f23, f7, f5, f31, rtz # perform operation
fnmsub.s f23, f7, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f7, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f7, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f7, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f7, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f7, f5, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x1)
li x3, 0x8b610c71fcd694f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0x5f61ae26e86a0641 # load x3 with value 0x5f61ae26e86a0641
sw x3, 0(x2) # store 0x5f61ae26e86a0641 in memory
flw f26, 0(x2) # load 0x5f61ae26e86a0641 from memory into f26
fnmsub.s f3, f18, f24, f26, dyn # perform operation
fnmsub.s f3, f18, f24, f26, rdn # perform operation
fnmsub.s f3, f18, f24, f26, rmm # perform operation
fnmsub.s f3, f18, f24, f26, rne # perform operation
fnmsub.s f3, f18, f24, f26, rtz # perform operation
fnmsub.s f3, f18, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f18, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f18, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f18, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f18, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f18, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000001)
li x6, 0x3c73fa545ba52927 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0x987c3e4aa4ffad08 # load x3 with value 0x987c3e4aa4ffad08
sw x3, 0(x2) # store 0x987c3e4aa4ffad08 in memory
flw f24, 0(x2) # load 0x987c3e4aa4ffad08 from memory into f24
fnmsub.s f6, f31, f26, f24, dyn # perform operation
fnmsub.s f6, f31, f26, f24, rdn # perform operation
fnmsub.s f6, f31, f26, f24, rmm # perform operation
fnmsub.s f6, f31, f26, f24, rne # perform operation
fnmsub.s f6, f31, f26, f24, rtz # perform operation
fnmsub.s f6, f31, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f31, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f31, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f31, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f31, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f31, f26, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800000)
li x14, 0x0b5bd118e39d3f96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0x17e7c92606b9375e # load x3 with value 0x17e7c92606b9375e
sw x3, 0(x2) # store 0x17e7c92606b9375e in memory
flw f19, 0(x2) # load 0x17e7c92606b9375e from memory into f19
fnmsub.s f14, f13, f21, f19, dyn # perform operation
fnmsub.s f14, f13, f21, f19, rdn # perform operation
fnmsub.s f14, f13, f21, f19, rmm # perform operation
fnmsub.s f14, f13, f21, f19, rne # perform operation
fnmsub.s f14, f13, f21, f19, rtz # perform operation
fnmsub.s f14, f13, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f13, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f13, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f13, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f13, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f13, f21, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff800000)
li x10, 0x81efe71e5801022d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0xfd9b2022dab85f7a # load x3 with value 0xfd9b2022dab85f7a
sw x3, 0(x2) # store 0xfd9b2022dab85f7a in memory
flw f3, 0(x2) # load 0xfd9b2022dab85f7a from memory into f3
fnmsub.s f10, f17, f20, f3, dyn # perform operation
fnmsub.s f10, f17, f20, f3, rdn # perform operation
fnmsub.s f10, f17, f20, f3, rmm # perform operation
fnmsub.s f10, f17, f20, f3, rne # perform operation
fnmsub.s f10, f17, f20, f3, rtz # perform operation
fnmsub.s f10, f17, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f17, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f17, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f17, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f17, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f17, f20, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fc00000)
li x6, 0xb1ac6ff489f4df07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0x710cf2bb09085d3d # load x3 with value 0x710cf2bb09085d3d
sw x3, 0(x2) # store 0x710cf2bb09085d3d in memory
flw f16, 0(x2) # load 0x710cf2bb09085d3d from memory into f16
fnmsub.s f6, f1, f11, f16, dyn # perform operation
fnmsub.s f6, f1, f11, f16, rdn # perform operation
fnmsub.s f6, f1, f11, f16, rmm # perform operation
fnmsub.s f6, f1, f11, f16, rne # perform operation
fnmsub.s f6, f1, f11, f16, rtz # perform operation
fnmsub.s f6, f1, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f1, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f1, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f1, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f1, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f1, f11, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffffff)
li x1, 0xe3c5300649a70949 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0xc2c6bf0a443ffe94 # load x3 with value 0xc2c6bf0a443ffe94
sw x3, 0(x2) # store 0xc2c6bf0a443ffe94 in memory
flw f10, 0(x2) # load 0xc2c6bf0a443ffe94 from memory into f10
fnmsub.s f1, f18, f25, f10, dyn # perform operation
fnmsub.s f1, f18, f25, f10, rdn # perform operation
fnmsub.s f1, f18, f25, f10, rmm # perform operation
fnmsub.s f1, f18, f25, f10, rne # perform operation
fnmsub.s f1, f18, f25, f10, rtz # perform operation
fnmsub.s f1, f18, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f18, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f18, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f18, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f18, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f18, f25, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800001)
li x7, 0xc1ec48c579e437aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
li x3, 0xfbcff302ebbe24d7 # load x3 with value 0xfbcff302ebbe24d7
sw x3, 0(x2) # store 0xfbcff302ebbe24d7 in memory
flw f8, 0(x2) # load 0xfbcff302ebbe24d7 from memory into f8
fnmsub.s f7, f12, f30, f8, dyn # perform operation
fnmsub.s f7, f12, f30, f8, rdn # perform operation
fnmsub.s f7, f12, f30, f8, rmm # perform operation
fnmsub.s f7, f12, f30, f8, rne # perform operation
fnmsub.s f7, f12, f30, f8, rtz # perform operation
fnmsub.s f7, f12, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f12, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f12, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f12, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f12, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f12, f30, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fbfffff)
li x23, 0x017d7ffb32be0646 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
li x3, 0xc5ffc68157aeecee # load x3 with value 0xc5ffc68157aeecee
sw x3, 0(x2) # store 0xc5ffc68157aeecee in memory
flw f21, 0(x2) # load 0xc5ffc68157aeecee from memory into f21
fnmsub.s f23, f15, f18, f21, dyn # perform operation
fnmsub.s f23, f15, f18, f21, rdn # perform operation
fnmsub.s f23, f15, f18, f21, rmm # perform operation
fnmsub.s f23, f15, f18, f21, rne # perform operation
fnmsub.s f23, f15, f18, f21, rtz # perform operation
fnmsub.s f23, f15, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f15, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f15, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f15, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f15, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f15, f18, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7ef8654f)
li x27, 0x35bf78edb590f4c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0xdcfc4d83c69da692 # load x3 with value 0xdcfc4d83c69da692
sw x3, 0(x2) # store 0xdcfc4d83c69da692 in memory
flw f28, 0(x2) # load 0xdcfc4d83c69da692 from memory into f28
fnmsub.s f27, f3, f20, f28, dyn # perform operation
fnmsub.s f27, f3, f20, f28, rdn # perform operation
fnmsub.s f27, f3, f20, f28, rmm # perform operation
fnmsub.s f27, f3, f20, f28, rne # perform operation
fnmsub.s f27, f3, f20, f28, rtz # perform operation
fnmsub.s f27, f3, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f3, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f3, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f3, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f3, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f3, f20, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x813d9ab0)
li x5, 0x29ba90d787c5da6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
li x3, 0xd04f93c05a44b210 # load x3 with value 0xd04f93c05a44b210
sw x3, 0(x2) # store 0xd04f93c05a44b210 in memory
flw f11, 0(x2) # load 0xd04f93c05a44b210 from memory into f11
fnmsub.s f5, f17, f31, f11, dyn # perform operation
fnmsub.s f5, f17, f31, f11, rdn # perform operation
fnmsub.s f5, f17, f31, f11, rmm # perform operation
fnmsub.s f5, f17, f31, f11, rne # perform operation
fnmsub.s f5, f17, f31, f11, rtz # perform operation
fnmsub.s f5, f17, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f17, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f17, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f17, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f17, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f17, f31, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x0)
li x16, 0xb95cd496fd48b079 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0xf5135f3501ca7e6 # load x3 with value 0xf5135f3501ca7e6
sw x3, 0(x2) # store 0xf5135f3501ca7e6 in memory
flw f25, 0(x2) # load 0xf5135f3501ca7e6 from memory into f25
fnmsub.s f16, f5, f18, f25, dyn # perform operation
fnmsub.s f16, f5, f18, f25, rdn # perform operation
fnmsub.s f16, f5, f18, f25, rmm # perform operation
fnmsub.s f16, f5, f18, f25, rne # perform operation
fnmsub.s f16, f5, f18, f25, rtz # perform operation
fnmsub.s f16, f5, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f5, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f5, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f5, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f5, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f5, f18, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000000)
li x18, 0x01d12ae503bb0550 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
li x3, 0x2707a828524112e0 # load x3 with value 0x2707a828524112e0
sw x3, 0(x2) # store 0x2707a828524112e0 in memory
flw f6, 0(x2) # load 0x2707a828524112e0 from memory into f6
fnmsub.s f18, f20, f26, f6, dyn # perform operation
fnmsub.s f18, f20, f26, f6, rdn # perform operation
fnmsub.s f18, f20, f26, f6, rmm # perform operation
fnmsub.s f18, f20, f26, f6, rne # perform operation
fnmsub.s f18, f20, f26, f6, rtz # perform operation
fnmsub.s f18, f20, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f20, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f20, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f20, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f20, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f20, f26, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3f800000)
li x29, 0x115c6d0ebd9c481c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0xd991c833ba10f934 # load x3 with value 0xd991c833ba10f934
sw x3, 0(x2) # store 0xd991c833ba10f934 in memory
flw f18, 0(x2) # load 0xd991c833ba10f934 from memory into f18
fnmsub.s f29, f16, f2, f18, dyn # perform operation
fnmsub.s f29, f16, f2, f18, rdn # perform operation
fnmsub.s f29, f16, f2, f18, rmm # perform operation
fnmsub.s f29, f16, f2, f18, rne # perform operation
fnmsub.s f29, f16, f2, f18, rtz # perform operation
fnmsub.s f29, f16, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f16, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f16, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f16, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f16, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f16, f2, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbf800000)
li x29, 0xd66f251f278c36e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
li x3, 0xe62bb3905bd125ab # load x3 with value 0xe62bb3905bd125ab
sw x3, 0(x2) # store 0xe62bb3905bd125ab in memory
flw f15, 0(x2) # load 0xe62bb3905bd125ab from memory into f15
fnmsub.s f29, f7, f17, f15, dyn # perform operation
fnmsub.s f29, f7, f17, f15, rdn # perform operation
fnmsub.s f29, f7, f17, f15, rmm # perform operation
fnmsub.s f29, f7, f17, f15, rne # perform operation
fnmsub.s f29, f7, f17, f15, rtz # perform operation
fnmsub.s f29, f7, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f7, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f7, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f7, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f7, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f7, f17, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3fc00000)
li x3, 0x28922bed9b2ddd99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
li x3, 0x5da3fd36cbe4f536 # load x3 with value 0x5da3fd36cbe4f536
sw x3, 0(x2) # store 0x5da3fd36cbe4f536 in memory
flw f12, 0(x2) # load 0x5da3fd36cbe4f536 from memory into f12
fnmsub.s f3, f31, f26, f12, dyn # perform operation
fnmsub.s f3, f31, f26, f12, rdn # perform operation
fnmsub.s f3, f31, f26, f12, rmm # perform operation
fnmsub.s f3, f31, f26, f12, rne # perform operation
fnmsub.s f3, f31, f26, f12, rtz # perform operation
fnmsub.s f3, f31, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f31, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f31, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f31, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f31, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f31, f26, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbfc00000)
li x4, 0xbc2750a21021c6b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x821fba9e69c8a851 # load x3 with value 0x821fba9e69c8a851
sw x3, 0(x2) # store 0x821fba9e69c8a851 in memory
flw f22, 0(x2) # load 0x821fba9e69c8a851 from memory into f22
fnmsub.s f4, f1, f15, f22, dyn # perform operation
fnmsub.s f4, f1, f15, f22, rdn # perform operation
fnmsub.s f4, f1, f15, f22, rmm # perform operation
fnmsub.s f4, f1, f15, f22, rne # perform operation
fnmsub.s f4, f1, f15, f22, rtz # perform operation
fnmsub.s f4, f1, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f1, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f1, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f1, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f1, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f1, f15, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x40000000)
li x28, 0xdde4143d3d31124f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
li x3, 0xe488f26cde871149 # load x3 with value 0xe488f26cde871149
sw x3, 0(x2) # store 0xe488f26cde871149 in memory
flw f15, 0(x2) # load 0xe488f26cde871149 from memory into f15
fnmsub.s f28, f13, f6, f15, dyn # perform operation
fnmsub.s f28, f13, f6, f15, rdn # perform operation
fnmsub.s f28, f13, f6, f15, rmm # perform operation
fnmsub.s f28, f13, f6, f15, rne # perform operation
fnmsub.s f28, f13, f6, f15, rtz # perform operation
fnmsub.s f28, f13, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f13, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f13, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f13, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f13, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f13, f6, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xc0000000)
li x20, 0x251f852066e07fd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
li x3, 0x4aadb826234bc02e # load x3 with value 0x4aadb826234bc02e
sw x3, 0(x2) # store 0x4aadb826234bc02e in memory
flw f29, 0(x2) # load 0x4aadb826234bc02e from memory into f29
fnmsub.s f20, f26, f23, f29, dyn # perform operation
fnmsub.s f20, f26, f23, f29, rdn # perform operation
fnmsub.s f20, f26, f23, f29, rmm # perform operation
fnmsub.s f20, f26, f23, f29, rne # perform operation
fnmsub.s f20, f26, f23, f29, rtz # perform operation
fnmsub.s f20, f26, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f26, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f26, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f26, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f26, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f26, f23, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x800000)
li x4, 0x9412be2e0e3ca7d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0x765c6173f83457ba # load x3 with value 0x765c6173f83457ba
sw x3, 0(x2) # store 0x765c6173f83457ba in memory
flw f19, 0(x2) # load 0x765c6173f83457ba from memory into f19
fnmsub.s f4, f23, f7, f19, dyn # perform operation
fnmsub.s f4, f23, f7, f19, rdn # perform operation
fnmsub.s f4, f23, f7, f19, rmm # perform operation
fnmsub.s f4, f23, f7, f19, rne # perform operation
fnmsub.s f4, f23, f7, f19, rtz # perform operation
fnmsub.s f4, f23, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f23, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f23, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f23, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f23, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f23, f7, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80800000)
li x5, 0xf0b33230a6acd572 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0xc8357909489318f2 # load x3 with value 0xc8357909489318f2
sw x3, 0(x2) # store 0xc8357909489318f2 in memory
flw f2, 0(x2) # load 0xc8357909489318f2 from memory into f2
fnmsub.s f5, f31, f21, f2, dyn # perform operation
fnmsub.s f5, f31, f21, f2, rdn # perform operation
fnmsub.s f5, f31, f21, f2, rmm # perform operation
fnmsub.s f5, f31, f21, f2, rne # perform operation
fnmsub.s f5, f31, f21, f2, rtz # perform operation
fnmsub.s f5, f31, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f31, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f31, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f31, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f31, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f31, f21, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f7fffff)
li x12, 0x1cb8072970486c9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
li x3, 0x4c3411d3210fbe2f # load x3 with value 0x4c3411d3210fbe2f
sw x3, 0(x2) # store 0x4c3411d3210fbe2f in memory
flw f9, 0(x2) # load 0x4c3411d3210fbe2f from memory into f9
fnmsub.s f12, f21, f7, f9, dyn # perform operation
fnmsub.s f12, f21, f7, f9, rdn # perform operation
fnmsub.s f12, f21, f7, f9, rmm # perform operation
fnmsub.s f12, f21, f7, f9, rne # perform operation
fnmsub.s f12, f21, f7, f9, rtz # perform operation
fnmsub.s f12, f21, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f21, f7, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff7fffff)
li x20, 0x1dfb869f2c967388 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0x6c34579580862053 # load x3 with value 0x6c34579580862053
sw x3, 0(x2) # store 0x6c34579580862053 in memory
flw f31, 0(x2) # load 0x6c34579580862053 from memory into f31
fnmsub.s f20, f25, f26, f31, dyn # perform operation
fnmsub.s f20, f25, f26, f31, rdn # perform operation
fnmsub.s f20, f25, f26, f31, rmm # perform operation
fnmsub.s f20, f25, f26, f31, rne # perform operation
fnmsub.s f20, f25, f26, f31, rtz # perform operation
fnmsub.s f20, f25, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f25, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f25, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f25, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f25, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f25, f26, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffff)
li x17, 0x28da6bfbbd167368 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
li x3, 0x1732313c4b4cb9fd # load x3 with value 0x1732313c4b4cb9fd
sw x3, 0(x2) # store 0x1732313c4b4cb9fd in memory
flw f15, 0(x2) # load 0x1732313c4b4cb9fd from memory into f15
fnmsub.s f17, f1, f23, f15, dyn # perform operation
fnmsub.s f17, f1, f23, f15, rdn # perform operation
fnmsub.s f17, f1, f23, f15, rmm # perform operation
fnmsub.s f17, f1, f23, f15, rne # perform operation
fnmsub.s f17, f1, f23, f15, rtz # perform operation
fnmsub.s f17, f1, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f1, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f1, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f1, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f1, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f1, f23, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x807fffff)
li x22, 0x529f03a29aeb992b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
li x3, 0x8458a5be47e6faef # load x3 with value 0x8458a5be47e6faef
sw x3, 0(x2) # store 0x8458a5be47e6faef in memory
flw f1, 0(x2) # load 0x8458a5be47e6faef from memory into f1
fnmsub.s f22, f9, f19, f1, dyn # perform operation
fnmsub.s f22, f9, f19, f1, rdn # perform operation
fnmsub.s f22, f9, f19, f1, rmm # perform operation
fnmsub.s f22, f9, f19, f1, rne # perform operation
fnmsub.s f22, f9, f19, f1, rtz # perform operation
fnmsub.s f22, f9, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f9, f19, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x400000)
li x4, 0xc8e8e95a3fabb345 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0xbe8fc65da485fd45 # load x3 with value 0xbe8fc65da485fd45
sw x3, 0(x2) # store 0xbe8fc65da485fd45 in memory
flw f7, 0(x2) # load 0xbe8fc65da485fd45 from memory into f7
fnmsub.s f4, f8, f18, f7, dyn # perform operation
fnmsub.s f4, f8, f18, f7, rdn # perform operation
fnmsub.s f4, f8, f18, f7, rmm # perform operation
fnmsub.s f4, f8, f18, f7, rne # perform operation
fnmsub.s f4, f8, f18, f7, rtz # perform operation
fnmsub.s f4, f8, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f8, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f8, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f8, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f8, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f8, f18, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80400000)
li x1, 0xc1ab31bdc0d57981 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0xe7a12c4cac3abcff # load x3 with value 0xe7a12c4cac3abcff
sw x3, 0(x2) # store 0xe7a12c4cac3abcff in memory
flw f14, 0(x2) # load 0xe7a12c4cac3abcff from memory into f14
fnmsub.s f1, f25, f30, f14, dyn # perform operation
fnmsub.s f1, f25, f30, f14, rdn # perform operation
fnmsub.s f1, f25, f30, f14, rmm # perform operation
fnmsub.s f1, f25, f30, f14, rne # perform operation
fnmsub.s f1, f25, f30, f14, rtz # perform operation
fnmsub.s f1, f25, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f25, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f25, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f25, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f25, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f25, f30, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x1)
li x1, 0x9feed4291906ac5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0xb39f17feccb0cf0d # load x3 with value 0xb39f17feccb0cf0d
sw x3, 0(x2) # store 0xb39f17feccb0cf0d in memory
flw f28, 0(x2) # load 0xb39f17feccb0cf0d from memory into f28
fnmsub.s f1, f25, f15, f28, dyn # perform operation
fnmsub.s f1, f25, f15, f28, rdn # perform operation
fnmsub.s f1, f25, f15, f28, rmm # perform operation
fnmsub.s f1, f25, f15, f28, rne # perform operation
fnmsub.s f1, f25, f15, f28, rtz # perform operation
fnmsub.s f1, f25, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f25, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f25, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f25, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f25, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f25, f15, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000001)
li x19, 0x554e4b002124cd50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0xb70f1c7d38807464 # load x3 with value 0xb70f1c7d38807464
sw x3, 0(x2) # store 0xb70f1c7d38807464 in memory
flw f28, 0(x2) # load 0xb70f1c7d38807464 from memory into f28
fnmsub.s f19, f4, f22, f28, dyn # perform operation
fnmsub.s f19, f4, f22, f28, rdn # perform operation
fnmsub.s f19, f4, f22, f28, rmm # perform operation
fnmsub.s f19, f4, f22, f28, rne # perform operation
fnmsub.s f19, f4, f22, f28, rtz # perform operation
fnmsub.s f19, f4, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f4, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f4, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f4, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f4, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f4, f22, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800000)
li x26, 0x5e33baa6c351e1af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
li x3, 0xca03534c034404fb # load x3 with value 0xca03534c034404fb
sw x3, 0(x2) # store 0xca03534c034404fb in memory
flw f31, 0(x2) # load 0xca03534c034404fb from memory into f31
fnmsub.s f26, f7, f20, f31, dyn # perform operation
fnmsub.s f26, f7, f20, f31, rdn # perform operation
fnmsub.s f26, f7, f20, f31, rmm # perform operation
fnmsub.s f26, f7, f20, f31, rne # perform operation
fnmsub.s f26, f7, f20, f31, rtz # perform operation
fnmsub.s f26, f7, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f7, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f7, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f7, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f7, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f7, f20, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff800000)
li x25, 0x61aba6157bb209fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0x13948c281a5fb783 # load x3 with value 0x13948c281a5fb783
sw x3, 0(x2) # store 0x13948c281a5fb783 in memory
flw f31, 0(x2) # load 0x13948c281a5fb783 from memory into f31
fnmsub.s f25, f30, f17, f31, dyn # perform operation
fnmsub.s f25, f30, f17, f31, rdn # perform operation
fnmsub.s f25, f30, f17, f31, rmm # perform operation
fnmsub.s f25, f30, f17, f31, rne # perform operation
fnmsub.s f25, f30, f17, f31, rtz # perform operation
fnmsub.s f25, f30, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f30, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f30, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f30, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f30, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f30, f17, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fc00000)
li x23, 0xacbdb526beb8cd1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0xacebe77b285eeaf5 # load x3 with value 0xacebe77b285eeaf5
sw x3, 0(x2) # store 0xacebe77b285eeaf5 in memory
flw f14, 0(x2) # load 0xacebe77b285eeaf5 from memory into f14
fnmsub.s f23, f13, f19, f14, dyn # perform operation
fnmsub.s f23, f13, f19, f14, rdn # perform operation
fnmsub.s f23, f13, f19, f14, rmm # perform operation
fnmsub.s f23, f13, f19, f14, rne # perform operation
fnmsub.s f23, f13, f19, f14, rtz # perform operation
fnmsub.s f23, f13, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f13, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f13, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f13, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f13, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f13, f19, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffffff)
li x30, 0xc80a906e4621fc4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0x727b6fc68c231990 # load x3 with value 0x727b6fc68c231990
sw x3, 0(x2) # store 0x727b6fc68c231990 in memory
flw f28, 0(x2) # load 0x727b6fc68c231990 from memory into f28
fnmsub.s f30, f8, f3, f28, dyn # perform operation
fnmsub.s f30, f8, f3, f28, rdn # perform operation
fnmsub.s f30, f8, f3, f28, rmm # perform operation
fnmsub.s f30, f8, f3, f28, rne # perform operation
fnmsub.s f30, f8, f3, f28, rtz # perform operation
fnmsub.s f30, f8, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f8, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f8, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f8, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f8, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f8, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800001)
li x6, 0xe531d447c00240d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0x72cae7ff54e081cd # load x3 with value 0x72cae7ff54e081cd
sw x3, 0(x2) # store 0x72cae7ff54e081cd in memory
flw f19, 0(x2) # load 0x72cae7ff54e081cd from memory into f19
fnmsub.s f6, f24, f12, f19, dyn # perform operation
fnmsub.s f6, f24, f12, f19, rdn # perform operation
fnmsub.s f6, f24, f12, f19, rmm # perform operation
fnmsub.s f6, f24, f12, f19, rne # perform operation
fnmsub.s f6, f24, f12, f19, rtz # perform operation
fnmsub.s f6, f24, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f24, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f24, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f24, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f24, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f24, f12, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fbfffff)
li x11, 0x40f6c5b3df60f36e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0xa23f99a9efb23eb9 # load x3 with value 0xa23f99a9efb23eb9
sw x3, 0(x2) # store 0xa23f99a9efb23eb9 in memory
flw f17, 0(x2) # load 0xa23f99a9efb23eb9 from memory into f17
fnmsub.s f11, f31, f23, f17, dyn # perform operation
fnmsub.s f11, f31, f23, f17, rdn # perform operation
fnmsub.s f11, f31, f23, f17, rmm # perform operation
fnmsub.s f11, f31, f23, f17, rne # perform operation
fnmsub.s f11, f31, f23, f17, rtz # perform operation
fnmsub.s f11, f31, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f31, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f31, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f31, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f31, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f31, f23, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7ef8654f)
li x26, 0xbbb0adf6381d99af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0x6061dc65b4d65e90 # load x3 with value 0x6061dc65b4d65e90
sw x3, 0(x2) # store 0x6061dc65b4d65e90 in memory
flw f20, 0(x2) # load 0x6061dc65b4d65e90 from memory into f20
fnmsub.s f26, f2, f3, f20, dyn # perform operation
fnmsub.s f26, f2, f3, f20, rdn # perform operation
fnmsub.s f26, f2, f3, f20, rmm # perform operation
fnmsub.s f26, f2, f3, f20, rne # perform operation
fnmsub.s f26, f2, f3, f20, rtz # perform operation
fnmsub.s f26, f2, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f2, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f2, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f2, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f2, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f2, f3, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x813d9ab0)
li x2, 0x0cf624134605017c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0x23e8829a9164713e # load x3 with value 0x23e8829a9164713e
sw x3, 0(x2) # store 0x23e8829a9164713e in memory
flw f20, 0(x2) # load 0x23e8829a9164713e from memory into f20
fnmsub.s f2, f7, f21, f20, dyn # perform operation
fnmsub.s f2, f7, f21, f20, rdn # perform operation
fnmsub.s f2, f7, f21, f20, rmm # perform operation
fnmsub.s f2, f7, f21, f20, rne # perform operation
fnmsub.s f2, f7, f21, f20, rtz # perform operation
fnmsub.s f2, f7, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f7, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f7, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f7, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f7, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f7, f21, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x0)
li x30, 0x66d203d5a2dc3399 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x6ea4d57634948cc4 # load x3 with value 0x6ea4d57634948cc4
sw x3, 0(x2) # store 0x6ea4d57634948cc4 in memory
flw f19, 0(x2) # load 0x6ea4d57634948cc4 from memory into f19
fnmsub.s f30, f11, f5, f19, dyn # perform operation
fnmsub.s f30, f11, f5, f19, rdn # perform operation
fnmsub.s f30, f11, f5, f19, rmm # perform operation
fnmsub.s f30, f11, f5, f19, rne # perform operation
fnmsub.s f30, f11, f5, f19, rtz # perform operation
fnmsub.s f30, f11, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f11, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f11, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f11, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f11, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f11, f5, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000000)
li x4, 0x95cc6eab4f7de79f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
li x3, 0xf4af449eb2ac7dda # load x3 with value 0xf4af449eb2ac7dda
sw x3, 0(x2) # store 0xf4af449eb2ac7dda in memory
flw f26, 0(x2) # load 0xf4af449eb2ac7dda from memory into f26
fnmsub.s f4, f28, f18, f26, dyn # perform operation
fnmsub.s f4, f28, f18, f26, rdn # perform operation
fnmsub.s f4, f28, f18, f26, rmm # perform operation
fnmsub.s f4, f28, f18, f26, rne # perform operation
fnmsub.s f4, f28, f18, f26, rtz # perform operation
fnmsub.s f4, f28, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f28, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f28, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f28, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f28, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f28, f18, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3f800000)
li x21, 0x875bf0684c6c90e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0x513b2196b5e0d514 # load x3 with value 0x513b2196b5e0d514
sw x3, 0(x2) # store 0x513b2196b5e0d514 in memory
flw f2, 0(x2) # load 0x513b2196b5e0d514 from memory into f2
fnmsub.s f21, f6, f15, f2, dyn # perform operation
fnmsub.s f21, f6, f15, f2, rdn # perform operation
fnmsub.s f21, f6, f15, f2, rmm # perform operation
fnmsub.s f21, f6, f15, f2, rne # perform operation
fnmsub.s f21, f6, f15, f2, rtz # perform operation
fnmsub.s f21, f6, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f6, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f6, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f6, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f6, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f6, f15, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbf800000)
li x27, 0x5268a98a70f4a902 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0x2f6eef01ba8477dd # load x3 with value 0x2f6eef01ba8477dd
sw x3, 0(x2) # store 0x2f6eef01ba8477dd in memory
flw f14, 0(x2) # load 0x2f6eef01ba8477dd from memory into f14
fnmsub.s f27, f18, f5, f14, dyn # perform operation
fnmsub.s f27, f18, f5, f14, rdn # perform operation
fnmsub.s f27, f18, f5, f14, rmm # perform operation
fnmsub.s f27, f18, f5, f14, rne # perform operation
fnmsub.s f27, f18, f5, f14, rtz # perform operation
fnmsub.s f27, f18, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f18, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f18, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f18, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f18, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f18, f5, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3fc00000)
li x31, 0xb73edb9177cf5a55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0x8d9887fea3da561f # load x3 with value 0x8d9887fea3da561f
sw x3, 0(x2) # store 0x8d9887fea3da561f in memory
flw f4, 0(x2) # load 0x8d9887fea3da561f from memory into f4
fnmsub.s f31, f16, f8, f4, dyn # perform operation
fnmsub.s f31, f16, f8, f4, rdn # perform operation
fnmsub.s f31, f16, f8, f4, rmm # perform operation
fnmsub.s f31, f16, f8, f4, rne # perform operation
fnmsub.s f31, f16, f8, f4, rtz # perform operation
fnmsub.s f31, f16, f8, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f16, f8, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f16, f8, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f16, f8, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f16, f8, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f16, f8, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbfc00000)
li x10, 0x554def44a8692e32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
li x3, 0x444be4ed93c8dbe # load x3 with value 0x444be4ed93c8dbe
sw x3, 0(x2) # store 0x444be4ed93c8dbe in memory
flw f12, 0(x2) # load 0x444be4ed93c8dbe from memory into f12
fnmsub.s f10, f14, f31, f12, dyn # perform operation
fnmsub.s f10, f14, f31, f12, rdn # perform operation
fnmsub.s f10, f14, f31, f12, rmm # perform operation
fnmsub.s f10, f14, f31, f12, rne # perform operation
fnmsub.s f10, f14, f31, f12, rtz # perform operation
fnmsub.s f10, f14, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f14, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f14, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f14, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f14, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f14, f31, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x40000000)
li x12, 0xa97baa539e5ad054 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0x34069c7603cd7d26 # load x3 with value 0x34069c7603cd7d26
sw x3, 0(x2) # store 0x34069c7603cd7d26 in memory
flw f16, 0(x2) # load 0x34069c7603cd7d26 from memory into f16
fnmsub.s f12, f27, f23, f16, dyn # perform operation
fnmsub.s f12, f27, f23, f16, rdn # perform operation
fnmsub.s f12, f27, f23, f16, rmm # perform operation
fnmsub.s f12, f27, f23, f16, rne # perform operation
fnmsub.s f12, f27, f23, f16, rtz # perform operation
fnmsub.s f12, f27, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f27, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f27, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f27, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f27, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f27, f23, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xc0000000)
li x29, 0xac2d4ecb8960aaa0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0xb144832e11cf499 # load x3 with value 0xb144832e11cf499
sw x3, 0(x2) # store 0xb144832e11cf499 in memory
flw f22, 0(x2) # load 0xb144832e11cf499 from memory into f22
fnmsub.s f29, f10, f3, f22, dyn # perform operation
fnmsub.s f29, f10, f3, f22, rdn # perform operation
fnmsub.s f29, f10, f3, f22, rmm # perform operation
fnmsub.s f29, f10, f3, f22, rne # perform operation
fnmsub.s f29, f10, f3, f22, rtz # perform operation
fnmsub.s f29, f10, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f10, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f10, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f10, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f10, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f10, f3, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x800000)
li x13, 0x8f4d57b21cc1f88a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
li x3, 0x1693ebea03d1d976 # load x3 with value 0x1693ebea03d1d976
sw x3, 0(x2) # store 0x1693ebea03d1d976 in memory
flw f31, 0(x2) # load 0x1693ebea03d1d976 from memory into f31
fnmsub.s f13, f6, f12, f31, dyn # perform operation
fnmsub.s f13, f6, f12, f31, rdn # perform operation
fnmsub.s f13, f6, f12, f31, rmm # perform operation
fnmsub.s f13, f6, f12, f31, rne # perform operation
fnmsub.s f13, f6, f12, f31, rtz # perform operation
fnmsub.s f13, f6, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f6, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f6, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f6, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f6, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f6, f12, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80800000)
li x12, 0x89a4a5dde3984583 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
li x3, 0x8b9e689955467ed8 # load x3 with value 0x8b9e689955467ed8
sw x3, 0(x2) # store 0x8b9e689955467ed8 in memory
flw f21, 0(x2) # load 0x8b9e689955467ed8 from memory into f21
fnmsub.s f12, f17, f29, f21, dyn # perform operation
fnmsub.s f12, f17, f29, f21, rdn # perform operation
fnmsub.s f12, f17, f29, f21, rmm # perform operation
fnmsub.s f12, f17, f29, f21, rne # perform operation
fnmsub.s f12, f17, f29, f21, rtz # perform operation
fnmsub.s f12, f17, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f17, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f17, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f17, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f17, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f17, f29, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f7fffff)
li x22, 0x1d6c6a0dbd88508b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0x1a887083a480d7ef # load x3 with value 0x1a887083a480d7ef
sw x3, 0(x2) # store 0x1a887083a480d7ef in memory
flw f4, 0(x2) # load 0x1a887083a480d7ef from memory into f4
fnmsub.s f22, f27, f30, f4, dyn # perform operation
fnmsub.s f22, f27, f30, f4, rdn # perform operation
fnmsub.s f22, f27, f30, f4, rmm # perform operation
fnmsub.s f22, f27, f30, f4, rne # perform operation
fnmsub.s f22, f27, f30, f4, rtz # perform operation
fnmsub.s f22, f27, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f27, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f27, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f27, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f27, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f27, f30, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff7fffff)
li x4, 0xf1ce71d9d701b913 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
li x3, 0xf3d88c717289d1c # load x3 with value 0xf3d88c717289d1c
sw x3, 0(x2) # store 0xf3d88c717289d1c in memory
flw f11, 0(x2) # load 0xf3d88c717289d1c from memory into f11
fnmsub.s f4, f29, f25, f11, dyn # perform operation
fnmsub.s f4, f29, f25, f11, rdn # perform operation
fnmsub.s f4, f29, f25, f11, rmm # perform operation
fnmsub.s f4, f29, f25, f11, rne # perform operation
fnmsub.s f4, f29, f25, f11, rtz # perform operation
fnmsub.s f4, f29, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f29, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f29, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f29, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f29, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f29, f25, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffff)
li x6, 0xb09e59bbd4a6515e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
li x3, 0xec0c24f53ee327fc # load x3 with value 0xec0c24f53ee327fc
sw x3, 0(x2) # store 0xec0c24f53ee327fc in memory
flw f19, 0(x2) # load 0xec0c24f53ee327fc from memory into f19
fnmsub.s f6, f16, f11, f19, dyn # perform operation
fnmsub.s f6, f16, f11, f19, rdn # perform operation
fnmsub.s f6, f16, f11, f19, rmm # perform operation
fnmsub.s f6, f16, f11, f19, rne # perform operation
fnmsub.s f6, f16, f11, f19, rtz # perform operation
fnmsub.s f6, f16, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f16, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f16, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f16, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f16, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f16, f11, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x807fffff)
li x3, 0x130ecd4380ed9200 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
li x3, 0x22d1f71189c10862 # load x3 with value 0x22d1f71189c10862
sw x3, 0(x2) # store 0x22d1f71189c10862 in memory
flw f14, 0(x2) # load 0x22d1f71189c10862 from memory into f14
fnmsub.s f3, f12, f18, f14, dyn # perform operation
fnmsub.s f3, f12, f18, f14, rdn # perform operation
fnmsub.s f3, f12, f18, f14, rmm # perform operation
fnmsub.s f3, f12, f18, f14, rne # perform operation
fnmsub.s f3, f12, f18, f14, rtz # perform operation
fnmsub.s f3, f12, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f12, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f12, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f12, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f12, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f12, f18, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x400000)
li x3, 0x9c05b5a549ae0d37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0x32657f5cc5da15bd # load x3 with value 0x32657f5cc5da15bd
sw x3, 0(x2) # store 0x32657f5cc5da15bd in memory
flw f11, 0(x2) # load 0x32657f5cc5da15bd from memory into f11
fnmsub.s f3, f14, f6, f11, dyn # perform operation
fnmsub.s f3, f14, f6, f11, rdn # perform operation
fnmsub.s f3, f14, f6, f11, rmm # perform operation
fnmsub.s f3, f14, f6, f11, rne # perform operation
fnmsub.s f3, f14, f6, f11, rtz # perform operation
fnmsub.s f3, f14, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f14, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f14, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f14, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f14, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f14, f6, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80400000)
li x17, 0xde170a04d925c760 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0x2f404abefda9546a # load x3 with value 0x2f404abefda9546a
sw x3, 0(x2) # store 0x2f404abefda9546a in memory
flw f27, 0(x2) # load 0x2f404abefda9546a from memory into f27
fnmsub.s f17, f7, f10, f27, dyn # perform operation
fnmsub.s f17, f7, f10, f27, rdn # perform operation
fnmsub.s f17, f7, f10, f27, rmm # perform operation
fnmsub.s f17, f7, f10, f27, rne # perform operation
fnmsub.s f17, f7, f10, f27, rtz # perform operation
fnmsub.s f17, f7, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f7, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f7, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f7, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f7, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f7, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x1)
li x18, 0x681c40f82be02bdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
li x3, 0xec002f157f7b3a8c # load x3 with value 0xec002f157f7b3a8c
sw x3, 0(x2) # store 0xec002f157f7b3a8c in memory
flw f15, 0(x2) # load 0xec002f157f7b3a8c from memory into f15
fnmsub.s f18, f3, f9, f15, dyn # perform operation
fnmsub.s f18, f3, f9, f15, rdn # perform operation
fnmsub.s f18, f3, f9, f15, rmm # perform operation
fnmsub.s f18, f3, f9, f15, rne # perform operation
fnmsub.s f18, f3, f9, f15, rtz # perform operation
fnmsub.s f18, f3, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f3, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f3, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f3, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f3, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f3, f9, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000001)
li x13, 0x7ee836629697092f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0x90cfc12491582e93 # load x3 with value 0x90cfc12491582e93
sw x3, 0(x2) # store 0x90cfc12491582e93 in memory
flw f7, 0(x2) # load 0x90cfc12491582e93 from memory into f7
fnmsub.s f13, f14, f25, f7, dyn # perform operation
fnmsub.s f13, f14, f25, f7, rdn # perform operation
fnmsub.s f13, f14, f25, f7, rmm # perform operation
fnmsub.s f13, f14, f25, f7, rne # perform operation
fnmsub.s f13, f14, f25, f7, rtz # perform operation
fnmsub.s f13, f14, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f14, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f14, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f14, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f14, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f14, f25, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800000)
li x9, 0x01c1788a24a78266 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0x4e2d9b32f29a311e # load x3 with value 0x4e2d9b32f29a311e
sw x3, 0(x2) # store 0x4e2d9b32f29a311e in memory
flw f8, 0(x2) # load 0x4e2d9b32f29a311e from memory into f8
fnmsub.s f9, f13, f30, f8, dyn # perform operation
fnmsub.s f9, f13, f30, f8, rdn # perform operation
fnmsub.s f9, f13, f30, f8, rmm # perform operation
fnmsub.s f9, f13, f30, f8, rne # perform operation
fnmsub.s f9, f13, f30, f8, rtz # perform operation
fnmsub.s f9, f13, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f13, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f13, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f13, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f13, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f13, f30, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff800000)
li x30, 0x8dbf2a5880a34192 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0xffad41da9160c3cb # load x3 with value 0xffad41da9160c3cb
sw x3, 0(x2) # store 0xffad41da9160c3cb in memory
flw f1, 0(x2) # load 0xffad41da9160c3cb from memory into f1
fnmsub.s f30, f26, f28, f1, dyn # perform operation
fnmsub.s f30, f26, f28, f1, rdn # perform operation
fnmsub.s f30, f26, f28, f1, rmm # perform operation
fnmsub.s f30, f26, f28, f1, rne # perform operation
fnmsub.s f30, f26, f28, f1, rtz # perform operation
fnmsub.s f30, f26, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f26, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f26, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f26, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f26, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f26, f28, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fc00000)
li x14, 0x8061bf8debfb3378 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0xa98ecd93aa6badc1 # load x3 with value 0xa98ecd93aa6badc1
sw x3, 0(x2) # store 0xa98ecd93aa6badc1 in memory
flw f10, 0(x2) # load 0xa98ecd93aa6badc1 from memory into f10
fnmsub.s f14, f20, f1, f10, dyn # perform operation
fnmsub.s f14, f20, f1, f10, rdn # perform operation
fnmsub.s f14, f20, f1, f10, rmm # perform operation
fnmsub.s f14, f20, f1, f10, rne # perform operation
fnmsub.s f14, f20, f1, f10, rtz # perform operation
fnmsub.s f14, f20, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f20, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f20, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f20, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f20, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f20, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffffff)
li x19, 0xfa33b5fa7de8b69c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0x4f6d25b7b9ac1404 # load x3 with value 0x4f6d25b7b9ac1404
sw x3, 0(x2) # store 0x4f6d25b7b9ac1404 in memory
flw f17, 0(x2) # load 0x4f6d25b7b9ac1404 from memory into f17
fnmsub.s f19, f30, f20, f17, dyn # perform operation
fnmsub.s f19, f30, f20, f17, rdn # perform operation
fnmsub.s f19, f30, f20, f17, rmm # perform operation
fnmsub.s f19, f30, f20, f17, rne # perform operation
fnmsub.s f19, f30, f20, f17, rtz # perform operation
fnmsub.s f19, f30, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f30, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f30, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f30, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f30, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f30, f20, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800001)
li x13, 0x548ee44a3cd5e78f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
li x3, 0x438a4d4dec92c03f # load x3 with value 0x438a4d4dec92c03f
sw x3, 0(x2) # store 0x438a4d4dec92c03f in memory
flw f20, 0(x2) # load 0x438a4d4dec92c03f from memory into f20
fnmsub.s f13, f3, f8, f20, dyn # perform operation
fnmsub.s f13, f3, f8, f20, rdn # perform operation
fnmsub.s f13, f3, f8, f20, rmm # perform operation
fnmsub.s f13, f3, f8, f20, rne # perform operation
fnmsub.s f13, f3, f8, f20, rtz # perform operation
fnmsub.s f13, f3, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f3, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f3, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f3, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f3, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f3, f8, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fbfffff)
li x31, 0x4802251b99847deb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0xab791aa392432b6f # load x3 with value 0xab791aa392432b6f
sw x3, 0(x2) # store 0xab791aa392432b6f in memory
flw f9, 0(x2) # load 0xab791aa392432b6f from memory into f9
fnmsub.s f31, f18, f25, f9, dyn # perform operation
fnmsub.s f31, f18, f25, f9, rdn # perform operation
fnmsub.s f31, f18, f25, f9, rmm # perform operation
fnmsub.s f31, f18, f25, f9, rne # perform operation
fnmsub.s f31, f18, f25, f9, rtz # perform operation
fnmsub.s f31, f18, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f18, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f18, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f18, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f18, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f18, f25, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7ef8654f)
li x31, 0x773ff5d3ab5c789e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0x693a47f58de8c4ec # load x3 with value 0x693a47f58de8c4ec
sw x3, 0(x2) # store 0x693a47f58de8c4ec in memory
flw f2, 0(x2) # load 0x693a47f58de8c4ec from memory into f2
fnmsub.s f31, f20, f23, f2, dyn # perform operation
fnmsub.s f31, f20, f23, f2, rdn # perform operation
fnmsub.s f31, f20, f23, f2, rmm # perform operation
fnmsub.s f31, f20, f23, f2, rne # perform operation
fnmsub.s f31, f20, f23, f2, rtz # perform operation
fnmsub.s f31, f20, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f20, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f20, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f20, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f20, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f20, f23, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x813d9ab0)
li x19, 0x5ace65ba5d708b3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
li x3, 0xe700997e1a56b593 # load x3 with value 0xe700997e1a56b593
sw x3, 0(x2) # store 0xe700997e1a56b593 in memory
flw f1, 0(x2) # load 0xe700997e1a56b593 from memory into f1
fnmsub.s f19, f12, f28, f1, dyn # perform operation
fnmsub.s f19, f12, f28, f1, rdn # perform operation
fnmsub.s f19, f12, f28, f1, rmm # perform operation
fnmsub.s f19, f12, f28, f1, rne # perform operation
fnmsub.s f19, f12, f28, f1, rtz # perform operation
fnmsub.s f19, f12, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f12, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f12, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f12, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f12, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f12, f28, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x0)
li x1, 0xd879adedf9725573 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0xbb25f814dbc5f094 # load x3 with value 0xbb25f814dbc5f094
sw x3, 0(x2) # store 0xbb25f814dbc5f094 in memory
flw f20, 0(x2) # load 0xbb25f814dbc5f094 from memory into f20
fnmsub.s f1, f23, f18, f20, dyn # perform operation
fnmsub.s f1, f23, f18, f20, rdn # perform operation
fnmsub.s f1, f23, f18, f20, rmm # perform operation
fnmsub.s f1, f23, f18, f20, rne # perform operation
fnmsub.s f1, f23, f18, f20, rtz # perform operation
fnmsub.s f1, f23, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f23, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f23, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f23, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f23, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f23, f18, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000000)
li x5, 0xcddd6f00a3a85fb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0x59889503dd2fdafa # load x3 with value 0x59889503dd2fdafa
sw x3, 0(x2) # store 0x59889503dd2fdafa in memory
flw f14, 0(x2) # load 0x59889503dd2fdafa from memory into f14
fnmsub.s f5, f6, f7, f14, dyn # perform operation
fnmsub.s f5, f6, f7, f14, rdn # perform operation
fnmsub.s f5, f6, f7, f14, rmm # perform operation
fnmsub.s f5, f6, f7, f14, rne # perform operation
fnmsub.s f5, f6, f7, f14, rtz # perform operation
fnmsub.s f5, f6, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f6, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f6, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f6, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f6, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f6, f7, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3f800000)
li x11, 0x61255454525a8249 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
li x3, 0x5b94c41666ed774e # load x3 with value 0x5b94c41666ed774e
sw x3, 0(x2) # store 0x5b94c41666ed774e in memory
flw f24, 0(x2) # load 0x5b94c41666ed774e from memory into f24
fnmsub.s f11, f12, f31, f24, dyn # perform operation
fnmsub.s f11, f12, f31, f24, rdn # perform operation
fnmsub.s f11, f12, f31, f24, rmm # perform operation
fnmsub.s f11, f12, f31, f24, rne # perform operation
fnmsub.s f11, f12, f31, f24, rtz # perform operation
fnmsub.s f11, f12, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f12, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f12, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f12, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f12, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f12, f31, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbf800000)
li x8, 0xe2cf6cac56bb49e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0x8818b359c260690e # load x3 with value 0x8818b359c260690e
sw x3, 0(x2) # store 0x8818b359c260690e in memory
flw f9, 0(x2) # load 0x8818b359c260690e from memory into f9
fnmsub.s f8, f21, f7, f9, dyn # perform operation
fnmsub.s f8, f21, f7, f9, rdn # perform operation
fnmsub.s f8, f21, f7, f9, rmm # perform operation
fnmsub.s f8, f21, f7, f9, rne # perform operation
fnmsub.s f8, f21, f7, f9, rtz # perform operation
fnmsub.s f8, f21, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f21, f7, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3fc00000)
li x17, 0xe5fed1f7fdb6dbba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0xf42cd7d1018d2494 # load x3 with value 0xf42cd7d1018d2494
sw x3, 0(x2) # store 0xf42cd7d1018d2494 in memory
flw f6, 0(x2) # load 0xf42cd7d1018d2494 from memory into f6
fnmsub.s f17, f16, f22, f6, dyn # perform operation
fnmsub.s f17, f16, f22, f6, rdn # perform operation
fnmsub.s f17, f16, f22, f6, rmm # perform operation
fnmsub.s f17, f16, f22, f6, rne # perform operation
fnmsub.s f17, f16, f22, f6, rtz # perform operation
fnmsub.s f17, f16, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f16, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f16, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f16, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f16, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f16, f22, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbfc00000)
li x3, 0x4efdbfd86ed677f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0x63aba107cea41835 # load x3 with value 0x63aba107cea41835
sw x3, 0(x2) # store 0x63aba107cea41835 in memory
flw f24, 0(x2) # load 0x63aba107cea41835 from memory into f24
fnmsub.s f3, f6, f1, f24, dyn # perform operation
fnmsub.s f3, f6, f1, f24, rdn # perform operation
fnmsub.s f3, f6, f1, f24, rmm # perform operation
fnmsub.s f3, f6, f1, f24, rne # perform operation
fnmsub.s f3, f6, f1, f24, rtz # perform operation
fnmsub.s f3, f6, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f6, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f6, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f6, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f6, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f6, f1, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x40000000)
li x27, 0x482fc0452ea95125 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0x115c2a00db7950da # load x3 with value 0x115c2a00db7950da
sw x3, 0(x2) # store 0x115c2a00db7950da in memory
flw f11, 0(x2) # load 0x115c2a00db7950da from memory into f11
fnmsub.s f27, f10, f23, f11, dyn # perform operation
fnmsub.s f27, f10, f23, f11, rdn # perform operation
fnmsub.s f27, f10, f23, f11, rmm # perform operation
fnmsub.s f27, f10, f23, f11, rne # perform operation
fnmsub.s f27, f10, f23, f11, rtz # perform operation
fnmsub.s f27, f10, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f10, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f10, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f10, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f10, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f10, f23, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xc0000000)
li x17, 0x33eecc78e97213e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
li x3, 0x5ead96ac5fffc636 # load x3 with value 0x5ead96ac5fffc636
sw x3, 0(x2) # store 0x5ead96ac5fffc636 in memory
flw f3, 0(x2) # load 0x5ead96ac5fffc636 from memory into f3
fnmsub.s f17, f24, f23, f3, dyn # perform operation
fnmsub.s f17, f24, f23, f3, rdn # perform operation
fnmsub.s f17, f24, f23, f3, rmm # perform operation
fnmsub.s f17, f24, f23, f3, rne # perform operation
fnmsub.s f17, f24, f23, f3, rtz # perform operation
fnmsub.s f17, f24, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f24, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f24, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f24, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f24, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f24, f23, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x800000)
li x14, 0x92521e11232bb57b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
li x3, 0xaaf84bb398785e72 # load x3 with value 0xaaf84bb398785e72
sw x3, 0(x2) # store 0xaaf84bb398785e72 in memory
flw f30, 0(x2) # load 0xaaf84bb398785e72 from memory into f30
fnmsub.s f14, f1, f12, f30, dyn # perform operation
fnmsub.s f14, f1, f12, f30, rdn # perform operation
fnmsub.s f14, f1, f12, f30, rmm # perform operation
fnmsub.s f14, f1, f12, f30, rne # perform operation
fnmsub.s f14, f1, f12, f30, rtz # perform operation
fnmsub.s f14, f1, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f1, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f1, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f1, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f1, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f1, f12, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80800000)
li x18, 0x62f60b708760cf7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0xa465a78d19dafae1 # load x3 with value 0xa465a78d19dafae1
sw x3, 0(x2) # store 0xa465a78d19dafae1 in memory
flw f11, 0(x2) # load 0xa465a78d19dafae1 from memory into f11
fnmsub.s f18, f9, f19, f11, dyn # perform operation
fnmsub.s f18, f9, f19, f11, rdn # perform operation
fnmsub.s f18, f9, f19, f11, rmm # perform operation
fnmsub.s f18, f9, f19, f11, rne # perform operation
fnmsub.s f18, f9, f19, f11, rtz # perform operation
fnmsub.s f18, f9, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f9, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f9, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f9, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f9, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f9, f19, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f7fffff)
li x15, 0xc61d523e469422c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0x8d2801d975816d7c # load x3 with value 0x8d2801d975816d7c
sw x3, 0(x2) # store 0x8d2801d975816d7c in memory
flw f8, 0(x2) # load 0x8d2801d975816d7c from memory into f8
fnmsub.s f15, f19, f29, f8, dyn # perform operation
fnmsub.s f15, f19, f29, f8, rdn # perform operation
fnmsub.s f15, f19, f29, f8, rmm # perform operation
fnmsub.s f15, f19, f29, f8, rne # perform operation
fnmsub.s f15, f19, f29, f8, rtz # perform operation
fnmsub.s f15, f19, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f19, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f19, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f19, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f19, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f19, f29, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff7fffff)
li x4, 0x9f59aa00c14913ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
li x3, 0xf5667398dc37af8b # load x3 with value 0xf5667398dc37af8b
sw x3, 0(x2) # store 0xf5667398dc37af8b in memory
flw f17, 0(x2) # load 0xf5667398dc37af8b from memory into f17
fnmsub.s f4, f26, f5, f17, dyn # perform operation
fnmsub.s f4, f26, f5, f17, rdn # perform operation
fnmsub.s f4, f26, f5, f17, rmm # perform operation
fnmsub.s f4, f26, f5, f17, rne # perform operation
fnmsub.s f4, f26, f5, f17, rtz # perform operation
fnmsub.s f4, f26, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f26, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f26, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f26, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f26, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f26, f5, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffff)
li x13, 0x9845616bddffc0b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x2ed0999d013a250a # load x3 with value 0x2ed0999d013a250a
sw x3, 0(x2) # store 0x2ed0999d013a250a in memory
flw f28, 0(x2) # load 0x2ed0999d013a250a from memory into f28
fnmsub.s f13, f8, f29, f28, dyn # perform operation
fnmsub.s f13, f8, f29, f28, rdn # perform operation
fnmsub.s f13, f8, f29, f28, rmm # perform operation
fnmsub.s f13, f8, f29, f28, rne # perform operation
fnmsub.s f13, f8, f29, f28, rtz # perform operation
fnmsub.s f13, f8, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f8, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f8, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f8, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f8, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f8, f29, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x807fffff)
li x20, 0xdc025d26cb71dcea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0x4ccdca517bd9b119 # load x3 with value 0x4ccdca517bd9b119
sw x3, 0(x2) # store 0x4ccdca517bd9b119 in memory
flw f9, 0(x2) # load 0x4ccdca517bd9b119 from memory into f9
fnmsub.s f20, f11, f23, f9, dyn # perform operation
fnmsub.s f20, f11, f23, f9, rdn # perform operation
fnmsub.s f20, f11, f23, f9, rmm # perform operation
fnmsub.s f20, f11, f23, f9, rne # perform operation
fnmsub.s f20, f11, f23, f9, rtz # perform operation
fnmsub.s f20, f11, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f11, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f11, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f11, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f11, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f11, f23, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x400000)
li x10, 0xf6c5d0e43f8e0f9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0x46cafa7dec7d09a0 # load x3 with value 0x46cafa7dec7d09a0
sw x3, 0(x2) # store 0x46cafa7dec7d09a0 in memory
flw f17, 0(x2) # load 0x46cafa7dec7d09a0 from memory into f17
fnmsub.s f10, f24, f21, f17, dyn # perform operation
fnmsub.s f10, f24, f21, f17, rdn # perform operation
fnmsub.s f10, f24, f21, f17, rmm # perform operation
fnmsub.s f10, f24, f21, f17, rne # perform operation
fnmsub.s f10, f24, f21, f17, rtz # perform operation
fnmsub.s f10, f24, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f24, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f24, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f24, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f24, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f24, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80400000)
li x6, 0xcc578dcc05449f26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0xc6daefce112a55b1 # load x3 with value 0xc6daefce112a55b1
sw x3, 0(x2) # store 0xc6daefce112a55b1 in memory
flw f1, 0(x2) # load 0xc6daefce112a55b1 from memory into f1
fnmsub.s f6, f21, f10, f1, dyn # perform operation
fnmsub.s f6, f21, f10, f1, rdn # perform operation
fnmsub.s f6, f21, f10, f1, rmm # perform operation
fnmsub.s f6, f21, f10, f1, rne # perform operation
fnmsub.s f6, f21, f10, f1, rtz # perform operation
fnmsub.s f6, f21, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f21, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f21, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f21, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f21, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f21, f10, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x1)
li x21, 0x4c55f1f753197bd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0x962bafcab7066ea9 # load x3 with value 0x962bafcab7066ea9
sw x3, 0(x2) # store 0x962bafcab7066ea9 in memory
flw f20, 0(x2) # load 0x962bafcab7066ea9 from memory into f20
fnmsub.s f21, f15, f8, f20, dyn # perform operation
fnmsub.s f21, f15, f8, f20, rdn # perform operation
fnmsub.s f21, f15, f8, f20, rmm # perform operation
fnmsub.s f21, f15, f8, f20, rne # perform operation
fnmsub.s f21, f15, f8, f20, rtz # perform operation
fnmsub.s f21, f15, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f15, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f15, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f15, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f15, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f15, f8, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000001)
li x24, 0xf94bdb4b34feca46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
li x3, 0x91a5593e51689902 # load x3 with value 0x91a5593e51689902
sw x3, 0(x2) # store 0x91a5593e51689902 in memory
flw f26, 0(x2) # load 0x91a5593e51689902 from memory into f26
fnmsub.s f24, f14, f6, f26, dyn # perform operation
fnmsub.s f24, f14, f6, f26, rdn # perform operation
fnmsub.s f24, f14, f6, f26, rmm # perform operation
fnmsub.s f24, f14, f6, f26, rne # perform operation
fnmsub.s f24, f14, f6, f26, rtz # perform operation
fnmsub.s f24, f14, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f14, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f14, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f14, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f14, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f14, f6, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800000)
li x31, 0xe9f2705e5fd0b44b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0x521c870792e95805 # load x3 with value 0x521c870792e95805
sw x3, 0(x2) # store 0x521c870792e95805 in memory
flw f22, 0(x2) # load 0x521c870792e95805 from memory into f22
fnmsub.s f31, f15, f21, f22, dyn # perform operation
fnmsub.s f31, f15, f21, f22, rdn # perform operation
fnmsub.s f31, f15, f21, f22, rmm # perform operation
fnmsub.s f31, f15, f21, f22, rne # perform operation
fnmsub.s f31, f15, f21, f22, rtz # perform operation
fnmsub.s f31, f15, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f15, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f15, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f15, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f15, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f15, f21, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff800000)
li x21, 0x2a0952acdf5dec62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
li x3, 0x90674dadeb9dea9 # load x3 with value 0x90674dadeb9dea9
sw x3, 0(x2) # store 0x90674dadeb9dea9 in memory
flw f29, 0(x2) # load 0x90674dadeb9dea9 from memory into f29
fnmsub.s f21, f1, f4, f29, dyn # perform operation
fnmsub.s f21, f1, f4, f29, rdn # perform operation
fnmsub.s f21, f1, f4, f29, rmm # perform operation
fnmsub.s f21, f1, f4, f29, rne # perform operation
fnmsub.s f21, f1, f4, f29, rtz # perform operation
fnmsub.s f21, f1, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f1, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f1, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f1, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f1, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f1, f4, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fc00000)
li x12, 0xcbb324089139edd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0xfaf67a9fe6788dd9 # load x3 with value 0xfaf67a9fe6788dd9
sw x3, 0(x2) # store 0xfaf67a9fe6788dd9 in memory
flw f26, 0(x2) # load 0xfaf67a9fe6788dd9 from memory into f26
fnmsub.s f12, f29, f17, f26, dyn # perform operation
fnmsub.s f12, f29, f17, f26, rdn # perform operation
fnmsub.s f12, f29, f17, f26, rmm # perform operation
fnmsub.s f12, f29, f17, f26, rne # perform operation
fnmsub.s f12, f29, f17, f26, rtz # perform operation
fnmsub.s f12, f29, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f29, f17, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffffff)
li x3, 0x3017f6a3173d1bb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
li x3, 0x623672bc07b7995d # load x3 with value 0x623672bc07b7995d
sw x3, 0(x2) # store 0x623672bc07b7995d in memory
flw f6, 0(x2) # load 0x623672bc07b7995d from memory into f6
fnmsub.s f3, f28, f2, f6, dyn # perform operation
fnmsub.s f3, f28, f2, f6, rdn # perform operation
fnmsub.s f3, f28, f2, f6, rmm # perform operation
fnmsub.s f3, f28, f2, f6, rne # perform operation
fnmsub.s f3, f28, f2, f6, rtz # perform operation
fnmsub.s f3, f28, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f28, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f28, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f28, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f28, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f28, f2, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800001)
li x29, 0x2401e02f2ff07fe5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0x41fffbc2555e5a5b # load x3 with value 0x41fffbc2555e5a5b
sw x3, 0(x2) # store 0x41fffbc2555e5a5b in memory
flw f20, 0(x2) # load 0x41fffbc2555e5a5b from memory into f20
fnmsub.s f29, f23, f4, f20, dyn # perform operation
fnmsub.s f29, f23, f4, f20, rdn # perform operation
fnmsub.s f29, f23, f4, f20, rmm # perform operation
fnmsub.s f29, f23, f4, f20, rne # perform operation
fnmsub.s f29, f23, f4, f20, rtz # perform operation
fnmsub.s f29, f23, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f23, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f23, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f23, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f23, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f23, f4, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fbfffff)
li x31, 0x20c8dbacf042f948 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
li x3, 0x1fa443970bf43cde # load x3 with value 0x1fa443970bf43cde
sw x3, 0(x2) # store 0x1fa443970bf43cde in memory
flw f8, 0(x2) # load 0x1fa443970bf43cde from memory into f8
fnmsub.s f31, f9, f19, f8, dyn # perform operation
fnmsub.s f31, f9, f19, f8, rdn # perform operation
fnmsub.s f31, f9, f19, f8, rmm # perform operation
fnmsub.s f31, f9, f19, f8, rne # perform operation
fnmsub.s f31, f9, f19, f8, rtz # perform operation
fnmsub.s f31, f9, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f9, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f9, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f9, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f9, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f9, f19, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7ef8654f)
li x9, 0xdf5bdd6a429d88c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0x6a387064ff578a3b # load x3 with value 0x6a387064ff578a3b
sw x3, 0(x2) # store 0x6a387064ff578a3b in memory
flw f23, 0(x2) # load 0x6a387064ff578a3b from memory into f23
fnmsub.s f9, f26, f11, f23, dyn # perform operation
fnmsub.s f9, f26, f11, f23, rdn # perform operation
fnmsub.s f9, f26, f11, f23, rmm # perform operation
fnmsub.s f9, f26, f11, f23, rne # perform operation
fnmsub.s f9, f26, f11, f23, rtz # perform operation
fnmsub.s f9, f26, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f26, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f26, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f26, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f26, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f26, f11, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x813d9ab0)
li x10, 0x2b5565cc72039d28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0x38d37983f648cb3f # load x3 with value 0x38d37983f648cb3f
sw x3, 0(x2) # store 0x38d37983f648cb3f in memory
flw f9, 0(x2) # load 0x38d37983f648cb3f from memory into f9
fnmsub.s f10, f19, f26, f9, dyn # perform operation
fnmsub.s f10, f19, f26, f9, rdn # perform operation
fnmsub.s f10, f19, f26, f9, rmm # perform operation
fnmsub.s f10, f19, f26, f9, rne # perform operation
fnmsub.s f10, f19, f26, f9, rtz # perform operation
fnmsub.s f10, f19, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f19, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f19, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f19, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f19, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f19, f26, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x0)
li x29, 0x8d568508c28e87c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0xe57f8df7dbd13f0a # load x3 with value 0xe57f8df7dbd13f0a
sw x3, 0(x2) # store 0xe57f8df7dbd13f0a in memory
flw f24, 0(x2) # load 0xe57f8df7dbd13f0a from memory into f24
fnmsub.s f29, f3, f12, f24, dyn # perform operation
fnmsub.s f29, f3, f12, f24, rdn # perform operation
fnmsub.s f29, f3, f12, f24, rmm # perform operation
fnmsub.s f29, f3, f12, f24, rne # perform operation
fnmsub.s f29, f3, f12, f24, rtz # perform operation
fnmsub.s f29, f3, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f3, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f3, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f3, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f3, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f3, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000000)
li x4, 0x21cc3aea1a0f9d14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0x8d24bacb8ab5a867 # load x3 with value 0x8d24bacb8ab5a867
sw x3, 0(x2) # store 0x8d24bacb8ab5a867 in memory
flw f1, 0(x2) # load 0x8d24bacb8ab5a867 from memory into f1
fnmsub.s f4, f7, f23, f1, dyn # perform operation
fnmsub.s f4, f7, f23, f1, rdn # perform operation
fnmsub.s f4, f7, f23, f1, rmm # perform operation
fnmsub.s f4, f7, f23, f1, rne # perform operation
fnmsub.s f4, f7, f23, f1, rtz # perform operation
fnmsub.s f4, f7, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f7, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f7, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f7, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f7, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f7, f23, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3f800000)
li x11, 0xc94624a9507dc795 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
li x3, 0x6eaa7270f88a0e61 # load x3 with value 0x6eaa7270f88a0e61
sw x3, 0(x2) # store 0x6eaa7270f88a0e61 in memory
flw f30, 0(x2) # load 0x6eaa7270f88a0e61 from memory into f30
fnmsub.s f11, f10, f3, f30, dyn # perform operation
fnmsub.s f11, f10, f3, f30, rdn # perform operation
fnmsub.s f11, f10, f3, f30, rmm # perform operation
fnmsub.s f11, f10, f3, f30, rne # perform operation
fnmsub.s f11, f10, f3, f30, rtz # perform operation
fnmsub.s f11, f10, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f10, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f10, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f10, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f10, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f10, f3, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbf800000)
li x16, 0x36f1426199e4bc24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0x675348178f597fab # load x3 with value 0x675348178f597fab
sw x3, 0(x2) # store 0x675348178f597fab in memory
flw f30, 0(x2) # load 0x675348178f597fab from memory into f30
fnmsub.s f16, f19, f12, f30, dyn # perform operation
fnmsub.s f16, f19, f12, f30, rdn # perform operation
fnmsub.s f16, f19, f12, f30, rmm # perform operation
fnmsub.s f16, f19, f12, f30, rne # perform operation
fnmsub.s f16, f19, f12, f30, rtz # perform operation
fnmsub.s f16, f19, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f19, f12, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3fc00000)
li x22, 0x815428d4ee089a9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
li x3, 0x25dd2430407ef10f # load x3 with value 0x25dd2430407ef10f
sw x3, 0(x2) # store 0x25dd2430407ef10f in memory
flw f9, 0(x2) # load 0x25dd2430407ef10f from memory into f9
fnmsub.s f22, f27, f14, f9, dyn # perform operation
fnmsub.s f22, f27, f14, f9, rdn # perform operation
fnmsub.s f22, f27, f14, f9, rmm # perform operation
fnmsub.s f22, f27, f14, f9, rne # perform operation
fnmsub.s f22, f27, f14, f9, rtz # perform operation
fnmsub.s f22, f27, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f27, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f27, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f27, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f27, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f27, f14, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbfc00000)
li x29, 0x3f8390950c89005b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
li x3, 0x573caf7bb6a22085 # load x3 with value 0x573caf7bb6a22085
sw x3, 0(x2) # store 0x573caf7bb6a22085 in memory
flw f13, 0(x2) # load 0x573caf7bb6a22085 from memory into f13
fnmsub.s f29, f18, f10, f13, dyn # perform operation
fnmsub.s f29, f18, f10, f13, rdn # perform operation
fnmsub.s f29, f18, f10, f13, rmm # perform operation
fnmsub.s f29, f18, f10, f13, rne # perform operation
fnmsub.s f29, f18, f10, f13, rtz # perform operation
fnmsub.s f29, f18, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f18, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f18, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f18, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f18, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f18, f10, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x40000000)
li x6, 0xadcaf4d69599be18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0x3b5c7d169b20a9df # load x3 with value 0x3b5c7d169b20a9df
sw x3, 0(x2) # store 0x3b5c7d169b20a9df in memory
flw f9, 0(x2) # load 0x3b5c7d169b20a9df from memory into f9
fnmsub.s f6, f20, f5, f9, dyn # perform operation
fnmsub.s f6, f20, f5, f9, rdn # perform operation
fnmsub.s f6, f20, f5, f9, rmm # perform operation
fnmsub.s f6, f20, f5, f9, rne # perform operation
fnmsub.s f6, f20, f5, f9, rtz # perform operation
fnmsub.s f6, f20, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f20, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f20, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f20, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f20, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f20, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xc0000000)
li x7, 0xb982371831513445 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
li x3, 0x342edc514d5350db # load x3 with value 0x342edc514d5350db
sw x3, 0(x2) # store 0x342edc514d5350db in memory
flw f20, 0(x2) # load 0x342edc514d5350db from memory into f20
fnmsub.s f7, f30, f22, f20, dyn # perform operation
fnmsub.s f7, f30, f22, f20, rdn # perform operation
fnmsub.s f7, f30, f22, f20, rmm # perform operation
fnmsub.s f7, f30, f22, f20, rne # perform operation
fnmsub.s f7, f30, f22, f20, rtz # perform operation
fnmsub.s f7, f30, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f30, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f30, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f30, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f30, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f30, f22, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x800000)
li x12, 0xa4efbd748738d907 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0xe8cf3b7dc0a5768d # load x3 with value 0xe8cf3b7dc0a5768d
sw x3, 0(x2) # store 0xe8cf3b7dc0a5768d in memory
flw f5, 0(x2) # load 0xe8cf3b7dc0a5768d from memory into f5
fnmsub.s f12, f22, f7, f5, dyn # perform operation
fnmsub.s f12, f22, f7, f5, rdn # perform operation
fnmsub.s f12, f22, f7, f5, rmm # perform operation
fnmsub.s f12, f22, f7, f5, rne # perform operation
fnmsub.s f12, f22, f7, f5, rtz # perform operation
fnmsub.s f12, f22, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f22, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f22, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f22, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f22, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f22, f7, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80800000)
li x27, 0xd9be9c042f73c93d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0xbcf46594beb4346c # load x3 with value 0xbcf46594beb4346c
sw x3, 0(x2) # store 0xbcf46594beb4346c in memory
flw f25, 0(x2) # load 0xbcf46594beb4346c from memory into f25
fnmsub.s f27, f4, f12, f25, dyn # perform operation
fnmsub.s f27, f4, f12, f25, rdn # perform operation
fnmsub.s f27, f4, f12, f25, rmm # perform operation
fnmsub.s f27, f4, f12, f25, rne # perform operation
fnmsub.s f27, f4, f12, f25, rtz # perform operation
fnmsub.s f27, f4, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f4, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f4, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f4, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f4, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f4, f12, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f7fffff)
li x18, 0x971ae96e6770797b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
li x3, 0x28af47fb943dfee5 # load x3 with value 0x28af47fb943dfee5
sw x3, 0(x2) # store 0x28af47fb943dfee5 in memory
flw f10, 0(x2) # load 0x28af47fb943dfee5 from memory into f10
fnmsub.s f18, f6, f8, f10, dyn # perform operation
fnmsub.s f18, f6, f8, f10, rdn # perform operation
fnmsub.s f18, f6, f8, f10, rmm # perform operation
fnmsub.s f18, f6, f8, f10, rne # perform operation
fnmsub.s f18, f6, f8, f10, rtz # perform operation
fnmsub.s f18, f6, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f6, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f6, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f6, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f6, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f6, f8, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff7fffff)
li x30, 0xa2aaf9e3a19f476c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0x12c0e8ae6a6d9913 # load x3 with value 0x12c0e8ae6a6d9913
sw x3, 0(x2) # store 0x12c0e8ae6a6d9913 in memory
flw f13, 0(x2) # load 0x12c0e8ae6a6d9913 from memory into f13
fnmsub.s f30, f14, f27, f13, dyn # perform operation
fnmsub.s f30, f14, f27, f13, rdn # perform operation
fnmsub.s f30, f14, f27, f13, rmm # perform operation
fnmsub.s f30, f14, f27, f13, rne # perform operation
fnmsub.s f30, f14, f27, f13, rtz # perform operation
fnmsub.s f30, f14, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f14, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f14, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f14, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f14, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f14, f27, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffff)
li x1, 0x52bdee549c857289 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
li x3, 0x2c75a34f9719c2fb # load x3 with value 0x2c75a34f9719c2fb
sw x3, 0(x2) # store 0x2c75a34f9719c2fb in memory
flw f25, 0(x2) # load 0x2c75a34f9719c2fb from memory into f25
fnmsub.s f1, f31, f27, f25, dyn # perform operation
fnmsub.s f1, f31, f27, f25, rdn # perform operation
fnmsub.s f1, f31, f27, f25, rmm # perform operation
fnmsub.s f1, f31, f27, f25, rne # perform operation
fnmsub.s f1, f31, f27, f25, rtz # perform operation
fnmsub.s f1, f31, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f31, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f31, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f31, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f31, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f31, f27, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x807fffff)
li x24, 0x6eb0f00cbbbb345b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0x647b115e1713c409 # load x3 with value 0x647b115e1713c409
sw x3, 0(x2) # store 0x647b115e1713c409 in memory
flw f26, 0(x2) # load 0x647b115e1713c409 from memory into f26
fnmsub.s f24, f22, f6, f26, dyn # perform operation
fnmsub.s f24, f22, f6, f26, rdn # perform operation
fnmsub.s f24, f22, f6, f26, rmm # perform operation
fnmsub.s f24, f22, f6, f26, rne # perform operation
fnmsub.s f24, f22, f6, f26, rtz # perform operation
fnmsub.s f24, f22, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f22, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f22, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f22, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f22, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f22, f6, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x400000)
li x6, 0x4d507d9656ab8b13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x12e542649205ce37 # load x3 with value 0x12e542649205ce37
sw x3, 0(x2) # store 0x12e542649205ce37 in memory
flw f15, 0(x2) # load 0x12e542649205ce37 from memory into f15
fnmsub.s f6, f4, f18, f15, dyn # perform operation
fnmsub.s f6, f4, f18, f15, rdn # perform operation
fnmsub.s f6, f4, f18, f15, rmm # perform operation
fnmsub.s f6, f4, f18, f15, rne # perform operation
fnmsub.s f6, f4, f18, f15, rtz # perform operation
fnmsub.s f6, f4, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f4, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f4, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f4, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f4, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f4, f18, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80400000)
li x4, 0x2d332f32648ea14c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0x7e16508b5c67dbb # load x3 with value 0x7e16508b5c67dbb
sw x3, 0(x2) # store 0x7e16508b5c67dbb in memory
flw f21, 0(x2) # load 0x7e16508b5c67dbb from memory into f21
fnmsub.s f4, f20, f13, f21, dyn # perform operation
fnmsub.s f4, f20, f13, f21, rdn # perform operation
fnmsub.s f4, f20, f13, f21, rmm # perform operation
fnmsub.s f4, f20, f13, f21, rne # perform operation
fnmsub.s f4, f20, f13, f21, rtz # perform operation
fnmsub.s f4, f20, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f20, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f20, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f20, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f20, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f20, f13, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x1)
li x8, 0xc63c99cc0fd73b5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0xcca8c109e1d080e # load x3 with value 0xcca8c109e1d080e
sw x3, 0(x2) # store 0xcca8c109e1d080e in memory
flw f27, 0(x2) # load 0xcca8c109e1d080e from memory into f27
fnmsub.s f8, f4, f18, f27, dyn # perform operation
fnmsub.s f8, f4, f18, f27, rdn # perform operation
fnmsub.s f8, f4, f18, f27, rmm # perform operation
fnmsub.s f8, f4, f18, f27, rne # perform operation
fnmsub.s f8, f4, f18, f27, rtz # perform operation
fnmsub.s f8, f4, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f4, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f4, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f4, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f4, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f4, f18, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000001)
li x15, 0x6477a76dd31bccbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f4, 0(x2) # load 0x80000001 from memory into f4
li x3, 0xeb6a820b9115e614 # load x3 with value 0xeb6a820b9115e614
sw x3, 0(x2) # store 0xeb6a820b9115e614 in memory
flw f12, 0(x2) # load 0xeb6a820b9115e614 from memory into f12
fnmsub.s f15, f21, f4, f12, dyn # perform operation
fnmsub.s f15, f21, f4, f12, rdn # perform operation
fnmsub.s f15, f21, f4, f12, rmm # perform operation
fnmsub.s f15, f21, f4, f12, rne # perform operation
fnmsub.s f15, f21, f4, f12, rtz # perform operation
fnmsub.s f15, f21, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f21, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f21, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f21, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f21, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f21, f4, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800000)
li x17, 0xb3f568e903ae587c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0xa99369c706bce4f7 # load x3 with value 0xa99369c706bce4f7
sw x3, 0(x2) # store 0xa99369c706bce4f7 in memory
flw f24, 0(x2) # load 0xa99369c706bce4f7 from memory into f24
fnmsub.s f17, f27, f10, f24, dyn # perform operation
fnmsub.s f17, f27, f10, f24, rdn # perform operation
fnmsub.s f17, f27, f10, f24, rmm # perform operation
fnmsub.s f17, f27, f10, f24, rne # perform operation
fnmsub.s f17, f27, f10, f24, rtz # perform operation
fnmsub.s f17, f27, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f27, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f27, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f27, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f27, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f27, f10, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff800000)
li x1, 0xcaa8cd25f3ef0cfe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
li x3, 0x3bf2a4413d064f16 # load x3 with value 0x3bf2a4413d064f16
sw x3, 0(x2) # store 0x3bf2a4413d064f16 in memory
flw f16, 0(x2) # load 0x3bf2a4413d064f16 from memory into f16
fnmsub.s f1, f26, f2, f16, dyn # perform operation
fnmsub.s f1, f26, f2, f16, rdn # perform operation
fnmsub.s f1, f26, f2, f16, rmm # perform operation
fnmsub.s f1, f26, f2, f16, rne # perform operation
fnmsub.s f1, f26, f2, f16, rtz # perform operation
fnmsub.s f1, f26, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f26, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f26, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f26, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f26, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f26, f2, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fc00000)
li x27, 0x31d07ef8b2dffb23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0x498112c4a771c27d # load x3 with value 0x498112c4a771c27d
sw x3, 0(x2) # store 0x498112c4a771c27d in memory
flw f9, 0(x2) # load 0x498112c4a771c27d from memory into f9
fnmsub.s f27, f24, f20, f9, dyn # perform operation
fnmsub.s f27, f24, f20, f9, rdn # perform operation
fnmsub.s f27, f24, f20, f9, rmm # perform operation
fnmsub.s f27, f24, f20, f9, rne # perform operation
fnmsub.s f27, f24, f20, f9, rtz # perform operation
fnmsub.s f27, f24, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f24, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f24, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f24, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f24, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f24, f20, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffffff)
li x24, 0x4d06c8843322f2f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
li x3, 0x4ae153c1807c9b66 # load x3 with value 0x4ae153c1807c9b66
sw x3, 0(x2) # store 0x4ae153c1807c9b66 in memory
flw f20, 0(x2) # load 0x4ae153c1807c9b66 from memory into f20
fnmsub.s f24, f25, f31, f20, dyn # perform operation
fnmsub.s f24, f25, f31, f20, rdn # perform operation
fnmsub.s f24, f25, f31, f20, rmm # perform operation
fnmsub.s f24, f25, f31, f20, rne # perform operation
fnmsub.s f24, f25, f31, f20, rtz # perform operation
fnmsub.s f24, f25, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f25, f31, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800001)
li x27, 0x573546fe767dd983 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
li x3, 0x6de6bee3b7831ce2 # load x3 with value 0x6de6bee3b7831ce2
sw x3, 0(x2) # store 0x6de6bee3b7831ce2 in memory
flw f29, 0(x2) # load 0x6de6bee3b7831ce2 from memory into f29
fnmsub.s f27, f24, f7, f29, dyn # perform operation
fnmsub.s f27, f24, f7, f29, rdn # perform operation
fnmsub.s f27, f24, f7, f29, rmm # perform operation
fnmsub.s f27, f24, f7, f29, rne # perform operation
fnmsub.s f27, f24, f7, f29, rtz # perform operation
fnmsub.s f27, f24, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f24, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f24, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f24, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f24, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f24, f7, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fbfffff)
li x23, 0xb06f78334c39359e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0xd90a2c6bb383f72a # load x3 with value 0xd90a2c6bb383f72a
sw x3, 0(x2) # store 0xd90a2c6bb383f72a in memory
flw f19, 0(x2) # load 0xd90a2c6bb383f72a from memory into f19
fnmsub.s f23, f26, f3, f19, dyn # perform operation
fnmsub.s f23, f26, f3, f19, rdn # perform operation
fnmsub.s f23, f26, f3, f19, rmm # perform operation
fnmsub.s f23, f26, f3, f19, rne # perform operation
fnmsub.s f23, f26, f3, f19, rtz # perform operation
fnmsub.s f23, f26, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f26, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f26, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f26, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f26, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f26, f3, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7ef8654f)
li x23, 0x42b404a27e246ebf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
li x3, 0xd7d7644b00aa27da # load x3 with value 0xd7d7644b00aa27da
sw x3, 0(x2) # store 0xd7d7644b00aa27da in memory
flw f28, 0(x2) # load 0xd7d7644b00aa27da from memory into f28
fnmsub.s f23, f3, f14, f28, dyn # perform operation
fnmsub.s f23, f3, f14, f28, rdn # perform operation
fnmsub.s f23, f3, f14, f28, rmm # perform operation
fnmsub.s f23, f3, f14, f28, rne # perform operation
fnmsub.s f23, f3, f14, f28, rtz # perform operation
fnmsub.s f23, f3, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f3, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f3, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f3, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f3, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f3, f14, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x813d9ab0)
li x4, 0xde49d841b673e220 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
li x3, 0xb1cc97ff93d39eab # load x3 with value 0xb1cc97ff93d39eab
sw x3, 0(x2) # store 0xb1cc97ff93d39eab in memory
flw f20, 0(x2) # load 0xb1cc97ff93d39eab from memory into f20
fnmsub.s f4, f14, f11, f20, dyn # perform operation
fnmsub.s f4, f14, f11, f20, rdn # perform operation
fnmsub.s f4, f14, f11, f20, rmm # perform operation
fnmsub.s f4, f14, f11, f20, rne # perform operation
fnmsub.s f4, f14, f11, f20, rtz # perform operation
fnmsub.s f4, f14, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f14, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f14, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f14, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f14, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f14, f11, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x0)
li x3, 0x70182cf556669dd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0xd27fb38bbdf89c77 # load x3 with value 0xd27fb38bbdf89c77
sw x3, 0(x2) # store 0xd27fb38bbdf89c77 in memory
flw f8, 0(x2) # load 0xd27fb38bbdf89c77 from memory into f8
fnmsub.s f3, f31, f2, f8, dyn # perform operation
fnmsub.s f3, f31, f2, f8, rdn # perform operation
fnmsub.s f3, f31, f2, f8, rmm # perform operation
fnmsub.s f3, f31, f2, f8, rne # perform operation
fnmsub.s f3, f31, f2, f8, rtz # perform operation
fnmsub.s f3, f31, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f31, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f31, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f31, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f31, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f31, f2, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000000)
li x29, 0x9cd3e7a30e0549a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
li x3, 0x96124455248101c9 # load x3 with value 0x96124455248101c9
sw x3, 0(x2) # store 0x96124455248101c9 in memory
flw f12, 0(x2) # load 0x96124455248101c9 from memory into f12
fnmsub.s f29, f3, f8, f12, dyn # perform operation
fnmsub.s f29, f3, f8, f12, rdn # perform operation
fnmsub.s f29, f3, f8, f12, rmm # perform operation
fnmsub.s f29, f3, f8, f12, rne # perform operation
fnmsub.s f29, f3, f8, f12, rtz # perform operation
fnmsub.s f29, f3, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f3, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f3, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f3, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f3, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f3, f8, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3f800000)
li x3, 0x3343c6aa6ba6248c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
li x3, 0x56810940cb38018c # load x3 with value 0x56810940cb38018c
sw x3, 0(x2) # store 0x56810940cb38018c in memory
flw f17, 0(x2) # load 0x56810940cb38018c from memory into f17
fnmsub.s f3, f1, f29, f17, dyn # perform operation
fnmsub.s f3, f1, f29, f17, rdn # perform operation
fnmsub.s f3, f1, f29, f17, rmm # perform operation
fnmsub.s f3, f1, f29, f17, rne # perform operation
fnmsub.s f3, f1, f29, f17, rtz # perform operation
fnmsub.s f3, f1, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f1, f29, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbf800000)
li x23, 0x7ecd02ffe0c081c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0x7eb12dd030944ea8 # load x3 with value 0x7eb12dd030944ea8
sw x3, 0(x2) # store 0x7eb12dd030944ea8 in memory
flw f7, 0(x2) # load 0x7eb12dd030944ea8 from memory into f7
fnmsub.s f23, f9, f27, f7, dyn # perform operation
fnmsub.s f23, f9, f27, f7, rdn # perform operation
fnmsub.s f23, f9, f27, f7, rmm # perform operation
fnmsub.s f23, f9, f27, f7, rne # perform operation
fnmsub.s f23, f9, f27, f7, rtz # perform operation
fnmsub.s f23, f9, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f9, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f9, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f9, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f9, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f9, f27, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3fc00000)
li x6, 0xaf0b61572a6c956f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x4beb1ccaf9bde23d # load x3 with value 0x4beb1ccaf9bde23d
sw x3, 0(x2) # store 0x4beb1ccaf9bde23d in memory
flw f14, 0(x2) # load 0x4beb1ccaf9bde23d from memory into f14
fnmsub.s f6, f22, f15, f14, dyn # perform operation
fnmsub.s f6, f22, f15, f14, rdn # perform operation
fnmsub.s f6, f22, f15, f14, rmm # perform operation
fnmsub.s f6, f22, f15, f14, rne # perform operation
fnmsub.s f6, f22, f15, f14, rtz # perform operation
fnmsub.s f6, f22, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f22, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f22, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f22, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f22, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f22, f15, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbfc00000)
li x22, 0x9e4c8683da553335 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0xa3655f05f01552ce # load x3 with value 0xa3655f05f01552ce
sw x3, 0(x2) # store 0xa3655f05f01552ce in memory
flw f30, 0(x2) # load 0xa3655f05f01552ce from memory into f30
fnmsub.s f22, f29, f27, f30, dyn # perform operation
fnmsub.s f22, f29, f27, f30, rdn # perform operation
fnmsub.s f22, f29, f27, f30, rmm # perform operation
fnmsub.s f22, f29, f27, f30, rne # perform operation
fnmsub.s f22, f29, f27, f30, rtz # perform operation
fnmsub.s f22, f29, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f29, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f29, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f29, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f29, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f29, f27, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x40000000)
li x17, 0x2c79f6260b71212b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
li x3, 0xd471eaaa25cf73cd # load x3 with value 0xd471eaaa25cf73cd
sw x3, 0(x2) # store 0xd471eaaa25cf73cd in memory
flw f6, 0(x2) # load 0xd471eaaa25cf73cd from memory into f6
fnmsub.s f17, f4, f9, f6, dyn # perform operation
fnmsub.s f17, f4, f9, f6, rdn # perform operation
fnmsub.s f17, f4, f9, f6, rmm # perform operation
fnmsub.s f17, f4, f9, f6, rne # perform operation
fnmsub.s f17, f4, f9, f6, rtz # perform operation
fnmsub.s f17, f4, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f4, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f4, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f4, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f4, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f4, f9, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xc0000000)
li x2, 0x13ce4ce12d27299b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
li x3, 0xe4adb8ba1e62b04 # load x3 with value 0xe4adb8ba1e62b04
sw x3, 0(x2) # store 0xe4adb8ba1e62b04 in memory
flw f14, 0(x2) # load 0xe4adb8ba1e62b04 from memory into f14
fnmsub.s f2, f1, f8, f14, dyn # perform operation
fnmsub.s f2, f1, f8, f14, rdn # perform operation
fnmsub.s f2, f1, f8, f14, rmm # perform operation
fnmsub.s f2, f1, f8, f14, rne # perform operation
fnmsub.s f2, f1, f8, f14, rtz # perform operation
fnmsub.s f2, f1, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f1, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f1, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f1, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f1, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f1, f8, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x800000)
li x21, 0xc17dd9817dfed447 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
li x3, 0xb8eb04664ca3b61c # load x3 with value 0xb8eb04664ca3b61c
sw x3, 0(x2) # store 0xb8eb04664ca3b61c in memory
flw f11, 0(x2) # load 0xb8eb04664ca3b61c from memory into f11
fnmsub.s f21, f18, f6, f11, dyn # perform operation
fnmsub.s f21, f18, f6, f11, rdn # perform operation
fnmsub.s f21, f18, f6, f11, rmm # perform operation
fnmsub.s f21, f18, f6, f11, rne # perform operation
fnmsub.s f21, f18, f6, f11, rtz # perform operation
fnmsub.s f21, f18, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f18, f6, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80800000)
li x19, 0x1b4a99fd162c06ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0x64093672260ccf96 # load x3 with value 0x64093672260ccf96
sw x3, 0(x2) # store 0x64093672260ccf96 in memory
flw f10, 0(x2) # load 0x64093672260ccf96 from memory into f10
fnmsub.s f19, f3, f9, f10, dyn # perform operation
fnmsub.s f19, f3, f9, f10, rdn # perform operation
fnmsub.s f19, f3, f9, f10, rmm # perform operation
fnmsub.s f19, f3, f9, f10, rne # perform operation
fnmsub.s f19, f3, f9, f10, rtz # perform operation
fnmsub.s f19, f3, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f3, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f3, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f3, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f3, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f3, f9, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f7fffff)
li x26, 0xb06e1604c4a74a3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
li x3, 0x676a1482147c0ffd # load x3 with value 0x676a1482147c0ffd
sw x3, 0(x2) # store 0x676a1482147c0ffd in memory
flw f5, 0(x2) # load 0x676a1482147c0ffd from memory into f5
fnmsub.s f26, f29, f18, f5, dyn # perform operation
fnmsub.s f26, f29, f18, f5, rdn # perform operation
fnmsub.s f26, f29, f18, f5, rmm # perform operation
fnmsub.s f26, f29, f18, f5, rne # perform operation
fnmsub.s f26, f29, f18, f5, rtz # perform operation
fnmsub.s f26, f29, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f29, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f29, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f29, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f29, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f29, f18, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff7fffff)
li x11, 0x2a252760333374d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0xefd7e360cda7aefc # load x3 with value 0xefd7e360cda7aefc
sw x3, 0(x2) # store 0xefd7e360cda7aefc in memory
flw f16, 0(x2) # load 0xefd7e360cda7aefc from memory into f16
fnmsub.s f11, f17, f27, f16, dyn # perform operation
fnmsub.s f11, f17, f27, f16, rdn # perform operation
fnmsub.s f11, f17, f27, f16, rmm # perform operation
fnmsub.s f11, f17, f27, f16, rne # perform operation
fnmsub.s f11, f17, f27, f16, rtz # perform operation
fnmsub.s f11, f17, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f17, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f17, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f17, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f17, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f17, f27, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffff)
li x15, 0xd3bcb351723b58bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0x2f5f9828d3e73fd7 # load x3 with value 0x2f5f9828d3e73fd7
sw x3, 0(x2) # store 0x2f5f9828d3e73fd7 in memory
flw f20, 0(x2) # load 0x2f5f9828d3e73fd7 from memory into f20
fnmsub.s f15, f12, f8, f20, dyn # perform operation
fnmsub.s f15, f12, f8, f20, rdn # perform operation
fnmsub.s f15, f12, f8, f20, rmm # perform operation
fnmsub.s f15, f12, f8, f20, rne # perform operation
fnmsub.s f15, f12, f8, f20, rtz # perform operation
fnmsub.s f15, f12, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f12, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f12, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f12, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f12, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f12, f8, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x807fffff)
li x1, 0xdd776f674316a65f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
li x3, 0xa695a86a2f93b687 # load x3 with value 0xa695a86a2f93b687
sw x3, 0(x2) # store 0xa695a86a2f93b687 in memory
flw f4, 0(x2) # load 0xa695a86a2f93b687 from memory into f4
fnmsub.s f1, f2, f29, f4, dyn # perform operation
fnmsub.s f1, f2, f29, f4, rdn # perform operation
fnmsub.s f1, f2, f29, f4, rmm # perform operation
fnmsub.s f1, f2, f29, f4, rne # perform operation
fnmsub.s f1, f2, f29, f4, rtz # perform operation
fnmsub.s f1, f2, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f2, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f2, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f2, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f2, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f2, f29, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x400000)
li x9, 0xdf54770e9ef61a1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0x91242e878e4f1bdb # load x3 with value 0x91242e878e4f1bdb
sw x3, 0(x2) # store 0x91242e878e4f1bdb in memory
flw f3, 0(x2) # load 0x91242e878e4f1bdb from memory into f3
fnmsub.s f9, f17, f23, f3, dyn # perform operation
fnmsub.s f9, f17, f23, f3, rdn # perform operation
fnmsub.s f9, f17, f23, f3, rmm # perform operation
fnmsub.s f9, f17, f23, f3, rne # perform operation
fnmsub.s f9, f17, f23, f3, rtz # perform operation
fnmsub.s f9, f17, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f17, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f17, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f17, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f17, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f17, f23, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80400000)
li x18, 0x6450bd861546eda3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0x9cc0d536696c959f # load x3 with value 0x9cc0d536696c959f
sw x3, 0(x2) # store 0x9cc0d536696c959f in memory
flw f23, 0(x2) # load 0x9cc0d536696c959f from memory into f23
fnmsub.s f18, f13, f11, f23, dyn # perform operation
fnmsub.s f18, f13, f11, f23, rdn # perform operation
fnmsub.s f18, f13, f11, f23, rmm # perform operation
fnmsub.s f18, f13, f11, f23, rne # perform operation
fnmsub.s f18, f13, f11, f23, rtz # perform operation
fnmsub.s f18, f13, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f13, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f13, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f13, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f13, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f13, f11, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x1)
li x15, 0x658fd3d38fd6d667 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0x60acee61c91b5135 # load x3 with value 0x60acee61c91b5135
sw x3, 0(x2) # store 0x60acee61c91b5135 in memory
flw f1, 0(x2) # load 0x60acee61c91b5135 from memory into f1
fnmsub.s f15, f31, f8, f1, dyn # perform operation
fnmsub.s f15, f31, f8, f1, rdn # perform operation
fnmsub.s f15, f31, f8, f1, rmm # perform operation
fnmsub.s f15, f31, f8, f1, rne # perform operation
fnmsub.s f15, f31, f8, f1, rtz # perform operation
fnmsub.s f15, f31, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f31, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f31, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f31, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f31, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f31, f8, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000001)
li x31, 0xdb44447cfb11d77e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0xfc4fc1ef1c95cc0d # load x3 with value 0xfc4fc1ef1c95cc0d
sw x3, 0(x2) # store 0xfc4fc1ef1c95cc0d in memory
flw f22, 0(x2) # load 0xfc4fc1ef1c95cc0d from memory into f22
fnmsub.s f31, f11, f16, f22, dyn # perform operation
fnmsub.s f31, f11, f16, f22, rdn # perform operation
fnmsub.s f31, f11, f16, f22, rmm # perform operation
fnmsub.s f31, f11, f16, f22, rne # perform operation
fnmsub.s f31, f11, f16, f22, rtz # perform operation
fnmsub.s f31, f11, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f11, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f11, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f11, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f11, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f11, f16, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800000)
li x15, 0x60e20c35676c02bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0x691d6a3600d97971 # load x3 with value 0x691d6a3600d97971
sw x3, 0(x2) # store 0x691d6a3600d97971 in memory
flw f28, 0(x2) # load 0x691d6a3600d97971 from memory into f28
fnmsub.s f15, f18, f3, f28, dyn # perform operation
fnmsub.s f15, f18, f3, f28, rdn # perform operation
fnmsub.s f15, f18, f3, f28, rmm # perform operation
fnmsub.s f15, f18, f3, f28, rne # perform operation
fnmsub.s f15, f18, f3, f28, rtz # perform operation
fnmsub.s f15, f18, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f18, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f18, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f18, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f18, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f18, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff800000)
li x22, 0x03ee9043b42c9937 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
li x3, 0xdbe0f2df7d082c88 # load x3 with value 0xdbe0f2df7d082c88
sw x3, 0(x2) # store 0xdbe0f2df7d082c88 in memory
flw f29, 0(x2) # load 0xdbe0f2df7d082c88 from memory into f29
fnmsub.s f22, f17, f2, f29, dyn # perform operation
fnmsub.s f22, f17, f2, f29, rdn # perform operation
fnmsub.s f22, f17, f2, f29, rmm # perform operation
fnmsub.s f22, f17, f2, f29, rne # perform operation
fnmsub.s f22, f17, f2, f29, rtz # perform operation
fnmsub.s f22, f17, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f17, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f17, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f17, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f17, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f17, f2, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fc00000)
li x7, 0xd6adbd6f33833e75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0xbe765e8bec625948 # load x3 with value 0xbe765e8bec625948
sw x3, 0(x2) # store 0xbe765e8bec625948 in memory
flw f9, 0(x2) # load 0xbe765e8bec625948 from memory into f9
fnmsub.s f7, f19, f6, f9, dyn # perform operation
fnmsub.s f7, f19, f6, f9, rdn # perform operation
fnmsub.s f7, f19, f6, f9, rmm # perform operation
fnmsub.s f7, f19, f6, f9, rne # perform operation
fnmsub.s f7, f19, f6, f9, rtz # perform operation
fnmsub.s f7, f19, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f19, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f19, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f19, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f19, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f19, f6, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffffff)
li x8, 0x64ffbf4768cbddbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x731787f030ea0afd # load x3 with value 0x731787f030ea0afd
sw x3, 0(x2) # store 0x731787f030ea0afd in memory
flw f6, 0(x2) # load 0x731787f030ea0afd from memory into f6
fnmsub.s f8, f21, f10, f6, dyn # perform operation
fnmsub.s f8, f21, f10, f6, rdn # perform operation
fnmsub.s f8, f21, f10, f6, rmm # perform operation
fnmsub.s f8, f21, f10, f6, rne # perform operation
fnmsub.s f8, f21, f10, f6, rtz # perform operation
fnmsub.s f8, f21, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f21, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f21, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f21, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f21, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f21, f10, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800001)
li x22, 0xde2edd1012a2354a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0x543f5af8d496aa8b # load x3 with value 0x543f5af8d496aa8b
sw x3, 0(x2) # store 0x543f5af8d496aa8b in memory
flw f17, 0(x2) # load 0x543f5af8d496aa8b from memory into f17
fnmsub.s f22, f9, f5, f17, dyn # perform operation
fnmsub.s f22, f9, f5, f17, rdn # perform operation
fnmsub.s f22, f9, f5, f17, rmm # perform operation
fnmsub.s f22, f9, f5, f17, rne # perform operation
fnmsub.s f22, f9, f5, f17, rtz # perform operation
fnmsub.s f22, f9, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f9, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f9, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f9, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f9, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f9, f5, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fbfffff)
li x10, 0xab66f05d055d16c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0x2f3cb095e29f4113 # load x3 with value 0x2f3cb095e29f4113
sw x3, 0(x2) # store 0x2f3cb095e29f4113 in memory
flw f15, 0(x2) # load 0x2f3cb095e29f4113 from memory into f15
fnmsub.s f10, f19, f26, f15, dyn # perform operation
fnmsub.s f10, f19, f26, f15, rdn # perform operation
fnmsub.s f10, f19, f26, f15, rmm # perform operation
fnmsub.s f10, f19, f26, f15, rne # perform operation
fnmsub.s f10, f19, f26, f15, rtz # perform operation
fnmsub.s f10, f19, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f19, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f19, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f19, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f19, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f19, f26, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7ef8654f)
li x20, 0xd1453deb150bd667 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
li x3, 0xe265c607e650e47d # load x3 with value 0xe265c607e650e47d
sw x3, 0(x2) # store 0xe265c607e650e47d in memory
flw f3, 0(x2) # load 0xe265c607e650e47d from memory into f3
fnmsub.s f20, f13, f14, f3, dyn # perform operation
fnmsub.s f20, f13, f14, f3, rdn # perform operation
fnmsub.s f20, f13, f14, f3, rmm # perform operation
fnmsub.s f20, f13, f14, f3, rne # perform operation
fnmsub.s f20, f13, f14, f3, rtz # perform operation
fnmsub.s f20, f13, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f13, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f13, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f13, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f13, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f13, f14, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x813d9ab0)
li x10, 0xf064eea989c939dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0x595b5b8ef10d8121 # load x3 with value 0x595b5b8ef10d8121
sw x3, 0(x2) # store 0x595b5b8ef10d8121 in memory
flw f3, 0(x2) # load 0x595b5b8ef10d8121 from memory into f3
fnmsub.s f10, f4, f8, f3, dyn # perform operation
fnmsub.s f10, f4, f8, f3, rdn # perform operation
fnmsub.s f10, f4, f8, f3, rmm # perform operation
fnmsub.s f10, f4, f8, f3, rne # perform operation
fnmsub.s f10, f4, f8, f3, rtz # perform operation
fnmsub.s f10, f4, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f4, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f4, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f4, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f4, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f4, f8, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x0)
li x28, 0x29557858ededd8b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x7643bccf4646d2c0 # load x3 with value 0x7643bccf4646d2c0
sw x3, 0(x2) # store 0x7643bccf4646d2c0 in memory
flw f9, 0(x2) # load 0x7643bccf4646d2c0 from memory into f9
fnmsub.s f28, f23, f29, f9, dyn # perform operation
fnmsub.s f28, f23, f29, f9, rdn # perform operation
fnmsub.s f28, f23, f29, f9, rmm # perform operation
fnmsub.s f28, f23, f29, f9, rne # perform operation
fnmsub.s f28, f23, f29, f9, rtz # perform operation
fnmsub.s f28, f23, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f23, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f23, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f23, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f23, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f23, f29, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000000)
li x11, 0x164d3c1a8eba9059 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
li x3, 0x92b26cad019fc307 # load x3 with value 0x92b26cad019fc307
sw x3, 0(x2) # store 0x92b26cad019fc307 in memory
flw f16, 0(x2) # load 0x92b26cad019fc307 from memory into f16
fnmsub.s f11, f3, f4, f16, dyn # perform operation
fnmsub.s f11, f3, f4, f16, rdn # perform operation
fnmsub.s f11, f3, f4, f16, rmm # perform operation
fnmsub.s f11, f3, f4, f16, rne # perform operation
fnmsub.s f11, f3, f4, f16, rtz # perform operation
fnmsub.s f11, f3, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f3, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f3, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f3, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f3, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f3, f4, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3f800000)
li x5, 0x929ebebca7eb0697 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0xef94c3ffbbc5834c # load x3 with value 0xef94c3ffbbc5834c
sw x3, 0(x2) # store 0xef94c3ffbbc5834c in memory
flw f22, 0(x2) # load 0xef94c3ffbbc5834c from memory into f22
fnmsub.s f5, f31, f9, f22, dyn # perform operation
fnmsub.s f5, f31, f9, f22, rdn # perform operation
fnmsub.s f5, f31, f9, f22, rmm # perform operation
fnmsub.s f5, f31, f9, f22, rne # perform operation
fnmsub.s f5, f31, f9, f22, rtz # perform operation
fnmsub.s f5, f31, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f31, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f31, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f31, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f31, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f31, f9, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbf800000)
li x16, 0x24ec864d99f5310f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0x24aa7285a5fe30d9 # load x3 with value 0x24aa7285a5fe30d9
sw x3, 0(x2) # store 0x24aa7285a5fe30d9 in memory
flw f8, 0(x2) # load 0x24aa7285a5fe30d9 from memory into f8
fnmsub.s f16, f30, f5, f8, dyn # perform operation
fnmsub.s f16, f30, f5, f8, rdn # perform operation
fnmsub.s f16, f30, f5, f8, rmm # perform operation
fnmsub.s f16, f30, f5, f8, rne # perform operation
fnmsub.s f16, f30, f5, f8, rtz # perform operation
fnmsub.s f16, f30, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f30, f5, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3fc00000)
li x31, 0x635e8ab84fc9d466 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0x7266dbb9df74d33 # load x3 with value 0x7266dbb9df74d33
sw x3, 0(x2) # store 0x7266dbb9df74d33 in memory
flw f19, 0(x2) # load 0x7266dbb9df74d33 from memory into f19
fnmsub.s f31, f29, f30, f19, dyn # perform operation
fnmsub.s f31, f29, f30, f19, rdn # perform operation
fnmsub.s f31, f29, f30, f19, rmm # perform operation
fnmsub.s f31, f29, f30, f19, rne # perform operation
fnmsub.s f31, f29, f30, f19, rtz # perform operation
fnmsub.s f31, f29, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f29, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f29, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f29, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f29, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f29, f30, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbfc00000)
li x11, 0xe3bf04c39e7fdd12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0xa7500ada1f00f58f # load x3 with value 0xa7500ada1f00f58f
sw x3, 0(x2) # store 0xa7500ada1f00f58f in memory
flw f14, 0(x2) # load 0xa7500ada1f00f58f from memory into f14
fnmsub.s f11, f24, f15, f14, dyn # perform operation
fnmsub.s f11, f24, f15, f14, rdn # perform operation
fnmsub.s f11, f24, f15, f14, rmm # perform operation
fnmsub.s f11, f24, f15, f14, rne # perform operation
fnmsub.s f11, f24, f15, f14, rtz # perform operation
fnmsub.s f11, f24, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f24, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f24, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f24, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f24, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f24, f15, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x40000000)
li x9, 0xebd64c3e9fcf4ea8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
li x3, 0x3be22a0097684874 # load x3 with value 0x3be22a0097684874
sw x3, 0(x2) # store 0x3be22a0097684874 in memory
flw f22, 0(x2) # load 0x3be22a0097684874 from memory into f22
fnmsub.s f9, f12, f16, f22, dyn # perform operation
fnmsub.s f9, f12, f16, f22, rdn # perform operation
fnmsub.s f9, f12, f16, f22, rmm # perform operation
fnmsub.s f9, f12, f16, f22, rne # perform operation
fnmsub.s f9, f12, f16, f22, rtz # perform operation
fnmsub.s f9, f12, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f12, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f12, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f12, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f12, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f12, f16, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xc0000000)
li x7, 0x078edf3e09b7e37f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
li x3, 0x885469510445cf96 # load x3 with value 0x885469510445cf96
sw x3, 0(x2) # store 0x885469510445cf96 in memory
flw f22, 0(x2) # load 0x885469510445cf96 from memory into f22
fnmsub.s f7, f14, f23, f22, dyn # perform operation
fnmsub.s f7, f14, f23, f22, rdn # perform operation
fnmsub.s f7, f14, f23, f22, rmm # perform operation
fnmsub.s f7, f14, f23, f22, rne # perform operation
fnmsub.s f7, f14, f23, f22, rtz # perform operation
fnmsub.s f7, f14, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f14, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f14, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f14, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f14, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f14, f23, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x800000)
li x6, 0x3137f800c94834c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
li x3, 0x9d570471db20909e # load x3 with value 0x9d570471db20909e
sw x3, 0(x2) # store 0x9d570471db20909e in memory
flw f12, 0(x2) # load 0x9d570471db20909e from memory into f12
fnmsub.s f6, f11, f23, f12, dyn # perform operation
fnmsub.s f6, f11, f23, f12, rdn # perform operation
fnmsub.s f6, f11, f23, f12, rmm # perform operation
fnmsub.s f6, f11, f23, f12, rne # perform operation
fnmsub.s f6, f11, f23, f12, rtz # perform operation
fnmsub.s f6, f11, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f11, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f11, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f11, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f11, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f11, f23, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80800000)
li x25, 0x889f8ae0f5184fe3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
li x3, 0x1495705fa370ad51 # load x3 with value 0x1495705fa370ad51
sw x3, 0(x2) # store 0x1495705fa370ad51 in memory
flw f31, 0(x2) # load 0x1495705fa370ad51 from memory into f31
fnmsub.s f25, f2, f14, f31, dyn # perform operation
fnmsub.s f25, f2, f14, f31, rdn # perform operation
fnmsub.s f25, f2, f14, f31, rmm # perform operation
fnmsub.s f25, f2, f14, f31, rne # perform operation
fnmsub.s f25, f2, f14, f31, rtz # perform operation
fnmsub.s f25, f2, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f2, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f2, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f2, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f2, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f2, f14, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f7fffff)
li x8, 0xad6af835d692016b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
li x3, 0x3e0520e96fb306d9 # load x3 with value 0x3e0520e96fb306d9
sw x3, 0(x2) # store 0x3e0520e96fb306d9 in memory
flw f15, 0(x2) # load 0x3e0520e96fb306d9 from memory into f15
fnmsub.s f8, f31, f27, f15, dyn # perform operation
fnmsub.s f8, f31, f27, f15, rdn # perform operation
fnmsub.s f8, f31, f27, f15, rmm # perform operation
fnmsub.s f8, f31, f27, f15, rne # perform operation
fnmsub.s f8, f31, f27, f15, rtz # perform operation
fnmsub.s f8, f31, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f31, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f31, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f31, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f31, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f31, f27, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff7fffff)
li x7, 0x4b98f84895f60b68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0xe8f8327c6aee018c # load x3 with value 0xe8f8327c6aee018c
sw x3, 0(x2) # store 0xe8f8327c6aee018c in memory
flw f21, 0(x2) # load 0xe8f8327c6aee018c from memory into f21
fnmsub.s f7, f11, f8, f21, dyn # perform operation
fnmsub.s f7, f11, f8, f21, rdn # perform operation
fnmsub.s f7, f11, f8, f21, rmm # perform operation
fnmsub.s f7, f11, f8, f21, rne # perform operation
fnmsub.s f7, f11, f8, f21, rtz # perform operation
fnmsub.s f7, f11, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f11, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f11, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f11, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f11, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f11, f8, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffff)
li x16, 0xfd153b6c759a71d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0xcb928d69d9220be8 # load x3 with value 0xcb928d69d9220be8
sw x3, 0(x2) # store 0xcb928d69d9220be8 in memory
flw f30, 0(x2) # load 0xcb928d69d9220be8 from memory into f30
fnmsub.s f16, f19, f3, f30, dyn # perform operation
fnmsub.s f16, f19, f3, f30, rdn # perform operation
fnmsub.s f16, f19, f3, f30, rmm # perform operation
fnmsub.s f16, f19, f3, f30, rne # perform operation
fnmsub.s f16, f19, f3, f30, rtz # perform operation
fnmsub.s f16, f19, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f19, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f19, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f19, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f19, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f19, f3, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x807fffff)
li x12, 0xe9ff67072465cbc7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x5a3b69d8b5b9e83 # load x3 with value 0x5a3b69d8b5b9e83
sw x3, 0(x2) # store 0x5a3b69d8b5b9e83 in memory
flw f28, 0(x2) # load 0x5a3b69d8b5b9e83 from memory into f28
fnmsub.s f12, f5, f30, f28, dyn # perform operation
fnmsub.s f12, f5, f30, f28, rdn # perform operation
fnmsub.s f12, f5, f30, f28, rmm # perform operation
fnmsub.s f12, f5, f30, f28, rne # perform operation
fnmsub.s f12, f5, f30, f28, rtz # perform operation
fnmsub.s f12, f5, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f5, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f5, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f5, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f5, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f5, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x400000)
li x16, 0x4b746c9ab9ddc75d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x20ae845897c6c886 # load x3 with value 0x20ae845897c6c886
sw x3, 0(x2) # store 0x20ae845897c6c886 in memory
flw f28, 0(x2) # load 0x20ae845897c6c886 from memory into f28
fnmsub.s f16, f25, f10, f28, dyn # perform operation
fnmsub.s f16, f25, f10, f28, rdn # perform operation
fnmsub.s f16, f25, f10, f28, rmm # perform operation
fnmsub.s f16, f25, f10, f28, rne # perform operation
fnmsub.s f16, f25, f10, f28, rtz # perform operation
fnmsub.s f16, f25, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f25, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f25, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f25, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f25, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f25, f10, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80400000)
li x19, 0x19bcae528c4992bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0x32bee69b4d73bdf2 # load x3 with value 0x32bee69b4d73bdf2
sw x3, 0(x2) # store 0x32bee69b4d73bdf2 in memory
flw f23, 0(x2) # load 0x32bee69b4d73bdf2 from memory into f23
fnmsub.s f19, f29, f11, f23, dyn # perform operation
fnmsub.s f19, f29, f11, f23, rdn # perform operation
fnmsub.s f19, f29, f11, f23, rmm # perform operation
fnmsub.s f19, f29, f11, f23, rne # perform operation
fnmsub.s f19, f29, f11, f23, rtz # perform operation
fnmsub.s f19, f29, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f29, f11, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x1)
li x18, 0xb0efcceb86b0487a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0xbc9835c01f2e5fb4 # load x3 with value 0xbc9835c01f2e5fb4
sw x3, 0(x2) # store 0xbc9835c01f2e5fb4 in memory
flw f21, 0(x2) # load 0xbc9835c01f2e5fb4 from memory into f21
fnmsub.s f18, f1, f14, f21, dyn # perform operation
fnmsub.s f18, f1, f14, f21, rdn # perform operation
fnmsub.s f18, f1, f14, f21, rmm # perform operation
fnmsub.s f18, f1, f14, f21, rne # perform operation
fnmsub.s f18, f1, f14, f21, rtz # perform operation
fnmsub.s f18, f1, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f1, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f1, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f1, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f1, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f1, f14, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000001)
li x23, 0x78c4649445f65233 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0x50ec6c3d01795bf9 # load x3 with value 0x50ec6c3d01795bf9
sw x3, 0(x2) # store 0x50ec6c3d01795bf9 in memory
flw f6, 0(x2) # load 0x50ec6c3d01795bf9 from memory into f6
fnmsub.s f23, f9, f7, f6, dyn # perform operation
fnmsub.s f23, f9, f7, f6, rdn # perform operation
fnmsub.s f23, f9, f7, f6, rmm # perform operation
fnmsub.s f23, f9, f7, f6, rne # perform operation
fnmsub.s f23, f9, f7, f6, rtz # perform operation
fnmsub.s f23, f9, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f9, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f9, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f9, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f9, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f9, f7, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800000)
li x25, 0xf18f5325fb23971c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
li x3, 0x7e79df6fabc15d28 # load x3 with value 0x7e79df6fabc15d28
sw x3, 0(x2) # store 0x7e79df6fabc15d28 in memory
flw f28, 0(x2) # load 0x7e79df6fabc15d28 from memory into f28
fnmsub.s f25, f14, f2, f28, dyn # perform operation
fnmsub.s f25, f14, f2, f28, rdn # perform operation
fnmsub.s f25, f14, f2, f28, rmm # perform operation
fnmsub.s f25, f14, f2, f28, rne # perform operation
fnmsub.s f25, f14, f2, f28, rtz # perform operation
fnmsub.s f25, f14, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f14, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f14, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f14, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f14, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f14, f2, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff800000)
li x23, 0x5a0f06ec1ab4196c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
li x3, 0x534212afe805cc8f # load x3 with value 0x534212afe805cc8f
sw x3, 0(x2) # store 0x534212afe805cc8f in memory
flw f31, 0(x2) # load 0x534212afe805cc8f from memory into f31
fnmsub.s f23, f19, f22, f31, dyn # perform operation
fnmsub.s f23, f19, f22, f31, rdn # perform operation
fnmsub.s f23, f19, f22, f31, rmm # perform operation
fnmsub.s f23, f19, f22, f31, rne # perform operation
fnmsub.s f23, f19, f22, f31, rtz # perform operation
fnmsub.s f23, f19, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f19, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f19, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f19, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f19, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f19, f22, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fc00000)
li x30, 0xb22053902f36e57e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0x99b8a5f9911b6085 # load x3 with value 0x99b8a5f9911b6085
sw x3, 0(x2) # store 0x99b8a5f9911b6085 in memory
flw f26, 0(x2) # load 0x99b8a5f9911b6085 from memory into f26
fnmsub.s f30, f16, f5, f26, dyn # perform operation
fnmsub.s f30, f16, f5, f26, rdn # perform operation
fnmsub.s f30, f16, f5, f26, rmm # perform operation
fnmsub.s f30, f16, f5, f26, rne # perform operation
fnmsub.s f30, f16, f5, f26, rtz # perform operation
fnmsub.s f30, f16, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f16, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f16, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f16, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f16, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f16, f5, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffffff)
li x23, 0xf246e87394b2aaab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
li x3, 0x4331b884c451182 # load x3 with value 0x4331b884c451182
sw x3, 0(x2) # store 0x4331b884c451182 in memory
flw f17, 0(x2) # load 0x4331b884c451182 from memory into f17
fnmsub.s f23, f25, f28, f17, dyn # perform operation
fnmsub.s f23, f25, f28, f17, rdn # perform operation
fnmsub.s f23, f25, f28, f17, rmm # perform operation
fnmsub.s f23, f25, f28, f17, rne # perform operation
fnmsub.s f23, f25, f28, f17, rtz # perform operation
fnmsub.s f23, f25, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f25, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f25, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f25, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f25, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f25, f28, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800001)
li x18, 0x3c6a87399d3ce4b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
li x3, 0x3d745da845a3d367 # load x3 with value 0x3d745da845a3d367
sw x3, 0(x2) # store 0x3d745da845a3d367 in memory
flw f24, 0(x2) # load 0x3d745da845a3d367 from memory into f24
fnmsub.s f18, f20, f29, f24, dyn # perform operation
fnmsub.s f18, f20, f29, f24, rdn # perform operation
fnmsub.s f18, f20, f29, f24, rmm # perform operation
fnmsub.s f18, f20, f29, f24, rne # perform operation
fnmsub.s f18, f20, f29, f24, rtz # perform operation
fnmsub.s f18, f20, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f20, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f20, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f20, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f20, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f20, f29, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fbfffff)
li x25, 0x401c8b2e5ef0ec26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
li x3, 0x710896ffd1e22310 # load x3 with value 0x710896ffd1e22310
sw x3, 0(x2) # store 0x710896ffd1e22310 in memory
flw f19, 0(x2) # load 0x710896ffd1e22310 from memory into f19
fnmsub.s f25, f16, f28, f19, dyn # perform operation
fnmsub.s f25, f16, f28, f19, rdn # perform operation
fnmsub.s f25, f16, f28, f19, rmm # perform operation
fnmsub.s f25, f16, f28, f19, rne # perform operation
fnmsub.s f25, f16, f28, f19, rtz # perform operation
fnmsub.s f25, f16, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f16, f28, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7ef8654f)
li x20, 0x50fa8cd343adec06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
li x3, 0xbfbfd949a376cb8 # load x3 with value 0xbfbfd949a376cb8
sw x3, 0(x2) # store 0xbfbfd949a376cb8 in memory
flw f18, 0(x2) # load 0xbfbfd949a376cb8 from memory into f18
fnmsub.s f20, f4, f31, f18, dyn # perform operation
fnmsub.s f20, f4, f31, f18, rdn # perform operation
fnmsub.s f20, f4, f31, f18, rmm # perform operation
fnmsub.s f20, f4, f31, f18, rne # perform operation
fnmsub.s f20, f4, f31, f18, rtz # perform operation
fnmsub.s f20, f4, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f4, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f4, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f4, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f4, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f4, f31, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x813d9ab0)
li x23, 0x6abb1d382a8871de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0x20ba2ee65ad6c4ba # load x3 with value 0x20ba2ee65ad6c4ba
sw x3, 0(x2) # store 0x20ba2ee65ad6c4ba in memory
flw f26, 0(x2) # load 0x20ba2ee65ad6c4ba from memory into f26
fnmsub.s f23, f9, f14, f26, dyn # perform operation
fnmsub.s f23, f9, f14, f26, rdn # perform operation
fnmsub.s f23, f9, f14, f26, rmm # perform operation
fnmsub.s f23, f9, f14, f26, rne # perform operation
fnmsub.s f23, f9, f14, f26, rtz # perform operation
fnmsub.s f23, f9, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f9, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f9, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f9, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f9, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f9, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x0)
li x20, 0x25907bbd9c042449 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x39e45379113e7a2c # load x3 with value 0x39e45379113e7a2c
sw x3, 0(x2) # store 0x39e45379113e7a2c in memory
flw f3, 0(x2) # load 0x39e45379113e7a2c from memory into f3
fnmsub.s f20, f22, f13, f3, dyn # perform operation
fnmsub.s f20, f22, f13, f3, rdn # perform operation
fnmsub.s f20, f22, f13, f3, rmm # perform operation
fnmsub.s f20, f22, f13, f3, rne # perform operation
fnmsub.s f20, f22, f13, f3, rtz # perform operation
fnmsub.s f20, f22, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f22, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f22, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f22, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f22, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f22, f13, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000000)
li x5, 0xb840fedfc99d7e80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
li x3, 0x1aa4bf9270cd5baf # load x3 with value 0x1aa4bf9270cd5baf
sw x3, 0(x2) # store 0x1aa4bf9270cd5baf in memory
flw f15, 0(x2) # load 0x1aa4bf9270cd5baf from memory into f15
fnmsub.s f5, f28, f1, f15, dyn # perform operation
fnmsub.s f5, f28, f1, f15, rdn # perform operation
fnmsub.s f5, f28, f1, f15, rmm # perform operation
fnmsub.s f5, f28, f1, f15, rne # perform operation
fnmsub.s f5, f28, f1, f15, rtz # perform operation
fnmsub.s f5, f28, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f28, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f28, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f28, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f28, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f28, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3f800000)
li x2, 0xab07edb940f9d497 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0xb606ca0f4f5db14b # load x3 with value 0xb606ca0f4f5db14b
sw x3, 0(x2) # store 0xb606ca0f4f5db14b in memory
flw f15, 0(x2) # load 0xb606ca0f4f5db14b from memory into f15
fnmsub.s f2, f11, f24, f15, dyn # perform operation
fnmsub.s f2, f11, f24, f15, rdn # perform operation
fnmsub.s f2, f11, f24, f15, rmm # perform operation
fnmsub.s f2, f11, f24, f15, rne # perform operation
fnmsub.s f2, f11, f24, f15, rtz # perform operation
fnmsub.s f2, f11, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f11, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f11, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f11, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f11, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f11, f24, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbf800000)
li x22, 0x53e4485dcb00bdaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x3f416652c30fd3c7 # load x3 with value 0x3f416652c30fd3c7
sw x3, 0(x2) # store 0x3f416652c30fd3c7 in memory
flw f26, 0(x2) # load 0x3f416652c30fd3c7 from memory into f26
fnmsub.s f22, f18, f1, f26, dyn # perform operation
fnmsub.s f22, f18, f1, f26, rdn # perform operation
fnmsub.s f22, f18, f1, f26, rmm # perform operation
fnmsub.s f22, f18, f1, f26, rne # perform operation
fnmsub.s f22, f18, f1, f26, rtz # perform operation
fnmsub.s f22, f18, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f18, f1, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3fc00000)
li x29, 0x21e6f4897bb3e91b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
li x3, 0x6979b569fd0645ab # load x3 with value 0x6979b569fd0645ab
sw x3, 0(x2) # store 0x6979b569fd0645ab in memory
flw f9, 0(x2) # load 0x6979b569fd0645ab from memory into f9
fnmsub.s f29, f14, f20, f9, dyn # perform operation
fnmsub.s f29, f14, f20, f9, rdn # perform operation
fnmsub.s f29, f14, f20, f9, rmm # perform operation
fnmsub.s f29, f14, f20, f9, rne # perform operation
fnmsub.s f29, f14, f20, f9, rtz # perform operation
fnmsub.s f29, f14, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f14, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f14, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f14, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f14, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f14, f20, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbfc00000)
li x7, 0x7a237a0ab543bb21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0x6bd74fc8bf831e22 # load x3 with value 0x6bd74fc8bf831e22
sw x3, 0(x2) # store 0x6bd74fc8bf831e22 in memory
flw f9, 0(x2) # load 0x6bd74fc8bf831e22 from memory into f9
fnmsub.s f7, f11, f27, f9, dyn # perform operation
fnmsub.s f7, f11, f27, f9, rdn # perform operation
fnmsub.s f7, f11, f27, f9, rmm # perform operation
fnmsub.s f7, f11, f27, f9, rne # perform operation
fnmsub.s f7, f11, f27, f9, rtz # perform operation
fnmsub.s f7, f11, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f11, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f11, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f11, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f11, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f11, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x40000000)
li x31, 0x3c3249f24708496c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
li x3, 0x2f1d11132b07575d # load x3 with value 0x2f1d11132b07575d
sw x3, 0(x2) # store 0x2f1d11132b07575d in memory
flw f19, 0(x2) # load 0x2f1d11132b07575d from memory into f19
fnmsub.s f31, f23, f12, f19, dyn # perform operation
fnmsub.s f31, f23, f12, f19, rdn # perform operation
fnmsub.s f31, f23, f12, f19, rmm # perform operation
fnmsub.s f31, f23, f12, f19, rne # perform operation
fnmsub.s f31, f23, f12, f19, rtz # perform operation
fnmsub.s f31, f23, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f23, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f23, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f23, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f23, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f23, f12, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xc0000000)
li x21, 0xd432b79862f9287b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0x38569bfccef2d600 # load x3 with value 0x38569bfccef2d600
sw x3, 0(x2) # store 0x38569bfccef2d600 in memory
flw f26, 0(x2) # load 0x38569bfccef2d600 from memory into f26
fnmsub.s f21, f30, f3, f26, dyn # perform operation
fnmsub.s f21, f30, f3, f26, rdn # perform operation
fnmsub.s f21, f30, f3, f26, rmm # perform operation
fnmsub.s f21, f30, f3, f26, rne # perform operation
fnmsub.s f21, f30, f3, f26, rtz # perform operation
fnmsub.s f21, f30, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f30, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f30, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f30, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f30, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f30, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x800000)
li x17, 0xd3c118c9fa287400 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x1e57449de1a4f162 # load x3 with value 0x1e57449de1a4f162
sw x3, 0(x2) # store 0x1e57449de1a4f162 in memory
flw f5, 0(x2) # load 0x1e57449de1a4f162 from memory into f5
fnmsub.s f17, f24, f13, f5, dyn # perform operation
fnmsub.s f17, f24, f13, f5, rdn # perform operation
fnmsub.s f17, f24, f13, f5, rmm # perform operation
fnmsub.s f17, f24, f13, f5, rne # perform operation
fnmsub.s f17, f24, f13, f5, rtz # perform operation
fnmsub.s f17, f24, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f24, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f24, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f24, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f24, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f24, f13, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80800000)
li x13, 0xaf3b37e518f33af4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
li x3, 0xe92f1f7ec1d59f2f # load x3 with value 0xe92f1f7ec1d59f2f
sw x3, 0(x2) # store 0xe92f1f7ec1d59f2f in memory
flw f30, 0(x2) # load 0xe92f1f7ec1d59f2f from memory into f30
fnmsub.s f13, f29, f8, f30, dyn # perform operation
fnmsub.s f13, f29, f8, f30, rdn # perform operation
fnmsub.s f13, f29, f8, f30, rmm # perform operation
fnmsub.s f13, f29, f8, f30, rne # perform operation
fnmsub.s f13, f29, f8, f30, rtz # perform operation
fnmsub.s f13, f29, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f29, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f29, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f29, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f29, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f29, f8, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f7fffff)
li x22, 0x5b0ccea674e23c0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0xf4952b705ae46013 # load x3 with value 0xf4952b705ae46013
sw x3, 0(x2) # store 0xf4952b705ae46013 in memory
flw f6, 0(x2) # load 0xf4952b705ae46013 from memory into f6
fnmsub.s f22, f1, f12, f6, dyn # perform operation
fnmsub.s f22, f1, f12, f6, rdn # perform operation
fnmsub.s f22, f1, f12, f6, rmm # perform operation
fnmsub.s f22, f1, f12, f6, rne # perform operation
fnmsub.s f22, f1, f12, f6, rtz # perform operation
fnmsub.s f22, f1, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f1, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f1, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f1, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f1, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f1, f12, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff7fffff)
li x5, 0x96beddff7df7c3da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0xc9dcb22c27148cbf # load x3 with value 0xc9dcb22c27148cbf
sw x3, 0(x2) # store 0xc9dcb22c27148cbf in memory
flw f9, 0(x2) # load 0xc9dcb22c27148cbf from memory into f9
fnmsub.s f5, f6, f28, f9, dyn # perform operation
fnmsub.s f5, f6, f28, f9, rdn # perform operation
fnmsub.s f5, f6, f28, f9, rmm # perform operation
fnmsub.s f5, f6, f28, f9, rne # perform operation
fnmsub.s f5, f6, f28, f9, rtz # perform operation
fnmsub.s f5, f6, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f6, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f6, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f6, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f6, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f6, f28, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffff)
li x4, 0x7800ece5cd3c2fb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0x4b0ba20d3d8a0bdd # load x3 with value 0x4b0ba20d3d8a0bdd
sw x3, 0(x2) # store 0x4b0ba20d3d8a0bdd in memory
flw f20, 0(x2) # load 0x4b0ba20d3d8a0bdd from memory into f20
fnmsub.s f4, f2, f8, f20, dyn # perform operation
fnmsub.s f4, f2, f8, f20, rdn # perform operation
fnmsub.s f4, f2, f8, f20, rmm # perform operation
fnmsub.s f4, f2, f8, f20, rne # perform operation
fnmsub.s f4, f2, f8, f20, rtz # perform operation
fnmsub.s f4, f2, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f2, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f2, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f2, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f2, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f2, f8, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x807fffff)
li x18, 0x09a3f95cd19a9170 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0xbb8478d92679b2d7 # load x3 with value 0xbb8478d92679b2d7
sw x3, 0(x2) # store 0xbb8478d92679b2d7 in memory
flw f24, 0(x2) # load 0xbb8478d92679b2d7 from memory into f24
fnmsub.s f18, f4, f2, f24, dyn # perform operation
fnmsub.s f18, f4, f2, f24, rdn # perform operation
fnmsub.s f18, f4, f2, f24, rmm # perform operation
fnmsub.s f18, f4, f2, f24, rne # perform operation
fnmsub.s f18, f4, f2, f24, rtz # perform operation
fnmsub.s f18, f4, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f4, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f4, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f4, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f4, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f4, f2, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x400000)
li x25, 0x0aeb05b8808f7ac1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0xf0d96c40e26900fc # load x3 with value 0xf0d96c40e26900fc
sw x3, 0(x2) # store 0xf0d96c40e26900fc in memory
flw f21, 0(x2) # load 0xf0d96c40e26900fc from memory into f21
fnmsub.s f25, f18, f2, f21, dyn # perform operation
fnmsub.s f25, f18, f2, f21, rdn # perform operation
fnmsub.s f25, f18, f2, f21, rmm # perform operation
fnmsub.s f25, f18, f2, f21, rne # perform operation
fnmsub.s f25, f18, f2, f21, rtz # perform operation
fnmsub.s f25, f18, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f18, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f18, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f18, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f18, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f18, f2, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80400000)
li x16, 0xf57d2a153b174d45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
li x3, 0x94b12881f6af8ef4 # load x3 with value 0x94b12881f6af8ef4
sw x3, 0(x2) # store 0x94b12881f6af8ef4 in memory
flw f14, 0(x2) # load 0x94b12881f6af8ef4 from memory into f14
fnmsub.s f16, f23, f31, f14, dyn # perform operation
fnmsub.s f16, f23, f31, f14, rdn # perform operation
fnmsub.s f16, f23, f31, f14, rmm # perform operation
fnmsub.s f16, f23, f31, f14, rne # perform operation
fnmsub.s f16, f23, f31, f14, rtz # perform operation
fnmsub.s f16, f23, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f23, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f23, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f23, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f23, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f23, f31, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x1)
li x21, 0x534d6251d2aee717 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0xf52b49f0ff24aad2 # load x3 with value 0xf52b49f0ff24aad2
sw x3, 0(x2) # store 0xf52b49f0ff24aad2 in memory
flw f15, 0(x2) # load 0xf52b49f0ff24aad2 from memory into f15
fnmsub.s f21, f7, f23, f15, dyn # perform operation
fnmsub.s f21, f7, f23, f15, rdn # perform operation
fnmsub.s f21, f7, f23, f15, rmm # perform operation
fnmsub.s f21, f7, f23, f15, rne # perform operation
fnmsub.s f21, f7, f23, f15, rtz # perform operation
fnmsub.s f21, f7, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f7, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f7, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f7, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f7, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f7, f23, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000001)
li x2, 0x5f1dac617914b388 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0xb6b95451656124 # load x3 with value 0xb6b95451656124
sw x3, 0(x2) # store 0xb6b95451656124 in memory
flw f24, 0(x2) # load 0xb6b95451656124 from memory into f24
fnmsub.s f2, f3, f17, f24, dyn # perform operation
fnmsub.s f2, f3, f17, f24, rdn # perform operation
fnmsub.s f2, f3, f17, f24, rmm # perform operation
fnmsub.s f2, f3, f17, f24, rne # perform operation
fnmsub.s f2, f3, f17, f24, rtz # perform operation
fnmsub.s f2, f3, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f3, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f3, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f3, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f3, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f3, f17, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800000)
li x22, 0x4746e6a900d7cb41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
li x3, 0x53ce18715051da82 # load x3 with value 0x53ce18715051da82
sw x3, 0(x2) # store 0x53ce18715051da82 in memory
flw f13, 0(x2) # load 0x53ce18715051da82 from memory into f13
fnmsub.s f22, f26, f20, f13, dyn # perform operation
fnmsub.s f22, f26, f20, f13, rdn # perform operation
fnmsub.s f22, f26, f20, f13, rmm # perform operation
fnmsub.s f22, f26, f20, f13, rne # perform operation
fnmsub.s f22, f26, f20, f13, rtz # perform operation
fnmsub.s f22, f26, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f26, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f26, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f26, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f26, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f26, f20, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff800000)
li x18, 0xe28354aa0bd49b69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
li x3, 0x544cbf2b4908c9f8 # load x3 with value 0x544cbf2b4908c9f8
sw x3, 0(x2) # store 0x544cbf2b4908c9f8 in memory
flw f9, 0(x2) # load 0x544cbf2b4908c9f8 from memory into f9
fnmsub.s f18, f19, f2, f9, dyn # perform operation
fnmsub.s f18, f19, f2, f9, rdn # perform operation
fnmsub.s f18, f19, f2, f9, rmm # perform operation
fnmsub.s f18, f19, f2, f9, rne # perform operation
fnmsub.s f18, f19, f2, f9, rtz # perform operation
fnmsub.s f18, f19, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f19, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f19, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f19, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f19, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f19, f2, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fc00000)
li x5, 0xecfe929ae6090f89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x94560cd04503bed1 # load x3 with value 0x94560cd04503bed1
sw x3, 0(x2) # store 0x94560cd04503bed1 in memory
flw f21, 0(x2) # load 0x94560cd04503bed1 from memory into f21
fnmsub.s f5, f4, f14, f21, dyn # perform operation
fnmsub.s f5, f4, f14, f21, rdn # perform operation
fnmsub.s f5, f4, f14, f21, rmm # perform operation
fnmsub.s f5, f4, f14, f21, rne # perform operation
fnmsub.s f5, f4, f14, f21, rtz # perform operation
fnmsub.s f5, f4, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f4, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f4, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f4, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f4, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f4, f14, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffffff)
li x11, 0x5c845213ebd86a6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0xff933e8446a4e681 # load x3 with value 0xff933e8446a4e681
sw x3, 0(x2) # store 0xff933e8446a4e681 in memory
flw f14, 0(x2) # load 0xff933e8446a4e681 from memory into f14
fnmsub.s f11, f26, f6, f14, dyn # perform operation
fnmsub.s f11, f26, f6, f14, rdn # perform operation
fnmsub.s f11, f26, f6, f14, rmm # perform operation
fnmsub.s f11, f26, f6, f14, rne # perform operation
fnmsub.s f11, f26, f6, f14, rtz # perform operation
fnmsub.s f11, f26, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f26, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f26, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f26, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f26, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f26, f6, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800001)
li x4, 0xe1bbcddebfd45b0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0xcd8b43de5095f86a # load x3 with value 0xcd8b43de5095f86a
sw x3, 0(x2) # store 0xcd8b43de5095f86a in memory
flw f18, 0(x2) # load 0xcd8b43de5095f86a from memory into f18
fnmsub.s f4, f25, f9, f18, dyn # perform operation
fnmsub.s f4, f25, f9, f18, rdn # perform operation
fnmsub.s f4, f25, f9, f18, rmm # perform operation
fnmsub.s f4, f25, f9, f18, rne # perform operation
fnmsub.s f4, f25, f9, f18, rtz # perform operation
fnmsub.s f4, f25, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f25, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f25, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f25, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f25, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f25, f9, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fbfffff)
li x25, 0x2374476acc153db7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0xbfcbf4a51942aee # load x3 with value 0xbfcbf4a51942aee
sw x3, 0(x2) # store 0xbfcbf4a51942aee in memory
flw f23, 0(x2) # load 0xbfcbf4a51942aee from memory into f23
fnmsub.s f25, f15, f7, f23, dyn # perform operation
fnmsub.s f25, f15, f7, f23, rdn # perform operation
fnmsub.s f25, f15, f7, f23, rmm # perform operation
fnmsub.s f25, f15, f7, f23, rne # perform operation
fnmsub.s f25, f15, f7, f23, rtz # perform operation
fnmsub.s f25, f15, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f15, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f15, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f15, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f15, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f15, f7, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7ef8654f)
li x7, 0x3836dc28a9e3101b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0x3672e7d91a66da5c # load x3 with value 0x3672e7d91a66da5c
sw x3, 0(x2) # store 0x3672e7d91a66da5c in memory
flw f30, 0(x2) # load 0x3672e7d91a66da5c from memory into f30
fnmsub.s f7, f17, f27, f30, dyn # perform operation
fnmsub.s f7, f17, f27, f30, rdn # perform operation
fnmsub.s f7, f17, f27, f30, rmm # perform operation
fnmsub.s f7, f17, f27, f30, rne # perform operation
fnmsub.s f7, f17, f27, f30, rtz # perform operation
fnmsub.s f7, f17, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f17, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f17, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f17, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f17, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f17, f27, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x813d9ab0)
li x20, 0xcfa700cf24fc987b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0x8cb35624d198019 # load x3 with value 0x8cb35624d198019
sw x3, 0(x2) # store 0x8cb35624d198019 in memory
flw f24, 0(x2) # load 0x8cb35624d198019 from memory into f24
fnmsub.s f20, f16, f13, f24, dyn # perform operation
fnmsub.s f20, f16, f13, f24, rdn # perform operation
fnmsub.s f20, f16, f13, f24, rmm # perform operation
fnmsub.s f20, f16, f13, f24, rne # perform operation
fnmsub.s f20, f16, f13, f24, rtz # perform operation
fnmsub.s f20, f16, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f16, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f16, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f16, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f16, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f16, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x0)
li x19, 0x0ad95c6f681f984a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0xe0de30eb1efca0d3 # load x3 with value 0xe0de30eb1efca0d3
sw x3, 0(x2) # store 0xe0de30eb1efca0d3 in memory
flw f28, 0(x2) # load 0xe0de30eb1efca0d3 from memory into f28
fnmsub.s f19, f9, f3, f28, dyn # perform operation
fnmsub.s f19, f9, f3, f28, rdn # perform operation
fnmsub.s f19, f9, f3, f28, rmm # perform operation
fnmsub.s f19, f9, f3, f28, rne # perform operation
fnmsub.s f19, f9, f3, f28, rtz # perform operation
fnmsub.s f19, f9, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f9, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f9, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f9, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f9, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f9, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000000)
li x13, 0x420f837aae015565 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0x290c784e310aa6bc # load x3 with value 0x290c784e310aa6bc
sw x3, 0(x2) # store 0x290c784e310aa6bc in memory
flw f31, 0(x2) # load 0x290c784e310aa6bc from memory into f31
fnmsub.s f13, f29, f22, f31, dyn # perform operation
fnmsub.s f13, f29, f22, f31, rdn # perform operation
fnmsub.s f13, f29, f22, f31, rmm # perform operation
fnmsub.s f13, f29, f22, f31, rne # perform operation
fnmsub.s f13, f29, f22, f31, rtz # perform operation
fnmsub.s f13, f29, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f29, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f29, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f29, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f29, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f29, f22, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3f800000)
li x1, 0xd345460f1e767e59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x2c3af401c968a4bc # load x3 with value 0x2c3af401c968a4bc
sw x3, 0(x2) # store 0x2c3af401c968a4bc in memory
flw f29, 0(x2) # load 0x2c3af401c968a4bc from memory into f29
fnmsub.s f1, f24, f25, f29, dyn # perform operation
fnmsub.s f1, f24, f25, f29, rdn # perform operation
fnmsub.s f1, f24, f25, f29, rmm # perform operation
fnmsub.s f1, f24, f25, f29, rne # perform operation
fnmsub.s f1, f24, f25, f29, rtz # perform operation
fnmsub.s f1, f24, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f24, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f24, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f24, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f24, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f24, f25, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbf800000)
li x20, 0x56ed41832fe2262d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
li x3, 0x7f1a851b7700dfda # load x3 with value 0x7f1a851b7700dfda
sw x3, 0(x2) # store 0x7f1a851b7700dfda in memory
flw f30, 0(x2) # load 0x7f1a851b7700dfda from memory into f30
fnmsub.s f20, f21, f4, f30, dyn # perform operation
fnmsub.s f20, f21, f4, f30, rdn # perform operation
fnmsub.s f20, f21, f4, f30, rmm # perform operation
fnmsub.s f20, f21, f4, f30, rne # perform operation
fnmsub.s f20, f21, f4, f30, rtz # perform operation
fnmsub.s f20, f21, f4, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f21, f4, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f21, f4, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f21, f4, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f21, f4, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f21, f4, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3fc00000)
li x14, 0x8a34b4165ac8557f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0x234a6e0176acbaa3 # load x3 with value 0x234a6e0176acbaa3
sw x3, 0(x2) # store 0x234a6e0176acbaa3 in memory
flw f28, 0(x2) # load 0x234a6e0176acbaa3 from memory into f28
fnmsub.s f14, f19, f8, f28, dyn # perform operation
fnmsub.s f14, f19, f8, f28, rdn # perform operation
fnmsub.s f14, f19, f8, f28, rmm # perform operation
fnmsub.s f14, f19, f8, f28, rne # perform operation
fnmsub.s f14, f19, f8, f28, rtz # perform operation
fnmsub.s f14, f19, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f19, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f19, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f19, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f19, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f19, f8, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbfc00000)
li x3, 0xc1c115e43a0cb7ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
li x3, 0xfe7f99d8c091f314 # load x3 with value 0xfe7f99d8c091f314
sw x3, 0(x2) # store 0xfe7f99d8c091f314 in memory
flw f5, 0(x2) # load 0xfe7f99d8c091f314 from memory into f5
fnmsub.s f3, f26, f6, f5, dyn # perform operation
fnmsub.s f3, f26, f6, f5, rdn # perform operation
fnmsub.s f3, f26, f6, f5, rmm # perform operation
fnmsub.s f3, f26, f6, f5, rne # perform operation
fnmsub.s f3, f26, f6, f5, rtz # perform operation
fnmsub.s f3, f26, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f26, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f26, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f26, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f26, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f26, f6, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x40000000)
li x21, 0xe9f464a72f778dc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x1757d803c355680e # load x3 with value 0x1757d803c355680e
sw x3, 0(x2) # store 0x1757d803c355680e in memory
flw f31, 0(x2) # load 0x1757d803c355680e from memory into f31
fnmsub.s f21, f23, f2, f31, dyn # perform operation
fnmsub.s f21, f23, f2, f31, rdn # perform operation
fnmsub.s f21, f23, f2, f31, rmm # perform operation
fnmsub.s f21, f23, f2, f31, rne # perform operation
fnmsub.s f21, f23, f2, f31, rtz # perform operation
fnmsub.s f21, f23, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f23, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f23, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f23, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f23, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f23, f2, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xc0000000)
li x28, 0x792e5d0f429d6612 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0xaeacd6d0c4f7ca1a # load x3 with value 0xaeacd6d0c4f7ca1a
sw x3, 0(x2) # store 0xaeacd6d0c4f7ca1a in memory
flw f15, 0(x2) # load 0xaeacd6d0c4f7ca1a from memory into f15
fnmsub.s f28, f3, f16, f15, dyn # perform operation
fnmsub.s f28, f3, f16, f15, rdn # perform operation
fnmsub.s f28, f3, f16, f15, rmm # perform operation
fnmsub.s f28, f3, f16, f15, rne # perform operation
fnmsub.s f28, f3, f16, f15, rtz # perform operation
fnmsub.s f28, f3, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f3, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f3, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f3, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f3, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f3, f16, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x800000)
li x27, 0x77693b6f3f25ca26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0x9bfee09d5dadf152 # load x3 with value 0x9bfee09d5dadf152
sw x3, 0(x2) # store 0x9bfee09d5dadf152 in memory
flw f10, 0(x2) # load 0x9bfee09d5dadf152 from memory into f10
fnmsub.s f27, f24, f8, f10, dyn # perform operation
fnmsub.s f27, f24, f8, f10, rdn # perform operation
fnmsub.s f27, f24, f8, f10, rmm # perform operation
fnmsub.s f27, f24, f8, f10, rne # perform operation
fnmsub.s f27, f24, f8, f10, rtz # perform operation
fnmsub.s f27, f24, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f24, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f24, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f24, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f24, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f24, f8, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80800000)
li x28, 0x55ac25b1304ade9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
li x3, 0xb4e49860a4391d90 # load x3 with value 0xb4e49860a4391d90
sw x3, 0(x2) # store 0xb4e49860a4391d90 in memory
flw f27, 0(x2) # load 0xb4e49860a4391d90 from memory into f27
fnmsub.s f28, f19, f29, f27, dyn # perform operation
fnmsub.s f28, f19, f29, f27, rdn # perform operation
fnmsub.s f28, f19, f29, f27, rmm # perform operation
fnmsub.s f28, f19, f29, f27, rne # perform operation
fnmsub.s f28, f19, f29, f27, rtz # perform operation
fnmsub.s f28, f19, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f19, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f19, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f19, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f19, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f19, f29, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f7fffff)
li x28, 0xdc660456b191ca83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0x93031651be899f48 # load x3 with value 0x93031651be899f48
sw x3, 0(x2) # store 0x93031651be899f48 in memory
flw f14, 0(x2) # load 0x93031651be899f48 from memory into f14
fnmsub.s f28, f1, f9, f14, dyn # perform operation
fnmsub.s f28, f1, f9, f14, rdn # perform operation
fnmsub.s f28, f1, f9, f14, rmm # perform operation
fnmsub.s f28, f1, f9, f14, rne # perform operation
fnmsub.s f28, f1, f9, f14, rtz # perform operation
fnmsub.s f28, f1, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f1, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f1, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f1, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f1, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f1, f9, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff7fffff)
li x20, 0xed427ab9224cad02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0xcb9bd5463b8b9e84 # load x3 with value 0xcb9bd5463b8b9e84
sw x3, 0(x2) # store 0xcb9bd5463b8b9e84 in memory
flw f23, 0(x2) # load 0xcb9bd5463b8b9e84 from memory into f23
fnmsub.s f20, f15, f30, f23, dyn # perform operation
fnmsub.s f20, f15, f30, f23, rdn # perform operation
fnmsub.s f20, f15, f30, f23, rmm # perform operation
fnmsub.s f20, f15, f30, f23, rne # perform operation
fnmsub.s f20, f15, f30, f23, rtz # perform operation
fnmsub.s f20, f15, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f15, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f15, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f15, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f15, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f15, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffff)
li x7, 0x121418421c4a1056 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0xd47779089f5e4f12 # load x3 with value 0xd47779089f5e4f12
sw x3, 0(x2) # store 0xd47779089f5e4f12 in memory
flw f21, 0(x2) # load 0xd47779089f5e4f12 from memory into f21
fnmsub.s f7, f27, f19, f21, dyn # perform operation
fnmsub.s f7, f27, f19, f21, rdn # perform operation
fnmsub.s f7, f27, f19, f21, rmm # perform operation
fnmsub.s f7, f27, f19, f21, rne # perform operation
fnmsub.s f7, f27, f19, f21, rtz # perform operation
fnmsub.s f7, f27, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f27, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f27, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f27, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f27, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f27, f19, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x807fffff)
li x23, 0x3b65837bf6770787 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x7cc4ebe9eeeb65aa # load x3 with value 0x7cc4ebe9eeeb65aa
sw x3, 0(x2) # store 0x7cc4ebe9eeeb65aa in memory
flw f29, 0(x2) # load 0x7cc4ebe9eeeb65aa from memory into f29
fnmsub.s f23, f8, f2, f29, dyn # perform operation
fnmsub.s f23, f8, f2, f29, rdn # perform operation
fnmsub.s f23, f8, f2, f29, rmm # perform operation
fnmsub.s f23, f8, f2, f29, rne # perform operation
fnmsub.s f23, f8, f2, f29, rtz # perform operation
fnmsub.s f23, f8, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f8, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f8, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f8, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f8, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f8, f2, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x400000)
li x29, 0x88a82fa706ca218a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0xbcd07c98cc07cd06 # load x3 with value 0xbcd07c98cc07cd06
sw x3, 0(x2) # store 0xbcd07c98cc07cd06 in memory
flw f8, 0(x2) # load 0xbcd07c98cc07cd06 from memory into f8
fnmsub.s f29, f15, f1, f8, dyn # perform operation
fnmsub.s f29, f15, f1, f8, rdn # perform operation
fnmsub.s f29, f15, f1, f8, rmm # perform operation
fnmsub.s f29, f15, f1, f8, rne # perform operation
fnmsub.s f29, f15, f1, f8, rtz # perform operation
fnmsub.s f29, f15, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f15, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f15, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f15, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f15, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f15, f1, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80400000)
li x18, 0xcd894e8b06cf9058 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0xc7ea0b26d1b568b3 # load x3 with value 0xc7ea0b26d1b568b3
sw x3, 0(x2) # store 0xc7ea0b26d1b568b3 in memory
flw f21, 0(x2) # load 0xc7ea0b26d1b568b3 from memory into f21
fnmsub.s f18, f23, f28, f21, dyn # perform operation
fnmsub.s f18, f23, f28, f21, rdn # perform operation
fnmsub.s f18, f23, f28, f21, rmm # perform operation
fnmsub.s f18, f23, f28, f21, rne # perform operation
fnmsub.s f18, f23, f28, f21, rtz # perform operation
fnmsub.s f18, f23, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f23, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f23, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f23, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f23, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f23, f28, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x1)
li x29, 0x4561cfd7cf493511 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
li x3, 0x3647cf565d6a4d3e # load x3 with value 0x3647cf565d6a4d3e
sw x3, 0(x2) # store 0x3647cf565d6a4d3e in memory
flw f28, 0(x2) # load 0x3647cf565d6a4d3e from memory into f28
fnmsub.s f29, f30, f9, f28, dyn # perform operation
fnmsub.s f29, f30, f9, f28, rdn # perform operation
fnmsub.s f29, f30, f9, f28, rmm # perform operation
fnmsub.s f29, f30, f9, f28, rne # perform operation
fnmsub.s f29, f30, f9, f28, rtz # perform operation
fnmsub.s f29, f30, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f30, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f30, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f30, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f30, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f30, f9, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000001)
li x20, 0x61bf2264e0ac5cc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0xcfe38092befb1e33 # load x3 with value 0xcfe38092befb1e33
sw x3, 0(x2) # store 0xcfe38092befb1e33 in memory
flw f27, 0(x2) # load 0xcfe38092befb1e33 from memory into f27
fnmsub.s f20, f2, f7, f27, dyn # perform operation
fnmsub.s f20, f2, f7, f27, rdn # perform operation
fnmsub.s f20, f2, f7, f27, rmm # perform operation
fnmsub.s f20, f2, f7, f27, rne # perform operation
fnmsub.s f20, f2, f7, f27, rtz # perform operation
fnmsub.s f20, f2, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f2, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f2, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f2, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f2, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f2, f7, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800000)
li x29, 0xb96ff2425848ec79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
li x3, 0xf7e33551bbc111f # load x3 with value 0xf7e33551bbc111f
sw x3, 0(x2) # store 0xf7e33551bbc111f in memory
flw f31, 0(x2) # load 0xf7e33551bbc111f from memory into f31
fnmsub.s f29, f3, f2, f31, dyn # perform operation
fnmsub.s f29, f3, f2, f31, rdn # perform operation
fnmsub.s f29, f3, f2, f31, rmm # perform operation
fnmsub.s f29, f3, f2, f31, rne # perform operation
fnmsub.s f29, f3, f2, f31, rtz # perform operation
fnmsub.s f29, f3, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f3, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f3, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f3, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f3, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f3, f2, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff800000)
li x10, 0xfba77e565ce6c02c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x16d01626289b3eca # load x3 with value 0x16d01626289b3eca
sw x3, 0(x2) # store 0x16d01626289b3eca in memory
flw f2, 0(x2) # load 0x16d01626289b3eca from memory into f2
fnmsub.s f10, f11, f13, f2, dyn # perform operation
fnmsub.s f10, f11, f13, f2, rdn # perform operation
fnmsub.s f10, f11, f13, f2, rmm # perform operation
fnmsub.s f10, f11, f13, f2, rne # perform operation
fnmsub.s f10, f11, f13, f2, rtz # perform operation
fnmsub.s f10, f11, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f11, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f11, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f11, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f11, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f11, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fc00000)
li x21, 0x150efa58cc0e17a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0xa020a47f13835995 # load x3 with value 0xa020a47f13835995
sw x3, 0(x2) # store 0xa020a47f13835995 in memory
flw f28, 0(x2) # load 0xa020a47f13835995 from memory into f28
fnmsub.s f21, f5, f20, f28, dyn # perform operation
fnmsub.s f21, f5, f20, f28, rdn # perform operation
fnmsub.s f21, f5, f20, f28, rmm # perform operation
fnmsub.s f21, f5, f20, f28, rne # perform operation
fnmsub.s f21, f5, f20, f28, rtz # perform operation
fnmsub.s f21, f5, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f5, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f5, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f5, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f5, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f5, f20, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffffff)
li x18, 0xee55189334bf7970 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0x58c04d1cc2983f95 # load x3 with value 0x58c04d1cc2983f95
sw x3, 0(x2) # store 0x58c04d1cc2983f95 in memory
flw f14, 0(x2) # load 0x58c04d1cc2983f95 from memory into f14
fnmsub.s f18, f16, f12, f14, dyn # perform operation
fnmsub.s f18, f16, f12, f14, rdn # perform operation
fnmsub.s f18, f16, f12, f14, rmm # perform operation
fnmsub.s f18, f16, f12, f14, rne # perform operation
fnmsub.s f18, f16, f12, f14, rtz # perform operation
fnmsub.s f18, f16, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f16, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f16, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f16, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f16, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f16, f12, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800001)
li x25, 0xb8cad1554009d22c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0x40e73985b62cc6e1 # load x3 with value 0x40e73985b62cc6e1
sw x3, 0(x2) # store 0x40e73985b62cc6e1 in memory
flw f11, 0(x2) # load 0x40e73985b62cc6e1 from memory into f11
fnmsub.s f25, f1, f20, f11, dyn # perform operation
fnmsub.s f25, f1, f20, f11, rdn # perform operation
fnmsub.s f25, f1, f20, f11, rmm # perform operation
fnmsub.s f25, f1, f20, f11, rne # perform operation
fnmsub.s f25, f1, f20, f11, rtz # perform operation
fnmsub.s f25, f1, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f1, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f1, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f1, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f1, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f1, f20, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fbfffff)
li x31, 0x76e41127e4772ce2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x2c11fce17e842d5a # load x3 with value 0x2c11fce17e842d5a
sw x3, 0(x2) # store 0x2c11fce17e842d5a in memory
flw f30, 0(x2) # load 0x2c11fce17e842d5a from memory into f30
fnmsub.s f31, f15, f5, f30, dyn # perform operation
fnmsub.s f31, f15, f5, f30, rdn # perform operation
fnmsub.s f31, f15, f5, f30, rmm # perform operation
fnmsub.s f31, f15, f5, f30, rne # perform operation
fnmsub.s f31, f15, f5, f30, rtz # perform operation
fnmsub.s f31, f15, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f15, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f15, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f15, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f15, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f15, f5, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7ef8654f)
li x13, 0xf01d4a8b9d9c9db9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0xe0b138fc9954ec8a # load x3 with value 0xe0b138fc9954ec8a
sw x3, 0(x2) # store 0xe0b138fc9954ec8a in memory
flw f10, 0(x2) # load 0xe0b138fc9954ec8a from memory into f10
fnmsub.s f13, f8, f5, f10, dyn # perform operation
fnmsub.s f13, f8, f5, f10, rdn # perform operation
fnmsub.s f13, f8, f5, f10, rmm # perform operation
fnmsub.s f13, f8, f5, f10, rne # perform operation
fnmsub.s f13, f8, f5, f10, rtz # perform operation
fnmsub.s f13, f8, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f8, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f8, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f8, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f8, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f8, f5, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x813d9ab0)
li x29, 0x3ff73b81af7a5f1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0x227cacfb133366ba # load x3 with value 0x227cacfb133366ba
sw x3, 0(x2) # store 0x227cacfb133366ba in memory
flw f12, 0(x2) # load 0x227cacfb133366ba from memory into f12
fnmsub.s f29, f5, f22, f12, dyn # perform operation
fnmsub.s f29, f5, f22, f12, rdn # perform operation
fnmsub.s f29, f5, f22, f12, rmm # perform operation
fnmsub.s f29, f5, f22, f12, rne # perform operation
fnmsub.s f29, f5, f22, f12, rtz # perform operation
fnmsub.s f29, f5, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f5, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f5, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f5, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f5, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f5, f22, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
li x6, 0x448171f29a1b06c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0xa6ca4c17c9b9ca50 # load x3 with value 0xa6ca4c17c9b9ca50
sw x3, 0(x2) # store 0xa6ca4c17c9b9ca50 in memory
flw f29, 0(x2) # load 0xa6ca4c17c9b9ca50 from memory into f29
fnmsub.s f6, f28, f14, f29, dyn # perform operation
fnmsub.s f6, f28, f14, f29, rdn # perform operation
fnmsub.s f6, f28, f14, f29, rmm # perform operation
fnmsub.s f6, f28, f14, f29, rne # perform operation
fnmsub.s f6, f28, f14, f29, rtz # perform operation
fnmsub.s f6, f28, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f28, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f28, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f28, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f28, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f28, f14, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000000)
li x7, 0x0735013661b19eaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
li x3, 0xb5b5fb082d365850 # load x3 with value 0xb5b5fb082d365850
sw x3, 0(x2) # store 0xb5b5fb082d365850 in memory
flw f21, 0(x2) # load 0xb5b5fb082d365850 from memory into f21
fnmsub.s f7, f31, f26, f21, dyn # perform operation
fnmsub.s f7, f31, f26, f21, rdn # perform operation
fnmsub.s f7, f31, f26, f21, rmm # perform operation
fnmsub.s f7, f31, f26, f21, rne # perform operation
fnmsub.s f7, f31, f26, f21, rtz # perform operation
fnmsub.s f7, f31, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f31, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f31, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f31, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f31, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f31, f26, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3f800000)
li x25, 0x6a43494e746b8743 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
li x3, 0x3913325db037b437 # load x3 with value 0x3913325db037b437
sw x3, 0(x2) # store 0x3913325db037b437 in memory
flw f7, 0(x2) # load 0x3913325db037b437 from memory into f7
fnmsub.s f25, f1, f29, f7, dyn # perform operation
fnmsub.s f25, f1, f29, f7, rdn # perform operation
fnmsub.s f25, f1, f29, f7, rmm # perform operation
fnmsub.s f25, f1, f29, f7, rne # perform operation
fnmsub.s f25, f1, f29, f7, rtz # perform operation
fnmsub.s f25, f1, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f1, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f1, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f1, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f1, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f1, f29, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbf800000)
li x2, 0x1985b74e958af2fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0x29fdb98b396c55f3 # load x3 with value 0x29fdb98b396c55f3
sw x3, 0(x2) # store 0x29fdb98b396c55f3 in memory
flw f22, 0(x2) # load 0x29fdb98b396c55f3 from memory into f22
fnmsub.s f2, f27, f23, f22, dyn # perform operation
fnmsub.s f2, f27, f23, f22, rdn # perform operation
fnmsub.s f2, f27, f23, f22, rmm # perform operation
fnmsub.s f2, f27, f23, f22, rne # perform operation
fnmsub.s f2, f27, f23, f22, rtz # perform operation
fnmsub.s f2, f27, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f27, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f27, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f27, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f27, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f27, f23, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3fc00000)
li x24, 0xbd3a94d67cadee9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
li x3, 0xe83394f4be16accf # load x3 with value 0xe83394f4be16accf
sw x3, 0(x2) # store 0xe83394f4be16accf in memory
flw f29, 0(x2) # load 0xe83394f4be16accf from memory into f29
fnmsub.s f24, f10, f23, f29, dyn # perform operation
fnmsub.s f24, f10, f23, f29, rdn # perform operation
fnmsub.s f24, f10, f23, f29, rmm # perform operation
fnmsub.s f24, f10, f23, f29, rne # perform operation
fnmsub.s f24, f10, f23, f29, rtz # perform operation
fnmsub.s f24, f10, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f10, f23, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbfc00000)
li x28, 0x94344873a73f68ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
li x3, 0x2c5506bfd37d7cba # load x3 with value 0x2c5506bfd37d7cba
sw x3, 0(x2) # store 0x2c5506bfd37d7cba in memory
flw f26, 0(x2) # load 0x2c5506bfd37d7cba from memory into f26
fnmsub.s f28, f23, f6, f26, dyn # perform operation
fnmsub.s f28, f23, f6, f26, rdn # perform operation
fnmsub.s f28, f23, f6, f26, rmm # perform operation
fnmsub.s f28, f23, f6, f26, rne # perform operation
fnmsub.s f28, f23, f6, f26, rtz # perform operation
fnmsub.s f28, f23, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f23, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f23, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f23, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f23, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f23, f6, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x40000000)
li x20, 0x8feea4b638681ffb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0xbab7bfe56865b90d # load x3 with value 0xbab7bfe56865b90d
sw x3, 0(x2) # store 0xbab7bfe56865b90d in memory
flw f26, 0(x2) # load 0xbab7bfe56865b90d from memory into f26
fnmsub.s f20, f23, f17, f26, dyn # perform operation
fnmsub.s f20, f23, f17, f26, rdn # perform operation
fnmsub.s f20, f23, f17, f26, rmm # perform operation
fnmsub.s f20, f23, f17, f26, rne # perform operation
fnmsub.s f20, f23, f17, f26, rtz # perform operation
fnmsub.s f20, f23, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f23, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f23, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f23, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f23, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f23, f17, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc0000000)
li x15, 0xa4d19622f6fab69b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0x7646ce47a73bdfaa # load x3 with value 0x7646ce47a73bdfaa
sw x3, 0(x2) # store 0x7646ce47a73bdfaa in memory
flw f16, 0(x2) # load 0x7646ce47a73bdfaa from memory into f16
fnmsub.s f15, f11, f27, f16, dyn # perform operation
fnmsub.s f15, f11, f27, f16, rdn # perform operation
fnmsub.s f15, f11, f27, f16, rmm # perform operation
fnmsub.s f15, f11, f27, f16, rne # perform operation
fnmsub.s f15, f11, f27, f16, rtz # perform operation
fnmsub.s f15, f11, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f11, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f11, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f11, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f11, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f11, f27, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800000)
li x31, 0x958197d8ed6afa49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0xf673e525c60a77e2 # load x3 with value 0xf673e525c60a77e2
sw x3, 0(x2) # store 0xf673e525c60a77e2 in memory
flw f30, 0(x2) # load 0xf673e525c60a77e2 from memory into f30
fnmsub.s f31, f6, f14, f30, dyn # perform operation
fnmsub.s f31, f6, f14, f30, rdn # perform operation
fnmsub.s f31, f6, f14, f30, rmm # perform operation
fnmsub.s f31, f6, f14, f30, rne # perform operation
fnmsub.s f31, f6, f14, f30, rtz # perform operation
fnmsub.s f31, f6, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f6, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f6, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f6, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f6, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f6, f14, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80800000)
li x20, 0x64935dbe3d1cedae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0x5b8bfaf11bf010e # load x3 with value 0x5b8bfaf11bf010e
sw x3, 0(x2) # store 0x5b8bfaf11bf010e in memory
flw f4, 0(x2) # load 0x5b8bfaf11bf010e from memory into f4
fnmsub.s f20, f16, f9, f4, dyn # perform operation
fnmsub.s f20, f16, f9, f4, rdn # perform operation
fnmsub.s f20, f16, f9, f4, rmm # perform operation
fnmsub.s f20, f16, f9, f4, rne # perform operation
fnmsub.s f20, f16, f9, f4, rtz # perform operation
fnmsub.s f20, f16, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f16, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f16, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f16, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f16, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f16, f9, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f7fffff)
li x14, 0x0285a923dab64062 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0x8ac0fc8044281bff # load x3 with value 0x8ac0fc8044281bff
sw x3, 0(x2) # store 0x8ac0fc8044281bff in memory
flw f9, 0(x2) # load 0x8ac0fc8044281bff from memory into f9
fnmsub.s f14, f8, f30, f9, dyn # perform operation
fnmsub.s f14, f8, f30, f9, rdn # perform operation
fnmsub.s f14, f8, f30, f9, rmm # perform operation
fnmsub.s f14, f8, f30, f9, rne # perform operation
fnmsub.s f14, f8, f30, f9, rtz # perform operation
fnmsub.s f14, f8, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f8, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f8, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f8, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f8, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f8, f30, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff7fffff)
li x21, 0xc6c72e76ca18569a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0x8f463d5465b4c1c1 # load x3 with value 0x8f463d5465b4c1c1
sw x3, 0(x2) # store 0x8f463d5465b4c1c1 in memory
flw f18, 0(x2) # load 0x8f463d5465b4c1c1 from memory into f18
fnmsub.s f21, f5, f16, f18, dyn # perform operation
fnmsub.s f21, f5, f16, f18, rdn # perform operation
fnmsub.s f21, f5, f16, f18, rmm # perform operation
fnmsub.s f21, f5, f16, f18, rne # perform operation
fnmsub.s f21, f5, f16, f18, rtz # perform operation
fnmsub.s f21, f5, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f5, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f5, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f5, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f5, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f5, f16, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffff)
li x11, 0xcd7f08d346136fa5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0x7085ae2f72f1b1ac # load x3 with value 0x7085ae2f72f1b1ac
sw x3, 0(x2) # store 0x7085ae2f72f1b1ac in memory
flw f1, 0(x2) # load 0x7085ae2f72f1b1ac from memory into f1
fnmsub.s f11, f22, f15, f1, dyn # perform operation
fnmsub.s f11, f22, f15, f1, rdn # perform operation
fnmsub.s f11, f22, f15, f1, rmm # perform operation
fnmsub.s f11, f22, f15, f1, rne # perform operation
fnmsub.s f11, f22, f15, f1, rtz # perform operation
fnmsub.s f11, f22, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f22, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f22, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f22, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f22, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f22, f15, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x807fffff)
li x17, 0x1f5ff834911bd6ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0xd83d7b6d5f5de7bd # load x3 with value 0xd83d7b6d5f5de7bd
sw x3, 0(x2) # store 0xd83d7b6d5f5de7bd in memory
flw f7, 0(x2) # load 0xd83d7b6d5f5de7bd from memory into f7
fnmsub.s f17, f11, f27, f7, dyn # perform operation
fnmsub.s f17, f11, f27, f7, rdn # perform operation
fnmsub.s f17, f11, f27, f7, rmm # perform operation
fnmsub.s f17, f11, f27, f7, rne # perform operation
fnmsub.s f17, f11, f27, f7, rtz # perform operation
fnmsub.s f17, f11, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f11, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f11, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f11, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f11, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f11, f27, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400000)
li x7, 0xfc58edb4587aa0f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
li x3, 0xde4eee1cc391fb0b # load x3 with value 0xde4eee1cc391fb0b
sw x3, 0(x2) # store 0xde4eee1cc391fb0b in memory
flw f12, 0(x2) # load 0xde4eee1cc391fb0b from memory into f12
fnmsub.s f7, f5, f28, f12, dyn # perform operation
fnmsub.s f7, f5, f28, f12, rdn # perform operation
fnmsub.s f7, f5, f28, f12, rmm # perform operation
fnmsub.s f7, f5, f28, f12, rne # perform operation
fnmsub.s f7, f5, f28, f12, rtz # perform operation
fnmsub.s f7, f5, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f5, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f5, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f5, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f5, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f5, f28, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80400000)
li x4, 0xf810aa70d493843c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
li x3, 0x640f82d1101950dd # load x3 with value 0x640f82d1101950dd
sw x3, 0(x2) # store 0x640f82d1101950dd in memory
flw f7, 0(x2) # load 0x640f82d1101950dd from memory into f7
fnmsub.s f4, f22, f9, f7, dyn # perform operation
fnmsub.s f4, f22, f9, f7, rdn # perform operation
fnmsub.s f4, f22, f9, f7, rmm # perform operation
fnmsub.s f4, f22, f9, f7, rne # perform operation
fnmsub.s f4, f22, f9, f7, rtz # perform operation
fnmsub.s f4, f22, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f22, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f22, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f22, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f22, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f22, f9, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
li x26, 0x9a6fe74f920bc622 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0xf3a9513061ea3575 # load x3 with value 0xf3a9513061ea3575
sw x3, 0(x2) # store 0xf3a9513061ea3575 in memory
flw f23, 0(x2) # load 0xf3a9513061ea3575 from memory into f23
fnmsub.s f26, f27, f13, f23, dyn # perform operation
fnmsub.s f26, f27, f13, f23, rdn # perform operation
fnmsub.s f26, f27, f13, f23, rmm # perform operation
fnmsub.s f26, f27, f13, f23, rne # perform operation
fnmsub.s f26, f27, f13, f23, rtz # perform operation
fnmsub.s f26, f27, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f27, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f27, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f27, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f27, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f27, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000001)
li x29, 0x90ca391beaa53d1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0x8ce789848a4bada7 # load x3 with value 0x8ce789848a4bada7
sw x3, 0(x2) # store 0x8ce789848a4bada7 in memory
flw f28, 0(x2) # load 0x8ce789848a4bada7 from memory into f28
fnmsub.s f29, f10, f26, f28, dyn # perform operation
fnmsub.s f29, f10, f26, f28, rdn # perform operation
fnmsub.s f29, f10, f26, f28, rmm # perform operation
fnmsub.s f29, f10, f26, f28, rne # perform operation
fnmsub.s f29, f10, f26, f28, rtz # perform operation
fnmsub.s f29, f10, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f10, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f10, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f10, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f10, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f10, f26, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800000)
li x18, 0xafe15a1d044c1326 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
li x3, 0xc5340252b64e6cf8 # load x3 with value 0xc5340252b64e6cf8
sw x3, 0(x2) # store 0xc5340252b64e6cf8 in memory
flw f25, 0(x2) # load 0xc5340252b64e6cf8 from memory into f25
fnmsub.s f18, f21, f8, f25, dyn # perform operation
fnmsub.s f18, f21, f8, f25, rdn # perform operation
fnmsub.s f18, f21, f8, f25, rmm # perform operation
fnmsub.s f18, f21, f8, f25, rne # perform operation
fnmsub.s f18, f21, f8, f25, rtz # perform operation
fnmsub.s f18, f21, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f21, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f21, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f21, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f21, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f21, f8, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff800000)
li x18, 0x432c4646f3b9fe6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0x272388d7ba81d7 # load x3 with value 0x272388d7ba81d7
sw x3, 0(x2) # store 0x272388d7ba81d7 in memory
flw f12, 0(x2) # load 0x272388d7ba81d7 from memory into f12
fnmsub.s f18, f7, f30, f12, dyn # perform operation
fnmsub.s f18, f7, f30, f12, rdn # perform operation
fnmsub.s f18, f7, f30, f12, rmm # perform operation
fnmsub.s f18, f7, f30, f12, rne # perform operation
fnmsub.s f18, f7, f30, f12, rtz # perform operation
fnmsub.s f18, f7, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f7, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f7, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f7, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f7, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f7, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fc00000)
li x14, 0xf41556aa8a224c9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x4338283c708e5db9 # load x3 with value 0x4338283c708e5db9
sw x3, 0(x2) # store 0x4338283c708e5db9 in memory
flw f19, 0(x2) # load 0x4338283c708e5db9 from memory into f19
fnmsub.s f14, f3, f30, f19, dyn # perform operation
fnmsub.s f14, f3, f30, f19, rdn # perform operation
fnmsub.s f14, f3, f30, f19, rmm # perform operation
fnmsub.s f14, f3, f30, f19, rne # perform operation
fnmsub.s f14, f3, f30, f19, rtz # perform operation
fnmsub.s f14, f3, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f3, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f3, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f3, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f3, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f3, f30, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffff)
li x11, 0xb9ddf9d5f588d3c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0xc971142a371f6b6c # load x3 with value 0xc971142a371f6b6c
sw x3, 0(x2) # store 0xc971142a371f6b6c in memory
flw f28, 0(x2) # load 0xc971142a371f6b6c from memory into f28
fnmsub.s f11, f1, f23, f28, dyn # perform operation
fnmsub.s f11, f1, f23, f28, rdn # perform operation
fnmsub.s f11, f1, f23, f28, rmm # perform operation
fnmsub.s f11, f1, f23, f28, rne # perform operation
fnmsub.s f11, f1, f23, f28, rtz # perform operation
fnmsub.s f11, f1, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f1, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f1, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f1, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f1, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f1, f23, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800001)
li x13, 0x4f03d7d5c67f0f2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0x5b8a48772d7efc46 # load x3 with value 0x5b8a48772d7efc46
sw x3, 0(x2) # store 0x5b8a48772d7efc46 in memory
flw f10, 0(x2) # load 0x5b8a48772d7efc46 from memory into f10
fnmsub.s f13, f30, f19, f10, dyn # perform operation
fnmsub.s f13, f30, f19, f10, rdn # perform operation
fnmsub.s f13, f30, f19, f10, rmm # perform operation
fnmsub.s f13, f30, f19, f10, rne # perform operation
fnmsub.s f13, f30, f19, f10, rtz # perform operation
fnmsub.s f13, f30, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f30, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f30, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f30, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f30, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f30, f19, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fbfffff)
li x19, 0x22070a0eda4e076e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
li x3, 0xffd632cccdbb1cc9 # load x3 with value 0xffd632cccdbb1cc9
sw x3, 0(x2) # store 0xffd632cccdbb1cc9 in memory
flw f8, 0(x2) # load 0xffd632cccdbb1cc9 from memory into f8
fnmsub.s f19, f16, f24, f8, dyn # perform operation
fnmsub.s f19, f16, f24, f8, rdn # perform operation
fnmsub.s f19, f16, f24, f8, rmm # perform operation
fnmsub.s f19, f16, f24, f8, rne # perform operation
fnmsub.s f19, f16, f24, f8, rtz # perform operation
fnmsub.s f19, f16, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f16, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f16, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f16, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f16, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f16, f24, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ef8654f)
li x22, 0x85590e5684c451ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x76b17fbe2ad79b48 # load x3 with value 0x76b17fbe2ad79b48
sw x3, 0(x2) # store 0x76b17fbe2ad79b48 in memory
flw f23, 0(x2) # load 0x76b17fbe2ad79b48 from memory into f23
fnmsub.s f22, f15, f29, f23, dyn # perform operation
fnmsub.s f22, f15, f29, f23, rdn # perform operation
fnmsub.s f22, f15, f29, f23, rmm # perform operation
fnmsub.s f22, f15, f29, f23, rne # perform operation
fnmsub.s f22, f15, f29, f23, rtz # perform operation
fnmsub.s f22, f15, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f15, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f15, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f15, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f15, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f15, f29, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x813d9ab0)
li x5, 0x0010579432a08eb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0xa619fcf323ae0535 # load x3 with value 0xa619fcf323ae0535
sw x3, 0(x2) # store 0xa619fcf323ae0535 in memory
flw f27, 0(x2) # load 0xa619fcf323ae0535 from memory into f27
fnmsub.s f5, f1, f8, f27, dyn # perform operation
fnmsub.s f5, f1, f8, f27, rdn # perform operation
fnmsub.s f5, f1, f8, f27, rmm # perform operation
fnmsub.s f5, f1, f8, f27, rne # perform operation
fnmsub.s f5, f1, f8, f27, rtz # perform operation
fnmsub.s f5, f1, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f1, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f1, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f1, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f1, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f1, f8, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x0)
li x26, 0x6dc0e77129e9f4f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0xdf9e784fc1ca2ea6 # load x3 with value 0xdf9e784fc1ca2ea6
sw x3, 0(x2) # store 0xdf9e784fc1ca2ea6 in memory
flw f23, 0(x2) # load 0xdf9e784fc1ca2ea6 from memory into f23
fnmsub.s f26, f27, f12, f23, dyn # perform operation
fnmsub.s f26, f27, f12, f23, rdn # perform operation
fnmsub.s f26, f27, f12, f23, rmm # perform operation
fnmsub.s f26, f27, f12, f23, rne # perform operation
fnmsub.s f26, f27, f12, f23, rtz # perform operation
fnmsub.s f26, f27, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f27, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f27, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f27, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f27, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f27, f12, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000000)
li x27, 0xa3daea516e0de2aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
li x3, 0x8f5080c977b605f9 # load x3 with value 0x8f5080c977b605f9
sw x3, 0(x2) # store 0x8f5080c977b605f9 in memory
flw f24, 0(x2) # load 0x8f5080c977b605f9 from memory into f24
fnmsub.s f27, f18, f4, f24, dyn # perform operation
fnmsub.s f27, f18, f4, f24, rdn # perform operation
fnmsub.s f27, f18, f4, f24, rmm # perform operation
fnmsub.s f27, f18, f4, f24, rne # perform operation
fnmsub.s f27, f18, f4, f24, rtz # perform operation
fnmsub.s f27, f18, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f18, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f18, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f18, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f18, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f18, f4, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3f800000)
li x3, 0xfd42133a797f0033 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0x33715294c28d73f6 # load x3 with value 0x33715294c28d73f6
sw x3, 0(x2) # store 0x33715294c28d73f6 in memory
flw f31, 0(x2) # load 0x33715294c28d73f6 from memory into f31
fnmsub.s f3, f17, f15, f31, dyn # perform operation
fnmsub.s f3, f17, f15, f31, rdn # perform operation
fnmsub.s f3, f17, f15, f31, rmm # perform operation
fnmsub.s f3, f17, f15, f31, rne # perform operation
fnmsub.s f3, f17, f15, f31, rtz # perform operation
fnmsub.s f3, f17, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f17, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f17, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f17, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f17, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f17, f15, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbf800000)
li x2, 0xf1c9ac849007a76f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0xf4f8d23b1fbc2e4 # load x3 with value 0xf4f8d23b1fbc2e4
sw x3, 0(x2) # store 0xf4f8d23b1fbc2e4 in memory
flw f13, 0(x2) # load 0xf4f8d23b1fbc2e4 from memory into f13
fnmsub.s f2, f5, f12, f13, dyn # perform operation
fnmsub.s f2, f5, f12, f13, rdn # perform operation
fnmsub.s f2, f5, f12, f13, rmm # perform operation
fnmsub.s f2, f5, f12, f13, rne # perform operation
fnmsub.s f2, f5, f12, f13, rtz # perform operation
fnmsub.s f2, f5, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f5, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f5, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f5, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f5, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f5, f12, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3fc00000)
li x30, 0x75aa56eaafa8b1a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
li x3, 0x455dcf26a01636ce # load x3 with value 0x455dcf26a01636ce
sw x3, 0(x2) # store 0x455dcf26a01636ce in memory
flw f13, 0(x2) # load 0x455dcf26a01636ce from memory into f13
fnmsub.s f30, f17, f2, f13, dyn # perform operation
fnmsub.s f30, f17, f2, f13, rdn # perform operation
fnmsub.s f30, f17, f2, f13, rmm # perform operation
fnmsub.s f30, f17, f2, f13, rne # perform operation
fnmsub.s f30, f17, f2, f13, rtz # perform operation
fnmsub.s f30, f17, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f17, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f17, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f17, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f17, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f17, f2, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbfc00000)
li x16, 0x2277e2ba0c5df1b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x8441b43e31c24efe # load x3 with value 0x8441b43e31c24efe
sw x3, 0(x2) # store 0x8441b43e31c24efe in memory
flw f10, 0(x2) # load 0x8441b43e31c24efe from memory into f10
fnmsub.s f16, f12, f4, f10, dyn # perform operation
fnmsub.s f16, f12, f4, f10, rdn # perform operation
fnmsub.s f16, f12, f4, f10, rmm # perform operation
fnmsub.s f16, f12, f4, f10, rne # perform operation
fnmsub.s f16, f12, f4, f10, rtz # perform operation
fnmsub.s f16, f12, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f12, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f12, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f12, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f12, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f12, f4, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x40000000)
li x10, 0x592092c5ef6bd5a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0xd3147d2f5b22e5cd # load x3 with value 0xd3147d2f5b22e5cd
sw x3, 0(x2) # store 0xd3147d2f5b22e5cd in memory
flw f22, 0(x2) # load 0xd3147d2f5b22e5cd from memory into f22
fnmsub.s f10, f23, f27, f22, dyn # perform operation
fnmsub.s f10, f23, f27, f22, rdn # perform operation
fnmsub.s f10, f23, f27, f22, rmm # perform operation
fnmsub.s f10, f23, f27, f22, rne # perform operation
fnmsub.s f10, f23, f27, f22, rtz # perform operation
fnmsub.s f10, f23, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f23, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f23, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f23, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f23, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f23, f27, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xc0000000)
li x4, 0x93c88aae2522623b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
li x3, 0xe437409b8e3209ee # load x3 with value 0xe437409b8e3209ee
sw x3, 0(x2) # store 0xe437409b8e3209ee in memory
flw f26, 0(x2) # load 0xe437409b8e3209ee from memory into f26
fnmsub.s f4, f30, f21, f26, dyn # perform operation
fnmsub.s f4, f30, f21, f26, rdn # perform operation
fnmsub.s f4, f30, f21, f26, rmm # perform operation
fnmsub.s f4, f30, f21, f26, rne # perform operation
fnmsub.s f4, f30, f21, f26, rtz # perform operation
fnmsub.s f4, f30, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f30, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f30, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f30, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f30, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f30, f21, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x800000)
li x14, 0x702c3df2d0cb268d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0xf753ef0f9a0748cd # load x3 with value 0xf753ef0f9a0748cd
sw x3, 0(x2) # store 0xf753ef0f9a0748cd in memory
flw f3, 0(x2) # load 0xf753ef0f9a0748cd from memory into f3
fnmsub.s f14, f25, f18, f3, dyn # perform operation
fnmsub.s f14, f25, f18, f3, rdn # perform operation
fnmsub.s f14, f25, f18, f3, rmm # perform operation
fnmsub.s f14, f25, f18, f3, rne # perform operation
fnmsub.s f14, f25, f18, f3, rtz # perform operation
fnmsub.s f14, f25, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f25, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f25, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f25, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f25, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f25, f18, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80800000)
li x16, 0xfa7ee0a18c06cd85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
li x3, 0x400dc196c7953671 # load x3 with value 0x400dc196c7953671
sw x3, 0(x2) # store 0x400dc196c7953671 in memory
flw f8, 0(x2) # load 0x400dc196c7953671 from memory into f8
fnmsub.s f16, f7, f30, f8, dyn # perform operation
fnmsub.s f16, f7, f30, f8, rdn # perform operation
fnmsub.s f16, f7, f30, f8, rmm # perform operation
fnmsub.s f16, f7, f30, f8, rne # perform operation
fnmsub.s f16, f7, f30, f8, rtz # perform operation
fnmsub.s f16, f7, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f7, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f7, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f7, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f7, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f7, f30, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f7fffff)
li x26, 0x9e022856e0d2c694 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0xce4ee7d9c705ceaf # load x3 with value 0xce4ee7d9c705ceaf
sw x3, 0(x2) # store 0xce4ee7d9c705ceaf in memory
flw f3, 0(x2) # load 0xce4ee7d9c705ceaf from memory into f3
fnmsub.s f26, f24, f20, f3, dyn # perform operation
fnmsub.s f26, f24, f20, f3, rdn # perform operation
fnmsub.s f26, f24, f20, f3, rmm # perform operation
fnmsub.s f26, f24, f20, f3, rne # perform operation
fnmsub.s f26, f24, f20, f3, rtz # perform operation
fnmsub.s f26, f24, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f24, f20, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff7fffff)
li x14, 0xc6e6f72a1cc48aca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0x8d7d8eaff831a8b1 # load x3 with value 0x8d7d8eaff831a8b1
sw x3, 0(x2) # store 0x8d7d8eaff831a8b1 in memory
flw f30, 0(x2) # load 0x8d7d8eaff831a8b1 from memory into f30
fnmsub.s f14, f29, f8, f30, dyn # perform operation
fnmsub.s f14, f29, f8, f30, rdn # perform operation
fnmsub.s f14, f29, f8, f30, rmm # perform operation
fnmsub.s f14, f29, f8, f30, rne # perform operation
fnmsub.s f14, f29, f8, f30, rtz # perform operation
fnmsub.s f14, f29, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f29, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f29, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f29, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f29, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f29, f8, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffff)
li x29, 0x724fc86f4ae1bcfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
li x3, 0xc49bb67dc6b95236 # load x3 with value 0xc49bb67dc6b95236
sw x3, 0(x2) # store 0xc49bb67dc6b95236 in memory
flw f1, 0(x2) # load 0xc49bb67dc6b95236 from memory into f1
fnmsub.s f29, f14, f7, f1, dyn # perform operation
fnmsub.s f29, f14, f7, f1, rdn # perform operation
fnmsub.s f29, f14, f7, f1, rmm # perform operation
fnmsub.s f29, f14, f7, f1, rne # perform operation
fnmsub.s f29, f14, f7, f1, rtz # perform operation
fnmsub.s f29, f14, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f14, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f14, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f14, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f14, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f14, f7, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x807fffff)
li x22, 0x7da33bcfbd82b337 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
li x3, 0x46b2cccee1877e09 # load x3 with value 0x46b2cccee1877e09
sw x3, 0(x2) # store 0x46b2cccee1877e09 in memory
flw f26, 0(x2) # load 0x46b2cccee1877e09 from memory into f26
fnmsub.s f22, f1, f29, f26, dyn # perform operation
fnmsub.s f22, f1, f29, f26, rdn # perform operation
fnmsub.s f22, f1, f29, f26, rmm # perform operation
fnmsub.s f22, f1, f29, f26, rne # perform operation
fnmsub.s f22, f1, f29, f26, rtz # perform operation
fnmsub.s f22, f1, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f1, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f1, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f1, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f1, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f1, f29, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x400000)
li x26, 0x0db5d2fe7f9cfda0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0xa95c9812ba988ac8 # load x3 with value 0xa95c9812ba988ac8
sw x3, 0(x2) # store 0xa95c9812ba988ac8 in memory
flw f29, 0(x2) # load 0xa95c9812ba988ac8 from memory into f29
fnmsub.s f26, f11, f18, f29, dyn # perform operation
fnmsub.s f26, f11, f18, f29, rdn # perform operation
fnmsub.s f26, f11, f18, f29, rmm # perform operation
fnmsub.s f26, f11, f18, f29, rne # perform operation
fnmsub.s f26, f11, f18, f29, rtz # perform operation
fnmsub.s f26, f11, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f11, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f11, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f11, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f11, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f11, f18, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80400000)
li x6, 0x9c930740cf4ee047 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0x3ccf5ba4c7479407 # load x3 with value 0x3ccf5ba4c7479407
sw x3, 0(x2) # store 0x3ccf5ba4c7479407 in memory
flw f22, 0(x2) # load 0x3ccf5ba4c7479407 from memory into f22
fnmsub.s f6, f19, f10, f22, dyn # perform operation
fnmsub.s f6, f19, f10, f22, rdn # perform operation
fnmsub.s f6, f19, f10, f22, rmm # perform operation
fnmsub.s f6, f19, f10, f22, rne # perform operation
fnmsub.s f6, f19, f10, f22, rtz # perform operation
fnmsub.s f6, f19, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f19, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f19, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f19, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f19, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f19, f10, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x1)
li x20, 0xb60a4afb7baefe9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x8c7c505f5876e512 # load x3 with value 0x8c7c505f5876e512
sw x3, 0(x2) # store 0x8c7c505f5876e512 in memory
flw f29, 0(x2) # load 0x8c7c505f5876e512 from memory into f29
fnmsub.s f20, f5, f15, f29, dyn # perform operation
fnmsub.s f20, f5, f15, f29, rdn # perform operation
fnmsub.s f20, f5, f15, f29, rmm # perform operation
fnmsub.s f20, f5, f15, f29, rne # perform operation
fnmsub.s f20, f5, f15, f29, rtz # perform operation
fnmsub.s f20, f5, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f5, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f5, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f5, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f5, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f5, f15, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000001)
li x30, 0x9c8dfd8c4d0b08c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0x57b3a66f90d4807 # load x3 with value 0x57b3a66f90d4807
sw x3, 0(x2) # store 0x57b3a66f90d4807 in memory
flw f7, 0(x2) # load 0x57b3a66f90d4807 from memory into f7
fnmsub.s f30, f31, f3, f7, dyn # perform operation
fnmsub.s f30, f31, f3, f7, rdn # perform operation
fnmsub.s f30, f31, f3, f7, rmm # perform operation
fnmsub.s f30, f31, f3, f7, rne # perform operation
fnmsub.s f30, f31, f3, f7, rtz # perform operation
fnmsub.s f30, f31, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f31, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f31, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f31, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f31, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f31, f3, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800000)
li x20, 0xd69074b40b5afea1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
li x3, 0xba8d885ee46e397c # load x3 with value 0xba8d885ee46e397c
sw x3, 0(x2) # store 0xba8d885ee46e397c in memory
flw f10, 0(x2) # load 0xba8d885ee46e397c from memory into f10
fnmsub.s f20, f25, f24, f10, dyn # perform operation
fnmsub.s f20, f25, f24, f10, rdn # perform operation
fnmsub.s f20, f25, f24, f10, rmm # perform operation
fnmsub.s f20, f25, f24, f10, rne # perform operation
fnmsub.s f20, f25, f24, f10, rtz # perform operation
fnmsub.s f20, f25, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f25, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f25, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f25, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f25, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f25, f24, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff800000)
li x31, 0x05c343b25764d958 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0x20f5c1ac7afd0ea # load x3 with value 0x20f5c1ac7afd0ea
sw x3, 0(x2) # store 0x20f5c1ac7afd0ea in memory
flw f26, 0(x2) # load 0x20f5c1ac7afd0ea from memory into f26
fnmsub.s f31, f10, f23, f26, dyn # perform operation
fnmsub.s f31, f10, f23, f26, rdn # perform operation
fnmsub.s f31, f10, f23, f26, rmm # perform operation
fnmsub.s f31, f10, f23, f26, rne # perform operation
fnmsub.s f31, f10, f23, f26, rtz # perform operation
fnmsub.s f31, f10, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f10, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f10, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f10, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f10, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f10, f23, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fc00000)
li x30, 0xfdc78e932896f3f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0xbd25bad950fd9417 # load x3 with value 0xbd25bad950fd9417
sw x3, 0(x2) # store 0xbd25bad950fd9417 in memory
flw f23, 0(x2) # load 0xbd25bad950fd9417 from memory into f23
fnmsub.s f30, f14, f31, f23, dyn # perform operation
fnmsub.s f30, f14, f31, f23, rdn # perform operation
fnmsub.s f30, f14, f31, f23, rmm # perform operation
fnmsub.s f30, f14, f31, f23, rne # perform operation
fnmsub.s f30, f14, f31, f23, rtz # perform operation
fnmsub.s f30, f14, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f14, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f14, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f14, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f14, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f14, f31, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffffff)
li x18, 0xd5f382c899e8adac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0x5ab7c7c394b4abcf # load x3 with value 0x5ab7c7c394b4abcf
sw x3, 0(x2) # store 0x5ab7c7c394b4abcf in memory
flw f21, 0(x2) # load 0x5ab7c7c394b4abcf from memory into f21
fnmsub.s f18, f16, f12, f21, dyn # perform operation
fnmsub.s f18, f16, f12, f21, rdn # perform operation
fnmsub.s f18, f16, f12, f21, rmm # perform operation
fnmsub.s f18, f16, f12, f21, rne # perform operation
fnmsub.s f18, f16, f12, f21, rtz # perform operation
fnmsub.s f18, f16, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f16, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f16, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f16, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f16, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f16, f12, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800001)
li x22, 0x9008e114ce43cfc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x7bc21292daec1383 # load x3 with value 0x7bc21292daec1383
sw x3, 0(x2) # store 0x7bc21292daec1383 in memory
flw f30, 0(x2) # load 0x7bc21292daec1383 from memory into f30
fnmsub.s f22, f25, f1, f30, dyn # perform operation
fnmsub.s f22, f25, f1, f30, rdn # perform operation
fnmsub.s f22, f25, f1, f30, rmm # perform operation
fnmsub.s f22, f25, f1, f30, rne # perform operation
fnmsub.s f22, f25, f1, f30, rtz # perform operation
fnmsub.s f22, f25, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f25, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f25, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f25, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f25, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f25, f1, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fbfffff)
li x12, 0x2e987576a6090773 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
li x3, 0x510ea1e6612db435 # load x3 with value 0x510ea1e6612db435
sw x3, 0(x2) # store 0x510ea1e6612db435 in memory
flw f27, 0(x2) # load 0x510ea1e6612db435 from memory into f27
fnmsub.s f12, f8, f14, f27, dyn # perform operation
fnmsub.s f12, f8, f14, f27, rdn # perform operation
fnmsub.s f12, f8, f14, f27, rmm # perform operation
fnmsub.s f12, f8, f14, f27, rne # perform operation
fnmsub.s f12, f8, f14, f27, rtz # perform operation
fnmsub.s f12, f8, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f8, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f8, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f8, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f8, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f8, f14, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7ef8654f)
li x11, 0xd41d7752aaa885cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
li x3, 0x99b1f84bba052b1a # load x3 with value 0x99b1f84bba052b1a
sw x3, 0(x2) # store 0x99b1f84bba052b1a in memory
flw f26, 0(x2) # load 0x99b1f84bba052b1a from memory into f26
fnmsub.s f11, f5, f12, f26, dyn # perform operation
fnmsub.s f11, f5, f12, f26, rdn # perform operation
fnmsub.s f11, f5, f12, f26, rmm # perform operation
fnmsub.s f11, f5, f12, f26, rne # perform operation
fnmsub.s f11, f5, f12, f26, rtz # perform operation
fnmsub.s f11, f5, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f5, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f5, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f5, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f5, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f5, f12, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x813d9ab0)
li x15, 0xde48f23a8600262b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0xdb5174f6b8893f70 # load x3 with value 0xdb5174f6b8893f70
sw x3, 0(x2) # store 0xdb5174f6b8893f70 in memory
flw f21, 0(x2) # load 0xdb5174f6b8893f70 from memory into f21
fnmsub.s f15, f20, f24, f21, dyn # perform operation
fnmsub.s f15, f20, f24, f21, rdn # perform operation
fnmsub.s f15, f20, f24, f21, rmm # perform operation
fnmsub.s f15, f20, f24, f21, rne # perform operation
fnmsub.s f15, f20, f24, f21, rtz # perform operation
fnmsub.s f15, f20, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f20, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f20, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f20, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f20, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f20, f24, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x0)
li x9, 0x0997ee755fdd243f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x911e2c4408f763eb # load x3 with value 0x911e2c4408f763eb
sw x3, 0(x2) # store 0x911e2c4408f763eb in memory
flw f21, 0(x2) # load 0x911e2c4408f763eb from memory into f21
fnmsub.s f9, f4, f6, f21, dyn # perform operation
fnmsub.s f9, f4, f6, f21, rdn # perform operation
fnmsub.s f9, f4, f6, f21, rmm # perform operation
fnmsub.s f9, f4, f6, f21, rne # perform operation
fnmsub.s f9, f4, f6, f21, rtz # perform operation
fnmsub.s f9, f4, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f4, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f4, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f4, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f4, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f4, f6, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000000)
li x7, 0x99fcd55afb72e6db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0xb6cb8b7a3b049a1e # load x3 with value 0xb6cb8b7a3b049a1e
sw x3, 0(x2) # store 0xb6cb8b7a3b049a1e in memory
flw f29, 0(x2) # load 0xb6cb8b7a3b049a1e from memory into f29
fnmsub.s f7, f16, f11, f29, dyn # perform operation
fnmsub.s f7, f16, f11, f29, rdn # perform operation
fnmsub.s f7, f16, f11, f29, rmm # perform operation
fnmsub.s f7, f16, f11, f29, rne # perform operation
fnmsub.s f7, f16, f11, f29, rtz # perform operation
fnmsub.s f7, f16, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f16, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f16, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f16, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f16, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f16, f11, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3f800000)
li x14, 0xda26b2487ad503d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
li x3, 0xaff92a6803943807 # load x3 with value 0xaff92a6803943807
sw x3, 0(x2) # store 0xaff92a6803943807 in memory
flw f1, 0(x2) # load 0xaff92a6803943807 from memory into f1
fnmsub.s f14, f9, f3, f1, dyn # perform operation
fnmsub.s f14, f9, f3, f1, rdn # perform operation
fnmsub.s f14, f9, f3, f1, rmm # perform operation
fnmsub.s f14, f9, f3, f1, rne # perform operation
fnmsub.s f14, f9, f3, f1, rtz # perform operation
fnmsub.s f14, f9, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f9, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f9, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f9, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f9, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f9, f3, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbf800000)
li x12, 0x8a7473f88f352377 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
li x3, 0x88dee41b69402d49 # load x3 with value 0x88dee41b69402d49
sw x3, 0(x2) # store 0x88dee41b69402d49 in memory
flw f6, 0(x2) # load 0x88dee41b69402d49 from memory into f6
fnmsub.s f12, f29, f25, f6, dyn # perform operation
fnmsub.s f12, f29, f25, f6, rdn # perform operation
fnmsub.s f12, f29, f25, f6, rmm # perform operation
fnmsub.s f12, f29, f25, f6, rne # perform operation
fnmsub.s f12, f29, f25, f6, rtz # perform operation
fnmsub.s f12, f29, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f29, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f29, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f29, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f29, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f29, f25, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3fc00000)
li x18, 0x14b8668b709092b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
li x3, 0x57fb4445ebdab33e # load x3 with value 0x57fb4445ebdab33e
sw x3, 0(x2) # store 0x57fb4445ebdab33e in memory
flw f1, 0(x2) # load 0x57fb4445ebdab33e from memory into f1
fnmsub.s f18, f22, f19, f1, dyn # perform operation
fnmsub.s f18, f22, f19, f1, rdn # perform operation
fnmsub.s f18, f22, f19, f1, rmm # perform operation
fnmsub.s f18, f22, f19, f1, rne # perform operation
fnmsub.s f18, f22, f19, f1, rtz # perform operation
fnmsub.s f18, f22, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f22, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f22, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f22, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f22, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f22, f19, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbfc00000)
li x25, 0x1f572ab8f19b9459 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0xa90c89d7d156997f # load x3 with value 0xa90c89d7d156997f
sw x3, 0(x2) # store 0xa90c89d7d156997f in memory
flw f22, 0(x2) # load 0xa90c89d7d156997f from memory into f22
fnmsub.s f25, f23, f3, f22, dyn # perform operation
fnmsub.s f25, f23, f3, f22, rdn # perform operation
fnmsub.s f25, f23, f3, f22, rmm # perform operation
fnmsub.s f25, f23, f3, f22, rne # perform operation
fnmsub.s f25, f23, f3, f22, rtz # perform operation
fnmsub.s f25, f23, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f23, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f23, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f23, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f23, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f23, f3, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x40000000)
li x6, 0x3f9b0012fb5579b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0x8d602aec7b6b2a10 # load x3 with value 0x8d602aec7b6b2a10
sw x3, 0(x2) # store 0x8d602aec7b6b2a10 in memory
flw f29, 0(x2) # load 0x8d602aec7b6b2a10 from memory into f29
fnmsub.s f6, f2, f1, f29, dyn # perform operation
fnmsub.s f6, f2, f1, f29, rdn # perform operation
fnmsub.s f6, f2, f1, f29, rmm # perform operation
fnmsub.s f6, f2, f1, f29, rne # perform operation
fnmsub.s f6, f2, f1, f29, rtz # perform operation
fnmsub.s f6, f2, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f2, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f2, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f2, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f2, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f2, f1, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xc0000000)
li x1, 0x6a2bcf91d8588b00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0x73179b4c8158eb9 # load x3 with value 0x73179b4c8158eb9
sw x3, 0(x2) # store 0x73179b4c8158eb9 in memory
flw f3, 0(x2) # load 0x73179b4c8158eb9 from memory into f3
fnmsub.s f1, f11, f17, f3, dyn # perform operation
fnmsub.s f1, f11, f17, f3, rdn # perform operation
fnmsub.s f1, f11, f17, f3, rmm # perform operation
fnmsub.s f1, f11, f17, f3, rne # perform operation
fnmsub.s f1, f11, f17, f3, rtz # perform operation
fnmsub.s f1, f11, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f11, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f11, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f11, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f11, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f11, f17, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x800000)
li x30, 0x5668a916f9bb3a40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0xb8556d7e226aeada # load x3 with value 0xb8556d7e226aeada
sw x3, 0(x2) # store 0xb8556d7e226aeada in memory
flw f31, 0(x2) # load 0xb8556d7e226aeada from memory into f31
fnmsub.s f30, f4, f26, f31, dyn # perform operation
fnmsub.s f30, f4, f26, f31, rdn # perform operation
fnmsub.s f30, f4, f26, f31, rmm # perform operation
fnmsub.s f30, f4, f26, f31, rne # perform operation
fnmsub.s f30, f4, f26, f31, rtz # perform operation
fnmsub.s f30, f4, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f4, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f4, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f4, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f4, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f4, f26, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80800000)
li x3, 0x92ee4b1aed9bfa66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0x4013c59468fe58a3 # load x3 with value 0x4013c59468fe58a3
sw x3, 0(x2) # store 0x4013c59468fe58a3 in memory
flw f22, 0(x2) # load 0x4013c59468fe58a3 from memory into f22
fnmsub.s f3, f17, f21, f22, dyn # perform operation
fnmsub.s f3, f17, f21, f22, rdn # perform operation
fnmsub.s f3, f17, f21, f22, rmm # perform operation
fnmsub.s f3, f17, f21, f22, rne # perform operation
fnmsub.s f3, f17, f21, f22, rtz # perform operation
fnmsub.s f3, f17, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f17, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f17, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f17, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f17, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f17, f21, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f7fffff)
li x20, 0xd43103ae7b9b5ac6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
li x3, 0x42e6acd0f97fc415 # load x3 with value 0x42e6acd0f97fc415
sw x3, 0(x2) # store 0x42e6acd0f97fc415 in memory
flw f8, 0(x2) # load 0x42e6acd0f97fc415 from memory into f8
fnmsub.s f20, f23, f2, f8, dyn # perform operation
fnmsub.s f20, f23, f2, f8, rdn # perform operation
fnmsub.s f20, f23, f2, f8, rmm # perform operation
fnmsub.s f20, f23, f2, f8, rne # perform operation
fnmsub.s f20, f23, f2, f8, rtz # perform operation
fnmsub.s f20, f23, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f23, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f23, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f23, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f23, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f23, f2, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff7fffff)
li x24, 0xea0b2d129302aa41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
li x3, 0x8d154886b4a42d85 # load x3 with value 0x8d154886b4a42d85
sw x3, 0(x2) # store 0x8d154886b4a42d85 in memory
flw f4, 0(x2) # load 0x8d154886b4a42d85 from memory into f4
fnmsub.s f24, f28, f25, f4, dyn # perform operation
fnmsub.s f24, f28, f25, f4, rdn # perform operation
fnmsub.s f24, f28, f25, f4, rmm # perform operation
fnmsub.s f24, f28, f25, f4, rne # perform operation
fnmsub.s f24, f28, f25, f4, rtz # perform operation
fnmsub.s f24, f28, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f28, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f28, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f28, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f28, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f28, f25, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffff)
li x5, 0xc8660d6fb8215197 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0xfc78433380b318f0 # load x3 with value 0xfc78433380b318f0
sw x3, 0(x2) # store 0xfc78433380b318f0 in memory
flw f27, 0(x2) # load 0xfc78433380b318f0 from memory into f27
fnmsub.s f5, f21, f13, f27, dyn # perform operation
fnmsub.s f5, f21, f13, f27, rdn # perform operation
fnmsub.s f5, f21, f13, f27, rmm # perform operation
fnmsub.s f5, f21, f13, f27, rne # perform operation
fnmsub.s f5, f21, f13, f27, rtz # perform operation
fnmsub.s f5, f21, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f21, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f21, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f21, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f21, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f21, f13, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x807fffff)
li x23, 0xa65d4eadef88c5c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
li x3, 0xd9cfba3d0d46b994 # load x3 with value 0xd9cfba3d0d46b994
sw x3, 0(x2) # store 0xd9cfba3d0d46b994 in memory
flw f16, 0(x2) # load 0xd9cfba3d0d46b994 from memory into f16
fnmsub.s f23, f12, f1, f16, dyn # perform operation
fnmsub.s f23, f12, f1, f16, rdn # perform operation
fnmsub.s f23, f12, f1, f16, rmm # perform operation
fnmsub.s f23, f12, f1, f16, rne # perform operation
fnmsub.s f23, f12, f1, f16, rtz # perform operation
fnmsub.s f23, f12, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f12, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f12, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f12, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f12, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f12, f1, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x400000)
li x21, 0xf3f8ba319ef7c05f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0x26109c0b5f4b0939 # load x3 with value 0x26109c0b5f4b0939
sw x3, 0(x2) # store 0x26109c0b5f4b0939 in memory
flw f12, 0(x2) # load 0x26109c0b5f4b0939 from memory into f12
fnmsub.s f21, f29, f2, f12, dyn # perform operation
fnmsub.s f21, f29, f2, f12, rdn # perform operation
fnmsub.s f21, f29, f2, f12, rmm # perform operation
fnmsub.s f21, f29, f2, f12, rne # perform operation
fnmsub.s f21, f29, f2, f12, rtz # perform operation
fnmsub.s f21, f29, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f29, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f29, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f29, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f29, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f29, f2, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80400000)
li x2, 0xf88f7786bf69800d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
li x3, 0xc0525b131a3dc36d # load x3 with value 0xc0525b131a3dc36d
sw x3, 0(x2) # store 0xc0525b131a3dc36d in memory
flw f22, 0(x2) # load 0xc0525b131a3dc36d from memory into f22
fnmsub.s f2, f24, f9, f22, dyn # perform operation
fnmsub.s f2, f24, f9, f22, rdn # perform operation
fnmsub.s f2, f24, f9, f22, rmm # perform operation
fnmsub.s f2, f24, f9, f22, rne # perform operation
fnmsub.s f2, f24, f9, f22, rtz # perform operation
fnmsub.s f2, f24, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f24, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f24, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f24, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f24, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f24, f9, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x1)
li x25, 0x26a37b0c0495a202 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0x4050127609b4c32b # load x3 with value 0x4050127609b4c32b
sw x3, 0(x2) # store 0x4050127609b4c32b in memory
flw f21, 0(x2) # load 0x4050127609b4c32b from memory into f21
fnmsub.s f25, f7, f11, f21, dyn # perform operation
fnmsub.s f25, f7, f11, f21, rdn # perform operation
fnmsub.s f25, f7, f11, f21, rmm # perform operation
fnmsub.s f25, f7, f11, f21, rne # perform operation
fnmsub.s f25, f7, f11, f21, rtz # perform operation
fnmsub.s f25, f7, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f7, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f7, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f7, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f7, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f7, f11, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000001)
li x18, 0xdd4cd3fd8e7e92fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
li x3, 0xa8a68a87df767b93 # load x3 with value 0xa8a68a87df767b93
sw x3, 0(x2) # store 0xa8a68a87df767b93 in memory
flw f20, 0(x2) # load 0xa8a68a87df767b93 from memory into f20
fnmsub.s f18, f29, f28, f20, dyn # perform operation
fnmsub.s f18, f29, f28, f20, rdn # perform operation
fnmsub.s f18, f29, f28, f20, rmm # perform operation
fnmsub.s f18, f29, f28, f20, rne # perform operation
fnmsub.s f18, f29, f28, f20, rtz # perform operation
fnmsub.s f18, f29, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f29, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f29, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f29, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f29, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f29, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800000)
li x3, 0x41c23f5bfbb7d1eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0x6721dc7da20ff9e2 # load x3 with value 0x6721dc7da20ff9e2
sw x3, 0(x2) # store 0x6721dc7da20ff9e2 in memory
flw f8, 0(x2) # load 0x6721dc7da20ff9e2 from memory into f8
fnmsub.s f3, f26, f22, f8, dyn # perform operation
fnmsub.s f3, f26, f22, f8, rdn # perform operation
fnmsub.s f3, f26, f22, f8, rmm # perform operation
fnmsub.s f3, f26, f22, f8, rne # perform operation
fnmsub.s f3, f26, f22, f8, rtz # perform operation
fnmsub.s f3, f26, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f26, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f26, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f26, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f26, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f26, f22, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff800000)
li x19, 0xb7708da7cc048cb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
li x3, 0xccf9de81dabe2972 # load x3 with value 0xccf9de81dabe2972
sw x3, 0(x2) # store 0xccf9de81dabe2972 in memory
flw f3, 0(x2) # load 0xccf9de81dabe2972 from memory into f3
fnmsub.s f19, f23, f24, f3, dyn # perform operation
fnmsub.s f19, f23, f24, f3, rdn # perform operation
fnmsub.s f19, f23, f24, f3, rmm # perform operation
fnmsub.s f19, f23, f24, f3, rne # perform operation
fnmsub.s f19, f23, f24, f3, rtz # perform operation
fnmsub.s f19, f23, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f23, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f23, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f23, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f23, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f23, f24, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fc00000)
li x2, 0x82eb60283f327ea2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0xc059c39684e8075a # load x3 with value 0xc059c39684e8075a
sw x3, 0(x2) # store 0xc059c39684e8075a in memory
flw f26, 0(x2) # load 0xc059c39684e8075a from memory into f26
fnmsub.s f2, f15, f7, f26, dyn # perform operation
fnmsub.s f2, f15, f7, f26, rdn # perform operation
fnmsub.s f2, f15, f7, f26, rmm # perform operation
fnmsub.s f2, f15, f7, f26, rne # perform operation
fnmsub.s f2, f15, f7, f26, rtz # perform operation
fnmsub.s f2, f15, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f15, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f15, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f15, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f15, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f15, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffffff)
li x30, 0xc6ba1bed07e530ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
li x3, 0x57a2521330a84552 # load x3 with value 0x57a2521330a84552
sw x3, 0(x2) # store 0x57a2521330a84552 in memory
flw f3, 0(x2) # load 0x57a2521330a84552 from memory into f3
fnmsub.s f30, f14, f18, f3, dyn # perform operation
fnmsub.s f30, f14, f18, f3, rdn # perform operation
fnmsub.s f30, f14, f18, f3, rmm # perform operation
fnmsub.s f30, f14, f18, f3, rne # perform operation
fnmsub.s f30, f14, f18, f3, rtz # perform operation
fnmsub.s f30, f14, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f14, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f14, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f14, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f14, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f14, f18, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800001)
li x11, 0x76cdfcd35d41a493 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
li x3, 0x9e44c4058887cc57 # load x3 with value 0x9e44c4058887cc57
sw x3, 0(x2) # store 0x9e44c4058887cc57 in memory
flw f19, 0(x2) # load 0x9e44c4058887cc57 from memory into f19
fnmsub.s f11, f30, f23, f19, dyn # perform operation
fnmsub.s f11, f30, f23, f19, rdn # perform operation
fnmsub.s f11, f30, f23, f19, rmm # perform operation
fnmsub.s f11, f30, f23, f19, rne # perform operation
fnmsub.s f11, f30, f23, f19, rtz # perform operation
fnmsub.s f11, f30, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f30, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f30, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f30, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f30, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f30, f23, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fbfffff)
li x20, 0xbcbd9586a159178e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
li x3, 0x9e22b6e173c078bd # load x3 with value 0x9e22b6e173c078bd
sw x3, 0(x2) # store 0x9e22b6e173c078bd in memory
flw f3, 0(x2) # load 0x9e22b6e173c078bd from memory into f3
fnmsub.s f20, f11, f10, f3, dyn # perform operation
fnmsub.s f20, f11, f10, f3, rdn # perform operation
fnmsub.s f20, f11, f10, f3, rmm # perform operation
fnmsub.s f20, f11, f10, f3, rne # perform operation
fnmsub.s f20, f11, f10, f3, rtz # perform operation
fnmsub.s f20, f11, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f11, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f11, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f11, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f11, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f11, f10, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7ef8654f)
li x28, 0x487a0339a538122f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0xe033d3d2ca4837bf # load x3 with value 0xe033d3d2ca4837bf
sw x3, 0(x2) # store 0xe033d3d2ca4837bf in memory
flw f20, 0(x2) # load 0xe033d3d2ca4837bf from memory into f20
fnmsub.s f28, f21, f5, f20, dyn # perform operation
fnmsub.s f28, f21, f5, f20, rdn # perform operation
fnmsub.s f28, f21, f5, f20, rmm # perform operation
fnmsub.s f28, f21, f5, f20, rne # perform operation
fnmsub.s f28, f21, f5, f20, rtz # perform operation
fnmsub.s f28, f21, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f21, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f21, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f21, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f21, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f21, f5, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x813d9ab0)
li x29, 0xec832c654915d76e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0xaffda0941c73ec0c # load x3 with value 0xaffda0941c73ec0c
sw x3, 0(x2) # store 0xaffda0941c73ec0c in memory
flw f16, 0(x2) # load 0xaffda0941c73ec0c from memory into f16
fnmsub.s f29, f22, f13, f16, dyn # perform operation
fnmsub.s f29, f22, f13, f16, rdn # perform operation
fnmsub.s f29, f22, f13, f16, rmm # perform operation
fnmsub.s f29, f22, f13, f16, rne # perform operation
fnmsub.s f29, f22, f13, f16, rtz # perform operation
fnmsub.s f29, f22, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f22, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f22, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f22, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f22, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f22, f13, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x0)
li x15, 0x42827885995dd903 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0xabd83df9403bd636 # load x3 with value 0xabd83df9403bd636
sw x3, 0(x2) # store 0xabd83df9403bd636 in memory
flw f8, 0(x2) # load 0xabd83df9403bd636 from memory into f8
fnmsub.s f15, f31, f20, f8, dyn # perform operation
fnmsub.s f15, f31, f20, f8, rdn # perform operation
fnmsub.s f15, f31, f20, f8, rmm # perform operation
fnmsub.s f15, f31, f20, f8, rne # perform operation
fnmsub.s f15, f31, f20, f8, rtz # perform operation
fnmsub.s f15, f31, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f31, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f31, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f31, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f31, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f31, f20, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000000)
li x3, 0x7bbc6adfc9ab8474 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0xc2e45f29f5ea1fc1 # load x3 with value 0xc2e45f29f5ea1fc1
sw x3, 0(x2) # store 0xc2e45f29f5ea1fc1 in memory
flw f25, 0(x2) # load 0xc2e45f29f5ea1fc1 from memory into f25
fnmsub.s f3, f13, f15, f25, dyn # perform operation
fnmsub.s f3, f13, f15, f25, rdn # perform operation
fnmsub.s f3, f13, f15, f25, rmm # perform operation
fnmsub.s f3, f13, f15, f25, rne # perform operation
fnmsub.s f3, f13, f15, f25, rtz # perform operation
fnmsub.s f3, f13, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f13, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f13, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f13, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f13, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f13, f15, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3f800000)
li x15, 0xc9d86d48b416e451 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
li x3, 0xbc44de3586d3e50f # load x3 with value 0xbc44de3586d3e50f
sw x3, 0(x2) # store 0xbc44de3586d3e50f in memory
flw f24, 0(x2) # load 0xbc44de3586d3e50f from memory into f24
fnmsub.s f15, f9, f20, f24, dyn # perform operation
fnmsub.s f15, f9, f20, f24, rdn # perform operation
fnmsub.s f15, f9, f20, f24, rmm # perform operation
fnmsub.s f15, f9, f20, f24, rne # perform operation
fnmsub.s f15, f9, f20, f24, rtz # perform operation
fnmsub.s f15, f9, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f9, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f9, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f9, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f9, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f9, f20, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbf800000)
li x13, 0x4d2be6624e2ea245 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0x5a3c7a0c39a25fd8 # load x3 with value 0x5a3c7a0c39a25fd8
sw x3, 0(x2) # store 0x5a3c7a0c39a25fd8 in memory
flw f5, 0(x2) # load 0x5a3c7a0c39a25fd8 from memory into f5
fnmsub.s f13, f28, f21, f5, dyn # perform operation
fnmsub.s f13, f28, f21, f5, rdn # perform operation
fnmsub.s f13, f28, f21, f5, rmm # perform operation
fnmsub.s f13, f28, f21, f5, rne # perform operation
fnmsub.s f13, f28, f21, f5, rtz # perform operation
fnmsub.s f13, f28, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f28, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f28, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f28, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f28, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f28, f21, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3fc00000)
li x10, 0x6a8ac0e7c16b8fbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
li x3, 0xd90dec4d44751c92 # load x3 with value 0xd90dec4d44751c92
sw x3, 0(x2) # store 0xd90dec4d44751c92 in memory
flw f31, 0(x2) # load 0xd90dec4d44751c92 from memory into f31
fnmsub.s f10, f24, f20, f31, dyn # perform operation
fnmsub.s f10, f24, f20, f31, rdn # perform operation
fnmsub.s f10, f24, f20, f31, rmm # perform operation
fnmsub.s f10, f24, f20, f31, rne # perform operation
fnmsub.s f10, f24, f20, f31, rtz # perform operation
fnmsub.s f10, f24, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f24, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f24, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f24, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f24, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f24, f20, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbfc00000)
li x20, 0xcc8a39fa131a19ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0x39f82a2bdfdf6430 # load x3 with value 0x39f82a2bdfdf6430
sw x3, 0(x2) # store 0x39f82a2bdfdf6430 in memory
flw f6, 0(x2) # load 0x39f82a2bdfdf6430 from memory into f6
fnmsub.s f20, f5, f9, f6, dyn # perform operation
fnmsub.s f20, f5, f9, f6, rdn # perform operation
fnmsub.s f20, f5, f9, f6, rmm # perform operation
fnmsub.s f20, f5, f9, f6, rne # perform operation
fnmsub.s f20, f5, f9, f6, rtz # perform operation
fnmsub.s f20, f5, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f5, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f5, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f5, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f5, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f5, f9, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x40000000)
li x22, 0x7c0aa74c52cd634f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0x120853a1a90d748f # load x3 with value 0x120853a1a90d748f
sw x3, 0(x2) # store 0x120853a1a90d748f in memory
flw f1, 0(x2) # load 0x120853a1a90d748f from memory into f1
fnmsub.s f22, f3, f10, f1, dyn # perform operation
fnmsub.s f22, f3, f10, f1, rdn # perform operation
fnmsub.s f22, f3, f10, f1, rmm # perform operation
fnmsub.s f22, f3, f10, f1, rne # perform operation
fnmsub.s f22, f3, f10, f1, rtz # perform operation
fnmsub.s f22, f3, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f3, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f3, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f3, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f3, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f3, f10, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xc0000000)
li x1, 0x19f25c2adf49a6d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
li x3, 0x60a5b081a786ac78 # load x3 with value 0x60a5b081a786ac78
sw x3, 0(x2) # store 0x60a5b081a786ac78 in memory
flw f3, 0(x2) # load 0x60a5b081a786ac78 from memory into f3
fnmsub.s f1, f13, f2, f3, dyn # perform operation
fnmsub.s f1, f13, f2, f3, rdn # perform operation
fnmsub.s f1, f13, f2, f3, rmm # perform operation
fnmsub.s f1, f13, f2, f3, rne # perform operation
fnmsub.s f1, f13, f2, f3, rtz # perform operation
fnmsub.s f1, f13, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f13, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f13, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f13, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f13, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f13, f2, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x800000)
li x23, 0x31f42f6958b9fc08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0x5a764fb528aa99 # load x3 with value 0x5a764fb528aa99
sw x3, 0(x2) # store 0x5a764fb528aa99 in memory
flw f31, 0(x2) # load 0x5a764fb528aa99 from memory into f31
fnmsub.s f23, f11, f16, f31, dyn # perform operation
fnmsub.s f23, f11, f16, f31, rdn # perform operation
fnmsub.s f23, f11, f16, f31, rmm # perform operation
fnmsub.s f23, f11, f16, f31, rne # perform operation
fnmsub.s f23, f11, f16, f31, rtz # perform operation
fnmsub.s f23, f11, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f11, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f11, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f11, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f11, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f11, f16, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80800000)
li x11, 0x2b022e6cbfdf574f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
li x3, 0x24f8c0beebdf33c9 # load x3 with value 0x24f8c0beebdf33c9
sw x3, 0(x2) # store 0x24f8c0beebdf33c9 in memory
flw f7, 0(x2) # load 0x24f8c0beebdf33c9 from memory into f7
fnmsub.s f11, f4, f6, f7, dyn # perform operation
fnmsub.s f11, f4, f6, f7, rdn # perform operation
fnmsub.s f11, f4, f6, f7, rmm # perform operation
fnmsub.s f11, f4, f6, f7, rne # perform operation
fnmsub.s f11, f4, f6, f7, rtz # perform operation
fnmsub.s f11, f4, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f4, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f4, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f4, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f4, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f4, f6, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f7fffff)
li x29, 0x69ce6c88542b229e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0xb95f413172375af9 # load x3 with value 0xb95f413172375af9
sw x3, 0(x2) # store 0xb95f413172375af9 in memory
flw f5, 0(x2) # load 0xb95f413172375af9 from memory into f5
fnmsub.s f29, f17, f12, f5, dyn # perform operation
fnmsub.s f29, f17, f12, f5, rdn # perform operation
fnmsub.s f29, f17, f12, f5, rmm # perform operation
fnmsub.s f29, f17, f12, f5, rne # perform operation
fnmsub.s f29, f17, f12, f5, rtz # perform operation
fnmsub.s f29, f17, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f17, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f17, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f17, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f17, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f17, f12, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff7fffff)
li x23, 0x5cedda516b173abc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0x87f9c64c2db4bb0d # load x3 with value 0x87f9c64c2db4bb0d
sw x3, 0(x2) # store 0x87f9c64c2db4bb0d in memory
flw f27, 0(x2) # load 0x87f9c64c2db4bb0d from memory into f27
fnmsub.s f23, f21, f16, f27, dyn # perform operation
fnmsub.s f23, f21, f16, f27, rdn # perform operation
fnmsub.s f23, f21, f16, f27, rmm # perform operation
fnmsub.s f23, f21, f16, f27, rne # perform operation
fnmsub.s f23, f21, f16, f27, rtz # perform operation
fnmsub.s f23, f21, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f21, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f21, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f21, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f21, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f21, f16, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffff)
li x17, 0x0d99981f3750ef67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
li x3, 0xfc681a0147550b89 # load x3 with value 0xfc681a0147550b89
sw x3, 0(x2) # store 0xfc681a0147550b89 in memory
flw f13, 0(x2) # load 0xfc681a0147550b89 from memory into f13
fnmsub.s f17, f31, f14, f13, dyn # perform operation
fnmsub.s f17, f31, f14, f13, rdn # perform operation
fnmsub.s f17, f31, f14, f13, rmm # perform operation
fnmsub.s f17, f31, f14, f13, rne # perform operation
fnmsub.s f17, f31, f14, f13, rtz # perform operation
fnmsub.s f17, f31, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f31, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f31, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f31, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f31, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f31, f14, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x807fffff)
li x1, 0xae2faa2875aa5c3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0x2b3bc57fd0a164cc # load x3 with value 0x2b3bc57fd0a164cc
sw x3, 0(x2) # store 0x2b3bc57fd0a164cc in memory
flw f20, 0(x2) # load 0x2b3bc57fd0a164cc from memory into f20
fnmsub.s f1, f2, f5, f20, dyn # perform operation
fnmsub.s f1, f2, f5, f20, rdn # perform operation
fnmsub.s f1, f2, f5, f20, rmm # perform operation
fnmsub.s f1, f2, f5, f20, rne # perform operation
fnmsub.s f1, f2, f5, f20, rtz # perform operation
fnmsub.s f1, f2, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f2, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f2, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f2, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f2, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f2, f5, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x400000)
li x12, 0x5130721d52cb0e3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x232feeb46706a5fd # load x3 with value 0x232feeb46706a5fd
sw x3, 0(x2) # store 0x232feeb46706a5fd in memory
flw f18, 0(x2) # load 0x232feeb46706a5fd from memory into f18
fnmsub.s f12, f27, f4, f18, dyn # perform operation
fnmsub.s f12, f27, f4, f18, rdn # perform operation
fnmsub.s f12, f27, f4, f18, rmm # perform operation
fnmsub.s f12, f27, f4, f18, rne # perform operation
fnmsub.s f12, f27, f4, f18, rtz # perform operation
fnmsub.s f12, f27, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f27, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f27, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f27, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f27, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f27, f4, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80400000)
li x5, 0xcd23f846e30160f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
li x3, 0xd63f790afc25cc34 # load x3 with value 0xd63f790afc25cc34
sw x3, 0(x2) # store 0xd63f790afc25cc34 in memory
flw f7, 0(x2) # load 0xd63f790afc25cc34 from memory into f7
fnmsub.s f5, f19, f21, f7, dyn # perform operation
fnmsub.s f5, f19, f21, f7, rdn # perform operation
fnmsub.s f5, f19, f21, f7, rmm # perform operation
fnmsub.s f5, f19, f21, f7, rne # perform operation
fnmsub.s f5, f19, f21, f7, rtz # perform operation
fnmsub.s f5, f19, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f19, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f19, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f19, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f19, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f19, f21, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x1)
li x5, 0x448c4ad4d49f153c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x4d4b1dbe85b13d0 # load x3 with value 0x4d4b1dbe85b13d0
sw x3, 0(x2) # store 0x4d4b1dbe85b13d0 in memory
flw f9, 0(x2) # load 0x4d4b1dbe85b13d0 from memory into f9
fnmsub.s f5, f21, f3, f9, dyn # perform operation
fnmsub.s f5, f21, f3, f9, rdn # perform operation
fnmsub.s f5, f21, f3, f9, rmm # perform operation
fnmsub.s f5, f21, f3, f9, rne # perform operation
fnmsub.s f5, f21, f3, f9, rtz # perform operation
fnmsub.s f5, f21, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f21, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f21, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f21, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f21, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f21, f3, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000001)
li x17, 0x769f5d2053c49895 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0x1f4c0660d4e830f # load x3 with value 0x1f4c0660d4e830f
sw x3, 0(x2) # store 0x1f4c0660d4e830f in memory
flw f26, 0(x2) # load 0x1f4c0660d4e830f from memory into f26
fnmsub.s f17, f7, f16, f26, dyn # perform operation
fnmsub.s f17, f7, f16, f26, rdn # perform operation
fnmsub.s f17, f7, f16, f26, rmm # perform operation
fnmsub.s f17, f7, f16, f26, rne # perform operation
fnmsub.s f17, f7, f16, f26, rtz # perform operation
fnmsub.s f17, f7, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f7, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f7, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f7, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f7, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f7, f16, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800000)
li x22, 0xa1cd1aa31b6a5295 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0x3d9c1b6a5246fbc5 # load x3 with value 0x3d9c1b6a5246fbc5
sw x3, 0(x2) # store 0x3d9c1b6a5246fbc5 in memory
flw f21, 0(x2) # load 0x3d9c1b6a5246fbc5 from memory into f21
fnmsub.s f22, f29, f7, f21, dyn # perform operation
fnmsub.s f22, f29, f7, f21, rdn # perform operation
fnmsub.s f22, f29, f7, f21, rmm # perform operation
fnmsub.s f22, f29, f7, f21, rne # perform operation
fnmsub.s f22, f29, f7, f21, rtz # perform operation
fnmsub.s f22, f29, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f29, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f29, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f29, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f29, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f29, f7, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff800000)
li x15, 0xc16d87893274d647 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0x78ceec90c78304bc # load x3 with value 0x78ceec90c78304bc
sw x3, 0(x2) # store 0x78ceec90c78304bc in memory
flw f9, 0(x2) # load 0x78ceec90c78304bc from memory into f9
fnmsub.s f15, f29, f6, f9, dyn # perform operation
fnmsub.s f15, f29, f6, f9, rdn # perform operation
fnmsub.s f15, f29, f6, f9, rmm # perform operation
fnmsub.s f15, f29, f6, f9, rne # perform operation
fnmsub.s f15, f29, f6, f9, rtz # perform operation
fnmsub.s f15, f29, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f29, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f29, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f29, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f29, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f29, f6, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fc00000)
li x4, 0xfdf3175982e284c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0x4528a49b90967596 # load x3 with value 0x4528a49b90967596
sw x3, 0(x2) # store 0x4528a49b90967596 in memory
flw f27, 0(x2) # load 0x4528a49b90967596 from memory into f27
fnmsub.s f4, f8, f15, f27, dyn # perform operation
fnmsub.s f4, f8, f15, f27, rdn # perform operation
fnmsub.s f4, f8, f15, f27, rmm # perform operation
fnmsub.s f4, f8, f15, f27, rne # perform operation
fnmsub.s f4, f8, f15, f27, rtz # perform operation
fnmsub.s f4, f8, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f8, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f8, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f8, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f8, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f8, f15, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffffff)
li x22, 0x000b5bc6eb21f780 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0xde991c1b9a42bc19 # load x3 with value 0xde991c1b9a42bc19
sw x3, 0(x2) # store 0xde991c1b9a42bc19 in memory
flw f11, 0(x2) # load 0xde991c1b9a42bc19 from memory into f11
fnmsub.s f22, f19, f24, f11, dyn # perform operation
fnmsub.s f22, f19, f24, f11, rdn # perform operation
fnmsub.s f22, f19, f24, f11, rmm # perform operation
fnmsub.s f22, f19, f24, f11, rne # perform operation
fnmsub.s f22, f19, f24, f11, rtz # perform operation
fnmsub.s f22, f19, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f19, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f19, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f19, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f19, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f19, f24, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800001)
li x2, 0x5bab6ee31400bf95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
li x3, 0x2e27f5f8534b5cd3 # load x3 with value 0x2e27f5f8534b5cd3
sw x3, 0(x2) # store 0x2e27f5f8534b5cd3 in memory
flw f12, 0(x2) # load 0x2e27f5f8534b5cd3 from memory into f12
fnmsub.s f2, f13, f21, f12, dyn # perform operation
fnmsub.s f2, f13, f21, f12, rdn # perform operation
fnmsub.s f2, f13, f21, f12, rmm # perform operation
fnmsub.s f2, f13, f21, f12, rne # perform operation
fnmsub.s f2, f13, f21, f12, rtz # perform operation
fnmsub.s f2, f13, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f13, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f13, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f13, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f13, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f13, f21, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fbfffff)
li x22, 0xe43cdfa910fdb170 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0x8b9b0d9a908890c # load x3 with value 0x8b9b0d9a908890c
sw x3, 0(x2) # store 0x8b9b0d9a908890c in memory
flw f10, 0(x2) # load 0x8b9b0d9a908890c from memory into f10
fnmsub.s f22, f2, f23, f10, dyn # perform operation
fnmsub.s f22, f2, f23, f10, rdn # perform operation
fnmsub.s f22, f2, f23, f10, rmm # perform operation
fnmsub.s f22, f2, f23, f10, rne # perform operation
fnmsub.s f22, f2, f23, f10, rtz # perform operation
fnmsub.s f22, f2, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f2, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f2, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f2, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f2, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f2, f23, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7ef8654f)
li x20, 0x16b7ea57162cb3d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0x8e9f13fab7a10667 # load x3 with value 0x8e9f13fab7a10667
sw x3, 0(x2) # store 0x8e9f13fab7a10667 in memory
flw f5, 0(x2) # load 0x8e9f13fab7a10667 from memory into f5
fnmsub.s f20, f4, f27, f5, dyn # perform operation
fnmsub.s f20, f4, f27, f5, rdn # perform operation
fnmsub.s f20, f4, f27, f5, rmm # perform operation
fnmsub.s f20, f4, f27, f5, rne # perform operation
fnmsub.s f20, f4, f27, f5, rtz # perform operation
fnmsub.s f20, f4, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f4, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f4, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f4, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f4, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f4, f27, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x813d9ab0)
li x1, 0x39a0c92a78aea8ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0x84f68391953f7c68 # load x3 with value 0x84f68391953f7c68
sw x3, 0(x2) # store 0x84f68391953f7c68 in memory
flw f23, 0(x2) # load 0x84f68391953f7c68 from memory into f23
fnmsub.s f1, f10, f26, f23, dyn # perform operation
fnmsub.s f1, f10, f26, f23, rdn # perform operation
fnmsub.s f1, f10, f26, f23, rmm # perform operation
fnmsub.s f1, f10, f26, f23, rne # perform operation
fnmsub.s f1, f10, f26, f23, rtz # perform operation
fnmsub.s f1, f10, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f10, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f10, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f10, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f10, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f10, f26, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x0)
li x16, 0xa9daf20f4fa635a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0xdcd7e1605aac72f2 # load x3 with value 0xdcd7e1605aac72f2
sw x3, 0(x2) # store 0xdcd7e1605aac72f2 in memory
flw f23, 0(x2) # load 0xdcd7e1605aac72f2 from memory into f23
fnmsub.s f16, f17, f6, f23, dyn # perform operation
fnmsub.s f16, f17, f6, f23, rdn # perform operation
fnmsub.s f16, f17, f6, f23, rmm # perform operation
fnmsub.s f16, f17, f6, f23, rne # perform operation
fnmsub.s f16, f17, f6, f23, rtz # perform operation
fnmsub.s f16, f17, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f17, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f17, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f17, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f17, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f17, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000000)
li x12, 0x094ac4e127acf853 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0xdd2f368a9fa79171 # load x3 with value 0xdd2f368a9fa79171
sw x3, 0(x2) # store 0xdd2f368a9fa79171 in memory
flw f5, 0(x2) # load 0xdd2f368a9fa79171 from memory into f5
fnmsub.s f12, f21, f25, f5, dyn # perform operation
fnmsub.s f12, f21, f25, f5, rdn # perform operation
fnmsub.s f12, f21, f25, f5, rmm # perform operation
fnmsub.s f12, f21, f25, f5, rne # perform operation
fnmsub.s f12, f21, f25, f5, rtz # perform operation
fnmsub.s f12, f21, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f21, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f21, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f21, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f21, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f21, f25, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3f800000)
li x2, 0xdb0e957f6dbdc2b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
li x3, 0xe0222402e4a78507 # load x3 with value 0xe0222402e4a78507
sw x3, 0(x2) # store 0xe0222402e4a78507 in memory
flw f9, 0(x2) # load 0xe0222402e4a78507 from memory into f9
fnmsub.s f2, f8, f10, f9, dyn # perform operation
fnmsub.s f2, f8, f10, f9, rdn # perform operation
fnmsub.s f2, f8, f10, f9, rmm # perform operation
fnmsub.s f2, f8, f10, f9, rne # perform operation
fnmsub.s f2, f8, f10, f9, rtz # perform operation
fnmsub.s f2, f8, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f8, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f8, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f8, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f8, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f8, f10, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbf800000)
li x3, 0x25db47598d8398a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0x3b999a6db84de43 # load x3 with value 0x3b999a6db84de43
sw x3, 0(x2) # store 0x3b999a6db84de43 in memory
flw f2, 0(x2) # load 0x3b999a6db84de43 from memory into f2
fnmsub.s f3, f24, f14, f2, dyn # perform operation
fnmsub.s f3, f24, f14, f2, rdn # perform operation
fnmsub.s f3, f24, f14, f2, rmm # perform operation
fnmsub.s f3, f24, f14, f2, rne # perform operation
fnmsub.s f3, f24, f14, f2, rtz # perform operation
fnmsub.s f3, f24, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f24, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f24, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f24, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f24, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f24, f14, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3fc00000)
li x20, 0x2a8c86671aa1fe6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0xd7132d9227c35a6d # load x3 with value 0xd7132d9227c35a6d
sw x3, 0(x2) # store 0xd7132d9227c35a6d in memory
flw f15, 0(x2) # load 0xd7132d9227c35a6d from memory into f15
fnmsub.s f20, f8, f7, f15, dyn # perform operation
fnmsub.s f20, f8, f7, f15, rdn # perform operation
fnmsub.s f20, f8, f7, f15, rmm # perform operation
fnmsub.s f20, f8, f7, f15, rne # perform operation
fnmsub.s f20, f8, f7, f15, rtz # perform operation
fnmsub.s f20, f8, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f8, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f8, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f8, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f8, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f8, f7, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbfc00000)
li x12, 0xd8b46d7406292017 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x422dcf4a39b9cc50 # load x3 with value 0x422dcf4a39b9cc50
sw x3, 0(x2) # store 0x422dcf4a39b9cc50 in memory
flw f27, 0(x2) # load 0x422dcf4a39b9cc50 from memory into f27
fnmsub.s f12, f11, f4, f27, dyn # perform operation
fnmsub.s f12, f11, f4, f27, rdn # perform operation
fnmsub.s f12, f11, f4, f27, rmm # perform operation
fnmsub.s f12, f11, f4, f27, rne # perform operation
fnmsub.s f12, f11, f4, f27, rtz # perform operation
fnmsub.s f12, f11, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f11, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f11, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f11, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f11, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f11, f4, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x40000000)
li x15, 0x1587d19309fc6ea2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
li x3, 0x2b00a9a02278e3a0 # load x3 with value 0x2b00a9a02278e3a0
sw x3, 0(x2) # store 0x2b00a9a02278e3a0 in memory
flw f2, 0(x2) # load 0x2b00a9a02278e3a0 from memory into f2
fnmsub.s f15, f9, f21, f2, dyn # perform operation
fnmsub.s f15, f9, f21, f2, rdn # perform operation
fnmsub.s f15, f9, f21, f2, rmm # perform operation
fnmsub.s f15, f9, f21, f2, rne # perform operation
fnmsub.s f15, f9, f21, f2, rtz # perform operation
fnmsub.s f15, f9, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f9, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f9, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f9, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f9, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f9, f21, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xc0000000)
li x10, 0x38109afedc2fa66b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0x781480c0b47cbe18 # load x3 with value 0x781480c0b47cbe18
sw x3, 0(x2) # store 0x781480c0b47cbe18 in memory
flw f26, 0(x2) # load 0x781480c0b47cbe18 from memory into f26
fnmsub.s f10, f21, f14, f26, dyn # perform operation
fnmsub.s f10, f21, f14, f26, rdn # perform operation
fnmsub.s f10, f21, f14, f26, rmm # perform operation
fnmsub.s f10, f21, f14, f26, rne # perform operation
fnmsub.s f10, f21, f14, f26, rtz # perform operation
fnmsub.s f10, f21, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f21, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f21, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f21, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f21, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f21, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x800000)
li x5, 0xcfe2156e287f1ae2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0x2434402568b2cebc # load x3 with value 0x2434402568b2cebc
sw x3, 0(x2) # store 0x2434402568b2cebc in memory
flw f2, 0(x2) # load 0x2434402568b2cebc from memory into f2
fnmsub.s f5, f3, f19, f2, dyn # perform operation
fnmsub.s f5, f3, f19, f2, rdn # perform operation
fnmsub.s f5, f3, f19, f2, rmm # perform operation
fnmsub.s f5, f3, f19, f2, rne # perform operation
fnmsub.s f5, f3, f19, f2, rtz # perform operation
fnmsub.s f5, f3, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f3, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f3, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f3, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f3, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f3, f19, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80800000)
li x31, 0x796ac3976524cc08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0x2d073b4024248ea5 # load x3 with value 0x2d073b4024248ea5
sw x3, 0(x2) # store 0x2d073b4024248ea5 in memory
flw f9, 0(x2) # load 0x2d073b4024248ea5 from memory into f9
fnmsub.s f31, f13, f27, f9, dyn # perform operation
fnmsub.s f31, f13, f27, f9, rdn # perform operation
fnmsub.s f31, f13, f27, f9, rmm # perform operation
fnmsub.s f31, f13, f27, f9, rne # perform operation
fnmsub.s f31, f13, f27, f9, rtz # perform operation
fnmsub.s f31, f13, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f13, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f7fffff)
li x24, 0xa0d49bea4c39b824 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0x8198b668abf86e06 # load x3 with value 0x8198b668abf86e06
sw x3, 0(x2) # store 0x8198b668abf86e06 in memory
flw f31, 0(x2) # load 0x8198b668abf86e06 from memory into f31
fnmsub.s f24, f29, f11, f31, dyn # perform operation
fnmsub.s f24, f29, f11, f31, rdn # perform operation
fnmsub.s f24, f29, f11, f31, rmm # perform operation
fnmsub.s f24, f29, f11, f31, rne # perform operation
fnmsub.s f24, f29, f11, f31, rtz # perform operation
fnmsub.s f24, f29, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f29, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f29, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f29, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f29, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f29, f11, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff7fffff)
li x13, 0x4aacf40af121cb5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0x31fb5a2131b9299d # load x3 with value 0x31fb5a2131b9299d
sw x3, 0(x2) # store 0x31fb5a2131b9299d in memory
flw f17, 0(x2) # load 0x31fb5a2131b9299d from memory into f17
fnmsub.s f13, f29, f28, f17, dyn # perform operation
fnmsub.s f13, f29, f28, f17, rdn # perform operation
fnmsub.s f13, f29, f28, f17, rmm # perform operation
fnmsub.s f13, f29, f28, f17, rne # perform operation
fnmsub.s f13, f29, f28, f17, rtz # perform operation
fnmsub.s f13, f29, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f29, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f29, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f29, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f29, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f29, f28, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffff)
li x16, 0x9822ed6fe81c0cbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0x19056cce22215b01 # load x3 with value 0x19056cce22215b01
sw x3, 0(x2) # store 0x19056cce22215b01 in memory
flw f23, 0(x2) # load 0x19056cce22215b01 from memory into f23
fnmsub.s f16, f22, f13, f23, dyn # perform operation
fnmsub.s f16, f22, f13, f23, rdn # perform operation
fnmsub.s f16, f22, f13, f23, rmm # perform operation
fnmsub.s f16, f22, f13, f23, rne # perform operation
fnmsub.s f16, f22, f13, f23, rtz # perform operation
fnmsub.s f16, f22, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f22, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f22, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f22, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f22, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f22, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x807fffff)
li x22, 0xfeca927e2f0c936b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
li x3, 0x6f7f46cbc9cbafaa # load x3 with value 0x6f7f46cbc9cbafaa
sw x3, 0(x2) # store 0x6f7f46cbc9cbafaa in memory
flw f4, 0(x2) # load 0x6f7f46cbc9cbafaa from memory into f4
fnmsub.s f22, f8, f25, f4, dyn # perform operation
fnmsub.s f22, f8, f25, f4, rdn # perform operation
fnmsub.s f22, f8, f25, f4, rmm # perform operation
fnmsub.s f22, f8, f25, f4, rne # perform operation
fnmsub.s f22, f8, f25, f4, rtz # perform operation
fnmsub.s f22, f8, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f8, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f8, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f8, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f8, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f8, f25, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x400000)
li x10, 0x02f1a2ac8acf0811 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
li x3, 0x9debaed9ce20c4bc # load x3 with value 0x9debaed9ce20c4bc
sw x3, 0(x2) # store 0x9debaed9ce20c4bc in memory
flw f7, 0(x2) # load 0x9debaed9ce20c4bc from memory into f7
fnmsub.s f10, f17, f31, f7, dyn # perform operation
fnmsub.s f10, f17, f31, f7, rdn # perform operation
fnmsub.s f10, f17, f31, f7, rmm # perform operation
fnmsub.s f10, f17, f31, f7, rne # perform operation
fnmsub.s f10, f17, f31, f7, rtz # perform operation
fnmsub.s f10, f17, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f17, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f17, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f17, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f17, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f17, f31, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80400000)
li x8, 0x7ccf131521a3cfda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0xbcc86b32c179efc8 # load x3 with value 0xbcc86b32c179efc8
sw x3, 0(x2) # store 0xbcc86b32c179efc8 in memory
flw f16, 0(x2) # load 0xbcc86b32c179efc8 from memory into f16
fnmsub.s f8, f20, f24, f16, dyn # perform operation
fnmsub.s f8, f20, f24, f16, rdn # perform operation
fnmsub.s f8, f20, f24, f16, rmm # perform operation
fnmsub.s f8, f20, f24, f16, rne # perform operation
fnmsub.s f8, f20, f24, f16, rtz # perform operation
fnmsub.s f8, f20, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f20, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f20, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f20, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f20, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f20, f24, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x1)
li x12, 0x619729920b386fda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0xe942dc7806833768 # load x3 with value 0xe942dc7806833768
sw x3, 0(x2) # store 0xe942dc7806833768 in memory
flw f28, 0(x2) # load 0xe942dc7806833768 from memory into f28
fnmsub.s f12, f19, f5, f28, dyn # perform operation
fnmsub.s f12, f19, f5, f28, rdn # perform operation
fnmsub.s f12, f19, f5, f28, rmm # perform operation
fnmsub.s f12, f19, f5, f28, rne # perform operation
fnmsub.s f12, f19, f5, f28, rtz # perform operation
fnmsub.s f12, f19, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f19, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f19, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f19, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f19, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f19, f5, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000001)
li x17, 0x89be8abc6bd6fe79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0x110e31695b66533a # load x3 with value 0x110e31695b66533a
sw x3, 0(x2) # store 0x110e31695b66533a in memory
flw f6, 0(x2) # load 0x110e31695b66533a from memory into f6
fnmsub.s f17, f29, f31, f6, dyn # perform operation
fnmsub.s f17, f29, f31, f6, rdn # perform operation
fnmsub.s f17, f29, f31, f6, rmm # perform operation
fnmsub.s f17, f29, f31, f6, rne # perform operation
fnmsub.s f17, f29, f31, f6, rtz # perform operation
fnmsub.s f17, f29, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f29, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f29, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f29, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f29, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f29, f31, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800000)
li x12, 0xcf8145d6cb7a37ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x967dfadf92e15a82 # load x3 with value 0x967dfadf92e15a82
sw x3, 0(x2) # store 0x967dfadf92e15a82 in memory
flw f31, 0(x2) # load 0x967dfadf92e15a82 from memory into f31
fnmsub.s f12, f2, f5, f31, dyn # perform operation
fnmsub.s f12, f2, f5, f31, rdn # perform operation
fnmsub.s f12, f2, f5, f31, rmm # perform operation
fnmsub.s f12, f2, f5, f31, rne # perform operation
fnmsub.s f12, f2, f5, f31, rtz # perform operation
fnmsub.s f12, f2, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f2, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f2, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f2, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f2, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f2, f5, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff800000)
li x26, 0x6b39008faa7e80ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
li x3, 0x1b90d70a709e6be # load x3 with value 0x1b90d70a709e6be
sw x3, 0(x2) # store 0x1b90d70a709e6be in memory
flw f25, 0(x2) # load 0x1b90d70a709e6be from memory into f25
fnmsub.s f26, f15, f4, f25, dyn # perform operation
fnmsub.s f26, f15, f4, f25, rdn # perform operation
fnmsub.s f26, f15, f4, f25, rmm # perform operation
fnmsub.s f26, f15, f4, f25, rne # perform operation
fnmsub.s f26, f15, f4, f25, rtz # perform operation
fnmsub.s f26, f15, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f15, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f15, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f15, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f15, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f15, f4, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fc00000)
li x8, 0xb294a973312fee0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x5f04c8fbcabe0f13 # load x3 with value 0x5f04c8fbcabe0f13
sw x3, 0(x2) # store 0x5f04c8fbcabe0f13 in memory
flw f7, 0(x2) # load 0x5f04c8fbcabe0f13 from memory into f7
fnmsub.s f8, f10, f29, f7, dyn # perform operation
fnmsub.s f8, f10, f29, f7, rdn # perform operation
fnmsub.s f8, f10, f29, f7, rmm # perform operation
fnmsub.s f8, f10, f29, f7, rne # perform operation
fnmsub.s f8, f10, f29, f7, rtz # perform operation
fnmsub.s f8, f10, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f10, f29, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffffff)
li x25, 0x1efaa4271035ee41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
li x3, 0x88d512e2af7abf6c # load x3 with value 0x88d512e2af7abf6c
sw x3, 0(x2) # store 0x88d512e2af7abf6c in memory
flw f14, 0(x2) # load 0x88d512e2af7abf6c from memory into f14
fnmsub.s f25, f6, f31, f14, dyn # perform operation
fnmsub.s f25, f6, f31, f14, rdn # perform operation
fnmsub.s f25, f6, f31, f14, rmm # perform operation
fnmsub.s f25, f6, f31, f14, rne # perform operation
fnmsub.s f25, f6, f31, f14, rtz # perform operation
fnmsub.s f25, f6, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f6, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f6, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f6, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f6, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f6, f31, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800001)
li x9, 0x1735a5e712761d06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0x6ed5c80aef91ce12 # load x3 with value 0x6ed5c80aef91ce12
sw x3, 0(x2) # store 0x6ed5c80aef91ce12 in memory
flw f14, 0(x2) # load 0x6ed5c80aef91ce12 from memory into f14
fnmsub.s f9, f18, f4, f14, dyn # perform operation
fnmsub.s f9, f18, f4, f14, rdn # perform operation
fnmsub.s f9, f18, f4, f14, rmm # perform operation
fnmsub.s f9, f18, f4, f14, rne # perform operation
fnmsub.s f9, f18, f4, f14, rtz # perform operation
fnmsub.s f9, f18, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f18, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f18, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f18, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f18, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f18, f4, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fbfffff)
li x3, 0xdc64a41ce4403253 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0x6afa9c40e2f60ccc # load x3 with value 0x6afa9c40e2f60ccc
sw x3, 0(x2) # store 0x6afa9c40e2f60ccc in memory
flw f15, 0(x2) # load 0x6afa9c40e2f60ccc from memory into f15
fnmsub.s f3, f19, f27, f15, dyn # perform operation
fnmsub.s f3, f19, f27, f15, rdn # perform operation
fnmsub.s f3, f19, f27, f15, rmm # perform operation
fnmsub.s f3, f19, f27, f15, rne # perform operation
fnmsub.s f3, f19, f27, f15, rtz # perform operation
fnmsub.s f3, f19, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f19, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f19, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f19, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f19, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f19, f27, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7ef8654f)
li x8, 0x555f6828d204eb97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0xb355c6319e94d0db # load x3 with value 0xb355c6319e94d0db
sw x3, 0(x2) # store 0xb355c6319e94d0db in memory
flw f30, 0(x2) # load 0xb355c6319e94d0db from memory into f30
fnmsub.s f8, f25, f21, f30, dyn # perform operation
fnmsub.s f8, f25, f21, f30, rdn # perform operation
fnmsub.s f8, f25, f21, f30, rmm # perform operation
fnmsub.s f8, f25, f21, f30, rne # perform operation
fnmsub.s f8, f25, f21, f30, rtz # perform operation
fnmsub.s f8, f25, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f25, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f25, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f25, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f25, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f25, f21, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x813d9ab0)
li x28, 0x98bd8416506016a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
li x3, 0x1f02f4b9bd68929a # load x3 with value 0x1f02f4b9bd68929a
sw x3, 0(x2) # store 0x1f02f4b9bd68929a in memory
flw f13, 0(x2) # load 0x1f02f4b9bd68929a from memory into f13
fnmsub.s f28, f26, f7, f13, dyn # perform operation
fnmsub.s f28, f26, f7, f13, rdn # perform operation
fnmsub.s f28, f26, f7, f13, rmm # perform operation
fnmsub.s f28, f26, f7, f13, rne # perform operation
fnmsub.s f28, f26, f7, f13, rtz # perform operation
fnmsub.s f28, f26, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f26, f7, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x0)
li x20, 0xc089395137722860 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0xc09356c304fca782 # load x3 with value 0xc09356c304fca782
sw x3, 0(x2) # store 0xc09356c304fca782 in memory
flw f11, 0(x2) # load 0xc09356c304fca782 from memory into f11
fnmsub.s f20, f19, f14, f11, dyn # perform operation
fnmsub.s f20, f19, f14, f11, rdn # perform operation
fnmsub.s f20, f19, f14, f11, rmm # perform operation
fnmsub.s f20, f19, f14, f11, rne # perform operation
fnmsub.s f20, f19, f14, f11, rtz # perform operation
fnmsub.s f20, f19, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f19, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f19, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f19, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f19, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f19, f14, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000000)
li x2, 0x68182915b590c866 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0xee70b4fa31aa4a9e # load x3 with value 0xee70b4fa31aa4a9e
sw x3, 0(x2) # store 0xee70b4fa31aa4a9e in memory
flw f7, 0(x2) # load 0xee70b4fa31aa4a9e from memory into f7
fnmsub.s f2, f1, f23, f7, dyn # perform operation
fnmsub.s f2, f1, f23, f7, rdn # perform operation
fnmsub.s f2, f1, f23, f7, rmm # perform operation
fnmsub.s f2, f1, f23, f7, rne # perform operation
fnmsub.s f2, f1, f23, f7, rtz # perform operation
fnmsub.s f2, f1, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f1, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f1, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f1, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f1, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f1, f23, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3f800000)
li x19, 0xbee6b816f7ea40f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
li x3, 0x645652f54228970b # load x3 with value 0x645652f54228970b
sw x3, 0(x2) # store 0x645652f54228970b in memory
flw f23, 0(x2) # load 0x645652f54228970b from memory into f23
fnmsub.s f19, f31, f1, f23, dyn # perform operation
fnmsub.s f19, f31, f1, f23, rdn # perform operation
fnmsub.s f19, f31, f1, f23, rmm # perform operation
fnmsub.s f19, f31, f1, f23, rne # perform operation
fnmsub.s f19, f31, f1, f23, rtz # perform operation
fnmsub.s f19, f31, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f31, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f31, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f31, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f31, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f31, f1, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbf800000)
li x5, 0x864d398952fd17da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0x3aa3ea7f5e3fea24 # load x3 with value 0x3aa3ea7f5e3fea24
sw x3, 0(x2) # store 0x3aa3ea7f5e3fea24 in memory
flw f19, 0(x2) # load 0x3aa3ea7f5e3fea24 from memory into f19
fnmsub.s f5, f29, f22, f19, dyn # perform operation
fnmsub.s f5, f29, f22, f19, rdn # perform operation
fnmsub.s f5, f29, f22, f19, rmm # perform operation
fnmsub.s f5, f29, f22, f19, rne # perform operation
fnmsub.s f5, f29, f22, f19, rtz # perform operation
fnmsub.s f5, f29, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f29, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f29, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f29, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f29, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f29, f22, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3fc00000)
li x16, 0xc7d73a213f4ad5bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
li x3, 0xcd204db2130f34e8 # load x3 with value 0xcd204db2130f34e8
sw x3, 0(x2) # store 0xcd204db2130f34e8 in memory
flw f12, 0(x2) # load 0xcd204db2130f34e8 from memory into f12
fnmsub.s f16, f6, f20, f12, dyn # perform operation
fnmsub.s f16, f6, f20, f12, rdn # perform operation
fnmsub.s f16, f6, f20, f12, rmm # perform operation
fnmsub.s f16, f6, f20, f12, rne # perform operation
fnmsub.s f16, f6, f20, f12, rtz # perform operation
fnmsub.s f16, f6, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f6, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f6, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f6, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f6, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f6, f20, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbfc00000)
li x6, 0x663ef7648d464e17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0xf6a0494541fdd816 # load x3 with value 0xf6a0494541fdd816
sw x3, 0(x2) # store 0xf6a0494541fdd816 in memory
flw f14, 0(x2) # load 0xf6a0494541fdd816 from memory into f14
fnmsub.s f6, f22, f5, f14, dyn # perform operation
fnmsub.s f6, f22, f5, f14, rdn # perform operation
fnmsub.s f6, f22, f5, f14, rmm # perform operation
fnmsub.s f6, f22, f5, f14, rne # perform operation
fnmsub.s f6, f22, f5, f14, rtz # perform operation
fnmsub.s f6, f22, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f22, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f22, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f22, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f22, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f22, f5, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x40000000)
li x17, 0x4da9b16030829c84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0xe13e664b2c86d418 # load x3 with value 0xe13e664b2c86d418
sw x3, 0(x2) # store 0xe13e664b2c86d418 in memory
flw f5, 0(x2) # load 0xe13e664b2c86d418 from memory into f5
fnmsub.s f17, f14, f1, f5, dyn # perform operation
fnmsub.s f17, f14, f1, f5, rdn # perform operation
fnmsub.s f17, f14, f1, f5, rmm # perform operation
fnmsub.s f17, f14, f1, f5, rne # perform operation
fnmsub.s f17, f14, f1, f5, rtz # perform operation
fnmsub.s f17, f14, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f14, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f14, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f14, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f14, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f14, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xc0000000)
li x30, 0x08d2d2e827759055 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0x11648d3a37c904cf # load x3 with value 0x11648d3a37c904cf
sw x3, 0(x2) # store 0x11648d3a37c904cf in memory
flw f20, 0(x2) # load 0x11648d3a37c904cf from memory into f20
fnmsub.s f30, f25, f26, f20, dyn # perform operation
fnmsub.s f30, f25, f26, f20, rdn # perform operation
fnmsub.s f30, f25, f26, f20, rmm # perform operation
fnmsub.s f30, f25, f26, f20, rne # perform operation
fnmsub.s f30, f25, f26, f20, rtz # perform operation
fnmsub.s f30, f25, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f25, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f25, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f25, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f25, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f25, f26, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x800000)
li x9, 0x29dc0ba28f2fe5cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
li x3, 0x6a889dbdac6402bc # load x3 with value 0x6a889dbdac6402bc
sw x3, 0(x2) # store 0x6a889dbdac6402bc in memory
flw f12, 0(x2) # load 0x6a889dbdac6402bc from memory into f12
fnmsub.s f9, f2, f29, f12, dyn # perform operation
fnmsub.s f9, f2, f29, f12, rdn # perform operation
fnmsub.s f9, f2, f29, f12, rmm # perform operation
fnmsub.s f9, f2, f29, f12, rne # perform operation
fnmsub.s f9, f2, f29, f12, rtz # perform operation
fnmsub.s f9, f2, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f2, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f2, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f2, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f2, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f2, f29, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80800000)
li x8, 0x6dc08452a054eb80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0x5dca6eef95003e7a # load x3 with value 0x5dca6eef95003e7a
sw x3, 0(x2) # store 0x5dca6eef95003e7a in memory
flw f26, 0(x2) # load 0x5dca6eef95003e7a from memory into f26
fnmsub.s f8, f6, f16, f26, dyn # perform operation
fnmsub.s f8, f6, f16, f26, rdn # perform operation
fnmsub.s f8, f6, f16, f26, rmm # perform operation
fnmsub.s f8, f6, f16, f26, rne # perform operation
fnmsub.s f8, f6, f16, f26, rtz # perform operation
fnmsub.s f8, f6, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f6, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f6, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f6, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f6, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f6, f16, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f7fffff)
li x31, 0xb4e044b2629b1a15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
li x3, 0xa02783e0480757e4 # load x3 with value 0xa02783e0480757e4
sw x3, 0(x2) # store 0xa02783e0480757e4 in memory
flw f25, 0(x2) # load 0xa02783e0480757e4 from memory into f25
fnmsub.s f31, f10, f26, f25, dyn # perform operation
fnmsub.s f31, f10, f26, f25, rdn # perform operation
fnmsub.s f31, f10, f26, f25, rmm # perform operation
fnmsub.s f31, f10, f26, f25, rne # perform operation
fnmsub.s f31, f10, f26, f25, rtz # perform operation
fnmsub.s f31, f10, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f10, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f10, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f10, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f10, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f10, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff7fffff)
li x9, 0x2f37c90a6557215c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0x219a9e0a501c828e # load x3 with value 0x219a9e0a501c828e
sw x3, 0(x2) # store 0x219a9e0a501c828e in memory
flw f31, 0(x2) # load 0x219a9e0a501c828e from memory into f31
fnmsub.s f9, f30, f22, f31, dyn # perform operation
fnmsub.s f9, f30, f22, f31, rdn # perform operation
fnmsub.s f9, f30, f22, f31, rmm # perform operation
fnmsub.s f9, f30, f22, f31, rne # perform operation
fnmsub.s f9, f30, f22, f31, rtz # perform operation
fnmsub.s f9, f30, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f30, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f30, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f30, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f30, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f30, f22, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffff)
li x30, 0xf57df6b38b5496c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0xc33f7794d432d913 # load x3 with value 0xc33f7794d432d913
sw x3, 0(x2) # store 0xc33f7794d432d913 in memory
flw f28, 0(x2) # load 0xc33f7794d432d913 from memory into f28
fnmsub.s f30, f19, f5, f28, dyn # perform operation
fnmsub.s f30, f19, f5, f28, rdn # perform operation
fnmsub.s f30, f19, f5, f28, rmm # perform operation
fnmsub.s f30, f19, f5, f28, rne # perform operation
fnmsub.s f30, f19, f5, f28, rtz # perform operation
fnmsub.s f30, f19, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f19, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f19, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f19, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f19, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f19, f5, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x807fffff)
li x18, 0xf3a93b214f296014 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0xa948ce3c5960fd54 # load x3 with value 0xa948ce3c5960fd54
sw x3, 0(x2) # store 0xa948ce3c5960fd54 in memory
flw f7, 0(x2) # load 0xa948ce3c5960fd54 from memory into f7
fnmsub.s f18, f12, f31, f7, dyn # perform operation
fnmsub.s f18, f12, f31, f7, rdn # perform operation
fnmsub.s f18, f12, f31, f7, rmm # perform operation
fnmsub.s f18, f12, f31, f7, rne # perform operation
fnmsub.s f18, f12, f31, f7, rtz # perform operation
fnmsub.s f18, f12, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f12, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f12, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f12, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f12, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f12, f31, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x400000)
li x28, 0xcece25b01d7c5c22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
li x3, 0xab133900da720510 # load x3 with value 0xab133900da720510
sw x3, 0(x2) # store 0xab133900da720510 in memory
flw f22, 0(x2) # load 0xab133900da720510 from memory into f22
fnmsub.s f28, f12, f31, f22, dyn # perform operation
fnmsub.s f28, f12, f31, f22, rdn # perform operation
fnmsub.s f28, f12, f31, f22, rmm # perform operation
fnmsub.s f28, f12, f31, f22, rne # perform operation
fnmsub.s f28, f12, f31, f22, rtz # perform operation
fnmsub.s f28, f12, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f12, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f12, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f12, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f12, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f12, f31, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80400000)
li x26, 0x4044d9a79c8d94f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
li x3, 0xa49bed69dd8e2d53 # load x3 with value 0xa49bed69dd8e2d53
sw x3, 0(x2) # store 0xa49bed69dd8e2d53 in memory
flw f7, 0(x2) # load 0xa49bed69dd8e2d53 from memory into f7
fnmsub.s f26, f6, f23, f7, dyn # perform operation
fnmsub.s f26, f6, f23, f7, rdn # perform operation
fnmsub.s f26, f6, f23, f7, rmm # perform operation
fnmsub.s f26, f6, f23, f7, rne # perform operation
fnmsub.s f26, f6, f23, f7, rtz # perform operation
fnmsub.s f26, f6, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f6, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f6, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f6, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f6, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f6, f23, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x1)
li x10, 0xf55af53f5f9fb9be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x1ef67df6d1d4dd65 # load x3 with value 0x1ef67df6d1d4dd65
sw x3, 0(x2) # store 0x1ef67df6d1d4dd65 in memory
flw f12, 0(x2) # load 0x1ef67df6d1d4dd65 from memory into f12
fnmsub.s f10, f17, f27, f12, dyn # perform operation
fnmsub.s f10, f17, f27, f12, rdn # perform operation
fnmsub.s f10, f17, f27, f12, rmm # perform operation
fnmsub.s f10, f17, f27, f12, rne # perform operation
fnmsub.s f10, f17, f27, f12, rtz # perform operation
fnmsub.s f10, f17, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f17, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f17, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f17, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f17, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f17, f27, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000001)
li x11, 0xc31839ac649c5ec1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0x4d13b1558d213930 # load x3 with value 0x4d13b1558d213930
sw x3, 0(x2) # store 0x4d13b1558d213930 in memory
flw f20, 0(x2) # load 0x4d13b1558d213930 from memory into f20
fnmsub.s f11, f19, f5, f20, dyn # perform operation
fnmsub.s f11, f19, f5, f20, rdn # perform operation
fnmsub.s f11, f19, f5, f20, rmm # perform operation
fnmsub.s f11, f19, f5, f20, rne # perform operation
fnmsub.s f11, f19, f5, f20, rtz # perform operation
fnmsub.s f11, f19, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f19, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f19, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f19, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f19, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f19, f5, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800000)
li x29, 0xb5bfd04244e564f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0xf35261f326e13e62 # load x3 with value 0xf35261f326e13e62
sw x3, 0(x2) # store 0xf35261f326e13e62 in memory
flw f25, 0(x2) # load 0xf35261f326e13e62 from memory into f25
fnmsub.s f29, f10, f4, f25, dyn # perform operation
fnmsub.s f29, f10, f4, f25, rdn # perform operation
fnmsub.s f29, f10, f4, f25, rmm # perform operation
fnmsub.s f29, f10, f4, f25, rne # perform operation
fnmsub.s f29, f10, f4, f25, rtz # perform operation
fnmsub.s f29, f10, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f10, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f10, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f10, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f10, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f10, f4, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff800000)
li x8, 0x71d6dbe2c00b7d43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0xb56b6c049e748d73 # load x3 with value 0xb56b6c049e748d73
sw x3, 0(x2) # store 0xb56b6c049e748d73 in memory
flw f10, 0(x2) # load 0xb56b6c049e748d73 from memory into f10
fnmsub.s f8, f3, f11, f10, dyn # perform operation
fnmsub.s f8, f3, f11, f10, rdn # perform operation
fnmsub.s f8, f3, f11, f10, rmm # perform operation
fnmsub.s f8, f3, f11, f10, rne # perform operation
fnmsub.s f8, f3, f11, f10, rtz # perform operation
fnmsub.s f8, f3, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f3, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f3, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f3, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f3, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f3, f11, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fc00000)
li x29, 0x6990fedc7ade6c6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0x794a4f7b5ddf8805 # load x3 with value 0x794a4f7b5ddf8805
sw x3, 0(x2) # store 0x794a4f7b5ddf8805 in memory
flw f24, 0(x2) # load 0x794a4f7b5ddf8805 from memory into f24
fnmsub.s f29, f10, f11, f24, dyn # perform operation
fnmsub.s f29, f10, f11, f24, rdn # perform operation
fnmsub.s f29, f10, f11, f24, rmm # perform operation
fnmsub.s f29, f10, f11, f24, rne # perform operation
fnmsub.s f29, f10, f11, f24, rtz # perform operation
fnmsub.s f29, f10, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f10, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f10, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f10, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f10, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f10, f11, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffffff)
li x29, 0x867e459ebdb4ed54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0x92e9b16976f35f8d # load x3 with value 0x92e9b16976f35f8d
sw x3, 0(x2) # store 0x92e9b16976f35f8d in memory
flw f28, 0(x2) # load 0x92e9b16976f35f8d from memory into f28
fnmsub.s f29, f23, f3, f28, dyn # perform operation
fnmsub.s f29, f23, f3, f28, rdn # perform operation
fnmsub.s f29, f23, f3, f28, rmm # perform operation
fnmsub.s f29, f23, f3, f28, rne # perform operation
fnmsub.s f29, f23, f3, f28, rtz # perform operation
fnmsub.s f29, f23, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f23, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f23, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f23, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f23, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f23, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800001)
li x18, 0x01dc00df9741d9f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0x3e4115e97f1b20ed # load x3 with value 0x3e4115e97f1b20ed
sw x3, 0(x2) # store 0x3e4115e97f1b20ed in memory
flw f9, 0(x2) # load 0x3e4115e97f1b20ed from memory into f9
fnmsub.s f18, f10, f16, f9, dyn # perform operation
fnmsub.s f18, f10, f16, f9, rdn # perform operation
fnmsub.s f18, f10, f16, f9, rmm # perform operation
fnmsub.s f18, f10, f16, f9, rne # perform operation
fnmsub.s f18, f10, f16, f9, rtz # perform operation
fnmsub.s f18, f10, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f10, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f10, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f10, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f10, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f10, f16, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fbfffff)
li x22, 0x24643afcea63b763 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0xe0c6caef904cd349 # load x3 with value 0xe0c6caef904cd349
sw x3, 0(x2) # store 0xe0c6caef904cd349 in memory
flw f21, 0(x2) # load 0xe0c6caef904cd349 from memory into f21
fnmsub.s f22, f27, f26, f21, dyn # perform operation
fnmsub.s f22, f27, f26, f21, rdn # perform operation
fnmsub.s f22, f27, f26, f21, rmm # perform operation
fnmsub.s f22, f27, f26, f21, rne # perform operation
fnmsub.s f22, f27, f26, f21, rtz # perform operation
fnmsub.s f22, f27, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f27, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f27, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f27, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f27, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f27, f26, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7ef8654f)
li x7, 0x0edcbb3233f28272 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0xc590e522194d6a8d # load x3 with value 0xc590e522194d6a8d
sw x3, 0(x2) # store 0xc590e522194d6a8d in memory
flw f17, 0(x2) # load 0xc590e522194d6a8d from memory into f17
fnmsub.s f7, f27, f9, f17, dyn # perform operation
fnmsub.s f7, f27, f9, f17, rdn # perform operation
fnmsub.s f7, f27, f9, f17, rmm # perform operation
fnmsub.s f7, f27, f9, f17, rne # perform operation
fnmsub.s f7, f27, f9, f17, rtz # perform operation
fnmsub.s f7, f27, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f27, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f27, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f27, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f27, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f27, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x813d9ab0)
li x9, 0xccc79302c66147d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0x4735a824287c3cdf # load x3 with value 0x4735a824287c3cdf
sw x3, 0(x2) # store 0x4735a824287c3cdf in memory
flw f14, 0(x2) # load 0x4735a824287c3cdf from memory into f14
fnmsub.s f9, f27, f26, f14, dyn # perform operation
fnmsub.s f9, f27, f26, f14, rdn # perform operation
fnmsub.s f9, f27, f26, f14, rmm # perform operation
fnmsub.s f9, f27, f26, f14, rne # perform operation
fnmsub.s f9, f27, f26, f14, rtz # perform operation
fnmsub.s f9, f27, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f27, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f27, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f27, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f27, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f27, f26, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x0)
li x9, 0xca9adcf3c6a233eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0x468c3b3e65365fa # load x3 with value 0x468c3b3e65365fa
sw x3, 0(x2) # store 0x468c3b3e65365fa in memory
flw f30, 0(x2) # load 0x468c3b3e65365fa from memory into f30
fnmsub.s f9, f6, f25, f30, dyn # perform operation
fnmsub.s f9, f6, f25, f30, rdn # perform operation
fnmsub.s f9, f6, f25, f30, rmm # perform operation
fnmsub.s f9, f6, f25, f30, rne # perform operation
fnmsub.s f9, f6, f25, f30, rtz # perform operation
fnmsub.s f9, f6, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f6, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f6, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f6, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f6, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f6, f25, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000000)
li x22, 0xfe63690536e18968 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0x2587f47e6467457f # load x3 with value 0x2587f47e6467457f
sw x3, 0(x2) # store 0x2587f47e6467457f in memory
flw f20, 0(x2) # load 0x2587f47e6467457f from memory into f20
fnmsub.s f22, f13, f27, f20, dyn # perform operation
fnmsub.s f22, f13, f27, f20, rdn # perform operation
fnmsub.s f22, f13, f27, f20, rmm # perform operation
fnmsub.s f22, f13, f27, f20, rne # perform operation
fnmsub.s f22, f13, f27, f20, rtz # perform operation
fnmsub.s f22, f13, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f13, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f13, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f13, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f13, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f13, f27, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3f800000)
li x4, 0x96a047e56d29949d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
li x3, 0x662937f04c5cfa2e # load x3 with value 0x662937f04c5cfa2e
sw x3, 0(x2) # store 0x662937f04c5cfa2e in memory
flw f2, 0(x2) # load 0x662937f04c5cfa2e from memory into f2
fnmsub.s f4, f24, f10, f2, dyn # perform operation
fnmsub.s f4, f24, f10, f2, rdn # perform operation
fnmsub.s f4, f24, f10, f2, rmm # perform operation
fnmsub.s f4, f24, f10, f2, rne # perform operation
fnmsub.s f4, f24, f10, f2, rtz # perform operation
fnmsub.s f4, f24, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f24, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f24, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f24, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f24, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f24, f10, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbf800000)
li x6, 0x6ca61caf9037b81f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0xfd02b42e331a0750 # load x3 with value 0xfd02b42e331a0750
sw x3, 0(x2) # store 0xfd02b42e331a0750 in memory
flw f10, 0(x2) # load 0xfd02b42e331a0750 from memory into f10
fnmsub.s f6, f9, f18, f10, dyn # perform operation
fnmsub.s f6, f9, f18, f10, rdn # perform operation
fnmsub.s f6, f9, f18, f10, rmm # perform operation
fnmsub.s f6, f9, f18, f10, rne # perform operation
fnmsub.s f6, f9, f18, f10, rtz # perform operation
fnmsub.s f6, f9, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f9, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3fc00000)
li x20, 0xd587beaea5dca1bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0x3241ce8479b97114 # load x3 with value 0x3241ce8479b97114
sw x3, 0(x2) # store 0x3241ce8479b97114 in memory
flw f17, 0(x2) # load 0x3241ce8479b97114 from memory into f17
fnmsub.s f20, f8, f16, f17, dyn # perform operation
fnmsub.s f20, f8, f16, f17, rdn # perform operation
fnmsub.s f20, f8, f16, f17, rmm # perform operation
fnmsub.s f20, f8, f16, f17, rne # perform operation
fnmsub.s f20, f8, f16, f17, rtz # perform operation
fnmsub.s f20, f8, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f8, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f8, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f8, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f8, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f8, f16, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbfc00000)
li x29, 0x563b8bea37d6e60b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
li x3, 0xd07e66b6a0c61aab # load x3 with value 0xd07e66b6a0c61aab
sw x3, 0(x2) # store 0xd07e66b6a0c61aab in memory
flw f15, 0(x2) # load 0xd07e66b6a0c61aab from memory into f15
fnmsub.s f29, f22, f12, f15, dyn # perform operation
fnmsub.s f29, f22, f12, f15, rdn # perform operation
fnmsub.s f29, f22, f12, f15, rmm # perform operation
fnmsub.s f29, f22, f12, f15, rne # perform operation
fnmsub.s f29, f22, f12, f15, rtz # perform operation
fnmsub.s f29, f22, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f22, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f22, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f22, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f22, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f22, f12, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x40000000)
li x7, 0xe7a49a153f660040 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0xa34b9287513aee44 # load x3 with value 0xa34b9287513aee44
sw x3, 0(x2) # store 0xa34b9287513aee44 in memory
flw f23, 0(x2) # load 0xa34b9287513aee44 from memory into f23
fnmsub.s f7, f12, f15, f23, dyn # perform operation
fnmsub.s f7, f12, f15, f23, rdn # perform operation
fnmsub.s f7, f12, f15, f23, rmm # perform operation
fnmsub.s f7, f12, f15, f23, rne # perform operation
fnmsub.s f7, f12, f15, f23, rtz # perform operation
fnmsub.s f7, f12, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f12, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f12, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f12, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f12, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f12, f15, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xc0000000)
li x29, 0xd95786da712e6bf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0x58affe21dd305c39 # load x3 with value 0x58affe21dd305c39
sw x3, 0(x2) # store 0x58affe21dd305c39 in memory
flw f2, 0(x2) # load 0x58affe21dd305c39 from memory into f2
fnmsub.s f29, f6, f3, f2, dyn # perform operation
fnmsub.s f29, f6, f3, f2, rdn # perform operation
fnmsub.s f29, f6, f3, f2, rmm # perform operation
fnmsub.s f29, f6, f3, f2, rne # perform operation
fnmsub.s f29, f6, f3, f2, rtz # perform operation
fnmsub.s f29, f6, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f6, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f6, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f6, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f6, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f6, f3, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x800000)
li x28, 0x2421beaf7b66224b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x355687ba67769102 # load x3 with value 0x355687ba67769102
sw x3, 0(x2) # store 0x355687ba67769102 in memory
flw f12, 0(x2) # load 0x355687ba67769102 from memory into f12
fnmsub.s f28, f10, f13, f12, dyn # perform operation
fnmsub.s f28, f10, f13, f12, rdn # perform operation
fnmsub.s f28, f10, f13, f12, rmm # perform operation
fnmsub.s f28, f10, f13, f12, rne # perform operation
fnmsub.s f28, f10, f13, f12, rtz # perform operation
fnmsub.s f28, f10, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f10, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f10, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f10, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f10, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f10, f13, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80800000)
li x29, 0x924f9a8fdb8f15e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
li x3, 0x5c1222beb415cffe # load x3 with value 0x5c1222beb415cffe
sw x3, 0(x2) # store 0x5c1222beb415cffe in memory
flw f27, 0(x2) # load 0x5c1222beb415cffe from memory into f27
fnmsub.s f29, f23, f10, f27, dyn # perform operation
fnmsub.s f29, f23, f10, f27, rdn # perform operation
fnmsub.s f29, f23, f10, f27, rmm # perform operation
fnmsub.s f29, f23, f10, f27, rne # perform operation
fnmsub.s f29, f23, f10, f27, rtz # perform operation
fnmsub.s f29, f23, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f23, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f23, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f23, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f23, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f23, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f7fffff)
li x17, 0xe2a58f3dd76b40e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
li x3, 0xf74ca8648e027480 # load x3 with value 0xf74ca8648e027480
sw x3, 0(x2) # store 0xf74ca8648e027480 in memory
flw f27, 0(x2) # load 0xf74ca8648e027480 from memory into f27
fnmsub.s f17, f8, f5, f27, dyn # perform operation
fnmsub.s f17, f8, f5, f27, rdn # perform operation
fnmsub.s f17, f8, f5, f27, rmm # perform operation
fnmsub.s f17, f8, f5, f27, rne # perform operation
fnmsub.s f17, f8, f5, f27, rtz # perform operation
fnmsub.s f17, f8, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f8, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f8, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f8, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f8, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f8, f5, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff7fffff)
li x2, 0x2c00b79868b01820 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0xa546dc227aa30b28 # load x3 with value 0xa546dc227aa30b28
sw x3, 0(x2) # store 0xa546dc227aa30b28 in memory
flw f20, 0(x2) # load 0xa546dc227aa30b28 from memory into f20
fnmsub.s f2, f14, f26, f20, dyn # perform operation
fnmsub.s f2, f14, f26, f20, rdn # perform operation
fnmsub.s f2, f14, f26, f20, rmm # perform operation
fnmsub.s f2, f14, f26, f20, rne # perform operation
fnmsub.s f2, f14, f26, f20, rtz # perform operation
fnmsub.s f2, f14, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f14, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f14, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f14, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f14, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f14, f26, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffff)
li x31, 0xe097e6cadaae511d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0x8dc86e780715f57 # load x3 with value 0x8dc86e780715f57
sw x3, 0(x2) # store 0x8dc86e780715f57 in memory
flw f24, 0(x2) # load 0x8dc86e780715f57 from memory into f24
fnmsub.s f31, f25, f10, f24, dyn # perform operation
fnmsub.s f31, f25, f10, f24, rdn # perform operation
fnmsub.s f31, f25, f10, f24, rmm # perform operation
fnmsub.s f31, f25, f10, f24, rne # perform operation
fnmsub.s f31, f25, f10, f24, rtz # perform operation
fnmsub.s f31, f25, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f25, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f25, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f25, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f25, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f25, f10, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x807fffff)
li x8, 0x449393e5a46944b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0x6ae3e9f8b967c12d # load x3 with value 0x6ae3e9f8b967c12d
sw x3, 0(x2) # store 0x6ae3e9f8b967c12d in memory
flw f19, 0(x2) # load 0x6ae3e9f8b967c12d from memory into f19
fnmsub.s f8, f20, f5, f19, dyn # perform operation
fnmsub.s f8, f20, f5, f19, rdn # perform operation
fnmsub.s f8, f20, f5, f19, rmm # perform operation
fnmsub.s f8, f20, f5, f19, rne # perform operation
fnmsub.s f8, f20, f5, f19, rtz # perform operation
fnmsub.s f8, f20, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f20, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f20, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f20, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f20, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f20, f5, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x400000)
li x8, 0x2f097477c554b8cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0x25a919f3e8820618 # load x3 with value 0x25a919f3e8820618
sw x3, 0(x2) # store 0x25a919f3e8820618 in memory
flw f29, 0(x2) # load 0x25a919f3e8820618 from memory into f29
fnmsub.s f8, f3, f11, f29, dyn # perform operation
fnmsub.s f8, f3, f11, f29, rdn # perform operation
fnmsub.s f8, f3, f11, f29, rmm # perform operation
fnmsub.s f8, f3, f11, f29, rne # perform operation
fnmsub.s f8, f3, f11, f29, rtz # perform operation
fnmsub.s f8, f3, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f3, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f3, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f3, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f3, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f3, f11, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80400000)
li x22, 0xfef85204eb0b3016 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0x7d3053cfbaa6b58c # load x3 with value 0x7d3053cfbaa6b58c
sw x3, 0(x2) # store 0x7d3053cfbaa6b58c in memory
flw f5, 0(x2) # load 0x7d3053cfbaa6b58c from memory into f5
fnmsub.s f22, f20, f18, f5, dyn # perform operation
fnmsub.s f22, f20, f18, f5, rdn # perform operation
fnmsub.s f22, f20, f18, f5, rmm # perform operation
fnmsub.s f22, f20, f18, f5, rne # perform operation
fnmsub.s f22, f20, f18, f5, rtz # perform operation
fnmsub.s f22, f20, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f20, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f20, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f20, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f20, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f20, f18, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x1)
li x16, 0xe446948ceaf6ff02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0xc7bd89367cdb3f9 # load x3 with value 0xc7bd89367cdb3f9
sw x3, 0(x2) # store 0xc7bd89367cdb3f9 in memory
flw f3, 0(x2) # load 0xc7bd89367cdb3f9 from memory into f3
fnmsub.s f16, f10, f19, f3, dyn # perform operation
fnmsub.s f16, f10, f19, f3, rdn # perform operation
fnmsub.s f16, f10, f19, f3, rmm # perform operation
fnmsub.s f16, f10, f19, f3, rne # perform operation
fnmsub.s f16, f10, f19, f3, rtz # perform operation
fnmsub.s f16, f10, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f10, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f10, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f10, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f10, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f10, f19, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000001)
li x16, 0x4ef7acc2f0cb0c1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
li x3, 0xacae26b113077fc5 # load x3 with value 0xacae26b113077fc5
sw x3, 0(x2) # store 0xacae26b113077fc5 in memory
flw f17, 0(x2) # load 0xacae26b113077fc5 from memory into f17
fnmsub.s f16, f1, f13, f17, dyn # perform operation
fnmsub.s f16, f1, f13, f17, rdn # perform operation
fnmsub.s f16, f1, f13, f17, rmm # perform operation
fnmsub.s f16, f1, f13, f17, rne # perform operation
fnmsub.s f16, f1, f13, f17, rtz # perform operation
fnmsub.s f16, f1, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f1, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f1, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f1, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f1, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f1, f13, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800000)
li x12, 0xfb7d654a8e53deb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x6a20167d29d5fa6 # load x3 with value 0x6a20167d29d5fa6
sw x3, 0(x2) # store 0x6a20167d29d5fa6 in memory
flw f1, 0(x2) # load 0x6a20167d29d5fa6 from memory into f1
fnmsub.s f12, f21, f13, f1, dyn # perform operation
fnmsub.s f12, f21, f13, f1, rdn # perform operation
fnmsub.s f12, f21, f13, f1, rmm # perform operation
fnmsub.s f12, f21, f13, f1, rne # perform operation
fnmsub.s f12, f21, f13, f1, rtz # perform operation
fnmsub.s f12, f21, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f21, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f21, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f21, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f21, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f21, f13, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff800000)
li x9, 0x35863f718bcfa1a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0x7866bccf4603c8f # load x3 with value 0x7866bccf4603c8f
sw x3, 0(x2) # store 0x7866bccf4603c8f in memory
flw f29, 0(x2) # load 0x7866bccf4603c8f from memory into f29
fnmsub.s f9, f18, f10, f29, dyn # perform operation
fnmsub.s f9, f18, f10, f29, rdn # perform operation
fnmsub.s f9, f18, f10, f29, rmm # perform operation
fnmsub.s f9, f18, f10, f29, rne # perform operation
fnmsub.s f9, f18, f10, f29, rtz # perform operation
fnmsub.s f9, f18, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f18, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f18, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f18, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f18, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f18, f10, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fc00000)
li x10, 0x2c8668b3c55359a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0x65884d9c0c55f50c # load x3 with value 0x65884d9c0c55f50c
sw x3, 0(x2) # store 0x65884d9c0c55f50c in memory
flw f11, 0(x2) # load 0x65884d9c0c55f50c from memory into f11
fnmsub.s f10, f25, f22, f11, dyn # perform operation
fnmsub.s f10, f25, f22, f11, rdn # perform operation
fnmsub.s f10, f25, f22, f11, rmm # perform operation
fnmsub.s f10, f25, f22, f11, rne # perform operation
fnmsub.s f10, f25, f22, f11, rtz # perform operation
fnmsub.s f10, f25, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f25, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f25, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f25, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f25, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f25, f22, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffffff)
li x8, 0x05755d6955dfcbc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0xa082adca73170012 # load x3 with value 0xa082adca73170012
sw x3, 0(x2) # store 0xa082adca73170012 in memory
flw f18, 0(x2) # load 0xa082adca73170012 from memory into f18
fnmsub.s f8, f15, f1, f18, dyn # perform operation
fnmsub.s f8, f15, f1, f18, rdn # perform operation
fnmsub.s f8, f15, f1, f18, rmm # perform operation
fnmsub.s f8, f15, f1, f18, rne # perform operation
fnmsub.s f8, f15, f1, f18, rtz # perform operation
fnmsub.s f8, f15, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f15, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f15, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f15, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f15, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f15, f1, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800001)
li x10, 0x84b3ceeaa8932b86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
li x3, 0x1ebee617523563fc # load x3 with value 0x1ebee617523563fc
sw x3, 0(x2) # store 0x1ebee617523563fc in memory
flw f16, 0(x2) # load 0x1ebee617523563fc from memory into f16
fnmsub.s f10, f20, f31, f16, dyn # perform operation
fnmsub.s f10, f20, f31, f16, rdn # perform operation
fnmsub.s f10, f20, f31, f16, rmm # perform operation
fnmsub.s f10, f20, f31, f16, rne # perform operation
fnmsub.s f10, f20, f31, f16, rtz # perform operation
fnmsub.s f10, f20, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f20, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f20, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f20, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f20, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f20, f31, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fbfffff)
li x16, 0xb415b010e13fae28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0xc8c8691c5b1b4292 # load x3 with value 0xc8c8691c5b1b4292
sw x3, 0(x2) # store 0xc8c8691c5b1b4292 in memory
flw f25, 0(x2) # load 0xc8c8691c5b1b4292 from memory into f25
fnmsub.s f16, f13, f23, f25, dyn # perform operation
fnmsub.s f16, f13, f23, f25, rdn # perform operation
fnmsub.s f16, f13, f23, f25, rmm # perform operation
fnmsub.s f16, f13, f23, f25, rne # perform operation
fnmsub.s f16, f13, f23, f25, rtz # perform operation
fnmsub.s f16, f13, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f13, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f13, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f13, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f13, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f13, f23, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7ef8654f)
li x8, 0x0941ead491657ce4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x8b98d76c548768c8 # load x3 with value 0x8b98d76c548768c8
sw x3, 0(x2) # store 0x8b98d76c548768c8 in memory
flw f28, 0(x2) # load 0x8b98d76c548768c8 from memory into f28
fnmsub.s f8, f23, f29, f28, dyn # perform operation
fnmsub.s f8, f23, f29, f28, rdn # perform operation
fnmsub.s f8, f23, f29, f28, rmm # perform operation
fnmsub.s f8, f23, f29, f28, rne # perform operation
fnmsub.s f8, f23, f29, f28, rtz # perform operation
fnmsub.s f8, f23, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f23, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f23, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f23, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f23, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f23, f29, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x813d9ab0)
li x21, 0xcfa9977f5557daeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0x3bb1c4cc49be1fe2 # load x3 with value 0x3bb1c4cc49be1fe2
sw x3, 0(x2) # store 0x3bb1c4cc49be1fe2 in memory
flw f23, 0(x2) # load 0x3bb1c4cc49be1fe2 from memory into f23
fnmsub.s f21, f30, f19, f23, dyn # perform operation
fnmsub.s f21, f30, f19, f23, rdn # perform operation
fnmsub.s f21, f30, f19, f23, rmm # perform operation
fnmsub.s f21, f30, f19, f23, rne # perform operation
fnmsub.s f21, f30, f19, f23, rtz # perform operation
fnmsub.s f21, f30, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f30, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f30, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f30, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f30, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f30, f19, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x0)
li x24, 0xded8198ef260be6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x10269572b7f4d728 # load x3 with value 0x10269572b7f4d728
sw x3, 0(x2) # store 0x10269572b7f4d728 in memory
flw f26, 0(x2) # load 0x10269572b7f4d728 from memory into f26
fnmsub.s f24, f11, f6, f26, dyn # perform operation
fnmsub.s f24, f11, f6, f26, rdn # perform operation
fnmsub.s f24, f11, f6, f26, rmm # perform operation
fnmsub.s f24, f11, f6, f26, rne # perform operation
fnmsub.s f24, f11, f6, f26, rtz # perform operation
fnmsub.s f24, f11, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f11, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f11, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f11, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f11, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f11, f6, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000000)
li x6, 0xcb9406a1000c9db0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
li x3, 0x72845db95d48a77a # load x3 with value 0x72845db95d48a77a
sw x3, 0(x2) # store 0x72845db95d48a77a in memory
flw f13, 0(x2) # load 0x72845db95d48a77a from memory into f13
fnmsub.s f6, f12, f26, f13, dyn # perform operation
fnmsub.s f6, f12, f26, f13, rdn # perform operation
fnmsub.s f6, f12, f26, f13, rmm # perform operation
fnmsub.s f6, f12, f26, f13, rne # perform operation
fnmsub.s f6, f12, f26, f13, rtz # perform operation
fnmsub.s f6, f12, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f12, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f12, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f12, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f12, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f12, f26, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3f800000)
li x9, 0x1db35925a8d99f60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0xa623c837cca12354 # load x3 with value 0xa623c837cca12354
sw x3, 0(x2) # store 0xa623c837cca12354 in memory
flw f1, 0(x2) # load 0xa623c837cca12354 from memory into f1
fnmsub.s f9, f7, f8, f1, dyn # perform operation
fnmsub.s f9, f7, f8, f1, rdn # perform operation
fnmsub.s f9, f7, f8, f1, rmm # perform operation
fnmsub.s f9, f7, f8, f1, rne # perform operation
fnmsub.s f9, f7, f8, f1, rtz # perform operation
fnmsub.s f9, f7, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f7, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f7, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f7, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f7, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f7, f8, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbf800000)
li x12, 0x840cce6dcb0197f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0xeeedb38d1f506ff6 # load x3 with value 0xeeedb38d1f506ff6
sw x3, 0(x2) # store 0xeeedb38d1f506ff6 in memory
flw f21, 0(x2) # load 0xeeedb38d1f506ff6 from memory into f21
fnmsub.s f12, f26, f10, f21, dyn # perform operation
fnmsub.s f12, f26, f10, f21, rdn # perform operation
fnmsub.s f12, f26, f10, f21, rmm # perform operation
fnmsub.s f12, f26, f10, f21, rne # perform operation
fnmsub.s f12, f26, f10, f21, rtz # perform operation
fnmsub.s f12, f26, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f26, f10, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3fc00000)
li x14, 0x43695ce88500406c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0x99b40e29bb94373e # load x3 with value 0x99b40e29bb94373e
sw x3, 0(x2) # store 0x99b40e29bb94373e in memory
flw f4, 0(x2) # load 0x99b40e29bb94373e from memory into f4
fnmsub.s f14, f6, f10, f4, dyn # perform operation
fnmsub.s f14, f6, f10, f4, rdn # perform operation
fnmsub.s f14, f6, f10, f4, rmm # perform operation
fnmsub.s f14, f6, f10, f4, rne # perform operation
fnmsub.s f14, f6, f10, f4, rtz # perform operation
fnmsub.s f14, f6, f10, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f6, f10, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f6, f10, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f6, f10, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f6, f10, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f6, f10, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbfc00000)
li x18, 0xc2074a19d34b51b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
li x3, 0x31b14ce4f6ae5fa5 # load x3 with value 0x31b14ce4f6ae5fa5
sw x3, 0(x2) # store 0x31b14ce4f6ae5fa5 in memory
flw f26, 0(x2) # load 0x31b14ce4f6ae5fa5 from memory into f26
fnmsub.s f18, f30, f22, f26, dyn # perform operation
fnmsub.s f18, f30, f22, f26, rdn # perform operation
fnmsub.s f18, f30, f22, f26, rmm # perform operation
fnmsub.s f18, f30, f22, f26, rne # perform operation
fnmsub.s f18, f30, f22, f26, rtz # perform operation
fnmsub.s f18, f30, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f30, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f30, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f30, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f30, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f30, f22, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x40000000)
li x2, 0xe7884904cc786377 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0x8878c2109648d363 # load x3 with value 0x8878c2109648d363
sw x3, 0(x2) # store 0x8878c2109648d363 in memory
flw f9, 0(x2) # load 0x8878c2109648d363 from memory into f9
fnmsub.s f2, f31, f10, f9, dyn # perform operation
fnmsub.s f2, f31, f10, f9, rdn # perform operation
fnmsub.s f2, f31, f10, f9, rmm # perform operation
fnmsub.s f2, f31, f10, f9, rne # perform operation
fnmsub.s f2, f31, f10, f9, rtz # perform operation
fnmsub.s f2, f31, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f31, f10, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xc0000000)
li x7, 0x16423d9f7fc994c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
li x3, 0xd4262433ec010ab4 # load x3 with value 0xd4262433ec010ab4
sw x3, 0(x2) # store 0xd4262433ec010ab4 in memory
flw f12, 0(x2) # load 0xd4262433ec010ab4 from memory into f12
fnmsub.s f7, f17, f30, f12, dyn # perform operation
fnmsub.s f7, f17, f30, f12, rdn # perform operation
fnmsub.s f7, f17, f30, f12, rmm # perform operation
fnmsub.s f7, f17, f30, f12, rne # perform operation
fnmsub.s f7, f17, f30, f12, rtz # perform operation
fnmsub.s f7, f17, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f17, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x800000)
li x20, 0x9a11c2f3f7e135fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
li x3, 0x512ba6bbd625b849 # load x3 with value 0x512ba6bbd625b849
sw x3, 0(x2) # store 0x512ba6bbd625b849 in memory
flw f11, 0(x2) # load 0x512ba6bbd625b849 from memory into f11
fnmsub.s f20, f28, f10, f11, dyn # perform operation
fnmsub.s f20, f28, f10, f11, rdn # perform operation
fnmsub.s f20, f28, f10, f11, rmm # perform operation
fnmsub.s f20, f28, f10, f11, rne # perform operation
fnmsub.s f20, f28, f10, f11, rtz # perform operation
fnmsub.s f20, f28, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f28, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f28, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f28, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f28, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f28, f10, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80800000)
li x15, 0x81caf192cf27e3ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0xd84dc99dba6a2140 # load x3 with value 0xd84dc99dba6a2140
sw x3, 0(x2) # store 0xd84dc99dba6a2140 in memory
flw f19, 0(x2) # load 0xd84dc99dba6a2140 from memory into f19
fnmsub.s f15, f9, f31, f19, dyn # perform operation
fnmsub.s f15, f9, f31, f19, rdn # perform operation
fnmsub.s f15, f9, f31, f19, rmm # perform operation
fnmsub.s f15, f9, f31, f19, rne # perform operation
fnmsub.s f15, f9, f31, f19, rtz # perform operation
fnmsub.s f15, f9, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f9, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f9, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f9, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f9, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f9, f31, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f7fffff)
li x13, 0xaec8ffe6dd923803 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x88883c5ebb6e2273 # load x3 with value 0x88883c5ebb6e2273
sw x3, 0(x2) # store 0x88883c5ebb6e2273 in memory
flw f4, 0(x2) # load 0x88883c5ebb6e2273 from memory into f4
fnmsub.s f13, f8, f21, f4, dyn # perform operation
fnmsub.s f13, f8, f21, f4, rdn # perform operation
fnmsub.s f13, f8, f21, f4, rmm # perform operation
fnmsub.s f13, f8, f21, f4, rne # perform operation
fnmsub.s f13, f8, f21, f4, rtz # perform operation
fnmsub.s f13, f8, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f8, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f8, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f8, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f8, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f8, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff7fffff)
li x20, 0xfce2b0f4f27e2219 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0x90464d032ff610c8 # load x3 with value 0x90464d032ff610c8
sw x3, 0(x2) # store 0x90464d032ff610c8 in memory
flw f7, 0(x2) # load 0x90464d032ff610c8 from memory into f7
fnmsub.s f20, f28, f6, f7, dyn # perform operation
fnmsub.s f20, f28, f6, f7, rdn # perform operation
fnmsub.s f20, f28, f6, f7, rmm # perform operation
fnmsub.s f20, f28, f6, f7, rne # perform operation
fnmsub.s f20, f28, f6, f7, rtz # perform operation
fnmsub.s f20, f28, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f28, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f28, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f28, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f28, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f28, f6, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffff)
li x29, 0xd98ff7ecf1c7ab7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0xe33080cc9db32c9a # load x3 with value 0xe33080cc9db32c9a
sw x3, 0(x2) # store 0xe33080cc9db32c9a in memory
flw f19, 0(x2) # load 0xe33080cc9db32c9a from memory into f19
fnmsub.s f29, f6, f25, f19, dyn # perform operation
fnmsub.s f29, f6, f25, f19, rdn # perform operation
fnmsub.s f29, f6, f25, f19, rmm # perform operation
fnmsub.s f29, f6, f25, f19, rne # perform operation
fnmsub.s f29, f6, f25, f19, rtz # perform operation
fnmsub.s f29, f6, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f6, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f6, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f6, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f6, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f6, f25, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x807fffff)
li x1, 0x80b8ac00dbcb5e83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x100f74ecf3d4acbb # load x3 with value 0x100f74ecf3d4acbb
sw x3, 0(x2) # store 0x100f74ecf3d4acbb in memory
flw f25, 0(x2) # load 0x100f74ecf3d4acbb from memory into f25
fnmsub.s f1, f23, f30, f25, dyn # perform operation
fnmsub.s f1, f23, f30, f25, rdn # perform operation
fnmsub.s f1, f23, f30, f25, rmm # perform operation
fnmsub.s f1, f23, f30, f25, rne # perform operation
fnmsub.s f1, f23, f30, f25, rtz # perform operation
fnmsub.s f1, f23, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f23, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f23, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f23, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f23, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f23, f30, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x400000)
li x7, 0x3d196ee5698a5825 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0xe965a2a2638ce3df # load x3 with value 0xe965a2a2638ce3df
sw x3, 0(x2) # store 0xe965a2a2638ce3df in memory
flw f28, 0(x2) # load 0xe965a2a2638ce3df from memory into f28
fnmsub.s f7, f20, f5, f28, dyn # perform operation
fnmsub.s f7, f20, f5, f28, rdn # perform operation
fnmsub.s f7, f20, f5, f28, rmm # perform operation
fnmsub.s f7, f20, f5, f28, rne # perform operation
fnmsub.s f7, f20, f5, f28, rtz # perform operation
fnmsub.s f7, f20, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f20, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f20, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f20, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f20, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f20, f5, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80400000)
li x15, 0x49aa915f8fe8a855 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0x244e46db993510c4 # load x3 with value 0x244e46db993510c4
sw x3, 0(x2) # store 0x244e46db993510c4 in memory
flw f16, 0(x2) # load 0x244e46db993510c4 from memory into f16
fnmsub.s f15, f9, f10, f16, dyn # perform operation
fnmsub.s f15, f9, f10, f16, rdn # perform operation
fnmsub.s f15, f9, f10, f16, rmm # perform operation
fnmsub.s f15, f9, f10, f16, rne # perform operation
fnmsub.s f15, f9, f10, f16, rtz # perform operation
fnmsub.s f15, f9, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f9, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f9, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f9, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f9, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f9, f10, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x1)
li x26, 0xfe1eadf192cc7a4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0x5494d727157b5193 # load x3 with value 0x5494d727157b5193
sw x3, 0(x2) # store 0x5494d727157b5193 in memory
flw f3, 0(x2) # load 0x5494d727157b5193 from memory into f3
fnmsub.s f26, f12, f11, f3, dyn # perform operation
fnmsub.s f26, f12, f11, f3, rdn # perform operation
fnmsub.s f26, f12, f11, f3, rmm # perform operation
fnmsub.s f26, f12, f11, f3, rne # perform operation
fnmsub.s f26, f12, f11, f3, rtz # perform operation
fnmsub.s f26, f12, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f12, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f12, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f12, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f12, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f12, f11, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000001)
li x26, 0x81ff91a8b4604275 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0x1b3157ea60f26421 # load x3 with value 0x1b3157ea60f26421
sw x3, 0(x2) # store 0x1b3157ea60f26421 in memory
flw f3, 0(x2) # load 0x1b3157ea60f26421 from memory into f3
fnmsub.s f26, f20, f22, f3, dyn # perform operation
fnmsub.s f26, f20, f22, f3, rdn # perform operation
fnmsub.s f26, f20, f22, f3, rmm # perform operation
fnmsub.s f26, f20, f22, f3, rne # perform operation
fnmsub.s f26, f20, f22, f3, rtz # perform operation
fnmsub.s f26, f20, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f20, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f20, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f20, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f20, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f20, f22, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800000)
li x21, 0x9e21807e040191cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0xe5513e1e09413d33 # load x3 with value 0xe5513e1e09413d33
sw x3, 0(x2) # store 0xe5513e1e09413d33 in memory
flw f23, 0(x2) # load 0xe5513e1e09413d33 from memory into f23
fnmsub.s f21, f3, f22, f23, dyn # perform operation
fnmsub.s f21, f3, f22, f23, rdn # perform operation
fnmsub.s f21, f3, f22, f23, rmm # perform operation
fnmsub.s f21, f3, f22, f23, rne # perform operation
fnmsub.s f21, f3, f22, f23, rtz # perform operation
fnmsub.s f21, f3, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f3, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f3, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f3, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f3, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f3, f22, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff800000)
li x13, 0x4a8b350790fca659 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0x23b6f707ed09923c # load x3 with value 0x23b6f707ed09923c
sw x3, 0(x2) # store 0x23b6f707ed09923c in memory
flw f23, 0(x2) # load 0x23b6f707ed09923c from memory into f23
fnmsub.s f13, f12, f30, f23, dyn # perform operation
fnmsub.s f13, f12, f30, f23, rdn # perform operation
fnmsub.s f13, f12, f30, f23, rmm # perform operation
fnmsub.s f13, f12, f30, f23, rne # perform operation
fnmsub.s f13, f12, f30, f23, rtz # perform operation
fnmsub.s f13, f12, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f12, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f12, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f12, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f12, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f12, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fc00000)
li x28, 0x1f5ac5680a30ba78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0xe99f9caf62ea56df # load x3 with value 0xe99f9caf62ea56df
sw x3, 0(x2) # store 0xe99f9caf62ea56df in memory
flw f7, 0(x2) # load 0xe99f9caf62ea56df from memory into f7
fnmsub.s f28, f27, f19, f7, dyn # perform operation
fnmsub.s f28, f27, f19, f7, rdn # perform operation
fnmsub.s f28, f27, f19, f7, rmm # perform operation
fnmsub.s f28, f27, f19, f7, rne # perform operation
fnmsub.s f28, f27, f19, f7, rtz # perform operation
fnmsub.s f28, f27, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f27, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f27, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f27, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f27, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f27, f19, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffffff)
li x18, 0x61c927d8f52512e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0x4b60fa062a2e9482 # load x3 with value 0x4b60fa062a2e9482
sw x3, 0(x2) # store 0x4b60fa062a2e9482 in memory
flw f28, 0(x2) # load 0x4b60fa062a2e9482 from memory into f28
fnmsub.s f18, f22, f17, f28, dyn # perform operation
fnmsub.s f18, f22, f17, f28, rdn # perform operation
fnmsub.s f18, f22, f17, f28, rmm # perform operation
fnmsub.s f18, f22, f17, f28, rne # perform operation
fnmsub.s f18, f22, f17, f28, rtz # perform operation
fnmsub.s f18, f22, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f22, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f22, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f22, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f22, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f22, f17, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800001)
li x4, 0x14aa9c45b0de1388 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0x66fe87f2a67e2be3 # load x3 with value 0x66fe87f2a67e2be3
sw x3, 0(x2) # store 0x66fe87f2a67e2be3 in memory
flw f26, 0(x2) # load 0x66fe87f2a67e2be3 from memory into f26
fnmsub.s f4, f28, f10, f26, dyn # perform operation
fnmsub.s f4, f28, f10, f26, rdn # perform operation
fnmsub.s f4, f28, f10, f26, rmm # perform operation
fnmsub.s f4, f28, f10, f26, rne # perform operation
fnmsub.s f4, f28, f10, f26, rtz # perform operation
fnmsub.s f4, f28, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f28, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f28, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f28, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f28, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f28, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fbfffff)
li x3, 0xca49d330c7556939 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0xdd9ec1c5da234908 # load x3 with value 0xdd9ec1c5da234908
sw x3, 0(x2) # store 0xdd9ec1c5da234908 in memory
flw f4, 0(x2) # load 0xdd9ec1c5da234908 from memory into f4
fnmsub.s f3, f14, f27, f4, dyn # perform operation
fnmsub.s f3, f14, f27, f4, rdn # perform operation
fnmsub.s f3, f14, f27, f4, rmm # perform operation
fnmsub.s f3, f14, f27, f4, rne # perform operation
fnmsub.s f3, f14, f27, f4, rtz # perform operation
fnmsub.s f3, f14, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f14, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f14, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f14, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f14, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f14, f27, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7ef8654f)
li x26, 0xcda5703e12075e80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0xb91c97a4d0101921 # load x3 with value 0xb91c97a4d0101921
sw x3, 0(x2) # store 0xb91c97a4d0101921 in memory
flw f20, 0(x2) # load 0xb91c97a4d0101921 from memory into f20
fnmsub.s f26, f22, f3, f20, dyn # perform operation
fnmsub.s f26, f22, f3, f20, rdn # perform operation
fnmsub.s f26, f22, f3, f20, rmm # perform operation
fnmsub.s f26, f22, f3, f20, rne # perform operation
fnmsub.s f26, f22, f3, f20, rtz # perform operation
fnmsub.s f26, f22, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f22, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f22, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f22, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f22, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f22, f3, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x813d9ab0)
li x27, 0x2227b19cf02d08b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0x8176af7a0009c5d0 # load x3 with value 0x8176af7a0009c5d0
sw x3, 0(x2) # store 0x8176af7a0009c5d0 in memory
flw f14, 0(x2) # load 0x8176af7a0009c5d0 from memory into f14
fnmsub.s f27, f6, f4, f14, dyn # perform operation
fnmsub.s f27, f6, f4, f14, rdn # perform operation
fnmsub.s f27, f6, f4, f14, rmm # perform operation
fnmsub.s f27, f6, f4, f14, rne # perform operation
fnmsub.s f27, f6, f4, f14, rtz # perform operation
fnmsub.s f27, f6, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f6, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f6, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f6, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f6, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f6, f4, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x0)
li x17, 0x958af5cbd0938142 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0xffe950f2fcbed1cd # load x3 with value 0xffe950f2fcbed1cd
sw x3, 0(x2) # store 0xffe950f2fcbed1cd in memory
flw f24, 0(x2) # load 0xffe950f2fcbed1cd from memory into f24
fnmsub.s f17, f18, f15, f24, dyn # perform operation
fnmsub.s f17, f18, f15, f24, rdn # perform operation
fnmsub.s f17, f18, f15, f24, rmm # perform operation
fnmsub.s f17, f18, f15, f24, rne # perform operation
fnmsub.s f17, f18, f15, f24, rtz # perform operation
fnmsub.s f17, f18, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f18, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f18, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f18, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f18, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f18, f15, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000000)
li x20, 0xd22322ff62472842 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0xb06192a8a0d842a8 # load x3 with value 0xb06192a8a0d842a8
sw x3, 0(x2) # store 0xb06192a8a0d842a8 in memory
flw f6, 0(x2) # load 0xb06192a8a0d842a8 from memory into f6
fnmsub.s f20, f23, f29, f6, dyn # perform operation
fnmsub.s f20, f23, f29, f6, rdn # perform operation
fnmsub.s f20, f23, f29, f6, rmm # perform operation
fnmsub.s f20, f23, f29, f6, rne # perform operation
fnmsub.s f20, f23, f29, f6, rtz # perform operation
fnmsub.s f20, f23, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f23, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f23, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f23, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f23, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f23, f29, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3f800000)
li x23, 0xa3063582effe1ade # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
li x3, 0x6ed6331fb7442794 # load x3 with value 0x6ed6331fb7442794
sw x3, 0(x2) # store 0x6ed6331fb7442794 in memory
flw f13, 0(x2) # load 0x6ed6331fb7442794 from memory into f13
fnmsub.s f23, f15, f14, f13, dyn # perform operation
fnmsub.s f23, f15, f14, f13, rdn # perform operation
fnmsub.s f23, f15, f14, f13, rmm # perform operation
fnmsub.s f23, f15, f14, f13, rne # perform operation
fnmsub.s f23, f15, f14, f13, rtz # perform operation
fnmsub.s f23, f15, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f15, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f15, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f15, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f15, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f15, f14, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbf800000)
li x17, 0xe280c032fc0ec030 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
li x3, 0x7d95cde9ada17244 # load x3 with value 0x7d95cde9ada17244
sw x3, 0(x2) # store 0x7d95cde9ada17244 in memory
flw f15, 0(x2) # load 0x7d95cde9ada17244 from memory into f15
fnmsub.s f17, f5, f3, f15, dyn # perform operation
fnmsub.s f17, f5, f3, f15, rdn # perform operation
fnmsub.s f17, f5, f3, f15, rmm # perform operation
fnmsub.s f17, f5, f3, f15, rne # perform operation
fnmsub.s f17, f5, f3, f15, rtz # perform operation
fnmsub.s f17, f5, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f5, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f5, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f5, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f5, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f5, f3, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3fc00000)
li x13, 0x2ffdfaa32e895be3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0xd81f263872248879 # load x3 with value 0xd81f263872248879
sw x3, 0(x2) # store 0xd81f263872248879 in memory
flw f30, 0(x2) # load 0xd81f263872248879 from memory into f30
fnmsub.s f13, f26, f10, f30, dyn # perform operation
fnmsub.s f13, f26, f10, f30, rdn # perform operation
fnmsub.s f13, f26, f10, f30, rmm # perform operation
fnmsub.s f13, f26, f10, f30, rne # perform operation
fnmsub.s f13, f26, f10, f30, rtz # perform operation
fnmsub.s f13, f26, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f26, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f26, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f26, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f26, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f26, f10, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbfc00000)
li x9, 0x5745af24512ecbd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0x251e294241791d14 # load x3 with value 0x251e294241791d14
sw x3, 0(x2) # store 0x251e294241791d14 in memory
flw f15, 0(x2) # load 0x251e294241791d14 from memory into f15
fnmsub.s f9, f12, f13, f15, dyn # perform operation
fnmsub.s f9, f12, f13, f15, rdn # perform operation
fnmsub.s f9, f12, f13, f15, rmm # perform operation
fnmsub.s f9, f12, f13, f15, rne # perform operation
fnmsub.s f9, f12, f13, f15, rtz # perform operation
fnmsub.s f9, f12, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f12, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f12, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f12, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f12, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f12, f13, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x40000000)
li x8, 0xa31eefb5d5aa1928 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0xd0769490e6beecc4 # load x3 with value 0xd0769490e6beecc4
sw x3, 0(x2) # store 0xd0769490e6beecc4 in memory
flw f10, 0(x2) # load 0xd0769490e6beecc4 from memory into f10
fnmsub.s f8, f16, f1, f10, dyn # perform operation
fnmsub.s f8, f16, f1, f10, rdn # perform operation
fnmsub.s f8, f16, f1, f10, rmm # perform operation
fnmsub.s f8, f16, f1, f10, rne # perform operation
fnmsub.s f8, f16, f1, f10, rtz # perform operation
fnmsub.s f8, f16, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f16, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f16, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f16, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f16, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f16, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xc0000000)
li x10, 0x0e84b859d5eeb27b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0x1b0d52050cf0c2f9 # load x3 with value 0x1b0d52050cf0c2f9
sw x3, 0(x2) # store 0x1b0d52050cf0c2f9 in memory
flw f7, 0(x2) # load 0x1b0d52050cf0c2f9 from memory into f7
fnmsub.s f10, f3, f29, f7, dyn # perform operation
fnmsub.s f10, f3, f29, f7, rdn # perform operation
fnmsub.s f10, f3, f29, f7, rmm # perform operation
fnmsub.s f10, f3, f29, f7, rne # perform operation
fnmsub.s f10, f3, f29, f7, rtz # perform operation
fnmsub.s f10, f3, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f3, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f3, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f3, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f3, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f3, f29, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x800000)
li x9, 0x87fc8423c6333da5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x3b5621d3d43c5f49 # load x3 with value 0x3b5621d3d43c5f49
sw x3, 0(x2) # store 0x3b5621d3d43c5f49 in memory
flw f6, 0(x2) # load 0x3b5621d3d43c5f49 from memory into f6
fnmsub.s f9, f20, f13, f6, dyn # perform operation
fnmsub.s f9, f20, f13, f6, rdn # perform operation
fnmsub.s f9, f20, f13, f6, rmm # perform operation
fnmsub.s f9, f20, f13, f6, rne # perform operation
fnmsub.s f9, f20, f13, f6, rtz # perform operation
fnmsub.s f9, f20, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f20, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f20, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f20, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f20, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f20, f13, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80800000)
li x26, 0xa05cc84f11de588b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
li x3, 0x5c141056a279f8a6 # load x3 with value 0x5c141056a279f8a6
sw x3, 0(x2) # store 0x5c141056a279f8a6 in memory
flw f20, 0(x2) # load 0x5c141056a279f8a6 from memory into f20
fnmsub.s f26, f2, f17, f20, dyn # perform operation
fnmsub.s f26, f2, f17, f20, rdn # perform operation
fnmsub.s f26, f2, f17, f20, rmm # perform operation
fnmsub.s f26, f2, f17, f20, rne # perform operation
fnmsub.s f26, f2, f17, f20, rtz # perform operation
fnmsub.s f26, f2, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f2, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f2, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f2, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f2, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f2, f17, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f7fffff)
li x20, 0xa756b40b9bb17305 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0x4e85b19f9442bf4f # load x3 with value 0x4e85b19f9442bf4f
sw x3, 0(x2) # store 0x4e85b19f9442bf4f in memory
flw f22, 0(x2) # load 0x4e85b19f9442bf4f from memory into f22
fnmsub.s f20, f21, f19, f22, dyn # perform operation
fnmsub.s f20, f21, f19, f22, rdn # perform operation
fnmsub.s f20, f21, f19, f22, rmm # perform operation
fnmsub.s f20, f21, f19, f22, rne # perform operation
fnmsub.s f20, f21, f19, f22, rtz # perform operation
fnmsub.s f20, f21, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f21, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f21, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f21, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f21, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f21, f19, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff7fffff)
li x1, 0x0aa5a302bc91d01c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0xdbf1c0eb9b4eb77f # load x3 with value 0xdbf1c0eb9b4eb77f
sw x3, 0(x2) # store 0xdbf1c0eb9b4eb77f in memory
flw f15, 0(x2) # load 0xdbf1c0eb9b4eb77f from memory into f15
fnmsub.s f1, f22, f14, f15, dyn # perform operation
fnmsub.s f1, f22, f14, f15, rdn # perform operation
fnmsub.s f1, f22, f14, f15, rmm # perform operation
fnmsub.s f1, f22, f14, f15, rne # perform operation
fnmsub.s f1, f22, f14, f15, rtz # perform operation
fnmsub.s f1, f22, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f22, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f22, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f22, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f22, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f22, f14, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffff)
li x6, 0x48e306b9d65b13ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
li x3, 0xc04a70abd61da55c # load x3 with value 0xc04a70abd61da55c
sw x3, 0(x2) # store 0xc04a70abd61da55c in memory
flw f12, 0(x2) # load 0xc04a70abd61da55c from memory into f12
fnmsub.s f6, f23, f28, f12, dyn # perform operation
fnmsub.s f6, f23, f28, f12, rdn # perform operation
fnmsub.s f6, f23, f28, f12, rmm # perform operation
fnmsub.s f6, f23, f28, f12, rne # perform operation
fnmsub.s f6, f23, f28, f12, rtz # perform operation
fnmsub.s f6, f23, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f23, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f23, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f23, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f23, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f23, f28, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x807fffff)
li x15, 0x74390879f8f24b29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
li x3, 0xd65b37ce72704d04 # load x3 with value 0xd65b37ce72704d04
sw x3, 0(x2) # store 0xd65b37ce72704d04 in memory
flw f30, 0(x2) # load 0xd65b37ce72704d04 from memory into f30
fnmsub.s f15, f16, f18, f30, dyn # perform operation
fnmsub.s f15, f16, f18, f30, rdn # perform operation
fnmsub.s f15, f16, f18, f30, rmm # perform operation
fnmsub.s f15, f16, f18, f30, rne # perform operation
fnmsub.s f15, f16, f18, f30, rtz # perform operation
fnmsub.s f15, f16, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f16, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f16, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f16, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f16, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f16, f18, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x400000)
li x1, 0xf78b6ca268a37bb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0x5270ec4f38d1e589 # load x3 with value 0x5270ec4f38d1e589
sw x3, 0(x2) # store 0x5270ec4f38d1e589 in memory
flw f5, 0(x2) # load 0x5270ec4f38d1e589 from memory into f5
fnmsub.s f1, f14, f2, f5, dyn # perform operation
fnmsub.s f1, f14, f2, f5, rdn # perform operation
fnmsub.s f1, f14, f2, f5, rmm # perform operation
fnmsub.s f1, f14, f2, f5, rne # perform operation
fnmsub.s f1, f14, f2, f5, rtz # perform operation
fnmsub.s f1, f14, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f14, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f14, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f14, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f14, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f14, f2, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80400000)
li x17, 0xfcfdad1de1181db4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0x254a009cbb02e887 # load x3 with value 0x254a009cbb02e887
sw x3, 0(x2) # store 0x254a009cbb02e887 in memory
flw f25, 0(x2) # load 0x254a009cbb02e887 from memory into f25
fnmsub.s f17, f21, f28, f25, dyn # perform operation
fnmsub.s f17, f21, f28, f25, rdn # perform operation
fnmsub.s f17, f21, f28, f25, rmm # perform operation
fnmsub.s f17, f21, f28, f25, rne # perform operation
fnmsub.s f17, f21, f28, f25, rtz # perform operation
fnmsub.s f17, f21, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f21, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f21, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f21, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f21, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f21, f28, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x1)
li x18, 0x1f6b7a44a1bb8659 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0x5c634403abf53171 # load x3 with value 0x5c634403abf53171
sw x3, 0(x2) # store 0x5c634403abf53171 in memory
flw f9, 0(x2) # load 0x5c634403abf53171 from memory into f9
fnmsub.s f18, f5, f11, f9, dyn # perform operation
fnmsub.s f18, f5, f11, f9, rdn # perform operation
fnmsub.s f18, f5, f11, f9, rmm # perform operation
fnmsub.s f18, f5, f11, f9, rne # perform operation
fnmsub.s f18, f5, f11, f9, rtz # perform operation
fnmsub.s f18, f5, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f5, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f5, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f5, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f5, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f5, f11, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000001)
li x30, 0x4ff89a1bfaaab62a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
li x3, 0xc2027b1c8a56fc3c # load x3 with value 0xc2027b1c8a56fc3c
sw x3, 0(x2) # store 0xc2027b1c8a56fc3c in memory
flw f21, 0(x2) # load 0xc2027b1c8a56fc3c from memory into f21
fnmsub.s f30, f23, f6, f21, dyn # perform operation
fnmsub.s f30, f23, f6, f21, rdn # perform operation
fnmsub.s f30, f23, f6, f21, rmm # perform operation
fnmsub.s f30, f23, f6, f21, rne # perform operation
fnmsub.s f30, f23, f6, f21, rtz # perform operation
fnmsub.s f30, f23, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f23, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f23, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f23, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f23, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f23, f6, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800000)
li x30, 0x1c8a99735d6b1320 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x887d575036f3a9cf # load x3 with value 0x887d575036f3a9cf
sw x3, 0(x2) # store 0x887d575036f3a9cf in memory
flw f17, 0(x2) # load 0x887d575036f3a9cf from memory into f17
fnmsub.s f30, f7, f5, f17, dyn # perform operation
fnmsub.s f30, f7, f5, f17, rdn # perform operation
fnmsub.s f30, f7, f5, f17, rmm # perform operation
fnmsub.s f30, f7, f5, f17, rne # perform operation
fnmsub.s f30, f7, f5, f17, rtz # perform operation
fnmsub.s f30, f7, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f7, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f7, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f7, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f7, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f7, f5, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff800000)
li x25, 0x2174a7a937ce0cd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0xa6954ba35e75db78 # load x3 with value 0xa6954ba35e75db78
sw x3, 0(x2) # store 0xa6954ba35e75db78 in memory
flw f15, 0(x2) # load 0xa6954ba35e75db78 from memory into f15
fnmsub.s f25, f3, f1, f15, dyn # perform operation
fnmsub.s f25, f3, f1, f15, rdn # perform operation
fnmsub.s f25, f3, f1, f15, rmm # perform operation
fnmsub.s f25, f3, f1, f15, rne # perform operation
fnmsub.s f25, f3, f1, f15, rtz # perform operation
fnmsub.s f25, f3, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f3, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f3, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f3, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f3, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f3, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fc00000)
li x23, 0xd831b95b3527f307 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0x177a3eb14b2f8361 # load x3 with value 0x177a3eb14b2f8361
sw x3, 0(x2) # store 0x177a3eb14b2f8361 in memory
flw f24, 0(x2) # load 0x177a3eb14b2f8361 from memory into f24
fnmsub.s f23, f6, f22, f24, dyn # perform operation
fnmsub.s f23, f6, f22, f24, rdn # perform operation
fnmsub.s f23, f6, f22, f24, rmm # perform operation
fnmsub.s f23, f6, f22, f24, rne # perform operation
fnmsub.s f23, f6, f22, f24, rtz # perform operation
fnmsub.s f23, f6, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f6, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f6, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f6, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f6, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f6, f22, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffffff)
li x29, 0xdbc6286afa0d572b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0xe662a1b1ff987f65 # load x3 with value 0xe662a1b1ff987f65
sw x3, 0(x2) # store 0xe662a1b1ff987f65 in memory
flw f21, 0(x2) # load 0xe662a1b1ff987f65 from memory into f21
fnmsub.s f29, f10, f17, f21, dyn # perform operation
fnmsub.s f29, f10, f17, f21, rdn # perform operation
fnmsub.s f29, f10, f17, f21, rmm # perform operation
fnmsub.s f29, f10, f17, f21, rne # perform operation
fnmsub.s f29, f10, f17, f21, rtz # perform operation
fnmsub.s f29, f10, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f10, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f10, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f10, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f10, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f10, f17, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800001)
li x14, 0xf1afd0de84c99827 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0x45009545cad29b12 # load x3 with value 0x45009545cad29b12
sw x3, 0(x2) # store 0x45009545cad29b12 in memory
flw f17, 0(x2) # load 0x45009545cad29b12 from memory into f17
fnmsub.s f14, f21, f4, f17, dyn # perform operation
fnmsub.s f14, f21, f4, f17, rdn # perform operation
fnmsub.s f14, f21, f4, f17, rmm # perform operation
fnmsub.s f14, f21, f4, f17, rne # perform operation
fnmsub.s f14, f21, f4, f17, rtz # perform operation
fnmsub.s f14, f21, f4, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f21, f4, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f21, f4, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f21, f4, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f21, f4, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f21, f4, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fbfffff)
li x11, 0xd44868d1fea9a8bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0x98e7181f14aba130 # load x3 with value 0x98e7181f14aba130
sw x3, 0(x2) # store 0x98e7181f14aba130 in memory
flw f28, 0(x2) # load 0x98e7181f14aba130 from memory into f28
fnmsub.s f11, f17, f3, f28, dyn # perform operation
fnmsub.s f11, f17, f3, f28, rdn # perform operation
fnmsub.s f11, f17, f3, f28, rmm # perform operation
fnmsub.s f11, f17, f3, f28, rne # perform operation
fnmsub.s f11, f17, f3, f28, rtz # perform operation
fnmsub.s f11, f17, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f17, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f17, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f17, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f17, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f17, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7ef8654f)
li x16, 0x02ccd4fc5f2c3071 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x67fec980d6fabe1a # load x3 with value 0x67fec980d6fabe1a
sw x3, 0(x2) # store 0x67fec980d6fabe1a in memory
flw f30, 0(x2) # load 0x67fec980d6fabe1a from memory into f30
fnmsub.s f16, f2, f21, f30, dyn # perform operation
fnmsub.s f16, f2, f21, f30, rdn # perform operation
fnmsub.s f16, f2, f21, f30, rmm # perform operation
fnmsub.s f16, f2, f21, f30, rne # perform operation
fnmsub.s f16, f2, f21, f30, rtz # perform operation
fnmsub.s f16, f2, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f2, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f2, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f2, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f2, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f2, f21, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x813d9ab0)
li x11, 0x18395b5b01c8ed70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
li x3, 0xf347cae156e88bb7 # load x3 with value 0xf347cae156e88bb7
sw x3, 0(x2) # store 0xf347cae156e88bb7 in memory
flw f3, 0(x2) # load 0xf347cae156e88bb7 from memory into f3
fnmsub.s f11, f7, f10, f3, dyn # perform operation
fnmsub.s f11, f7, f10, f3, rdn # perform operation
fnmsub.s f11, f7, f10, f3, rmm # perform operation
fnmsub.s f11, f7, f10, f3, rne # perform operation
fnmsub.s f11, f7, f10, f3, rtz # perform operation
fnmsub.s f11, f7, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f7, f10, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x0)
li x1, 0x1a551b0c84f8375e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0x5b9384d38d11f367 # load x3 with value 0x5b9384d38d11f367
sw x3, 0(x2) # store 0x5b9384d38d11f367 in memory
flw f19, 0(x2) # load 0x5b9384d38d11f367 from memory into f19
fnmsub.s f1, f31, f24, f19, dyn # perform operation
fnmsub.s f1, f31, f24, f19, rdn # perform operation
fnmsub.s f1, f31, f24, f19, rmm # perform operation
fnmsub.s f1, f31, f24, f19, rne # perform operation
fnmsub.s f1, f31, f24, f19, rtz # perform operation
fnmsub.s f1, f31, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f31, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f31, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f31, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f31, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f31, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000000)
li x18, 0x2bb25dce5912db60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x872b689dc709368c # load x3 with value 0x872b689dc709368c
sw x3, 0(x2) # store 0x872b689dc709368c in memory
flw f30, 0(x2) # load 0x872b689dc709368c from memory into f30
fnmsub.s f18, f22, f11, f30, dyn # perform operation
fnmsub.s f18, f22, f11, f30, rdn # perform operation
fnmsub.s f18, f22, f11, f30, rmm # perform operation
fnmsub.s f18, f22, f11, f30, rne # perform operation
fnmsub.s f18, f22, f11, f30, rtz # perform operation
fnmsub.s f18, f22, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f22, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f22, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f22, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f22, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f22, f11, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3f800000)
li x27, 0x6722996c85efd87b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0xa70b3d5ffa4f6dc2 # load x3 with value 0xa70b3d5ffa4f6dc2
sw x3, 0(x2) # store 0xa70b3d5ffa4f6dc2 in memory
flw f19, 0(x2) # load 0xa70b3d5ffa4f6dc2 from memory into f19
fnmsub.s f27, f23, f9, f19, dyn # perform operation
fnmsub.s f27, f23, f9, f19, rdn # perform operation
fnmsub.s f27, f23, f9, f19, rmm # perform operation
fnmsub.s f27, f23, f9, f19, rne # perform operation
fnmsub.s f27, f23, f9, f19, rtz # perform operation
fnmsub.s f27, f23, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f23, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f23, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f23, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f23, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f23, f9, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbf800000)
li x5, 0x2d701f46f3b6543f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
li x3, 0x5e8b9e5509b2e559 # load x3 with value 0x5e8b9e5509b2e559
sw x3, 0(x2) # store 0x5e8b9e5509b2e559 in memory
flw f31, 0(x2) # load 0x5e8b9e5509b2e559 from memory into f31
fnmsub.s f5, f13, f24, f31, dyn # perform operation
fnmsub.s f5, f13, f24, f31, rdn # perform operation
fnmsub.s f5, f13, f24, f31, rmm # perform operation
fnmsub.s f5, f13, f24, f31, rne # perform operation
fnmsub.s f5, f13, f24, f31, rtz # perform operation
fnmsub.s f5, f13, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f13, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f13, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f13, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f13, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f13, f24, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3fc00000)
li x28, 0x166fdfe2774d6183 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0x208bcc816e45e961 # load x3 with value 0x208bcc816e45e961
sw x3, 0(x2) # store 0x208bcc816e45e961 in memory
flw f7, 0(x2) # load 0x208bcc816e45e961 from memory into f7
fnmsub.s f28, f10, f27, f7, dyn # perform operation
fnmsub.s f28, f10, f27, f7, rdn # perform operation
fnmsub.s f28, f10, f27, f7, rmm # perform operation
fnmsub.s f28, f10, f27, f7, rne # perform operation
fnmsub.s f28, f10, f27, f7, rtz # perform operation
fnmsub.s f28, f10, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f10, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f10, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f10, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f10, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f10, f27, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbfc00000)
li x10, 0x80eed8daabbefa7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
li x3, 0xf56c80aea66a172d # load x3 with value 0xf56c80aea66a172d
sw x3, 0(x2) # store 0xf56c80aea66a172d in memory
flw f22, 0(x2) # load 0xf56c80aea66a172d from memory into f22
fnmsub.s f10, f20, f2, f22, dyn # perform operation
fnmsub.s f10, f20, f2, f22, rdn # perform operation
fnmsub.s f10, f20, f2, f22, rmm # perform operation
fnmsub.s f10, f20, f2, f22, rne # perform operation
fnmsub.s f10, f20, f2, f22, rtz # perform operation
fnmsub.s f10, f20, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f20, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f20, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f20, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f20, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f20, f2, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x40000000)
li x12, 0x49dbc51d1490438b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0xa9710d0bdae5a12b # load x3 with value 0xa9710d0bdae5a12b
sw x3, 0(x2) # store 0xa9710d0bdae5a12b in memory
flw f14, 0(x2) # load 0xa9710d0bdae5a12b from memory into f14
fnmsub.s f12, f4, f31, f14, dyn # perform operation
fnmsub.s f12, f4, f31, f14, rdn # perform operation
fnmsub.s f12, f4, f31, f14, rmm # perform operation
fnmsub.s f12, f4, f31, f14, rne # perform operation
fnmsub.s f12, f4, f31, f14, rtz # perform operation
fnmsub.s f12, f4, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f4, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f4, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f4, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f4, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f4, f31, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xc0000000)
li x29, 0xd63ecac7b20f0e9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0xfc80a4594a917c97 # load x3 with value 0xfc80a4594a917c97
sw x3, 0(x2) # store 0xfc80a4594a917c97 in memory
flw f12, 0(x2) # load 0xfc80a4594a917c97 from memory into f12
fnmsub.s f29, f22, f13, f12, dyn # perform operation
fnmsub.s f29, f22, f13, f12, rdn # perform operation
fnmsub.s f29, f22, f13, f12, rmm # perform operation
fnmsub.s f29, f22, f13, f12, rne # perform operation
fnmsub.s f29, f22, f13, f12, rtz # perform operation
fnmsub.s f29, f22, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f22, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f22, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f22, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f22, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f22, f13, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x800000)
li x22, 0xb984a74a9e1280cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0x890da5d6ca267620 # load x3 with value 0x890da5d6ca267620
sw x3, 0(x2) # store 0x890da5d6ca267620 in memory
flw f16, 0(x2) # load 0x890da5d6ca267620 from memory into f16
fnmsub.s f22, f18, f4, f16, dyn # perform operation
fnmsub.s f22, f18, f4, f16, rdn # perform operation
fnmsub.s f22, f18, f4, f16, rmm # perform operation
fnmsub.s f22, f18, f4, f16, rne # perform operation
fnmsub.s f22, f18, f4, f16, rtz # perform operation
fnmsub.s f22, f18, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f18, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f18, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f18, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f18, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f18, f4, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80800000)
li x18, 0xf3ee04658c3a7c43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0x99b75a78b28efa3d # load x3 with value 0x99b75a78b28efa3d
sw x3, 0(x2) # store 0x99b75a78b28efa3d in memory
flw f15, 0(x2) # load 0x99b75a78b28efa3d from memory into f15
fnmsub.s f18, f20, f23, f15, dyn # perform operation
fnmsub.s f18, f20, f23, f15, rdn # perform operation
fnmsub.s f18, f20, f23, f15, rmm # perform operation
fnmsub.s f18, f20, f23, f15, rne # perform operation
fnmsub.s f18, f20, f23, f15, rtz # perform operation
fnmsub.s f18, f20, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f20, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f20, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f20, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f20, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f20, f23, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f7fffff)
li x12, 0xee999f8dbba790fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
li x3, 0xb29100e3438c8912 # load x3 with value 0xb29100e3438c8912
sw x3, 0(x2) # store 0xb29100e3438c8912 in memory
flw f24, 0(x2) # load 0xb29100e3438c8912 from memory into f24
fnmsub.s f12, f8, f18, f24, dyn # perform operation
fnmsub.s f12, f8, f18, f24, rdn # perform operation
fnmsub.s f12, f8, f18, f24, rmm # perform operation
fnmsub.s f12, f8, f18, f24, rne # perform operation
fnmsub.s f12, f8, f18, f24, rtz # perform operation
fnmsub.s f12, f8, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f8, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f8, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f8, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f8, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f8, f18, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff7fffff)
li x30, 0xf460aca8b9412d37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0xd03b15c2b78e48f0 # load x3 with value 0xd03b15c2b78e48f0
sw x3, 0(x2) # store 0xd03b15c2b78e48f0 in memory
flw f14, 0(x2) # load 0xd03b15c2b78e48f0 from memory into f14
fnmsub.s f30, f9, f7, f14, dyn # perform operation
fnmsub.s f30, f9, f7, f14, rdn # perform operation
fnmsub.s f30, f9, f7, f14, rmm # perform operation
fnmsub.s f30, f9, f7, f14, rne # perform operation
fnmsub.s f30, f9, f7, f14, rtz # perform operation
fnmsub.s f30, f9, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f9, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f9, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f9, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f9, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f9, f7, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffff)
li x29, 0x9fa03706ce62b186 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
li x3, 0x2eb585a5c8520286 # load x3 with value 0x2eb585a5c8520286
sw x3, 0(x2) # store 0x2eb585a5c8520286 in memory
flw f10, 0(x2) # load 0x2eb585a5c8520286 from memory into f10
fnmsub.s f29, f14, f26, f10, dyn # perform operation
fnmsub.s f29, f14, f26, f10, rdn # perform operation
fnmsub.s f29, f14, f26, f10, rmm # perform operation
fnmsub.s f29, f14, f26, f10, rne # perform operation
fnmsub.s f29, f14, f26, f10, rtz # perform operation
fnmsub.s f29, f14, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f14, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f14, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f14, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f14, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f14, f26, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x807fffff)
li x26, 0x4fba9abb63142da6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0xcd8a3a57179d427b # load x3 with value 0xcd8a3a57179d427b
sw x3, 0(x2) # store 0xcd8a3a57179d427b in memory
flw f18, 0(x2) # load 0xcd8a3a57179d427b from memory into f18
fnmsub.s f26, f25, f8, f18, dyn # perform operation
fnmsub.s f26, f25, f8, f18, rdn # perform operation
fnmsub.s f26, f25, f8, f18, rmm # perform operation
fnmsub.s f26, f25, f8, f18, rne # perform operation
fnmsub.s f26, f25, f8, f18, rtz # perform operation
fnmsub.s f26, f25, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f25, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f25, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f25, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f25, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f25, f8, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x400000)
li x8, 0x892cc37e3df1e1c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
li x3, 0x2322dfaf20f43829 # load x3 with value 0x2322dfaf20f43829
sw x3, 0(x2) # store 0x2322dfaf20f43829 in memory
flw f30, 0(x2) # load 0x2322dfaf20f43829 from memory into f30
fnmsub.s f8, f10, f20, f30, dyn # perform operation
fnmsub.s f8, f10, f20, f30, rdn # perform operation
fnmsub.s f8, f10, f20, f30, rmm # perform operation
fnmsub.s f8, f10, f20, f30, rne # perform operation
fnmsub.s f8, f10, f20, f30, rtz # perform operation
fnmsub.s f8, f10, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f10, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f10, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f10, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f10, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f10, f20, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80400000)
li x8, 0x34e881cdb6cac9ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
li x3, 0x3960bd5281a95168 # load x3 with value 0x3960bd5281a95168
sw x3, 0(x2) # store 0x3960bd5281a95168 in memory
flw f25, 0(x2) # load 0x3960bd5281a95168 from memory into f25
fnmsub.s f8, f24, f21, f25, dyn # perform operation
fnmsub.s f8, f24, f21, f25, rdn # perform operation
fnmsub.s f8, f24, f21, f25, rmm # perform operation
fnmsub.s f8, f24, f21, f25, rne # perform operation
fnmsub.s f8, f24, f21, f25, rtz # perform operation
fnmsub.s f8, f24, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f24, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f24, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f24, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f24, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f24, f21, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x1)
li x20, 0x36cd90b2bbb60acc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0xaa843431c313cab2 # load x3 with value 0xaa843431c313cab2
sw x3, 0(x2) # store 0xaa843431c313cab2 in memory
flw f17, 0(x2) # load 0xaa843431c313cab2 from memory into f17
fnmsub.s f20, f27, f24, f17, dyn # perform operation
fnmsub.s f20, f27, f24, f17, rdn # perform operation
fnmsub.s f20, f27, f24, f17, rmm # perform operation
fnmsub.s f20, f27, f24, f17, rne # perform operation
fnmsub.s f20, f27, f24, f17, rtz # perform operation
fnmsub.s f20, f27, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f27, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f27, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f27, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f27, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f27, f24, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000001)
li x13, 0x61f19b86da839862 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
li x3, 0x5cc0f3a8d32c6870 # load x3 with value 0x5cc0f3a8d32c6870
sw x3, 0(x2) # store 0x5cc0f3a8d32c6870 in memory
flw f10, 0(x2) # load 0x5cc0f3a8d32c6870 from memory into f10
fnmsub.s f13, f18, f9, f10, dyn # perform operation
fnmsub.s f13, f18, f9, f10, rdn # perform operation
fnmsub.s f13, f18, f9, f10, rmm # perform operation
fnmsub.s f13, f18, f9, f10, rne # perform operation
fnmsub.s f13, f18, f9, f10, rtz # perform operation
fnmsub.s f13, f18, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f18, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f18, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f18, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f18, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f18, f9, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800000)
li x19, 0xe3e72e1d23ef5454 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0xb1096c55c02e5896 # load x3 with value 0xb1096c55c02e5896
sw x3, 0(x2) # store 0xb1096c55c02e5896 in memory
flw f3, 0(x2) # load 0xb1096c55c02e5896 from memory into f3
fnmsub.s f19, f1, f16, f3, dyn # perform operation
fnmsub.s f19, f1, f16, f3, rdn # perform operation
fnmsub.s f19, f1, f16, f3, rmm # perform operation
fnmsub.s f19, f1, f16, f3, rne # perform operation
fnmsub.s f19, f1, f16, f3, rtz # perform operation
fnmsub.s f19, f1, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f1, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f1, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f1, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f1, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f1, f16, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff800000)
li x14, 0x7591b494e58dff52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0x51d8459e3b2a9b2b # load x3 with value 0x51d8459e3b2a9b2b
sw x3, 0(x2) # store 0x51d8459e3b2a9b2b in memory
flw f3, 0(x2) # load 0x51d8459e3b2a9b2b from memory into f3
fnmsub.s f14, f19, f15, f3, dyn # perform operation
fnmsub.s f14, f19, f15, f3, rdn # perform operation
fnmsub.s f14, f19, f15, f3, rmm # perform operation
fnmsub.s f14, f19, f15, f3, rne # perform operation
fnmsub.s f14, f19, f15, f3, rtz # perform operation
fnmsub.s f14, f19, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f19, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f19, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f19, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f19, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f19, f15, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fc00000)
li x25, 0x87812133060bcae1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0xf17f102275ab5623 # load x3 with value 0xf17f102275ab5623
sw x3, 0(x2) # store 0xf17f102275ab5623 in memory
flw f31, 0(x2) # load 0xf17f102275ab5623 from memory into f31
fnmsub.s f25, f30, f15, f31, dyn # perform operation
fnmsub.s f25, f30, f15, f31, rdn # perform operation
fnmsub.s f25, f30, f15, f31, rmm # perform operation
fnmsub.s f25, f30, f15, f31, rne # perform operation
fnmsub.s f25, f30, f15, f31, rtz # perform operation
fnmsub.s f25, f30, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f30, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f30, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f30, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f30, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f30, f15, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffffff)
li x17, 0x524f017c4e984d61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0xf118e80e254ae214 # load x3 with value 0xf118e80e254ae214
sw x3, 0(x2) # store 0xf118e80e254ae214 in memory
flw f28, 0(x2) # load 0xf118e80e254ae214 from memory into f28
fnmsub.s f17, f13, f30, f28, dyn # perform operation
fnmsub.s f17, f13, f30, f28, rdn # perform operation
fnmsub.s f17, f13, f30, f28, rmm # perform operation
fnmsub.s f17, f13, f30, f28, rne # perform operation
fnmsub.s f17, f13, f30, f28, rtz # perform operation
fnmsub.s f17, f13, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f13, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f13, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f13, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f13, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f13, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800001)
li x5, 0x64f90e68ed8db311 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0xd6da69e4d9bff623 # load x3 with value 0xd6da69e4d9bff623
sw x3, 0(x2) # store 0xd6da69e4d9bff623 in memory
flw f20, 0(x2) # load 0xd6da69e4d9bff623 from memory into f20
fnmsub.s f5, f30, f18, f20, dyn # perform operation
fnmsub.s f5, f30, f18, f20, rdn # perform operation
fnmsub.s f5, f30, f18, f20, rmm # perform operation
fnmsub.s f5, f30, f18, f20, rne # perform operation
fnmsub.s f5, f30, f18, f20, rtz # perform operation
fnmsub.s f5, f30, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f30, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f30, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f30, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f30, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f30, f18, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fbfffff)
li x9, 0xe7ad86b89a70127a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
li x3, 0x4b65ad0deeb8425e # load x3 with value 0x4b65ad0deeb8425e
sw x3, 0(x2) # store 0x4b65ad0deeb8425e in memory
flw f17, 0(x2) # load 0x4b65ad0deeb8425e from memory into f17
fnmsub.s f9, f13, f8, f17, dyn # perform operation
fnmsub.s f9, f13, f8, f17, rdn # perform operation
fnmsub.s f9, f13, f8, f17, rmm # perform operation
fnmsub.s f9, f13, f8, f17, rne # perform operation
fnmsub.s f9, f13, f8, f17, rtz # perform operation
fnmsub.s f9, f13, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f13, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f13, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f13, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f13, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f13, f8, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7ef8654f)
li x13, 0xe5e4820525e551a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0x39281e48bd817266 # load x3 with value 0x39281e48bd817266
sw x3, 0(x2) # store 0x39281e48bd817266 in memory
flw f4, 0(x2) # load 0x39281e48bd817266 from memory into f4
fnmsub.s f13, f10, f27, f4, dyn # perform operation
fnmsub.s f13, f10, f27, f4, rdn # perform operation
fnmsub.s f13, f10, f27, f4, rmm # perform operation
fnmsub.s f13, f10, f27, f4, rne # perform operation
fnmsub.s f13, f10, f27, f4, rtz # perform operation
fnmsub.s f13, f10, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f10, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f10, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f10, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f10, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f10, f27, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x813d9ab0)
li x19, 0x1bd8940997c4b7c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x5939a485aeb30e43 # load x3 with value 0x5939a485aeb30e43
sw x3, 0(x2) # store 0x5939a485aeb30e43 in memory
flw f5, 0(x2) # load 0x5939a485aeb30e43 from memory into f5
fnmsub.s f19, f15, f30, f5, dyn # perform operation
fnmsub.s f19, f15, f30, f5, rdn # perform operation
fnmsub.s f19, f15, f30, f5, rmm # perform operation
fnmsub.s f19, f15, f30, f5, rne # perform operation
fnmsub.s f19, f15, f30, f5, rtz # perform operation
fnmsub.s f19, f15, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f15, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f15, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f15, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f15, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f15, f30, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
li x14, 0x41e1b9ece10a032a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x17a9192d107543d7 # load x3 with value 0x17a9192d107543d7
sw x3, 0(x2) # store 0x17a9192d107543d7 in memory
flw f26, 0(x2) # load 0x17a9192d107543d7 from memory into f26
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
fnmsub.s f14, f21, f26, f6, dyn # perform operation
fnmsub.s f14, f21, f26, f6, rdn # perform operation
fnmsub.s f14, f21, f26, f6, rmm # perform operation
fnmsub.s f14, f21, f26, f6, rne # perform operation
fnmsub.s f14, f21, f26, f6, rtz # perform operation
fnmsub.s f14, f21, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f21, f26, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000000)
li x11, 0xcefaf34719cb6d7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x16cd1f7d773200f7 # load x3 with value 0x16cd1f7d773200f7
sw x3, 0(x2) # store 0x16cd1f7d773200f7 in memory
flw f29, 0(x2) # load 0x16cd1f7d773200f7 from memory into f29
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
fnmsub.s f11, f13, f29, f27, dyn # perform operation
fnmsub.s f11, f13, f29, f27, rdn # perform operation
fnmsub.s f11, f13, f29, f27, rmm # perform operation
fnmsub.s f11, f13, f29, f27, rne # perform operation
fnmsub.s f11, f13, f29, f27, rtz # perform operation
fnmsub.s f11, f13, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f13, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f13, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f13, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f13, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f13, f29, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3f800000)
li x18, 0xcbc61823a001962f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0xbc31038a926418d4 # load x3 with value 0xbc31038a926418d4
sw x3, 0(x2) # store 0xbc31038a926418d4 in memory
flw f3, 0(x2) # load 0xbc31038a926418d4 from memory into f3
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
fnmsub.s f18, f20, f3, f24, dyn # perform operation
fnmsub.s f18, f20, f3, f24, rdn # perform operation
fnmsub.s f18, f20, f3, f24, rmm # perform operation
fnmsub.s f18, f20, f3, f24, rne # perform operation
fnmsub.s f18, f20, f3, f24, rtz # perform operation
fnmsub.s f18, f20, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f20, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f20, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f20, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f20, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f20, f3, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbf800000)
li x24, 0xa6c6e0330ccab0ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0xecb998d65ce18ef4 # load x3 with value 0xecb998d65ce18ef4
sw x3, 0(x2) # store 0xecb998d65ce18ef4 in memory
flw f17, 0(x2) # load 0xecb998d65ce18ef4 from memory into f17
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
fnmsub.s f24, f7, f17, f30, dyn # perform operation
fnmsub.s f24, f7, f17, f30, rdn # perform operation
fnmsub.s f24, f7, f17, f30, rmm # perform operation
fnmsub.s f24, f7, f17, f30, rne # perform operation
fnmsub.s f24, f7, f17, f30, rtz # perform operation
fnmsub.s f24, f7, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f7, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f7, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f7, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f7, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f7, f17, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3fc00000)
li x14, 0x8715a67e7b0e4227 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x1f5276f69d3e2f91 # load x3 with value 0x1f5276f69d3e2f91
sw x3, 0(x2) # store 0x1f5276f69d3e2f91 in memory
flw f29, 0(x2) # load 0x1f5276f69d3e2f91 from memory into f29
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
fnmsub.s f14, f5, f29, f28, dyn # perform operation
fnmsub.s f14, f5, f29, f28, rdn # perform operation
fnmsub.s f14, f5, f29, f28, rmm # perform operation
fnmsub.s f14, f5, f29, f28, rne # perform operation
fnmsub.s f14, f5, f29, f28, rtz # perform operation
fnmsub.s f14, f5, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f5, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f5, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f5, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f5, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f5, f29, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbfc00000)
li x31, 0xce1149613d499ef4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x3eb0079d709c474 # load x3 with value 0x3eb0079d709c474
sw x3, 0(x2) # store 0x3eb0079d709c474 in memory
flw f8, 0(x2) # load 0x3eb0079d709c474 from memory into f8
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
fnmsub.s f31, f21, f8, f20, dyn # perform operation
fnmsub.s f31, f21, f8, f20, rdn # perform operation
fnmsub.s f31, f21, f8, f20, rmm # perform operation
fnmsub.s f31, f21, f8, f20, rne # perform operation
fnmsub.s f31, f21, f8, f20, rtz # perform operation
fnmsub.s f31, f21, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f21, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f21, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f21, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f21, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f21, f8, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x40000000)
li x23, 0x6f2824e26abd8318 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x1db4f31bc85c67ce # load x3 with value 0x1db4f31bc85c67ce
sw x3, 0(x2) # store 0x1db4f31bc85c67ce in memory
flw f17, 0(x2) # load 0x1db4f31bc85c67ce from memory into f17
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
fnmsub.s f23, f21, f17, f9, dyn # perform operation
fnmsub.s f23, f21, f17, f9, rdn # perform operation
fnmsub.s f23, f21, f17, f9, rmm # perform operation
fnmsub.s f23, f21, f17, f9, rne # perform operation
fnmsub.s f23, f21, f17, f9, rtz # perform operation
fnmsub.s f23, f21, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f21, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f21, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f21, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f21, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f21, f17, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc0000000)
li x15, 0xa1dd957cff71eb40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0xb751a00a89681e36 # load x3 with value 0xb751a00a89681e36
sw x3, 0(x2) # store 0xb751a00a89681e36 in memory
flw f23, 0(x2) # load 0xb751a00a89681e36 from memory into f23
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
fnmsub.s f15, f22, f23, f3, dyn # perform operation
fnmsub.s f15, f22, f23, f3, rdn # perform operation
fnmsub.s f15, f22, f23, f3, rmm # perform operation
fnmsub.s f15, f22, f23, f3, rne # perform operation
fnmsub.s f15, f22, f23, f3, rtz # perform operation
fnmsub.s f15, f22, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f22, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f22, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f22, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f22, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f22, f23, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800000)
li x8, 0x971032c149ba4fbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0x6a93a94fb9b9da5a # load x3 with value 0x6a93a94fb9b9da5a
sw x3, 0(x2) # store 0x6a93a94fb9b9da5a in memory
flw f23, 0(x2) # load 0x6a93a94fb9b9da5a from memory into f23
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
fnmsub.s f8, f25, f23, f31, dyn # perform operation
fnmsub.s f8, f25, f23, f31, rdn # perform operation
fnmsub.s f8, f25, f23, f31, rmm # perform operation
fnmsub.s f8, f25, f23, f31, rne # perform operation
fnmsub.s f8, f25, f23, f31, rtz # perform operation
fnmsub.s f8, f25, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f25, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f25, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f25, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f25, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f25, f23, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80800000)
li x9, 0x5442d70702ec2e69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0x22f1aa9f3567ad55 # load x3 with value 0x22f1aa9f3567ad55
sw x3, 0(x2) # store 0x22f1aa9f3567ad55 in memory
flw f21, 0(x2) # load 0x22f1aa9f3567ad55 from memory into f21
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
fnmsub.s f9, f1, f21, f29, dyn # perform operation
fnmsub.s f9, f1, f21, f29, rdn # perform operation
fnmsub.s f9, f1, f21, f29, rmm # perform operation
fnmsub.s f9, f1, f21, f29, rne # perform operation
fnmsub.s f9, f1, f21, f29, rtz # perform operation
fnmsub.s f9, f1, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f1, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f1, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f1, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f1, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f1, f21, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f7fffff)
li x7, 0x45ccd49238a6c22f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0xe36acc02451595b3 # load x3 with value 0xe36acc02451595b3
sw x3, 0(x2) # store 0xe36acc02451595b3 in memory
flw f5, 0(x2) # load 0xe36acc02451595b3 from memory into f5
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fnmsub.s f7, f20, f5, f14, dyn # perform operation
fnmsub.s f7, f20, f5, f14, rdn # perform operation
fnmsub.s f7, f20, f5, f14, rmm # perform operation
fnmsub.s f7, f20, f5, f14, rne # perform operation
fnmsub.s f7, f20, f5, f14, rtz # perform operation
fnmsub.s f7, f20, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f20, f5, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff7fffff)
li x14, 0x4a7347532e0c15be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0x80a473f8a520b118 # load x3 with value 0x80a473f8a520b118
sw x3, 0(x2) # store 0x80a473f8a520b118 in memory
flw f18, 0(x2) # load 0x80a473f8a520b118 from memory into f18
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
fnmsub.s f14, f15, f18, f25, dyn # perform operation
fnmsub.s f14, f15, f18, f25, rdn # perform operation
fnmsub.s f14, f15, f18, f25, rmm # perform operation
fnmsub.s f14, f15, f18, f25, rne # perform operation
fnmsub.s f14, f15, f18, f25, rtz # perform operation
fnmsub.s f14, f15, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f15, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f15, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f15, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f15, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f15, f18, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffff)
li x30, 0xdc91dd4862a8c422 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0xe673d825090aef4e # load x3 with value 0xe673d825090aef4e
sw x3, 0(x2) # store 0xe673d825090aef4e in memory
flw f11, 0(x2) # load 0xe673d825090aef4e from memory into f11
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fnmsub.s f30, f5, f11, f22, dyn # perform operation
fnmsub.s f30, f5, f11, f22, rdn # perform operation
fnmsub.s f30, f5, f11, f22, rmm # perform operation
fnmsub.s f30, f5, f11, f22, rne # perform operation
fnmsub.s f30, f5, f11, f22, rtz # perform operation
fnmsub.s f30, f5, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f5, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f5, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f5, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f5, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f5, f11, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x807fffff)
li x2, 0x094a82edfeccb720 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0x149e4a3105219336 # load x3 with value 0x149e4a3105219336
sw x3, 0(x2) # store 0x149e4a3105219336 in memory
flw f20, 0(x2) # load 0x149e4a3105219336 from memory into f20
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
fnmsub.s f2, f14, f20, f22, dyn # perform operation
fnmsub.s f2, f14, f20, f22, rdn # perform operation
fnmsub.s f2, f14, f20, f22, rmm # perform operation
fnmsub.s f2, f14, f20, f22, rne # perform operation
fnmsub.s f2, f14, f20, f22, rtz # perform operation
fnmsub.s f2, f14, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f14, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f14, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f14, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f14, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f14, f20, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400000)
li x11, 0x59d58e70233b33a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0x246cac1900e11ccd # load x3 with value 0x246cac1900e11ccd
sw x3, 0(x2) # store 0x246cac1900e11ccd in memory
flw f19, 0(x2) # load 0x246cac1900e11ccd from memory into f19
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
fnmsub.s f11, f2, f19, f18, dyn # perform operation
fnmsub.s f11, f2, f19, f18, rdn # perform operation
fnmsub.s f11, f2, f19, f18, rmm # perform operation
fnmsub.s f11, f2, f19, f18, rne # perform operation
fnmsub.s f11, f2, f19, f18, rtz # perform operation
fnmsub.s f11, f2, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f2, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f2, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f2, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f2, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f2, f19, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80400000)
li x16, 0xf1a05473f43a9372 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0x15bdc3f270fd7e09 # load x3 with value 0x15bdc3f270fd7e09
sw x3, 0(x2) # store 0x15bdc3f270fd7e09 in memory
flw f23, 0(x2) # load 0x15bdc3f270fd7e09 from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
fnmsub.s f16, f10, f23, f31, dyn # perform operation
fnmsub.s f16, f10, f23, f31, rdn # perform operation
fnmsub.s f16, f10, f23, f31, rmm # perform operation
fnmsub.s f16, f10, f23, f31, rne # perform operation
fnmsub.s f16, f10, f23, f31, rtz # perform operation
fnmsub.s f16, f10, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f10, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f10, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f10, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f10, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f10, f23, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
li x31, 0x746a15ec3fe26172 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x8e9dd6a8025f1e68 # load x3 with value 0x8e9dd6a8025f1e68
sw x3, 0(x2) # store 0x8e9dd6a8025f1e68 in memory
flw f25, 0(x2) # load 0x8e9dd6a8025f1e68 from memory into f25
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
fnmsub.s f31, f4, f25, f8, dyn # perform operation
fnmsub.s f31, f4, f25, f8, rdn # perform operation
fnmsub.s f31, f4, f25, f8, rmm # perform operation
fnmsub.s f31, f4, f25, f8, rne # perform operation
fnmsub.s f31, f4, f25, f8, rtz # perform operation
fnmsub.s f31, f4, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f4, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f4, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f4, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f4, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f4, f25, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000001)
li x25, 0x0c00609e0efbef15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x18a0d5337f66e61e # load x3 with value 0x18a0d5337f66e61e
sw x3, 0(x2) # store 0x18a0d5337f66e61e in memory
flw f23, 0(x2) # load 0x18a0d5337f66e61e from memory into f23
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
fnmsub.s f25, f5, f23, f14, dyn # perform operation
fnmsub.s f25, f5, f23, f14, rdn # perform operation
fnmsub.s f25, f5, f23, f14, rmm # perform operation
fnmsub.s f25, f5, f23, f14, rne # perform operation
fnmsub.s f25, f5, f23, f14, rtz # perform operation
fnmsub.s f25, f5, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f5, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f5, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f5, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f5, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f5, f23, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800000)
li x26, 0xdb6db466d792d562 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x81e243ee91f52ebc # load x3 with value 0x81e243ee91f52ebc
sw x3, 0(x2) # store 0x81e243ee91f52ebc in memory
flw f9, 0(x2) # load 0x81e243ee91f52ebc from memory into f9
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
fnmsub.s f26, f5, f9, f14, dyn # perform operation
fnmsub.s f26, f5, f9, f14, rdn # perform operation
fnmsub.s f26, f5, f9, f14, rmm # perform operation
fnmsub.s f26, f5, f9, f14, rne # perform operation
fnmsub.s f26, f5, f9, f14, rtz # perform operation
fnmsub.s f26, f5, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f5, f9, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff800000)
li x15, 0x37c2657b430a6be5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0xf69d6a87eec339b6 # load x3 with value 0xf69d6a87eec339b6
sw x3, 0(x2) # store 0xf69d6a87eec339b6 in memory
flw f4, 0(x2) # load 0xf69d6a87eec339b6 from memory into f4
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
fnmsub.s f15, f11, f4, f19, dyn # perform operation
fnmsub.s f15, f11, f4, f19, rdn # perform operation
fnmsub.s f15, f11, f4, f19, rmm # perform operation
fnmsub.s f15, f11, f4, f19, rne # perform operation
fnmsub.s f15, f11, f4, f19, rtz # perform operation
fnmsub.s f15, f11, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f11, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f11, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f11, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f11, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f11, f4, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fc00000)
li x7, 0x0906862d178c247e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0x4fa9f812bb55b0d2 # load x3 with value 0x4fa9f812bb55b0d2
sw x3, 0(x2) # store 0x4fa9f812bb55b0d2 in memory
flw f31, 0(x2) # load 0x4fa9f812bb55b0d2 from memory into f31
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
fnmsub.s f7, f28, f31, f5, dyn # perform operation
fnmsub.s f7, f28, f31, f5, rdn # perform operation
fnmsub.s f7, f28, f31, f5, rmm # perform operation
fnmsub.s f7, f28, f31, f5, rne # perform operation
fnmsub.s f7, f28, f31, f5, rtz # perform operation
fnmsub.s f7, f28, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f28, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f28, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f28, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f28, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f28, f31, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffff)
li x22, 0xe897834d4c502ee5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0xb83a39956e967ac2 # load x3 with value 0xb83a39956e967ac2
sw x3, 0(x2) # store 0xb83a39956e967ac2 in memory
flw f15, 0(x2) # load 0xb83a39956e967ac2 from memory into f15
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
fnmsub.s f22, f30, f15, f10, dyn # perform operation
fnmsub.s f22, f30, f15, f10, rdn # perform operation
fnmsub.s f22, f30, f15, f10, rmm # perform operation
fnmsub.s f22, f30, f15, f10, rne # perform operation
fnmsub.s f22, f30, f15, f10, rtz # perform operation
fnmsub.s f22, f30, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f30, f15, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800001)
li x22, 0x182712156dbb9eae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0xa1a5e151d78c818d # load x3 with value 0xa1a5e151d78c818d
sw x3, 0(x2) # store 0xa1a5e151d78c818d in memory
flw f28, 0(x2) # load 0xa1a5e151d78c818d from memory into f28
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
fnmsub.s f22, f2, f28, f25, dyn # perform operation
fnmsub.s f22, f2, f28, f25, rdn # perform operation
fnmsub.s f22, f2, f28, f25, rmm # perform operation
fnmsub.s f22, f2, f28, f25, rne # perform operation
fnmsub.s f22, f2, f28, f25, rtz # perform operation
fnmsub.s f22, f2, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f2, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f2, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f2, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f2, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f2, f28, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fbfffff)
li x10, 0x76894d306f7db0fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x49af5298c226bfb # load x3 with value 0x49af5298c226bfb
sw x3, 0(x2) # store 0x49af5298c226bfb in memory
flw f4, 0(x2) # load 0x49af5298c226bfb from memory into f4
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
fnmsub.s f10, f21, f4, f13, dyn # perform operation
fnmsub.s f10, f21, f4, f13, rdn # perform operation
fnmsub.s f10, f21, f4, f13, rmm # perform operation
fnmsub.s f10, f21, f4, f13, rne # perform operation
fnmsub.s f10, f21, f4, f13, rtz # perform operation
fnmsub.s f10, f21, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f21, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f21, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f21, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f21, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f21, f4, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ef8654f)
li x23, 0xb5901aa1ddc86856 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0xcc5a5e6c1e7be476 # load x3 with value 0xcc5a5e6c1e7be476
sw x3, 0(x2) # store 0xcc5a5e6c1e7be476 in memory
flw f25, 0(x2) # load 0xcc5a5e6c1e7be476 from memory into f25
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
fnmsub.s f23, f1, f25, f20, dyn # perform operation
fnmsub.s f23, f1, f25, f20, rdn # perform operation
fnmsub.s f23, f1, f25, f20, rmm # perform operation
fnmsub.s f23, f1, f25, f20, rne # perform operation
fnmsub.s f23, f1, f25, f20, rtz # perform operation
fnmsub.s f23, f1, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f1, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f1, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f1, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f1, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f1, f25, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x813d9ab0)
li x4, 0x313c017d971b292f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0x8e60f03a3eb82087 # load x3 with value 0x8e60f03a3eb82087
sw x3, 0(x2) # store 0x8e60f03a3eb82087 in memory
flw f22, 0(x2) # load 0x8e60f03a3eb82087 from memory into f22
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
fnmsub.s f4, f1, f22, f21, dyn # perform operation
fnmsub.s f4, f1, f22, f21, rdn # perform operation
fnmsub.s f4, f1, f22, f21, rmm # perform operation
fnmsub.s f4, f1, f22, f21, rne # perform operation
fnmsub.s f4, f1, f22, f21, rtz # perform operation
fnmsub.s f4, f1, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f1, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f1, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f1, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f1, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f1, f22, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x0)
li x6, 0xc820ed75d73f660f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0x4cb07813342036d8 # load x3 with value 0x4cb07813342036d8
sw x3, 0(x2) # store 0x4cb07813342036d8 in memory
flw f3, 0(x2) # load 0x4cb07813342036d8 from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
fnmsub.s f6, f17, f3, f29, dyn # perform operation
fnmsub.s f6, f17, f3, f29, rdn # perform operation
fnmsub.s f6, f17, f3, f29, rmm # perform operation
fnmsub.s f6, f17, f3, f29, rne # perform operation
fnmsub.s f6, f17, f3, f29, rtz # perform operation
fnmsub.s f6, f17, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f17, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f17, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f17, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f17, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f17, f3, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000000)
li x11, 0xc73906334254c4fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0x777c993a48e9b513 # load x3 with value 0x777c993a48e9b513
sw x3, 0(x2) # store 0x777c993a48e9b513 in memory
flw f2, 0(x2) # load 0x777c993a48e9b513 from memory into f2
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
fnmsub.s f11, f27, f2, f19, dyn # perform operation
fnmsub.s f11, f27, f2, f19, rdn # perform operation
fnmsub.s f11, f27, f2, f19, rmm # perform operation
fnmsub.s f11, f27, f2, f19, rne # perform operation
fnmsub.s f11, f27, f2, f19, rtz # perform operation
fnmsub.s f11, f27, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f27, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f27, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f27, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f27, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f27, f2, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3f800000)
li x10, 0x8896d840fee69b49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0x3c2865a482ef1416 # load x3 with value 0x3c2865a482ef1416
sw x3, 0(x2) # store 0x3c2865a482ef1416 in memory
flw f6, 0(x2) # load 0x3c2865a482ef1416 from memory into f6
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fnmsub.s f10, f29, f6, f27, dyn # perform operation
fnmsub.s f10, f29, f6, f27, rdn # perform operation
fnmsub.s f10, f29, f6, f27, rmm # perform operation
fnmsub.s f10, f29, f6, f27, rne # perform operation
fnmsub.s f10, f29, f6, f27, rtz # perform operation
fnmsub.s f10, f29, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f29, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f29, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f29, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f29, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f29, f6, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbf800000)
li x29, 0x6e21549043e8a656 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
li x3, 0x283b993a28913504 # load x3 with value 0x283b993a28913504
sw x3, 0(x2) # store 0x283b993a28913504 in memory
flw f8, 0(x2) # load 0x283b993a28913504 from memory into f8
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
fnmsub.s f29, f12, f8, f4, dyn # perform operation
fnmsub.s f29, f12, f8, f4, rdn # perform operation
fnmsub.s f29, f12, f8, f4, rmm # perform operation
fnmsub.s f29, f12, f8, f4, rne # perform operation
fnmsub.s f29, f12, f8, f4, rtz # perform operation
fnmsub.s f29, f12, f8, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f12, f8, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f12, f8, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f12, f8, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f12, f8, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f12, f8, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3fc00000)
li x19, 0x93c70d91995e8ac3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0x5da17a16c28e0e6b # load x3 with value 0x5da17a16c28e0e6b
sw x3, 0(x2) # store 0x5da17a16c28e0e6b in memory
flw f6, 0(x2) # load 0x5da17a16c28e0e6b from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
fnmsub.s f19, f15, f6, f5, dyn # perform operation
fnmsub.s f19, f15, f6, f5, rdn # perform operation
fnmsub.s f19, f15, f6, f5, rmm # perform operation
fnmsub.s f19, f15, f6, f5, rne # perform operation
fnmsub.s f19, f15, f6, f5, rtz # perform operation
fnmsub.s f19, f15, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f15, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f15, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f15, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f15, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f15, f6, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbfc00000)
li x3, 0x9042acb8ec93d0eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0xdda6fb9ecbb64366 # load x3 with value 0xdda6fb9ecbb64366
sw x3, 0(x2) # store 0xdda6fb9ecbb64366 in memory
flw f26, 0(x2) # load 0xdda6fb9ecbb64366 from memory into f26
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
fnmsub.s f3, f29, f26, f13, dyn # perform operation
fnmsub.s f3, f29, f26, f13, rdn # perform operation
fnmsub.s f3, f29, f26, f13, rmm # perform operation
fnmsub.s f3, f29, f26, f13, rne # perform operation
fnmsub.s f3, f29, f26, f13, rtz # perform operation
fnmsub.s f3, f29, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f29, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f29, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f29, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f29, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f29, f26, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x40000000)
li x13, 0xdac39eaeba975647 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0xf2f1f6997c137821 # load x3 with value 0xf2f1f6997c137821
sw x3, 0(x2) # store 0xf2f1f6997c137821 in memory
flw f21, 0(x2) # load 0xf2f1f6997c137821 from memory into f21
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
fnmsub.s f13, f9, f21, f14, dyn # perform operation
fnmsub.s f13, f9, f21, f14, rdn # perform operation
fnmsub.s f13, f9, f21, f14, rmm # perform operation
fnmsub.s f13, f9, f21, f14, rne # perform operation
fnmsub.s f13, f9, f21, f14, rtz # perform operation
fnmsub.s f13, f9, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f9, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f9, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f9, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f9, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f9, f21, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xc0000000)
li x7, 0xe99095e0fef1ca6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
li x3, 0xbe770ea40a621491 # load x3 with value 0xbe770ea40a621491
sw x3, 0(x2) # store 0xbe770ea40a621491 in memory
flw f16, 0(x2) # load 0xbe770ea40a621491 from memory into f16
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
fnmsub.s f7, f13, f16, f29, dyn # perform operation
fnmsub.s f7, f13, f16, f29, rdn # perform operation
fnmsub.s f7, f13, f16, f29, rmm # perform operation
fnmsub.s f7, f13, f16, f29, rne # perform operation
fnmsub.s f7, f13, f16, f29, rtz # perform operation
fnmsub.s f7, f13, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f13, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f13, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f13, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f13, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f13, f16, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x800000)
li x18, 0x1c33e271ac6a0084 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
li x3, 0xc4c31745d66a49ff # load x3 with value 0xc4c31745d66a49ff
sw x3, 0(x2) # store 0xc4c31745d66a49ff in memory
flw f5, 0(x2) # load 0xc4c31745d66a49ff from memory into f5
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
fnmsub.s f18, f14, f5, f2, dyn # perform operation
fnmsub.s f18, f14, f5, f2, rdn # perform operation
fnmsub.s f18, f14, f5, f2, rmm # perform operation
fnmsub.s f18, f14, f5, f2, rne # perform operation
fnmsub.s f18, f14, f5, f2, rtz # perform operation
fnmsub.s f18, f14, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f14, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f14, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f14, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f14, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f14, f5, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80800000)
li x7, 0x20de5ca3991d8020 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0xf7a995d62abee543 # load x3 with value 0xf7a995d62abee543
sw x3, 0(x2) # store 0xf7a995d62abee543 in memory
flw f15, 0(x2) # load 0xf7a995d62abee543 from memory into f15
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fnmsub.s f7, f6, f15, f12, dyn # perform operation
fnmsub.s f7, f6, f15, f12, rdn # perform operation
fnmsub.s f7, f6, f15, f12, rmm # perform operation
fnmsub.s f7, f6, f15, f12, rne # perform operation
fnmsub.s f7, f6, f15, f12, rtz # perform operation
fnmsub.s f7, f6, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f6, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f6, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f6, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f6, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f6, f15, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f7fffff)
li x9, 0xe155efbdb147ea62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
li x3, 0xfaddaa63cd1f49c2 # load x3 with value 0xfaddaa63cd1f49c2
sw x3, 0(x2) # store 0xfaddaa63cd1f49c2 in memory
flw f22, 0(x2) # load 0xfaddaa63cd1f49c2 from memory into f22
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
fnmsub.s f9, f2, f22, f26, dyn # perform operation
fnmsub.s f9, f2, f22, f26, rdn # perform operation
fnmsub.s f9, f2, f22, f26, rmm # perform operation
fnmsub.s f9, f2, f22, f26, rne # perform operation
fnmsub.s f9, f2, f22, f26, rtz # perform operation
fnmsub.s f9, f2, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f2, f22, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff7fffff)
li x19, 0xf736f4019f1b1e8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
li x3, 0x701fe9e1d7ce8902 # load x3 with value 0x701fe9e1d7ce8902
sw x3, 0(x2) # store 0x701fe9e1d7ce8902 in memory
flw f30, 0(x2) # load 0x701fe9e1d7ce8902 from memory into f30
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fnmsub.s f19, f4, f30, f24, dyn # perform operation
fnmsub.s f19, f4, f30, f24, rdn # perform operation
fnmsub.s f19, f4, f30, f24, rmm # perform operation
fnmsub.s f19, f4, f30, f24, rne # perform operation
fnmsub.s f19, f4, f30, f24, rtz # perform operation
fnmsub.s f19, f4, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f4, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f4, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f4, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f4, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f4, f30, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffff)
li x17, 0xef91df06b4c0831f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0x269d7d3263459b6e # load x3 with value 0x269d7d3263459b6e
sw x3, 0(x2) # store 0x269d7d3263459b6e in memory
flw f1, 0(x2) # load 0x269d7d3263459b6e from memory into f1
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fnmsub.s f17, f16, f1, f14, dyn # perform operation
fnmsub.s f17, f16, f1, f14, rdn # perform operation
fnmsub.s f17, f16, f1, f14, rmm # perform operation
fnmsub.s f17, f16, f1, f14, rne # perform operation
fnmsub.s f17, f16, f1, f14, rtz # perform operation
fnmsub.s f17, f16, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f16, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f16, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f16, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f16, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f16, f1, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x807fffff)
li x19, 0x3088c745211c4fb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0xee321c48d0302a80 # load x3 with value 0xee321c48d0302a80
sw x3, 0(x2) # store 0xee321c48d0302a80 in memory
flw f17, 0(x2) # load 0xee321c48d0302a80 from memory into f17
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
fnmsub.s f19, f24, f17, f11, dyn # perform operation
fnmsub.s f19, f24, f17, f11, rdn # perform operation
fnmsub.s f19, f24, f17, f11, rmm # perform operation
fnmsub.s f19, f24, f17, f11, rne # perform operation
fnmsub.s f19, f24, f17, f11, rtz # perform operation
fnmsub.s f19, f24, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f24, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f24, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f24, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f24, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f24, f17, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x400000)
li x27, 0x4221c6b322c0a947 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0x2d21cf13cd7f48eb # load x3 with value 0x2d21cf13cd7f48eb
sw x3, 0(x2) # store 0x2d21cf13cd7f48eb in memory
flw f11, 0(x2) # load 0x2d21cf13cd7f48eb from memory into f11
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fnmsub.s f27, f16, f11, f25, dyn # perform operation
fnmsub.s f27, f16, f11, f25, rdn # perform operation
fnmsub.s f27, f16, f11, f25, rmm # perform operation
fnmsub.s f27, f16, f11, f25, rne # perform operation
fnmsub.s f27, f16, f11, f25, rtz # perform operation
fnmsub.s f27, f16, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f16, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f16, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f16, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f16, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f16, f11, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80400000)
li x1, 0xf098d2a1c74ab251 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0x6710101178acf71c # load x3 with value 0x6710101178acf71c
sw x3, 0(x2) # store 0x6710101178acf71c in memory
flw f24, 0(x2) # load 0x6710101178acf71c from memory into f24
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
fnmsub.s f1, f9, f24, f30, dyn # perform operation
fnmsub.s f1, f9, f24, f30, rdn # perform operation
fnmsub.s f1, f9, f24, f30, rmm # perform operation
fnmsub.s f1, f9, f24, f30, rne # perform operation
fnmsub.s f1, f9, f24, f30, rtz # perform operation
fnmsub.s f1, f9, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f9, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f9, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f9, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f9, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f9, f24, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x1)
li x15, 0xab72ac2997837c03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0xf0785dfb7c2cdc50 # load x3 with value 0xf0785dfb7c2cdc50
sw x3, 0(x2) # store 0xf0785dfb7c2cdc50 in memory
flw f28, 0(x2) # load 0xf0785dfb7c2cdc50 from memory into f28
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
fnmsub.s f15, f20, f28, f19, dyn # perform operation
fnmsub.s f15, f20, f28, f19, rdn # perform operation
fnmsub.s f15, f20, f28, f19, rmm # perform operation
fnmsub.s f15, f20, f28, f19, rne # perform operation
fnmsub.s f15, f20, f28, f19, rtz # perform operation
fnmsub.s f15, f20, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f20, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f20, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f20, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f20, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f20, f28, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000001)
li x17, 0xb6d2dbea1bb0d4bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0x9f9862043758b122 # load x3 with value 0x9f9862043758b122
sw x3, 0(x2) # store 0x9f9862043758b122 in memory
flw f15, 0(x2) # load 0x9f9862043758b122 from memory into f15
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
fnmsub.s f17, f28, f15, f1, dyn # perform operation
fnmsub.s f17, f28, f15, f1, rdn # perform operation
fnmsub.s f17, f28, f15, f1, rmm # perform operation
fnmsub.s f17, f28, f15, f1, rne # perform operation
fnmsub.s f17, f28, f15, f1, rtz # perform operation
fnmsub.s f17, f28, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f28, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f28, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f28, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f28, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f28, f15, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800000)
li x28, 0xf91be5bd6b65860e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
li x3, 0xa79edf807837c708 # load x3 with value 0xa79edf807837c708
sw x3, 0(x2) # store 0xa79edf807837c708 in memory
flw f9, 0(x2) # load 0xa79edf807837c708 from memory into f9
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
fnmsub.s f28, f12, f9, f26, dyn # perform operation
fnmsub.s f28, f12, f9, f26, rdn # perform operation
fnmsub.s f28, f12, f9, f26, rmm # perform operation
fnmsub.s f28, f12, f9, f26, rne # perform operation
fnmsub.s f28, f12, f9, f26, rtz # perform operation
fnmsub.s f28, f12, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f12, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f12, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f12, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f12, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f12, f9, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff800000)
li x9, 0xb32e8560d816e369 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
li x3, 0x5042026f09da8eaf # load x3 with value 0x5042026f09da8eaf
sw x3, 0(x2) # store 0x5042026f09da8eaf in memory
flw f12, 0(x2) # load 0x5042026f09da8eaf from memory into f12
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
fnmsub.s f9, f26, f12, f5, dyn # perform operation
fnmsub.s f9, f26, f12, f5, rdn # perform operation
fnmsub.s f9, f26, f12, f5, rmm # perform operation
fnmsub.s f9, f26, f12, f5, rne # perform operation
fnmsub.s f9, f26, f12, f5, rtz # perform operation
fnmsub.s f9, f26, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f26, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f26, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f26, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f26, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f26, f12, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fc00000)
li x9, 0x119f5bbca30793e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0x707ccc3514263a23 # load x3 with value 0x707ccc3514263a23
sw x3, 0(x2) # store 0x707ccc3514263a23 in memory
flw f21, 0(x2) # load 0x707ccc3514263a23 from memory into f21
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
fnmsub.s f9, f20, f21, f1, dyn # perform operation
fnmsub.s f9, f20, f21, f1, rdn # perform operation
fnmsub.s f9, f20, f21, f1, rmm # perform operation
fnmsub.s f9, f20, f21, f1, rne # perform operation
fnmsub.s f9, f20, f21, f1, rtz # perform operation
fnmsub.s f9, f20, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f20, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f20, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f20, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f20, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f20, f21, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffffff)
li x23, 0xd3cbd1c24e93f74c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0xefc005163a7c04e # load x3 with value 0xefc005163a7c04e
sw x3, 0(x2) # store 0xefc005163a7c04e in memory
flw f17, 0(x2) # load 0xefc005163a7c04e from memory into f17
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
fnmsub.s f23, f3, f17, f25, dyn # perform operation
fnmsub.s f23, f3, f17, f25, rdn # perform operation
fnmsub.s f23, f3, f17, f25, rmm # perform operation
fnmsub.s f23, f3, f17, f25, rne # perform operation
fnmsub.s f23, f3, f17, f25, rtz # perform operation
fnmsub.s f23, f3, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f3, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f3, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f3, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f3, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f3, f17, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800001)
li x17, 0x0f2da7de7efcb349 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0x5f3d2ae9e1e215c0 # load x3 with value 0x5f3d2ae9e1e215c0
sw x3, 0(x2) # store 0x5f3d2ae9e1e215c0 in memory
flw f25, 0(x2) # load 0x5f3d2ae9e1e215c0 from memory into f25
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
fnmsub.s f17, f31, f25, f20, dyn # perform operation
fnmsub.s f17, f31, f25, f20, rdn # perform operation
fnmsub.s f17, f31, f25, f20, rmm # perform operation
fnmsub.s f17, f31, f25, f20, rne # perform operation
fnmsub.s f17, f31, f25, f20, rtz # perform operation
fnmsub.s f17, f31, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f31, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f31, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f31, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f31, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f31, f25, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fbfffff)
li x25, 0x017e7ff6f6ad31a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0xd1cde636310e07cf # load x3 with value 0xd1cde636310e07cf
sw x3, 0(x2) # store 0xd1cde636310e07cf in memory
flw f13, 0(x2) # load 0xd1cde636310e07cf from memory into f13
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
fnmsub.s f25, f29, f13, f15, dyn # perform operation
fnmsub.s f25, f29, f13, f15, rdn # perform operation
fnmsub.s f25, f29, f13, f15, rmm # perform operation
fnmsub.s f25, f29, f13, f15, rne # perform operation
fnmsub.s f25, f29, f13, f15, rtz # perform operation
fnmsub.s f25, f29, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f29, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f29, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f29, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f29, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f29, f13, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7ef8654f)
li x19, 0x07c7ade38891ca12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0x12b953b8596ed3fa # load x3 with value 0x12b953b8596ed3fa
sw x3, 0(x2) # store 0x12b953b8596ed3fa in memory
flw f20, 0(x2) # load 0x12b953b8596ed3fa from memory into f20
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
fnmsub.s f19, f16, f20, f5, dyn # perform operation
fnmsub.s f19, f16, f20, f5, rdn # perform operation
fnmsub.s f19, f16, f20, f5, rmm # perform operation
fnmsub.s f19, f16, f20, f5, rne # perform operation
fnmsub.s f19, f16, f20, f5, rtz # perform operation
fnmsub.s f19, f16, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f16, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f16, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f16, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f16, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f16, f20, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x813d9ab0)
li x19, 0xb98f4a3205236926 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
li x3, 0x1685fc7ba70399e2 # load x3 with value 0x1685fc7ba70399e2
sw x3, 0(x2) # store 0x1685fc7ba70399e2 in memory
flw f29, 0(x2) # load 0x1685fc7ba70399e2 from memory into f29
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
fnmsub.s f19, f2, f29, f15, dyn # perform operation
fnmsub.s f19, f2, f29, f15, rdn # perform operation
fnmsub.s f19, f2, f29, f15, rmm # perform operation
fnmsub.s f19, f2, f29, f15, rne # perform operation
fnmsub.s f19, f2, f29, f15, rtz # perform operation
fnmsub.s f19, f2, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f2, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f2, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f2, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f2, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f2, f29, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x0)
li x9, 0xd84b3aa34727e1b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0xa46b3144bfa45abf # load x3 with value 0xa46b3144bfa45abf
sw x3, 0(x2) # store 0xa46b3144bfa45abf in memory
flw f2, 0(x2) # load 0xa46b3144bfa45abf from memory into f2
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
fnmsub.s f9, f24, f2, f15, dyn # perform operation
fnmsub.s f9, f24, f2, f15, rdn # perform operation
fnmsub.s f9, f24, f2, f15, rmm # perform operation
fnmsub.s f9, f24, f2, f15, rne # perform operation
fnmsub.s f9, f24, f2, f15, rtz # perform operation
fnmsub.s f9, f24, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f24, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f24, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f24, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f24, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f24, f2, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000000)
li x18, 0x1f93bcd9f12c690e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
li x3, 0x66f64714024b036b # load x3 with value 0x66f64714024b036b
sw x3, 0(x2) # store 0x66f64714024b036b in memory
flw f27, 0(x2) # load 0x66f64714024b036b from memory into f27
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
fnmsub.s f18, f12, f27, f5, dyn # perform operation
fnmsub.s f18, f12, f27, f5, rdn # perform operation
fnmsub.s f18, f12, f27, f5, rmm # perform operation
fnmsub.s f18, f12, f27, f5, rne # perform operation
fnmsub.s f18, f12, f27, f5, rtz # perform operation
fnmsub.s f18, f12, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f12, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f12, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f12, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f12, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f12, f27, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3f800000)
li x16, 0x4d39f5275f7bd1aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0x580fa8773852e703 # load x3 with value 0x580fa8773852e703
sw x3, 0(x2) # store 0x580fa8773852e703 in memory
flw f17, 0(x2) # load 0x580fa8773852e703 from memory into f17
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fnmsub.s f16, f7, f17, f27, dyn # perform operation
fnmsub.s f16, f7, f17, f27, rdn # perform operation
fnmsub.s f16, f7, f17, f27, rmm # perform operation
fnmsub.s f16, f7, f17, f27, rne # perform operation
fnmsub.s f16, f7, f17, f27, rtz # perform operation
fnmsub.s f16, f7, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f7, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f7, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f7, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f7, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f7, f17, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbf800000)
li x4, 0x31c15054f896bbdf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0x8862e12782c55c6 # load x3 with value 0x8862e12782c55c6
sw x3, 0(x2) # store 0x8862e12782c55c6 in memory
flw f14, 0(x2) # load 0x8862e12782c55c6 from memory into f14
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
fnmsub.s f4, f7, f14, f25, dyn # perform operation
fnmsub.s f4, f7, f14, f25, rdn # perform operation
fnmsub.s f4, f7, f14, f25, rmm # perform operation
fnmsub.s f4, f7, f14, f25, rne # perform operation
fnmsub.s f4, f7, f14, f25, rtz # perform operation
fnmsub.s f4, f7, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f7, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f7, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f7, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f7, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f7, f14, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3fc00000)
li x24, 0x8cbf8c595086e239 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
li x3, 0x5a0ecae923280988 # load x3 with value 0x5a0ecae923280988
sw x3, 0(x2) # store 0x5a0ecae923280988 in memory
flw f20, 0(x2) # load 0x5a0ecae923280988 from memory into f20
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
fnmsub.s f24, f5, f20, f17, dyn # perform operation
fnmsub.s f24, f5, f20, f17, rdn # perform operation
fnmsub.s f24, f5, f20, f17, rmm # perform operation
fnmsub.s f24, f5, f20, f17, rne # perform operation
fnmsub.s f24, f5, f20, f17, rtz # perform operation
fnmsub.s f24, f5, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f5, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f5, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f5, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f5, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f5, f20, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbfc00000)
li x8, 0x988d63cc63357ed0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0x86011b01e5ddee99 # load x3 with value 0x86011b01e5ddee99
sw x3, 0(x2) # store 0x86011b01e5ddee99 in memory
flw f10, 0(x2) # load 0x86011b01e5ddee99 from memory into f10
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
fnmsub.s f8, f9, f10, f5, dyn # perform operation
fnmsub.s f8, f9, f10, f5, rdn # perform operation
fnmsub.s f8, f9, f10, f5, rmm # perform operation
fnmsub.s f8, f9, f10, f5, rne # perform operation
fnmsub.s f8, f9, f10, f5, rtz # perform operation
fnmsub.s f8, f9, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f9, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f9, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f9, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f9, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f9, f10, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x40000000)
li x29, 0xc35d32964d9d45ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
li x3, 0xff084ec2d9afb67b # load x3 with value 0xff084ec2d9afb67b
sw x3, 0(x2) # store 0xff084ec2d9afb67b in memory
flw f6, 0(x2) # load 0xff084ec2d9afb67b from memory into f6
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fnmsub.s f29, f4, f6, f23, dyn # perform operation
fnmsub.s f29, f4, f6, f23, rdn # perform operation
fnmsub.s f29, f4, f6, f23, rmm # perform operation
fnmsub.s f29, f4, f6, f23, rne # perform operation
fnmsub.s f29, f4, f6, f23, rtz # perform operation
fnmsub.s f29, f4, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f4, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f4, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f4, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f4, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f4, f6, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xc0000000)
li x5, 0x629daca80a28a9c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
li x3, 0x4cbf40e0a95e92b4 # load x3 with value 0x4cbf40e0a95e92b4
sw x3, 0(x2) # store 0x4cbf40e0a95e92b4 in memory
flw f26, 0(x2) # load 0x4cbf40e0a95e92b4 from memory into f26
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
fnmsub.s f5, f20, f26, f1, dyn # perform operation
fnmsub.s f5, f20, f26, f1, rdn # perform operation
fnmsub.s f5, f20, f26, f1, rmm # perform operation
fnmsub.s f5, f20, f26, f1, rne # perform operation
fnmsub.s f5, f20, f26, f1, rtz # perform operation
fnmsub.s f5, f20, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f20, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f20, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f20, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f20, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f20, f26, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x800000)
li x10, 0xbdc5b38ad931cde7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0xaeba9d28df61a703 # load x3 with value 0xaeba9d28df61a703
sw x3, 0(x2) # store 0xaeba9d28df61a703 in memory
flw f19, 0(x2) # load 0xaeba9d28df61a703 from memory into f19
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
fnmsub.s f10, f9, f19, f15, dyn # perform operation
fnmsub.s f10, f9, f19, f15, rdn # perform operation
fnmsub.s f10, f9, f19, f15, rmm # perform operation
fnmsub.s f10, f9, f19, f15, rne # perform operation
fnmsub.s f10, f9, f19, f15, rtz # perform operation
fnmsub.s f10, f9, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f9, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f9, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f9, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f9, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f9, f19, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80800000)
li x30, 0x020a78f9567486e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0xd6b98f3090d21d8f # load x3 with value 0xd6b98f3090d21d8f
sw x3, 0(x2) # store 0xd6b98f3090d21d8f in memory
flw f23, 0(x2) # load 0xd6b98f3090d21d8f from memory into f23
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
fnmsub.s f30, f7, f23, f21, dyn # perform operation
fnmsub.s f30, f7, f23, f21, rdn # perform operation
fnmsub.s f30, f7, f23, f21, rmm # perform operation
fnmsub.s f30, f7, f23, f21, rne # perform operation
fnmsub.s f30, f7, f23, f21, rtz # perform operation
fnmsub.s f30, f7, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f7, f23, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f7fffff)
li x29, 0xf6a2b2ec9f59bb3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0x46171fc1c4cd704d # load x3 with value 0x46171fc1c4cd704d
sw x3, 0(x2) # store 0x46171fc1c4cd704d in memory
flw f5, 0(x2) # load 0x46171fc1c4cd704d from memory into f5
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
fnmsub.s f29, f2, f5, f16, dyn # perform operation
fnmsub.s f29, f2, f5, f16, rdn # perform operation
fnmsub.s f29, f2, f5, f16, rmm # perform operation
fnmsub.s f29, f2, f5, f16, rne # perform operation
fnmsub.s f29, f2, f5, f16, rtz # perform operation
fnmsub.s f29, f2, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f2, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f2, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f2, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f2, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f2, f5, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff7fffff)
li x15, 0x10b9b9fdd44fbe6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0x673a5fca66ef0ad6 # load x3 with value 0x673a5fca66ef0ad6
sw x3, 0(x2) # store 0x673a5fca66ef0ad6 in memory
flw f9, 0(x2) # load 0x673a5fca66ef0ad6 from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fnmsub.s f15, f16, f9, f5, dyn # perform operation
fnmsub.s f15, f16, f9, f5, rdn # perform operation
fnmsub.s f15, f16, f9, f5, rmm # perform operation
fnmsub.s f15, f16, f9, f5, rne # perform operation
fnmsub.s f15, f16, f9, f5, rtz # perform operation
fnmsub.s f15, f16, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f16, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f16, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f16, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f16, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f16, f9, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffff)
li x18, 0x79e262670ebe934a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
li x3, 0xaf9ba82f8274a2fd # load x3 with value 0xaf9ba82f8274a2fd
sw x3, 0(x2) # store 0xaf9ba82f8274a2fd in memory
flw f8, 0(x2) # load 0xaf9ba82f8274a2fd from memory into f8
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
fnmsub.s f18, f12, f8, f19, dyn # perform operation
fnmsub.s f18, f12, f8, f19, rdn # perform operation
fnmsub.s f18, f12, f8, f19, rmm # perform operation
fnmsub.s f18, f12, f8, f19, rne # perform operation
fnmsub.s f18, f12, f8, f19, rtz # perform operation
fnmsub.s f18, f12, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f12, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f12, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f12, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f12, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f12, f8, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x807fffff)
li x22, 0xdfb9901c2a373d58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x3f80c7b065cadaa3 # load x3 with value 0x3f80c7b065cadaa3
sw x3, 0(x2) # store 0x3f80c7b065cadaa3 in memory
flw f1, 0(x2) # load 0x3f80c7b065cadaa3 from memory into f1
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
fnmsub.s f22, f25, f1, f11, dyn # perform operation
fnmsub.s f22, f25, f1, f11, rdn # perform operation
fnmsub.s f22, f25, f1, f11, rmm # perform operation
fnmsub.s f22, f25, f1, f11, rne # perform operation
fnmsub.s f22, f25, f1, f11, rtz # perform operation
fnmsub.s f22, f25, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f25, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f25, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f25, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f25, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f25, f1, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x400000)
li x28, 0xd00195106364c870 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0xc3f064220d1c528e # load x3 with value 0xc3f064220d1c528e
sw x3, 0(x2) # store 0xc3f064220d1c528e in memory
flw f22, 0(x2) # load 0xc3f064220d1c528e from memory into f22
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
fnmsub.s f28, f6, f22, f1, dyn # perform operation
fnmsub.s f28, f6, f22, f1, rdn # perform operation
fnmsub.s f28, f6, f22, f1, rmm # perform operation
fnmsub.s f28, f6, f22, f1, rne # perform operation
fnmsub.s f28, f6, f22, f1, rtz # perform operation
fnmsub.s f28, f6, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f6, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f6, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f6, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f6, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f6, f22, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80400000)
li x12, 0xcc90f1683c63496a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x4cf0258de957fdca # load x3 with value 0x4cf0258de957fdca
sw x3, 0(x2) # store 0x4cf0258de957fdca in memory
flw f1, 0(x2) # load 0x4cf0258de957fdca from memory into f1
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fnmsub.s f12, f25, f1, f21, dyn # perform operation
fnmsub.s f12, f25, f1, f21, rdn # perform operation
fnmsub.s f12, f25, f1, f21, rmm # perform operation
fnmsub.s f12, f25, f1, f21, rne # perform operation
fnmsub.s f12, f25, f1, f21, rtz # perform operation
fnmsub.s f12, f25, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f25, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f25, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f25, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f25, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f25, f1, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x1)
li x13, 0x674bfc722639ba0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
li x3, 0xd6f5f678eb218017 # load x3 with value 0xd6f5f678eb218017
sw x3, 0(x2) # store 0xd6f5f678eb218017 in memory
flw f16, 0(x2) # load 0xd6f5f678eb218017 from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
fnmsub.s f13, f3, f16, f23, dyn # perform operation
fnmsub.s f13, f3, f16, f23, rdn # perform operation
fnmsub.s f13, f3, f16, f23, rmm # perform operation
fnmsub.s f13, f3, f16, f23, rne # perform operation
fnmsub.s f13, f3, f16, f23, rtz # perform operation
fnmsub.s f13, f3, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f3, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f3, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f3, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f3, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f3, f16, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000001)
li x16, 0x235cd1bd99b0820e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0xc932a1d06a2aa9ce # load x3 with value 0xc932a1d06a2aa9ce
sw x3, 0(x2) # store 0xc932a1d06a2aa9ce in memory
flw f15, 0(x2) # load 0xc932a1d06a2aa9ce from memory into f15
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
fnmsub.s f16, f27, f15, f1, dyn # perform operation
fnmsub.s f16, f27, f15, f1, rdn # perform operation
fnmsub.s f16, f27, f15, f1, rmm # perform operation
fnmsub.s f16, f27, f15, f1, rne # perform operation
fnmsub.s f16, f27, f15, f1, rtz # perform operation
fnmsub.s f16, f27, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f27, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f27, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f27, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f27, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f27, f15, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800000)
li x12, 0x1b947de143e013db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0x10d525ef98591121 # load x3 with value 0x10d525ef98591121
sw x3, 0(x2) # store 0x10d525ef98591121 in memory
flw f9, 0(x2) # load 0x10d525ef98591121 from memory into f9
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
fnmsub.s f12, f16, f9, f22, dyn # perform operation
fnmsub.s f12, f16, f9, f22, rdn # perform operation
fnmsub.s f12, f16, f9, f22, rmm # perform operation
fnmsub.s f12, f16, f9, f22, rne # perform operation
fnmsub.s f12, f16, f9, f22, rtz # perform operation
fnmsub.s f12, f16, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f16, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f16, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f16, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f16, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f16, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff800000)
li x17, 0xbac3f1a556455098 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0xe9fbf08b0bfd850b # load x3 with value 0xe9fbf08b0bfd850b
sw x3, 0(x2) # store 0xe9fbf08b0bfd850b in memory
flw f13, 0(x2) # load 0xe9fbf08b0bfd850b from memory into f13
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
fnmsub.s f17, f25, f13, f7, dyn # perform operation
fnmsub.s f17, f25, f13, f7, rdn # perform operation
fnmsub.s f17, f25, f13, f7, rmm # perform operation
fnmsub.s f17, f25, f13, f7, rne # perform operation
fnmsub.s f17, f25, f13, f7, rtz # perform operation
fnmsub.s f17, f25, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f25, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f25, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f25, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f25, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f25, f13, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fc00000)
li x16, 0xc88aebf33fa247b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0x94c43ed4fa698b88 # load x3 with value 0x94c43ed4fa698b88
sw x3, 0(x2) # store 0x94c43ed4fa698b88 in memory
flw f17, 0(x2) # load 0x94c43ed4fa698b88 from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
fnmsub.s f16, f8, f17, f15, dyn # perform operation
fnmsub.s f16, f8, f17, f15, rdn # perform operation
fnmsub.s f16, f8, f17, f15, rmm # perform operation
fnmsub.s f16, f8, f17, f15, rne # perform operation
fnmsub.s f16, f8, f17, f15, rtz # perform operation
fnmsub.s f16, f8, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f8, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f8, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f8, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f8, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f8, f17, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffffff)
li x29, 0x9639bc2969496d68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
li x3, 0xb5657341abf72288 # load x3 with value 0xb5657341abf72288
sw x3, 0(x2) # store 0xb5657341abf72288 in memory
flw f16, 0(x2) # load 0xb5657341abf72288 from memory into f16
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
fnmsub.s f29, f5, f16, f9, dyn # perform operation
fnmsub.s f29, f5, f16, f9, rdn # perform operation
fnmsub.s f29, f5, f16, f9, rmm # perform operation
fnmsub.s f29, f5, f16, f9, rne # perform operation
fnmsub.s f29, f5, f16, f9, rtz # perform operation
fnmsub.s f29, f5, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f5, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f5, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f5, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f5, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f5, f16, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800001)
li x15, 0xacb4e63a359f6b0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0xba33ae601ead3da6 # load x3 with value 0xba33ae601ead3da6
sw x3, 0(x2) # store 0xba33ae601ead3da6 in memory
flw f8, 0(x2) # load 0xba33ae601ead3da6 from memory into f8
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
fnmsub.s f15, f18, f8, f9, dyn # perform operation
fnmsub.s f15, f18, f8, f9, rdn # perform operation
fnmsub.s f15, f18, f8, f9, rmm # perform operation
fnmsub.s f15, f18, f8, f9, rne # perform operation
fnmsub.s f15, f18, f8, f9, rtz # perform operation
fnmsub.s f15, f18, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f18, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f18, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f18, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f18, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f18, f8, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fbfffff)
li x12, 0x04b2d3f43fab4e05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0x2957e98baf79a831 # load x3 with value 0x2957e98baf79a831
sw x3, 0(x2) # store 0x2957e98baf79a831 in memory
flw f15, 0(x2) # load 0x2957e98baf79a831 from memory into f15
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
fnmsub.s f12, f7, f15, f8, dyn # perform operation
fnmsub.s f12, f7, f15, f8, rdn # perform operation
fnmsub.s f12, f7, f15, f8, rmm # perform operation
fnmsub.s f12, f7, f15, f8, rne # perform operation
fnmsub.s f12, f7, f15, f8, rtz # perform operation
fnmsub.s f12, f7, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f7, f15, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7ef8654f)
li x30, 0xed7d13e44420d5cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
li x3, 0x3f4f3a94feb9cb4d # load x3 with value 0x3f4f3a94feb9cb4d
sw x3, 0(x2) # store 0x3f4f3a94feb9cb4d in memory
flw f22, 0(x2) # load 0x3f4f3a94feb9cb4d from memory into f22
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
fnmsub.s f30, f3, f22, f25, dyn # perform operation
fnmsub.s f30, f3, f22, f25, rdn # perform operation
fnmsub.s f30, f3, f22, f25, rmm # perform operation
fnmsub.s f30, f3, f22, f25, rne # perform operation
fnmsub.s f30, f3, f22, f25, rtz # perform operation
fnmsub.s f30, f3, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f3, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f3, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f3, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f3, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f3, f22, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x813d9ab0)
li x24, 0x7ae346c5642a069c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
li x3, 0xca64373c571c059e # load x3 with value 0xca64373c571c059e
sw x3, 0(x2) # store 0xca64373c571c059e in memory
flw f17, 0(x2) # load 0xca64373c571c059e from memory into f17
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
fnmsub.s f24, f13, f17, f14, dyn # perform operation
fnmsub.s f24, f13, f17, f14, rdn # perform operation
fnmsub.s f24, f13, f17, f14, rmm # perform operation
fnmsub.s f24, f13, f17, f14, rne # perform operation
fnmsub.s f24, f13, f17, f14, rtz # perform operation
fnmsub.s f24, f13, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f13, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f13, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f13, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f13, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f13, f17, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x0)
li x28, 0xd50b64bbab76ed81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0xa41e673d74d5a8fb # load x3 with value 0xa41e673d74d5a8fb
sw x3, 0(x2) # store 0xa41e673d74d5a8fb in memory
flw f15, 0(x2) # load 0xa41e673d74d5a8fb from memory into f15
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
fnmsub.s f28, f5, f15, f22, dyn # perform operation
fnmsub.s f28, f5, f15, f22, rdn # perform operation
fnmsub.s f28, f5, f15, f22, rmm # perform operation
fnmsub.s f28, f5, f15, f22, rne # perform operation
fnmsub.s f28, f5, f15, f22, rtz # perform operation
fnmsub.s f28, f5, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f5, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f5, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f5, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f5, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f5, f15, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000000)
li x19, 0x3aef374ce64efc08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x434005bae68b944b # load x3 with value 0x434005bae68b944b
sw x3, 0(x2) # store 0x434005bae68b944b in memory
flw f20, 0(x2) # load 0x434005bae68b944b from memory into f20
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
fnmsub.s f19, f16, f20, f23, dyn # perform operation
fnmsub.s f19, f16, f20, f23, rdn # perform operation
fnmsub.s f19, f16, f20, f23, rmm # perform operation
fnmsub.s f19, f16, f20, f23, rne # perform operation
fnmsub.s f19, f16, f20, f23, rtz # perform operation
fnmsub.s f19, f16, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f16, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f16, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f16, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f16, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f16, f20, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3f800000)
li x20, 0x4e0f7a993033fd72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0x86e6f0ff82d38ed6 # load x3 with value 0x86e6f0ff82d38ed6
sw x3, 0(x2) # store 0x86e6f0ff82d38ed6 in memory
flw f5, 0(x2) # load 0x86e6f0ff82d38ed6 from memory into f5
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
fnmsub.s f20, f13, f5, f21, dyn # perform operation
fnmsub.s f20, f13, f5, f21, rdn # perform operation
fnmsub.s f20, f13, f5, f21, rmm # perform operation
fnmsub.s f20, f13, f5, f21, rne # perform operation
fnmsub.s f20, f13, f5, f21, rtz # perform operation
fnmsub.s f20, f13, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f13, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f13, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f13, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f13, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f13, f5, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbf800000)
li x26, 0x488587b7c7fddf6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0xca7a4d0ca939b569 # load x3 with value 0xca7a4d0ca939b569
sw x3, 0(x2) # store 0xca7a4d0ca939b569 in memory
flw f29, 0(x2) # load 0xca7a4d0ca939b569 from memory into f29
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
fnmsub.s f26, f28, f29, f24, dyn # perform operation
fnmsub.s f26, f28, f29, f24, rdn # perform operation
fnmsub.s f26, f28, f29, f24, rmm # perform operation
fnmsub.s f26, f28, f29, f24, rne # perform operation
fnmsub.s f26, f28, f29, f24, rtz # perform operation
fnmsub.s f26, f28, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f28, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f28, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f28, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f28, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f28, f29, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3fc00000)
li x8, 0x9c11683796970493 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
li x3, 0x1088465ea33904a0 # load x3 with value 0x1088465ea33904a0
sw x3, 0(x2) # store 0x1088465ea33904a0 in memory
flw f14, 0(x2) # load 0x1088465ea33904a0 from memory into f14
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
fnmsub.s f8, f19, f14, f12, dyn # perform operation
fnmsub.s f8, f19, f14, f12, rdn # perform operation
fnmsub.s f8, f19, f14, f12, rmm # perform operation
fnmsub.s f8, f19, f14, f12, rne # perform operation
fnmsub.s f8, f19, f14, f12, rtz # perform operation
fnmsub.s f8, f19, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f19, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f19, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f19, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f19, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f19, f14, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbfc00000)
li x21, 0x05a2aa35add21b17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0x8decc98ada293652 # load x3 with value 0x8decc98ada293652
sw x3, 0(x2) # store 0x8decc98ada293652 in memory
flw f20, 0(x2) # load 0x8decc98ada293652 from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
fnmsub.s f21, f14, f20, f10, dyn # perform operation
fnmsub.s f21, f14, f20, f10, rdn # perform operation
fnmsub.s f21, f14, f20, f10, rmm # perform operation
fnmsub.s f21, f14, f20, f10, rne # perform operation
fnmsub.s f21, f14, f20, f10, rtz # perform operation
fnmsub.s f21, f14, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f14, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f14, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f14, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f14, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f14, f20, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x40000000)
li x4, 0x20452a7232726b7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0xe9a547e13fa1b0da # load x3 with value 0xe9a547e13fa1b0da
sw x3, 0(x2) # store 0xe9a547e13fa1b0da in memory
flw f15, 0(x2) # load 0xe9a547e13fa1b0da from memory into f15
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
fnmsub.s f4, f28, f15, f20, dyn # perform operation
fnmsub.s f4, f28, f15, f20, rdn # perform operation
fnmsub.s f4, f28, f15, f20, rmm # perform operation
fnmsub.s f4, f28, f15, f20, rne # perform operation
fnmsub.s f4, f28, f15, f20, rtz # perform operation
fnmsub.s f4, f28, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f28, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f28, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f28, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f28, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f28, f15, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xc0000000)
li x30, 0x1e36fdd710060ae9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0x4924d8921f3baac7 # load x3 with value 0x4924d8921f3baac7
sw x3, 0(x2) # store 0x4924d8921f3baac7 in memory
flw f17, 0(x2) # load 0x4924d8921f3baac7 from memory into f17
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
fnmsub.s f30, f12, f17, f9, dyn # perform operation
fnmsub.s f30, f12, f17, f9, rdn # perform operation
fnmsub.s f30, f12, f17, f9, rmm # perform operation
fnmsub.s f30, f12, f17, f9, rne # perform operation
fnmsub.s f30, f12, f17, f9, rtz # perform operation
fnmsub.s f30, f12, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f12, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f12, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f12, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f12, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f12, f17, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x800000)
li x11, 0x9e9d417650584b08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
li x3, 0x2f73d9c14fc2209f # load x3 with value 0x2f73d9c14fc2209f
sw x3, 0(x2) # store 0x2f73d9c14fc2209f in memory
flw f17, 0(x2) # load 0x2f73d9c14fc2209f from memory into f17
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
fnmsub.s f11, f24, f17, f26, dyn # perform operation
fnmsub.s f11, f24, f17, f26, rdn # perform operation
fnmsub.s f11, f24, f17, f26, rmm # perform operation
fnmsub.s f11, f24, f17, f26, rne # perform operation
fnmsub.s f11, f24, f17, f26, rtz # perform operation
fnmsub.s f11, f24, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f24, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f24, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f24, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f24, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f24, f17, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80800000)
li x22, 0xd49b9263feed416b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0x90b11fb36f979416 # load x3 with value 0x90b11fb36f979416
sw x3, 0(x2) # store 0x90b11fb36f979416 in memory
flw f1, 0(x2) # load 0x90b11fb36f979416 from memory into f1
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fnmsub.s f22, f14, f1, f30, dyn # perform operation
fnmsub.s f22, f14, f1, f30, rdn # perform operation
fnmsub.s f22, f14, f1, f30, rmm # perform operation
fnmsub.s f22, f14, f1, f30, rne # perform operation
fnmsub.s f22, f14, f1, f30, rtz # perform operation
fnmsub.s f22, f14, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f14, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f14, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f14, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f14, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f14, f1, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f7fffff)
li x17, 0x95443a1807eecfff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0x4a905ba560232ca5 # load x3 with value 0x4a905ba560232ca5
sw x3, 0(x2) # store 0x4a905ba560232ca5 in memory
flw f23, 0(x2) # load 0x4a905ba560232ca5 from memory into f23
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
fnmsub.s f17, f10, f23, f4, dyn # perform operation
fnmsub.s f17, f10, f23, f4, rdn # perform operation
fnmsub.s f17, f10, f23, f4, rmm # perform operation
fnmsub.s f17, f10, f23, f4, rne # perform operation
fnmsub.s f17, f10, f23, f4, rtz # perform operation
fnmsub.s f17, f10, f23, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f10, f23, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f10, f23, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f10, f23, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f10, f23, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f10, f23, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff7fffff)
li x21, 0x0d77ff0baf7fd88f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0xc31707e2efdb325d # load x3 with value 0xc31707e2efdb325d
sw x3, 0(x2) # store 0xc31707e2efdb325d in memory
flw f15, 0(x2) # load 0xc31707e2efdb325d from memory into f15
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
fnmsub.s f21, f1, f15, f30, dyn # perform operation
fnmsub.s f21, f1, f15, f30, rdn # perform operation
fnmsub.s f21, f1, f15, f30, rmm # perform operation
fnmsub.s f21, f1, f15, f30, rne # perform operation
fnmsub.s f21, f1, f15, f30, rtz # perform operation
fnmsub.s f21, f1, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f1, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f1, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f1, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f1, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f1, f15, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffff)
li x24, 0x58ce8b550449909d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
li x3, 0x4413449b31a5a344 # load x3 with value 0x4413449b31a5a344
sw x3, 0(x2) # store 0x4413449b31a5a344 in memory
flw f20, 0(x2) # load 0x4413449b31a5a344 from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
fnmsub.s f24, f9, f20, f6, dyn # perform operation
fnmsub.s f24, f9, f20, f6, rdn # perform operation
fnmsub.s f24, f9, f20, f6, rmm # perform operation
fnmsub.s f24, f9, f20, f6, rne # perform operation
fnmsub.s f24, f9, f20, f6, rtz # perform operation
fnmsub.s f24, f9, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f9, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f9, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f9, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f9, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f9, f20, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x807fffff)
li x31, 0xd88c0dcda1f37ca0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x47b8501cc8c86a2c # load x3 with value 0x47b8501cc8c86a2c
sw x3, 0(x2) # store 0x47b8501cc8c86a2c in memory
flw f19, 0(x2) # load 0x47b8501cc8c86a2c from memory into f19
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fnmsub.s f31, f1, f19, f9, dyn # perform operation
fnmsub.s f31, f1, f19, f9, rdn # perform operation
fnmsub.s f31, f1, f19, f9, rmm # perform operation
fnmsub.s f31, f1, f19, f9, rne # perform operation
fnmsub.s f31, f1, f19, f9, rtz # perform operation
fnmsub.s f31, f1, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f1, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f1, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f1, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f1, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f1, f19, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x400000)
li x25, 0x8084ac58fe7e151b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0x7a8650ee6cb984c8 # load x3 with value 0x7a8650ee6cb984c8
sw x3, 0(x2) # store 0x7a8650ee6cb984c8 in memory
flw f22, 0(x2) # load 0x7a8650ee6cb984c8 from memory into f22
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
fnmsub.s f25, f28, f22, f24, dyn # perform operation
fnmsub.s f25, f28, f22, f24, rdn # perform operation
fnmsub.s f25, f28, f22, f24, rmm # perform operation
fnmsub.s f25, f28, f22, f24, rne # perform operation
fnmsub.s f25, f28, f22, f24, rtz # perform operation
fnmsub.s f25, f28, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f28, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f28, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f28, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f28, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f28, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80400000)
li x15, 0x6ec2c47480fb02eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
li x3, 0xbc51eddb3ce9d830 # load x3 with value 0xbc51eddb3ce9d830
sw x3, 0(x2) # store 0xbc51eddb3ce9d830 in memory
flw f29, 0(x2) # load 0xbc51eddb3ce9d830 from memory into f29
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
fnmsub.s f15, f2, f29, f7, dyn # perform operation
fnmsub.s f15, f2, f29, f7, rdn # perform operation
fnmsub.s f15, f2, f29, f7, rmm # perform operation
fnmsub.s f15, f2, f29, f7, rne # perform operation
fnmsub.s f15, f2, f29, f7, rtz # perform operation
fnmsub.s f15, f2, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f2, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f2, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f2, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f2, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f2, f29, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x1)
li x3, 0x66c6383f5c1811ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0x7d9bd88b5af21c89 # load x3 with value 0x7d9bd88b5af21c89
sw x3, 0(x2) # store 0x7d9bd88b5af21c89 in memory
flw f8, 0(x2) # load 0x7d9bd88b5af21c89 from memory into f8
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
fnmsub.s f3, f10, f8, f16, dyn # perform operation
fnmsub.s f3, f10, f8, f16, rdn # perform operation
fnmsub.s f3, f10, f8, f16, rmm # perform operation
fnmsub.s f3, f10, f8, f16, rne # perform operation
fnmsub.s f3, f10, f8, f16, rtz # perform operation
fnmsub.s f3, f10, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f10, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f10, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f10, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f10, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f10, f8, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000001)
li x20, 0x11397ffb2f416e13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
li x3, 0xbc47e1ec3cd6798b # load x3 with value 0xbc47e1ec3cd6798b
sw x3, 0(x2) # store 0xbc47e1ec3cd6798b in memory
flw f9, 0(x2) # load 0xbc47e1ec3cd6798b from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
fnmsub.s f20, f19, f9, f28, dyn # perform operation
fnmsub.s f20, f19, f9, f28, rdn # perform operation
fnmsub.s f20, f19, f9, f28, rmm # perform operation
fnmsub.s f20, f19, f9, f28, rne # perform operation
fnmsub.s f20, f19, f9, f28, rtz # perform operation
fnmsub.s f20, f19, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f19, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f19, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f19, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f19, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f19, f9, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800000)
li x5, 0x4742ad3bf41ffb91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0xafe10c18b8971eb4 # load x3 with value 0xafe10c18b8971eb4
sw x3, 0(x2) # store 0xafe10c18b8971eb4 in memory
flw f9, 0(x2) # load 0xafe10c18b8971eb4 from memory into f9
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
fnmsub.s f5, f28, f9, f16, dyn # perform operation
fnmsub.s f5, f28, f9, f16, rdn # perform operation
fnmsub.s f5, f28, f9, f16, rmm # perform operation
fnmsub.s f5, f28, f9, f16, rne # perform operation
fnmsub.s f5, f28, f9, f16, rtz # perform operation
fnmsub.s f5, f28, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f28, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f28, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f28, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f28, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f28, f9, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff800000)
li x29, 0xab2ab1ab93ca61d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0xa721b4bfa200d55a # load x3 with value 0xa721b4bfa200d55a
sw x3, 0(x2) # store 0xa721b4bfa200d55a in memory
flw f19, 0(x2) # load 0xa721b4bfa200d55a from memory into f19
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
fnmsub.s f29, f22, f19, f2, dyn # perform operation
fnmsub.s f29, f22, f19, f2, rdn # perform operation
fnmsub.s f29, f22, f19, f2, rmm # perform operation
fnmsub.s f29, f22, f19, f2, rne # perform operation
fnmsub.s f29, f22, f19, f2, rtz # perform operation
fnmsub.s f29, f22, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f22, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f22, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f22, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f22, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f22, f19, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fc00000)
li x5, 0xc227ef4f47661744 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0xf971103ae3c11a81 # load x3 with value 0xf971103ae3c11a81
sw x3, 0(x2) # store 0xf971103ae3c11a81 in memory
flw f9, 0(x2) # load 0xf971103ae3c11a81 from memory into f9
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fnmsub.s f5, f12, f9, f14, dyn # perform operation
fnmsub.s f5, f12, f9, f14, rdn # perform operation
fnmsub.s f5, f12, f9, f14, rmm # perform operation
fnmsub.s f5, f12, f9, f14, rne # perform operation
fnmsub.s f5, f12, f9, f14, rtz # perform operation
fnmsub.s f5, f12, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f12, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f12, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f12, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f12, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f12, f9, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffffff)
li x2, 0xa57495c28c1660f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
li x3, 0xa95e8d15ff45f83a # load x3 with value 0xa95e8d15ff45f83a
sw x3, 0(x2) # store 0xa95e8d15ff45f83a in memory
flw f30, 0(x2) # load 0xa95e8d15ff45f83a from memory into f30
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
fnmsub.s f2, f11, f30, f9, dyn # perform operation
fnmsub.s f2, f11, f30, f9, rdn # perform operation
fnmsub.s f2, f11, f30, f9, rmm # perform operation
fnmsub.s f2, f11, f30, f9, rne # perform operation
fnmsub.s f2, f11, f30, f9, rtz # perform operation
fnmsub.s f2, f11, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f11, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f11, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f11, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f11, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f11, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800001)
li x30, 0xc1d311a53f793375 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0xcbb33f8d89ad6978 # load x3 with value 0xcbb33f8d89ad6978
sw x3, 0(x2) # store 0xcbb33f8d89ad6978 in memory
flw f12, 0(x2) # load 0xcbb33f8d89ad6978 from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
fnmsub.s f30, f6, f12, f1, dyn # perform operation
fnmsub.s f30, f6, f12, f1, rdn # perform operation
fnmsub.s f30, f6, f12, f1, rmm # perform operation
fnmsub.s f30, f6, f12, f1, rne # perform operation
fnmsub.s f30, f6, f12, f1, rtz # perform operation
fnmsub.s f30, f6, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f6, f12, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fbfffff)
li x15, 0x3a9c55871a14aced # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0x2849c964759b249e # load x3 with value 0x2849c964759b249e
sw x3, 0(x2) # store 0x2849c964759b249e in memory
flw f24, 0(x2) # load 0x2849c964759b249e from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
fnmsub.s f15, f7, f24, f29, dyn # perform operation
fnmsub.s f15, f7, f24, f29, rdn # perform operation
fnmsub.s f15, f7, f24, f29, rmm # perform operation
fnmsub.s f15, f7, f24, f29, rne # perform operation
fnmsub.s f15, f7, f24, f29, rtz # perform operation
fnmsub.s f15, f7, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f7, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f7, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f7, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f7, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f7, f24, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7ef8654f)
li x29, 0x38c300dec1eedf74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
li x3, 0xbd312d8fdc8ace90 # load x3 with value 0xbd312d8fdc8ace90
sw x3, 0(x2) # store 0xbd312d8fdc8ace90 in memory
flw f4, 0(x2) # load 0xbd312d8fdc8ace90 from memory into f4
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
fnmsub.s f29, f24, f4, f19, dyn # perform operation
fnmsub.s f29, f24, f4, f19, rdn # perform operation
fnmsub.s f29, f24, f4, f19, rmm # perform operation
fnmsub.s f29, f24, f4, f19, rne # perform operation
fnmsub.s f29, f24, f4, f19, rtz # perform operation
fnmsub.s f29, f24, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f24, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f24, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f24, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f24, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f24, f4, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x813d9ab0)
li x20, 0xd6a9cd65b083f40a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0x804a7ed097082248 # load x3 with value 0x804a7ed097082248
sw x3, 0(x2) # store 0x804a7ed097082248 in memory
flw f29, 0(x2) # load 0x804a7ed097082248 from memory into f29
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
fnmsub.s f20, f23, f29, f24, dyn # perform operation
fnmsub.s f20, f23, f29, f24, rdn # perform operation
fnmsub.s f20, f23, f29, f24, rmm # perform operation
fnmsub.s f20, f23, f29, f24, rne # perform operation
fnmsub.s f20, f23, f29, f24, rtz # perform operation
fnmsub.s f20, f23, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f23, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f23, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f23, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f23, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f23, f29, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x0)
li x3, 0xd4704321603f4f33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
li x3, 0x387bc76a9636f7a7 # load x3 with value 0x387bc76a9636f7a7
sw x3, 0(x2) # store 0x387bc76a9636f7a7 in memory
flw f29, 0(x2) # load 0x387bc76a9636f7a7 from memory into f29
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fnmsub.s f3, f24, f29, f16, dyn # perform operation
fnmsub.s f3, f24, f29, f16, rdn # perform operation
fnmsub.s f3, f24, f29, f16, rmm # perform operation
fnmsub.s f3, f24, f29, f16, rne # perform operation
fnmsub.s f3, f24, f29, f16, rtz # perform operation
fnmsub.s f3, f24, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f24, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f24, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f24, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f24, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f24, f29, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000000)
li x19, 0x37f10337b42c2403 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0xceed5b9367c34040 # load x3 with value 0xceed5b9367c34040
sw x3, 0(x2) # store 0xceed5b9367c34040 in memory
flw f22, 0(x2) # load 0xceed5b9367c34040 from memory into f22
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
fnmsub.s f19, f16, f22, f8, dyn # perform operation
fnmsub.s f19, f16, f22, f8, rdn # perform operation
fnmsub.s f19, f16, f22, f8, rmm # perform operation
fnmsub.s f19, f16, f22, f8, rne # perform operation
fnmsub.s f19, f16, f22, f8, rtz # perform operation
fnmsub.s f19, f16, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f16, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f16, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f16, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f16, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f16, f22, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3f800000)
li x6, 0xdbe9ab710212488d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
li x3, 0x86a10d9e4455d74e # load x3 with value 0x86a10d9e4455d74e
sw x3, 0(x2) # store 0x86a10d9e4455d74e in memory
flw f22, 0(x2) # load 0x86a10d9e4455d74e from memory into f22
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
fnmsub.s f6, f25, f22, f13, dyn # perform operation
fnmsub.s f6, f25, f22, f13, rdn # perform operation
fnmsub.s f6, f25, f22, f13, rmm # perform operation
fnmsub.s f6, f25, f22, f13, rne # perform operation
fnmsub.s f6, f25, f22, f13, rtz # perform operation
fnmsub.s f6, f25, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f25, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f25, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f25, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f25, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f25, f22, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbf800000)
li x19, 0x57a0124f28eb28b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0xf0f9da0b57f5fd91 # load x3 with value 0xf0f9da0b57f5fd91
sw x3, 0(x2) # store 0xf0f9da0b57f5fd91 in memory
flw f3, 0(x2) # load 0xf0f9da0b57f5fd91 from memory into f3
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
fnmsub.s f19, f22, f3, f7, dyn # perform operation
fnmsub.s f19, f22, f3, f7, rdn # perform operation
fnmsub.s f19, f22, f3, f7, rmm # perform operation
fnmsub.s f19, f22, f3, f7, rne # perform operation
fnmsub.s f19, f22, f3, f7, rtz # perform operation
fnmsub.s f19, f22, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f22, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f22, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f22, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f22, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f22, f3, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3fc00000)
li x22, 0xae6f8253046f4b43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x7926aea19fcbc055 # load x3 with value 0x7926aea19fcbc055
sw x3, 0(x2) # store 0x7926aea19fcbc055 in memory
flw f20, 0(x2) # load 0x7926aea19fcbc055 from memory into f20
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fnmsub.s f22, f9, f20, f3, dyn # perform operation
fnmsub.s f22, f9, f20, f3, rdn # perform operation
fnmsub.s f22, f9, f20, f3, rmm # perform operation
fnmsub.s f22, f9, f20, f3, rne # perform operation
fnmsub.s f22, f9, f20, f3, rtz # perform operation
fnmsub.s f22, f9, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f9, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f9, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f9, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f9, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f9, f20, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbfc00000)
li x2, 0x2a2241c33f6cd4b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0x5f26487920396e06 # load x3 with value 0x5f26487920396e06
sw x3, 0(x2) # store 0x5f26487920396e06 in memory
flw f18, 0(x2) # load 0x5f26487920396e06 from memory into f18
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
fnmsub.s f2, f7, f18, f14, dyn # perform operation
fnmsub.s f2, f7, f18, f14, rdn # perform operation
fnmsub.s f2, f7, f18, f14, rmm # perform operation
fnmsub.s f2, f7, f18, f14, rne # perform operation
fnmsub.s f2, f7, f18, f14, rtz # perform operation
fnmsub.s f2, f7, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f7, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f7, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f7, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f7, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f7, f18, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x40000000)
li x11, 0xafc17e3bcf2ce193 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
li x3, 0x6eaa3edad2a704ed # load x3 with value 0x6eaa3edad2a704ed
sw x3, 0(x2) # store 0x6eaa3edad2a704ed in memory
flw f30, 0(x2) # load 0x6eaa3edad2a704ed from memory into f30
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
fnmsub.s f11, f23, f30, f7, dyn # perform operation
fnmsub.s f11, f23, f30, f7, rdn # perform operation
fnmsub.s f11, f23, f30, f7, rmm # perform operation
fnmsub.s f11, f23, f30, f7, rne # perform operation
fnmsub.s f11, f23, f30, f7, rtz # perform operation
fnmsub.s f11, f23, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f23, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f23, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f23, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f23, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f23, f30, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xc0000000)
li x12, 0x32f37cb1075a5a7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0xc1674d8955ef9a42 # load x3 with value 0xc1674d8955ef9a42
sw x3, 0(x2) # store 0xc1674d8955ef9a42 in memory
flw f8, 0(x2) # load 0xc1674d8955ef9a42 from memory into f8
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
fnmsub.s f12, f27, f8, f3, dyn # perform operation
fnmsub.s f12, f27, f8, f3, rdn # perform operation
fnmsub.s f12, f27, f8, f3, rmm # perform operation
fnmsub.s f12, f27, f8, f3, rne # perform operation
fnmsub.s f12, f27, f8, f3, rtz # perform operation
fnmsub.s f12, f27, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f27, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f27, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f27, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f27, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f27, f8, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x800000)
li x8, 0x46177fac2b9bb3fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0x4cb5aca72fdb7fa2 # load x3 with value 0x4cb5aca72fdb7fa2
sw x3, 0(x2) # store 0x4cb5aca72fdb7fa2 in memory
flw f2, 0(x2) # load 0x4cb5aca72fdb7fa2 from memory into f2
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
fnmsub.s f8, f30, f2, f26, dyn # perform operation
fnmsub.s f8, f30, f2, f26, rdn # perform operation
fnmsub.s f8, f30, f2, f26, rmm # perform operation
fnmsub.s f8, f30, f2, f26, rne # perform operation
fnmsub.s f8, f30, f2, f26, rtz # perform operation
fnmsub.s f8, f30, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f30, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f30, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f30, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f30, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f30, f2, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80800000)
li x21, 0x01567c3e45e80237 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0x41ebe783908d1d6b # load x3 with value 0x41ebe783908d1d6b
sw x3, 0(x2) # store 0x41ebe783908d1d6b in memory
flw f11, 0(x2) # load 0x41ebe783908d1d6b from memory into f11
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
fnmsub.s f21, f5, f11, f10, dyn # perform operation
fnmsub.s f21, f5, f11, f10, rdn # perform operation
fnmsub.s f21, f5, f11, f10, rmm # perform operation
fnmsub.s f21, f5, f11, f10, rne # perform operation
fnmsub.s f21, f5, f11, f10, rtz # perform operation
fnmsub.s f21, f5, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f5, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f5, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f5, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f5, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f5, f11, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f7fffff)
li x17, 0xb1d1d37044f6ccee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0xd059d4c807bcc70c # load x3 with value 0xd059d4c807bcc70c
sw x3, 0(x2) # store 0xd059d4c807bcc70c in memory
flw f19, 0(x2) # load 0xd059d4c807bcc70c from memory into f19
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
fnmsub.s f17, f7, f19, f21, dyn # perform operation
fnmsub.s f17, f7, f19, f21, rdn # perform operation
fnmsub.s f17, f7, f19, f21, rmm # perform operation
fnmsub.s f17, f7, f19, f21, rne # perform operation
fnmsub.s f17, f7, f19, f21, rtz # perform operation
fnmsub.s f17, f7, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f7, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f7, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f7, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f7, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f7, f19, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff7fffff)
li x27, 0xf3c217a23f1959e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0x414d9a6f84c30a9e # load x3 with value 0x414d9a6f84c30a9e
sw x3, 0(x2) # store 0x414d9a6f84c30a9e in memory
flw f31, 0(x2) # load 0x414d9a6f84c30a9e from memory into f31
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
fnmsub.s f27, f1, f31, f2, dyn # perform operation
fnmsub.s f27, f1, f31, f2, rdn # perform operation
fnmsub.s f27, f1, f31, f2, rmm # perform operation
fnmsub.s f27, f1, f31, f2, rne # perform operation
fnmsub.s f27, f1, f31, f2, rtz # perform operation
fnmsub.s f27, f1, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f1, f31, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffff)
li x9, 0x92d9be90e8707b9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
li x3, 0x20fd9e8f1ff8b749 # load x3 with value 0x20fd9e8f1ff8b749
sw x3, 0(x2) # store 0x20fd9e8f1ff8b749 in memory
flw f14, 0(x2) # load 0x20fd9e8f1ff8b749 from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
fnmsub.s f9, f6, f14, f4, dyn # perform operation
fnmsub.s f9, f6, f14, f4, rdn # perform operation
fnmsub.s f9, f6, f14, f4, rmm # perform operation
fnmsub.s f9, f6, f14, f4, rne # perform operation
fnmsub.s f9, f6, f14, f4, rtz # perform operation
fnmsub.s f9, f6, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f6, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f6, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f6, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f6, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f6, f14, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x807fffff)
li x13, 0x00046bbc715762aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
li x3, 0x4683a4920145a4c9 # load x3 with value 0x4683a4920145a4c9
sw x3, 0(x2) # store 0x4683a4920145a4c9 in memory
flw f22, 0(x2) # load 0x4683a4920145a4c9 from memory into f22
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
fnmsub.s f13, f19, f22, f4, dyn # perform operation
fnmsub.s f13, f19, f22, f4, rdn # perform operation
fnmsub.s f13, f19, f22, f4, rmm # perform operation
fnmsub.s f13, f19, f22, f4, rne # perform operation
fnmsub.s f13, f19, f22, f4, rtz # perform operation
fnmsub.s f13, f19, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f19, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f19, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f19, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f19, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f19, f22, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x400000)
li x23, 0x786d964a5caeeb70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0x58d8c6b97d37f048 # load x3 with value 0x58d8c6b97d37f048
sw x3, 0(x2) # store 0x58d8c6b97d37f048 in memory
flw f1, 0(x2) # load 0x58d8c6b97d37f048 from memory into f1
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fnmsub.s f23, f10, f1, f16, dyn # perform operation
fnmsub.s f23, f10, f1, f16, rdn # perform operation
fnmsub.s f23, f10, f1, f16, rmm # perform operation
fnmsub.s f23, f10, f1, f16, rne # perform operation
fnmsub.s f23, f10, f1, f16, rtz # perform operation
fnmsub.s f23, f10, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f10, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f10, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f10, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f10, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f10, f1, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80400000)
li x8, 0xcbdcf012550fce17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x7fe5435068899d29 # load x3 with value 0x7fe5435068899d29
sw x3, 0(x2) # store 0x7fe5435068899d29 in memory
flw f17, 0(x2) # load 0x7fe5435068899d29 from memory into f17
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fnmsub.s f8, f15, f17, f21, dyn # perform operation
fnmsub.s f8, f15, f17, f21, rdn # perform operation
fnmsub.s f8, f15, f17, f21, rmm # perform operation
fnmsub.s f8, f15, f17, f21, rne # perform operation
fnmsub.s f8, f15, f17, f21, rtz # perform operation
fnmsub.s f8, f15, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f15, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f15, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f15, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f15, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f15, f17, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x1)
li x14, 0x6e1d45da49a42252 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0x3bd908dedcdf61ac # load x3 with value 0x3bd908dedcdf61ac
sw x3, 0(x2) # store 0x3bd908dedcdf61ac in memory
flw f8, 0(x2) # load 0x3bd908dedcdf61ac from memory into f8
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
fnmsub.s f14, f31, f8, f7, dyn # perform operation
fnmsub.s f14, f31, f8, f7, rdn # perform operation
fnmsub.s f14, f31, f8, f7, rmm # perform operation
fnmsub.s f14, f31, f8, f7, rne # perform operation
fnmsub.s f14, f31, f8, f7, rtz # perform operation
fnmsub.s f14, f31, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f31, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f31, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f31, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f31, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f31, f8, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000001)
li x21, 0x8e24d5e697d03b99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0xff7b0709d135ec3f # load x3 with value 0xff7b0709d135ec3f
sw x3, 0(x2) # store 0xff7b0709d135ec3f in memory
flw f30, 0(x2) # load 0xff7b0709d135ec3f from memory into f30
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
fnmsub.s f21, f15, f30, f12, dyn # perform operation
fnmsub.s f21, f15, f30, f12, rdn # perform operation
fnmsub.s f21, f15, f30, f12, rmm # perform operation
fnmsub.s f21, f15, f30, f12, rne # perform operation
fnmsub.s f21, f15, f30, f12, rtz # perform operation
fnmsub.s f21, f15, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f15, f30, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800000)
li x18, 0x0b1c0cbac48fb3c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
li x3, 0x26b16cdba622a41e # load x3 with value 0x26b16cdba622a41e
sw x3, 0(x2) # store 0x26b16cdba622a41e in memory
flw f11, 0(x2) # load 0x26b16cdba622a41e from memory into f11
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
fnmsub.s f18, f24, f11, f30, dyn # perform operation
fnmsub.s f18, f24, f11, f30, rdn # perform operation
fnmsub.s f18, f24, f11, f30, rmm # perform operation
fnmsub.s f18, f24, f11, f30, rne # perform operation
fnmsub.s f18, f24, f11, f30, rtz # perform operation
fnmsub.s f18, f24, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f24, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f24, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f24, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f24, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f24, f11, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff800000)
li x16, 0x6ff9e6c9cbacd89d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
li x3, 0xec5aadcd45a07592 # load x3 with value 0xec5aadcd45a07592
sw x3, 0(x2) # store 0xec5aadcd45a07592 in memory
flw f8, 0(x2) # load 0xec5aadcd45a07592 from memory into f8
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
fnmsub.s f16, f2, f8, f11, dyn # perform operation
fnmsub.s f16, f2, f8, f11, rdn # perform operation
fnmsub.s f16, f2, f8, f11, rmm # perform operation
fnmsub.s f16, f2, f8, f11, rne # perform operation
fnmsub.s f16, f2, f8, f11, rtz # perform operation
fnmsub.s f16, f2, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f2, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f2, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f2, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f2, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f2, f8, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fc00000)
li x13, 0x988f4c1e9d948a7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
li x3, 0x7f0cde957412e113 # load x3 with value 0x7f0cde957412e113
sw x3, 0(x2) # store 0x7f0cde957412e113 in memory
flw f16, 0(x2) # load 0x7f0cde957412e113 from memory into f16
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
fnmsub.s f13, f24, f16, f1, dyn # perform operation
fnmsub.s f13, f24, f16, f1, rdn # perform operation
fnmsub.s f13, f24, f16, f1, rmm # perform operation
fnmsub.s f13, f24, f16, f1, rne # perform operation
fnmsub.s f13, f24, f16, f1, rtz # perform operation
fnmsub.s f13, f24, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f24, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f24, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f24, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f24, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f24, f16, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffffff)
li x25, 0xafdfc2bd0051b775 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0xa022f5d82dace35a # load x3 with value 0xa022f5d82dace35a
sw x3, 0(x2) # store 0xa022f5d82dace35a in memory
flw f13, 0(x2) # load 0xa022f5d82dace35a from memory into f13
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
fnmsub.s f25, f16, f13, f22, dyn # perform operation
fnmsub.s f25, f16, f13, f22, rdn # perform operation
fnmsub.s f25, f16, f13, f22, rmm # perform operation
fnmsub.s f25, f16, f13, f22, rne # perform operation
fnmsub.s f25, f16, f13, f22, rtz # perform operation
fnmsub.s f25, f16, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f16, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f16, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f16, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f16, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f16, f13, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800001)
li x24, 0x1f17b17470ffc01f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
li x3, 0x115f127fedf37fbf # load x3 with value 0x115f127fedf37fbf
sw x3, 0(x2) # store 0x115f127fedf37fbf in memory
flw f9, 0(x2) # load 0x115f127fedf37fbf from memory into f9
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
fnmsub.s f24, f11, f9, f8, dyn # perform operation
fnmsub.s f24, f11, f9, f8, rdn # perform operation
fnmsub.s f24, f11, f9, f8, rmm # perform operation
fnmsub.s f24, f11, f9, f8, rne # perform operation
fnmsub.s f24, f11, f9, f8, rtz # perform operation
fnmsub.s f24, f11, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f11, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f11, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f11, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f11, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f11, f9, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fbfffff)
li x11, 0xd2fccbc37197d521 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
li x3, 0x90be0d7f25c14fb8 # load x3 with value 0x90be0d7f25c14fb8
sw x3, 0(x2) # store 0x90be0d7f25c14fb8 in memory
flw f17, 0(x2) # load 0x90be0d7f25c14fb8 from memory into f17
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
fnmsub.s f11, f19, f17, f30, dyn # perform operation
fnmsub.s f11, f19, f17, f30, rdn # perform operation
fnmsub.s f11, f19, f17, f30, rmm # perform operation
fnmsub.s f11, f19, f17, f30, rne # perform operation
fnmsub.s f11, f19, f17, f30, rtz # perform operation
fnmsub.s f11, f19, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f19, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f19, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f19, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f19, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f19, f17, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7ef8654f)
li x30, 0x38dd79aafd4812d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
li x3, 0xf4469e86a2501013 # load x3 with value 0xf4469e86a2501013
sw x3, 0(x2) # store 0xf4469e86a2501013 in memory
flw f2, 0(x2) # load 0xf4469e86a2501013 from memory into f2
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
fnmsub.s f30, f25, f2, f24, dyn # perform operation
fnmsub.s f30, f25, f2, f24, rdn # perform operation
fnmsub.s f30, f25, f2, f24, rmm # perform operation
fnmsub.s f30, f25, f2, f24, rne # perform operation
fnmsub.s f30, f25, f2, f24, rtz # perform operation
fnmsub.s f30, f25, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f25, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f25, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f25, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f25, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f25, f2, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x813d9ab0)
li x8, 0xdeffd3080f48f1ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0x82ca47a3dfdaed99 # load x3 with value 0x82ca47a3dfdaed99
sw x3, 0(x2) # store 0x82ca47a3dfdaed99 in memory
flw f16, 0(x2) # load 0x82ca47a3dfdaed99 from memory into f16
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fnmsub.s f8, f12, f16, f23, dyn # perform operation
fnmsub.s f8, f12, f16, f23, rdn # perform operation
fnmsub.s f8, f12, f16, f23, rmm # perform operation
fnmsub.s f8, f12, f16, f23, rne # perform operation
fnmsub.s f8, f12, f16, f23, rtz # perform operation
fnmsub.s f8, f12, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f12, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f12, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f12, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f12, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f12, f16, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x0)
li x2, 0xcfa7ba0d3a748328 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0x190a9611a62ab9c9 # load x3 with value 0x190a9611a62ab9c9
sw x3, 0(x2) # store 0x190a9611a62ab9c9 in memory
flw f23, 0(x2) # load 0x190a9611a62ab9c9 from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fnmsub.s f2, f5, f23, f13, dyn # perform operation
fnmsub.s f2, f5, f23, f13, rdn # perform operation
fnmsub.s f2, f5, f23, f13, rmm # perform operation
fnmsub.s f2, f5, f23, f13, rne # perform operation
fnmsub.s f2, f5, f23, f13, rtz # perform operation
fnmsub.s f2, f5, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f5, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f5, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f5, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f5, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f5, f23, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000000)
li x31, 0x95ac2b23c01dacf4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0x1f773a1eca654c34 # load x3 with value 0x1f773a1eca654c34
sw x3, 0(x2) # store 0x1f773a1eca654c34 in memory
flw f6, 0(x2) # load 0x1f773a1eca654c34 from memory into f6
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
fnmsub.s f31, f26, f6, f25, dyn # perform operation
fnmsub.s f31, f26, f6, f25, rdn # perform operation
fnmsub.s f31, f26, f6, f25, rmm # perform operation
fnmsub.s f31, f26, f6, f25, rne # perform operation
fnmsub.s f31, f26, f6, f25, rtz # perform operation
fnmsub.s f31, f26, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f26, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f26, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f26, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f26, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f26, f6, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3f800000)
li x18, 0x52d6b20116d6b53b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0xb7d8e13782eb835d # load x3 with value 0xb7d8e13782eb835d
sw x3, 0(x2) # store 0xb7d8e13782eb835d in memory
flw f30, 0(x2) # load 0xb7d8e13782eb835d from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fnmsub.s f18, f8, f30, f19, dyn # perform operation
fnmsub.s f18, f8, f30, f19, rdn # perform operation
fnmsub.s f18, f8, f30, f19, rmm # perform operation
fnmsub.s f18, f8, f30, f19, rne # perform operation
fnmsub.s f18, f8, f30, f19, rtz # perform operation
fnmsub.s f18, f8, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f8, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f8, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f8, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f8, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f8, f30, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbf800000)
li x12, 0x4376598e66f357d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0xd6aab14f0b12a583 # load x3 with value 0xd6aab14f0b12a583
sw x3, 0(x2) # store 0xd6aab14f0b12a583 in memory
flw f6, 0(x2) # load 0xd6aab14f0b12a583 from memory into f6
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
fnmsub.s f12, f8, f6, f14, dyn # perform operation
fnmsub.s f12, f8, f6, f14, rdn # perform operation
fnmsub.s f12, f8, f6, f14, rmm # perform operation
fnmsub.s f12, f8, f6, f14, rne # perform operation
fnmsub.s f12, f8, f6, f14, rtz # perform operation
fnmsub.s f12, f8, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f8, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f8, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f8, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f8, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f8, f6, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3fc00000)
li x7, 0xcd8bbdfb84196d19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
li x3, 0x91ef1e51c8b26c0f # load x3 with value 0x91ef1e51c8b26c0f
sw x3, 0(x2) # store 0x91ef1e51c8b26c0f in memory
flw f6, 0(x2) # load 0x91ef1e51c8b26c0f from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
fnmsub.s f7, f22, f6, f17, dyn # perform operation
fnmsub.s f7, f22, f6, f17, rdn # perform operation
fnmsub.s f7, f22, f6, f17, rmm # perform operation
fnmsub.s f7, f22, f6, f17, rne # perform operation
fnmsub.s f7, f22, f6, f17, rtz # perform operation
fnmsub.s f7, f22, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f22, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f22, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f22, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f22, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f22, f6, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbfc00000)
li x23, 0x5b6601f61f088987 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x828feeb1de950633 # load x3 with value 0x828feeb1de950633
sw x3, 0(x2) # store 0x828feeb1de950633 in memory
flw f13, 0(x2) # load 0x828feeb1de950633 from memory into f13
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
fnmsub.s f23, f4, f13, f2, dyn # perform operation
fnmsub.s f23, f4, f13, f2, rdn # perform operation
fnmsub.s f23, f4, f13, f2, rmm # perform operation
fnmsub.s f23, f4, f13, f2, rne # perform operation
fnmsub.s f23, f4, f13, f2, rtz # perform operation
fnmsub.s f23, f4, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f4, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f4, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f4, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f4, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f4, f13, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x40000000)
li x13, 0xc27b88d6f3929719 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x1ed850f82c660756 # load x3 with value 0x1ed850f82c660756
sw x3, 0(x2) # store 0x1ed850f82c660756 in memory
flw f19, 0(x2) # load 0x1ed850f82c660756 from memory into f19
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fnmsub.s f13, f15, f19, f23, dyn # perform operation
fnmsub.s f13, f15, f19, f23, rdn # perform operation
fnmsub.s f13, f15, f19, f23, rmm # perform operation
fnmsub.s f13, f15, f19, f23, rne # perform operation
fnmsub.s f13, f15, f19, f23, rtz # perform operation
fnmsub.s f13, f15, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f15, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f15, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f15, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f15, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f15, f19, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xc0000000)
li x26, 0xa94d741bc7fc56dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
li x3, 0x2c8e686674508673 # load x3 with value 0x2c8e686674508673
sw x3, 0(x2) # store 0x2c8e686674508673 in memory
flw f17, 0(x2) # load 0x2c8e686674508673 from memory into f17
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
fnmsub.s f26, f30, f17, f19, dyn # perform operation
fnmsub.s f26, f30, f17, f19, rdn # perform operation
fnmsub.s f26, f30, f17, f19, rmm # perform operation
fnmsub.s f26, f30, f17, f19, rne # perform operation
fnmsub.s f26, f30, f17, f19, rtz # perform operation
fnmsub.s f26, f30, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f30, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f30, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f30, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f30, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f30, f17, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x800000)
li x26, 0xc10f37998de0c1a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
li x3, 0xa176ea7e9df4397 # load x3 with value 0xa176ea7e9df4397
sw x3, 0(x2) # store 0xa176ea7e9df4397 in memory
flw f8, 0(x2) # load 0xa176ea7e9df4397 from memory into f8
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
fnmsub.s f26, f2, f8, f31, dyn # perform operation
fnmsub.s f26, f2, f8, f31, rdn # perform operation
fnmsub.s f26, f2, f8, f31, rmm # perform operation
fnmsub.s f26, f2, f8, f31, rne # perform operation
fnmsub.s f26, f2, f8, f31, rtz # perform operation
fnmsub.s f26, f2, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f2, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f2, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f2, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f2, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f2, f8, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80800000)
li x17, 0x1e9b704b43b432a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0x900996679cd6319 # load x3 with value 0x900996679cd6319
sw x3, 0(x2) # store 0x900996679cd6319 in memory
flw f2, 0(x2) # load 0x900996679cd6319 from memory into f2
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
fnmsub.s f17, f5, f2, f19, dyn # perform operation
fnmsub.s f17, f5, f2, f19, rdn # perform operation
fnmsub.s f17, f5, f2, f19, rmm # perform operation
fnmsub.s f17, f5, f2, f19, rne # perform operation
fnmsub.s f17, f5, f2, f19, rtz # perform operation
fnmsub.s f17, f5, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f5, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f5, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f5, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f5, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f5, f2, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f7fffff)
li x16, 0x172acb60eedfca3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0xe02de72ccd1c9684 # load x3 with value 0xe02de72ccd1c9684
sw x3, 0(x2) # store 0xe02de72ccd1c9684 in memory
flw f4, 0(x2) # load 0xe02de72ccd1c9684 from memory into f4
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
fnmsub.s f16, f8, f4, f19, dyn # perform operation
fnmsub.s f16, f8, f4, f19, rdn # perform operation
fnmsub.s f16, f8, f4, f19, rmm # perform operation
fnmsub.s f16, f8, f4, f19, rne # perform operation
fnmsub.s f16, f8, f4, f19, rtz # perform operation
fnmsub.s f16, f8, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f8, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f8, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f8, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f8, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f8, f4, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff7fffff)
li x7, 0x33581587126f3346 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0xfc0497a2b129a58c # load x3 with value 0xfc0497a2b129a58c
sw x3, 0(x2) # store 0xfc0497a2b129a58c in memory
flw f3, 0(x2) # load 0xfc0497a2b129a58c from memory into f3
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
fnmsub.s f7, f4, f3, f19, dyn # perform operation
fnmsub.s f7, f4, f3, f19, rdn # perform operation
fnmsub.s f7, f4, f3, f19, rmm # perform operation
fnmsub.s f7, f4, f3, f19, rne # perform operation
fnmsub.s f7, f4, f3, f19, rtz # perform operation
fnmsub.s f7, f4, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f4, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f4, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f4, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f4, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f4, f3, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffff)
li x1, 0x9af3ac511b7eadf9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
li x3, 0x337964c80226040b # load x3 with value 0x337964c80226040b
sw x3, 0(x2) # store 0x337964c80226040b in memory
flw f31, 0(x2) # load 0x337964c80226040b from memory into f31
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
fnmsub.s f1, f16, f31, f10, dyn # perform operation
fnmsub.s f1, f16, f31, f10, rdn # perform operation
fnmsub.s f1, f16, f31, f10, rmm # perform operation
fnmsub.s f1, f16, f31, f10, rne # perform operation
fnmsub.s f1, f16, f31, f10, rtz # perform operation
fnmsub.s f1, f16, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f16, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f16, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f16, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f16, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f16, f31, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x807fffff)
li x24, 0x02b3243aea8e5630 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0xae7d0c5729558a5b # load x3 with value 0xae7d0c5729558a5b
sw x3, 0(x2) # store 0xae7d0c5729558a5b in memory
flw f3, 0(x2) # load 0xae7d0c5729558a5b from memory into f3
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
fnmsub.s f24, f26, f3, f7, dyn # perform operation
fnmsub.s f24, f26, f3, f7, rdn # perform operation
fnmsub.s f24, f26, f3, f7, rmm # perform operation
fnmsub.s f24, f26, f3, f7, rne # perform operation
fnmsub.s f24, f26, f3, f7, rtz # perform operation
fnmsub.s f24, f26, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f26, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f26, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f26, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f26, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f26, f3, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x400000)
li x24, 0x7bbcbee79bbd8a4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x877cbe6242166fe # load x3 with value 0x877cbe6242166fe
sw x3, 0(x2) # store 0x877cbe6242166fe in memory
flw f16, 0(x2) # load 0x877cbe6242166fe from memory into f16
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
fnmsub.s f24, f21, f16, f18, dyn # perform operation
fnmsub.s f24, f21, f16, f18, rdn # perform operation
fnmsub.s f24, f21, f16, f18, rmm # perform operation
fnmsub.s f24, f21, f16, f18, rne # perform operation
fnmsub.s f24, f21, f16, f18, rtz # perform operation
fnmsub.s f24, f21, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f21, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f21, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f21, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f21, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f21, f16, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80400000)
li x20, 0x8818ed12316620a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0x8413c0c42ba28e84 # load x3 with value 0x8413c0c42ba28e84
sw x3, 0(x2) # store 0x8413c0c42ba28e84 in memory
flw f13, 0(x2) # load 0x8413c0c42ba28e84 from memory into f13
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
fnmsub.s f20, f7, f13, f25, dyn # perform operation
fnmsub.s f20, f7, f13, f25, rdn # perform operation
fnmsub.s f20, f7, f13, f25, rmm # perform operation
fnmsub.s f20, f7, f13, f25, rne # perform operation
fnmsub.s f20, f7, f13, f25, rtz # perform operation
fnmsub.s f20, f7, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f7, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f7, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f7, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f7, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f7, f13, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x1)
li x22, 0xe7cf50936481ef95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
li x3, 0x19f051b2b18a7842 # load x3 with value 0x19f051b2b18a7842
sw x3, 0(x2) # store 0x19f051b2b18a7842 in memory
flw f5, 0(x2) # load 0x19f051b2b18a7842 from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
fnmsub.s f22, f11, f5, f13, dyn # perform operation
fnmsub.s f22, f11, f5, f13, rdn # perform operation
fnmsub.s f22, f11, f5, f13, rmm # perform operation
fnmsub.s f22, f11, f5, f13, rne # perform operation
fnmsub.s f22, f11, f5, f13, rtz # perform operation
fnmsub.s f22, f11, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f11, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f11, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f11, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f11, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f11, f5, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000001)
li x6, 0xbabac3d75018426c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
li x3, 0xf032fe578e13517c # load x3 with value 0xf032fe578e13517c
sw x3, 0(x2) # store 0xf032fe578e13517c in memory
flw f3, 0(x2) # load 0xf032fe578e13517c from memory into f3
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
fnmsub.s f6, f16, f3, f2, dyn # perform operation
fnmsub.s f6, f16, f3, f2, rdn # perform operation
fnmsub.s f6, f16, f3, f2, rmm # perform operation
fnmsub.s f6, f16, f3, f2, rne # perform operation
fnmsub.s f6, f16, f3, f2, rtz # perform operation
fnmsub.s f6, f16, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f16, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f16, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f16, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f16, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f16, f3, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800000)
li x17, 0x90fb1031c15d0b7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0xe93ae2869a3f44d3 # load x3 with value 0xe93ae2869a3f44d3
sw x3, 0(x2) # store 0xe93ae2869a3f44d3 in memory
flw f14, 0(x2) # load 0xe93ae2869a3f44d3 from memory into f14
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
fnmsub.s f17, f21, f14, f1, dyn # perform operation
fnmsub.s f17, f21, f14, f1, rdn # perform operation
fnmsub.s f17, f21, f14, f1, rmm # perform operation
fnmsub.s f17, f21, f14, f1, rne # perform operation
fnmsub.s f17, f21, f14, f1, rtz # perform operation
fnmsub.s f17, f21, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f21, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f21, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f21, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f21, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f21, f14, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff800000)
li x28, 0xc52901e0a2d6b8b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
li x3, 0xe656c29eb3046f2f # load x3 with value 0xe656c29eb3046f2f
sw x3, 0(x2) # store 0xe656c29eb3046f2f in memory
flw f12, 0(x2) # load 0xe656c29eb3046f2f from memory into f12
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
fnmsub.s f28, f20, f12, f21, dyn # perform operation
fnmsub.s f28, f20, f12, f21, rdn # perform operation
fnmsub.s f28, f20, f12, f21, rmm # perform operation
fnmsub.s f28, f20, f12, f21, rne # perform operation
fnmsub.s f28, f20, f12, f21, rtz # perform operation
fnmsub.s f28, f20, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f20, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f20, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f20, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f20, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f20, f12, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fc00000)
li x5, 0xcc0334067020d73d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0xa898eaa077dfd35 # load x3 with value 0xa898eaa077dfd35
sw x3, 0(x2) # store 0xa898eaa077dfd35 in memory
flw f31, 0(x2) # load 0xa898eaa077dfd35 from memory into f31
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
fnmsub.s f5, f3, f31, f28, dyn # perform operation
fnmsub.s f5, f3, f31, f28, rdn # perform operation
fnmsub.s f5, f3, f31, f28, rmm # perform operation
fnmsub.s f5, f3, f31, f28, rne # perform operation
fnmsub.s f5, f3, f31, f28, rtz # perform operation
fnmsub.s f5, f3, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f3, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f3, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f3, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f3, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f3, f31, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffffff)
li x13, 0x62e6a44ff55af8db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0xcaeb33abfba666cb # load x3 with value 0xcaeb33abfba666cb
sw x3, 0(x2) # store 0xcaeb33abfba666cb in memory
flw f29, 0(x2) # load 0xcaeb33abfba666cb from memory into f29
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
fnmsub.s f13, f27, f29, f28, dyn # perform operation
fnmsub.s f13, f27, f29, f28, rdn # perform operation
fnmsub.s f13, f27, f29, f28, rmm # perform operation
fnmsub.s f13, f27, f29, f28, rne # perform operation
fnmsub.s f13, f27, f29, f28, rtz # perform operation
fnmsub.s f13, f27, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f27, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f27, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f27, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f27, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f27, f29, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800001)
li x21, 0xd6bf4c1bfb296451 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0x2d40ed317d80b263 # load x3 with value 0x2d40ed317d80b263
sw x3, 0(x2) # store 0x2d40ed317d80b263 in memory
flw f3, 0(x2) # load 0x2d40ed317d80b263 from memory into f3
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
fnmsub.s f21, f1, f3, f12, dyn # perform operation
fnmsub.s f21, f1, f3, f12, rdn # perform operation
fnmsub.s f21, f1, f3, f12, rmm # perform operation
fnmsub.s f21, f1, f3, f12, rne # perform operation
fnmsub.s f21, f1, f3, f12, rtz # perform operation
fnmsub.s f21, f1, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f1, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f1, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f1, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f1, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f1, f3, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fbfffff)
li x29, 0xbbcd0c1f9f96ad39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
li x3, 0xef85c19d855088d1 # load x3 with value 0xef85c19d855088d1
sw x3, 0(x2) # store 0xef85c19d855088d1 in memory
flw f9, 0(x2) # load 0xef85c19d855088d1 from memory into f9
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
fnmsub.s f29, f22, f9, f14, dyn # perform operation
fnmsub.s f29, f22, f9, f14, rdn # perform operation
fnmsub.s f29, f22, f9, f14, rmm # perform operation
fnmsub.s f29, f22, f9, f14, rne # perform operation
fnmsub.s f29, f22, f9, f14, rtz # perform operation
fnmsub.s f29, f22, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f22, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f22, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f22, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f22, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f22, f9, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7ef8654f)
li x23, 0x738ee9780f5e5c50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0x9de31fb784d038fe # load x3 with value 0x9de31fb784d038fe
sw x3, 0(x2) # store 0x9de31fb784d038fe in memory
flw f7, 0(x2) # load 0x9de31fb784d038fe from memory into f7
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
fnmsub.s f23, f26, f7, f13, dyn # perform operation
fnmsub.s f23, f26, f7, f13, rdn # perform operation
fnmsub.s f23, f26, f7, f13, rmm # perform operation
fnmsub.s f23, f26, f7, f13, rne # perform operation
fnmsub.s f23, f26, f7, f13, rtz # perform operation
fnmsub.s f23, f26, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f26, f7, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x813d9ab0)
li x18, 0x49c9e97ac9a2ec4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
li x3, 0xf658eae245f52b49 # load x3 with value 0xf658eae245f52b49
sw x3, 0(x2) # store 0xf658eae245f52b49 in memory
flw f10, 0(x2) # load 0xf658eae245f52b49 from memory into f10
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
fnmsub.s f18, f30, f10, f1, dyn # perform operation
fnmsub.s f18, f30, f10, f1, rdn # perform operation
fnmsub.s f18, f30, f10, f1, rmm # perform operation
fnmsub.s f18, f30, f10, f1, rne # perform operation
fnmsub.s f18, f30, f10, f1, rtz # perform operation
fnmsub.s f18, f30, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f30, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f30, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f30, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f30, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f30, f10, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x0)
li x2, 0x3d5d15d81774e1c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
li x3, 0x2c076348962ceda3 # load x3 with value 0x2c076348962ceda3
sw x3, 0(x2) # store 0x2c076348962ceda3 in memory
flw f6, 0(x2) # load 0x2c076348962ceda3 from memory into f6
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
fnmsub.s f2, f29, f6, f30, dyn # perform operation
fnmsub.s f2, f29, f6, f30, rdn # perform operation
fnmsub.s f2, f29, f6, f30, rmm # perform operation
fnmsub.s f2, f29, f6, f30, rne # perform operation
fnmsub.s f2, f29, f6, f30, rtz # perform operation
fnmsub.s f2, f29, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f29, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f29, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f29, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f29, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f29, f6, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000000)
li x7, 0xd3ec7809322bc2bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0xa205a7000cf3b3be # load x3 with value 0xa205a7000cf3b3be
sw x3, 0(x2) # store 0xa205a7000cf3b3be in memory
flw f17, 0(x2) # load 0xa205a7000cf3b3be from memory into f17
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
fnmsub.s f7, f15, f17, f5, dyn # perform operation
fnmsub.s f7, f15, f17, f5, rdn # perform operation
fnmsub.s f7, f15, f17, f5, rmm # perform operation
fnmsub.s f7, f15, f17, f5, rne # perform operation
fnmsub.s f7, f15, f17, f5, rtz # perform operation
fnmsub.s f7, f15, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f15, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f15, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f15, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f15, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f15, f17, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3f800000)
li x5, 0xb7da9c2084d521a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0xff883c9638094550 # load x3 with value 0xff883c9638094550
sw x3, 0(x2) # store 0xff883c9638094550 in memory
flw f3, 0(x2) # load 0xff883c9638094550 from memory into f3
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fnmsub.s f5, f11, f3, f19, dyn # perform operation
fnmsub.s f5, f11, f3, f19, rdn # perform operation
fnmsub.s f5, f11, f3, f19, rmm # perform operation
fnmsub.s f5, f11, f3, f19, rne # perform operation
fnmsub.s f5, f11, f3, f19, rtz # perform operation
fnmsub.s f5, f11, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f11, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f11, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f11, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f11, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f11, f3, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbf800000)
li x19, 0xaeb85d6dd76cb39c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
li x3, 0x620dc73ecd63073e # load x3 with value 0x620dc73ecd63073e
sw x3, 0(x2) # store 0x620dc73ecd63073e in memory
flw f22, 0(x2) # load 0x620dc73ecd63073e from memory into f22
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
fnmsub.s f19, f21, f22, f11, dyn # perform operation
fnmsub.s f19, f21, f22, f11, rdn # perform operation
fnmsub.s f19, f21, f22, f11, rmm # perform operation
fnmsub.s f19, f21, f22, f11, rne # perform operation
fnmsub.s f19, f21, f22, f11, rtz # perform operation
fnmsub.s f19, f21, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f21, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f21, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f21, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f21, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f21, f22, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3fc00000)
li x24, 0xe5c5b381d463049e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0xb4a434e27d52e752 # load x3 with value 0xb4a434e27d52e752
sw x3, 0(x2) # store 0xb4a434e27d52e752 in memory
flw f25, 0(x2) # load 0xb4a434e27d52e752 from memory into f25
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fnmsub.s f24, f2, f25, f27, dyn # perform operation
fnmsub.s f24, f2, f25, f27, rdn # perform operation
fnmsub.s f24, f2, f25, f27, rmm # perform operation
fnmsub.s f24, f2, f25, f27, rne # perform operation
fnmsub.s f24, f2, f25, f27, rtz # perform operation
fnmsub.s f24, f2, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f2, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f2, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f2, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f2, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f2, f25, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbfc00000)
li x2, 0xf62c38d89b3f764f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0x522f95315095ac26 # load x3 with value 0x522f95315095ac26
sw x3, 0(x2) # store 0x522f95315095ac26 in memory
flw f26, 0(x2) # load 0x522f95315095ac26 from memory into f26
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
fnmsub.s f2, f17, f26, f5, dyn # perform operation
fnmsub.s f2, f17, f26, f5, rdn # perform operation
fnmsub.s f2, f17, f26, f5, rmm # perform operation
fnmsub.s f2, f17, f26, f5, rne # perform operation
fnmsub.s f2, f17, f26, f5, rtz # perform operation
fnmsub.s f2, f17, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f17, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f17, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f17, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f17, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f17, f26, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x40000000)
li x29, 0x62e24c7159d53003 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0xa3ebbf4134f0d4d6 # load x3 with value 0xa3ebbf4134f0d4d6
sw x3, 0(x2) # store 0xa3ebbf4134f0d4d6 in memory
flw f26, 0(x2) # load 0xa3ebbf4134f0d4d6 from memory into f26
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
fnmsub.s f29, f11, f26, f2, dyn # perform operation
fnmsub.s f29, f11, f26, f2, rdn # perform operation
fnmsub.s f29, f11, f26, f2, rmm # perform operation
fnmsub.s f29, f11, f26, f2, rne # perform operation
fnmsub.s f29, f11, f26, f2, rtz # perform operation
fnmsub.s f29, f11, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f11, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f11, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f11, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f11, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f11, f26, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xc0000000)
li x19, 0x096391e2b8cb3d97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0x48f8f78443eacc6d # load x3 with value 0x48f8f78443eacc6d
sw x3, 0(x2) # store 0x48f8f78443eacc6d in memory
flw f3, 0(x2) # load 0x48f8f78443eacc6d from memory into f3
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
fnmsub.s f19, f27, f3, f23, dyn # perform operation
fnmsub.s f19, f27, f3, f23, rdn # perform operation
fnmsub.s f19, f27, f3, f23, rmm # perform operation
fnmsub.s f19, f27, f3, f23, rne # perform operation
fnmsub.s f19, f27, f3, f23, rtz # perform operation
fnmsub.s f19, f27, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f27, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f27, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f27, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f27, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f27, f3, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x800000)
li x27, 0x63d3a6100dd60b91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0x326a83e5fd37352e # load x3 with value 0x326a83e5fd37352e
sw x3, 0(x2) # store 0x326a83e5fd37352e in memory
flw f3, 0(x2) # load 0x326a83e5fd37352e from memory into f3
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
fnmsub.s f27, f11, f3, f21, dyn # perform operation
fnmsub.s f27, f11, f3, f21, rdn # perform operation
fnmsub.s f27, f11, f3, f21, rmm # perform operation
fnmsub.s f27, f11, f3, f21, rne # perform operation
fnmsub.s f27, f11, f3, f21, rtz # perform operation
fnmsub.s f27, f11, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f11, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f11, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f11, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f11, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f11, f3, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80800000)
li x27, 0x028944266f4287c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
li x3, 0xc8edbe9cc45d00b1 # load x3 with value 0xc8edbe9cc45d00b1
sw x3, 0(x2) # store 0xc8edbe9cc45d00b1 in memory
flw f8, 0(x2) # load 0xc8edbe9cc45d00b1 from memory into f8
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
fnmsub.s f27, f9, f8, f24, dyn # perform operation
fnmsub.s f27, f9, f8, f24, rdn # perform operation
fnmsub.s f27, f9, f8, f24, rmm # perform operation
fnmsub.s f27, f9, f8, f24, rne # perform operation
fnmsub.s f27, f9, f8, f24, rtz # perform operation
fnmsub.s f27, f9, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f9, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f9, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f9, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f9, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f9, f8, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f7fffff)
li x8, 0xf731672c1626bcaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0x791d252954c9812b # load x3 with value 0x791d252954c9812b
sw x3, 0(x2) # store 0x791d252954c9812b in memory
flw f6, 0(x2) # load 0x791d252954c9812b from memory into f6
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
fnmsub.s f8, f31, f6, f28, dyn # perform operation
fnmsub.s f8, f31, f6, f28, rdn # perform operation
fnmsub.s f8, f31, f6, f28, rmm # perform operation
fnmsub.s f8, f31, f6, f28, rne # perform operation
fnmsub.s f8, f31, f6, f28, rtz # perform operation
fnmsub.s f8, f31, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f31, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f31, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f31, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f31, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f31, f6, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff7fffff)
li x9, 0x924a88a83a626d9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
li x3, 0xef8cde7f83406cef # load x3 with value 0xef8cde7f83406cef
sw x3, 0(x2) # store 0xef8cde7f83406cef in memory
flw f31, 0(x2) # load 0xef8cde7f83406cef from memory into f31
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
fnmsub.s f9, f29, f31, f11, dyn # perform operation
fnmsub.s f9, f29, f31, f11, rdn # perform operation
fnmsub.s f9, f29, f31, f11, rmm # perform operation
fnmsub.s f9, f29, f31, f11, rne # perform operation
fnmsub.s f9, f29, f31, f11, rtz # perform operation
fnmsub.s f9, f29, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f29, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f29, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f29, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f29, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f29, f31, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffff)
li x21, 0xb0b021a25b432650 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0x8e5e9d2f2e689eac # load x3 with value 0x8e5e9d2f2e689eac
sw x3, 0(x2) # store 0x8e5e9d2f2e689eac in memory
flw f27, 0(x2) # load 0x8e5e9d2f2e689eac from memory into f27
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
fnmsub.s f21, f15, f27, f31, dyn # perform operation
fnmsub.s f21, f15, f27, f31, rdn # perform operation
fnmsub.s f21, f15, f27, f31, rmm # perform operation
fnmsub.s f21, f15, f27, f31, rne # perform operation
fnmsub.s f21, f15, f27, f31, rtz # perform operation
fnmsub.s f21, f15, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f15, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f15, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f15, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f15, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f15, f27, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x807fffff)
li x14, 0xe858d6755489acb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
li x3, 0x35831aef98f71731 # load x3 with value 0x35831aef98f71731
sw x3, 0(x2) # store 0x35831aef98f71731 in memory
flw f25, 0(x2) # load 0x35831aef98f71731 from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
fnmsub.s f14, f13, f25, f1, dyn # perform operation
fnmsub.s f14, f13, f25, f1, rdn # perform operation
fnmsub.s f14, f13, f25, f1, rmm # perform operation
fnmsub.s f14, f13, f25, f1, rne # perform operation
fnmsub.s f14, f13, f25, f1, rtz # perform operation
fnmsub.s f14, f13, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f13, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f13, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f13, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f13, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f13, f25, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x400000)
li x2, 0x5346bbbf6926d483 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0xbd09ecc0effac0a8 # load x3 with value 0xbd09ecc0effac0a8
sw x3, 0(x2) # store 0xbd09ecc0effac0a8 in memory
flw f17, 0(x2) # load 0xbd09ecc0effac0a8 from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
fnmsub.s f2, f30, f17, f23, dyn # perform operation
fnmsub.s f2, f30, f17, f23, rdn # perform operation
fnmsub.s f2, f30, f17, f23, rmm # perform operation
fnmsub.s f2, f30, f17, f23, rne # perform operation
fnmsub.s f2, f30, f17, f23, rtz # perform operation
fnmsub.s f2, f30, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f30, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f30, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f30, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f30, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f30, f17, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80400000)
li x30, 0x64d6cafc507698a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0xd3639c576b9c36b1 # load x3 with value 0xd3639c576b9c36b1
sw x3, 0(x2) # store 0xd3639c576b9c36b1 in memory
flw f27, 0(x2) # load 0xd3639c576b9c36b1 from memory into f27
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fnmsub.s f30, f4, f27, f19, dyn # perform operation
fnmsub.s f30, f4, f27, f19, rdn # perform operation
fnmsub.s f30, f4, f27, f19, rmm # perform operation
fnmsub.s f30, f4, f27, f19, rne # perform operation
fnmsub.s f30, f4, f27, f19, rtz # perform operation
fnmsub.s f30, f4, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f4, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f4, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f4, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f4, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f4, f27, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x1)
li x26, 0x5051b5dbb5b9e045 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0x4794a6bfeed1c96 # load x3 with value 0x4794a6bfeed1c96
sw x3, 0(x2) # store 0x4794a6bfeed1c96 in memory
flw f15, 0(x2) # load 0x4794a6bfeed1c96 from memory into f15
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fnmsub.s f26, f25, f15, f10, dyn # perform operation
fnmsub.s f26, f25, f15, f10, rdn # perform operation
fnmsub.s f26, f25, f15, f10, rmm # perform operation
fnmsub.s f26, f25, f15, f10, rne # perform operation
fnmsub.s f26, f25, f15, f10, rtz # perform operation
fnmsub.s f26, f25, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f25, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f25, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f25, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f25, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f25, f15, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000001)
li x7, 0xf640808009cb91d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
li x3, 0xbcd7f542fdae0175 # load x3 with value 0xbcd7f542fdae0175
sw x3, 0(x2) # store 0xbcd7f542fdae0175 in memory
flw f20, 0(x2) # load 0xbcd7f542fdae0175 from memory into f20
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
fnmsub.s f7, f16, f20, f2, dyn # perform operation
fnmsub.s f7, f16, f20, f2, rdn # perform operation
fnmsub.s f7, f16, f20, f2, rmm # perform operation
fnmsub.s f7, f16, f20, f2, rne # perform operation
fnmsub.s f7, f16, f20, f2, rtz # perform operation
fnmsub.s f7, f16, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f16, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f16, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f16, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f16, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f16, f20, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800000)
li x14, 0x9e0ea10ae0b3c0eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0x8f5ae24e3846724d # load x3 with value 0x8f5ae24e3846724d
sw x3, 0(x2) # store 0x8f5ae24e3846724d in memory
flw f20, 0(x2) # load 0x8f5ae24e3846724d from memory into f20
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
fnmsub.s f14, f8, f20, f10, dyn # perform operation
fnmsub.s f14, f8, f20, f10, rdn # perform operation
fnmsub.s f14, f8, f20, f10, rmm # perform operation
fnmsub.s f14, f8, f20, f10, rne # perform operation
fnmsub.s f14, f8, f20, f10, rtz # perform operation
fnmsub.s f14, f8, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f8, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f8, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f8, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f8, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f8, f20, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff800000)
li x28, 0x6db3acbf1764e2ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
li x3, 0x45899d9fda11aed7 # load x3 with value 0x45899d9fda11aed7
sw x3, 0(x2) # store 0x45899d9fda11aed7 in memory
flw f31, 0(x2) # load 0x45899d9fda11aed7 from memory into f31
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fnmsub.s f28, f16, f31, f24, dyn # perform operation
fnmsub.s f28, f16, f31, f24, rdn # perform operation
fnmsub.s f28, f16, f31, f24, rmm # perform operation
fnmsub.s f28, f16, f31, f24, rne # perform operation
fnmsub.s f28, f16, f31, f24, rtz # perform operation
fnmsub.s f28, f16, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f16, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f16, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f16, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f16, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f16, f31, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fc00000)
li x10, 0x77558376c883b92e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0xf5ca5e068481c2db # load x3 with value 0xf5ca5e068481c2db
sw x3, 0(x2) # store 0xf5ca5e068481c2db in memory
flw f19, 0(x2) # load 0xf5ca5e068481c2db from memory into f19
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fnmsub.s f10, f7, f19, f18, dyn # perform operation
fnmsub.s f10, f7, f19, f18, rdn # perform operation
fnmsub.s f10, f7, f19, f18, rmm # perform operation
fnmsub.s f10, f7, f19, f18, rne # perform operation
fnmsub.s f10, f7, f19, f18, rtz # perform operation
fnmsub.s f10, f7, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f7, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f7, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f7, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f7, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f7, f19, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffffff)
li x15, 0x4920a043289d3e78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
li x3, 0x6d1655c10923e693 # load x3 with value 0x6d1655c10923e693
sw x3, 0(x2) # store 0x6d1655c10923e693 in memory
flw f18, 0(x2) # load 0x6d1655c10923e693 from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
fnmsub.s f15, f12, f18, f8, dyn # perform operation
fnmsub.s f15, f12, f18, f8, rdn # perform operation
fnmsub.s f15, f12, f18, f8, rmm # perform operation
fnmsub.s f15, f12, f18, f8, rne # perform operation
fnmsub.s f15, f12, f18, f8, rtz # perform operation
fnmsub.s f15, f12, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f12, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f12, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f12, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f12, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f12, f18, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800001)
li x10, 0xc5c9e6791b472727 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0xb8b1223709d8dc42 # load x3 with value 0xb8b1223709d8dc42
sw x3, 0(x2) # store 0xb8b1223709d8dc42 in memory
flw f9, 0(x2) # load 0xb8b1223709d8dc42 from memory into f9
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
fnmsub.s f10, f14, f9, f6, dyn # perform operation
fnmsub.s f10, f14, f9, f6, rdn # perform operation
fnmsub.s f10, f14, f9, f6, rmm # perform operation
fnmsub.s f10, f14, f9, f6, rne # perform operation
fnmsub.s f10, f14, f9, f6, rtz # perform operation
fnmsub.s f10, f14, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f14, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f14, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f14, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f14, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f14, f9, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fbfffff)
li x10, 0x4d8dcc043200c515 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0xecd6f33652b14d1 # load x3 with value 0xecd6f33652b14d1
sw x3, 0(x2) # store 0xecd6f33652b14d1 in memory
flw f11, 0(x2) # load 0xecd6f33652b14d1 from memory into f11
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
fnmsub.s f10, f14, f11, f19, dyn # perform operation
fnmsub.s f10, f14, f11, f19, rdn # perform operation
fnmsub.s f10, f14, f11, f19, rmm # perform operation
fnmsub.s f10, f14, f11, f19, rne # perform operation
fnmsub.s f10, f14, f11, f19, rtz # perform operation
fnmsub.s f10, f14, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f14, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f14, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f14, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f14, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f14, f11, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7ef8654f)
li x17, 0x1aeb5f6ea40375b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0x664e219b623dafa3 # load x3 with value 0x664e219b623dafa3
sw x3, 0(x2) # store 0x664e219b623dafa3 in memory
flw f11, 0(x2) # load 0x664e219b623dafa3 from memory into f11
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
fnmsub.s f17, f26, f11, f19, dyn # perform operation
fnmsub.s f17, f26, f11, f19, rdn # perform operation
fnmsub.s f17, f26, f11, f19, rmm # perform operation
fnmsub.s f17, f26, f11, f19, rne # perform operation
fnmsub.s f17, f26, f11, f19, rtz # perform operation
fnmsub.s f17, f26, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f26, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f26, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f26, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f26, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f26, f11, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x813d9ab0)
li x14, 0xbbe0bebac29c0334 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
li x3, 0x7983c34cf34941ea # load x3 with value 0x7983c34cf34941ea
sw x3, 0(x2) # store 0x7983c34cf34941ea in memory
flw f16, 0(x2) # load 0x7983c34cf34941ea from memory into f16
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fnmsub.s f14, f29, f16, f23, dyn # perform operation
fnmsub.s f14, f29, f16, f23, rdn # perform operation
fnmsub.s f14, f29, f16, f23, rmm # perform operation
fnmsub.s f14, f29, f16, f23, rne # perform operation
fnmsub.s f14, f29, f16, f23, rtz # perform operation
fnmsub.s f14, f29, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f29, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f29, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f29, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f29, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f29, f16, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x0)
li x4, 0x2d510ac222829a40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
li x3, 0xc0f1aae9734a62c3 # load x3 with value 0xc0f1aae9734a62c3
sw x3, 0(x2) # store 0xc0f1aae9734a62c3 in memory
flw f27, 0(x2) # load 0xc0f1aae9734a62c3 from memory into f27
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
fnmsub.s f4, f28, f27, f12, dyn # perform operation
fnmsub.s f4, f28, f27, f12, rdn # perform operation
fnmsub.s f4, f28, f27, f12, rmm # perform operation
fnmsub.s f4, f28, f27, f12, rne # perform operation
fnmsub.s f4, f28, f27, f12, rtz # perform operation
fnmsub.s f4, f28, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f28, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f28, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f28, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f28, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f28, f27, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000000)
li x21, 0xfff14c97e29999b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
li x3, 0xf9cb35798a2fd334 # load x3 with value 0xf9cb35798a2fd334
sw x3, 0(x2) # store 0xf9cb35798a2fd334 in memory
flw f27, 0(x2) # load 0xf9cb35798a2fd334 from memory into f27
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
fnmsub.s f21, f24, f27, f15, dyn # perform operation
fnmsub.s f21, f24, f27, f15, rdn # perform operation
fnmsub.s f21, f24, f27, f15, rmm # perform operation
fnmsub.s f21, f24, f27, f15, rne # perform operation
fnmsub.s f21, f24, f27, f15, rtz # perform operation
fnmsub.s f21, f24, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f24, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f24, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f24, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f24, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f24, f27, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3f800000)
li x6, 0xbfc91feb136c49a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x128675fcaec9d4a4 # load x3 with value 0x128675fcaec9d4a4
sw x3, 0(x2) # store 0x128675fcaec9d4a4 in memory
flw f2, 0(x2) # load 0x128675fcaec9d4a4 from memory into f2
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
fnmsub.s f6, f31, f2, f10, dyn # perform operation
fnmsub.s f6, f31, f2, f10, rdn # perform operation
fnmsub.s f6, f31, f2, f10, rmm # perform operation
fnmsub.s f6, f31, f2, f10, rne # perform operation
fnmsub.s f6, f31, f2, f10, rtz # perform operation
fnmsub.s f6, f31, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f31, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f31, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f31, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f31, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f31, f2, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbf800000)
li x2, 0x9f4f3083c1ccdb67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x18b96d82af897bbb # load x3 with value 0x18b96d82af897bbb
sw x3, 0(x2) # store 0x18b96d82af897bbb in memory
flw f15, 0(x2) # load 0x18b96d82af897bbb from memory into f15
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
fnmsub.s f2, f31, f15, f20, dyn # perform operation
fnmsub.s f2, f31, f15, f20, rdn # perform operation
fnmsub.s f2, f31, f15, f20, rmm # perform operation
fnmsub.s f2, f31, f15, f20, rne # perform operation
fnmsub.s f2, f31, f15, f20, rtz # perform operation
fnmsub.s f2, f31, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f31, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f31, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f31, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f31, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f31, f15, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3fc00000)
li x13, 0x748f5634cd530fc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0x271fb7acbe7062da # load x3 with value 0x271fb7acbe7062da
sw x3, 0(x2) # store 0x271fb7acbe7062da in memory
flw f9, 0(x2) # load 0x271fb7acbe7062da from memory into f9
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
fnmsub.s f13, f1, f9, f22, dyn # perform operation
fnmsub.s f13, f1, f9, f22, rdn # perform operation
fnmsub.s f13, f1, f9, f22, rmm # perform operation
fnmsub.s f13, f1, f9, f22, rne # perform operation
fnmsub.s f13, f1, f9, f22, rtz # perform operation
fnmsub.s f13, f1, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f1, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f1, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f1, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f1, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f1, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbfc00000)
li x28, 0x19a605de9381d8f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
li x3, 0x3bc2b81a8afaac89 # load x3 with value 0x3bc2b81a8afaac89
sw x3, 0(x2) # store 0x3bc2b81a8afaac89 in memory
flw f21, 0(x2) # load 0x3bc2b81a8afaac89 from memory into f21
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
fnmsub.s f28, f12, f21, f22, dyn # perform operation
fnmsub.s f28, f12, f21, f22, rdn # perform operation
fnmsub.s f28, f12, f21, f22, rmm # perform operation
fnmsub.s f28, f12, f21, f22, rne # perform operation
fnmsub.s f28, f12, f21, f22, rtz # perform operation
fnmsub.s f28, f12, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f12, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f12, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f12, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f12, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f12, f21, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x40000000)
li x16, 0xee56ba546c35da31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0xb6e9d1d761ff6aea # load x3 with value 0xb6e9d1d761ff6aea
sw x3, 0(x2) # store 0xb6e9d1d761ff6aea in memory
flw f25, 0(x2) # load 0xb6e9d1d761ff6aea from memory into f25
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
fnmsub.s f16, f17, f25, f1, dyn # perform operation
fnmsub.s f16, f17, f25, f1, rdn # perform operation
fnmsub.s f16, f17, f25, f1, rmm # perform operation
fnmsub.s f16, f17, f25, f1, rne # perform operation
fnmsub.s f16, f17, f25, f1, rtz # perform operation
fnmsub.s f16, f17, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f17, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f17, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f17, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f17, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f17, f25, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xc0000000)
li x26, 0xbbbeb09f88da82f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0x6dab65ca4282cdbd # load x3 with value 0x6dab65ca4282cdbd
sw x3, 0(x2) # store 0x6dab65ca4282cdbd in memory
flw f27, 0(x2) # load 0x6dab65ca4282cdbd from memory into f27
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
fnmsub.s f26, f3, f27, f12, dyn # perform operation
fnmsub.s f26, f3, f27, f12, rdn # perform operation
fnmsub.s f26, f3, f27, f12, rmm # perform operation
fnmsub.s f26, f3, f27, f12, rne # perform operation
fnmsub.s f26, f3, f27, f12, rtz # perform operation
fnmsub.s f26, f3, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f3, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f3, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f3, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f3, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f3, f27, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x800000)
li x14, 0xb702506d0b59fbbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
li x3, 0xb0438514c76a8f0f # load x3 with value 0xb0438514c76a8f0f
sw x3, 0(x2) # store 0xb0438514c76a8f0f in memory
flw f24, 0(x2) # load 0xb0438514c76a8f0f from memory into f24
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fnmsub.s f14, f28, f24, f12, dyn # perform operation
fnmsub.s f14, f28, f24, f12, rdn # perform operation
fnmsub.s f14, f28, f24, f12, rmm # perform operation
fnmsub.s f14, f28, f24, f12, rne # perform operation
fnmsub.s f14, f28, f24, f12, rtz # perform operation
fnmsub.s f14, f28, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f28, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f28, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f28, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f28, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f28, f24, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80800000)
li x28, 0x2225a9bb763c6a24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
li x3, 0xd0a613f1b93e494c # load x3 with value 0xd0a613f1b93e494c
sw x3, 0(x2) # store 0xd0a613f1b93e494c in memory
flw f25, 0(x2) # load 0xd0a613f1b93e494c from memory into f25
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
fnmsub.s f28, f24, f25, f19, dyn # perform operation
fnmsub.s f28, f24, f25, f19, rdn # perform operation
fnmsub.s f28, f24, f25, f19, rmm # perform operation
fnmsub.s f28, f24, f25, f19, rne # perform operation
fnmsub.s f28, f24, f25, f19, rtz # perform operation
fnmsub.s f28, f24, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f24, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f24, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f24, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f24, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f24, f25, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f7fffff)
li x15, 0xa1ee40552a947d2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0xb90a20bd5c0e4e10 # load x3 with value 0xb90a20bd5c0e4e10
sw x3, 0(x2) # store 0xb90a20bd5c0e4e10 in memory
flw f3, 0(x2) # load 0xb90a20bd5c0e4e10 from memory into f3
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
fnmsub.s f15, f16, f3, f5, dyn # perform operation
fnmsub.s f15, f16, f3, f5, rdn # perform operation
fnmsub.s f15, f16, f3, f5, rmm # perform operation
fnmsub.s f15, f16, f3, f5, rne # perform operation
fnmsub.s f15, f16, f3, f5, rtz # perform operation
fnmsub.s f15, f16, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f16, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f16, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f16, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f16, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f16, f3, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff7fffff)
li x21, 0x9cdc5be488f253fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
li x3, 0xf7109c5f61824425 # load x3 with value 0xf7109c5f61824425
sw x3, 0(x2) # store 0xf7109c5f61824425 in memory
flw f9, 0(x2) # load 0xf7109c5f61824425 from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
fnmsub.s f21, f28, f9, f15, dyn # perform operation
fnmsub.s f21, f28, f9, f15, rdn # perform operation
fnmsub.s f21, f28, f9, f15, rmm # perform operation
fnmsub.s f21, f28, f9, f15, rne # perform operation
fnmsub.s f21, f28, f9, f15, rtz # perform operation
fnmsub.s f21, f28, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f28, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f28, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f28, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f28, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f28, f9, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffff)
li x15, 0x02d895938511a6a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0xf4996a014f7301e8 # load x3 with value 0xf4996a014f7301e8
sw x3, 0(x2) # store 0xf4996a014f7301e8 in memory
flw f8, 0(x2) # load 0xf4996a014f7301e8 from memory into f8
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
fnmsub.s f15, f18, f8, f29, dyn # perform operation
fnmsub.s f15, f18, f8, f29, rdn # perform operation
fnmsub.s f15, f18, f8, f29, rmm # perform operation
fnmsub.s f15, f18, f8, f29, rne # perform operation
fnmsub.s f15, f18, f8, f29, rtz # perform operation
fnmsub.s f15, f18, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f18, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f18, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f18, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f18, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f18, f8, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x807fffff)
li x31, 0x12af27025f5e221e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
li x3, 0x1f06936ab1aed05d # load x3 with value 0x1f06936ab1aed05d
sw x3, 0(x2) # store 0x1f06936ab1aed05d in memory
flw f14, 0(x2) # load 0x1f06936ab1aed05d from memory into f14
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
fnmsub.s f31, f12, f14, f28, dyn # perform operation
fnmsub.s f31, f12, f14, f28, rdn # perform operation
fnmsub.s f31, f12, f14, f28, rmm # perform operation
fnmsub.s f31, f12, f14, f28, rne # perform operation
fnmsub.s f31, f12, f14, f28, rtz # perform operation
fnmsub.s f31, f12, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f12, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f12, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f12, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f12, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f12, f14, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x400000)
li x8, 0x90f5024d38eabfc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0xc5f50f0e0ad4fdb0 # load x3 with value 0xc5f50f0e0ad4fdb0
sw x3, 0(x2) # store 0xc5f50f0e0ad4fdb0 in memory
flw f10, 0(x2) # load 0xc5f50f0e0ad4fdb0 from memory into f10
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fnmsub.s f8, f14, f10, f3, dyn # perform operation
fnmsub.s f8, f14, f10, f3, rdn # perform operation
fnmsub.s f8, f14, f10, f3, rmm # perform operation
fnmsub.s f8, f14, f10, f3, rne # perform operation
fnmsub.s f8, f14, f10, f3, rtz # perform operation
fnmsub.s f8, f14, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f14, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f14, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f14, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f14, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f14, f10, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80400000)
li x9, 0x9e04b0e774f35584 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0x8ee305cc1cd40603 # load x3 with value 0x8ee305cc1cd40603
sw x3, 0(x2) # store 0x8ee305cc1cd40603 in memory
flw f7, 0(x2) # load 0x8ee305cc1cd40603 from memory into f7
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
fnmsub.s f9, f6, f7, f16, dyn # perform operation
fnmsub.s f9, f6, f7, f16, rdn # perform operation
fnmsub.s f9, f6, f7, f16, rmm # perform operation
fnmsub.s f9, f6, f7, f16, rne # perform operation
fnmsub.s f9, f6, f7, f16, rtz # perform operation
fnmsub.s f9, f6, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f6, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f6, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f6, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f6, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f6, f7, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x1)
li x8, 0x6135a77ed46cf398 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0x53053b7b728e5ee2 # load x3 with value 0x53053b7b728e5ee2
sw x3, 0(x2) # store 0x53053b7b728e5ee2 in memory
flw f23, 0(x2) # load 0x53053b7b728e5ee2 from memory into f23
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
fnmsub.s f8, f14, f23, f1, dyn # perform operation
fnmsub.s f8, f14, f23, f1, rdn # perform operation
fnmsub.s f8, f14, f23, f1, rmm # perform operation
fnmsub.s f8, f14, f23, f1, rne # perform operation
fnmsub.s f8, f14, f23, f1, rtz # perform operation
fnmsub.s f8, f14, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f14, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f14, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f14, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f14, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f14, f23, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000001)
li x22, 0x2dda0459bea8a46c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0xadc4e45ce04aa429 # load x3 with value 0xadc4e45ce04aa429
sw x3, 0(x2) # store 0xadc4e45ce04aa429 in memory
flw f18, 0(x2) # load 0xadc4e45ce04aa429 from memory into f18
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
fnmsub.s f22, f7, f18, f19, dyn # perform operation
fnmsub.s f22, f7, f18, f19, rdn # perform operation
fnmsub.s f22, f7, f18, f19, rmm # perform operation
fnmsub.s f22, f7, f18, f19, rne # perform operation
fnmsub.s f22, f7, f18, f19, rtz # perform operation
fnmsub.s f22, f7, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f7, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f7, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f7, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f7, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f7, f18, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800000)
li x2, 0xf58014bb5ba9e714 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
li x3, 0x16fa6dd9070512e2 # load x3 with value 0x16fa6dd9070512e2
sw x3, 0(x2) # store 0x16fa6dd9070512e2 in memory
flw f10, 0(x2) # load 0x16fa6dd9070512e2 from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
fnmsub.s f2, f12, f10, f16, dyn # perform operation
fnmsub.s f2, f12, f10, f16, rdn # perform operation
fnmsub.s f2, f12, f10, f16, rmm # perform operation
fnmsub.s f2, f12, f10, f16, rne # perform operation
fnmsub.s f2, f12, f10, f16, rtz # perform operation
fnmsub.s f2, f12, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f12, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f12, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f12, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f12, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f12, f10, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff800000)
li x15, 0xcd855ca6387b3079 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0x9c157a1b67c241b3 # load x3 with value 0x9c157a1b67c241b3
sw x3, 0(x2) # store 0x9c157a1b67c241b3 in memory
flw f20, 0(x2) # load 0x9c157a1b67c241b3 from memory into f20
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
fnmsub.s f15, f26, f20, f8, dyn # perform operation
fnmsub.s f15, f26, f20, f8, rdn # perform operation
fnmsub.s f15, f26, f20, f8, rmm # perform operation
fnmsub.s f15, f26, f20, f8, rne # perform operation
fnmsub.s f15, f26, f20, f8, rtz # perform operation
fnmsub.s f15, f26, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f26, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f26, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f26, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f26, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f26, f20, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fc00000)
li x18, 0xdcbdfb4528f8883b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0xc48db4483735066e # load x3 with value 0xc48db4483735066e
sw x3, 0(x2) # store 0xc48db4483735066e in memory
flw f10, 0(x2) # load 0xc48db4483735066e from memory into f10
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
fnmsub.s f18, f17, f10, f8, dyn # perform operation
fnmsub.s f18, f17, f10, f8, rdn # perform operation
fnmsub.s f18, f17, f10, f8, rmm # perform operation
fnmsub.s f18, f17, f10, f8, rne # perform operation
fnmsub.s f18, f17, f10, f8, rtz # perform operation
fnmsub.s f18, f17, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f17, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f17, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f17, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f17, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f17, f10, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffffff)
li x30, 0x1c41b6dc25513ed9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0xe4ebfc66305364a2 # load x3 with value 0xe4ebfc66305364a2
sw x3, 0(x2) # store 0xe4ebfc66305364a2 in memory
flw f2, 0(x2) # load 0xe4ebfc66305364a2 from memory into f2
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
fnmsub.s f30, f19, f2, f21, dyn # perform operation
fnmsub.s f30, f19, f2, f21, rdn # perform operation
fnmsub.s f30, f19, f2, f21, rmm # perform operation
fnmsub.s f30, f19, f2, f21, rne # perform operation
fnmsub.s f30, f19, f2, f21, rtz # perform operation
fnmsub.s f30, f19, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f19, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f19, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f19, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f19, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f19, f2, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800001)
li x29, 0xba30de7f8cd16bed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0x918b70cc120ddbd7 # load x3 with value 0x918b70cc120ddbd7
sw x3, 0(x2) # store 0x918b70cc120ddbd7 in memory
flw f13, 0(x2) # load 0x918b70cc120ddbd7 from memory into f13
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
fnmsub.s f29, f18, f13, f2, dyn # perform operation
fnmsub.s f29, f18, f13, f2, rdn # perform operation
fnmsub.s f29, f18, f13, f2, rmm # perform operation
fnmsub.s f29, f18, f13, f2, rne # perform operation
fnmsub.s f29, f18, f13, f2, rtz # perform operation
fnmsub.s f29, f18, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f18, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f18, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f18, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f18, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f18, f13, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fbfffff)
li x14, 0x84f5dd5ac078a604 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
li x3, 0xd24907da13e5d896 # load x3 with value 0xd24907da13e5d896
sw x3, 0(x2) # store 0xd24907da13e5d896 in memory
flw f1, 0(x2) # load 0xd24907da13e5d896 from memory into f1
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
fnmsub.s f14, f23, f1, f3, dyn # perform operation
fnmsub.s f14, f23, f1, f3, rdn # perform operation
fnmsub.s f14, f23, f1, f3, rmm # perform operation
fnmsub.s f14, f23, f1, f3, rne # perform operation
fnmsub.s f14, f23, f1, f3, rtz # perform operation
fnmsub.s f14, f23, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f23, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f23, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f23, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f23, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f23, f1, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7ef8654f)
li x5, 0x9b6d1523ab8b509b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0x7ebfd18bc390253 # load x3 with value 0x7ebfd18bc390253
sw x3, 0(x2) # store 0x7ebfd18bc390253 in memory
flw f8, 0(x2) # load 0x7ebfd18bc390253 from memory into f8
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
fnmsub.s f5, f27, f8, f7, dyn # perform operation
fnmsub.s f5, f27, f8, f7, rdn # perform operation
fnmsub.s f5, f27, f8, f7, rmm # perform operation
fnmsub.s f5, f27, f8, f7, rne # perform operation
fnmsub.s f5, f27, f8, f7, rtz # perform operation
fnmsub.s f5, f27, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f27, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f27, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f27, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f27, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f27, f8, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x813d9ab0)
li x21, 0x45554c193d600320 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0x7cf8086d0ec6dcb3 # load x3 with value 0x7cf8086d0ec6dcb3
sw x3, 0(x2) # store 0x7cf8086d0ec6dcb3 in memory
flw f15, 0(x2) # load 0x7cf8086d0ec6dcb3 from memory into f15
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
fnmsub.s f21, f18, f15, f1, dyn # perform operation
fnmsub.s f21, f18, f15, f1, rdn # perform operation
fnmsub.s f21, f18, f15, f1, rmm # perform operation
fnmsub.s f21, f18, f15, f1, rne # perform operation
fnmsub.s f21, f18, f15, f1, rtz # perform operation
fnmsub.s f21, f18, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f18, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f18, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f18, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f18, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f18, f15, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x0)
li x21, 0xf4eec24ffc5517fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0xea8f1980181127c1 # load x3 with value 0xea8f1980181127c1
sw x3, 0(x2) # store 0xea8f1980181127c1 in memory
flw f19, 0(x2) # load 0xea8f1980181127c1 from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
fnmsub.s f21, f27, f19, f22, dyn # perform operation
fnmsub.s f21, f27, f19, f22, rdn # perform operation
fnmsub.s f21, f27, f19, f22, rmm # perform operation
fnmsub.s f21, f27, f19, f22, rne # perform operation
fnmsub.s f21, f27, f19, f22, rtz # perform operation
fnmsub.s f21, f27, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f27, f19, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000000)
li x16, 0x7b0c4b4383f8fb02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0xf7204d718e716e40 # load x3 with value 0xf7204d718e716e40
sw x3, 0(x2) # store 0xf7204d718e716e40 in memory
flw f13, 0(x2) # load 0xf7204d718e716e40 from memory into f13
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
fnmsub.s f16, f30, f13, f19, dyn # perform operation
fnmsub.s f16, f30, f13, f19, rdn # perform operation
fnmsub.s f16, f30, f13, f19, rmm # perform operation
fnmsub.s f16, f30, f13, f19, rne # perform operation
fnmsub.s f16, f30, f13, f19, rtz # perform operation
fnmsub.s f16, f30, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f30, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f30, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f30, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f30, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f30, f13, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3f800000)
li x15, 0x1d77117761ce6a84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0x5b87dad870cc99f1 # load x3 with value 0x5b87dad870cc99f1
sw x3, 0(x2) # store 0x5b87dad870cc99f1 in memory
flw f26, 0(x2) # load 0x5b87dad870cc99f1 from memory into f26
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
fnmsub.s f15, f21, f26, f4, dyn # perform operation
fnmsub.s f15, f21, f26, f4, rdn # perform operation
fnmsub.s f15, f21, f26, f4, rmm # perform operation
fnmsub.s f15, f21, f26, f4, rne # perform operation
fnmsub.s f15, f21, f26, f4, rtz # perform operation
fnmsub.s f15, f21, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f21, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f21, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f21, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f21, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f21, f26, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbf800000)
li x3, 0x97713a5496080257 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
li x3, 0xff4c11e6948e51a # load x3 with value 0xff4c11e6948e51a
sw x3, 0(x2) # store 0xff4c11e6948e51a in memory
flw f7, 0(x2) # load 0xff4c11e6948e51a from memory into f7
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fnmsub.s f3, f17, f7, f8, dyn # perform operation
fnmsub.s f3, f17, f7, f8, rdn # perform operation
fnmsub.s f3, f17, f7, f8, rmm # perform operation
fnmsub.s f3, f17, f7, f8, rne # perform operation
fnmsub.s f3, f17, f7, f8, rtz # perform operation
fnmsub.s f3, f17, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f17, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f17, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f17, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f17, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f17, f7, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3fc00000)
li x5, 0xe231c73ab7193779 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0x259524ee119ed625 # load x3 with value 0x259524ee119ed625
sw x3, 0(x2) # store 0x259524ee119ed625 in memory
flw f18, 0(x2) # load 0x259524ee119ed625 from memory into f18
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
fnmsub.s f5, f19, f18, f28, dyn # perform operation
fnmsub.s f5, f19, f18, f28, rdn # perform operation
fnmsub.s f5, f19, f18, f28, rmm # perform operation
fnmsub.s f5, f19, f18, f28, rne # perform operation
fnmsub.s f5, f19, f18, f28, rtz # perform operation
fnmsub.s f5, f19, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f19, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f19, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f19, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f19, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f19, f18, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbfc00000)
li x26, 0x49a27da82a79ec7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0x275eb190db3ea4f6 # load x3 with value 0x275eb190db3ea4f6
sw x3, 0(x2) # store 0x275eb190db3ea4f6 in memory
flw f21, 0(x2) # load 0x275eb190db3ea4f6 from memory into f21
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
fnmsub.s f26, f30, f21, f12, dyn # perform operation
fnmsub.s f26, f30, f21, f12, rdn # perform operation
fnmsub.s f26, f30, f21, f12, rmm # perform operation
fnmsub.s f26, f30, f21, f12, rne # perform operation
fnmsub.s f26, f30, f21, f12, rtz # perform operation
fnmsub.s f26, f30, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f30, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f30, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f30, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f30, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f30, f21, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x40000000)
li x22, 0x17465d778169b7cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
li x3, 0xf9e1d91a5d1631d4 # load x3 with value 0xf9e1d91a5d1631d4
sw x3, 0(x2) # store 0xf9e1d91a5d1631d4 in memory
flw f7, 0(x2) # load 0xf9e1d91a5d1631d4 from memory into f7
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
fnmsub.s f22, f24, f7, f31, dyn # perform operation
fnmsub.s f22, f24, f7, f31, rdn # perform operation
fnmsub.s f22, f24, f7, f31, rmm # perform operation
fnmsub.s f22, f24, f7, f31, rne # perform operation
fnmsub.s f22, f24, f7, f31, rtz # perform operation
fnmsub.s f22, f24, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f24, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f24, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f24, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f24, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f24, f7, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xc0000000)
li x27, 0xbea8d309c672391d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0x4fded871e34370dd # load x3 with value 0x4fded871e34370dd
sw x3, 0(x2) # store 0x4fded871e34370dd in memory
flw f30, 0(x2) # load 0x4fded871e34370dd from memory into f30
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
fnmsub.s f27, f1, f30, f11, dyn # perform operation
fnmsub.s f27, f1, f30, f11, rdn # perform operation
fnmsub.s f27, f1, f30, f11, rmm # perform operation
fnmsub.s f27, f1, f30, f11, rne # perform operation
fnmsub.s f27, f1, f30, f11, rtz # perform operation
fnmsub.s f27, f1, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f1, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f1, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f1, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f1, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f1, f30, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x800000)
li x17, 0x3c5a711e79179282 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
li x3, 0x653ecd4defa43ebb # load x3 with value 0x653ecd4defa43ebb
sw x3, 0(x2) # store 0x653ecd4defa43ebb in memory
flw f6, 0(x2) # load 0x653ecd4defa43ebb from memory into f6
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
fnmsub.s f17, f28, f6, f10, dyn # perform operation
fnmsub.s f17, f28, f6, f10, rdn # perform operation
fnmsub.s f17, f28, f6, f10, rmm # perform operation
fnmsub.s f17, f28, f6, f10, rne # perform operation
fnmsub.s f17, f28, f6, f10, rtz # perform operation
fnmsub.s f17, f28, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f28, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f28, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f28, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f28, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f28, f6, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80800000)
li x10, 0x14234f6423b761c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
li x3, 0x519da481957aaa59 # load x3 with value 0x519da481957aaa59
sw x3, 0(x2) # store 0x519da481957aaa59 in memory
flw f9, 0(x2) # load 0x519da481957aaa59 from memory into f9
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fnmsub.s f10, f11, f9, f22, dyn # perform operation
fnmsub.s f10, f11, f9, f22, rdn # perform operation
fnmsub.s f10, f11, f9, f22, rmm # perform operation
fnmsub.s f10, f11, f9, f22, rne # perform operation
fnmsub.s f10, f11, f9, f22, rtz # perform operation
fnmsub.s f10, f11, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f11, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f11, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f11, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f11, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f11, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f7fffff)
li x19, 0x2948a17007e77f18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0x1dff91e777b3c357 # load x3 with value 0x1dff91e777b3c357
sw x3, 0(x2) # store 0x1dff91e777b3c357 in memory
flw f23, 0(x2) # load 0x1dff91e777b3c357 from memory into f23
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
fnmsub.s f19, f30, f23, f16, dyn # perform operation
fnmsub.s f19, f30, f23, f16, rdn # perform operation
fnmsub.s f19, f30, f23, f16, rmm # perform operation
fnmsub.s f19, f30, f23, f16, rne # perform operation
fnmsub.s f19, f30, f23, f16, rtz # perform operation
fnmsub.s f19, f30, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f30, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f30, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f30, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f30, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f30, f23, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff7fffff)
li x28, 0x491531aa46f467d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
li x3, 0x6bbe280e3fb6a1b8 # load x3 with value 0x6bbe280e3fb6a1b8
sw x3, 0(x2) # store 0x6bbe280e3fb6a1b8 in memory
flw f11, 0(x2) # load 0x6bbe280e3fb6a1b8 from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
fnmsub.s f28, f3, f11, f6, dyn # perform operation
fnmsub.s f28, f3, f11, f6, rdn # perform operation
fnmsub.s f28, f3, f11, f6, rmm # perform operation
fnmsub.s f28, f3, f11, f6, rne # perform operation
fnmsub.s f28, f3, f11, f6, rtz # perform operation
fnmsub.s f28, f3, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f3, f11, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffff)
li x24, 0x527848e6a2f717a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0x83039b5c876ee884 # load x3 with value 0x83039b5c876ee884
sw x3, 0(x2) # store 0x83039b5c876ee884 in memory
flw f21, 0(x2) # load 0x83039b5c876ee884 from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
fnmsub.s f24, f16, f21, f3, dyn # perform operation
fnmsub.s f24, f16, f21, f3, rdn # perform operation
fnmsub.s f24, f16, f21, f3, rmm # perform operation
fnmsub.s f24, f16, f21, f3, rne # perform operation
fnmsub.s f24, f16, f21, f3, rtz # perform operation
fnmsub.s f24, f16, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f16, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f16, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f16, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f16, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f16, f21, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x807fffff)
li x17, 0xadb322e3d4e8624b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0xacf980bbe1513767 # load x3 with value 0xacf980bbe1513767
sw x3, 0(x2) # store 0xacf980bbe1513767 in memory
flw f3, 0(x2) # load 0xacf980bbe1513767 from memory into f3
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
fnmsub.s f17, f21, f3, f19, dyn # perform operation
fnmsub.s f17, f21, f3, f19, rdn # perform operation
fnmsub.s f17, f21, f3, f19, rmm # perform operation
fnmsub.s f17, f21, f3, f19, rne # perform operation
fnmsub.s f17, f21, f3, f19, rtz # perform operation
fnmsub.s f17, f21, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f21, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f21, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f21, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f21, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f21, f3, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x400000)
li x11, 0x13e54cf055b37972 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0x2fe6eec488c6a5ab # load x3 with value 0x2fe6eec488c6a5ab
sw x3, 0(x2) # store 0x2fe6eec488c6a5ab in memory
flw f13, 0(x2) # load 0x2fe6eec488c6a5ab from memory into f13
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
fnmsub.s f11, f26, f13, f29, dyn # perform operation
fnmsub.s f11, f26, f13, f29, rdn # perform operation
fnmsub.s f11, f26, f13, f29, rmm # perform operation
fnmsub.s f11, f26, f13, f29, rne # perform operation
fnmsub.s f11, f26, f13, f29, rtz # perform operation
fnmsub.s f11, f26, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f26, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f26, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f26, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f26, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f26, f13, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80400000)
li x25, 0x4408128f7bbdec6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
li x3, 0x586bc75e51748f90 # load x3 with value 0x586bc75e51748f90
sw x3, 0(x2) # store 0x586bc75e51748f90 in memory
flw f26, 0(x2) # load 0x586bc75e51748f90 from memory into f26
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
fnmsub.s f25, f17, f26, f18, dyn # perform operation
fnmsub.s f25, f17, f26, f18, rdn # perform operation
fnmsub.s f25, f17, f26, f18, rmm # perform operation
fnmsub.s f25, f17, f26, f18, rne # perform operation
fnmsub.s f25, f17, f26, f18, rtz # perform operation
fnmsub.s f25, f17, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f17, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f17, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f17, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f17, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f17, f26, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x1)
li x25, 0x923507063bc57341 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0x7835d73d11db695d # load x3 with value 0x7835d73d11db695d
sw x3, 0(x2) # store 0x7835d73d11db695d in memory
flw f26, 0(x2) # load 0x7835d73d11db695d from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
fnmsub.s f25, f20, f26, f6, dyn # perform operation
fnmsub.s f25, f20, f26, f6, rdn # perform operation
fnmsub.s f25, f20, f26, f6, rmm # perform operation
fnmsub.s f25, f20, f26, f6, rne # perform operation
fnmsub.s f25, f20, f26, f6, rtz # perform operation
fnmsub.s f25, f20, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f20, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f20, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f20, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f20, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f20, f26, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000001)
li x8, 0x4767aff2770a569f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0x91a04fc59393d4da # load x3 with value 0x91a04fc59393d4da
sw x3, 0(x2) # store 0x91a04fc59393d4da in memory
flw f9, 0(x2) # load 0x91a04fc59393d4da from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fnmsub.s f8, f4, f9, f24, dyn # perform operation
fnmsub.s f8, f4, f9, f24, rdn # perform operation
fnmsub.s f8, f4, f9, f24, rmm # perform operation
fnmsub.s f8, f4, f9, f24, rne # perform operation
fnmsub.s f8, f4, f9, f24, rtz # perform operation
fnmsub.s f8, f4, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f4, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f4, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f4, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f4, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f4, f9, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800000)
li x18, 0xea752898c54875ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0xdee915737fa1fcd1 # load x3 with value 0xdee915737fa1fcd1
sw x3, 0(x2) # store 0xdee915737fa1fcd1 in memory
flw f22, 0(x2) # load 0xdee915737fa1fcd1 from memory into f22
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
fnmsub.s f18, f1, f22, f29, dyn # perform operation
fnmsub.s f18, f1, f22, f29, rdn # perform operation
fnmsub.s f18, f1, f22, f29, rmm # perform operation
fnmsub.s f18, f1, f22, f29, rne # perform operation
fnmsub.s f18, f1, f22, f29, rtz # perform operation
fnmsub.s f18, f1, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f1, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f1, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f1, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f1, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f1, f22, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff800000)
li x11, 0xcddfafc5085264d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0x62c6ffcd5f5d087e # load x3 with value 0x62c6ffcd5f5d087e
sw x3, 0(x2) # store 0x62c6ffcd5f5d087e in memory
flw f2, 0(x2) # load 0x62c6ffcd5f5d087e from memory into f2
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
fnmsub.s f11, f4, f2, f12, dyn # perform operation
fnmsub.s f11, f4, f2, f12, rdn # perform operation
fnmsub.s f11, f4, f2, f12, rmm # perform operation
fnmsub.s f11, f4, f2, f12, rne # perform operation
fnmsub.s f11, f4, f2, f12, rtz # perform operation
fnmsub.s f11, f4, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f4, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f4, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f4, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f4, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f4, f2, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fc00000)
li x26, 0x8bf0ca3a0f8acb7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
li x3, 0xbea4b15cbe7303fa # load x3 with value 0xbea4b15cbe7303fa
sw x3, 0(x2) # store 0xbea4b15cbe7303fa in memory
flw f7, 0(x2) # load 0xbea4b15cbe7303fa from memory into f7
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
fnmsub.s f26, f22, f7, f6, dyn # perform operation
fnmsub.s f26, f22, f7, f6, rdn # perform operation
fnmsub.s f26, f22, f7, f6, rmm # perform operation
fnmsub.s f26, f22, f7, f6, rne # perform operation
fnmsub.s f26, f22, f7, f6, rtz # perform operation
fnmsub.s f26, f22, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f22, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f22, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f22, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f22, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f22, f7, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffffff)
li x18, 0x76835cb5ceea4c0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
li x3, 0x549f74ba00257124 # load x3 with value 0x549f74ba00257124
sw x3, 0(x2) # store 0x549f74ba00257124 in memory
flw f4, 0(x2) # load 0x549f74ba00257124 from memory into f4
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
fnmsub.s f18, f24, f4, f15, dyn # perform operation
fnmsub.s f18, f24, f4, f15, rdn # perform operation
fnmsub.s f18, f24, f4, f15, rmm # perform operation
fnmsub.s f18, f24, f4, f15, rne # perform operation
fnmsub.s f18, f24, f4, f15, rtz # perform operation
fnmsub.s f18, f24, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f24, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f24, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f24, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f24, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f24, f4, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800001)
li x30, 0x0110953296312239 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0xbffaa0efb4a963ec # load x3 with value 0xbffaa0efb4a963ec
sw x3, 0(x2) # store 0xbffaa0efb4a963ec in memory
flw f12, 0(x2) # load 0xbffaa0efb4a963ec from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
fnmsub.s f30, f13, f12, f2, dyn # perform operation
fnmsub.s f30, f13, f12, f2, rdn # perform operation
fnmsub.s f30, f13, f12, f2, rmm # perform operation
fnmsub.s f30, f13, f12, f2, rne # perform operation
fnmsub.s f30, f13, f12, f2, rtz # perform operation
fnmsub.s f30, f13, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f13, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f13, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f13, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f13, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f13, f12, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fbfffff)
li x22, 0xf8e512971d8ded25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
li x3, 0xae62ef13458845cd # load x3 with value 0xae62ef13458845cd
sw x3, 0(x2) # store 0xae62ef13458845cd in memory
flw f16, 0(x2) # load 0xae62ef13458845cd from memory into f16
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
fnmsub.s f22, f17, f16, f29, dyn # perform operation
fnmsub.s f22, f17, f16, f29, rdn # perform operation
fnmsub.s f22, f17, f16, f29, rmm # perform operation
fnmsub.s f22, f17, f16, f29, rne # perform operation
fnmsub.s f22, f17, f16, f29, rtz # perform operation
fnmsub.s f22, f17, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f17, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f17, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f17, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f17, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f17, f16, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7ef8654f)
li x15, 0x097f2608e2f7ee2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0x683b60275f0213f7 # load x3 with value 0x683b60275f0213f7
sw x3, 0(x2) # store 0x683b60275f0213f7 in memory
flw f1, 0(x2) # load 0x683b60275f0213f7 from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
fnmsub.s f15, f4, f1, f20, dyn # perform operation
fnmsub.s f15, f4, f1, f20, rdn # perform operation
fnmsub.s f15, f4, f1, f20, rmm # perform operation
fnmsub.s f15, f4, f1, f20, rne # perform operation
fnmsub.s f15, f4, f1, f20, rtz # perform operation
fnmsub.s f15, f4, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f4, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f4, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f4, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f4, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f4, f1, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x813d9ab0)
li x9, 0xc9ee897e88eb0b9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0x1f9faf4442078b12 # load x3 with value 0x1f9faf4442078b12
sw x3, 0(x2) # store 0x1f9faf4442078b12 in memory
flw f19, 0(x2) # load 0x1f9faf4442078b12 from memory into f19
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
fnmsub.s f9, f7, f19, f28, dyn # perform operation
fnmsub.s f9, f7, f19, f28, rdn # perform operation
fnmsub.s f9, f7, f19, f28, rmm # perform operation
fnmsub.s f9, f7, f19, f28, rne # perform operation
fnmsub.s f9, f7, f19, f28, rtz # perform operation
fnmsub.s f9, f7, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f7, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f7, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f7, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f7, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f7, f19, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x0)
li x10, 0xa74ce568e9e69687 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x7c203a8dd5b9a069 # load x3 with value 0x7c203a8dd5b9a069
sw x3, 0(x2) # store 0x7c203a8dd5b9a069 in memory
flw f26, 0(x2) # load 0x7c203a8dd5b9a069 from memory into f26
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
fnmsub.s f10, f18, f26, f4, dyn # perform operation
fnmsub.s f10, f18, f26, f4, rdn # perform operation
fnmsub.s f10, f18, f26, f4, rmm # perform operation
fnmsub.s f10, f18, f26, f4, rne # perform operation
fnmsub.s f10, f18, f26, f4, rtz # perform operation
fnmsub.s f10, f18, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f18, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f18, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f18, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f18, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f18, f26, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000000)
li x11, 0xfb4bbd6edd22f0f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0xc7d39fd8c71452ec # load x3 with value 0xc7d39fd8c71452ec
sw x3, 0(x2) # store 0xc7d39fd8c71452ec in memory
flw f16, 0(x2) # load 0xc7d39fd8c71452ec from memory into f16
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
fnmsub.s f11, f20, f16, f25, dyn # perform operation
fnmsub.s f11, f20, f16, f25, rdn # perform operation
fnmsub.s f11, f20, f16, f25, rmm # perform operation
fnmsub.s f11, f20, f16, f25, rne # perform operation
fnmsub.s f11, f20, f16, f25, rtz # perform operation
fnmsub.s f11, f20, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f20, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f20, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f20, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f20, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f20, f16, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3f800000)
li x5, 0x4dd746b24bc0e061 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
li x3, 0x9e96c8386e646274 # load x3 with value 0x9e96c8386e646274
sw x3, 0(x2) # store 0x9e96c8386e646274 in memory
flw f11, 0(x2) # load 0x9e96c8386e646274 from memory into f11
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
fnmsub.s f5, f25, f11, f23, dyn # perform operation
fnmsub.s f5, f25, f11, f23, rdn # perform operation
fnmsub.s f5, f25, f11, f23, rmm # perform operation
fnmsub.s f5, f25, f11, f23, rne # perform operation
fnmsub.s f5, f25, f11, f23, rtz # perform operation
fnmsub.s f5, f25, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f25, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f25, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f25, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f25, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f25, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbf800000)
li x8, 0x80a0eee9da3735c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0xddb33187f7e69a42 # load x3 with value 0xddb33187f7e69a42
sw x3, 0(x2) # store 0xddb33187f7e69a42 in memory
flw f22, 0(x2) # load 0xddb33187f7e69a42 from memory into f22
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
fnmsub.s f8, f7, f22, f24, dyn # perform operation
fnmsub.s f8, f7, f22, f24, rdn # perform operation
fnmsub.s f8, f7, f22, f24, rmm # perform operation
fnmsub.s f8, f7, f22, f24, rne # perform operation
fnmsub.s f8, f7, f22, f24, rtz # perform operation
fnmsub.s f8, f7, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f7, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f7, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f7, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f7, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f7, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3fc00000)
li x23, 0x81561c0a76e33863 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0xfbe7f1c2ac279714 # load x3 with value 0xfbe7f1c2ac279714
sw x3, 0(x2) # store 0xfbe7f1c2ac279714 in memory
flw f4, 0(x2) # load 0xfbe7f1c2ac279714 from memory into f4
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
fnmsub.s f23, f20, f4, f2, dyn # perform operation
fnmsub.s f23, f20, f4, f2, rdn # perform operation
fnmsub.s f23, f20, f4, f2, rmm # perform operation
fnmsub.s f23, f20, f4, f2, rne # perform operation
fnmsub.s f23, f20, f4, f2, rtz # perform operation
fnmsub.s f23, f20, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f20, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f20, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f20, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f20, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f20, f4, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbfc00000)
li x30, 0xb694f0adbd887c23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0xeaf36da37ee73cc7 # load x3 with value 0xeaf36da37ee73cc7
sw x3, 0(x2) # store 0xeaf36da37ee73cc7 in memory
flw f10, 0(x2) # load 0xeaf36da37ee73cc7 from memory into f10
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
fnmsub.s f30, f24, f10, f7, dyn # perform operation
fnmsub.s f30, f24, f10, f7, rdn # perform operation
fnmsub.s f30, f24, f10, f7, rmm # perform operation
fnmsub.s f30, f24, f10, f7, rne # perform operation
fnmsub.s f30, f24, f10, f7, rtz # perform operation
fnmsub.s f30, f24, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f24, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f24, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f24, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f24, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f24, f10, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x40000000)
li x26, 0xa31181ee48e39a5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
li x3, 0x19e943d235137e30 # load x3 with value 0x19e943d235137e30
sw x3, 0(x2) # store 0x19e943d235137e30 in memory
flw f12, 0(x2) # load 0x19e943d235137e30 from memory into f12
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
fnmsub.s f26, f17, f12, f22, dyn # perform operation
fnmsub.s f26, f17, f12, f22, rdn # perform operation
fnmsub.s f26, f17, f12, f22, rmm # perform operation
fnmsub.s f26, f17, f12, f22, rne # perform operation
fnmsub.s f26, f17, f12, f22, rtz # perform operation
fnmsub.s f26, f17, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f17, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f17, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f17, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f17, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f17, f12, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xc0000000)
li x13, 0x34393ff8d651683a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0x1da01e4c310636a7 # load x3 with value 0x1da01e4c310636a7
sw x3, 0(x2) # store 0x1da01e4c310636a7 in memory
flw f29, 0(x2) # load 0x1da01e4c310636a7 from memory into f29
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
fnmsub.s f13, f16, f29, f24, dyn # perform operation
fnmsub.s f13, f16, f29, f24, rdn # perform operation
fnmsub.s f13, f16, f29, f24, rmm # perform operation
fnmsub.s f13, f16, f29, f24, rne # perform operation
fnmsub.s f13, f16, f29, f24, rtz # perform operation
fnmsub.s f13, f16, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f16, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f16, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f16, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f16, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f16, f29, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x800000)
li x20, 0x177d0c46e8d01dce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0x4b865cb71738123e # load x3 with value 0x4b865cb71738123e
sw x3, 0(x2) # store 0x4b865cb71738123e in memory
flw f8, 0(x2) # load 0x4b865cb71738123e from memory into f8
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
fnmsub.s f20, f2, f8, f4, dyn # perform operation
fnmsub.s f20, f2, f8, f4, rdn # perform operation
fnmsub.s f20, f2, f8, f4, rmm # perform operation
fnmsub.s f20, f2, f8, f4, rne # perform operation
fnmsub.s f20, f2, f8, f4, rtz # perform operation
fnmsub.s f20, f2, f8, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f2, f8, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f2, f8, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f2, f8, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f2, f8, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f2, f8, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80800000)
li x20, 0xb65a3b951fe87121 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
li x3, 0x9e34d8ab6245dfdd # load x3 with value 0x9e34d8ab6245dfdd
sw x3, 0(x2) # store 0x9e34d8ab6245dfdd in memory
flw f2, 0(x2) # load 0x9e34d8ab6245dfdd from memory into f2
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
fnmsub.s f20, f22, f2, f4, dyn # perform operation
fnmsub.s f20, f22, f2, f4, rdn # perform operation
fnmsub.s f20, f22, f2, f4, rmm # perform operation
fnmsub.s f20, f22, f2, f4, rne # perform operation
fnmsub.s f20, f22, f2, f4, rtz # perform operation
fnmsub.s f20, f22, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f22, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f22, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f22, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f22, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f22, f2, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f7fffff)
li x4, 0xf0962ff78fa14de4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0x7edf2078618e08bd # load x3 with value 0x7edf2078618e08bd
sw x3, 0(x2) # store 0x7edf2078618e08bd in memory
flw f15, 0(x2) # load 0x7edf2078618e08bd from memory into f15
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
fnmsub.s f4, f23, f15, f7, dyn # perform operation
fnmsub.s f4, f23, f15, f7, rdn # perform operation
fnmsub.s f4, f23, f15, f7, rmm # perform operation
fnmsub.s f4, f23, f15, f7, rne # perform operation
fnmsub.s f4, f23, f15, f7, rtz # perform operation
fnmsub.s f4, f23, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f23, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f23, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f23, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f23, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f23, f15, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff7fffff)
li x8, 0x15a5929ff88c40f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0xfa5035c83168ea76 # load x3 with value 0xfa5035c83168ea76
sw x3, 0(x2) # store 0xfa5035c83168ea76 in memory
flw f11, 0(x2) # load 0xfa5035c83168ea76 from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fnmsub.s f8, f26, f11, f5, dyn # perform operation
fnmsub.s f8, f26, f11, f5, rdn # perform operation
fnmsub.s f8, f26, f11, f5, rmm # perform operation
fnmsub.s f8, f26, f11, f5, rne # perform operation
fnmsub.s f8, f26, f11, f5, rtz # perform operation
fnmsub.s f8, f26, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f26, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f26, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f26, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f26, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f26, f11, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffff)
li x25, 0x9843af795084e68f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0x72f0753bd6d3d1db # load x3 with value 0x72f0753bd6d3d1db
sw x3, 0(x2) # store 0x72f0753bd6d3d1db in memory
flw f9, 0(x2) # load 0x72f0753bd6d3d1db from memory into f9
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
fnmsub.s f25, f4, f9, f16, dyn # perform operation
fnmsub.s f25, f4, f9, f16, rdn # perform operation
fnmsub.s f25, f4, f9, f16, rmm # perform operation
fnmsub.s f25, f4, f9, f16, rne # perform operation
fnmsub.s f25, f4, f9, f16, rtz # perform operation
fnmsub.s f25, f4, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f4, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f4, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f4, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f4, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f4, f9, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x807fffff)
li x21, 0x9efb7bb020e17682 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0xbbea96b3ca1e1180 # load x3 with value 0xbbea96b3ca1e1180
sw x3, 0(x2) # store 0xbbea96b3ca1e1180 in memory
flw f13, 0(x2) # load 0xbbea96b3ca1e1180 from memory into f13
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
fnmsub.s f21, f28, f13, f27, dyn # perform operation
fnmsub.s f21, f28, f13, f27, rdn # perform operation
fnmsub.s f21, f28, f13, f27, rmm # perform operation
fnmsub.s f21, f28, f13, f27, rne # perform operation
fnmsub.s f21, f28, f13, f27, rtz # perform operation
fnmsub.s f21, f28, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f28, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f28, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f28, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f28, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f28, f13, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x400000)
li x11, 0x0b9f2b2d7df321b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0x8f3125be9e4b6ebe # load x3 with value 0x8f3125be9e4b6ebe
sw x3, 0(x2) # store 0x8f3125be9e4b6ebe in memory
flw f13, 0(x2) # load 0x8f3125be9e4b6ebe from memory into f13
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fnmsub.s f11, f16, f13, f6, dyn # perform operation
fnmsub.s f11, f16, f13, f6, rdn # perform operation
fnmsub.s f11, f16, f13, f6, rmm # perform operation
fnmsub.s f11, f16, f13, f6, rne # perform operation
fnmsub.s f11, f16, f13, f6, rtz # perform operation
fnmsub.s f11, f16, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f16, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f16, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f16, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f16, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f16, f13, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80400000)
li x20, 0x7aeb6c9fb48be984 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
li x3, 0x42976a6612248072 # load x3 with value 0x42976a6612248072
sw x3, 0(x2) # store 0x42976a6612248072 in memory
flw f8, 0(x2) # load 0x42976a6612248072 from memory into f8
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
fnmsub.s f20, f3, f8, f7, dyn # perform operation
fnmsub.s f20, f3, f8, f7, rdn # perform operation
fnmsub.s f20, f3, f8, f7, rmm # perform operation
fnmsub.s f20, f3, f8, f7, rne # perform operation
fnmsub.s f20, f3, f8, f7, rtz # perform operation
fnmsub.s f20, f3, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f3, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f3, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f3, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f3, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f3, f8, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x1)
li x3, 0xf3a7c12de574bb0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0x1eb77e5b8fcfb76b # load x3 with value 0x1eb77e5b8fcfb76b
sw x3, 0(x2) # store 0x1eb77e5b8fcfb76b in memory
flw f4, 0(x2) # load 0x1eb77e5b8fcfb76b from memory into f4
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
fnmsub.s f3, f13, f4, f6, dyn # perform operation
fnmsub.s f3, f13, f4, f6, rdn # perform operation
fnmsub.s f3, f13, f4, f6, rmm # perform operation
fnmsub.s f3, f13, f4, f6, rne # perform operation
fnmsub.s f3, f13, f4, f6, rtz # perform operation
fnmsub.s f3, f13, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f13, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f13, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f13, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f13, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f13, f4, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000001)
li x8, 0xf1a486067771954d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0xa47e18fdf4aa4da3 # load x3 with value 0xa47e18fdf4aa4da3
sw x3, 0(x2) # store 0xa47e18fdf4aa4da3 in memory
flw f17, 0(x2) # load 0xa47e18fdf4aa4da3 from memory into f17
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
fnmsub.s f8, f7, f17, f9, dyn # perform operation
fnmsub.s f8, f7, f17, f9, rdn # perform operation
fnmsub.s f8, f7, f17, f9, rmm # perform operation
fnmsub.s f8, f7, f17, f9, rne # perform operation
fnmsub.s f8, f7, f17, f9, rtz # perform operation
fnmsub.s f8, f7, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f7, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f7, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f7, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f7, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f7, f17, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800000)
li x22, 0x9c0b2323ee8ad14d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0xa6fbf49033518e7d # load x3 with value 0xa6fbf49033518e7d
sw x3, 0(x2) # store 0xa6fbf49033518e7d in memory
flw f18, 0(x2) # load 0xa6fbf49033518e7d from memory into f18
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
fnmsub.s f22, f23, f18, f11, dyn # perform operation
fnmsub.s f22, f23, f18, f11, rdn # perform operation
fnmsub.s f22, f23, f18, f11, rmm # perform operation
fnmsub.s f22, f23, f18, f11, rne # perform operation
fnmsub.s f22, f23, f18, f11, rtz # perform operation
fnmsub.s f22, f23, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f23, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f23, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f23, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f23, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f23, f18, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff800000)
li x31, 0x883eb5894cc8864b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0x9d2f05ff1d8bc9cf # load x3 with value 0x9d2f05ff1d8bc9cf
sw x3, 0(x2) # store 0x9d2f05ff1d8bc9cf in memory
flw f29, 0(x2) # load 0x9d2f05ff1d8bc9cf from memory into f29
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
fnmsub.s f31, f23, f29, f17, dyn # perform operation
fnmsub.s f31, f23, f29, f17, rdn # perform operation
fnmsub.s f31, f23, f29, f17, rmm # perform operation
fnmsub.s f31, f23, f29, f17, rne # perform operation
fnmsub.s f31, f23, f29, f17, rtz # perform operation
fnmsub.s f31, f23, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f23, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f23, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f23, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f23, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f23, f29, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fc00000)
li x16, 0xe4b249372ff78b6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0x344003579c41a342 # load x3 with value 0x344003579c41a342
sw x3, 0(x2) # store 0x344003579c41a342 in memory
flw f19, 0(x2) # load 0x344003579c41a342 from memory into f19
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
fnmsub.s f16, f4, f19, f3, dyn # perform operation
fnmsub.s f16, f4, f19, f3, rdn # perform operation
fnmsub.s f16, f4, f19, f3, rmm # perform operation
fnmsub.s f16, f4, f19, f3, rne # perform operation
fnmsub.s f16, f4, f19, f3, rtz # perform operation
fnmsub.s f16, f4, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f4, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f4, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f4, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f4, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f4, f19, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffffff)
li x20, 0x6532722a929010f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0xeba8c31fd7fdad3 # load x3 with value 0xeba8c31fd7fdad3
sw x3, 0(x2) # store 0xeba8c31fd7fdad3 in memory
flw f25, 0(x2) # load 0xeba8c31fd7fdad3 from memory into f25
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
fnmsub.s f20, f2, f25, f12, dyn # perform operation
fnmsub.s f20, f2, f25, f12, rdn # perform operation
fnmsub.s f20, f2, f25, f12, rmm # perform operation
fnmsub.s f20, f2, f25, f12, rne # perform operation
fnmsub.s f20, f2, f25, f12, rtz # perform operation
fnmsub.s f20, f2, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f2, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f2, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f2, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f2, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f2, f25, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800001)
li x2, 0xe1f747b8e59eb583 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0xdfbdf151500de55 # load x3 with value 0xdfbdf151500de55
sw x3, 0(x2) # store 0xdfbdf151500de55 in memory
flw f3, 0(x2) # load 0xdfbdf151500de55 from memory into f3
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
fnmsub.s f2, f5, f3, f27, dyn # perform operation
fnmsub.s f2, f5, f3, f27, rdn # perform operation
fnmsub.s f2, f5, f3, f27, rmm # perform operation
fnmsub.s f2, f5, f3, f27, rne # perform operation
fnmsub.s f2, f5, f3, f27, rtz # perform operation
fnmsub.s f2, f5, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f5, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f5, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f5, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f5, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f5, f3, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fbfffff)
li x23, 0x535aa8042a176fe5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0xa59a9901751ecc90 # load x3 with value 0xa59a9901751ecc90
sw x3, 0(x2) # store 0xa59a9901751ecc90 in memory
flw f27, 0(x2) # load 0xa59a9901751ecc90 from memory into f27
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
fnmsub.s f23, f15, f27, f14, dyn # perform operation
fnmsub.s f23, f15, f27, f14, rdn # perform operation
fnmsub.s f23, f15, f27, f14, rmm # perform operation
fnmsub.s f23, f15, f27, f14, rne # perform operation
fnmsub.s f23, f15, f27, f14, rtz # perform operation
fnmsub.s f23, f15, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f15, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f15, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f15, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f15, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f15, f27, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7ef8654f)
li x18, 0x40de10d21f28968f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
li x3, 0x4a70bb9b52308288 # load x3 with value 0x4a70bb9b52308288
sw x3, 0(x2) # store 0x4a70bb9b52308288 in memory
flw f24, 0(x2) # load 0x4a70bb9b52308288 from memory into f24
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
fnmsub.s f18, f8, f24, f5, dyn # perform operation
fnmsub.s f18, f8, f24, f5, rdn # perform operation
fnmsub.s f18, f8, f24, f5, rmm # perform operation
fnmsub.s f18, f8, f24, f5, rne # perform operation
fnmsub.s f18, f8, f24, f5, rtz # perform operation
fnmsub.s f18, f8, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f8, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f8, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f8, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f8, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f8, f24, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x813d9ab0)
li x25, 0x881b4b688b5bbd35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0x895117d20c06d4d5 # load x3 with value 0x895117d20c06d4d5
sw x3, 0(x2) # store 0x895117d20c06d4d5 in memory
flw f2, 0(x2) # load 0x895117d20c06d4d5 from memory into f2
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
fnmsub.s f25, f13, f2, f9, dyn # perform operation
fnmsub.s f25, f13, f2, f9, rdn # perform operation
fnmsub.s f25, f13, f2, f9, rmm # perform operation
fnmsub.s f25, f13, f2, f9, rne # perform operation
fnmsub.s f25, f13, f2, f9, rtz # perform operation
fnmsub.s f25, f13, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f13, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f13, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f13, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f13, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f13, f2, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x0)
li x1, 0xd2b44cbfc135e003 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
li x3, 0x6c98be740198e3b5 # load x3 with value 0x6c98be740198e3b5
sw x3, 0(x2) # store 0x6c98be740198e3b5 in memory
flw f17, 0(x2) # load 0x6c98be740198e3b5 from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
fnmsub.s f1, f15, f17, f3, dyn # perform operation
fnmsub.s f1, f15, f17, f3, rdn # perform operation
fnmsub.s f1, f15, f17, f3, rmm # perform operation
fnmsub.s f1, f15, f17, f3, rne # perform operation
fnmsub.s f1, f15, f17, f3, rtz # perform operation
fnmsub.s f1, f15, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f15, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f15, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f15, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f15, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f15, f17, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000000)
li x27, 0xeec515fece7102e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0x8aa22f7b93b666e1 # load x3 with value 0x8aa22f7b93b666e1
sw x3, 0(x2) # store 0x8aa22f7b93b666e1 in memory
flw f5, 0(x2) # load 0x8aa22f7b93b666e1 from memory into f5
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
fnmsub.s f27, f12, f5, f30, dyn # perform operation
fnmsub.s f27, f12, f5, f30, rdn # perform operation
fnmsub.s f27, f12, f5, f30, rmm # perform operation
fnmsub.s f27, f12, f5, f30, rne # perform operation
fnmsub.s f27, f12, f5, f30, rtz # perform operation
fnmsub.s f27, f12, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f12, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f12, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f12, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f12, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f12, f5, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3f800000)
li x22, 0x2fcec89255ca546f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0xf8c16d1685b765d # load x3 with value 0xf8c16d1685b765d
sw x3, 0(x2) # store 0xf8c16d1685b765d in memory
flw f14, 0(x2) # load 0xf8c16d1685b765d from memory into f14
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
fnmsub.s f22, f23, f14, f15, dyn # perform operation
fnmsub.s f22, f23, f14, f15, rdn # perform operation
fnmsub.s f22, f23, f14, f15, rmm # perform operation
fnmsub.s f22, f23, f14, f15, rne # perform operation
fnmsub.s f22, f23, f14, f15, rtz # perform operation
fnmsub.s f22, f23, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f23, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f23, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f23, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f23, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f23, f14, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbf800000)
li x8, 0x01cbd2ba55843520 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0x7b43d24a5fd75a28 # load x3 with value 0x7b43d24a5fd75a28
sw x3, 0(x2) # store 0x7b43d24a5fd75a28 in memory
flw f11, 0(x2) # load 0x7b43d24a5fd75a28 from memory into f11
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
fnmsub.s f8, f19, f11, f6, dyn # perform operation
fnmsub.s f8, f19, f11, f6, rdn # perform operation
fnmsub.s f8, f19, f11, f6, rmm # perform operation
fnmsub.s f8, f19, f11, f6, rne # perform operation
fnmsub.s f8, f19, f11, f6, rtz # perform operation
fnmsub.s f8, f19, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f19, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f19, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f19, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f19, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f19, f11, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3fc00000)
li x27, 0xbfdcf2e6dc002434 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
li x3, 0x854533ca5235e5e7 # load x3 with value 0x854533ca5235e5e7
sw x3, 0(x2) # store 0x854533ca5235e5e7 in memory
flw f7, 0(x2) # load 0x854533ca5235e5e7 from memory into f7
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
fnmsub.s f27, f31, f7, f17, dyn # perform operation
fnmsub.s f27, f31, f7, f17, rdn # perform operation
fnmsub.s f27, f31, f7, f17, rmm # perform operation
fnmsub.s f27, f31, f7, f17, rne # perform operation
fnmsub.s f27, f31, f7, f17, rtz # perform operation
fnmsub.s f27, f31, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f31, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f31, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f31, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f31, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f31, f7, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbfc00000)
li x13, 0x7503a620d2694051 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0xce7328bf4e7f0c76 # load x3 with value 0xce7328bf4e7f0c76
sw x3, 0(x2) # store 0xce7328bf4e7f0c76 in memory
flw f19, 0(x2) # load 0xce7328bf4e7f0c76 from memory into f19
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
fnmsub.s f13, f24, f19, f2, dyn # perform operation
fnmsub.s f13, f24, f19, f2, rdn # perform operation
fnmsub.s f13, f24, f19, f2, rmm # perform operation
fnmsub.s f13, f24, f19, f2, rne # perform operation
fnmsub.s f13, f24, f19, f2, rtz # perform operation
fnmsub.s f13, f24, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f24, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f24, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f24, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f24, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f24, f19, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x40000000)
li x5, 0xe237fab4260ff6cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0x818fc9bbd6c7b76d # load x3 with value 0x818fc9bbd6c7b76d
sw x3, 0(x2) # store 0x818fc9bbd6c7b76d in memory
flw f29, 0(x2) # load 0x818fc9bbd6c7b76d from memory into f29
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
fnmsub.s f5, f14, f29, f12, dyn # perform operation
fnmsub.s f5, f14, f29, f12, rdn # perform operation
fnmsub.s f5, f14, f29, f12, rmm # perform operation
fnmsub.s f5, f14, f29, f12, rne # perform operation
fnmsub.s f5, f14, f29, f12, rtz # perform operation
fnmsub.s f5, f14, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f14, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f14, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f14, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f14, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f14, f29, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xc0000000)
li x8, 0x71203d575d3226b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
li x3, 0x710f8734e4215b8d # load x3 with value 0x710f8734e4215b8d
sw x3, 0(x2) # store 0x710f8734e4215b8d in memory
flw f15, 0(x2) # load 0x710f8734e4215b8d from memory into f15
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
fnmsub.s f8, f1, f15, f29, dyn # perform operation
fnmsub.s f8, f1, f15, f29, rdn # perform operation
fnmsub.s f8, f1, f15, f29, rmm # perform operation
fnmsub.s f8, f1, f15, f29, rne # perform operation
fnmsub.s f8, f1, f15, f29, rtz # perform operation
fnmsub.s f8, f1, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f1, f15, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x800000)
li x6, 0x85993764bc615c75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
li x3, 0x2f5687908aef4ddd # load x3 with value 0x2f5687908aef4ddd
sw x3, 0(x2) # store 0x2f5687908aef4ddd in memory
flw f30, 0(x2) # load 0x2f5687908aef4ddd from memory into f30
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
fnmsub.s f6, f7, f30, f15, dyn # perform operation
fnmsub.s f6, f7, f30, f15, rdn # perform operation
fnmsub.s f6, f7, f30, f15, rmm # perform operation
fnmsub.s f6, f7, f30, f15, rne # perform operation
fnmsub.s f6, f7, f30, f15, rtz # perform operation
fnmsub.s f6, f7, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f7, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f7, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f7, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f7, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f7, f30, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80800000)
li x22, 0x53c474cee6aa6813 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
li x3, 0xeffb2d5db60982ad # load x3 with value 0xeffb2d5db60982ad
sw x3, 0(x2) # store 0xeffb2d5db60982ad in memory
flw f16, 0(x2) # load 0xeffb2d5db60982ad from memory into f16
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
fnmsub.s f22, f4, f16, f17, dyn # perform operation
fnmsub.s f22, f4, f16, f17, rdn # perform operation
fnmsub.s f22, f4, f16, f17, rmm # perform operation
fnmsub.s f22, f4, f16, f17, rne # perform operation
fnmsub.s f22, f4, f16, f17, rtz # perform operation
fnmsub.s f22, f4, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f4, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f4, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f4, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f4, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f4, f16, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f7fffff)
li x16, 0x2525d0ef39920ed3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0xa638b35ad0d1c9b9 # load x3 with value 0xa638b35ad0d1c9b9
sw x3, 0(x2) # store 0xa638b35ad0d1c9b9 in memory
flw f23, 0(x2) # load 0xa638b35ad0d1c9b9 from memory into f23
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
fnmsub.s f16, f20, f23, f11, dyn # perform operation
fnmsub.s f16, f20, f23, f11, rdn # perform operation
fnmsub.s f16, f20, f23, f11, rmm # perform operation
fnmsub.s f16, f20, f23, f11, rne # perform operation
fnmsub.s f16, f20, f23, f11, rtz # perform operation
fnmsub.s f16, f20, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f20, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f20, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f20, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f20, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f20, f23, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff7fffff)
li x27, 0xa9b037a87819f9a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0x20f60312bf8b27f2 # load x3 with value 0x20f60312bf8b27f2
sw x3, 0(x2) # store 0x20f60312bf8b27f2 in memory
flw f14, 0(x2) # load 0x20f60312bf8b27f2 from memory into f14
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fnmsub.s f27, f11, f14, f24, dyn # perform operation
fnmsub.s f27, f11, f14, f24, rdn # perform operation
fnmsub.s f27, f11, f14, f24, rmm # perform operation
fnmsub.s f27, f11, f14, f24, rne # perform operation
fnmsub.s f27, f11, f14, f24, rtz # perform operation
fnmsub.s f27, f11, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f11, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f11, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f11, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f11, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f11, f14, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffff)
li x18, 0xfac23a6f81487a1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
li x3, 0x91b484d95436a1cb # load x3 with value 0x91b484d95436a1cb
sw x3, 0(x2) # store 0x91b484d95436a1cb in memory
flw f27, 0(x2) # load 0x91b484d95436a1cb from memory into f27
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
fnmsub.s f18, f25, f27, f17, dyn # perform operation
fnmsub.s f18, f25, f27, f17, rdn # perform operation
fnmsub.s f18, f25, f27, f17, rmm # perform operation
fnmsub.s f18, f25, f27, f17, rne # perform operation
fnmsub.s f18, f25, f27, f17, rtz # perform operation
fnmsub.s f18, f25, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f25, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f25, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f25, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f25, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f25, f27, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x807fffff)
li x24, 0x95c6e905e34f3d99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0x40bebabd59e5782c # load x3 with value 0x40bebabd59e5782c
sw x3, 0(x2) # store 0x40bebabd59e5782c in memory
flw f7, 0(x2) # load 0x40bebabd59e5782c from memory into f7
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
fnmsub.s f24, f10, f7, f12, dyn # perform operation
fnmsub.s f24, f10, f7, f12, rdn # perform operation
fnmsub.s f24, f10, f7, f12, rmm # perform operation
fnmsub.s f24, f10, f7, f12, rne # perform operation
fnmsub.s f24, f10, f7, f12, rtz # perform operation
fnmsub.s f24, f10, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f10, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f10, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f10, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f10, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f10, f7, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x400000)
li x27, 0x7d5a28eb6b130021 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0x9ec4fa2f8a1ffe9b # load x3 with value 0x9ec4fa2f8a1ffe9b
sw x3, 0(x2) # store 0x9ec4fa2f8a1ffe9b in memory
flw f19, 0(x2) # load 0x9ec4fa2f8a1ffe9b from memory into f19
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
fnmsub.s f27, f20, f19, f24, dyn # perform operation
fnmsub.s f27, f20, f19, f24, rdn # perform operation
fnmsub.s f27, f20, f19, f24, rmm # perform operation
fnmsub.s f27, f20, f19, f24, rne # perform operation
fnmsub.s f27, f20, f19, f24, rtz # perform operation
fnmsub.s f27, f20, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f20, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f20, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f20, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f20, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f20, f19, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80400000)
li x7, 0x3eb665118412d572 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
li x3, 0xae702ec967d7cd8c # load x3 with value 0xae702ec967d7cd8c
sw x3, 0(x2) # store 0xae702ec967d7cd8c in memory
flw f2, 0(x2) # load 0xae702ec967d7cd8c from memory into f2
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
fnmsub.s f7, f25, f2, f13, dyn # perform operation
fnmsub.s f7, f25, f2, f13, rdn # perform operation
fnmsub.s f7, f25, f2, f13, rmm # perform operation
fnmsub.s f7, f25, f2, f13, rne # perform operation
fnmsub.s f7, f25, f2, f13, rtz # perform operation
fnmsub.s f7, f25, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f25, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f25, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f25, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f25, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f25, f2, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x1)
li x3, 0x8420174ba2b53164 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
li x3, 0xbf95c33a08095dcc # load x3 with value 0xbf95c33a08095dcc
sw x3, 0(x2) # store 0xbf95c33a08095dcc in memory
flw f10, 0(x2) # load 0xbf95c33a08095dcc from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
fnmsub.s f3, f1, f10, f2, dyn # perform operation
fnmsub.s f3, f1, f10, f2, rdn # perform operation
fnmsub.s f3, f1, f10, f2, rmm # perform operation
fnmsub.s f3, f1, f10, f2, rne # perform operation
fnmsub.s f3, f1, f10, f2, rtz # perform operation
fnmsub.s f3, f1, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f1, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f1, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f1, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f1, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f1, f10, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000001)
li x20, 0xe4dd386623bcdeeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0xdea25a969a62cb6d # load x3 with value 0xdea25a969a62cb6d
sw x3, 0(x2) # store 0xdea25a969a62cb6d in memory
flw f24, 0(x2) # load 0xdea25a969a62cb6d from memory into f24
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
fnmsub.s f20, f3, f24, f15, dyn # perform operation
fnmsub.s f20, f3, f24, f15, rdn # perform operation
fnmsub.s f20, f3, f24, f15, rmm # perform operation
fnmsub.s f20, f3, f24, f15, rne # perform operation
fnmsub.s f20, f3, f24, f15, rtz # perform operation
fnmsub.s f20, f3, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f3, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f3, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f3, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f3, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f3, f24, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800000)
li x22, 0xc6840e9535131a57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0xacb561f641e22f7f # load x3 with value 0xacb561f641e22f7f
sw x3, 0(x2) # store 0xacb561f641e22f7f in memory
flw f29, 0(x2) # load 0xacb561f641e22f7f from memory into f29
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
fnmsub.s f22, f23, f29, f17, dyn # perform operation
fnmsub.s f22, f23, f29, f17, rdn # perform operation
fnmsub.s f22, f23, f29, f17, rmm # perform operation
fnmsub.s f22, f23, f29, f17, rne # perform operation
fnmsub.s f22, f23, f29, f17, rtz # perform operation
fnmsub.s f22, f23, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f23, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f23, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f23, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f23, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f23, f29, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff800000)
li x10, 0x032cd58ac52dba23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
li x3, 0xf54678b7a0a2eed0 # load x3 with value 0xf54678b7a0a2eed0
sw x3, 0(x2) # store 0xf54678b7a0a2eed0 in memory
flw f5, 0(x2) # load 0xf54678b7a0a2eed0 from memory into f5
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
fnmsub.s f10, f31, f5, f12, dyn # perform operation
fnmsub.s f10, f31, f5, f12, rdn # perform operation
fnmsub.s f10, f31, f5, f12, rmm # perform operation
fnmsub.s f10, f31, f5, f12, rne # perform operation
fnmsub.s f10, f31, f5, f12, rtz # perform operation
fnmsub.s f10, f31, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f31, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f31, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f31, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f31, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f31, f5, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fc00000)
li x27, 0x1edaacfb03080323 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0xa7eabb9fb3fe1eb0 # load x3 with value 0xa7eabb9fb3fe1eb0
sw x3, 0(x2) # store 0xa7eabb9fb3fe1eb0 in memory
flw f11, 0(x2) # load 0xa7eabb9fb3fe1eb0 from memory into f11
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
fnmsub.s f27, f23, f11, f26, dyn # perform operation
fnmsub.s f27, f23, f11, f26, rdn # perform operation
fnmsub.s f27, f23, f11, f26, rmm # perform operation
fnmsub.s f27, f23, f11, f26, rne # perform operation
fnmsub.s f27, f23, f11, f26, rtz # perform operation
fnmsub.s f27, f23, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f23, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f23, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f23, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f23, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f23, f11, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffffff)
li x25, 0x21f8bc601d11d52f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
li x3, 0x750ca52ac8414a5c # load x3 with value 0x750ca52ac8414a5c
sw x3, 0(x2) # store 0x750ca52ac8414a5c in memory
flw f12, 0(x2) # load 0x750ca52ac8414a5c from memory into f12
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
fnmsub.s f25, f18, f12, f22, dyn # perform operation
fnmsub.s f25, f18, f12, f22, rdn # perform operation
fnmsub.s f25, f18, f12, f22, rmm # perform operation
fnmsub.s f25, f18, f12, f22, rne # perform operation
fnmsub.s f25, f18, f12, f22, rtz # perform operation
fnmsub.s f25, f18, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f18, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f18, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f18, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f18, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f18, f12, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800001)
li x19, 0xbddbbc1633cdb670 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
li x3, 0xd93200f3962339b0 # load x3 with value 0xd93200f3962339b0
sw x3, 0(x2) # store 0xd93200f3962339b0 in memory
flw f14, 0(x2) # load 0xd93200f3962339b0 from memory into f14
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
fnmsub.s f19, f1, f14, f21, dyn # perform operation
fnmsub.s f19, f1, f14, f21, rdn # perform operation
fnmsub.s f19, f1, f14, f21, rmm # perform operation
fnmsub.s f19, f1, f14, f21, rne # perform operation
fnmsub.s f19, f1, f14, f21, rtz # perform operation
fnmsub.s f19, f1, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f1, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f1, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f1, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f1, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f1, f14, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fbfffff)
li x12, 0x64573c23afe09d0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0x96838bf583d69327 # load x3 with value 0x96838bf583d69327
sw x3, 0(x2) # store 0x96838bf583d69327 in memory
flw f19, 0(x2) # load 0x96838bf583d69327 from memory into f19
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
fnmsub.s f12, f3, f19, f13, dyn # perform operation
fnmsub.s f12, f3, f19, f13, rdn # perform operation
fnmsub.s f12, f3, f19, f13, rmm # perform operation
fnmsub.s f12, f3, f19, f13, rne # perform operation
fnmsub.s f12, f3, f19, f13, rtz # perform operation
fnmsub.s f12, f3, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f3, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f3, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f3, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f3, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f3, f19, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7ef8654f)
li x17, 0xcf3369d2cd72b90f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0x9c4c066178585823 # load x3 with value 0x9c4c066178585823
sw x3, 0(x2) # store 0x9c4c066178585823 in memory
flw f4, 0(x2) # load 0x9c4c066178585823 from memory into f4
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
fnmsub.s f17, f24, f4, f20, dyn # perform operation
fnmsub.s f17, f24, f4, f20, rdn # perform operation
fnmsub.s f17, f24, f4, f20, rmm # perform operation
fnmsub.s f17, f24, f4, f20, rne # perform operation
fnmsub.s f17, f24, f4, f20, rtz # perform operation
fnmsub.s f17, f24, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f24, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f24, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f24, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f24, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f24, f4, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x813d9ab0)
li x6, 0x2651ae76dac5568c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0x251759108e340d18 # load x3 with value 0x251759108e340d18
sw x3, 0(x2) # store 0x251759108e340d18 in memory
flw f13, 0(x2) # load 0x251759108e340d18 from memory into f13
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
fnmsub.s f6, f11, f13, f19, dyn # perform operation
fnmsub.s f6, f11, f13, f19, rdn # perform operation
fnmsub.s f6, f11, f13, f19, rmm # perform operation
fnmsub.s f6, f11, f13, f19, rne # perform operation
fnmsub.s f6, f11, f13, f19, rtz # perform operation
fnmsub.s f6, f11, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f11, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f11, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f11, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f11, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f11, f13, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x0)
li x2, 0xe368cfd26f624e01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
li x3, 0x7fab7845a5f780cc # load x3 with value 0x7fab7845a5f780cc
sw x3, 0(x2) # store 0x7fab7845a5f780cc in memory
flw f8, 0(x2) # load 0x7fab7845a5f780cc from memory into f8
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
fnmsub.s f2, f10, f8, f12, dyn # perform operation
fnmsub.s f2, f10, f8, f12, rdn # perform operation
fnmsub.s f2, f10, f8, f12, rmm # perform operation
fnmsub.s f2, f10, f8, f12, rne # perform operation
fnmsub.s f2, f10, f8, f12, rtz # perform operation
fnmsub.s f2, f10, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f10, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f10, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f10, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f10, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f10, f8, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000000)
li x22, 0x21f1ae66c6929ce4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
li x3, 0x20f8587fa3520f5f # load x3 with value 0x20f8587fa3520f5f
sw x3, 0(x2) # store 0x20f8587fa3520f5f in memory
flw f15, 0(x2) # load 0x20f8587fa3520f5f from memory into f15
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
fnmsub.s f22, f2, f15, f28, dyn # perform operation
fnmsub.s f22, f2, f15, f28, rdn # perform operation
fnmsub.s f22, f2, f15, f28, rmm # perform operation
fnmsub.s f22, f2, f15, f28, rne # perform operation
fnmsub.s f22, f2, f15, f28, rtz # perform operation
fnmsub.s f22, f2, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f2, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f2, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f2, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f2, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f2, f15, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3f800000)
li x22, 0xd367d46b7f1c627a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0x38b13794381e4539 # load x3 with value 0x38b13794381e4539
sw x3, 0(x2) # store 0x38b13794381e4539 in memory
flw f1, 0(x2) # load 0x38b13794381e4539 from memory into f1
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
fnmsub.s f22, f31, f1, f8, dyn # perform operation
fnmsub.s f22, f31, f1, f8, rdn # perform operation
fnmsub.s f22, f31, f1, f8, rmm # perform operation
fnmsub.s f22, f31, f1, f8, rne # perform operation
fnmsub.s f22, f31, f1, f8, rtz # perform operation
fnmsub.s f22, f31, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f31, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f31, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f31, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f31, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f31, f1, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbf800000)
li x16, 0xf4ff4759b8f74691 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
li x3, 0x6511087d22c26816 # load x3 with value 0x6511087d22c26816
sw x3, 0(x2) # store 0x6511087d22c26816 in memory
flw f30, 0(x2) # load 0x6511087d22c26816 from memory into f30
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
fnmsub.s f16, f10, f30, f28, dyn # perform operation
fnmsub.s f16, f10, f30, f28, rdn # perform operation
fnmsub.s f16, f10, f30, f28, rmm # perform operation
fnmsub.s f16, f10, f30, f28, rne # perform operation
fnmsub.s f16, f10, f30, f28, rtz # perform operation
fnmsub.s f16, f10, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f10, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f10, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f10, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f10, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f10, f30, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3fc00000)
li x15, 0xb8a3d7e0330d0d74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
li x3, 0xd5c072771c3e0cda # load x3 with value 0xd5c072771c3e0cda
sw x3, 0(x2) # store 0xd5c072771c3e0cda in memory
flw f17, 0(x2) # load 0xd5c072771c3e0cda from memory into f17
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
fnmsub.s f15, f12, f17, f7, dyn # perform operation
fnmsub.s f15, f12, f17, f7, rdn # perform operation
fnmsub.s f15, f12, f17, f7, rmm # perform operation
fnmsub.s f15, f12, f17, f7, rne # perform operation
fnmsub.s f15, f12, f17, f7, rtz # perform operation
fnmsub.s f15, f12, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f12, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f12, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f12, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f12, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f12, f17, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbfc00000)
li x17, 0x07b0f5dfda801746 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x8c4c4b9621127960 # load x3 with value 0x8c4c4b9621127960
sw x3, 0(x2) # store 0x8c4c4b9621127960 in memory
flw f10, 0(x2) # load 0x8c4c4b9621127960 from memory into f10
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
fnmsub.s f17, f21, f10, f3, dyn # perform operation
fnmsub.s f17, f21, f10, f3, rdn # perform operation
fnmsub.s f17, f21, f10, f3, rmm # perform operation
fnmsub.s f17, f21, f10, f3, rne # perform operation
fnmsub.s f17, f21, f10, f3, rtz # perform operation
fnmsub.s f17, f21, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f21, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f21, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f21, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f21, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f21, f10, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x40000000)
li x17, 0xb636ecb6a005f4d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0x4d25e0629b712583 # load x3 with value 0x4d25e0629b712583
sw x3, 0(x2) # store 0x4d25e0629b712583 in memory
flw f7, 0(x2) # load 0x4d25e0629b712583 from memory into f7
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
fnmsub.s f17, f19, f7, f4, dyn # perform operation
fnmsub.s f17, f19, f7, f4, rdn # perform operation
fnmsub.s f17, f19, f7, f4, rmm # perform operation
fnmsub.s f17, f19, f7, f4, rne # perform operation
fnmsub.s f17, f19, f7, f4, rtz # perform operation
fnmsub.s f17, f19, f7, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f19, f7, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f19, f7, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f19, f7, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f19, f7, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f19, f7, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xc0000000)
li x21, 0xf307a2bc496cc8a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0xba927cc0931748ab # load x3 with value 0xba927cc0931748ab
sw x3, 0(x2) # store 0xba927cc0931748ab in memory
flw f4, 0(x2) # load 0xba927cc0931748ab from memory into f4
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
fnmsub.s f21, f3, f4, f23, dyn # perform operation
fnmsub.s f21, f3, f4, f23, rdn # perform operation
fnmsub.s f21, f3, f4, f23, rmm # perform operation
fnmsub.s f21, f3, f4, f23, rne # perform operation
fnmsub.s f21, f3, f4, f23, rtz # perform operation
fnmsub.s f21, f3, f4, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f3, f4, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f3, f4, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f3, f4, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f3, f4, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f3, f4, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x800000)
li x21, 0x7d64f76e50d76ec5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
li x3, 0x648e95be965b1be # load x3 with value 0x648e95be965b1be
sw x3, 0(x2) # store 0x648e95be965b1be in memory
flw f26, 0(x2) # load 0x648e95be965b1be from memory into f26
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fnmsub.s f21, f17, f26, f6, dyn # perform operation
fnmsub.s f21, f17, f26, f6, rdn # perform operation
fnmsub.s f21, f17, f26, f6, rmm # perform operation
fnmsub.s f21, f17, f26, f6, rne # perform operation
fnmsub.s f21, f17, f26, f6, rtz # perform operation
fnmsub.s f21, f17, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f17, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f17, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f17, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f17, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f17, f26, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80800000)
li x17, 0x230916b2520c5bbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
li x3, 0x5390c1124eecbabc # load x3 with value 0x5390c1124eecbabc
sw x3, 0(x2) # store 0x5390c1124eecbabc in memory
flw f12, 0(x2) # load 0x5390c1124eecbabc from memory into f12
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
fnmsub.s f17, f1, f12, f5, dyn # perform operation
fnmsub.s f17, f1, f12, f5, rdn # perform operation
fnmsub.s f17, f1, f12, f5, rmm # perform operation
fnmsub.s f17, f1, f12, f5, rne # perform operation
fnmsub.s f17, f1, f12, f5, rtz # perform operation
fnmsub.s f17, f1, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f1, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f1, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f1, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f1, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f1, f12, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f7fffff)
li x27, 0xacdf8b9f06ba60b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x185c9b2bdb8fcf98 # load x3 with value 0x185c9b2bdb8fcf98
sw x3, 0(x2) # store 0x185c9b2bdb8fcf98 in memory
flw f3, 0(x2) # load 0x185c9b2bdb8fcf98 from memory into f3
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
fnmsub.s f27, f21, f3, f7, dyn # perform operation
fnmsub.s f27, f21, f3, f7, rdn # perform operation
fnmsub.s f27, f21, f3, f7, rmm # perform operation
fnmsub.s f27, f21, f3, f7, rne # perform operation
fnmsub.s f27, f21, f3, f7, rtz # perform operation
fnmsub.s f27, f21, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f21, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f21, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f21, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f21, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f21, f3, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff7fffff)
li x8, 0xfeaa1da8358090aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x287fead173262831 # load x3 with value 0x287fead173262831
sw x3, 0(x2) # store 0x287fead173262831 in memory
flw f22, 0(x2) # load 0x287fead173262831 from memory into f22
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
fnmsub.s f8, f21, f22, f16, dyn # perform operation
fnmsub.s f8, f21, f22, f16, rdn # perform operation
fnmsub.s f8, f21, f22, f16, rmm # perform operation
fnmsub.s f8, f21, f22, f16, rne # perform operation
fnmsub.s f8, f21, f22, f16, rtz # perform operation
fnmsub.s f8, f21, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f21, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f21, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f21, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f21, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f21, f22, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffff)
li x4, 0x21e647e76bb38b6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
li x3, 0x666785dbcdd2f015 # load x3 with value 0x666785dbcdd2f015
sw x3, 0(x2) # store 0x666785dbcdd2f015 in memory
flw f23, 0(x2) # load 0x666785dbcdd2f015 from memory into f23
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
fnmsub.s f4, f15, f23, f20, dyn # perform operation
fnmsub.s f4, f15, f23, f20, rdn # perform operation
fnmsub.s f4, f15, f23, f20, rmm # perform operation
fnmsub.s f4, f15, f23, f20, rne # perform operation
fnmsub.s f4, f15, f23, f20, rtz # perform operation
fnmsub.s f4, f15, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f15, f23, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x807fffff)
li x28, 0x161803f8a2d46f73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
li x3, 0x6e5a9e16af6c3bd0 # load x3 with value 0x6e5a9e16af6c3bd0
sw x3, 0(x2) # store 0x6e5a9e16af6c3bd0 in memory
flw f7, 0(x2) # load 0x6e5a9e16af6c3bd0 from memory into f7
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
fnmsub.s f28, f15, f7, f16, dyn # perform operation
fnmsub.s f28, f15, f7, f16, rdn # perform operation
fnmsub.s f28, f15, f7, f16, rmm # perform operation
fnmsub.s f28, f15, f7, f16, rne # perform operation
fnmsub.s f28, f15, f7, f16, rtz # perform operation
fnmsub.s f28, f15, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f15, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f15, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f15, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f15, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f15, f7, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x400000)
li x15, 0x34aad175133a5ac2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x7954a26b733b7ee3 # load x3 with value 0x7954a26b733b7ee3
sw x3, 0(x2) # store 0x7954a26b733b7ee3 in memory
flw f5, 0(x2) # load 0x7954a26b733b7ee3 from memory into f5
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
fnmsub.s f15, f7, f5, f30, dyn # perform operation
fnmsub.s f15, f7, f5, f30, rdn # perform operation
fnmsub.s f15, f7, f5, f30, rmm # perform operation
fnmsub.s f15, f7, f5, f30, rne # perform operation
fnmsub.s f15, f7, f5, f30, rtz # perform operation
fnmsub.s f15, f7, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f7, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f7, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f7, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f7, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f7, f5, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80400000)
li x5, 0xcf2e4efc194d73c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0x8686d262c6f1a8f4 # load x3 with value 0x8686d262c6f1a8f4
sw x3, 0(x2) # store 0x8686d262c6f1a8f4 in memory
flw f22, 0(x2) # load 0x8686d262c6f1a8f4 from memory into f22
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fnmsub.s f5, f30, f22, f21, dyn # perform operation
fnmsub.s f5, f30, f22, f21, rdn # perform operation
fnmsub.s f5, f30, f22, f21, rmm # perform operation
fnmsub.s f5, f30, f22, f21, rne # perform operation
fnmsub.s f5, f30, f22, f21, rtz # perform operation
fnmsub.s f5, f30, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f30, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f30, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f30, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f30, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f30, f22, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x1)
li x2, 0x1192104e6f1a989e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0x279e80b6848334a # load x3 with value 0x279e80b6848334a
sw x3, 0(x2) # store 0x279e80b6848334a in memory
flw f10, 0(x2) # load 0x279e80b6848334a from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
fnmsub.s f2, f19, f10, f24, dyn # perform operation
fnmsub.s f2, f19, f10, f24, rdn # perform operation
fnmsub.s f2, f19, f10, f24, rmm # perform operation
fnmsub.s f2, f19, f10, f24, rne # perform operation
fnmsub.s f2, f19, f10, f24, rtz # perform operation
fnmsub.s f2, f19, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f19, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f19, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f19, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f19, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f19, f10, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000001)
li x6, 0x66f4d441646b0b90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
li x3, 0xdae2706341dbd825 # load x3 with value 0xdae2706341dbd825
sw x3, 0(x2) # store 0xdae2706341dbd825 in memory
flw f20, 0(x2) # load 0xdae2706341dbd825 from memory into f20
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fnmsub.s f6, f1, f20, f24, dyn # perform operation
fnmsub.s f6, f1, f20, f24, rdn # perform operation
fnmsub.s f6, f1, f20, f24, rmm # perform operation
fnmsub.s f6, f1, f20, f24, rne # perform operation
fnmsub.s f6, f1, f20, f24, rtz # perform operation
fnmsub.s f6, f1, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f1, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f1, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f1, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f1, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f1, f20, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800000)
li x4, 0xa7bfd8b3e9d8c793 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
li x3, 0x4029f5cb81e635d1 # load x3 with value 0x4029f5cb81e635d1
sw x3, 0(x2) # store 0x4029f5cb81e635d1 in memory
flw f7, 0(x2) # load 0x4029f5cb81e635d1 from memory into f7
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
fnmsub.s f4, f12, f7, f29, dyn # perform operation
fnmsub.s f4, f12, f7, f29, rdn # perform operation
fnmsub.s f4, f12, f7, f29, rmm # perform operation
fnmsub.s f4, f12, f7, f29, rne # perform operation
fnmsub.s f4, f12, f7, f29, rtz # perform operation
fnmsub.s f4, f12, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f12, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f12, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f12, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f12, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f12, f7, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff800000)
li x31, 0xafa05b3b8ef87e16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
li x3, 0xbc42b573f4997b68 # load x3 with value 0xbc42b573f4997b68
sw x3, 0(x2) # store 0xbc42b573f4997b68 in memory
flw f18, 0(x2) # load 0xbc42b573f4997b68 from memory into f18
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
fnmsub.s f31, f15, f18, f1, dyn # perform operation
fnmsub.s f31, f15, f18, f1, rdn # perform operation
fnmsub.s f31, f15, f18, f1, rmm # perform operation
fnmsub.s f31, f15, f18, f1, rne # perform operation
fnmsub.s f31, f15, f18, f1, rtz # perform operation
fnmsub.s f31, f15, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f15, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f15, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f15, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f15, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f15, f18, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fc00000)
li x1, 0xdce9a815a41d1f32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0xcd344d50e026750 # load x3 with value 0xcd344d50e026750
sw x3, 0(x2) # store 0xcd344d50e026750 in memory
flw f26, 0(x2) # load 0xcd344d50e026750 from memory into f26
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fnmsub.s f1, f28, f26, f9, dyn # perform operation
fnmsub.s f1, f28, f26, f9, rdn # perform operation
fnmsub.s f1, f28, f26, f9, rmm # perform operation
fnmsub.s f1, f28, f26, f9, rne # perform operation
fnmsub.s f1, f28, f26, f9, rtz # perform operation
fnmsub.s f1, f28, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f28, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f28, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f28, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f28, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f28, f26, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffffff)
li x19, 0x8e08475a8a14117a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
li x3, 0x7b4c1f3874676b67 # load x3 with value 0x7b4c1f3874676b67
sw x3, 0(x2) # store 0x7b4c1f3874676b67 in memory
flw f12, 0(x2) # load 0x7b4c1f3874676b67 from memory into f12
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
fnmsub.s f19, f2, f12, f15, dyn # perform operation
fnmsub.s f19, f2, f12, f15, rdn # perform operation
fnmsub.s f19, f2, f12, f15, rmm # perform operation
fnmsub.s f19, f2, f12, f15, rne # perform operation
fnmsub.s f19, f2, f12, f15, rtz # perform operation
fnmsub.s f19, f2, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f2, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f2, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f2, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f2, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f2, f12, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800001)
li x3, 0x373b7cd226da0558 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0xb629ef69ef6277d3 # load x3 with value 0xb629ef69ef6277d3
sw x3, 0(x2) # store 0xb629ef69ef6277d3 in memory
flw f8, 0(x2) # load 0xb629ef69ef6277d3 from memory into f8
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fnmsub.s f3, f7, f8, f29, dyn # perform operation
fnmsub.s f3, f7, f8, f29, rdn # perform operation
fnmsub.s f3, f7, f8, f29, rmm # perform operation
fnmsub.s f3, f7, f8, f29, rne # perform operation
fnmsub.s f3, f7, f8, f29, rtz # perform operation
fnmsub.s f3, f7, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f7, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f7, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f7, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f7, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f7, f8, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fbfffff)
li x2, 0xf24b32f567bc4892 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
li x3, 0x4e1f162ded1008ba # load x3 with value 0x4e1f162ded1008ba
sw x3, 0(x2) # store 0x4e1f162ded1008ba in memory
flw f19, 0(x2) # load 0x4e1f162ded1008ba from memory into f19
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fnmsub.s f2, f15, f19, f9, dyn # perform operation
fnmsub.s f2, f15, f19, f9, rdn # perform operation
fnmsub.s f2, f15, f19, f9, rmm # perform operation
fnmsub.s f2, f15, f19, f9, rne # perform operation
fnmsub.s f2, f15, f19, f9, rtz # perform operation
fnmsub.s f2, f15, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f15, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f15, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f15, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f15, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f15, f19, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7ef8654f)
li x18, 0x0f243e28405a006c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0x909c550bba4f8e12 # load x3 with value 0x909c550bba4f8e12
sw x3, 0(x2) # store 0x909c550bba4f8e12 in memory
flw f22, 0(x2) # load 0x909c550bba4f8e12 from memory into f22
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fnmsub.s f18, f16, f22, f1, dyn # perform operation
fnmsub.s f18, f16, f22, f1, rdn # perform operation
fnmsub.s f18, f16, f22, f1, rmm # perform operation
fnmsub.s f18, f16, f22, f1, rne # perform operation
fnmsub.s f18, f16, f22, f1, rtz # perform operation
fnmsub.s f18, f16, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f16, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f16, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f16, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f16, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f16, f22, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x813d9ab0)
li x17, 0xb8e888d7412685cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
li x3, 0x53648b7c38496024 # load x3 with value 0x53648b7c38496024
sw x3, 0(x2) # store 0x53648b7c38496024 in memory
flw f5, 0(x2) # load 0x53648b7c38496024 from memory into f5
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
fnmsub.s f17, f13, f5, f31, dyn # perform operation
fnmsub.s f17, f13, f5, f31, rdn # perform operation
fnmsub.s f17, f13, f5, f31, rmm # perform operation
fnmsub.s f17, f13, f5, f31, rne # perform operation
fnmsub.s f17, f13, f5, f31, rtz # perform operation
fnmsub.s f17, f13, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f13, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f13, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f13, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f13, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f13, f5, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x0)
li x18, 0x615bb245c362c595 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0x3f8e625c0cd382a9 # load x3 with value 0x3f8e625c0cd382a9
sw x3, 0(x2) # store 0x3f8e625c0cd382a9 in memory
flw f17, 0(x2) # load 0x3f8e625c0cd382a9 from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
fnmsub.s f18, f16, f17, f11, dyn # perform operation
fnmsub.s f18, f16, f17, f11, rdn # perform operation
fnmsub.s f18, f16, f17, f11, rmm # perform operation
fnmsub.s f18, f16, f17, f11, rne # perform operation
fnmsub.s f18, f16, f17, f11, rtz # perform operation
fnmsub.s f18, f16, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f16, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f16, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f16, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f16, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f16, f17, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000000)
li x30, 0x78fa677dfe95f402 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x38980f748140371 # load x3 with value 0x38980f748140371
sw x3, 0(x2) # store 0x38980f748140371 in memory
flw f11, 0(x2) # load 0x38980f748140371 from memory into f11
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
fnmsub.s f30, f29, f11, f3, dyn # perform operation
fnmsub.s f30, f29, f11, f3, rdn # perform operation
fnmsub.s f30, f29, f11, f3, rmm # perform operation
fnmsub.s f30, f29, f11, f3, rne # perform operation
fnmsub.s f30, f29, f11, f3, rtz # perform operation
fnmsub.s f30, f29, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f29, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f29, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f29, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f29, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f29, f11, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3f800000)
li x5, 0x03c0f0a914467b93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0x564f38f963eb0813 # load x3 with value 0x564f38f963eb0813
sw x3, 0(x2) # store 0x564f38f963eb0813 in memory
flw f19, 0(x2) # load 0x564f38f963eb0813 from memory into f19
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
fnmsub.s f5, f17, f19, f14, dyn # perform operation
fnmsub.s f5, f17, f19, f14, rdn # perform operation
fnmsub.s f5, f17, f19, f14, rmm # perform operation
fnmsub.s f5, f17, f19, f14, rne # perform operation
fnmsub.s f5, f17, f19, f14, rtz # perform operation
fnmsub.s f5, f17, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f17, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f17, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f17, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f17, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f17, f19, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbf800000)
li x5, 0x84baf3ed6455305d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0xcf5c7870f3c16d82 # load x3 with value 0xcf5c7870f3c16d82
sw x3, 0(x2) # store 0xcf5c7870f3c16d82 in memory
flw f26, 0(x2) # load 0xcf5c7870f3c16d82 from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
fnmsub.s f5, f16, f26, f7, dyn # perform operation
fnmsub.s f5, f16, f26, f7, rdn # perform operation
fnmsub.s f5, f16, f26, f7, rmm # perform operation
fnmsub.s f5, f16, f26, f7, rne # perform operation
fnmsub.s f5, f16, f26, f7, rtz # perform operation
fnmsub.s f5, f16, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f16, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f16, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f16, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f16, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f16, f26, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3fc00000)
li x31, 0x0c6ac2a69d28bcb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x81149f6b519d46d4 # load x3 with value 0x81149f6b519d46d4
sw x3, 0(x2) # store 0x81149f6b519d46d4 in memory
flw f23, 0(x2) # load 0x81149f6b519d46d4 from memory into f23
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
fnmsub.s f31, f9, f23, f29, dyn # perform operation
fnmsub.s f31, f9, f23, f29, rdn # perform operation
fnmsub.s f31, f9, f23, f29, rmm # perform operation
fnmsub.s f31, f9, f23, f29, rne # perform operation
fnmsub.s f31, f9, f23, f29, rtz # perform operation
fnmsub.s f31, f9, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f9, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f9, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f9, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f9, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f9, f23, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbfc00000)
li x12, 0x3ebcd3c70b56a7f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
li x3, 0x70c873b411815eee # load x3 with value 0x70c873b411815eee
sw x3, 0(x2) # store 0x70c873b411815eee in memory
flw f10, 0(x2) # load 0x70c873b411815eee from memory into f10
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
fnmsub.s f12, f28, f10, f27, dyn # perform operation
fnmsub.s f12, f28, f10, f27, rdn # perform operation
fnmsub.s f12, f28, f10, f27, rmm # perform operation
fnmsub.s f12, f28, f10, f27, rne # perform operation
fnmsub.s f12, f28, f10, f27, rtz # perform operation
fnmsub.s f12, f28, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f28, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f28, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f28, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f28, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f28, f10, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x40000000)
li x14, 0x0868af2ccbfe2210 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0xc1493f5116d29984 # load x3 with value 0xc1493f5116d29984
sw x3, 0(x2) # store 0xc1493f5116d29984 in memory
flw f31, 0(x2) # load 0xc1493f5116d29984 from memory into f31
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
fnmsub.s f14, f25, f31, f29, dyn # perform operation
fnmsub.s f14, f25, f31, f29, rdn # perform operation
fnmsub.s f14, f25, f31, f29, rmm # perform operation
fnmsub.s f14, f25, f31, f29, rne # perform operation
fnmsub.s f14, f25, f31, f29, rtz # perform operation
fnmsub.s f14, f25, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f25, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f25, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f25, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f25, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f25, f31, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xc0000000)
li x14, 0x6764dd26a0287c9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0x483743189903a94b # load x3 with value 0x483743189903a94b
sw x3, 0(x2) # store 0x483743189903a94b in memory
flw f1, 0(x2) # load 0x483743189903a94b from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
fnmsub.s f14, f19, f1, f13, dyn # perform operation
fnmsub.s f14, f19, f1, f13, rdn # perform operation
fnmsub.s f14, f19, f1, f13, rmm # perform operation
fnmsub.s f14, f19, f1, f13, rne # perform operation
fnmsub.s f14, f19, f1, f13, rtz # perform operation
fnmsub.s f14, f19, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f19, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f19, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f19, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f19, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f19, f1, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x800000)
li x31, 0x83b73b970f80ec63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x369bec4e658abf4f # load x3 with value 0x369bec4e658abf4f
sw x3, 0(x2) # store 0x369bec4e658abf4f in memory
flw f20, 0(x2) # load 0x369bec4e658abf4f from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
fnmsub.s f31, f29, f20, f2, dyn # perform operation
fnmsub.s f31, f29, f20, f2, rdn # perform operation
fnmsub.s f31, f29, f20, f2, rmm # perform operation
fnmsub.s f31, f29, f20, f2, rne # perform operation
fnmsub.s f31, f29, f20, f2, rtz # perform operation
fnmsub.s f31, f29, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f29, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f29, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f29, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f29, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f29, f20, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80800000)
li x16, 0x03776405c3be2bcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
li x3, 0xe303a44ace8c43d0 # load x3 with value 0xe303a44ace8c43d0
sw x3, 0(x2) # store 0xe303a44ace8c43d0 in memory
flw f10, 0(x2) # load 0xe303a44ace8c43d0 from memory into f10
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
fnmsub.s f16, f1, f10, f14, dyn # perform operation
fnmsub.s f16, f1, f10, f14, rdn # perform operation
fnmsub.s f16, f1, f10, f14, rmm # perform operation
fnmsub.s f16, f1, f10, f14, rne # perform operation
fnmsub.s f16, f1, f10, f14, rtz # perform operation
fnmsub.s f16, f1, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f1, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f1, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f1, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f1, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f1, f10, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f7fffff)
li x5, 0x16f1057c960597a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0xa37a249905c9234e # load x3 with value 0xa37a249905c9234e
sw x3, 0(x2) # store 0xa37a249905c9234e in memory
flw f25, 0(x2) # load 0xa37a249905c9234e from memory into f25
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
fnmsub.s f5, f12, f25, f1, dyn # perform operation
fnmsub.s f5, f12, f25, f1, rdn # perform operation
fnmsub.s f5, f12, f25, f1, rmm # perform operation
fnmsub.s f5, f12, f25, f1, rne # perform operation
fnmsub.s f5, f12, f25, f1, rtz # perform operation
fnmsub.s f5, f12, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f12, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f12, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f12, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f12, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f12, f25, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff7fffff)
li x2, 0x218a53103a4b2d22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
li x3, 0x4c7375408a0df77e # load x3 with value 0x4c7375408a0df77e
sw x3, 0(x2) # store 0x4c7375408a0df77e in memory
flw f24, 0(x2) # load 0x4c7375408a0df77e from memory into f24
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
fnmsub.s f2, f23, f24, f9, dyn # perform operation
fnmsub.s f2, f23, f24, f9, rdn # perform operation
fnmsub.s f2, f23, f24, f9, rmm # perform operation
fnmsub.s f2, f23, f24, f9, rne # perform operation
fnmsub.s f2, f23, f24, f9, rtz # perform operation
fnmsub.s f2, f23, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f23, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f23, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f23, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f23, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f23, f24, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffff)
li x10, 0x5f3a65e393f49132 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
li x3, 0x70c3c26ee39bfd15 # load x3 with value 0x70c3c26ee39bfd15
sw x3, 0(x2) # store 0x70c3c26ee39bfd15 in memory
flw f31, 0(x2) # load 0x70c3c26ee39bfd15 from memory into f31
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
fnmsub.s f10, f24, f31, f21, dyn # perform operation
fnmsub.s f10, f24, f31, f21, rdn # perform operation
fnmsub.s f10, f24, f31, f21, rmm # perform operation
fnmsub.s f10, f24, f31, f21, rne # perform operation
fnmsub.s f10, f24, f31, f21, rtz # perform operation
fnmsub.s f10, f24, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f24, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f24, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f24, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f24, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f24, f31, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x807fffff)
li x30, 0x7565557653e40ce5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0xb341c253f6d87aa5 # load x3 with value 0xb341c253f6d87aa5
sw x3, 0(x2) # store 0xb341c253f6d87aa5 in memory
flw f22, 0(x2) # load 0xb341c253f6d87aa5 from memory into f22
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
fnmsub.s f30, f2, f22, f27, dyn # perform operation
fnmsub.s f30, f2, f22, f27, rdn # perform operation
fnmsub.s f30, f2, f22, f27, rmm # perform operation
fnmsub.s f30, f2, f22, f27, rne # perform operation
fnmsub.s f30, f2, f22, f27, rtz # perform operation
fnmsub.s f30, f2, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f2, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f2, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f2, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f2, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f2, f22, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x400000)
li x11, 0x030361c46b8d802e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
li x3, 0x22e7e0751ff1833e # load x3 with value 0x22e7e0751ff1833e
sw x3, 0(x2) # store 0x22e7e0751ff1833e in memory
flw f29, 0(x2) # load 0x22e7e0751ff1833e from memory into f29
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
fnmsub.s f11, f21, f29, f9, dyn # perform operation
fnmsub.s f11, f21, f29, f9, rdn # perform operation
fnmsub.s f11, f21, f29, f9, rmm # perform operation
fnmsub.s f11, f21, f29, f9, rne # perform operation
fnmsub.s f11, f21, f29, f9, rtz # perform operation
fnmsub.s f11, f21, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f21, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f21, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f21, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f21, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f21, f29, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80400000)
li x15, 0x2ed3e572aeb59374 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
li x3, 0x14e3fd9468daf1cc # load x3 with value 0x14e3fd9468daf1cc
sw x3, 0(x2) # store 0x14e3fd9468daf1cc in memory
flw f11, 0(x2) # load 0x14e3fd9468daf1cc from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
fnmsub.s f15, f1, f11, f16, dyn # perform operation
fnmsub.s f15, f1, f11, f16, rdn # perform operation
fnmsub.s f15, f1, f11, f16, rmm # perform operation
fnmsub.s f15, f1, f11, f16, rne # perform operation
fnmsub.s f15, f1, f11, f16, rtz # perform operation
fnmsub.s f15, f1, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f1, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f1, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f1, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f1, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f1, f11, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x1)
li x29, 0x23a1b8eec779c019 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
li x3, 0xc9e7f96bcf3f1d9c # load x3 with value 0xc9e7f96bcf3f1d9c
sw x3, 0(x2) # store 0xc9e7f96bcf3f1d9c in memory
flw f12, 0(x2) # load 0xc9e7f96bcf3f1d9c from memory into f12
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
fnmsub.s f29, f23, f12, f3, dyn # perform operation
fnmsub.s f29, f23, f12, f3, rdn # perform operation
fnmsub.s f29, f23, f12, f3, rmm # perform operation
fnmsub.s f29, f23, f12, f3, rne # perform operation
fnmsub.s f29, f23, f12, f3, rtz # perform operation
fnmsub.s f29, f23, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f23, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f23, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f23, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f23, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f23, f12, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000001)
li x8, 0x707b8acb483e84fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0xa04cdb84c3b8ea16 # load x3 with value 0xa04cdb84c3b8ea16
sw x3, 0(x2) # store 0xa04cdb84c3b8ea16 in memory
flw f23, 0(x2) # load 0xa04cdb84c3b8ea16 from memory into f23
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
fnmsub.s f8, f10, f23, f25, dyn # perform operation
fnmsub.s f8, f10, f23, f25, rdn # perform operation
fnmsub.s f8, f10, f23, f25, rmm # perform operation
fnmsub.s f8, f10, f23, f25, rne # perform operation
fnmsub.s f8, f10, f23, f25, rtz # perform operation
fnmsub.s f8, f10, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f10, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f10, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f10, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f10, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f10, f23, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800000)
li x15, 0xb3c2ad751b5d5f4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0xcd6d35af3477600 # load x3 with value 0xcd6d35af3477600
sw x3, 0(x2) # store 0xcd6d35af3477600 in memory
flw f24, 0(x2) # load 0xcd6d35af3477600 from memory into f24
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
fnmsub.s f15, f17, f24, f30, dyn # perform operation
fnmsub.s f15, f17, f24, f30, rdn # perform operation
fnmsub.s f15, f17, f24, f30, rmm # perform operation
fnmsub.s f15, f17, f24, f30, rne # perform operation
fnmsub.s f15, f17, f24, f30, rtz # perform operation
fnmsub.s f15, f17, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f17, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f17, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f17, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f17, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f17, f24, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff800000)
li x3, 0xeba6fb81b0797285 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0xf9ea25e3660a20b6 # load x3 with value 0xf9ea25e3660a20b6
sw x3, 0(x2) # store 0xf9ea25e3660a20b6 in memory
flw f4, 0(x2) # load 0xf9ea25e3660a20b6 from memory into f4
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
fnmsub.s f3, f13, f4, f20, dyn # perform operation
fnmsub.s f3, f13, f4, f20, rdn # perform operation
fnmsub.s f3, f13, f4, f20, rmm # perform operation
fnmsub.s f3, f13, f4, f20, rne # perform operation
fnmsub.s f3, f13, f4, f20, rtz # perform operation
fnmsub.s f3, f13, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f13, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f13, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f13, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f13, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f13, f4, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fc00000)
li x28, 0x1070382917f714a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0x8481f95ce653982f # load x3 with value 0x8481f95ce653982f
sw x3, 0(x2) # store 0x8481f95ce653982f in memory
flw f10, 0(x2) # load 0x8481f95ce653982f from memory into f10
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fnmsub.s f28, f8, f10, f16, dyn # perform operation
fnmsub.s f28, f8, f10, f16, rdn # perform operation
fnmsub.s f28, f8, f10, f16, rmm # perform operation
fnmsub.s f28, f8, f10, f16, rne # perform operation
fnmsub.s f28, f8, f10, f16, rtz # perform operation
fnmsub.s f28, f8, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f8, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f8, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f8, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f8, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f8, f10, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffffff)
li x2, 0x55c1f51cd5d8a662 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
li x3, 0xd2527fd30042154c # load x3 with value 0xd2527fd30042154c
sw x3, 0(x2) # store 0xd2527fd30042154c in memory
flw f21, 0(x2) # load 0xd2527fd30042154c from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
fnmsub.s f2, f27, f21, f30, dyn # perform operation
fnmsub.s f2, f27, f21, f30, rdn # perform operation
fnmsub.s f2, f27, f21, f30, rmm # perform operation
fnmsub.s f2, f27, f21, f30, rne # perform operation
fnmsub.s f2, f27, f21, f30, rtz # perform operation
fnmsub.s f2, f27, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f27, f21, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800001)
li x21, 0xd1aa01430457e2c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
li x3, 0xb38d2b9820ea0335 # load x3 with value 0xb38d2b9820ea0335
sw x3, 0(x2) # store 0xb38d2b9820ea0335 in memory
flw f10, 0(x2) # load 0xb38d2b9820ea0335 from memory into f10
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
fnmsub.s f21, f7, f10, f26, dyn # perform operation
fnmsub.s f21, f7, f10, f26, rdn # perform operation
fnmsub.s f21, f7, f10, f26, rmm # perform operation
fnmsub.s f21, f7, f10, f26, rne # perform operation
fnmsub.s f21, f7, f10, f26, rtz # perform operation
fnmsub.s f21, f7, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f7, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f7, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f7, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f7, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f7, f10, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fbfffff)
li x29, 0x698d83fabd69f9d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0xd124aa657f278006 # load x3 with value 0xd124aa657f278006
sw x3, 0(x2) # store 0xd124aa657f278006 in memory
flw f15, 0(x2) # load 0xd124aa657f278006 from memory into f15
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fnmsub.s f29, f19, f15, f1, dyn # perform operation
fnmsub.s f29, f19, f15, f1, rdn # perform operation
fnmsub.s f29, f19, f15, f1, rmm # perform operation
fnmsub.s f29, f19, f15, f1, rne # perform operation
fnmsub.s f29, f19, f15, f1, rtz # perform operation
fnmsub.s f29, f19, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f19, f15, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7ef8654f)
li x13, 0x963accdb1c38738d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0xb58d99229753e37f # load x3 with value 0xb58d99229753e37f
sw x3, 0(x2) # store 0xb58d99229753e37f in memory
flw f27, 0(x2) # load 0xb58d99229753e37f from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
fnmsub.s f13, f16, f27, f2, dyn # perform operation
fnmsub.s f13, f16, f27, f2, rdn # perform operation
fnmsub.s f13, f16, f27, f2, rmm # perform operation
fnmsub.s f13, f16, f27, f2, rne # perform operation
fnmsub.s f13, f16, f27, f2, rtz # perform operation
fnmsub.s f13, f16, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f16, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f16, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f16, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f16, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f16, f27, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x813d9ab0)
li x8, 0x146b17f7d59e067d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
li x3, 0x2063de69301897b4 # load x3 with value 0x2063de69301897b4
sw x3, 0(x2) # store 0x2063de69301897b4 in memory
flw f3, 0(x2) # load 0x2063de69301897b4 from memory into f3
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
fnmsub.s f8, f7, f3, f27, dyn # perform operation
fnmsub.s f8, f7, f3, f27, rdn # perform operation
fnmsub.s f8, f7, f3, f27, rmm # perform operation
fnmsub.s f8, f7, f3, f27, rne # perform operation
fnmsub.s f8, f7, f3, f27, rtz # perform operation
fnmsub.s f8, f7, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f7, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f7, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f7, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f7, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f7, f3, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x0)
li x9, 0x8f546dff64ec78a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
li x3, 0xa7cc7dc8b9399e21 # load x3 with value 0xa7cc7dc8b9399e21
sw x3, 0(x2) # store 0xa7cc7dc8b9399e21 in memory
flw f7, 0(x2) # load 0xa7cc7dc8b9399e21 from memory into f7
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
fnmsub.s f9, f1, f7, f17, dyn # perform operation
fnmsub.s f9, f1, f7, f17, rdn # perform operation
fnmsub.s f9, f1, f7, f17, rmm # perform operation
fnmsub.s f9, f1, f7, f17, rne # perform operation
fnmsub.s f9, f1, f7, f17, rtz # perform operation
fnmsub.s f9, f1, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f1, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f1, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f1, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f1, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f1, f7, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000000)
li x30, 0xf0c3c6f7c5c56a3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0xdc6c73059c42ba04 # load x3 with value 0xdc6c73059c42ba04
sw x3, 0(x2) # store 0xdc6c73059c42ba04 in memory
flw f16, 0(x2) # load 0xdc6c73059c42ba04 from memory into f16
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
fnmsub.s f30, f7, f16, f28, dyn # perform operation
fnmsub.s f30, f7, f16, f28, rdn # perform operation
fnmsub.s f30, f7, f16, f28, rmm # perform operation
fnmsub.s f30, f7, f16, f28, rne # perform operation
fnmsub.s f30, f7, f16, f28, rtz # perform operation
fnmsub.s f30, f7, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f7, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f7, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f7, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f7, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f7, f16, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3f800000)
li x29, 0x4489cc830c34a218 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
li x3, 0x558930aab9ca98b4 # load x3 with value 0x558930aab9ca98b4
sw x3, 0(x2) # store 0x558930aab9ca98b4 in memory
flw f27, 0(x2) # load 0x558930aab9ca98b4 from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
fnmsub.s f29, f10, f27, f16, dyn # perform operation
fnmsub.s f29, f10, f27, f16, rdn # perform operation
fnmsub.s f29, f10, f27, f16, rmm # perform operation
fnmsub.s f29, f10, f27, f16, rne # perform operation
fnmsub.s f29, f10, f27, f16, rtz # perform operation
fnmsub.s f29, f10, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f10, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f10, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f10, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f10, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f10, f27, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbf800000)
li x8, 0x735c7724bbb4faf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0x8c47e13fa7a5fb89 # load x3 with value 0x8c47e13fa7a5fb89
sw x3, 0(x2) # store 0x8c47e13fa7a5fb89 in memory
flw f23, 0(x2) # load 0x8c47e13fa7a5fb89 from memory into f23
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
fnmsub.s f8, f6, f23, f14, dyn # perform operation
fnmsub.s f8, f6, f23, f14, rdn # perform operation
fnmsub.s f8, f6, f23, f14, rmm # perform operation
fnmsub.s f8, f6, f23, f14, rne # perform operation
fnmsub.s f8, f6, f23, f14, rtz # perform operation
fnmsub.s f8, f6, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f6, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f6, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f6, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f6, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f6, f23, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3fc00000)
li x11, 0xc0724a4884856f28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
li x3, 0xd0e334130a001bff # load x3 with value 0xd0e334130a001bff
sw x3, 0(x2) # store 0xd0e334130a001bff in memory
flw f6, 0(x2) # load 0xd0e334130a001bff from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
fnmsub.s f11, f4, f6, f28, dyn # perform operation
fnmsub.s f11, f4, f6, f28, rdn # perform operation
fnmsub.s f11, f4, f6, f28, rmm # perform operation
fnmsub.s f11, f4, f6, f28, rne # perform operation
fnmsub.s f11, f4, f6, f28, rtz # perform operation
fnmsub.s f11, f4, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f4, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f4, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f4, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f4, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f4, f6, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbfc00000)
li x4, 0x58d0d64ec3eb0059 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0xe6bb6c87405a0625 # load x3 with value 0xe6bb6c87405a0625
sw x3, 0(x2) # store 0xe6bb6c87405a0625 in memory
flw f28, 0(x2) # load 0xe6bb6c87405a0625 from memory into f28
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
fnmsub.s f4, f24, f28, f11, dyn # perform operation
fnmsub.s f4, f24, f28, f11, rdn # perform operation
fnmsub.s f4, f24, f28, f11, rmm # perform operation
fnmsub.s f4, f24, f28, f11, rne # perform operation
fnmsub.s f4, f24, f28, f11, rtz # perform operation
fnmsub.s f4, f24, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f24, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f24, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f24, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f24, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f24, f28, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x40000000)
li x12, 0xc5fcd693d4750813 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
li x3, 0x8a3e8e414e72eaaf # load x3 with value 0x8a3e8e414e72eaaf
sw x3, 0(x2) # store 0x8a3e8e414e72eaaf in memory
flw f2, 0(x2) # load 0x8a3e8e414e72eaaf from memory into f2
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
fnmsub.s f12, f9, f2, f15, dyn # perform operation
fnmsub.s f12, f9, f2, f15, rdn # perform operation
fnmsub.s f12, f9, f2, f15, rmm # perform operation
fnmsub.s f12, f9, f2, f15, rne # perform operation
fnmsub.s f12, f9, f2, f15, rtz # perform operation
fnmsub.s f12, f9, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f9, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f9, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f9, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f9, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f9, f2, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xc0000000)
li x29, 0x06f9686ccafccd64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0x5d2e188c473bfeb # load x3 with value 0x5d2e188c473bfeb
sw x3, 0(x2) # store 0x5d2e188c473bfeb in memory
flw f25, 0(x2) # load 0x5d2e188c473bfeb from memory into f25
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
fnmsub.s f29, f24, f25, f26, dyn # perform operation
fnmsub.s f29, f24, f25, f26, rdn # perform operation
fnmsub.s f29, f24, f25, f26, rmm # perform operation
fnmsub.s f29, f24, f25, f26, rne # perform operation
fnmsub.s f29, f24, f25, f26, rtz # perform operation
fnmsub.s f29, f24, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f24, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f24, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f24, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f24, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f24, f25, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x800000)
li x22, 0x15224d8c20f4a34c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0x48cffa798a9fc346 # load x3 with value 0x48cffa798a9fc346
sw x3, 0(x2) # store 0x48cffa798a9fc346 in memory
flw f20, 0(x2) # load 0x48cffa798a9fc346 from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
fnmsub.s f22, f24, f20, f8, dyn # perform operation
fnmsub.s f22, f24, f20, f8, rdn # perform operation
fnmsub.s f22, f24, f20, f8, rmm # perform operation
fnmsub.s f22, f24, f20, f8, rne # perform operation
fnmsub.s f22, f24, f20, f8, rtz # perform operation
fnmsub.s f22, f24, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f24, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f24, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f24, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f24, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f24, f20, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80800000)
li x3, 0x35811c187d5ff531 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x3eeabde2cf415c79 # load x3 with value 0x3eeabde2cf415c79
sw x3, 0(x2) # store 0x3eeabde2cf415c79 in memory
flw f28, 0(x2) # load 0x3eeabde2cf415c79 from memory into f28
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
fnmsub.s f3, f2, f28, f16, dyn # perform operation
fnmsub.s f3, f2, f28, f16, rdn # perform operation
fnmsub.s f3, f2, f28, f16, rmm # perform operation
fnmsub.s f3, f2, f28, f16, rne # perform operation
fnmsub.s f3, f2, f28, f16, rtz # perform operation
fnmsub.s f3, f2, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f2, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f2, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f2, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f2, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f2, f28, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f7fffff)
li x19, 0xf8c5882731415e47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x8d46baa5795920fa # load x3 with value 0x8d46baa5795920fa
sw x3, 0(x2) # store 0x8d46baa5795920fa in memory
flw f29, 0(x2) # load 0x8d46baa5795920fa from memory into f29
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fnmsub.s f19, f30, f29, f3, dyn # perform operation
fnmsub.s f19, f30, f29, f3, rdn # perform operation
fnmsub.s f19, f30, f29, f3, rmm # perform operation
fnmsub.s f19, f30, f29, f3, rne # perform operation
fnmsub.s f19, f30, f29, f3, rtz # perform operation
fnmsub.s f19, f30, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f30, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f30, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f30, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f30, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f30, f29, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff7fffff)
li x29, 0x97b18be62d61905e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0xf8b206a4b262c6c4 # load x3 with value 0xf8b206a4b262c6c4
sw x3, 0(x2) # store 0xf8b206a4b262c6c4 in memory
flw f31, 0(x2) # load 0xf8b206a4b262c6c4 from memory into f31
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
fnmsub.s f29, f30, f31, f28, dyn # perform operation
fnmsub.s f29, f30, f31, f28, rdn # perform operation
fnmsub.s f29, f30, f31, f28, rmm # perform operation
fnmsub.s f29, f30, f31, f28, rne # perform operation
fnmsub.s f29, f30, f31, f28, rtz # perform operation
fnmsub.s f29, f30, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f30, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f30, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f30, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f30, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f30, f31, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffff)
li x21, 0xbd55ab6ec7b283d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
li x3, 0xecb5819c0b2a5a6d # load x3 with value 0xecb5819c0b2a5a6d
sw x3, 0(x2) # store 0xecb5819c0b2a5a6d in memory
flw f11, 0(x2) # load 0xecb5819c0b2a5a6d from memory into f11
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
fnmsub.s f21, f22, f11, f30, dyn # perform operation
fnmsub.s f21, f22, f11, f30, rdn # perform operation
fnmsub.s f21, f22, f11, f30, rmm # perform operation
fnmsub.s f21, f22, f11, f30, rne # perform operation
fnmsub.s f21, f22, f11, f30, rtz # perform operation
fnmsub.s f21, f22, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f22, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f22, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f22, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f22, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f22, f11, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x807fffff)
li x15, 0xde25596a5f8a23f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
li x3, 0xc12b6fedac1db802 # load x3 with value 0xc12b6fedac1db802
sw x3, 0(x2) # store 0xc12b6fedac1db802 in memory
flw f16, 0(x2) # load 0xc12b6fedac1db802 from memory into f16
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
fnmsub.s f15, f10, f16, f25, dyn # perform operation
fnmsub.s f15, f10, f16, f25, rdn # perform operation
fnmsub.s f15, f10, f16, f25, rmm # perform operation
fnmsub.s f15, f10, f16, f25, rne # perform operation
fnmsub.s f15, f10, f16, f25, rtz # perform operation
fnmsub.s f15, f10, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f10, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f10, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f10, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f10, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f10, f16, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x400000)
li x27, 0xf034a816c2c9bcdb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
li x3, 0x9923232c75828d43 # load x3 with value 0x9923232c75828d43
sw x3, 0(x2) # store 0x9923232c75828d43 in memory
flw f5, 0(x2) # load 0x9923232c75828d43 from memory into f5
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
fnmsub.s f27, f12, f5, f11, dyn # perform operation
fnmsub.s f27, f12, f5, f11, rdn # perform operation
fnmsub.s f27, f12, f5, f11, rmm # perform operation
fnmsub.s f27, f12, f5, f11, rne # perform operation
fnmsub.s f27, f12, f5, f11, rtz # perform operation
fnmsub.s f27, f12, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f12, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f12, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f12, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f12, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f12, f5, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80400000)
li x10, 0xd5256f446f41c164 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
li x3, 0x4fbd56b7d1e33967 # load x3 with value 0x4fbd56b7d1e33967
sw x3, 0(x2) # store 0x4fbd56b7d1e33967 in memory
flw f3, 0(x2) # load 0x4fbd56b7d1e33967 from memory into f3
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
fnmsub.s f10, f4, f3, f25, dyn # perform operation
fnmsub.s f10, f4, f3, f25, rdn # perform operation
fnmsub.s f10, f4, f3, f25, rmm # perform operation
fnmsub.s f10, f4, f3, f25, rne # perform operation
fnmsub.s f10, f4, f3, f25, rtz # perform operation
fnmsub.s f10, f4, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f4, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f4, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f4, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f4, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f4, f3, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x1)
li x28, 0xbf8856bfcfbc47a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0xd546f20c927e125a # load x3 with value 0xd546f20c927e125a
sw x3, 0(x2) # store 0xd546f20c927e125a in memory
flw f10, 0(x2) # load 0xd546f20c927e125a from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
fnmsub.s f28, f3, f10, f26, dyn # perform operation
fnmsub.s f28, f3, f10, f26, rdn # perform operation
fnmsub.s f28, f3, f10, f26, rmm # perform operation
fnmsub.s f28, f3, f10, f26, rne # perform operation
fnmsub.s f28, f3, f10, f26, rtz # perform operation
fnmsub.s f28, f3, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f3, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f3, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f3, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f3, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f3, f10, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000001)
li x4, 0x92edabf47d9dfd4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0xc404d555ac95c6d3 # load x3 with value 0xc404d555ac95c6d3
sw x3, 0(x2) # store 0xc404d555ac95c6d3 in memory
flw f24, 0(x2) # load 0xc404d555ac95c6d3 from memory into f24
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
fnmsub.s f4, f6, f24, f17, dyn # perform operation
fnmsub.s f4, f6, f24, f17, rdn # perform operation
fnmsub.s f4, f6, f24, f17, rmm # perform operation
fnmsub.s f4, f6, f24, f17, rne # perform operation
fnmsub.s f4, f6, f24, f17, rtz # perform operation
fnmsub.s f4, f6, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f6, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f6, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f6, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f6, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f6, f24, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800000)
li x24, 0xa8d2511e3fbd30f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0xb64830ba3cb5543d # load x3 with value 0xb64830ba3cb5543d
sw x3, 0(x2) # store 0xb64830ba3cb5543d in memory
flw f9, 0(x2) # load 0xb64830ba3cb5543d from memory into f9
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
fnmsub.s f24, f7, f9, f19, dyn # perform operation
fnmsub.s f24, f7, f9, f19, rdn # perform operation
fnmsub.s f24, f7, f9, f19, rmm # perform operation
fnmsub.s f24, f7, f9, f19, rne # perform operation
fnmsub.s f24, f7, f9, f19, rtz # perform operation
fnmsub.s f24, f7, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f7, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f7, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f7, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f7, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f7, f9, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff800000)
li x19, 0xe5cb64c845bb305d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
li x3, 0xc64570fb2b36aeb7 # load x3 with value 0xc64570fb2b36aeb7
sw x3, 0(x2) # store 0xc64570fb2b36aeb7 in memory
flw f24, 0(x2) # load 0xc64570fb2b36aeb7 from memory into f24
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fnmsub.s f19, f29, f24, f26, dyn # perform operation
fnmsub.s f19, f29, f24, f26, rdn # perform operation
fnmsub.s f19, f29, f24, f26, rmm # perform operation
fnmsub.s f19, f29, f24, f26, rne # perform operation
fnmsub.s f19, f29, f24, f26, rtz # perform operation
fnmsub.s f19, f29, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f29, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f29, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f29, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f29, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f29, f24, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fc00000)
li x20, 0xe3efe26a122aadb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
li x3, 0x7f5f1a2d98e6b55c # load x3 with value 0x7f5f1a2d98e6b55c
sw x3, 0(x2) # store 0x7f5f1a2d98e6b55c in memory
flw f30, 0(x2) # load 0x7f5f1a2d98e6b55c from memory into f30
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fnmsub.s f20, f29, f30, f14, dyn # perform operation
fnmsub.s f20, f29, f30, f14, rdn # perform operation
fnmsub.s f20, f29, f30, f14, rmm # perform operation
fnmsub.s f20, f29, f30, f14, rne # perform operation
fnmsub.s f20, f29, f30, f14, rtz # perform operation
fnmsub.s f20, f29, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f29, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f29, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f29, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f29, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f29, f30, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffffff)
li x26, 0x8241029723ffe544 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0x8f274486911e9c89 # load x3 with value 0x8f274486911e9c89
sw x3, 0(x2) # store 0x8f274486911e9c89 in memory
flw f7, 0(x2) # load 0x8f274486911e9c89 from memory into f7
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
fnmsub.s f26, f8, f7, f4, dyn # perform operation
fnmsub.s f26, f8, f7, f4, rdn # perform operation
fnmsub.s f26, f8, f7, f4, rmm # perform operation
fnmsub.s f26, f8, f7, f4, rne # perform operation
fnmsub.s f26, f8, f7, f4, rtz # perform operation
fnmsub.s f26, f8, f7, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f8, f7, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f8, f7, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f8, f7, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f8, f7, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f8, f7, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800001)
li x20, 0xeb3df8bf04f48e6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0x1f9e4716ddcaa0b8 # load x3 with value 0x1f9e4716ddcaa0b8
sw x3, 0(x2) # store 0x1f9e4716ddcaa0b8 in memory
flw f23, 0(x2) # load 0x1f9e4716ddcaa0b8 from memory into f23
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
fnmsub.s f20, f27, f23, f10, dyn # perform operation
fnmsub.s f20, f27, f23, f10, rdn # perform operation
fnmsub.s f20, f27, f23, f10, rmm # perform operation
fnmsub.s f20, f27, f23, f10, rne # perform operation
fnmsub.s f20, f27, f23, f10, rtz # perform operation
fnmsub.s f20, f27, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f27, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f27, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f27, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f27, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f27, f23, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fbfffff)
li x31, 0x99d84527c0291505 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0xde26f14e8813c519 # load x3 with value 0xde26f14e8813c519
sw x3, 0(x2) # store 0xde26f14e8813c519 in memory
flw f12, 0(x2) # load 0xde26f14e8813c519 from memory into f12
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
fnmsub.s f31, f16, f12, f17, dyn # perform operation
fnmsub.s f31, f16, f12, f17, rdn # perform operation
fnmsub.s f31, f16, f12, f17, rmm # perform operation
fnmsub.s f31, f16, f12, f17, rne # perform operation
fnmsub.s f31, f16, f12, f17, rtz # perform operation
fnmsub.s f31, f16, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f16, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f16, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f16, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f16, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f16, f12, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7ef8654f)
li x19, 0x218877d4ed3028fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0x1ae3815e3bb4384c # load x3 with value 0x1ae3815e3bb4384c
sw x3, 0(x2) # store 0x1ae3815e3bb4384c in memory
flw f16, 0(x2) # load 0x1ae3815e3bb4384c from memory into f16
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
fnmsub.s f19, f14, f16, f9, dyn # perform operation
fnmsub.s f19, f14, f16, f9, rdn # perform operation
fnmsub.s f19, f14, f16, f9, rmm # perform operation
fnmsub.s f19, f14, f16, f9, rne # perform operation
fnmsub.s f19, f14, f16, f9, rtz # perform operation
fnmsub.s f19, f14, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f14, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f14, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f14, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f14, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f14, f16, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x813d9ab0)
li x15, 0x6486b1ad7a12089d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
li x3, 0x5b4d0467fc35bd5a # load x3 with value 0x5b4d0467fc35bd5a
sw x3, 0(x2) # store 0x5b4d0467fc35bd5a in memory
flw f23, 0(x2) # load 0x5b4d0467fc35bd5a from memory into f23
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
fnmsub.s f15, f9, f23, f3, dyn # perform operation
fnmsub.s f15, f9, f23, f3, rdn # perform operation
fnmsub.s f15, f9, f23, f3, rmm # perform operation
fnmsub.s f15, f9, f23, f3, rne # perform operation
fnmsub.s f15, f9, f23, f3, rtz # perform operation
fnmsub.s f15, f9, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f9, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f9, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f9, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f9, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f9, f23, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x0)
li x26, 0xa3f76d6f8bd693f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
li x3, 0xf86596d9a9eb85b7 # load x3 with value 0xf86596d9a9eb85b7
sw x3, 0(x2) # store 0xf86596d9a9eb85b7 in memory
flw f18, 0(x2) # load 0xf86596d9a9eb85b7 from memory into f18
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
fnmsub.s f26, f29, f18, f21, dyn # perform operation
fnmsub.s f26, f29, f18, f21, rdn # perform operation
fnmsub.s f26, f29, f18, f21, rmm # perform operation
fnmsub.s f26, f29, f18, f21, rne # perform operation
fnmsub.s f26, f29, f18, f21, rtz # perform operation
fnmsub.s f26, f29, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f29, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f29, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f29, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f29, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f29, f18, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000000)
li x27, 0x28992469cad65b75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0xa5f7812e847f191f # load x3 with value 0xa5f7812e847f191f
sw x3, 0(x2) # store 0xa5f7812e847f191f in memory
flw f30, 0(x2) # load 0xa5f7812e847f191f from memory into f30
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
fnmsub.s f27, f16, f30, f7, dyn # perform operation
fnmsub.s f27, f16, f30, f7, rdn # perform operation
fnmsub.s f27, f16, f30, f7, rmm # perform operation
fnmsub.s f27, f16, f30, f7, rne # perform operation
fnmsub.s f27, f16, f30, f7, rtz # perform operation
fnmsub.s f27, f16, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f16, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f16, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f16, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f16, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f16, f30, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3f800000)
li x26, 0x9b13f2ba6eadb504 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0xf36fcf76f9c74a9f # load x3 with value 0xf36fcf76f9c74a9f
sw x3, 0(x2) # store 0xf36fcf76f9c74a9f in memory
flw f27, 0(x2) # load 0xf36fcf76f9c74a9f from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
fnmsub.s f26, f2, f27, f16, dyn # perform operation
fnmsub.s f26, f2, f27, f16, rdn # perform operation
fnmsub.s f26, f2, f27, f16, rmm # perform operation
fnmsub.s f26, f2, f27, f16, rne # perform operation
fnmsub.s f26, f2, f27, f16, rtz # perform operation
fnmsub.s f26, f2, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f2, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f2, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f2, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f2, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f2, f27, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbf800000)
li x3, 0x94e264f26aa4ba75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0x9b08b27217d7a38c # load x3 with value 0x9b08b27217d7a38c
sw x3, 0(x2) # store 0x9b08b27217d7a38c in memory
flw f5, 0(x2) # load 0x9b08b27217d7a38c from memory into f5
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
fnmsub.s f3, f25, f5, f24, dyn # perform operation
fnmsub.s f3, f25, f5, f24, rdn # perform operation
fnmsub.s f3, f25, f5, f24, rmm # perform operation
fnmsub.s f3, f25, f5, f24, rne # perform operation
fnmsub.s f3, f25, f5, f24, rtz # perform operation
fnmsub.s f3, f25, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f25, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f25, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f25, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f25, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f25, f5, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3fc00000)
li x13, 0x1d384d4fbee6fa1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0xae40fd83140057cf # load x3 with value 0xae40fd83140057cf
sw x3, 0(x2) # store 0xae40fd83140057cf in memory
flw f25, 0(x2) # load 0xae40fd83140057cf from memory into f25
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
fnmsub.s f13, f27, f25, f7, dyn # perform operation
fnmsub.s f13, f27, f25, f7, rdn # perform operation
fnmsub.s f13, f27, f25, f7, rmm # perform operation
fnmsub.s f13, f27, f25, f7, rne # perform operation
fnmsub.s f13, f27, f25, f7, rtz # perform operation
fnmsub.s f13, f27, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f27, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f27, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f27, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f27, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f27, f25, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbfc00000)
li x21, 0x006ee9a382fcb5c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0x408211029489a59d # load x3 with value 0x408211029489a59d
sw x3, 0(x2) # store 0x408211029489a59d in memory
flw f7, 0(x2) # load 0x408211029489a59d from memory into f7
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
fnmsub.s f21, f23, f7, f9, dyn # perform operation
fnmsub.s f21, f23, f7, f9, rdn # perform operation
fnmsub.s f21, f23, f7, f9, rmm # perform operation
fnmsub.s f21, f23, f7, f9, rne # perform operation
fnmsub.s f21, f23, f7, f9, rtz # perform operation
fnmsub.s f21, f23, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f23, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f23, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f23, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f23, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f23, f7, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x40000000)
li x2, 0x6889343e8d928c49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x4f75581b01560264 # load x3 with value 0x4f75581b01560264
sw x3, 0(x2) # store 0x4f75581b01560264 in memory
flw f19, 0(x2) # load 0x4f75581b01560264 from memory into f19
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
fnmsub.s f2, f14, f19, f31, dyn # perform operation
fnmsub.s f2, f14, f19, f31, rdn # perform operation
fnmsub.s f2, f14, f19, f31, rmm # perform operation
fnmsub.s f2, f14, f19, f31, rne # perform operation
fnmsub.s f2, f14, f19, f31, rtz # perform operation
fnmsub.s f2, f14, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f14, f19, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xc0000000)
li x2, 0x54c60c959fa9fc22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0xa21b249621cd3aeb # load x3 with value 0xa21b249621cd3aeb
sw x3, 0(x2) # store 0xa21b249621cd3aeb in memory
flw f28, 0(x2) # load 0xa21b249621cd3aeb from memory into f28
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
fnmsub.s f2, f8, f28, f16, dyn # perform operation
fnmsub.s f2, f8, f28, f16, rdn # perform operation
fnmsub.s f2, f8, f28, f16, rmm # perform operation
fnmsub.s f2, f8, f28, f16, rne # perform operation
fnmsub.s f2, f8, f28, f16, rtz # perform operation
fnmsub.s f2, f8, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f8, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f8, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f8, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f8, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f8, f28, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x800000)
li x29, 0x55100003072d6aec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0x418fd938e9ad25e5 # load x3 with value 0x418fd938e9ad25e5
sw x3, 0(x2) # store 0x418fd938e9ad25e5 in memory
flw f28, 0(x2) # load 0x418fd938e9ad25e5 from memory into f28
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
fnmsub.s f29, f13, f28, f1, dyn # perform operation
fnmsub.s f29, f13, f28, f1, rdn # perform operation
fnmsub.s f29, f13, f28, f1, rmm # perform operation
fnmsub.s f29, f13, f28, f1, rne # perform operation
fnmsub.s f29, f13, f28, f1, rtz # perform operation
fnmsub.s f29, f13, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f13, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f13, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f13, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f13, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f13, f28, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80800000)
li x20, 0xc6f73b63e90c4061 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0x158b915e1a6fb8e5 # load x3 with value 0x158b915e1a6fb8e5
sw x3, 0(x2) # store 0x158b915e1a6fb8e5 in memory
flw f31, 0(x2) # load 0x158b915e1a6fb8e5 from memory into f31
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
fnmsub.s f20, f13, f31, f4, dyn # perform operation
fnmsub.s f20, f13, f31, f4, rdn # perform operation
fnmsub.s f20, f13, f31, f4, rmm # perform operation
fnmsub.s f20, f13, f31, f4, rne # perform operation
fnmsub.s f20, f13, f31, f4, rtz # perform operation
fnmsub.s f20, f13, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f13, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f13, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f13, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f13, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f13, f31, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f7fffff)
li x11, 0xb53cd26673011ecb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0x9b4e426d6d3a283c # load x3 with value 0x9b4e426d6d3a283c
sw x3, 0(x2) # store 0x9b4e426d6d3a283c in memory
flw f15, 0(x2) # load 0x9b4e426d6d3a283c from memory into f15
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
fnmsub.s f11, f22, f15, f28, dyn # perform operation
fnmsub.s f11, f22, f15, f28, rdn # perform operation
fnmsub.s f11, f22, f15, f28, rmm # perform operation
fnmsub.s f11, f22, f15, f28, rne # perform operation
fnmsub.s f11, f22, f15, f28, rtz # perform operation
fnmsub.s f11, f22, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f22, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f22, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f22, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f22, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f22, f15, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff7fffff)
li x7, 0xe19f0fc03ddf3486 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
li x3, 0xf84e38f53635c791 # load x3 with value 0xf84e38f53635c791
sw x3, 0(x2) # store 0xf84e38f53635c791 in memory
flw f19, 0(x2) # load 0xf84e38f53635c791 from memory into f19
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
fnmsub.s f7, f31, f19, f18, dyn # perform operation
fnmsub.s f7, f31, f19, f18, rdn # perform operation
fnmsub.s f7, f31, f19, f18, rmm # perform operation
fnmsub.s f7, f31, f19, f18, rne # perform operation
fnmsub.s f7, f31, f19, f18, rtz # perform operation
fnmsub.s f7, f31, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f31, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f31, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f31, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f31, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f31, f19, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffff)
li x30, 0x08f9685403887672 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
li x3, 0xae136f942755b46f # load x3 with value 0xae136f942755b46f
sw x3, 0(x2) # store 0xae136f942755b46f in memory
flw f31, 0(x2) # load 0xae136f942755b46f from memory into f31
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fnmsub.s f30, f17, f31, f14, dyn # perform operation
fnmsub.s f30, f17, f31, f14, rdn # perform operation
fnmsub.s f30, f17, f31, f14, rmm # perform operation
fnmsub.s f30, f17, f31, f14, rne # perform operation
fnmsub.s f30, f17, f31, f14, rtz # perform operation
fnmsub.s f30, f17, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f17, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f17, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f17, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f17, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f17, f31, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x807fffff)
li x27, 0x2be336dbb4898976 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0xf4dd9afc0ec9e0ca # load x3 with value 0xf4dd9afc0ec9e0ca
sw x3, 0(x2) # store 0xf4dd9afc0ec9e0ca in memory
flw f6, 0(x2) # load 0xf4dd9afc0ec9e0ca from memory into f6
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
fnmsub.s f27, f30, f6, f16, dyn # perform operation
fnmsub.s f27, f30, f6, f16, rdn # perform operation
fnmsub.s f27, f30, f6, f16, rmm # perform operation
fnmsub.s f27, f30, f6, f16, rne # perform operation
fnmsub.s f27, f30, f6, f16, rtz # perform operation
fnmsub.s f27, f30, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f30, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f30, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f30, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f30, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f30, f6, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x400000)
li x11, 0x59a4d4395de61587 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0xdccd4f6b41ccb5eb # load x3 with value 0xdccd4f6b41ccb5eb
sw x3, 0(x2) # store 0xdccd4f6b41ccb5eb in memory
flw f1, 0(x2) # load 0xdccd4f6b41ccb5eb from memory into f1
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
fnmsub.s f11, f6, f1, f9, dyn # perform operation
fnmsub.s f11, f6, f1, f9, rdn # perform operation
fnmsub.s f11, f6, f1, f9, rmm # perform operation
fnmsub.s f11, f6, f1, f9, rne # perform operation
fnmsub.s f11, f6, f1, f9, rtz # perform operation
fnmsub.s f11, f6, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f6, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f6, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f6, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f6, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f6, f1, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80400000)
li x1, 0x74a9cd0302d10515 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0x253c4738cc157b1a # load x3 with value 0x253c4738cc157b1a
sw x3, 0(x2) # store 0x253c4738cc157b1a in memory
flw f31, 0(x2) # load 0x253c4738cc157b1a from memory into f31
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fnmsub.s f1, f5, f31, f28, dyn # perform operation
fnmsub.s f1, f5, f31, f28, rdn # perform operation
fnmsub.s f1, f5, f31, f28, rmm # perform operation
fnmsub.s f1, f5, f31, f28, rne # perform operation
fnmsub.s f1, f5, f31, f28, rtz # perform operation
fnmsub.s f1, f5, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f5, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f5, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f5, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f5, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f5, f31, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x1)
li x26, 0xfd9c9a71ce01409f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0xc45f117e26bc93e6 # load x3 with value 0xc45f117e26bc93e6
sw x3, 0(x2) # store 0xc45f117e26bc93e6 in memory
flw f22, 0(x2) # load 0xc45f117e26bc93e6 from memory into f22
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
fnmsub.s f26, f19, f22, f15, dyn # perform operation
fnmsub.s f26, f19, f22, f15, rdn # perform operation
fnmsub.s f26, f19, f22, f15, rmm # perform operation
fnmsub.s f26, f19, f22, f15, rne # perform operation
fnmsub.s f26, f19, f22, f15, rtz # perform operation
fnmsub.s f26, f19, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f19, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f19, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f19, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f19, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f19, f22, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000001)
li x1, 0xf2774223dd7e361f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
li x3, 0xb61d2f0ef3fd6e90 # load x3 with value 0xb61d2f0ef3fd6e90
sw x3, 0(x2) # store 0xb61d2f0ef3fd6e90 in memory
flw f11, 0(x2) # load 0xb61d2f0ef3fd6e90 from memory into f11
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
fnmsub.s f1, f15, f11, f6, dyn # perform operation
fnmsub.s f1, f15, f11, f6, rdn # perform operation
fnmsub.s f1, f15, f11, f6, rmm # perform operation
fnmsub.s f1, f15, f11, f6, rne # perform operation
fnmsub.s f1, f15, f11, f6, rtz # perform operation
fnmsub.s f1, f15, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f15, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f15, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f15, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f15, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f15, f11, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800000)
li x9, 0x7eb75adfc1a4c8b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x77aef9a2679b9bc3 # load x3 with value 0x77aef9a2679b9bc3
sw x3, 0(x2) # store 0x77aef9a2679b9bc3 in memory
flw f16, 0(x2) # load 0x77aef9a2679b9bc3 from memory into f16
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
fnmsub.s f9, f4, f16, f14, dyn # perform operation
fnmsub.s f9, f4, f16, f14, rdn # perform operation
fnmsub.s f9, f4, f16, f14, rmm # perform operation
fnmsub.s f9, f4, f16, f14, rne # perform operation
fnmsub.s f9, f4, f16, f14, rtz # perform operation
fnmsub.s f9, f4, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f4, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f4, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f4, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f4, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f4, f16, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff800000)
li x20, 0xf2fd44f146fe54af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0x23f4616444104f4e # load x3 with value 0x23f4616444104f4e
sw x3, 0(x2) # store 0x23f4616444104f4e in memory
flw f23, 0(x2) # load 0x23f4616444104f4e from memory into f23
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
fnmsub.s f20, f8, f23, f31, dyn # perform operation
fnmsub.s f20, f8, f23, f31, rdn # perform operation
fnmsub.s f20, f8, f23, f31, rmm # perform operation
fnmsub.s f20, f8, f23, f31, rne # perform operation
fnmsub.s f20, f8, f23, f31, rtz # perform operation
fnmsub.s f20, f8, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f8, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f8, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f8, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f8, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f8, f23, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fc00000)
li x24, 0x5220d6b234687e7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0xe886dc246358675e # load x3 with value 0xe886dc246358675e
sw x3, 0(x2) # store 0xe886dc246358675e in memory
flw f3, 0(x2) # load 0xe886dc246358675e from memory into f3
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fnmsub.s f24, f27, f3, f16, dyn # perform operation
fnmsub.s f24, f27, f3, f16, rdn # perform operation
fnmsub.s f24, f27, f3, f16, rmm # perform operation
fnmsub.s f24, f27, f3, f16, rne # perform operation
fnmsub.s f24, f27, f3, f16, rtz # perform operation
fnmsub.s f24, f27, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f27, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f27, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f27, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f27, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f27, f3, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffffff)
li x2, 0xf2b9171f067de11e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0xd52590fac3666df0 # load x3 with value 0xd52590fac3666df0
sw x3, 0(x2) # store 0xd52590fac3666df0 in memory
flw f9, 0(x2) # load 0xd52590fac3666df0 from memory into f9
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fnmsub.s f2, f27, f9, f20, dyn # perform operation
fnmsub.s f2, f27, f9, f20, rdn # perform operation
fnmsub.s f2, f27, f9, f20, rmm # perform operation
fnmsub.s f2, f27, f9, f20, rne # perform operation
fnmsub.s f2, f27, f9, f20, rtz # perform operation
fnmsub.s f2, f27, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f27, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f27, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f27, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f27, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f27, f9, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800001)
li x28, 0xbeff2683beeddc02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0x26d1508bd40e4640 # load x3 with value 0x26d1508bd40e4640
sw x3, 0(x2) # store 0x26d1508bd40e4640 in memory
flw f26, 0(x2) # load 0x26d1508bd40e4640 from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fnmsub.s f28, f11, f26, f29, dyn # perform operation
fnmsub.s f28, f11, f26, f29, rdn # perform operation
fnmsub.s f28, f11, f26, f29, rmm # perform operation
fnmsub.s f28, f11, f26, f29, rne # perform operation
fnmsub.s f28, f11, f26, f29, rtz # perform operation
fnmsub.s f28, f11, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f11, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f11, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f11, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f11, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f11, f26, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fbfffff)
li x24, 0x69a5333a73821822 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0x287f9daac8a0f6cb # load x3 with value 0x287f9daac8a0f6cb
sw x3, 0(x2) # store 0x287f9daac8a0f6cb in memory
flw f9, 0(x2) # load 0x287f9daac8a0f6cb from memory into f9
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
fnmsub.s f24, f2, f9, f14, dyn # perform operation
fnmsub.s f24, f2, f9, f14, rdn # perform operation
fnmsub.s f24, f2, f9, f14, rmm # perform operation
fnmsub.s f24, f2, f9, f14, rne # perform operation
fnmsub.s f24, f2, f9, f14, rtz # perform operation
fnmsub.s f24, f2, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f2, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f2, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f2, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f2, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f2, f9, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7ef8654f)
li x15, 0xcdbd92a4ad849e8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0xab3252eae5b27ac5 # load x3 with value 0xab3252eae5b27ac5
sw x3, 0(x2) # store 0xab3252eae5b27ac5 in memory
flw f10, 0(x2) # load 0xab3252eae5b27ac5 from memory into f10
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fnmsub.s f15, f26, f10, f1, dyn # perform operation
fnmsub.s f15, f26, f10, f1, rdn # perform operation
fnmsub.s f15, f26, f10, f1, rmm # perform operation
fnmsub.s f15, f26, f10, f1, rne # perform operation
fnmsub.s f15, f26, f10, f1, rtz # perform operation
fnmsub.s f15, f26, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f26, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f26, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f26, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f26, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f26, f10, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x813d9ab0)
li x27, 0x8df28cd8a116dc21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
li x3, 0xecac750a3684ab21 # load x3 with value 0xecac750a3684ab21
sw x3, 0(x2) # store 0xecac750a3684ab21 in memory
flw f1, 0(x2) # load 0xecac750a3684ab21 from memory into f1
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
fnmsub.s f27, f20, f1, f16, dyn # perform operation
fnmsub.s f27, f20, f1, f16, rdn # perform operation
fnmsub.s f27, f20, f1, f16, rmm # perform operation
fnmsub.s f27, f20, f1, f16, rne # perform operation
fnmsub.s f27, f20, f1, f16, rtz # perform operation
fnmsub.s f27, f20, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f20, f1, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x0)
li x25, 0xe3602aa849e1333a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
li x3, 0xfe79710c1f95267f # load x3 with value 0xfe79710c1f95267f
sw x3, 0(x2) # store 0xfe79710c1f95267f in memory
flw f19, 0(x2) # load 0xfe79710c1f95267f from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fnmsub.s f25, f3, f19, f13, dyn # perform operation
fnmsub.s f25, f3, f19, f13, rdn # perform operation
fnmsub.s f25, f3, f19, f13, rmm # perform operation
fnmsub.s f25, f3, f19, f13, rne # perform operation
fnmsub.s f25, f3, f19, f13, rtz # perform operation
fnmsub.s f25, f3, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f3, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f3, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f3, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f3, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f3, f19, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000000)
li x9, 0xfe748f26c5b4cfae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0xe2b5e2b11ea7e2ae # load x3 with value 0xe2b5e2b11ea7e2ae
sw x3, 0(x2) # store 0xe2b5e2b11ea7e2ae in memory
flw f12, 0(x2) # load 0xe2b5e2b11ea7e2ae from memory into f12
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
fnmsub.s f9, f6, f12, f15, dyn # perform operation
fnmsub.s f9, f6, f12, f15, rdn # perform operation
fnmsub.s f9, f6, f12, f15, rmm # perform operation
fnmsub.s f9, f6, f12, f15, rne # perform operation
fnmsub.s f9, f6, f12, f15, rtz # perform operation
fnmsub.s f9, f6, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f6, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f6, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f6, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f6, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f6, f12, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3f800000)
li x9, 0xb1a3deda22cc27fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0xd40e621987ec74ec # load x3 with value 0xd40e621987ec74ec
sw x3, 0(x2) # store 0xd40e621987ec74ec in memory
flw f8, 0(x2) # load 0xd40e621987ec74ec from memory into f8
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fnmsub.s f9, f18, f8, f27, dyn # perform operation
fnmsub.s f9, f18, f8, f27, rdn # perform operation
fnmsub.s f9, f18, f8, f27, rmm # perform operation
fnmsub.s f9, f18, f8, f27, rne # perform operation
fnmsub.s f9, f18, f8, f27, rtz # perform operation
fnmsub.s f9, f18, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f18, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f18, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f18, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f18, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f18, f8, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbf800000)
li x10, 0x6095be80f33405a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0x296ee5164cce4f05 # load x3 with value 0x296ee5164cce4f05
sw x3, 0(x2) # store 0x296ee5164cce4f05 in memory
flw f23, 0(x2) # load 0x296ee5164cce4f05 from memory into f23
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
fnmsub.s f10, f16, f23, f6, dyn # perform operation
fnmsub.s f10, f16, f23, f6, rdn # perform operation
fnmsub.s f10, f16, f23, f6, rmm # perform operation
fnmsub.s f10, f16, f23, f6, rne # perform operation
fnmsub.s f10, f16, f23, f6, rtz # perform operation
fnmsub.s f10, f16, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f16, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f16, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f16, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f16, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f16, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3fc00000)
li x31, 0xf39e74f3000f1bd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
li x3, 0x338d4c4c071a8662 # load x3 with value 0x338d4c4c071a8662
sw x3, 0(x2) # store 0x338d4c4c071a8662 in memory
flw f14, 0(x2) # load 0x338d4c4c071a8662 from memory into f14
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
fnmsub.s f31, f23, f14, f15, dyn # perform operation
fnmsub.s f31, f23, f14, f15, rdn # perform operation
fnmsub.s f31, f23, f14, f15, rmm # perform operation
fnmsub.s f31, f23, f14, f15, rne # perform operation
fnmsub.s f31, f23, f14, f15, rtz # perform operation
fnmsub.s f31, f23, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f23, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f23, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f23, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f23, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f23, f14, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbfc00000)
li x31, 0x51ea97782b650f39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0x904fc42973b79b87 # load x3 with value 0x904fc42973b79b87
sw x3, 0(x2) # store 0x904fc42973b79b87 in memory
flw f5, 0(x2) # load 0x904fc42973b79b87 from memory into f5
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
fnmsub.s f31, f1, f5, f9, dyn # perform operation
fnmsub.s f31, f1, f5, f9, rdn # perform operation
fnmsub.s f31, f1, f5, f9, rmm # perform operation
fnmsub.s f31, f1, f5, f9, rne # perform operation
fnmsub.s f31, f1, f5, f9, rtz # perform operation
fnmsub.s f31, f1, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f1, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f1, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f1, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f1, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f1, f5, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x40000000)
li x19, 0xf156f3a63995ffd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0x683ec8692441b921 # load x3 with value 0x683ec8692441b921
sw x3, 0(x2) # store 0x683ec8692441b921 in memory
flw f27, 0(x2) # load 0x683ec8692441b921 from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
fnmsub.s f19, f5, f27, f25, dyn # perform operation
fnmsub.s f19, f5, f27, f25, rdn # perform operation
fnmsub.s f19, f5, f27, f25, rmm # perform operation
fnmsub.s f19, f5, f27, f25, rne # perform operation
fnmsub.s f19, f5, f27, f25, rtz # perform operation
fnmsub.s f19, f5, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f5, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f5, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f5, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f5, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f5, f27, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xc0000000)
li x20, 0xce853d213025a3b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0x29b9f7fb9c535890 # load x3 with value 0x29b9f7fb9c535890
sw x3, 0(x2) # store 0x29b9f7fb9c535890 in memory
flw f6, 0(x2) # load 0x29b9f7fb9c535890 from memory into f6
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
fnmsub.s f20, f11, f6, f19, dyn # perform operation
fnmsub.s f20, f11, f6, f19, rdn # perform operation
fnmsub.s f20, f11, f6, f19, rmm # perform operation
fnmsub.s f20, f11, f6, f19, rne # perform operation
fnmsub.s f20, f11, f6, f19, rtz # perform operation
fnmsub.s f20, f11, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f11, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f11, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f11, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f11, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f11, f6, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x800000)
li x18, 0xb6475facda21c607 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
li x3, 0xf30092611db5eb60 # load x3 with value 0xf30092611db5eb60
sw x3, 0(x2) # store 0xf30092611db5eb60 in memory
flw f5, 0(x2) # load 0xf30092611db5eb60 from memory into f5
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
fnmsub.s f18, f23, f5, f7, dyn # perform operation
fnmsub.s f18, f23, f5, f7, rdn # perform operation
fnmsub.s f18, f23, f5, f7, rmm # perform operation
fnmsub.s f18, f23, f5, f7, rne # perform operation
fnmsub.s f18, f23, f5, f7, rtz # perform operation
fnmsub.s f18, f23, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f23, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f23, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f23, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f23, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f23, f5, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80800000)
li x2, 0x4178925d456789ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
li x3, 0xd0469d9bec5bb162 # load x3 with value 0xd0469d9bec5bb162
sw x3, 0(x2) # store 0xd0469d9bec5bb162 in memory
flw f25, 0(x2) # load 0xd0469d9bec5bb162 from memory into f25
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
fnmsub.s f2, f20, f25, f6, dyn # perform operation
fnmsub.s f2, f20, f25, f6, rdn # perform operation
fnmsub.s f2, f20, f25, f6, rmm # perform operation
fnmsub.s f2, f20, f25, f6, rne # perform operation
fnmsub.s f2, f20, f25, f6, rtz # perform operation
fnmsub.s f2, f20, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f20, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f20, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f20, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f20, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f20, f25, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f7fffff)
li x18, 0xba2a7ea60f2f02c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
li x3, 0x62b80bf409b22ec4 # load x3 with value 0x62b80bf409b22ec4
sw x3, 0(x2) # store 0x62b80bf409b22ec4 in memory
flw f4, 0(x2) # load 0x62b80bf409b22ec4 from memory into f4
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
fnmsub.s f18, f19, f4, f21, dyn # perform operation
fnmsub.s f18, f19, f4, f21, rdn # perform operation
fnmsub.s f18, f19, f4, f21, rmm # perform operation
fnmsub.s f18, f19, f4, f21, rne # perform operation
fnmsub.s f18, f19, f4, f21, rtz # perform operation
fnmsub.s f18, f19, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f19, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f19, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f19, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f19, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f19, f4, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff7fffff)
li x4, 0x6826589f53e2e7a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0xd97dbaa89a34503f # load x3 with value 0xd97dbaa89a34503f
sw x3, 0(x2) # store 0xd97dbaa89a34503f in memory
flw f28, 0(x2) # load 0xd97dbaa89a34503f from memory into f28
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
fnmsub.s f4, f1, f28, f8, dyn # perform operation
fnmsub.s f4, f1, f28, f8, rdn # perform operation
fnmsub.s f4, f1, f28, f8, rmm # perform operation
fnmsub.s f4, f1, f28, f8, rne # perform operation
fnmsub.s f4, f1, f28, f8, rtz # perform operation
fnmsub.s f4, f1, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f1, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f1, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f1, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f1, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f1, f28, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffff)
li x30, 0x056e003ff4fc7308 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0x33b484e4bab0174b # load x3 with value 0x33b484e4bab0174b
sw x3, 0(x2) # store 0x33b484e4bab0174b in memory
flw f22, 0(x2) # load 0x33b484e4bab0174b from memory into f22
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fnmsub.s f30, f5, f22, f25, dyn # perform operation
fnmsub.s f30, f5, f22, f25, rdn # perform operation
fnmsub.s f30, f5, f22, f25, rmm # perform operation
fnmsub.s f30, f5, f22, f25, rne # perform operation
fnmsub.s f30, f5, f22, f25, rtz # perform operation
fnmsub.s f30, f5, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f5, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f5, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f5, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f5, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f5, f22, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x807fffff)
li x15, 0x05a4039e896c3f52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0x71d9268cf8509d5a # load x3 with value 0x71d9268cf8509d5a
sw x3, 0(x2) # store 0x71d9268cf8509d5a in memory
flw f16, 0(x2) # load 0x71d9268cf8509d5a from memory into f16
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
fnmsub.s f15, f5, f16, f20, dyn # perform operation
fnmsub.s f15, f5, f16, f20, rdn # perform operation
fnmsub.s f15, f5, f16, f20, rmm # perform operation
fnmsub.s f15, f5, f16, f20, rne # perform operation
fnmsub.s f15, f5, f16, f20, rtz # perform operation
fnmsub.s f15, f5, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f5, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f5, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f5, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f5, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f5, f16, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x400000)
li x31, 0x096beabbe020f1ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0x19293fc95101f5bb # load x3 with value 0x19293fc95101f5bb
sw x3, 0(x2) # store 0x19293fc95101f5bb in memory
flw f26, 0(x2) # load 0x19293fc95101f5bb from memory into f26
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
fnmsub.s f31, f16, f26, f20, dyn # perform operation
fnmsub.s f31, f16, f26, f20, rdn # perform operation
fnmsub.s f31, f16, f26, f20, rmm # perform operation
fnmsub.s f31, f16, f26, f20, rne # perform operation
fnmsub.s f31, f16, f26, f20, rtz # perform operation
fnmsub.s f31, f16, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f16, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f16, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f16, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f16, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f16, f26, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80400000)
li x4, 0x0d728b258ebdb8bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0x4447c326ef171f2c # load x3 with value 0x4447c326ef171f2c
sw x3, 0(x2) # store 0x4447c326ef171f2c in memory
flw f16, 0(x2) # load 0x4447c326ef171f2c from memory into f16
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
fnmsub.s f4, f18, f16, f22, dyn # perform operation
fnmsub.s f4, f18, f16, f22, rdn # perform operation
fnmsub.s f4, f18, f16, f22, rmm # perform operation
fnmsub.s f4, f18, f16, f22, rne # perform operation
fnmsub.s f4, f18, f16, f22, rtz # perform operation
fnmsub.s f4, f18, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f18, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f18, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f18, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f18, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f18, f16, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x1)
li x20, 0xf21448c60d92e31d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
li x3, 0xb0a50960e67fe73a # load x3 with value 0xb0a50960e67fe73a
sw x3, 0(x2) # store 0xb0a50960e67fe73a in memory
flw f14, 0(x2) # load 0xb0a50960e67fe73a from memory into f14
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
fnmsub.s f20, f31, f14, f15, dyn # perform operation
fnmsub.s f20, f31, f14, f15, rdn # perform operation
fnmsub.s f20, f31, f14, f15, rmm # perform operation
fnmsub.s f20, f31, f14, f15, rne # perform operation
fnmsub.s f20, f31, f14, f15, rtz # perform operation
fnmsub.s f20, f31, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f31, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f31, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f31, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f31, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f31, f14, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000001)
li x6, 0x17b9da1a1e8591bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0xe91f44e1cae384ff # load x3 with value 0xe91f44e1cae384ff
sw x3, 0(x2) # store 0xe91f44e1cae384ff in memory
flw f27, 0(x2) # load 0xe91f44e1cae384ff from memory into f27
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
fnmsub.s f6, f30, f27, f25, dyn # perform operation
fnmsub.s f6, f30, f27, f25, rdn # perform operation
fnmsub.s f6, f30, f27, f25, rmm # perform operation
fnmsub.s f6, f30, f27, f25, rne # perform operation
fnmsub.s f6, f30, f27, f25, rtz # perform operation
fnmsub.s f6, f30, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f30, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f30, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f30, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f30, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f30, f27, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800000)
li x27, 0x7e9db8005336f4c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0x25fd2004730807ce # load x3 with value 0x25fd2004730807ce
sw x3, 0(x2) # store 0x25fd2004730807ce in memory
flw f16, 0(x2) # load 0x25fd2004730807ce from memory into f16
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
fnmsub.s f27, f5, f16, f21, dyn # perform operation
fnmsub.s f27, f5, f16, f21, rdn # perform operation
fnmsub.s f27, f5, f16, f21, rmm # perform operation
fnmsub.s f27, f5, f16, f21, rne # perform operation
fnmsub.s f27, f5, f16, f21, rtz # perform operation
fnmsub.s f27, f5, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f5, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f5, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f5, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f5, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f5, f16, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff800000)
li x20, 0xb849ce581f9b72b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0xf9c50e5e6a3e5fb6 # load x3 with value 0xf9c50e5e6a3e5fb6
sw x3, 0(x2) # store 0xf9c50e5e6a3e5fb6 in memory
flw f7, 0(x2) # load 0xf9c50e5e6a3e5fb6 from memory into f7
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
fnmsub.s f20, f8, f7, f16, dyn # perform operation
fnmsub.s f20, f8, f7, f16, rdn # perform operation
fnmsub.s f20, f8, f7, f16, rmm # perform operation
fnmsub.s f20, f8, f7, f16, rne # perform operation
fnmsub.s f20, f8, f7, f16, rtz # perform operation
fnmsub.s f20, f8, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f8, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f8, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f8, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f8, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f8, f7, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fc00000)
li x28, 0xf683c97fd65af678 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
li x3, 0x51b89382009386a9 # load x3 with value 0x51b89382009386a9
sw x3, 0(x2) # store 0x51b89382009386a9 in memory
flw f5, 0(x2) # load 0x51b89382009386a9 from memory into f5
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
fnmsub.s f28, f20, f5, f29, dyn # perform operation
fnmsub.s f28, f20, f5, f29, rdn # perform operation
fnmsub.s f28, f20, f5, f29, rmm # perform operation
fnmsub.s f28, f20, f5, f29, rne # perform operation
fnmsub.s f28, f20, f5, f29, rtz # perform operation
fnmsub.s f28, f20, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f20, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f20, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f20, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f20, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f20, f5, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffffff)
li x27, 0x7fdae8f03f87b2a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x52c55f4c0737d853 # load x3 with value 0x52c55f4c0737d853
sw x3, 0(x2) # store 0x52c55f4c0737d853 in memory
flw f18, 0(x2) # load 0x52c55f4c0737d853 from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
fnmsub.s f27, f8, f18, f16, dyn # perform operation
fnmsub.s f27, f8, f18, f16, rdn # perform operation
fnmsub.s f27, f8, f18, f16, rmm # perform operation
fnmsub.s f27, f8, f18, f16, rne # perform operation
fnmsub.s f27, f8, f18, f16, rtz # perform operation
fnmsub.s f27, f8, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f8, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f8, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f8, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f8, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f8, f18, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800001)
li x29, 0x490e64893b2b372c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
li x3, 0x20a4f08e8511dbe0 # load x3 with value 0x20a4f08e8511dbe0
sw x3, 0(x2) # store 0x20a4f08e8511dbe0 in memory
flw f6, 0(x2) # load 0x20a4f08e8511dbe0 from memory into f6
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
fnmsub.s f29, f31, f6, f7, dyn # perform operation
fnmsub.s f29, f31, f6, f7, rdn # perform operation
fnmsub.s f29, f31, f6, f7, rmm # perform operation
fnmsub.s f29, f31, f6, f7, rne # perform operation
fnmsub.s f29, f31, f6, f7, rtz # perform operation
fnmsub.s f29, f31, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f31, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f31, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f31, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f31, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f31, f6, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fbfffff)
li x20, 0x9d85c87988669dcd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
li x3, 0x13eec9217b2cca53 # load x3 with value 0x13eec9217b2cca53
sw x3, 0(x2) # store 0x13eec9217b2cca53 in memory
flw f10, 0(x2) # load 0x13eec9217b2cca53 from memory into f10
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
fnmsub.s f20, f31, f10, f23, dyn # perform operation
fnmsub.s f20, f31, f10, f23, rdn # perform operation
fnmsub.s f20, f31, f10, f23, rmm # perform operation
fnmsub.s f20, f31, f10, f23, rne # perform operation
fnmsub.s f20, f31, f10, f23, rtz # perform operation
fnmsub.s f20, f31, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f31, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f31, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f31, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f31, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f31, f10, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7ef8654f)
li x14, 0xe6629942a4494633 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0xff824cc231903552 # load x3 with value 0xff824cc231903552
sw x3, 0(x2) # store 0xff824cc231903552 in memory
flw f30, 0(x2) # load 0xff824cc231903552 from memory into f30
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
fnmsub.s f14, f1, f30, f11, dyn # perform operation
fnmsub.s f14, f1, f30, f11, rdn # perform operation
fnmsub.s f14, f1, f30, f11, rmm # perform operation
fnmsub.s f14, f1, f30, f11, rne # perform operation
fnmsub.s f14, f1, f30, f11, rtz # perform operation
fnmsub.s f14, f1, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f1, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f1, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f1, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f1, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f1, f30, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x813d9ab0)
li x27, 0xefb1376ad23502f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0xa6cc24288cba82af # load x3 with value 0xa6cc24288cba82af
sw x3, 0(x2) # store 0xa6cc24288cba82af in memory
flw f21, 0(x2) # load 0xa6cc24288cba82af from memory into f21
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
fnmsub.s f27, f22, f21, f16, dyn # perform operation
fnmsub.s f27, f22, f21, f16, rdn # perform operation
fnmsub.s f27, f22, f21, f16, rmm # perform operation
fnmsub.s f27, f22, f21, f16, rne # perform operation
fnmsub.s f27, f22, f21, f16, rtz # perform operation
fnmsub.s f27, f22, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f22, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f22, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f22, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f22, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f22, f21, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
li x24, 0x5b3be19394789104 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
li x3, 0x35af0baa9d6e0457 # load x3 with value 0x35af0baa9d6e0457
sw x3, 0(x2) # store 0x35af0baa9d6e0457 in memory
flw f16, 0(x2) # load 0x35af0baa9d6e0457 from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
fnmsub.s f24, f4, f16, f6, dyn # perform operation
fnmsub.s f24, f4, f16, f6, rdn # perform operation
fnmsub.s f24, f4, f16, f6, rmm # perform operation
fnmsub.s f24, f4, f16, f6, rne # perform operation
fnmsub.s f24, f4, f16, f6, rtz # perform operation
fnmsub.s f24, f4, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f4, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f4, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f4, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f4, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f4, f16, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000000)
li x25, 0xc9c31977f0c70357 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0xcf680c45470e3ce3 # load x3 with value 0xcf680c45470e3ce3
sw x3, 0(x2) # store 0xcf680c45470e3ce3 in memory
flw f1, 0(x2) # load 0xcf680c45470e3ce3 from memory into f1
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
fnmsub.s f25, f5, f1, f23, dyn # perform operation
fnmsub.s f25, f5, f1, f23, rdn # perform operation
fnmsub.s f25, f5, f1, f23, rmm # perform operation
fnmsub.s f25, f5, f1, f23, rne # perform operation
fnmsub.s f25, f5, f1, f23, rtz # perform operation
fnmsub.s f25, f5, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f5, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f5, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f5, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f5, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f5, f1, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3f800000)
li x7, 0xb8a3c1ed6fdc1b98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x9d75ec4b4b27c65c # load x3 with value 0x9d75ec4b4b27c65c
sw x3, 0(x2) # store 0x9d75ec4b4b27c65c in memory
flw f6, 0(x2) # load 0x9d75ec4b4b27c65c from memory into f6
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
fnmsub.s f7, f19, f6, f24, dyn # perform operation
fnmsub.s f7, f19, f6, f24, rdn # perform operation
fnmsub.s f7, f19, f6, f24, rmm # perform operation
fnmsub.s f7, f19, f6, f24, rne # perform operation
fnmsub.s f7, f19, f6, f24, rtz # perform operation
fnmsub.s f7, f19, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f19, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f19, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f19, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f19, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f19, f6, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbf800000)
li x20, 0x662bbe2ab9fd5e1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0x62df18c612c4c215 # load x3 with value 0x62df18c612c4c215
sw x3, 0(x2) # store 0x62df18c612c4c215 in memory
flw f28, 0(x2) # load 0x62df18c612c4c215 from memory into f28
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
fnmsub.s f20, f30, f28, f4, dyn # perform operation
fnmsub.s f20, f30, f28, f4, rdn # perform operation
fnmsub.s f20, f30, f28, f4, rmm # perform operation
fnmsub.s f20, f30, f28, f4, rne # perform operation
fnmsub.s f20, f30, f28, f4, rtz # perform operation
fnmsub.s f20, f30, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f30, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f30, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f30, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f30, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f30, f28, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3fc00000)
li x24, 0x1b581ed4d0fd221e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x71f042711553b6d2 # load x3 with value 0x71f042711553b6d2
sw x3, 0(x2) # store 0x71f042711553b6d2 in memory
flw f16, 0(x2) # load 0x71f042711553b6d2 from memory into f16
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
fnmsub.s f24, f27, f16, f21, dyn # perform operation
fnmsub.s f24, f27, f16, f21, rdn # perform operation
fnmsub.s f24, f27, f16, f21, rmm # perform operation
fnmsub.s f24, f27, f16, f21, rne # perform operation
fnmsub.s f24, f27, f16, f21, rtz # perform operation
fnmsub.s f24, f27, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f27, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f27, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f27, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f27, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f27, f16, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbfc00000)
li x29, 0xa1053d349a3df359 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x6519f969bc5f6e5b # load x3 with value 0x6519f969bc5f6e5b
sw x3, 0(x2) # store 0x6519f969bc5f6e5b in memory
flw f14, 0(x2) # load 0x6519f969bc5f6e5b from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
fnmsub.s f29, f15, f14, f11, dyn # perform operation
fnmsub.s f29, f15, f14, f11, rdn # perform operation
fnmsub.s f29, f15, f14, f11, rmm # perform operation
fnmsub.s f29, f15, f14, f11, rne # perform operation
fnmsub.s f29, f15, f14, f11, rtz # perform operation
fnmsub.s f29, f15, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f15, f14, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x40000000)
li x19, 0x4e28f14231ba6e5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x562f011d36f67474 # load x3 with value 0x562f011d36f67474
sw x3, 0(x2) # store 0x562f011d36f67474 in memory
flw f6, 0(x2) # load 0x562f011d36f67474 from memory into f6
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
fnmsub.s f19, f7, f6, f11, dyn # perform operation
fnmsub.s f19, f7, f6, f11, rdn # perform operation
fnmsub.s f19, f7, f6, f11, rmm # perform operation
fnmsub.s f19, f7, f6, f11, rne # perform operation
fnmsub.s f19, f7, f6, f11, rtz # perform operation
fnmsub.s f19, f7, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f7, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f7, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f7, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f7, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f7, f6, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc0000000)
li x7, 0x233fc5ad0a68593a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x269afe98430d17b3 # load x3 with value 0x269afe98430d17b3
sw x3, 0(x2) # store 0x269afe98430d17b3 in memory
flw f12, 0(x2) # load 0x269afe98430d17b3 from memory into f12
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
fnmsub.s f7, f21, f12, f24, dyn # perform operation
fnmsub.s f7, f21, f12, f24, rdn # perform operation
fnmsub.s f7, f21, f12, f24, rmm # perform operation
fnmsub.s f7, f21, f12, f24, rne # perform operation
fnmsub.s f7, f21, f12, f24, rtz # perform operation
fnmsub.s f7, f21, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f21, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f21, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f21, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f21, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f21, f12, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800000)
li x29, 0xbb527968de253f7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0x1773ddbf6e08d89e # load x3 with value 0x1773ddbf6e08d89e
sw x3, 0(x2) # store 0x1773ddbf6e08d89e in memory
flw f21, 0(x2) # load 0x1773ddbf6e08d89e from memory into f21
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
fnmsub.s f29, f8, f21, f25, dyn # perform operation
fnmsub.s f29, f8, f21, f25, rdn # perform operation
fnmsub.s f29, f8, f21, f25, rmm # perform operation
fnmsub.s f29, f8, f21, f25, rne # perform operation
fnmsub.s f29, f8, f21, f25, rtz # perform operation
fnmsub.s f29, f8, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f8, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f8, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f8, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f8, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f8, f21, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80800000)
li x27, 0xa16008f77171fcc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0xeae6edf8c2c08655 # load x3 with value 0xeae6edf8c2c08655
sw x3, 0(x2) # store 0xeae6edf8c2c08655 in memory
flw f20, 0(x2) # load 0xeae6edf8c2c08655 from memory into f20
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
fnmsub.s f27, f12, f20, f6, dyn # perform operation
fnmsub.s f27, f12, f20, f6, rdn # perform operation
fnmsub.s f27, f12, f20, f6, rmm # perform operation
fnmsub.s f27, f12, f20, f6, rne # perform operation
fnmsub.s f27, f12, f20, f6, rtz # perform operation
fnmsub.s f27, f12, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f12, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f12, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f12, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f12, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f12, f20, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f7fffff)
li x25, 0xcf22e0cfe7f477ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0xea3fbb7d698cf234 # load x3 with value 0xea3fbb7d698cf234
sw x3, 0(x2) # store 0xea3fbb7d698cf234 in memory
flw f28, 0(x2) # load 0xea3fbb7d698cf234 from memory into f28
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
fnmsub.s f25, f26, f28, f16, dyn # perform operation
fnmsub.s f25, f26, f28, f16, rdn # perform operation
fnmsub.s f25, f26, f28, f16, rmm # perform operation
fnmsub.s f25, f26, f28, f16, rne # perform operation
fnmsub.s f25, f26, f28, f16, rtz # perform operation
fnmsub.s f25, f26, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f26, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f26, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f26, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f26, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f26, f28, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff7fffff)
li x23, 0x7d98699513ee3f6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0x833c69f7074b101a # load x3 with value 0x833c69f7074b101a
sw x3, 0(x2) # store 0x833c69f7074b101a in memory
flw f6, 0(x2) # load 0x833c69f7074b101a from memory into f6
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
fnmsub.s f23, f11, f6, f1, dyn # perform operation
fnmsub.s f23, f11, f6, f1, rdn # perform operation
fnmsub.s f23, f11, f6, f1, rmm # perform operation
fnmsub.s f23, f11, f6, f1, rne # perform operation
fnmsub.s f23, f11, f6, f1, rtz # perform operation
fnmsub.s f23, f11, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f11, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f11, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f11, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f11, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f11, f6, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffff)
li x2, 0x1392b55936c151a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0x404b6deb58bd0a58 # load x3 with value 0x404b6deb58bd0a58
sw x3, 0(x2) # store 0x404b6deb58bd0a58 in memory
flw f18, 0(x2) # load 0x404b6deb58bd0a58 from memory into f18
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
fnmsub.s f2, f20, f18, f26, dyn # perform operation
fnmsub.s f2, f20, f18, f26, rdn # perform operation
fnmsub.s f2, f20, f18, f26, rmm # perform operation
fnmsub.s f2, f20, f18, f26, rne # perform operation
fnmsub.s f2, f20, f18, f26, rtz # perform operation
fnmsub.s f2, f20, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f20, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f20, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f20, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f20, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f20, f18, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x807fffff)
li x24, 0x3f2ca497c98a8260 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x731df0023c26d160 # load x3 with value 0x731df0023c26d160
sw x3, 0(x2) # store 0x731df0023c26d160 in memory
flw f31, 0(x2) # load 0x731df0023c26d160 from memory into f31
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
fnmsub.s f24, f27, f31, f19, dyn # perform operation
fnmsub.s f24, f27, f31, f19, rdn # perform operation
fnmsub.s f24, f27, f31, f19, rmm # perform operation
fnmsub.s f24, f27, f31, f19, rne # perform operation
fnmsub.s f24, f27, f31, f19, rtz # perform operation
fnmsub.s f24, f27, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f27, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f27, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f27, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f27, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f27, f31, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400000)
li x14, 0xea3ab44c7541af7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x93804ced6a6c18f8 # load x3 with value 0x93804ced6a6c18f8
sw x3, 0(x2) # store 0x93804ced6a6c18f8 in memory
flw f12, 0(x2) # load 0x93804ced6a6c18f8 from memory into f12
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
fnmsub.s f14, f26, f12, f4, dyn # perform operation
fnmsub.s f14, f26, f12, f4, rdn # perform operation
fnmsub.s f14, f26, f12, f4, rmm # perform operation
fnmsub.s f14, f26, f12, f4, rne # perform operation
fnmsub.s f14, f26, f12, f4, rtz # perform operation
fnmsub.s f14, f26, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f26, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f26, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f26, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f26, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f26, f12, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80400000)
li x13, 0x611d9506899664d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0x5a3114b194c7807 # load x3 with value 0x5a3114b194c7807
sw x3, 0(x2) # store 0x5a3114b194c7807 in memory
flw f15, 0(x2) # load 0x5a3114b194c7807 from memory into f15
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
fnmsub.s f13, f20, f15, f31, dyn # perform operation
fnmsub.s f13, f20, f15, f31, rdn # perform operation
fnmsub.s f13, f20, f15, f31, rmm # perform operation
fnmsub.s f13, f20, f15, f31, rne # perform operation
fnmsub.s f13, f20, f15, f31, rtz # perform operation
fnmsub.s f13, f20, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f20, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f20, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f20, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f20, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f20, f15, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
li x14, 0x31818fb65b64a42e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x24fdd787beba009c # load x3 with value 0x24fdd787beba009c
sw x3, 0(x2) # store 0x24fdd787beba009c in memory
flw f21, 0(x2) # load 0x24fdd787beba009c from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fnmsub.s f14, f10, f21, f25, dyn # perform operation
fnmsub.s f14, f10, f21, f25, rdn # perform operation
fnmsub.s f14, f10, f21, f25, rmm # perform operation
fnmsub.s f14, f10, f21, f25, rne # perform operation
fnmsub.s f14, f10, f21, f25, rtz # perform operation
fnmsub.s f14, f10, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f10, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f10, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f10, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f10, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f10, f21, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000001)
li x12, 0x12359de33ac0fa3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x4e09a17e08cd3237 # load x3 with value 0x4e09a17e08cd3237
sw x3, 0(x2) # store 0x4e09a17e08cd3237 in memory
flw f21, 0(x2) # load 0x4e09a17e08cd3237 from memory into f21
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
fnmsub.s f12, f15, f21, f26, dyn # perform operation
fnmsub.s f12, f15, f21, f26, rdn # perform operation
fnmsub.s f12, f15, f21, f26, rmm # perform operation
fnmsub.s f12, f15, f21, f26, rne # perform operation
fnmsub.s f12, f15, f21, f26, rtz # perform operation
fnmsub.s f12, f15, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f15, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f15, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f15, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f15, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f15, f21, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800000)
li x11, 0x78dd8e33c768d1da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0xe1ede3c8ca07d5d1 # load x3 with value 0xe1ede3c8ca07d5d1
sw x3, 0(x2) # store 0xe1ede3c8ca07d5d1 in memory
flw f10, 0(x2) # load 0xe1ede3c8ca07d5d1 from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
fnmsub.s f11, f14, f10, f4, dyn # perform operation
fnmsub.s f11, f14, f10, f4, rdn # perform operation
fnmsub.s f11, f14, f10, f4, rmm # perform operation
fnmsub.s f11, f14, f10, f4, rne # perform operation
fnmsub.s f11, f14, f10, f4, rtz # perform operation
fnmsub.s f11, f14, f10, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f14, f10, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f14, f10, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f14, f10, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f14, f10, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f14, f10, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff800000)
li x12, 0xf7d0b6047cfc7eee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0x62a93bcc30a02b63 # load x3 with value 0x62a93bcc30a02b63
sw x3, 0(x2) # store 0x62a93bcc30a02b63 in memory
flw f10, 0(x2) # load 0x62a93bcc30a02b63 from memory into f10
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fnmsub.s f12, f17, f10, f24, dyn # perform operation
fnmsub.s f12, f17, f10, f24, rdn # perform operation
fnmsub.s f12, f17, f10, f24, rmm # perform operation
fnmsub.s f12, f17, f10, f24, rne # perform operation
fnmsub.s f12, f17, f10, f24, rtz # perform operation
fnmsub.s f12, f17, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f17, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f17, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f17, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f17, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f17, f10, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fc00000)
li x16, 0x06a6a4d90eb8eae8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0xa1cb8f64d061f050 # load x3 with value 0xa1cb8f64d061f050
sw x3, 0(x2) # store 0xa1cb8f64d061f050 in memory
flw f25, 0(x2) # load 0xa1cb8f64d061f050 from memory into f25
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fnmsub.s f16, f20, f25, f14, dyn # perform operation
fnmsub.s f16, f20, f25, f14, rdn # perform operation
fnmsub.s f16, f20, f25, f14, rmm # perform operation
fnmsub.s f16, f20, f25, f14, rne # perform operation
fnmsub.s f16, f20, f25, f14, rtz # perform operation
fnmsub.s f16, f20, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f20, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f20, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f20, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f20, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f20, f25, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffff)
li x8, 0x28bdf2dadd85e07b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0xf3a5255f8d1499c1 # load x3 with value 0xf3a5255f8d1499c1
sw x3, 0(x2) # store 0xf3a5255f8d1499c1 in memory
flw f19, 0(x2) # load 0xf3a5255f8d1499c1 from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
fnmsub.s f8, f23, f19, f28, dyn # perform operation
fnmsub.s f8, f23, f19, f28, rdn # perform operation
fnmsub.s f8, f23, f19, f28, rmm # perform operation
fnmsub.s f8, f23, f19, f28, rne # perform operation
fnmsub.s f8, f23, f19, f28, rtz # perform operation
fnmsub.s f8, f23, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f23, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f23, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f23, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f23, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f23, f19, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800001)
li x25, 0x5c6a70985a413a50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0xf0ce7e1afaf83ab3 # load x3 with value 0xf0ce7e1afaf83ab3
sw x3, 0(x2) # store 0xf0ce7e1afaf83ab3 in memory
flw f26, 0(x2) # load 0xf0ce7e1afaf83ab3 from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
fnmsub.s f25, f18, f26, f20, dyn # perform operation
fnmsub.s f25, f18, f26, f20, rdn # perform operation
fnmsub.s f25, f18, f26, f20, rmm # perform operation
fnmsub.s f25, f18, f26, f20, rne # perform operation
fnmsub.s f25, f18, f26, f20, rtz # perform operation
fnmsub.s f25, f18, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f18, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f18, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f18, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f18, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f18, f26, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fbfffff)
li x28, 0x67e05a545dc1b3a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0x34f2cd236ecc6bf3 # load x3 with value 0x34f2cd236ecc6bf3
sw x3, 0(x2) # store 0x34f2cd236ecc6bf3 in memory
flw f16, 0(x2) # load 0x34f2cd236ecc6bf3 from memory into f16
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
fnmsub.s f28, f29, f16, f7, dyn # perform operation
fnmsub.s f28, f29, f16, f7, rdn # perform operation
fnmsub.s f28, f29, f16, f7, rmm # perform operation
fnmsub.s f28, f29, f16, f7, rne # perform operation
fnmsub.s f28, f29, f16, f7, rtz # perform operation
fnmsub.s f28, f29, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f29, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f29, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f29, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f29, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f29, f16, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ef8654f)
li x3, 0x0ed3494709cbfdc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0x938d884a7427aef # load x3 with value 0x938d884a7427aef
sw x3, 0(x2) # store 0x938d884a7427aef in memory
flw f4, 0(x2) # load 0x938d884a7427aef from memory into f4
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
fnmsub.s f3, f29, f4, f16, dyn # perform operation
fnmsub.s f3, f29, f4, f16, rdn # perform operation
fnmsub.s f3, f29, f4, f16, rmm # perform operation
fnmsub.s f3, f29, f4, f16, rne # perform operation
fnmsub.s f3, f29, f4, f16, rtz # perform operation
fnmsub.s f3, f29, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f29, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f29, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f29, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f29, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f29, f4, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x813d9ab0)
li x16, 0xd332e276bcf96e7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0xf65c73f2ec324582 # load x3 with value 0xf65c73f2ec324582
sw x3, 0(x2) # store 0xf65c73f2ec324582 in memory
flw f1, 0(x2) # load 0xf65c73f2ec324582 from memory into f1
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
fnmsub.s f16, f8, f1, f30, dyn # perform operation
fnmsub.s f16, f8, f1, f30, rdn # perform operation
fnmsub.s f16, f8, f1, f30, rmm # perform operation
fnmsub.s f16, f8, f1, f30, rne # perform operation
fnmsub.s f16, f8, f1, f30, rtz # perform operation
fnmsub.s f16, f8, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f8, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f8, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f8, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f8, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f8, f1, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x0)
li x12, 0x81ac4062f9da0bfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
li x3, 0x7c6da724a4740015 # load x3 with value 0x7c6da724a4740015
sw x3, 0(x2) # store 0x7c6da724a4740015 in memory
flw f11, 0(x2) # load 0x7c6da724a4740015 from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fnmsub.s f12, f21, f11, f28, dyn # perform operation
fnmsub.s f12, f21, f11, f28, rdn # perform operation
fnmsub.s f12, f21, f11, f28, rmm # perform operation
fnmsub.s f12, f21, f11, f28, rne # perform operation
fnmsub.s f12, f21, f11, f28, rtz # perform operation
fnmsub.s f12, f21, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f21, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f21, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f21, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f21, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f21, f11, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000000)
li x11, 0xcca630c0235f673a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0x6fa4041e8e810d49 # load x3 with value 0x6fa4041e8e810d49
sw x3, 0(x2) # store 0x6fa4041e8e810d49 in memory
flw f18, 0(x2) # load 0x6fa4041e8e810d49 from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
fnmsub.s f11, f26, f18, f6, dyn # perform operation
fnmsub.s f11, f26, f18, f6, rdn # perform operation
fnmsub.s f11, f26, f18, f6, rmm # perform operation
fnmsub.s f11, f26, f18, f6, rne # perform operation
fnmsub.s f11, f26, f18, f6, rtz # perform operation
fnmsub.s f11, f26, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f26, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f26, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f26, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f26, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f26, f18, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3f800000)
li x14, 0xbb0c9fe044d9f699 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
li x3, 0xbebfc1dc46b1696 # load x3 with value 0xbebfc1dc46b1696
sw x3, 0(x2) # store 0xbebfc1dc46b1696 in memory
flw f25, 0(x2) # load 0xbebfc1dc46b1696 from memory into f25
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
fnmsub.s f14, f29, f25, f30, dyn # perform operation
fnmsub.s f14, f29, f25, f30, rdn # perform operation
fnmsub.s f14, f29, f25, f30, rmm # perform operation
fnmsub.s f14, f29, f25, f30, rne # perform operation
fnmsub.s f14, f29, f25, f30, rtz # perform operation
fnmsub.s f14, f29, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f29, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f29, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f29, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f29, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f29, f25, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbf800000)
li x16, 0xc72048e899ffe654 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x2f48660f1ec341c5 # load x3 with value 0x2f48660f1ec341c5
sw x3, 0(x2) # store 0x2f48660f1ec341c5 in memory
flw f19, 0(x2) # load 0x2f48660f1ec341c5 from memory into f19
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
fnmsub.s f16, f20, f19, f23, dyn # perform operation
fnmsub.s f16, f20, f19, f23, rdn # perform operation
fnmsub.s f16, f20, f19, f23, rmm # perform operation
fnmsub.s f16, f20, f19, f23, rne # perform operation
fnmsub.s f16, f20, f19, f23, rtz # perform operation
fnmsub.s f16, f20, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f20, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f20, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f20, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f20, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f20, f19, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3fc00000)
li x6, 0x8b4236b38080cdfc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0xbb74e18983b22dd0 # load x3 with value 0xbb74e18983b22dd0
sw x3, 0(x2) # store 0xbb74e18983b22dd0 in memory
flw f17, 0(x2) # load 0xbb74e18983b22dd0 from memory into f17
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fnmsub.s f6, f5, f17, f16, dyn # perform operation
fnmsub.s f6, f5, f17, f16, rdn # perform operation
fnmsub.s f6, f5, f17, f16, rmm # perform operation
fnmsub.s f6, f5, f17, f16, rne # perform operation
fnmsub.s f6, f5, f17, f16, rtz # perform operation
fnmsub.s f6, f5, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f5, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f5, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f5, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f5, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f5, f17, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbfc00000)
li x2, 0x5faf7bafa06c6b61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
li x3, 0x48c9f25c437a9aa # load x3 with value 0x48c9f25c437a9aa
sw x3, 0(x2) # store 0x48c9f25c437a9aa in memory
flw f20, 0(x2) # load 0x48c9f25c437a9aa from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
fnmsub.s f2, f9, f20, f7, dyn # perform operation
fnmsub.s f2, f9, f20, f7, rdn # perform operation
fnmsub.s f2, f9, f20, f7, rmm # perform operation
fnmsub.s f2, f9, f20, f7, rne # perform operation
fnmsub.s f2, f9, f20, f7, rtz # perform operation
fnmsub.s f2, f9, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f9, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f9, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f9, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f9, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f9, f20, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x40000000)
li x16, 0x9aa7c20787a2a5ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
li x3, 0xa61f9e72ff92a10a # load x3 with value 0xa61f9e72ff92a10a
sw x3, 0(x2) # store 0xa61f9e72ff92a10a in memory
flw f17, 0(x2) # load 0xa61f9e72ff92a10a from memory into f17
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
fnmsub.s f16, f2, f17, f12, dyn # perform operation
fnmsub.s f16, f2, f17, f12, rdn # perform operation
fnmsub.s f16, f2, f17, f12, rmm # perform operation
fnmsub.s f16, f2, f17, f12, rne # perform operation
fnmsub.s f16, f2, f17, f12, rtz # perform operation
fnmsub.s f16, f2, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f2, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f2, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f2, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f2, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f2, f17, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xc0000000)
li x10, 0x07041a85d9f5efd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
li x3, 0xbe7f453e4eab52f2 # load x3 with value 0xbe7f453e4eab52f2
sw x3, 0(x2) # store 0xbe7f453e4eab52f2 in memory
flw f21, 0(x2) # load 0xbe7f453e4eab52f2 from memory into f21
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
fnmsub.s f10, f9, f21, f19, dyn # perform operation
fnmsub.s f10, f9, f21, f19, rdn # perform operation
fnmsub.s f10, f9, f21, f19, rmm # perform operation
fnmsub.s f10, f9, f21, f19, rne # perform operation
fnmsub.s f10, f9, f21, f19, rtz # perform operation
fnmsub.s f10, f9, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f9, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f9, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f9, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f9, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f9, f21, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x800000)
li x16, 0x7fe0128c788a6bec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0xb08712de51c21a44 # load x3 with value 0xb08712de51c21a44
sw x3, 0(x2) # store 0xb08712de51c21a44 in memory
flw f4, 0(x2) # load 0xb08712de51c21a44 from memory into f4
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
fnmsub.s f16, f23, f4, f15, dyn # perform operation
fnmsub.s f16, f23, f4, f15, rdn # perform operation
fnmsub.s f16, f23, f4, f15, rmm # perform operation
fnmsub.s f16, f23, f4, f15, rne # perform operation
fnmsub.s f16, f23, f4, f15, rtz # perform operation
fnmsub.s f16, f23, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f23, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f23, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f23, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f23, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f23, f4, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80800000)
li x31, 0x860edd999098c3d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0xc6f04f5563ab44d1 # load x3 with value 0xc6f04f5563ab44d1
sw x3, 0(x2) # store 0xc6f04f5563ab44d1 in memory
flw f2, 0(x2) # load 0xc6f04f5563ab44d1 from memory into f2
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
fnmsub.s f31, f24, f2, f10, dyn # perform operation
fnmsub.s f31, f24, f2, f10, rdn # perform operation
fnmsub.s f31, f24, f2, f10, rmm # perform operation
fnmsub.s f31, f24, f2, f10, rne # perform operation
fnmsub.s f31, f24, f2, f10, rtz # perform operation
fnmsub.s f31, f24, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f24, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f24, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f24, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f24, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f24, f2, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f7fffff)
li x18, 0xbc7451419e8d9464 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0x7b6088944fcd85f0 # load x3 with value 0x7b6088944fcd85f0
sw x3, 0(x2) # store 0x7b6088944fcd85f0 in memory
flw f7, 0(x2) # load 0x7b6088944fcd85f0 from memory into f7
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
fnmsub.s f18, f16, f7, f25, dyn # perform operation
fnmsub.s f18, f16, f7, f25, rdn # perform operation
fnmsub.s f18, f16, f7, f25, rmm # perform operation
fnmsub.s f18, f16, f7, f25, rne # perform operation
fnmsub.s f18, f16, f7, f25, rtz # perform operation
fnmsub.s f18, f16, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f16, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f16, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f16, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f16, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f16, f7, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff7fffff)
li x14, 0x5ac4ae2b9832be89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
li x3, 0xd8161207b9c381c9 # load x3 with value 0xd8161207b9c381c9
sw x3, 0(x2) # store 0xd8161207b9c381c9 in memory
flw f10, 0(x2) # load 0xd8161207b9c381c9 from memory into f10
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
fnmsub.s f14, f8, f10, f22, dyn # perform operation
fnmsub.s f14, f8, f10, f22, rdn # perform operation
fnmsub.s f14, f8, f10, f22, rmm # perform operation
fnmsub.s f14, f8, f10, f22, rne # perform operation
fnmsub.s f14, f8, f10, f22, rtz # perform operation
fnmsub.s f14, f8, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f8, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f8, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f8, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f8, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f8, f10, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffff)
li x3, 0x4ecfa8e7c7858ebe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0x5fccc089449db721 # load x3 with value 0x5fccc089449db721
sw x3, 0(x2) # store 0x5fccc089449db721 in memory
flw f31, 0(x2) # load 0x5fccc089449db721 from memory into f31
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fnmsub.s f3, f24, f31, f14, dyn # perform operation
fnmsub.s f3, f24, f31, f14, rdn # perform operation
fnmsub.s f3, f24, f31, f14, rmm # perform operation
fnmsub.s f3, f24, f31, f14, rne # perform operation
fnmsub.s f3, f24, f31, f14, rtz # perform operation
fnmsub.s f3, f24, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f24, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f24, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f24, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f24, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f24, f31, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x807fffff)
li x7, 0x29aee9959bd5b2b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
li x3, 0xa95aafd31d7ea27a # load x3 with value 0xa95aafd31d7ea27a
sw x3, 0(x2) # store 0xa95aafd31d7ea27a in memory
flw f27, 0(x2) # load 0xa95aafd31d7ea27a from memory into f27
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
fnmsub.s f7, f28, f27, f16, dyn # perform operation
fnmsub.s f7, f28, f27, f16, rdn # perform operation
fnmsub.s f7, f28, f27, f16, rmm # perform operation
fnmsub.s f7, f28, f27, f16, rne # perform operation
fnmsub.s f7, f28, f27, f16, rtz # perform operation
fnmsub.s f7, f28, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f28, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f28, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f28, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f28, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f28, f27, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x400000)
li x8, 0x7703febee8573008 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x23db46824562e6ad # load x3 with value 0x23db46824562e6ad
sw x3, 0(x2) # store 0x23db46824562e6ad in memory
flw f9, 0(x2) # load 0x23db46824562e6ad from memory into f9
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
fnmsub.s f8, f17, f9, f4, dyn # perform operation
fnmsub.s f8, f17, f9, f4, rdn # perform operation
fnmsub.s f8, f17, f9, f4, rmm # perform operation
fnmsub.s f8, f17, f9, f4, rne # perform operation
fnmsub.s f8, f17, f9, f4, rtz # perform operation
fnmsub.s f8, f17, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f17, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f17, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f17, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f17, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f17, f9, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80400000)
li x24, 0x0c9fe20f46ece8db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0xea5b1190bcbcc1a4 # load x3 with value 0xea5b1190bcbcc1a4
sw x3, 0(x2) # store 0xea5b1190bcbcc1a4 in memory
flw f3, 0(x2) # load 0xea5b1190bcbcc1a4 from memory into f3
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
fnmsub.s f24, f23, f3, f9, dyn # perform operation
fnmsub.s f24, f23, f3, f9, rdn # perform operation
fnmsub.s f24, f23, f3, f9, rmm # perform operation
fnmsub.s f24, f23, f3, f9, rne # perform operation
fnmsub.s f24, f23, f3, f9, rtz # perform operation
fnmsub.s f24, f23, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f23, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f23, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f23, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f23, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f23, f3, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x1)
li x9, 0x634c48726580976d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
li x3, 0x75e40cea4b8796bf # load x3 with value 0x75e40cea4b8796bf
sw x3, 0(x2) # store 0x75e40cea4b8796bf in memory
flw f10, 0(x2) # load 0x75e40cea4b8796bf from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
fnmsub.s f9, f27, f10, f17, dyn # perform operation
fnmsub.s f9, f27, f10, f17, rdn # perform operation
fnmsub.s f9, f27, f10, f17, rmm # perform operation
fnmsub.s f9, f27, f10, f17, rne # perform operation
fnmsub.s f9, f27, f10, f17, rtz # perform operation
fnmsub.s f9, f27, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f27, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f27, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f27, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f27, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f27, f10, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000001)
li x7, 0x1f0703563a8dd624 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0xce117d50e6050840 # load x3 with value 0xce117d50e6050840
sw x3, 0(x2) # store 0xce117d50e6050840 in memory
flw f2, 0(x2) # load 0xce117d50e6050840 from memory into f2
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
fnmsub.s f7, f19, f2, f20, dyn # perform operation
fnmsub.s f7, f19, f2, f20, rdn # perform operation
fnmsub.s f7, f19, f2, f20, rmm # perform operation
fnmsub.s f7, f19, f2, f20, rne # perform operation
fnmsub.s f7, f19, f2, f20, rtz # perform operation
fnmsub.s f7, f19, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f19, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f19, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f19, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f19, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f19, f2, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800000)
li x20, 0x6f3c012c94dc3f8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
li x3, 0xfdae27c33947d3b5 # load x3 with value 0xfdae27c33947d3b5
sw x3, 0(x2) # store 0xfdae27c33947d3b5 in memory
flw f17, 0(x2) # load 0xfdae27c33947d3b5 from memory into f17
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
fnmsub.s f20, f2, f17, f30, dyn # perform operation
fnmsub.s f20, f2, f17, f30, rdn # perform operation
fnmsub.s f20, f2, f17, f30, rmm # perform operation
fnmsub.s f20, f2, f17, f30, rne # perform operation
fnmsub.s f20, f2, f17, f30, rtz # perform operation
fnmsub.s f20, f2, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f2, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f2, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f2, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f2, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f2, f17, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff800000)
li x11, 0xd535fb5a7087d2fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0xd988571cd31aec3d # load x3 with value 0xd988571cd31aec3d
sw x3, 0(x2) # store 0xd988571cd31aec3d in memory
flw f25, 0(x2) # load 0xd988571cd31aec3d from memory into f25
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
fnmsub.s f11, f17, f25, f13, dyn # perform operation
fnmsub.s f11, f17, f25, f13, rdn # perform operation
fnmsub.s f11, f17, f25, f13, rmm # perform operation
fnmsub.s f11, f17, f25, f13, rne # perform operation
fnmsub.s f11, f17, f25, f13, rtz # perform operation
fnmsub.s f11, f17, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f17, f25, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fc00000)
li x4, 0x926af564e5115d37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
li x3, 0x8137184b5a9f5cf # load x3 with value 0x8137184b5a9f5cf
sw x3, 0(x2) # store 0x8137184b5a9f5cf in memory
flw f28, 0(x2) # load 0x8137184b5a9f5cf from memory into f28
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
fnmsub.s f4, f18, f28, f29, dyn # perform operation
fnmsub.s f4, f18, f28, f29, rdn # perform operation
fnmsub.s f4, f18, f28, f29, rmm # perform operation
fnmsub.s f4, f18, f28, f29, rne # perform operation
fnmsub.s f4, f18, f28, f29, rtz # perform operation
fnmsub.s f4, f18, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f18, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f18, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f18, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f18, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f18, f28, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffffff)
li x6, 0xed3955e4d34108a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0xa9454f370a27ce3e # load x3 with value 0xa9454f370a27ce3e
sw x3, 0(x2) # store 0xa9454f370a27ce3e in memory
flw f16, 0(x2) # load 0xa9454f370a27ce3e from memory into f16
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
fnmsub.s f6, f11, f16, f3, dyn # perform operation
fnmsub.s f6, f11, f16, f3, rdn # perform operation
fnmsub.s f6, f11, f16, f3, rmm # perform operation
fnmsub.s f6, f11, f16, f3, rne # perform operation
fnmsub.s f6, f11, f16, f3, rtz # perform operation
fnmsub.s f6, f11, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f11, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f11, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f11, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f11, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f11, f16, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800001)
li x9, 0xa26ff3598156c061 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
li x3, 0x3d46459cd12cf064 # load x3 with value 0x3d46459cd12cf064
sw x3, 0(x2) # store 0x3d46459cd12cf064 in memory
flw f12, 0(x2) # load 0x3d46459cd12cf064 from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
fnmsub.s f9, f29, f12, f17, dyn # perform operation
fnmsub.s f9, f29, f12, f17, rdn # perform operation
fnmsub.s f9, f29, f12, f17, rmm # perform operation
fnmsub.s f9, f29, f12, f17, rne # perform operation
fnmsub.s f9, f29, f12, f17, rtz # perform operation
fnmsub.s f9, f29, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f29, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f29, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f29, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f29, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f29, f12, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fbfffff)
li x28, 0xd19c6478a35865ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
li x3, 0x5c91c7ae8e5bc6c9 # load x3 with value 0x5c91c7ae8e5bc6c9
sw x3, 0(x2) # store 0x5c91c7ae8e5bc6c9 in memory
flw f25, 0(x2) # load 0x5c91c7ae8e5bc6c9 from memory into f25
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
fnmsub.s f28, f10, f25, f15, dyn # perform operation
fnmsub.s f28, f10, f25, f15, rdn # perform operation
fnmsub.s f28, f10, f25, f15, rmm # perform operation
fnmsub.s f28, f10, f25, f15, rne # perform operation
fnmsub.s f28, f10, f25, f15, rtz # perform operation
fnmsub.s f28, f10, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f10, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f10, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f10, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f10, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f10, f25, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7ef8654f)
li x20, 0x1e09906c93352ada # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
li x3, 0x17e69d15f7ce04fc # load x3 with value 0x17e69d15f7ce04fc
sw x3, 0(x2) # store 0x17e69d15f7ce04fc in memory
flw f12, 0(x2) # load 0x17e69d15f7ce04fc from memory into f12
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fnmsub.s f20, f13, f12, f23, dyn # perform operation
fnmsub.s f20, f13, f12, f23, rdn # perform operation
fnmsub.s f20, f13, f12, f23, rmm # perform operation
fnmsub.s f20, f13, f12, f23, rne # perform operation
fnmsub.s f20, f13, f12, f23, rtz # perform operation
fnmsub.s f20, f13, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f13, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f13, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f13, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f13, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f13, f12, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x813d9ab0)
li x19, 0xfbb1e07c693ce951 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0xb673632ac29d6e14 # load x3 with value 0xb673632ac29d6e14
sw x3, 0(x2) # store 0xb673632ac29d6e14 in memory
flw f6, 0(x2) # load 0xb673632ac29d6e14 from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
fnmsub.s f19, f23, f6, f7, dyn # perform operation
fnmsub.s f19, f23, f6, f7, rdn # perform operation
fnmsub.s f19, f23, f6, f7, rmm # perform operation
fnmsub.s f19, f23, f6, f7, rne # perform operation
fnmsub.s f19, f23, f6, f7, rtz # perform operation
fnmsub.s f19, f23, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f23, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f23, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f23, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f23, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f23, f6, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x0)
li x31, 0xce7a2f4f6c0dcd0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0x95bc15fe5737b07d # load x3 with value 0x95bc15fe5737b07d
sw x3, 0(x2) # store 0x95bc15fe5737b07d in memory
flw f28, 0(x2) # load 0x95bc15fe5737b07d from memory into f28
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
fnmsub.s f31, f22, f28, f30, dyn # perform operation
fnmsub.s f31, f22, f28, f30, rdn # perform operation
fnmsub.s f31, f22, f28, f30, rmm # perform operation
fnmsub.s f31, f22, f28, f30, rne # perform operation
fnmsub.s f31, f22, f28, f30, rtz # perform operation
fnmsub.s f31, f22, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f22, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f22, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f22, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f22, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f22, f28, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000000)
li x22, 0xae04a89a1088b1a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0xedf310ed5d4ee76d # load x3 with value 0xedf310ed5d4ee76d
sw x3, 0(x2) # store 0xedf310ed5d4ee76d in memory
flw f30, 0(x2) # load 0xedf310ed5d4ee76d from memory into f30
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
fnmsub.s f22, f5, f30, f24, dyn # perform operation
fnmsub.s f22, f5, f30, f24, rdn # perform operation
fnmsub.s f22, f5, f30, f24, rmm # perform operation
fnmsub.s f22, f5, f30, f24, rne # perform operation
fnmsub.s f22, f5, f30, f24, rtz # perform operation
fnmsub.s f22, f5, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f5, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f5, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f5, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f5, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f5, f30, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3f800000)
li x11, 0x975aff0565a2e6cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x76eed567f38c7dda # load x3 with value 0x76eed567f38c7dda
sw x3, 0(x2) # store 0x76eed567f38c7dda in memory
flw f10, 0(x2) # load 0x76eed567f38c7dda from memory into f10
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fnmsub.s f11, f5, f10, f19, dyn # perform operation
fnmsub.s f11, f5, f10, f19, rdn # perform operation
fnmsub.s f11, f5, f10, f19, rmm # perform operation
fnmsub.s f11, f5, f10, f19, rne # perform operation
fnmsub.s f11, f5, f10, f19, rtz # perform operation
fnmsub.s f11, f5, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f5, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f5, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f5, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f5, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f5, f10, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbf800000)
li x27, 0x63ab8d500a33dc3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0xcc507537e5a58bcf # load x3 with value 0xcc507537e5a58bcf
sw x3, 0(x2) # store 0xcc507537e5a58bcf in memory
flw f21, 0(x2) # load 0xcc507537e5a58bcf from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
fnmsub.s f27, f17, f21, f23, dyn # perform operation
fnmsub.s f27, f17, f21, f23, rdn # perform operation
fnmsub.s f27, f17, f21, f23, rmm # perform operation
fnmsub.s f27, f17, f21, f23, rne # perform operation
fnmsub.s f27, f17, f21, f23, rtz # perform operation
fnmsub.s f27, f17, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f17, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f17, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f17, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f17, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f17, f21, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3fc00000)
li x1, 0x362586d7bfa89f67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0x247a3d6236337749 # load x3 with value 0x247a3d6236337749
sw x3, 0(x2) # store 0x247a3d6236337749 in memory
flw f8, 0(x2) # load 0x247a3d6236337749 from memory into f8
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
fnmsub.s f1, f6, f8, f9, dyn # perform operation
fnmsub.s f1, f6, f8, f9, rdn # perform operation
fnmsub.s f1, f6, f8, f9, rmm # perform operation
fnmsub.s f1, f6, f8, f9, rne # perform operation
fnmsub.s f1, f6, f8, f9, rtz # perform operation
fnmsub.s f1, f6, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f6, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f6, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f6, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f6, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f6, f8, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbfc00000)
li x5, 0x806f25386553018b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0xc296426d302f3ca5 # load x3 with value 0xc296426d302f3ca5
sw x3, 0(x2) # store 0xc296426d302f3ca5 in memory
flw f6, 0(x2) # load 0xc296426d302f3ca5 from memory into f6
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
fnmsub.s f5, f7, f6, f29, dyn # perform operation
fnmsub.s f5, f7, f6, f29, rdn # perform operation
fnmsub.s f5, f7, f6, f29, rmm # perform operation
fnmsub.s f5, f7, f6, f29, rne # perform operation
fnmsub.s f5, f7, f6, f29, rtz # perform operation
fnmsub.s f5, f7, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f7, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f7, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f7, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f7, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f7, f6, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x40000000)
li x29, 0x66ba12ed45da347a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0x888ae600f17152f7 # load x3 with value 0x888ae600f17152f7
sw x3, 0(x2) # store 0x888ae600f17152f7 in memory
flw f14, 0(x2) # load 0x888ae600f17152f7 from memory into f14
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
fnmsub.s f29, f22, f14, f7, dyn # perform operation
fnmsub.s f29, f22, f14, f7, rdn # perform operation
fnmsub.s f29, f22, f14, f7, rmm # perform operation
fnmsub.s f29, f22, f14, f7, rne # perform operation
fnmsub.s f29, f22, f14, f7, rtz # perform operation
fnmsub.s f29, f22, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f22, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f22, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f22, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f22, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f22, f14, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xc0000000)
li x16, 0xe9eab36ef1c7e5c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x60b0e593adafd163 # load x3 with value 0x60b0e593adafd163
sw x3, 0(x2) # store 0x60b0e593adafd163 in memory
flw f24, 0(x2) # load 0x60b0e593adafd163 from memory into f24
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fnmsub.s f16, f13, f24, f21, dyn # perform operation
fnmsub.s f16, f13, f24, f21, rdn # perform operation
fnmsub.s f16, f13, f24, f21, rmm # perform operation
fnmsub.s f16, f13, f24, f21, rne # perform operation
fnmsub.s f16, f13, f24, f21, rtz # perform operation
fnmsub.s f16, f13, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f13, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f13, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f13, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f13, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f13, f24, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x800000)
li x27, 0x3182b01f7815804e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x9a628cddece6f87 # load x3 with value 0x9a628cddece6f87
sw x3, 0(x2) # store 0x9a628cddece6f87 in memory
flw f30, 0(x2) # load 0x9a628cddece6f87 from memory into f30
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
fnmsub.s f27, f29, f30, f9, dyn # perform operation
fnmsub.s f27, f29, f30, f9, rdn # perform operation
fnmsub.s f27, f29, f30, f9, rmm # perform operation
fnmsub.s f27, f29, f30, f9, rne # perform operation
fnmsub.s f27, f29, f30, f9, rtz # perform operation
fnmsub.s f27, f29, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f29, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f29, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f29, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f29, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f29, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80800000)
li x11, 0xdda537b143abeb59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0xf29d42bf4f9832eb # load x3 with value 0xf29d42bf4f9832eb
sw x3, 0(x2) # store 0xf29d42bf4f9832eb in memory
flw f9, 0(x2) # load 0xf29d42bf4f9832eb from memory into f9
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fnmsub.s f11, f16, f9, f22, dyn # perform operation
fnmsub.s f11, f16, f9, f22, rdn # perform operation
fnmsub.s f11, f16, f9, f22, rmm # perform operation
fnmsub.s f11, f16, f9, f22, rne # perform operation
fnmsub.s f11, f16, f9, f22, rtz # perform operation
fnmsub.s f11, f16, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f16, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f16, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f16, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f16, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f16, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f7fffff)
li x4, 0x015b5036f998c7d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0x4024e5a634d8ef2f # load x3 with value 0x4024e5a634d8ef2f
sw x3, 0(x2) # store 0x4024e5a634d8ef2f in memory
flw f19, 0(x2) # load 0x4024e5a634d8ef2f from memory into f19
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
fnmsub.s f4, f31, f19, f21, dyn # perform operation
fnmsub.s f4, f31, f19, f21, rdn # perform operation
fnmsub.s f4, f31, f19, f21, rmm # perform operation
fnmsub.s f4, f31, f19, f21, rne # perform operation
fnmsub.s f4, f31, f19, f21, rtz # perform operation
fnmsub.s f4, f31, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f31, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f31, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f31, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f31, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f31, f19, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff7fffff)
li x22, 0x6bbed77bef6352be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0xf07a476692ceb255 # load x3 with value 0xf07a476692ceb255
sw x3, 0(x2) # store 0xf07a476692ceb255 in memory
flw f17, 0(x2) # load 0xf07a476692ceb255 from memory into f17
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
fnmsub.s f22, f29, f17, f26, dyn # perform operation
fnmsub.s f22, f29, f17, f26, rdn # perform operation
fnmsub.s f22, f29, f17, f26, rmm # perform operation
fnmsub.s f22, f29, f17, f26, rne # perform operation
fnmsub.s f22, f29, f17, f26, rtz # perform operation
fnmsub.s f22, f29, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f29, f17, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffff)
li x7, 0xd6fdcfabce8ab5f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0xa3197d84666f4a73 # load x3 with value 0xa3197d84666f4a73
sw x3, 0(x2) # store 0xa3197d84666f4a73 in memory
flw f14, 0(x2) # load 0xa3197d84666f4a73 from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
fnmsub.s f7, f29, f14, f1, dyn # perform operation
fnmsub.s f7, f29, f14, f1, rdn # perform operation
fnmsub.s f7, f29, f14, f1, rmm # perform operation
fnmsub.s f7, f29, f14, f1, rne # perform operation
fnmsub.s f7, f29, f14, f1, rtz # perform operation
fnmsub.s f7, f29, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f29, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f29, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f29, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f29, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f29, f14, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x807fffff)
li x5, 0xf5e7fb9241088997 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x954f8f77b5451b43 # load x3 with value 0x954f8f77b5451b43
sw x3, 0(x2) # store 0x954f8f77b5451b43 in memory
flw f25, 0(x2) # load 0x954f8f77b5451b43 from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
fnmsub.s f5, f29, f25, f19, dyn # perform operation
fnmsub.s f5, f29, f25, f19, rdn # perform operation
fnmsub.s f5, f29, f25, f19, rmm # perform operation
fnmsub.s f5, f29, f25, f19, rne # perform operation
fnmsub.s f5, f29, f25, f19, rtz # perform operation
fnmsub.s f5, f29, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f29, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f29, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f29, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f29, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f29, f25, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x400000)
li x31, 0x4aa62b1ee652d45f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
li x3, 0x1b8b0e75a26ef98d # load x3 with value 0x1b8b0e75a26ef98d
sw x3, 0(x2) # store 0x1b8b0e75a26ef98d in memory
flw f26, 0(x2) # load 0x1b8b0e75a26ef98d from memory into f26
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fnmsub.s f31, f24, f26, f25, dyn # perform operation
fnmsub.s f31, f24, f26, f25, rdn # perform operation
fnmsub.s f31, f24, f26, f25, rmm # perform operation
fnmsub.s f31, f24, f26, f25, rne # perform operation
fnmsub.s f31, f24, f26, f25, rtz # perform operation
fnmsub.s f31, f24, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f24, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f24, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f24, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f24, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f24, f26, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80400000)
li x31, 0xcca58bdfb917aac4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0x5e06e489cf7be7dc # load x3 with value 0x5e06e489cf7be7dc
sw x3, 0(x2) # store 0x5e06e489cf7be7dc in memory
flw f7, 0(x2) # load 0x5e06e489cf7be7dc from memory into f7
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fnmsub.s f31, f22, f7, f28, dyn # perform operation
fnmsub.s f31, f22, f7, f28, rdn # perform operation
fnmsub.s f31, f22, f7, f28, rmm # perform operation
fnmsub.s f31, f22, f7, f28, rne # perform operation
fnmsub.s f31, f22, f7, f28, rtz # perform operation
fnmsub.s f31, f22, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f22, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f22, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f22, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f22, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f22, f7, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x1)
li x31, 0xdbd48f448cb925d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
li x3, 0x35cc381a2e7932c6 # load x3 with value 0x35cc381a2e7932c6
sw x3, 0(x2) # store 0x35cc381a2e7932c6 in memory
flw f8, 0(x2) # load 0x35cc381a2e7932c6 from memory into f8
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
fnmsub.s f31, f11, f8, f28, dyn # perform operation
fnmsub.s f31, f11, f8, f28, rdn # perform operation
fnmsub.s f31, f11, f8, f28, rmm # perform operation
fnmsub.s f31, f11, f8, f28, rne # perform operation
fnmsub.s f31, f11, f8, f28, rtz # perform operation
fnmsub.s f31, f11, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f11, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f11, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f11, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f11, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f11, f8, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000001)
li x9, 0x613f5041e17a2586 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0xa3671661cdedd6be # load x3 with value 0xa3671661cdedd6be
sw x3, 0(x2) # store 0xa3671661cdedd6be in memory
flw f30, 0(x2) # load 0xa3671661cdedd6be from memory into f30
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
fnmsub.s f9, f27, f30, f10, dyn # perform operation
fnmsub.s f9, f27, f30, f10, rdn # perform operation
fnmsub.s f9, f27, f30, f10, rmm # perform operation
fnmsub.s f9, f27, f30, f10, rne # perform operation
fnmsub.s f9, f27, f30, f10, rtz # perform operation
fnmsub.s f9, f27, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f27, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f27, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f27, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f27, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f27, f30, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800000)
li x21, 0x87cbcbdf80ebf516 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0xd761819b06271c81 # load x3 with value 0xd761819b06271c81
sw x3, 0(x2) # store 0xd761819b06271c81 in memory
flw f28, 0(x2) # load 0xd761819b06271c81 from memory into f28
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
fnmsub.s f21, f30, f28, f14, dyn # perform operation
fnmsub.s f21, f30, f28, f14, rdn # perform operation
fnmsub.s f21, f30, f28, f14, rmm # perform operation
fnmsub.s f21, f30, f28, f14, rne # perform operation
fnmsub.s f21, f30, f28, f14, rtz # perform operation
fnmsub.s f21, f30, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f30, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f30, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f30, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f30, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f30, f28, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff800000)
li x26, 0x085441338f2ebda7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x37c0c0875a987747 # load x3 with value 0x37c0c0875a987747
sw x3, 0(x2) # store 0x37c0c0875a987747 in memory
flw f23, 0(x2) # load 0x37c0c0875a987747 from memory into f23
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
fnmsub.s f26, f14, f23, f19, dyn # perform operation
fnmsub.s f26, f14, f23, f19, rdn # perform operation
fnmsub.s f26, f14, f23, f19, rmm # perform operation
fnmsub.s f26, f14, f23, f19, rne # perform operation
fnmsub.s f26, f14, f23, f19, rtz # perform operation
fnmsub.s f26, f14, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f14, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f14, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f14, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f14, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f14, f23, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fc00000)
li x18, 0x964dbed39dc4ba3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0x4b748c2f6e6c913 # load x3 with value 0x4b748c2f6e6c913
sw x3, 0(x2) # store 0x4b748c2f6e6c913 in memory
flw f22, 0(x2) # load 0x4b748c2f6e6c913 from memory into f22
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
fnmsub.s f18, f4, f22, f31, dyn # perform operation
fnmsub.s f18, f4, f22, f31, rdn # perform operation
fnmsub.s f18, f4, f22, f31, rmm # perform operation
fnmsub.s f18, f4, f22, f31, rne # perform operation
fnmsub.s f18, f4, f22, f31, rtz # perform operation
fnmsub.s f18, f4, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f4, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f4, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f4, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f4, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f4, f22, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffffff)
li x4, 0xd5a6065fb7750c52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
li x3, 0xad2834558023ad5f # load x3 with value 0xad2834558023ad5f
sw x3, 0(x2) # store 0xad2834558023ad5f in memory
flw f10, 0(x2) # load 0xad2834558023ad5f from memory into f10
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
fnmsub.s f4, f2, f10, f3, dyn # perform operation
fnmsub.s f4, f2, f10, f3, rdn # perform operation
fnmsub.s f4, f2, f10, f3, rmm # perform operation
fnmsub.s f4, f2, f10, f3, rne # perform operation
fnmsub.s f4, f2, f10, f3, rtz # perform operation
fnmsub.s f4, f2, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f2, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f2, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f2, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f2, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f2, f10, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800001)
li x2, 0x6ff296b38d67dfd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0x251daaccbefcc827 # load x3 with value 0x251daaccbefcc827
sw x3, 0(x2) # store 0x251daaccbefcc827 in memory
flw f7, 0(x2) # load 0x251daaccbefcc827 from memory into f7
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
fnmsub.s f2, f21, f7, f12, dyn # perform operation
fnmsub.s f2, f21, f7, f12, rdn # perform operation
fnmsub.s f2, f21, f7, f12, rmm # perform operation
fnmsub.s f2, f21, f7, f12, rne # perform operation
fnmsub.s f2, f21, f7, f12, rtz # perform operation
fnmsub.s f2, f21, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f21, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f21, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f21, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f21, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f21, f7, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fbfffff)
li x30, 0xb3c9bc7ca4f22e63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
li x3, 0x16d301aa1e41fbd3 # load x3 with value 0x16d301aa1e41fbd3
sw x3, 0(x2) # store 0x16d301aa1e41fbd3 in memory
flw f16, 0(x2) # load 0x16d301aa1e41fbd3 from memory into f16
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
fnmsub.s f30, f20, f16, f31, dyn # perform operation
fnmsub.s f30, f20, f16, f31, rdn # perform operation
fnmsub.s f30, f20, f16, f31, rmm # perform operation
fnmsub.s f30, f20, f16, f31, rne # perform operation
fnmsub.s f30, f20, f16, f31, rtz # perform operation
fnmsub.s f30, f20, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f20, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f20, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f20, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f20, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f20, f16, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7ef8654f)
li x5, 0xc74bdcab58bfa7f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
li x3, 0xd49c2e4e7e4d130e # load x3 with value 0xd49c2e4e7e4d130e
sw x3, 0(x2) # store 0xd49c2e4e7e4d130e in memory
flw f1, 0(x2) # load 0xd49c2e4e7e4d130e from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
fnmsub.s f5, f15, f1, f21, dyn # perform operation
fnmsub.s f5, f15, f1, f21, rdn # perform operation
fnmsub.s f5, f15, f1, f21, rmm # perform operation
fnmsub.s f5, f15, f1, f21, rne # perform operation
fnmsub.s f5, f15, f1, f21, rtz # perform operation
fnmsub.s f5, f15, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f15, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f15, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f15, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f15, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f15, f1, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x813d9ab0)
li x2, 0x00542c837a07948e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0x37dacc01f5a8a156 # load x3 with value 0x37dacc01f5a8a156
sw x3, 0(x2) # store 0x37dacc01f5a8a156 in memory
flw f8, 0(x2) # load 0x37dacc01f5a8a156 from memory into f8
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
fnmsub.s f2, f27, f8, f18, dyn # perform operation
fnmsub.s f2, f27, f8, f18, rdn # perform operation
fnmsub.s f2, f27, f8, f18, rmm # perform operation
fnmsub.s f2, f27, f8, f18, rne # perform operation
fnmsub.s f2, f27, f8, f18, rtz # perform operation
fnmsub.s f2, f27, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f27, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f27, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f27, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f27, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f27, f8, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x0)
li x9, 0xaedd718ecf190767 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
li x3, 0x25c95006e8e3b5cf # load x3 with value 0x25c95006e8e3b5cf
sw x3, 0(x2) # store 0x25c95006e8e3b5cf in memory
flw f19, 0(x2) # load 0x25c95006e8e3b5cf from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fnmsub.s f9, f12, f19, f28, dyn # perform operation
fnmsub.s f9, f12, f19, f28, rdn # perform operation
fnmsub.s f9, f12, f19, f28, rmm # perform operation
fnmsub.s f9, f12, f19, f28, rne # perform operation
fnmsub.s f9, f12, f19, f28, rtz # perform operation
fnmsub.s f9, f12, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f12, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f12, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f12, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f12, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f12, f19, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000000)
li x29, 0x898e63fa3cbdaaef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0x3e7c6140f48e64c5 # load x3 with value 0x3e7c6140f48e64c5
sw x3, 0(x2) # store 0x3e7c6140f48e64c5 in memory
flw f1, 0(x2) # load 0x3e7c6140f48e64c5 from memory into f1
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
fnmsub.s f29, f14, f1, f4, dyn # perform operation
fnmsub.s f29, f14, f1, f4, rdn # perform operation
fnmsub.s f29, f14, f1, f4, rmm # perform operation
fnmsub.s f29, f14, f1, f4, rne # perform operation
fnmsub.s f29, f14, f1, f4, rtz # perform operation
fnmsub.s f29, f14, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f14, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f14, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f14, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f14, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f14, f1, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3f800000)
li x13, 0x4036ba8222245251 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0x57f69cbd3cdb102d # load x3 with value 0x57f69cbd3cdb102d
sw x3, 0(x2) # store 0x57f69cbd3cdb102d in memory
flw f20, 0(x2) # load 0x57f69cbd3cdb102d from memory into f20
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
fnmsub.s f13, f21, f20, f6, dyn # perform operation
fnmsub.s f13, f21, f20, f6, rdn # perform operation
fnmsub.s f13, f21, f20, f6, rmm # perform operation
fnmsub.s f13, f21, f20, f6, rne # perform operation
fnmsub.s f13, f21, f20, f6, rtz # perform operation
fnmsub.s f13, f21, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f21, f20, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbf800000)
li x4, 0xac76c3ffcbc778cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0xffcb1f43ee3c463c # load x3 with value 0xffcb1f43ee3c463c
sw x3, 0(x2) # store 0xffcb1f43ee3c463c in memory
flw f9, 0(x2) # load 0xffcb1f43ee3c463c from memory into f9
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fnmsub.s f4, f10, f9, f15, dyn # perform operation
fnmsub.s f4, f10, f9, f15, rdn # perform operation
fnmsub.s f4, f10, f9, f15, rmm # perform operation
fnmsub.s f4, f10, f9, f15, rne # perform operation
fnmsub.s f4, f10, f9, f15, rtz # perform operation
fnmsub.s f4, f10, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f10, f9, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3fc00000)
li x29, 0xbfe34776c969f66c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0x104bdb51d444f31c # load x3 with value 0x104bdb51d444f31c
sw x3, 0(x2) # store 0x104bdb51d444f31c in memory
flw f2, 0(x2) # load 0x104bdb51d444f31c from memory into f2
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
fnmsub.s f29, f10, f2, f30, dyn # perform operation
fnmsub.s f29, f10, f2, f30, rdn # perform operation
fnmsub.s f29, f10, f2, f30, rmm # perform operation
fnmsub.s f29, f10, f2, f30, rne # perform operation
fnmsub.s f29, f10, f2, f30, rtz # perform operation
fnmsub.s f29, f10, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f10, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f10, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f10, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f10, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f10, f2, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbfc00000)
li x8, 0x0d90ebcb0133b6c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0x5d8672b9e44bd1b1 # load x3 with value 0x5d8672b9e44bd1b1
sw x3, 0(x2) # store 0x5d8672b9e44bd1b1 in memory
flw f3, 0(x2) # load 0x5d8672b9e44bd1b1 from memory into f3
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
fnmsub.s f8, f23, f3, f21, dyn # perform operation
fnmsub.s f8, f23, f3, f21, rdn # perform operation
fnmsub.s f8, f23, f3, f21, rmm # perform operation
fnmsub.s f8, f23, f3, f21, rne # perform operation
fnmsub.s f8, f23, f3, f21, rtz # perform operation
fnmsub.s f8, f23, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f23, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f23, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f23, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f23, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f23, f3, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x40000000)
li x1, 0x11f2b4089ce4970f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
li x3, 0xea212100184ec9af # load x3 with value 0xea212100184ec9af
sw x3, 0(x2) # store 0xea212100184ec9af in memory
flw f15, 0(x2) # load 0xea212100184ec9af from memory into f15
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
fnmsub.s f1, f27, f15, f26, dyn # perform operation
fnmsub.s f1, f27, f15, f26, rdn # perform operation
fnmsub.s f1, f27, f15, f26, rmm # perform operation
fnmsub.s f1, f27, f15, f26, rne # perform operation
fnmsub.s f1, f27, f15, f26, rtz # perform operation
fnmsub.s f1, f27, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f27, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f27, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f27, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f27, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f27, f15, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xc0000000)
li x31, 0x2fa2568ed60bd960 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
li x3, 0x2d2e7757be472b27 # load x3 with value 0x2d2e7757be472b27
sw x3, 0(x2) # store 0x2d2e7757be472b27 in memory
flw f11, 0(x2) # load 0x2d2e7757be472b27 from memory into f11
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
fnmsub.s f31, f26, f11, f18, dyn # perform operation
fnmsub.s f31, f26, f11, f18, rdn # perform operation
fnmsub.s f31, f26, f11, f18, rmm # perform operation
fnmsub.s f31, f26, f11, f18, rne # perform operation
fnmsub.s f31, f26, f11, f18, rtz # perform operation
fnmsub.s f31, f26, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f26, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f26, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f26, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f26, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f26, f11, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x800000)
li x11, 0xa62f640c6160bbcd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
li x3, 0x586f791bf888ee8e # load x3 with value 0x586f791bf888ee8e
sw x3, 0(x2) # store 0x586f791bf888ee8e in memory
flw f10, 0(x2) # load 0x586f791bf888ee8e from memory into f10
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fnmsub.s f11, f8, f10, f3, dyn # perform operation
fnmsub.s f11, f8, f10, f3, rdn # perform operation
fnmsub.s f11, f8, f10, f3, rmm # perform operation
fnmsub.s f11, f8, f10, f3, rne # perform operation
fnmsub.s f11, f8, f10, f3, rtz # perform operation
fnmsub.s f11, f8, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f8, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f8, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f8, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f8, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f8, f10, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80800000)
li x14, 0xb2a97c7a7da44175 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0xac9b6bae58e33140 # load x3 with value 0xac9b6bae58e33140
sw x3, 0(x2) # store 0xac9b6bae58e33140 in memory
flw f28, 0(x2) # load 0xac9b6bae58e33140 from memory into f28
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
fnmsub.s f14, f10, f28, f8, dyn # perform operation
fnmsub.s f14, f10, f28, f8, rdn # perform operation
fnmsub.s f14, f10, f28, f8, rmm # perform operation
fnmsub.s f14, f10, f28, f8, rne # perform operation
fnmsub.s f14, f10, f28, f8, rtz # perform operation
fnmsub.s f14, f10, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f10, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f10, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f10, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f10, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f10, f28, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f7fffff)
li x9, 0x4c794aa90393d54d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x2b6513a0cb53d72c # load x3 with value 0x2b6513a0cb53d72c
sw x3, 0(x2) # store 0x2b6513a0cb53d72c in memory
flw f27, 0(x2) # load 0x2b6513a0cb53d72c from memory into f27
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
fnmsub.s f9, f1, f27, f24, dyn # perform operation
fnmsub.s f9, f1, f27, f24, rdn # perform operation
fnmsub.s f9, f1, f27, f24, rmm # perform operation
fnmsub.s f9, f1, f27, f24, rne # perform operation
fnmsub.s f9, f1, f27, f24, rtz # perform operation
fnmsub.s f9, f1, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f1, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f1, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f1, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f1, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f1, f27, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff7fffff)
li x14, 0x713f6b99f977b41f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
li x3, 0x33da541899197982 # load x3 with value 0x33da541899197982
sw x3, 0(x2) # store 0x33da541899197982 in memory
flw f12, 0(x2) # load 0x33da541899197982 from memory into f12
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fnmsub.s f14, f16, f12, f3, dyn # perform operation
fnmsub.s f14, f16, f12, f3, rdn # perform operation
fnmsub.s f14, f16, f12, f3, rmm # perform operation
fnmsub.s f14, f16, f12, f3, rne # perform operation
fnmsub.s f14, f16, f12, f3, rtz # perform operation
fnmsub.s f14, f16, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f16, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f16, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f16, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f16, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f16, f12, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffff)
li x28, 0x39360b79f3bf5ee3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0x77021e9da7f2d785 # load x3 with value 0x77021e9da7f2d785
sw x3, 0(x2) # store 0x77021e9da7f2d785 in memory
flw f23, 0(x2) # load 0x77021e9da7f2d785 from memory into f23
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
fnmsub.s f28, f3, f23, f6, dyn # perform operation
fnmsub.s f28, f3, f23, f6, rdn # perform operation
fnmsub.s f28, f3, f23, f6, rmm # perform operation
fnmsub.s f28, f3, f23, f6, rne # perform operation
fnmsub.s f28, f3, f23, f6, rtz # perform operation
fnmsub.s f28, f3, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f3, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f3, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f3, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f3, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f3, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x807fffff)
li x15, 0x2416bb4a68f7f088 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
li x3, 0xdce024ab38f5d4b7 # load x3 with value 0xdce024ab38f5d4b7
sw x3, 0(x2) # store 0xdce024ab38f5d4b7 in memory
flw f8, 0(x2) # load 0xdce024ab38f5d4b7 from memory into f8
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fnmsub.s f15, f16, f8, f5, dyn # perform operation
fnmsub.s f15, f16, f8, f5, rdn # perform operation
fnmsub.s f15, f16, f8, f5, rmm # perform operation
fnmsub.s f15, f16, f8, f5, rne # perform operation
fnmsub.s f15, f16, f8, f5, rtz # perform operation
fnmsub.s f15, f16, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f16, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f16, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f16, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f16, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f16, f8, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x400000)
li x16, 0x18f46ddc6f9d7bec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
li x3, 0x4d21ff13cd6c7e11 # load x3 with value 0x4d21ff13cd6c7e11
sw x3, 0(x2) # store 0x4d21ff13cd6c7e11 in memory
flw f11, 0(x2) # load 0x4d21ff13cd6c7e11 from memory into f11
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
fnmsub.s f16, f27, f11, f8, dyn # perform operation
fnmsub.s f16, f27, f11, f8, rdn # perform operation
fnmsub.s f16, f27, f11, f8, rmm # perform operation
fnmsub.s f16, f27, f11, f8, rne # perform operation
fnmsub.s f16, f27, f11, f8, rtz # perform operation
fnmsub.s f16, f27, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f27, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f27, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f27, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f27, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f27, f11, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80400000)
li x7, 0x195f1a5c985aa88e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0x54874d1aab0121f1 # load x3 with value 0x54874d1aab0121f1
sw x3, 0(x2) # store 0x54874d1aab0121f1 in memory
flw f22, 0(x2) # load 0x54874d1aab0121f1 from memory into f22
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fnmsub.s f7, f17, f22, f28, dyn # perform operation
fnmsub.s f7, f17, f22, f28, rdn # perform operation
fnmsub.s f7, f17, f22, f28, rmm # perform operation
fnmsub.s f7, f17, f22, f28, rne # perform operation
fnmsub.s f7, f17, f22, f28, rtz # perform operation
fnmsub.s f7, f17, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f17, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f17, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f17, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f17, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f17, f22, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x1)
li x18, 0xd8894ce150058095 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0x56798b71b1265884 # load x3 with value 0x56798b71b1265884
sw x3, 0(x2) # store 0x56798b71b1265884 in memory
flw f26, 0(x2) # load 0x56798b71b1265884 from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
fnmsub.s f18, f5, f26, f11, dyn # perform operation
fnmsub.s f18, f5, f26, f11, rdn # perform operation
fnmsub.s f18, f5, f26, f11, rmm # perform operation
fnmsub.s f18, f5, f26, f11, rne # perform operation
fnmsub.s f18, f5, f26, f11, rtz # perform operation
fnmsub.s f18, f5, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f5, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f5, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f5, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f5, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f5, f26, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000001)
li x4, 0x43a6318d00fe6f1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0xe482ba950e8493b9 # load x3 with value 0xe482ba950e8493b9
sw x3, 0(x2) # store 0xe482ba950e8493b9 in memory
flw f20, 0(x2) # load 0xe482ba950e8493b9 from memory into f20
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
fnmsub.s f4, f6, f20, f29, dyn # perform operation
fnmsub.s f4, f6, f20, f29, rdn # perform operation
fnmsub.s f4, f6, f20, f29, rmm # perform operation
fnmsub.s f4, f6, f20, f29, rne # perform operation
fnmsub.s f4, f6, f20, f29, rtz # perform operation
fnmsub.s f4, f6, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f6, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f6, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f6, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f6, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f6, f20, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800000)
li x6, 0xf0a56b77fdd78093 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0xf6046daf9a01e3be # load x3 with value 0xf6046daf9a01e3be
sw x3, 0(x2) # store 0xf6046daf9a01e3be in memory
flw f16, 0(x2) # load 0xf6046daf9a01e3be from memory into f16
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
fnmsub.s f6, f1, f16, f5, dyn # perform operation
fnmsub.s f6, f1, f16, f5, rdn # perform operation
fnmsub.s f6, f1, f16, f5, rmm # perform operation
fnmsub.s f6, f1, f16, f5, rne # perform operation
fnmsub.s f6, f1, f16, f5, rtz # perform operation
fnmsub.s f6, f1, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f1, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f1, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f1, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f1, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f1, f16, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff800000)
li x4, 0x2068b67cb2b71ed6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0xed522d99b66b048d # load x3 with value 0xed522d99b66b048d
sw x3, 0(x2) # store 0xed522d99b66b048d in memory
flw f19, 0(x2) # load 0xed522d99b66b048d from memory into f19
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
fnmsub.s f4, f5, f19, f20, dyn # perform operation
fnmsub.s f4, f5, f19, f20, rdn # perform operation
fnmsub.s f4, f5, f19, f20, rmm # perform operation
fnmsub.s f4, f5, f19, f20, rne # perform operation
fnmsub.s f4, f5, f19, f20, rtz # perform operation
fnmsub.s f4, f5, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f5, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f5, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f5, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f5, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f5, f19, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fc00000)
li x6, 0x7b8de10569c18cb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0x285a85333bb1540c # load x3 with value 0x285a85333bb1540c
sw x3, 0(x2) # store 0x285a85333bb1540c in memory
flw f31, 0(x2) # load 0x285a85333bb1540c from memory into f31
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
fnmsub.s f6, f20, f31, f8, dyn # perform operation
fnmsub.s f6, f20, f31, f8, rdn # perform operation
fnmsub.s f6, f20, f31, f8, rmm # perform operation
fnmsub.s f6, f20, f31, f8, rne # perform operation
fnmsub.s f6, f20, f31, f8, rtz # perform operation
fnmsub.s f6, f20, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f20, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f20, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f20, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f20, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f20, f31, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffffff)
li x21, 0x449f914b78b5bbc0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0xe2d099ef83e127d4 # load x3 with value 0xe2d099ef83e127d4
sw x3, 0(x2) # store 0xe2d099ef83e127d4 in memory
flw f27, 0(x2) # load 0xe2d099ef83e127d4 from memory into f27
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
fnmsub.s f21, f14, f27, f3, dyn # perform operation
fnmsub.s f21, f14, f27, f3, rdn # perform operation
fnmsub.s f21, f14, f27, f3, rmm # perform operation
fnmsub.s f21, f14, f27, f3, rne # perform operation
fnmsub.s f21, f14, f27, f3, rtz # perform operation
fnmsub.s f21, f14, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f14, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f14, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f14, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f14, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f14, f27, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800001)
li x6, 0xc938718106072f00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0xbfee65186d7541cf # load x3 with value 0xbfee65186d7541cf
sw x3, 0(x2) # store 0xbfee65186d7541cf in memory
flw f11, 0(x2) # load 0xbfee65186d7541cf from memory into f11
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
fnmsub.s f6, f20, f11, f25, dyn # perform operation
fnmsub.s f6, f20, f11, f25, rdn # perform operation
fnmsub.s f6, f20, f11, f25, rmm # perform operation
fnmsub.s f6, f20, f11, f25, rne # perform operation
fnmsub.s f6, f20, f11, f25, rtz # perform operation
fnmsub.s f6, f20, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f20, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f20, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f20, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f20, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f20, f11, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fbfffff)
li x5, 0x48302c7d0b4b4757 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x4ab9f96d12ab7a2c # load x3 with value 0x4ab9f96d12ab7a2c
sw x3, 0(x2) # store 0x4ab9f96d12ab7a2c in memory
flw f22, 0(x2) # load 0x4ab9f96d12ab7a2c from memory into f22
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
fnmsub.s f5, f13, f22, f6, dyn # perform operation
fnmsub.s f5, f13, f22, f6, rdn # perform operation
fnmsub.s f5, f13, f22, f6, rmm # perform operation
fnmsub.s f5, f13, f22, f6, rne # perform operation
fnmsub.s f5, f13, f22, f6, rtz # perform operation
fnmsub.s f5, f13, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f13, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f13, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f13, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f13, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f13, f22, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7ef8654f)
li x15, 0xea09e74781b77176 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0x34bbeecdcc730d9a # load x3 with value 0x34bbeecdcc730d9a
sw x3, 0(x2) # store 0x34bbeecdcc730d9a in memory
flw f27, 0(x2) # load 0x34bbeecdcc730d9a from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
fnmsub.s f15, f3, f27, f9, dyn # perform operation
fnmsub.s f15, f3, f27, f9, rdn # perform operation
fnmsub.s f15, f3, f27, f9, rmm # perform operation
fnmsub.s f15, f3, f27, f9, rne # perform operation
fnmsub.s f15, f3, f27, f9, rtz # perform operation
fnmsub.s f15, f3, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f3, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f3, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f3, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f3, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f3, f27, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x813d9ab0)
li x4, 0x9a140a5687291df2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0x9646658e8b94a533 # load x3 with value 0x9646658e8b94a533
sw x3, 0(x2) # store 0x9646658e8b94a533 in memory
flw f21, 0(x2) # load 0x9646658e8b94a533 from memory into f21
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
fnmsub.s f4, f15, f21, f11, dyn # perform operation
fnmsub.s f4, f15, f21, f11, rdn # perform operation
fnmsub.s f4, f15, f21, f11, rmm # perform operation
fnmsub.s f4, f15, f21, f11, rne # perform operation
fnmsub.s f4, f15, f21, f11, rtz # perform operation
fnmsub.s f4, f15, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f15, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f15, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f15, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f15, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f15, f21, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x0)
li x8, 0x33321eb8f5185803 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0x60ff92399e7e9ee7 # load x3 with value 0x60ff92399e7e9ee7
sw x3, 0(x2) # store 0x60ff92399e7e9ee7 in memory
flw f26, 0(x2) # load 0x60ff92399e7e9ee7 from memory into f26
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fnmsub.s f8, f6, f26, f28, dyn # perform operation
fnmsub.s f8, f6, f26, f28, rdn # perform operation
fnmsub.s f8, f6, f26, f28, rmm # perform operation
fnmsub.s f8, f6, f26, f28, rne # perform operation
fnmsub.s f8, f6, f26, f28, rtz # perform operation
fnmsub.s f8, f6, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f6, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f6, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f6, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f6, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f6, f26, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000000)
li x1, 0x10f18327876b0128 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0x3e7b876ad54c3702 # load x3 with value 0x3e7b876ad54c3702
sw x3, 0(x2) # store 0x3e7b876ad54c3702 in memory
flw f24, 0(x2) # load 0x3e7b876ad54c3702 from memory into f24
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
fnmsub.s f1, f31, f24, f20, dyn # perform operation
fnmsub.s f1, f31, f24, f20, rdn # perform operation
fnmsub.s f1, f31, f24, f20, rmm # perform operation
fnmsub.s f1, f31, f24, f20, rne # perform operation
fnmsub.s f1, f31, f24, f20, rtz # perform operation
fnmsub.s f1, f31, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f31, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f31, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f31, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f31, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f31, f24, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3f800000)
li x7, 0x39b00fabfcc54466 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
li x3, 0xc0f2d72ee34ee488 # load x3 with value 0xc0f2d72ee34ee488
sw x3, 0(x2) # store 0xc0f2d72ee34ee488 in memory
flw f22, 0(x2) # load 0xc0f2d72ee34ee488 from memory into f22
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
fnmsub.s f7, f12, f22, f15, dyn # perform operation
fnmsub.s f7, f12, f22, f15, rdn # perform operation
fnmsub.s f7, f12, f22, f15, rmm # perform operation
fnmsub.s f7, f12, f22, f15, rne # perform operation
fnmsub.s f7, f12, f22, f15, rtz # perform operation
fnmsub.s f7, f12, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f12, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f12, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f12, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f12, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f12, f22, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbf800000)
li x7, 0x0f7d4363835cc1bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0xf82f093fb26cba78 # load x3 with value 0xf82f093fb26cba78
sw x3, 0(x2) # store 0xf82f093fb26cba78 in memory
flw f24, 0(x2) # load 0xf82f093fb26cba78 from memory into f24
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fnmsub.s f7, f30, f24, f15, dyn # perform operation
fnmsub.s f7, f30, f24, f15, rdn # perform operation
fnmsub.s f7, f30, f24, f15, rmm # perform operation
fnmsub.s f7, f30, f24, f15, rne # perform operation
fnmsub.s f7, f30, f24, f15, rtz # perform operation
fnmsub.s f7, f30, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f30, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f30, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f30, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f30, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f30, f24, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3fc00000)
li x15, 0x4f175217a87ccd4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x6f3950e4594030b9 # load x3 with value 0x6f3950e4594030b9
sw x3, 0(x2) # store 0x6f3950e4594030b9 in memory
flw f4, 0(x2) # load 0x6f3950e4594030b9 from memory into f4
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fnmsub.s f15, f29, f4, f3, dyn # perform operation
fnmsub.s f15, f29, f4, f3, rdn # perform operation
fnmsub.s f15, f29, f4, f3, rmm # perform operation
fnmsub.s f15, f29, f4, f3, rne # perform operation
fnmsub.s f15, f29, f4, f3, rtz # perform operation
fnmsub.s f15, f29, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f29, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f29, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f29, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f29, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f29, f4, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbfc00000)
li x19, 0xa861c1c88e50ed57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x5340a7072518ebdf # load x3 with value 0x5340a7072518ebdf
sw x3, 0(x2) # store 0x5340a7072518ebdf in memory
flw f21, 0(x2) # load 0x5340a7072518ebdf from memory into f21
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
fnmsub.s f19, f29, f21, f7, dyn # perform operation
fnmsub.s f19, f29, f21, f7, rdn # perform operation
fnmsub.s f19, f29, f21, f7, rmm # perform operation
fnmsub.s f19, f29, f21, f7, rne # perform operation
fnmsub.s f19, f29, f21, f7, rtz # perform operation
fnmsub.s f19, f29, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f29, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f29, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f29, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f29, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f29, f21, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x40000000)
li x12, 0x82da436274617bae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0x5f5448e577def87a # load x3 with value 0x5f5448e577def87a
sw x3, 0(x2) # store 0x5f5448e577def87a in memory
flw f24, 0(x2) # load 0x5f5448e577def87a from memory into f24
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
fnmsub.s f12, f3, f24, f10, dyn # perform operation
fnmsub.s f12, f3, f24, f10, rdn # perform operation
fnmsub.s f12, f3, f24, f10, rmm # perform operation
fnmsub.s f12, f3, f24, f10, rne # perform operation
fnmsub.s f12, f3, f24, f10, rtz # perform operation
fnmsub.s f12, f3, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f3, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f3, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f3, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f3, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f3, f24, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xc0000000)
li x10, 0xa88c941ce39a093c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x853e940533507072 # load x3 with value 0x853e940533507072
sw x3, 0(x2) # store 0x853e940533507072 in memory
flw f12, 0(x2) # load 0x853e940533507072 from memory into f12
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
fnmsub.s f10, f23, f12, f4, dyn # perform operation
fnmsub.s f10, f23, f12, f4, rdn # perform operation
fnmsub.s f10, f23, f12, f4, rmm # perform operation
fnmsub.s f10, f23, f12, f4, rne # perform operation
fnmsub.s f10, f23, f12, f4, rtz # perform operation
fnmsub.s f10, f23, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f23, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f23, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f23, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f23, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f23, f12, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x800000)
li x1, 0xa9936e1d10b6bc6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0xe0e579c86be26bf6 # load x3 with value 0xe0e579c86be26bf6
sw x3, 0(x2) # store 0xe0e579c86be26bf6 in memory
flw f20, 0(x2) # load 0xe0e579c86be26bf6 from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
fnmsub.s f1, f3, f20, f9, dyn # perform operation
fnmsub.s f1, f3, f20, f9, rdn # perform operation
fnmsub.s f1, f3, f20, f9, rmm # perform operation
fnmsub.s f1, f3, f20, f9, rne # perform operation
fnmsub.s f1, f3, f20, f9, rtz # perform operation
fnmsub.s f1, f3, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f3, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f3, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f3, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f3, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f3, f20, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80800000)
li x15, 0xfb6b06ebfc8cf09d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
li x3, 0x2b08fb3ee626b148 # load x3 with value 0x2b08fb3ee626b148
sw x3, 0(x2) # store 0x2b08fb3ee626b148 in memory
flw f31, 0(x2) # load 0x2b08fb3ee626b148 from memory into f31
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
fnmsub.s f15, f13, f31, f27, dyn # perform operation
fnmsub.s f15, f13, f31, f27, rdn # perform operation
fnmsub.s f15, f13, f31, f27, rmm # perform operation
fnmsub.s f15, f13, f31, f27, rne # perform operation
fnmsub.s f15, f13, f31, f27, rtz # perform operation
fnmsub.s f15, f13, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f13, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f13, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f13, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f13, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f13, f31, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f7fffff)
li x22, 0xd319ab1ccbe7e0ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0xb6c4c3e83c1ad0af # load x3 with value 0xb6c4c3e83c1ad0af
sw x3, 0(x2) # store 0xb6c4c3e83c1ad0af in memory
flw f26, 0(x2) # load 0xb6c4c3e83c1ad0af from memory into f26
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
fnmsub.s f22, f15, f26, f7, dyn # perform operation
fnmsub.s f22, f15, f26, f7, rdn # perform operation
fnmsub.s f22, f15, f26, f7, rmm # perform operation
fnmsub.s f22, f15, f26, f7, rne # perform operation
fnmsub.s f22, f15, f26, f7, rtz # perform operation
fnmsub.s f22, f15, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f15, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f15, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f15, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f15, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f15, f26, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff7fffff)
li x1, 0x7076d47b78ceddb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0x678a4412a7e4c84d # load x3 with value 0x678a4412a7e4c84d
sw x3, 0(x2) # store 0x678a4412a7e4c84d in memory
flw f23, 0(x2) # load 0x678a4412a7e4c84d from memory into f23
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
fnmsub.s f1, f31, f23, f26, dyn # perform operation
fnmsub.s f1, f31, f23, f26, rdn # perform operation
fnmsub.s f1, f31, f23, f26, rmm # perform operation
fnmsub.s f1, f31, f23, f26, rne # perform operation
fnmsub.s f1, f31, f23, f26, rtz # perform operation
fnmsub.s f1, f31, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f31, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f31, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f31, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f31, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f31, f23, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffff)
li x10, 0xd67e6543d4d74e9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0x8392118f092e6512 # load x3 with value 0x8392118f092e6512
sw x3, 0(x2) # store 0x8392118f092e6512 in memory
flw f15, 0(x2) # load 0x8392118f092e6512 from memory into f15
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
fnmsub.s f10, f6, f15, f11, dyn # perform operation
fnmsub.s f10, f6, f15, f11, rdn # perform operation
fnmsub.s f10, f6, f15, f11, rmm # perform operation
fnmsub.s f10, f6, f15, f11, rne # perform operation
fnmsub.s f10, f6, f15, f11, rtz # perform operation
fnmsub.s f10, f6, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f6, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f6, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f6, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f6, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f6, f15, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x807fffff)
li x17, 0x9e3284717a862c72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x89a03cd50d9f4f46 # load x3 with value 0x89a03cd50d9f4f46
sw x3, 0(x2) # store 0x89a03cd50d9f4f46 in memory
flw f1, 0(x2) # load 0x89a03cd50d9f4f46 from memory into f1
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
fnmsub.s f17, f23, f1, f24, dyn # perform operation
fnmsub.s f17, f23, f1, f24, rdn # perform operation
fnmsub.s f17, f23, f1, f24, rmm # perform operation
fnmsub.s f17, f23, f1, f24, rne # perform operation
fnmsub.s f17, f23, f1, f24, rtz # perform operation
fnmsub.s f17, f23, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f23, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f23, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f23, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f23, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f23, f1, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x400000)
li x11, 0x81b54ac8e425aab0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0x97630ae6e368a25e # load x3 with value 0x97630ae6e368a25e
sw x3, 0(x2) # store 0x97630ae6e368a25e in memory
flw f12, 0(x2) # load 0x97630ae6e368a25e from memory into f12
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
fnmsub.s f11, f20, f12, f18, dyn # perform operation
fnmsub.s f11, f20, f12, f18, rdn # perform operation
fnmsub.s f11, f20, f12, f18, rmm # perform operation
fnmsub.s f11, f20, f12, f18, rne # perform operation
fnmsub.s f11, f20, f12, f18, rtz # perform operation
fnmsub.s f11, f20, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f20, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f20, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f20, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f20, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f20, f12, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80400000)
li x6, 0xa5594929c8c0f0c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0x9fb680d2d38a8232 # load x3 with value 0x9fb680d2d38a8232
sw x3, 0(x2) # store 0x9fb680d2d38a8232 in memory
flw f16, 0(x2) # load 0x9fb680d2d38a8232 from memory into f16
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fnmsub.s f6, f3, f16, f27, dyn # perform operation
fnmsub.s f6, f3, f16, f27, rdn # perform operation
fnmsub.s f6, f3, f16, f27, rmm # perform operation
fnmsub.s f6, f3, f16, f27, rne # perform operation
fnmsub.s f6, f3, f16, f27, rtz # perform operation
fnmsub.s f6, f3, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f3, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f3, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f3, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f3, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f3, f16, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x1)
li x16, 0xa72c01645be43114 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
li x3, 0x8c099c2438116ba3 # load x3 with value 0x8c099c2438116ba3
sw x3, 0(x2) # store 0x8c099c2438116ba3 in memory
flw f15, 0(x2) # load 0x8c099c2438116ba3 from memory into f15
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
fnmsub.s f16, f27, f15, f17, dyn # perform operation
fnmsub.s f16, f27, f15, f17, rdn # perform operation
fnmsub.s f16, f27, f15, f17, rmm # perform operation
fnmsub.s f16, f27, f15, f17, rne # perform operation
fnmsub.s f16, f27, f15, f17, rtz # perform operation
fnmsub.s f16, f27, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f27, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f27, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f27, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f27, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f27, f15, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000001)
li x1, 0xbab3d53386524f96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
li x3, 0x51c974305724fcbb # load x3 with value 0x51c974305724fcbb
sw x3, 0(x2) # store 0x51c974305724fcbb in memory
flw f17, 0(x2) # load 0x51c974305724fcbb from memory into f17
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fnmsub.s f1, f26, f17, f21, dyn # perform operation
fnmsub.s f1, f26, f17, f21, rdn # perform operation
fnmsub.s f1, f26, f17, f21, rmm # perform operation
fnmsub.s f1, f26, f17, f21, rne # perform operation
fnmsub.s f1, f26, f17, f21, rtz # perform operation
fnmsub.s f1, f26, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f26, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f26, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f26, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f26, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f26, f17, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800000)
li x29, 0x6573c0a989abad69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0x1aeb040e28a0ae5d # load x3 with value 0x1aeb040e28a0ae5d
sw x3, 0(x2) # store 0x1aeb040e28a0ae5d in memory
flw f28, 0(x2) # load 0x1aeb040e28a0ae5d from memory into f28
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
fnmsub.s f29, f2, f28, f3, dyn # perform operation
fnmsub.s f29, f2, f28, f3, rdn # perform operation
fnmsub.s f29, f2, f28, f3, rmm # perform operation
fnmsub.s f29, f2, f28, f3, rne # perform operation
fnmsub.s f29, f2, f28, f3, rtz # perform operation
fnmsub.s f29, f2, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f2, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f2, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f2, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f2, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f2, f28, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff800000)
li x7, 0x8e19d1a3c1040b1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x782c88fefa57f854 # load x3 with value 0x782c88fefa57f854
sw x3, 0(x2) # store 0x782c88fefa57f854 in memory
flw f2, 0(x2) # load 0x782c88fefa57f854 from memory into f2
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
fnmsub.s f7, f14, f2, f1, dyn # perform operation
fnmsub.s f7, f14, f2, f1, rdn # perform operation
fnmsub.s f7, f14, f2, f1, rmm # perform operation
fnmsub.s f7, f14, f2, f1, rne # perform operation
fnmsub.s f7, f14, f2, f1, rtz # perform operation
fnmsub.s f7, f14, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f14, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f14, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f14, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f14, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f14, f2, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fc00000)
li x7, 0x0b4dd9870a2c25a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
li x3, 0xb0fdf60faf58928d # load x3 with value 0xb0fdf60faf58928d
sw x3, 0(x2) # store 0xb0fdf60faf58928d in memory
flw f29, 0(x2) # load 0xb0fdf60faf58928d from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
fnmsub.s f7, f13, f29, f31, dyn # perform operation
fnmsub.s f7, f13, f29, f31, rdn # perform operation
fnmsub.s f7, f13, f29, f31, rmm # perform operation
fnmsub.s f7, f13, f29, f31, rne # perform operation
fnmsub.s f7, f13, f29, f31, rtz # perform operation
fnmsub.s f7, f13, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f13, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f13, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f13, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f13, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f13, f29, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffffff)
li x9, 0xc232943b70c91171 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x10d9d8c7b4087f0d # load x3 with value 0x10d9d8c7b4087f0d
sw x3, 0(x2) # store 0x10d9d8c7b4087f0d in memory
flw f13, 0(x2) # load 0x10d9d8c7b4087f0d from memory into f13
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
fnmsub.s f9, f14, f13, f1, dyn # perform operation
fnmsub.s f9, f14, f13, f1, rdn # perform operation
fnmsub.s f9, f14, f13, f1, rmm # perform operation
fnmsub.s f9, f14, f13, f1, rne # perform operation
fnmsub.s f9, f14, f13, f1, rtz # perform operation
fnmsub.s f9, f14, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f14, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f14, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f14, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f14, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f14, f13, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800001)
li x28, 0x0b945a31513fac97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x1ec620d2fb97153f # load x3 with value 0x1ec620d2fb97153f
sw x3, 0(x2) # store 0x1ec620d2fb97153f in memory
flw f19, 0(x2) # load 0x1ec620d2fb97153f from memory into f19
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
fnmsub.s f28, f30, f19, f3, dyn # perform operation
fnmsub.s f28, f30, f19, f3, rdn # perform operation
fnmsub.s f28, f30, f19, f3, rmm # perform operation
fnmsub.s f28, f30, f19, f3, rne # perform operation
fnmsub.s f28, f30, f19, f3, rtz # perform operation
fnmsub.s f28, f30, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f30, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f30, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f30, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f30, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f30, f19, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fbfffff)
li x21, 0xa051573b8c702fa2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x680474afade31c35 # load x3 with value 0x680474afade31c35
sw x3, 0(x2) # store 0x680474afade31c35 in memory
flw f23, 0(x2) # load 0x680474afade31c35 from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
fnmsub.s f21, f14, f23, f29, dyn # perform operation
fnmsub.s f21, f14, f23, f29, rdn # perform operation
fnmsub.s f21, f14, f23, f29, rmm # perform operation
fnmsub.s f21, f14, f23, f29, rne # perform operation
fnmsub.s f21, f14, f23, f29, rtz # perform operation
fnmsub.s f21, f14, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f14, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f14, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f14, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f14, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f14, f23, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7ef8654f)
li x24, 0xf8e959c73aadb211 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
li x3, 0xbeb558bf84076e28 # load x3 with value 0xbeb558bf84076e28
sw x3, 0(x2) # store 0xbeb558bf84076e28 in memory
flw f10, 0(x2) # load 0xbeb558bf84076e28 from memory into f10
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
fnmsub.s f24, f25, f10, f3, dyn # perform operation
fnmsub.s f24, f25, f10, f3, rdn # perform operation
fnmsub.s f24, f25, f10, f3, rmm # perform operation
fnmsub.s f24, f25, f10, f3, rne # perform operation
fnmsub.s f24, f25, f10, f3, rtz # perform operation
fnmsub.s f24, f25, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f25, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f25, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f25, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f25, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f25, f10, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x813d9ab0)
li x14, 0x6d52065c7533b56a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0xff739d1822496e82 # load x3 with value 0xff739d1822496e82
sw x3, 0(x2) # store 0xff739d1822496e82 in memory
flw f13, 0(x2) # load 0xff739d1822496e82 from memory into f13
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
fnmsub.s f14, f5, f13, f17, dyn # perform operation
fnmsub.s f14, f5, f13, f17, rdn # perform operation
fnmsub.s f14, f5, f13, f17, rmm # perform operation
fnmsub.s f14, f5, f13, f17, rne # perform operation
fnmsub.s f14, f5, f13, f17, rtz # perform operation
fnmsub.s f14, f5, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f5, f13, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x0)
li x13, 0x4d91715537115611 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x6461ff0505bdba02 # load x3 with value 0x6461ff0505bdba02
sw x3, 0(x2) # store 0x6461ff0505bdba02 in memory
flw f21, 0(x2) # load 0x6461ff0505bdba02 from memory into f21
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
fnmsub.s f13, f14, f21, f3, dyn # perform operation
fnmsub.s f13, f14, f21, f3, rdn # perform operation
fnmsub.s f13, f14, f21, f3, rmm # perform operation
fnmsub.s f13, f14, f21, f3, rne # perform operation
fnmsub.s f13, f14, f21, f3, rtz # perform operation
fnmsub.s f13, f14, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f14, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f14, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f14, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f14, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f14, f21, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000000)
li x13, 0xc6cef35acc22ea6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
li x3, 0x58a98c420829a13e # load x3 with value 0x58a98c420829a13e
sw x3, 0(x2) # store 0x58a98c420829a13e in memory
flw f29, 0(x2) # load 0x58a98c420829a13e from memory into f29
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
fnmsub.s f13, f18, f29, f7, dyn # perform operation
fnmsub.s f13, f18, f29, f7, rdn # perform operation
fnmsub.s f13, f18, f29, f7, rmm # perform operation
fnmsub.s f13, f18, f29, f7, rne # perform operation
fnmsub.s f13, f18, f29, f7, rtz # perform operation
fnmsub.s f13, f18, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f18, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f18, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f18, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f18, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f18, f29, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3f800000)
li x27, 0x5f873e7340be25cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
li x3, 0x76070d95b8f7fb8f # load x3 with value 0x76070d95b8f7fb8f
sw x3, 0(x2) # store 0x76070d95b8f7fb8f in memory
flw f3, 0(x2) # load 0x76070d95b8f7fb8f from memory into f3
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
fnmsub.s f27, f9, f3, f30, dyn # perform operation
fnmsub.s f27, f9, f3, f30, rdn # perform operation
fnmsub.s f27, f9, f3, f30, rmm # perform operation
fnmsub.s f27, f9, f3, f30, rne # perform operation
fnmsub.s f27, f9, f3, f30, rtz # perform operation
fnmsub.s f27, f9, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f9, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f9, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f9, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f9, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f9, f3, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbf800000)
li x26, 0x02f6fd87bf16da63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
li x3, 0x33eef47d99ae1af # load x3 with value 0x33eef47d99ae1af
sw x3, 0(x2) # store 0x33eef47d99ae1af in memory
flw f25, 0(x2) # load 0x33eef47d99ae1af from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fnmsub.s f26, f13, f25, f18, dyn # perform operation
fnmsub.s f26, f13, f25, f18, rdn # perform operation
fnmsub.s f26, f13, f25, f18, rmm # perform operation
fnmsub.s f26, f13, f25, f18, rne # perform operation
fnmsub.s f26, f13, f25, f18, rtz # perform operation
fnmsub.s f26, f13, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f13, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f13, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f13, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f13, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f13, f25, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3fc00000)
li x18, 0xf11fed4ee20896a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0x51010c6be3daf652 # load x3 with value 0x51010c6be3daf652
sw x3, 0(x2) # store 0x51010c6be3daf652 in memory
flw f10, 0(x2) # load 0x51010c6be3daf652 from memory into f10
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
fnmsub.s f18, f7, f10, f19, dyn # perform operation
fnmsub.s f18, f7, f10, f19, rdn # perform operation
fnmsub.s f18, f7, f10, f19, rmm # perform operation
fnmsub.s f18, f7, f10, f19, rne # perform operation
fnmsub.s f18, f7, f10, f19, rtz # perform operation
fnmsub.s f18, f7, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f7, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f7, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f7, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f7, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f7, f10, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbfc00000)
li x21, 0x5b19e4eb4915880b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0x7c1780bc80320ea # load x3 with value 0x7c1780bc80320ea
sw x3, 0(x2) # store 0x7c1780bc80320ea in memory
flw f6, 0(x2) # load 0x7c1780bc80320ea from memory into f6
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
fnmsub.s f21, f25, f6, f5, dyn # perform operation
fnmsub.s f21, f25, f6, f5, rdn # perform operation
fnmsub.s f21, f25, f6, f5, rmm # perform operation
fnmsub.s f21, f25, f6, f5, rne # perform operation
fnmsub.s f21, f25, f6, f5, rtz # perform operation
fnmsub.s f21, f25, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f25, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f25, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f25, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f25, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f25, f6, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x40000000)
li x12, 0x8f0602176d0ccd42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0xbe86f7198a6c68cc # load x3 with value 0xbe86f7198a6c68cc
sw x3, 0(x2) # store 0xbe86f7198a6c68cc in memory
flw f16, 0(x2) # load 0xbe86f7198a6c68cc from memory into f16
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
fnmsub.s f12, f30, f16, f27, dyn # perform operation
fnmsub.s f12, f30, f16, f27, rdn # perform operation
fnmsub.s f12, f30, f16, f27, rmm # perform operation
fnmsub.s f12, f30, f16, f27, rne # perform operation
fnmsub.s f12, f30, f16, f27, rtz # perform operation
fnmsub.s f12, f30, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f30, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f30, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f30, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f30, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f30, f16, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xc0000000)
li x23, 0xb907e20d4d179fb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
li x3, 0xdfd83046ee086080 # load x3 with value 0xdfd83046ee086080
sw x3, 0(x2) # store 0xdfd83046ee086080 in memory
flw f14, 0(x2) # load 0xdfd83046ee086080 from memory into f14
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
fnmsub.s f23, f31, f14, f16, dyn # perform operation
fnmsub.s f23, f31, f14, f16, rdn # perform operation
fnmsub.s f23, f31, f14, f16, rmm # perform operation
fnmsub.s f23, f31, f14, f16, rne # perform operation
fnmsub.s f23, f31, f14, f16, rtz # perform operation
fnmsub.s f23, f31, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f31, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f31, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f31, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f31, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f31, f14, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x800000)
li x5, 0x4998963c927be2be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
li x3, 0x34d45b6bec44f28e # load x3 with value 0x34d45b6bec44f28e
sw x3, 0(x2) # store 0x34d45b6bec44f28e in memory
flw f1, 0(x2) # load 0x34d45b6bec44f28e from memory into f1
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
fnmsub.s f5, f29, f1, f21, dyn # perform operation
fnmsub.s f5, f29, f1, f21, rdn # perform operation
fnmsub.s f5, f29, f1, f21, rmm # perform operation
fnmsub.s f5, f29, f1, f21, rne # perform operation
fnmsub.s f5, f29, f1, f21, rtz # perform operation
fnmsub.s f5, f29, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f29, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f29, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f29, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f29, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f29, f1, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80800000)
li x17, 0x3fe81f29af7b95ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x583acf263da6e585 # load x3 with value 0x583acf263da6e585
sw x3, 0(x2) # store 0x583acf263da6e585 in memory
flw f13, 0(x2) # load 0x583acf263da6e585 from memory into f13
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
fnmsub.s f17, f14, f13, f9, dyn # perform operation
fnmsub.s f17, f14, f13, f9, rdn # perform operation
fnmsub.s f17, f14, f13, f9, rmm # perform operation
fnmsub.s f17, f14, f13, f9, rne # perform operation
fnmsub.s f17, f14, f13, f9, rtz # perform operation
fnmsub.s f17, f14, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f14, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f14, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f14, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f14, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f14, f13, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f7fffff)
li x31, 0x56e97b73914973d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0xd02a95d1a61cfdef # load x3 with value 0xd02a95d1a61cfdef
sw x3, 0(x2) # store 0xd02a95d1a61cfdef in memory
flw f1, 0(x2) # load 0xd02a95d1a61cfdef from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
fnmsub.s f31, f21, f1, f26, dyn # perform operation
fnmsub.s f31, f21, f1, f26, rdn # perform operation
fnmsub.s f31, f21, f1, f26, rmm # perform operation
fnmsub.s f31, f21, f1, f26, rne # perform operation
fnmsub.s f31, f21, f1, f26, rtz # perform operation
fnmsub.s f31, f21, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f21, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f21, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f21, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f21, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f21, f1, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff7fffff)
li x1, 0x9016308cdf3ab42c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
li x3, 0x2ce686f573d44824 # load x3 with value 0x2ce686f573d44824
sw x3, 0(x2) # store 0x2ce686f573d44824 in memory
flw f18, 0(x2) # load 0x2ce686f573d44824 from memory into f18
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
fnmsub.s f1, f16, f18, f2, dyn # perform operation
fnmsub.s f1, f16, f18, f2, rdn # perform operation
fnmsub.s f1, f16, f18, f2, rmm # perform operation
fnmsub.s f1, f16, f18, f2, rne # perform operation
fnmsub.s f1, f16, f18, f2, rtz # perform operation
fnmsub.s f1, f16, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f16, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f16, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f16, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f16, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f16, f18, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffff)
li x13, 0xfa342c00643fa635 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0x9e1948f2d9386da5 # load x3 with value 0x9e1948f2d9386da5
sw x3, 0(x2) # store 0x9e1948f2d9386da5 in memory
flw f12, 0(x2) # load 0x9e1948f2d9386da5 from memory into f12
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
fnmsub.s f13, f1, f12, f2, dyn # perform operation
fnmsub.s f13, f1, f12, f2, rdn # perform operation
fnmsub.s f13, f1, f12, f2, rmm # perform operation
fnmsub.s f13, f1, f12, f2, rne # perform operation
fnmsub.s f13, f1, f12, f2, rtz # perform operation
fnmsub.s f13, f1, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f1, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f1, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f1, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f1, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f1, f12, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x807fffff)
li x27, 0xda7f8eaca1c8d30a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0x8918565c16b839af # load x3 with value 0x8918565c16b839af
sw x3, 0(x2) # store 0x8918565c16b839af in memory
flw f18, 0(x2) # load 0x8918565c16b839af from memory into f18
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fnmsub.s f27, f12, f18, f9, dyn # perform operation
fnmsub.s f27, f12, f18, f9, rdn # perform operation
fnmsub.s f27, f12, f18, f9, rmm # perform operation
fnmsub.s f27, f12, f18, f9, rne # perform operation
fnmsub.s f27, f12, f18, f9, rtz # perform operation
fnmsub.s f27, f12, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f12, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f12, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f12, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f12, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f12, f18, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x400000)
li x17, 0xf200a87a947082b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0xf6b6b2fdf5507c29 # load x3 with value 0xf6b6b2fdf5507c29
sw x3, 0(x2) # store 0xf6b6b2fdf5507c29 in memory
flw f27, 0(x2) # load 0xf6b6b2fdf5507c29 from memory into f27
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
fnmsub.s f17, f5, f27, f21, dyn # perform operation
fnmsub.s f17, f5, f27, f21, rdn # perform operation
fnmsub.s f17, f5, f27, f21, rmm # perform operation
fnmsub.s f17, f5, f27, f21, rne # perform operation
fnmsub.s f17, f5, f27, f21, rtz # perform operation
fnmsub.s f17, f5, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f5, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f5, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f5, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f5, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f5, f27, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80400000)
li x10, 0xff8e408741fcb74c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0xb05bb6aaddfc110 # load x3 with value 0xb05bb6aaddfc110
sw x3, 0(x2) # store 0xb05bb6aaddfc110 in memory
flw f3, 0(x2) # load 0xb05bb6aaddfc110 from memory into f3
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
fnmsub.s f10, f17, f3, f18, dyn # perform operation
fnmsub.s f10, f17, f3, f18, rdn # perform operation
fnmsub.s f10, f17, f3, f18, rmm # perform operation
fnmsub.s f10, f17, f3, f18, rne # perform operation
fnmsub.s f10, f17, f3, f18, rtz # perform operation
fnmsub.s f10, f17, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f17, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f17, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f17, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f17, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f17, f3, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x1)
li x17, 0xd53d4b9307234177 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0xbf5533fb734dbd99 # load x3 with value 0xbf5533fb734dbd99
sw x3, 0(x2) # store 0xbf5533fb734dbd99 in memory
flw f7, 0(x2) # load 0xbf5533fb734dbd99 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
fnmsub.s f17, f10, f7, f5, dyn # perform operation
fnmsub.s f17, f10, f7, f5, rdn # perform operation
fnmsub.s f17, f10, f7, f5, rmm # perform operation
fnmsub.s f17, f10, f7, f5, rne # perform operation
fnmsub.s f17, f10, f7, f5, rtz # perform operation
fnmsub.s f17, f10, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f10, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f10, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f10, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f10, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f10, f7, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000001)
li x21, 0xe5e20a9406077d0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
li x3, 0xf69aab94dfa205ba # load x3 with value 0xf69aab94dfa205ba
sw x3, 0(x2) # store 0xf69aab94dfa205ba in memory
flw f25, 0(x2) # load 0xf69aab94dfa205ba from memory into f25
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
fnmsub.s f21, f9, f25, f19, dyn # perform operation
fnmsub.s f21, f9, f25, f19, rdn # perform operation
fnmsub.s f21, f9, f25, f19, rmm # perform operation
fnmsub.s f21, f9, f25, f19, rne # perform operation
fnmsub.s f21, f9, f25, f19, rtz # perform operation
fnmsub.s f21, f9, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f9, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f9, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f9, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f9, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f9, f25, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800000)
li x20, 0xc828ba6c47d78d3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x72e67c6283b19a11 # load x3 with value 0x72e67c6283b19a11
sw x3, 0(x2) # store 0x72e67c6283b19a11 in memory
flw f16, 0(x2) # load 0x72e67c6283b19a11 from memory into f16
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
fnmsub.s f20, f14, f16, f1, dyn # perform operation
fnmsub.s f20, f14, f16, f1, rdn # perform operation
fnmsub.s f20, f14, f16, f1, rmm # perform operation
fnmsub.s f20, f14, f16, f1, rne # perform operation
fnmsub.s f20, f14, f16, f1, rtz # perform operation
fnmsub.s f20, f14, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f14, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f14, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f14, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f14, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f14, f16, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff800000)
li x16, 0xab194c1a9ea28fed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0x526b02119306c218 # load x3 with value 0x526b02119306c218
sw x3, 0(x2) # store 0x526b02119306c218 in memory
flw f30, 0(x2) # load 0x526b02119306c218 from memory into f30
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
fnmsub.s f16, f20, f30, f11, dyn # perform operation
fnmsub.s f16, f20, f30, f11, rdn # perform operation
fnmsub.s f16, f20, f30, f11, rmm # perform operation
fnmsub.s f16, f20, f30, f11, rne # perform operation
fnmsub.s f16, f20, f30, f11, rtz # perform operation
fnmsub.s f16, f20, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f20, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f20, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f20, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f20, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f20, f30, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fc00000)
li x10, 0x695a6c7c4ea42a84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
li x3, 0xaf0e9ed61dfcbf23 # load x3 with value 0xaf0e9ed61dfcbf23
sw x3, 0(x2) # store 0xaf0e9ed61dfcbf23 in memory
flw f28, 0(x2) # load 0xaf0e9ed61dfcbf23 from memory into f28
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fnmsub.s f10, f15, f28, f18, dyn # perform operation
fnmsub.s f10, f15, f28, f18, rdn # perform operation
fnmsub.s f10, f15, f28, f18, rmm # perform operation
fnmsub.s f10, f15, f28, f18, rne # perform operation
fnmsub.s f10, f15, f28, f18, rtz # perform operation
fnmsub.s f10, f15, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f15, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f15, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f15, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f15, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f15, f28, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffffff)
li x8, 0xe0289c83168d86ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
li x3, 0x1220a4851f2277d6 # load x3 with value 0x1220a4851f2277d6
sw x3, 0(x2) # store 0x1220a4851f2277d6 in memory
flw f13, 0(x2) # load 0x1220a4851f2277d6 from memory into f13
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fnmsub.s f8, f16, f13, f20, dyn # perform operation
fnmsub.s f8, f16, f13, f20, rdn # perform operation
fnmsub.s f8, f16, f13, f20, rmm # perform operation
fnmsub.s f8, f16, f13, f20, rne # perform operation
fnmsub.s f8, f16, f13, f20, rtz # perform operation
fnmsub.s f8, f16, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f16, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f16, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f16, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f16, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f16, f13, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800001)
li x24, 0x5caace235f438da1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0x5ef3bd1f019b6461 # load x3 with value 0x5ef3bd1f019b6461
sw x3, 0(x2) # store 0x5ef3bd1f019b6461 in memory
flw f7, 0(x2) # load 0x5ef3bd1f019b6461 from memory into f7
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
fnmsub.s f24, f5, f7, f23, dyn # perform operation
fnmsub.s f24, f5, f7, f23, rdn # perform operation
fnmsub.s f24, f5, f7, f23, rmm # perform operation
fnmsub.s f24, f5, f7, f23, rne # perform operation
fnmsub.s f24, f5, f7, f23, rtz # perform operation
fnmsub.s f24, f5, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f5, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f5, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f5, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f5, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f5, f7, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fbfffff)
li x5, 0x6856fce0b9741789 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
li x3, 0xeeac38b6bdfc8f52 # load x3 with value 0xeeac38b6bdfc8f52
sw x3, 0(x2) # store 0xeeac38b6bdfc8f52 in memory
flw f12, 0(x2) # load 0xeeac38b6bdfc8f52 from memory into f12
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
fnmsub.s f5, f2, f12, f30, dyn # perform operation
fnmsub.s f5, f2, f12, f30, rdn # perform operation
fnmsub.s f5, f2, f12, f30, rmm # perform operation
fnmsub.s f5, f2, f12, f30, rne # perform operation
fnmsub.s f5, f2, f12, f30, rtz # perform operation
fnmsub.s f5, f2, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f2, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f2, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f2, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f2, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f2, f12, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7ef8654f)
li x2, 0xa5db5352bc137d7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0x4009dbd545c4e399 # load x3 with value 0x4009dbd545c4e399
sw x3, 0(x2) # store 0x4009dbd545c4e399 in memory
flw f15, 0(x2) # load 0x4009dbd545c4e399 from memory into f15
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
fnmsub.s f2, f8, f15, f3, dyn # perform operation
fnmsub.s f2, f8, f15, f3, rdn # perform operation
fnmsub.s f2, f8, f15, f3, rmm # perform operation
fnmsub.s f2, f8, f15, f3, rne # perform operation
fnmsub.s f2, f8, f15, f3, rtz # perform operation
fnmsub.s f2, f8, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f8, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f8, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f8, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f8, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f8, f15, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x813d9ab0)
li x16, 0x668532f1e686161c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
li x3, 0x36f457014de8c320 # load x3 with value 0x36f457014de8c320
sw x3, 0(x2) # store 0x36f457014de8c320 in memory
flw f26, 0(x2) # load 0x36f457014de8c320 from memory into f26
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
fnmsub.s f16, f13, f26, f9, dyn # perform operation
fnmsub.s f16, f13, f26, f9, rdn # perform operation
fnmsub.s f16, f13, f26, f9, rmm # perform operation
fnmsub.s f16, f13, f26, f9, rne # perform operation
fnmsub.s f16, f13, f26, f9, rtz # perform operation
fnmsub.s f16, f13, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f13, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f13, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f13, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f13, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f13, f26, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x0)
li x31, 0xbce266a7ff8005ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
li x3, 0x6c4d15424c5ebbb2 # load x3 with value 0x6c4d15424c5ebbb2
sw x3, 0(x2) # store 0x6c4d15424c5ebbb2 in memory
flw f17, 0(x2) # load 0x6c4d15424c5ebbb2 from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
fnmsub.s f31, f15, f17, f27, dyn # perform operation
fnmsub.s f31, f15, f17, f27, rdn # perform operation
fnmsub.s f31, f15, f17, f27, rmm # perform operation
fnmsub.s f31, f15, f17, f27, rne # perform operation
fnmsub.s f31, f15, f17, f27, rtz # perform operation
fnmsub.s f31, f15, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f15, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f15, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f15, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f15, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f15, f17, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000000)
li x25, 0xbb80d8406830544b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
li x3, 0xada2b18444cc5392 # load x3 with value 0xada2b18444cc5392
sw x3, 0(x2) # store 0xada2b18444cc5392 in memory
flw f11, 0(x2) # load 0xada2b18444cc5392 from memory into f11
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
fnmsub.s f25, f29, f11, f27, dyn # perform operation
fnmsub.s f25, f29, f11, f27, rdn # perform operation
fnmsub.s f25, f29, f11, f27, rmm # perform operation
fnmsub.s f25, f29, f11, f27, rne # perform operation
fnmsub.s f25, f29, f11, f27, rtz # perform operation
fnmsub.s f25, f29, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f29, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f29, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f29, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f29, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f29, f11, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3f800000)
li x6, 0x4eacca4774566688 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0xabd763f673394ab5 # load x3 with value 0xabd763f673394ab5
sw x3, 0(x2) # store 0xabd763f673394ab5 in memory
flw f28, 0(x2) # load 0xabd763f673394ab5 from memory into f28
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
fnmsub.s f6, f13, f28, f21, dyn # perform operation
fnmsub.s f6, f13, f28, f21, rdn # perform operation
fnmsub.s f6, f13, f28, f21, rmm # perform operation
fnmsub.s f6, f13, f28, f21, rne # perform operation
fnmsub.s f6, f13, f28, f21, rtz # perform operation
fnmsub.s f6, f13, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f13, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f13, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f13, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f13, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f13, f28, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbf800000)
li x17, 0x8c4e39194a24590a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0x95ac5ca2149a2241 # load x3 with value 0x95ac5ca2149a2241
sw x3, 0(x2) # store 0x95ac5ca2149a2241 in memory
flw f19, 0(x2) # load 0x95ac5ca2149a2241 from memory into f19
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fnmsub.s f17, f11, f19, f15, dyn # perform operation
fnmsub.s f17, f11, f19, f15, rdn # perform operation
fnmsub.s f17, f11, f19, f15, rmm # perform operation
fnmsub.s f17, f11, f19, f15, rne # perform operation
fnmsub.s f17, f11, f19, f15, rtz # perform operation
fnmsub.s f17, f11, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f11, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f11, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f11, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f11, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f11, f19, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3fc00000)
li x19, 0xf7d0c74fb9792146 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0x261a9d6f79772ef4 # load x3 with value 0x261a9d6f79772ef4
sw x3, 0(x2) # store 0x261a9d6f79772ef4 in memory
flw f2, 0(x2) # load 0x261a9d6f79772ef4 from memory into f2
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
fnmsub.s f19, f9, f2, f21, dyn # perform operation
fnmsub.s f19, f9, f2, f21, rdn # perform operation
fnmsub.s f19, f9, f2, f21, rmm # perform operation
fnmsub.s f19, f9, f2, f21, rne # perform operation
fnmsub.s f19, f9, f2, f21, rtz # perform operation
fnmsub.s f19, f9, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f9, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f9, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f9, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f9, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f9, f2, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbfc00000)
li x2, 0xf214ede77c51c35a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0x66528863488dc229 # load x3 with value 0x66528863488dc229
sw x3, 0(x2) # store 0x66528863488dc229 in memory
flw f23, 0(x2) # load 0x66528863488dc229 from memory into f23
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
fnmsub.s f2, f18, f23, f26, dyn # perform operation
fnmsub.s f2, f18, f23, f26, rdn # perform operation
fnmsub.s f2, f18, f23, f26, rmm # perform operation
fnmsub.s f2, f18, f23, f26, rne # perform operation
fnmsub.s f2, f18, f23, f26, rtz # perform operation
fnmsub.s f2, f18, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f18, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f18, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f18, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f18, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f18, f23, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x40000000)
li x29, 0x8cbe32ccd4b60803 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0x9d0d395f411707ab # load x3 with value 0x9d0d395f411707ab
sw x3, 0(x2) # store 0x9d0d395f411707ab in memory
flw f31, 0(x2) # load 0x9d0d395f411707ab from memory into f31
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
fnmsub.s f29, f18, f31, f21, dyn # perform operation
fnmsub.s f29, f18, f31, f21, rdn # perform operation
fnmsub.s f29, f18, f31, f21, rmm # perform operation
fnmsub.s f29, f18, f31, f21, rne # perform operation
fnmsub.s f29, f18, f31, f21, rtz # perform operation
fnmsub.s f29, f18, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f18, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f18, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f18, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f18, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f18, f31, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xc0000000)
li x3, 0x5d7af24f75d12d91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0x5caffb2ddedd1f26 # load x3 with value 0x5caffb2ddedd1f26
sw x3, 0(x2) # store 0x5caffb2ddedd1f26 in memory
flw f17, 0(x2) # load 0x5caffb2ddedd1f26 from memory into f17
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
fnmsub.s f3, f14, f17, f30, dyn # perform operation
fnmsub.s f3, f14, f17, f30, rdn # perform operation
fnmsub.s f3, f14, f17, f30, rmm # perform operation
fnmsub.s f3, f14, f17, f30, rne # perform operation
fnmsub.s f3, f14, f17, f30, rtz # perform operation
fnmsub.s f3, f14, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f14, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f14, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f14, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f14, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f14, f17, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x800000)
li x13, 0x2bd112a2d55014e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
li x3, 0xf7234e261bced4bf # load x3 with value 0xf7234e261bced4bf
sw x3, 0(x2) # store 0xf7234e261bced4bf in memory
flw f24, 0(x2) # load 0xf7234e261bced4bf from memory into f24
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
fnmsub.s f13, f29, f24, f26, dyn # perform operation
fnmsub.s f13, f29, f24, f26, rdn # perform operation
fnmsub.s f13, f29, f24, f26, rmm # perform operation
fnmsub.s f13, f29, f24, f26, rne # perform operation
fnmsub.s f13, f29, f24, f26, rtz # perform operation
fnmsub.s f13, f29, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f29, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f29, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f29, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f29, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f29, f24, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80800000)
li x3, 0xb67d8c500ad9d7b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x2892ddfbc584a42f # load x3 with value 0x2892ddfbc584a42f
sw x3, 0(x2) # store 0x2892ddfbc584a42f in memory
flw f25, 0(x2) # load 0x2892ddfbc584a42f from memory into f25
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
fnmsub.s f3, f1, f25, f26, dyn # perform operation
fnmsub.s f3, f1, f25, f26, rdn # perform operation
fnmsub.s f3, f1, f25, f26, rmm # perform operation
fnmsub.s f3, f1, f25, f26, rne # perform operation
fnmsub.s f3, f1, f25, f26, rtz # perform operation
fnmsub.s f3, f1, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f1, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f1, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f1, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f1, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f1, f25, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f7fffff)
li x10, 0x7b7033af36886b53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
li x3, 0xba12e23d3caaefc8 # load x3 with value 0xba12e23d3caaefc8
sw x3, 0(x2) # store 0xba12e23d3caaefc8 in memory
flw f24, 0(x2) # load 0xba12e23d3caaefc8 from memory into f24
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fnmsub.s f10, f22, f24, f3, dyn # perform operation
fnmsub.s f10, f22, f24, f3, rdn # perform operation
fnmsub.s f10, f22, f24, f3, rmm # perform operation
fnmsub.s f10, f22, f24, f3, rne # perform operation
fnmsub.s f10, f22, f24, f3, rtz # perform operation
fnmsub.s f10, f22, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f22, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f22, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f22, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f22, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f22, f24, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff7fffff)
li x7, 0x6b39b638d813e761 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0x340aa308bb0730bc # load x3 with value 0x340aa308bb0730bc
sw x3, 0(x2) # store 0x340aa308bb0730bc in memory
flw f1, 0(x2) # load 0x340aa308bb0730bc from memory into f1
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
fnmsub.s f7, f6, f1, f4, dyn # perform operation
fnmsub.s f7, f6, f1, f4, rdn # perform operation
fnmsub.s f7, f6, f1, f4, rmm # perform operation
fnmsub.s f7, f6, f1, f4, rne # perform operation
fnmsub.s f7, f6, f1, f4, rtz # perform operation
fnmsub.s f7, f6, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f6, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f6, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f6, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f6, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f6, f1, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffff)
li x31, 0xc61de9b7997ad17b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0x35e059653ef0bf55 # load x3 with value 0x35e059653ef0bf55
sw x3, 0(x2) # store 0x35e059653ef0bf55 in memory
flw f27, 0(x2) # load 0x35e059653ef0bf55 from memory into f27
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
fnmsub.s f31, f5, f27, f23, dyn # perform operation
fnmsub.s f31, f5, f27, f23, rdn # perform operation
fnmsub.s f31, f5, f27, f23, rmm # perform operation
fnmsub.s f31, f5, f27, f23, rne # perform operation
fnmsub.s f31, f5, f27, f23, rtz # perform operation
fnmsub.s f31, f5, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f5, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f5, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f5, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f5, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f5, f27, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x807fffff)
li x18, 0x691bd51294342d5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
li x3, 0x8ce63feca2ec2cf6 # load x3 with value 0x8ce63feca2ec2cf6
sw x3, 0(x2) # store 0x8ce63feca2ec2cf6 in memory
flw f27, 0(x2) # load 0x8ce63feca2ec2cf6 from memory into f27
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fnmsub.s f18, f31, f27, f5, dyn # perform operation
fnmsub.s f18, f31, f27, f5, rdn # perform operation
fnmsub.s f18, f31, f27, f5, rmm # perform operation
fnmsub.s f18, f31, f27, f5, rne # perform operation
fnmsub.s f18, f31, f27, f5, rtz # perform operation
fnmsub.s f18, f31, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f31, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f31, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f31, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f31, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f31, f27, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x400000)
li x24, 0xf964ecec45170faa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0x16e5f7fb59d3a6ad # load x3 with value 0x16e5f7fb59d3a6ad
sw x3, 0(x2) # store 0x16e5f7fb59d3a6ad in memory
flw f19, 0(x2) # load 0x16e5f7fb59d3a6ad from memory into f19
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
fnmsub.s f24, f6, f19, f15, dyn # perform operation
fnmsub.s f24, f6, f19, f15, rdn # perform operation
fnmsub.s f24, f6, f19, f15, rmm # perform operation
fnmsub.s f24, f6, f19, f15, rne # perform operation
fnmsub.s f24, f6, f19, f15, rtz # perform operation
fnmsub.s f24, f6, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f6, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f6, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f6, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f6, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f6, f19, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80400000)
li x12, 0xa0b7e3613d1f846d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0xd13c4f71c92f35c5 # load x3 with value 0xd13c4f71c92f35c5
sw x3, 0(x2) # store 0xd13c4f71c92f35c5 in memory
flw f9, 0(x2) # load 0xd13c4f71c92f35c5 from memory into f9
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fnmsub.s f12, f4, f9, f27, dyn # perform operation
fnmsub.s f12, f4, f9, f27, rdn # perform operation
fnmsub.s f12, f4, f9, f27, rmm # perform operation
fnmsub.s f12, f4, f9, f27, rne # perform operation
fnmsub.s f12, f4, f9, f27, rtz # perform operation
fnmsub.s f12, f4, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f4, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f4, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f4, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f4, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f4, f9, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x1)
li x20, 0xfbf823758d4007cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
li x3, 0x2e3ea202b9f6e4e1 # load x3 with value 0x2e3ea202b9f6e4e1
sw x3, 0(x2) # store 0x2e3ea202b9f6e4e1 in memory
flw f6, 0(x2) # load 0x2e3ea202b9f6e4e1 from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
fnmsub.s f20, f7, f6, f8, dyn # perform operation
fnmsub.s f20, f7, f6, f8, rdn # perform operation
fnmsub.s f20, f7, f6, f8, rmm # perform operation
fnmsub.s f20, f7, f6, f8, rne # perform operation
fnmsub.s f20, f7, f6, f8, rtz # perform operation
fnmsub.s f20, f7, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f7, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f7, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f7, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f7, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f7, f6, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000001)
li x27, 0x31b8ad023b575a68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
li x3, 0xa11fb6cc77a621ca # load x3 with value 0xa11fb6cc77a621ca
sw x3, 0(x2) # store 0xa11fb6cc77a621ca in memory
flw f18, 0(x2) # load 0xa11fb6cc77a621ca from memory into f18
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
fnmsub.s f27, f21, f18, f9, dyn # perform operation
fnmsub.s f27, f21, f18, f9, rdn # perform operation
fnmsub.s f27, f21, f18, f9, rmm # perform operation
fnmsub.s f27, f21, f18, f9, rne # perform operation
fnmsub.s f27, f21, f18, f9, rtz # perform operation
fnmsub.s f27, f21, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f21, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f21, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f21, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f21, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f21, f18, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800000)
li x3, 0xf8d9d6755b5e4ab2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0xd48424dcee6557d3 # load x3 with value 0xd48424dcee6557d3
sw x3, 0(x2) # store 0xd48424dcee6557d3 in memory
flw f23, 0(x2) # load 0xd48424dcee6557d3 from memory into f23
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
fnmsub.s f3, f5, f23, f17, dyn # perform operation
fnmsub.s f3, f5, f23, f17, rdn # perform operation
fnmsub.s f3, f5, f23, f17, rmm # perform operation
fnmsub.s f3, f5, f23, f17, rne # perform operation
fnmsub.s f3, f5, f23, f17, rtz # perform operation
fnmsub.s f3, f5, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f5, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f5, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f5, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f5, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f5, f23, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff800000)
li x17, 0xbb4136259b780ab9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
li x3, 0xdf3a79aee36ea81d # load x3 with value 0xdf3a79aee36ea81d
sw x3, 0(x2) # store 0xdf3a79aee36ea81d in memory
flw f23, 0(x2) # load 0xdf3a79aee36ea81d from memory into f23
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
fnmsub.s f17, f2, f23, f25, dyn # perform operation
fnmsub.s f17, f2, f23, f25, rdn # perform operation
fnmsub.s f17, f2, f23, f25, rmm # perform operation
fnmsub.s f17, f2, f23, f25, rne # perform operation
fnmsub.s f17, f2, f23, f25, rtz # perform operation
fnmsub.s f17, f2, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f2, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f2, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f2, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f2, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f2, f23, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fc00000)
li x25, 0xcc149409f5d8eb43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0x477e9c3c6255082e # load x3 with value 0x477e9c3c6255082e
sw x3, 0(x2) # store 0x477e9c3c6255082e in memory
flw f9, 0(x2) # load 0x477e9c3c6255082e from memory into f9
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
fnmsub.s f25, f19, f9, f22, dyn # perform operation
fnmsub.s f25, f19, f9, f22, rdn # perform operation
fnmsub.s f25, f19, f9, f22, rmm # perform operation
fnmsub.s f25, f19, f9, f22, rne # perform operation
fnmsub.s f25, f19, f9, f22, rtz # perform operation
fnmsub.s f25, f19, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f19, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffffff)
li x3, 0x222d289f8d8b1502 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0x951634cec3391f84 # load x3 with value 0x951634cec3391f84
sw x3, 0(x2) # store 0x951634cec3391f84 in memory
flw f31, 0(x2) # load 0x951634cec3391f84 from memory into f31
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fnmsub.s f3, f16, f31, f20, dyn # perform operation
fnmsub.s f3, f16, f31, f20, rdn # perform operation
fnmsub.s f3, f16, f31, f20, rmm # perform operation
fnmsub.s f3, f16, f31, f20, rne # perform operation
fnmsub.s f3, f16, f31, f20, rtz # perform operation
fnmsub.s f3, f16, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f16, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f16, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f16, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f16, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f16, f31, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800001)
li x29, 0x04e2c9c5fb6a4198 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0x2bd8233f9a84165a # load x3 with value 0x2bd8233f9a84165a
sw x3, 0(x2) # store 0x2bd8233f9a84165a in memory
flw f16, 0(x2) # load 0x2bd8233f9a84165a from memory into f16
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
fnmsub.s f29, f28, f16, f18, dyn # perform operation
fnmsub.s f29, f28, f16, f18, rdn # perform operation
fnmsub.s f29, f28, f16, f18, rmm # perform operation
fnmsub.s f29, f28, f16, f18, rne # perform operation
fnmsub.s f29, f28, f16, f18, rtz # perform operation
fnmsub.s f29, f28, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f28, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f28, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f28, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f28, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f28, f16, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fbfffff)
li x29, 0xe2c8446fd7d10ee1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0x89795cf608419de9 # load x3 with value 0x89795cf608419de9
sw x3, 0(x2) # store 0x89795cf608419de9 in memory
flw f24, 0(x2) # load 0x89795cf608419de9 from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
fnmsub.s f29, f6, f24, f7, dyn # perform operation
fnmsub.s f29, f6, f24, f7, rdn # perform operation
fnmsub.s f29, f6, f24, f7, rmm # perform operation
fnmsub.s f29, f6, f24, f7, rne # perform operation
fnmsub.s f29, f6, f24, f7, rtz # perform operation
fnmsub.s f29, f6, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f6, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f6, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f6, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f6, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f6, f24, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7ef8654f)
li x6, 0x1b048f6110e4da24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
li x3, 0x4bebb87e5d3ca19a # load x3 with value 0x4bebb87e5d3ca19a
sw x3, 0(x2) # store 0x4bebb87e5d3ca19a in memory
flw f1, 0(x2) # load 0x4bebb87e5d3ca19a from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
fnmsub.s f6, f2, f1, f28, dyn # perform operation
fnmsub.s f6, f2, f1, f28, rdn # perform operation
fnmsub.s f6, f2, f1, f28, rmm # perform operation
fnmsub.s f6, f2, f1, f28, rne # perform operation
fnmsub.s f6, f2, f1, f28, rtz # perform operation
fnmsub.s f6, f2, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f2, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f2, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f2, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f2, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f2, f1, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x813d9ab0)
li x6, 0x8e517cfccbef61cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
li x3, 0x4a81233049193c5b # load x3 with value 0x4a81233049193c5b
sw x3, 0(x2) # store 0x4a81233049193c5b in memory
flw f23, 0(x2) # load 0x4a81233049193c5b from memory into f23
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
fnmsub.s f6, f7, f23, f30, dyn # perform operation
fnmsub.s f6, f7, f23, f30, rdn # perform operation
fnmsub.s f6, f7, f23, f30, rmm # perform operation
fnmsub.s f6, f7, f23, f30, rne # perform operation
fnmsub.s f6, f7, f23, f30, rtz # perform operation
fnmsub.s f6, f7, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f7, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f7, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f7, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f7, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f7, f23, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x0)
li x29, 0x1cdd3dbfa846036b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0xadfd624c043b1cd0 # load x3 with value 0xadfd624c043b1cd0
sw x3, 0(x2) # store 0xadfd624c043b1cd0 in memory
flw f6, 0(x2) # load 0xadfd624c043b1cd0 from memory into f6
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
fnmsub.s f29, f27, f6, f31, dyn # perform operation
fnmsub.s f29, f27, f6, f31, rdn # perform operation
fnmsub.s f29, f27, f6, f31, rmm # perform operation
fnmsub.s f29, f27, f6, f31, rne # perform operation
fnmsub.s f29, f27, f6, f31, rtz # perform operation
fnmsub.s f29, f27, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f27, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f27, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f27, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f27, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f27, f6, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000000)
li x5, 0x3de94b8719e8839e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0xa845d75714a82ac8 # load x3 with value 0xa845d75714a82ac8
sw x3, 0(x2) # store 0xa845d75714a82ac8 in memory
flw f10, 0(x2) # load 0xa845d75714a82ac8 from memory into f10
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
fnmsub.s f5, f25, f10, f9, dyn # perform operation
fnmsub.s f5, f25, f10, f9, rdn # perform operation
fnmsub.s f5, f25, f10, f9, rmm # perform operation
fnmsub.s f5, f25, f10, f9, rne # perform operation
fnmsub.s f5, f25, f10, f9, rtz # perform operation
fnmsub.s f5, f25, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f25, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f25, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f25, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f25, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f25, f10, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3f800000)
li x1, 0x283be84b42841927 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
li x3, 0xec13114f74f180f6 # load x3 with value 0xec13114f74f180f6
sw x3, 0(x2) # store 0xec13114f74f180f6 in memory
flw f29, 0(x2) # load 0xec13114f74f180f6 from memory into f29
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
fnmsub.s f1, f30, f29, f14, dyn # perform operation
fnmsub.s f1, f30, f29, f14, rdn # perform operation
fnmsub.s f1, f30, f29, f14, rmm # perform operation
fnmsub.s f1, f30, f29, f14, rne # perform operation
fnmsub.s f1, f30, f29, f14, rtz # perform operation
fnmsub.s f1, f30, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f30, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f30, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f30, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f30, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f30, f29, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbf800000)
li x10, 0xa5c7c7685bf72cf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
li x3, 0xc759a5021dd75eb6 # load x3 with value 0xc759a5021dd75eb6
sw x3, 0(x2) # store 0xc759a5021dd75eb6 in memory
flw f22, 0(x2) # load 0xc759a5021dd75eb6 from memory into f22
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
fnmsub.s f10, f13, f22, f5, dyn # perform operation
fnmsub.s f10, f13, f22, f5, rdn # perform operation
fnmsub.s f10, f13, f22, f5, rmm # perform operation
fnmsub.s f10, f13, f22, f5, rne # perform operation
fnmsub.s f10, f13, f22, f5, rtz # perform operation
fnmsub.s f10, f13, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f13, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f13, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f13, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f13, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f13, f22, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3fc00000)
li x19, 0xfaa6b8130a4f799f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
li x3, 0x3db42ebbe2bec457 # load x3 with value 0x3db42ebbe2bec457
sw x3, 0(x2) # store 0x3db42ebbe2bec457 in memory
flw f23, 0(x2) # load 0x3db42ebbe2bec457 from memory into f23
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
fnmsub.s f19, f14, f23, f6, dyn # perform operation
fnmsub.s f19, f14, f23, f6, rdn # perform operation
fnmsub.s f19, f14, f23, f6, rmm # perform operation
fnmsub.s f19, f14, f23, f6, rne # perform operation
fnmsub.s f19, f14, f23, f6, rtz # perform operation
fnmsub.s f19, f14, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f14, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f14, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f14, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f14, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f14, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbfc00000)
li x5, 0x1403894ccc0361fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0xcccdcae834afccdb # load x3 with value 0xcccdcae834afccdb
sw x3, 0(x2) # store 0xcccdcae834afccdb in memory
flw f6, 0(x2) # load 0xcccdcae834afccdb from memory into f6
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
fnmsub.s f5, f25, f6, f30, dyn # perform operation
fnmsub.s f5, f25, f6, f30, rdn # perform operation
fnmsub.s f5, f25, f6, f30, rmm # perform operation
fnmsub.s f5, f25, f6, f30, rne # perform operation
fnmsub.s f5, f25, f6, f30, rtz # perform operation
fnmsub.s f5, f25, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f25, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f25, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f25, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f25, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f25, f6, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x40000000)
li x20, 0x5528f010a9bd2c86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
li x3, 0x3cfee09d347c7eac # load x3 with value 0x3cfee09d347c7eac
sw x3, 0(x2) # store 0x3cfee09d347c7eac in memory
flw f25, 0(x2) # load 0x3cfee09d347c7eac from memory into f25
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
fnmsub.s f20, f31, f25, f9, dyn # perform operation
fnmsub.s f20, f31, f25, f9, rdn # perform operation
fnmsub.s f20, f31, f25, f9, rmm # perform operation
fnmsub.s f20, f31, f25, f9, rne # perform operation
fnmsub.s f20, f31, f25, f9, rtz # perform operation
fnmsub.s f20, f31, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f31, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f31, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f31, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f31, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f31, f25, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xc0000000)
li x14, 0x46d0473b9a0cdf00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0x2bfb2fd5f0b8360c # load x3 with value 0x2bfb2fd5f0b8360c
sw x3, 0(x2) # store 0x2bfb2fd5f0b8360c in memory
flw f30, 0(x2) # load 0x2bfb2fd5f0b8360c from memory into f30
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
fnmsub.s f14, f7, f30, f23, dyn # perform operation
fnmsub.s f14, f7, f30, f23, rdn # perform operation
fnmsub.s f14, f7, f30, f23, rmm # perform operation
fnmsub.s f14, f7, f30, f23, rne # perform operation
fnmsub.s f14, f7, f30, f23, rtz # perform operation
fnmsub.s f14, f7, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f7, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f7, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f7, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f7, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f7, f30, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x800000)
li x31, 0xb6494e6bf743f9b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
li x3, 0x8e8a2032e410ed40 # load x3 with value 0x8e8a2032e410ed40
sw x3, 0(x2) # store 0x8e8a2032e410ed40 in memory
flw f10, 0(x2) # load 0x8e8a2032e410ed40 from memory into f10
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fnmsub.s f31, f13, f10, f6, dyn # perform operation
fnmsub.s f31, f13, f10, f6, rdn # perform operation
fnmsub.s f31, f13, f10, f6, rmm # perform operation
fnmsub.s f31, f13, f10, f6, rne # perform operation
fnmsub.s f31, f13, f10, f6, rtz # perform operation
fnmsub.s f31, f13, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f13, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f13, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f13, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f13, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f13, f10, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80800000)
li x21, 0x934ca7b80052c2fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
li x3, 0x75f2c5d80f6beaee # load x3 with value 0x75f2c5d80f6beaee
sw x3, 0(x2) # store 0x75f2c5d80f6beaee in memory
flw f13, 0(x2) # load 0x75f2c5d80f6beaee from memory into f13
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
fnmsub.s f21, f8, f13, f29, dyn # perform operation
fnmsub.s f21, f8, f13, f29, rdn # perform operation
fnmsub.s f21, f8, f13, f29, rmm # perform operation
fnmsub.s f21, f8, f13, f29, rne # perform operation
fnmsub.s f21, f8, f13, f29, rtz # perform operation
fnmsub.s f21, f8, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f8, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f8, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f8, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f8, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f8, f13, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f7fffff)
li x17, 0x4f8112cee932ffe1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
li x3, 0x47abfd75423bf1c5 # load x3 with value 0x47abfd75423bf1c5
sw x3, 0(x2) # store 0x47abfd75423bf1c5 in memory
flw f11, 0(x2) # load 0x47abfd75423bf1c5 from memory into f11
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
fnmsub.s f17, f31, f11, f2, dyn # perform operation
fnmsub.s f17, f31, f11, f2, rdn # perform operation
fnmsub.s f17, f31, f11, f2, rmm # perform operation
fnmsub.s f17, f31, f11, f2, rne # perform operation
fnmsub.s f17, f31, f11, f2, rtz # perform operation
fnmsub.s f17, f31, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f31, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f31, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f31, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f31, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f31, f11, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff7fffff)
li x7, 0x5339f0bf9ce08aad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0x170f25e2bb9a1eac # load x3 with value 0x170f25e2bb9a1eac
sw x3, 0(x2) # store 0x170f25e2bb9a1eac in memory
flw f2, 0(x2) # load 0x170f25e2bb9a1eac from memory into f2
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
fnmsub.s f7, f29, f2, f27, dyn # perform operation
fnmsub.s f7, f29, f2, f27, rdn # perform operation
fnmsub.s f7, f29, f2, f27, rmm # perform operation
fnmsub.s f7, f29, f2, f27, rne # perform operation
fnmsub.s f7, f29, f2, f27, rtz # perform operation
fnmsub.s f7, f29, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f29, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f29, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f29, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f29, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f29, f2, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffff)
li x25, 0xf043074b67f6d9ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0x9964622db5bc109f # load x3 with value 0x9964622db5bc109f
sw x3, 0(x2) # store 0x9964622db5bc109f in memory
flw f28, 0(x2) # load 0x9964622db5bc109f from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
fnmsub.s f25, f27, f28, f26, dyn # perform operation
fnmsub.s f25, f27, f28, f26, rdn # perform operation
fnmsub.s f25, f27, f28, f26, rmm # perform operation
fnmsub.s f25, f27, f28, f26, rne # perform operation
fnmsub.s f25, f27, f28, f26, rtz # perform operation
fnmsub.s f25, f27, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f27, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f27, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f27, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f27, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f27, f28, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x807fffff)
li x23, 0x8dc348daf4090161 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0x776b7b5b38c1f8fd # load x3 with value 0x776b7b5b38c1f8fd
sw x3, 0(x2) # store 0x776b7b5b38c1f8fd in memory
flw f20, 0(x2) # load 0x776b7b5b38c1f8fd from memory into f20
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
fnmsub.s f23, f1, f20, f25, dyn # perform operation
fnmsub.s f23, f1, f20, f25, rdn # perform operation
fnmsub.s f23, f1, f20, f25, rmm # perform operation
fnmsub.s f23, f1, f20, f25, rne # perform operation
fnmsub.s f23, f1, f20, f25, rtz # perform operation
fnmsub.s f23, f1, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f1, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f1, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f1, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f1, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f1, f20, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x400000)
li x9, 0xe269d083e1cd3fe0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0x7c8e306ec651c3f7 # load x3 with value 0x7c8e306ec651c3f7
sw x3, 0(x2) # store 0x7c8e306ec651c3f7 in memory
flw f7, 0(x2) # load 0x7c8e306ec651c3f7 from memory into f7
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
fnmsub.s f9, f3, f7, f18, dyn # perform operation
fnmsub.s f9, f3, f7, f18, rdn # perform operation
fnmsub.s f9, f3, f7, f18, rmm # perform operation
fnmsub.s f9, f3, f7, f18, rne # perform operation
fnmsub.s f9, f3, f7, f18, rtz # perform operation
fnmsub.s f9, f3, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f3, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f3, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f3, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f3, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f3, f7, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80400000)
li x25, 0x253e8a2d752e7823 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
li x3, 0x222c455389dbcb29 # load x3 with value 0x222c455389dbcb29
sw x3, 0(x2) # store 0x222c455389dbcb29 in memory
flw f21, 0(x2) # load 0x222c455389dbcb29 from memory into f21
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
fnmsub.s f25, f30, f21, f10, dyn # perform operation
fnmsub.s f25, f30, f21, f10, rdn # perform operation
fnmsub.s f25, f30, f21, f10, rmm # perform operation
fnmsub.s f25, f30, f21, f10, rne # perform operation
fnmsub.s f25, f30, f21, f10, rtz # perform operation
fnmsub.s f25, f30, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f30, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f30, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f30, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f30, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f30, f21, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x1)
li x7, 0x1a1ed3296b9bbfea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0xd56c0a777013d46 # load x3 with value 0xd56c0a777013d46
sw x3, 0(x2) # store 0xd56c0a777013d46 in memory
flw f25, 0(x2) # load 0xd56c0a777013d46 from memory into f25
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
fnmsub.s f7, f4, f25, f21, dyn # perform operation
fnmsub.s f7, f4, f25, f21, rdn # perform operation
fnmsub.s f7, f4, f25, f21, rmm # perform operation
fnmsub.s f7, f4, f25, f21, rne # perform operation
fnmsub.s f7, f4, f25, f21, rtz # perform operation
fnmsub.s f7, f4, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f4, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f4, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f4, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f4, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f4, f25, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000001)
li x21, 0x0ea4c39d57589df1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
li x3, 0xd0fdb753045f9165 # load x3 with value 0xd0fdb753045f9165
sw x3, 0(x2) # store 0xd0fdb753045f9165 in memory
flw f22, 0(x2) # load 0xd0fdb753045f9165 from memory into f22
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
fnmsub.s f21, f28, f22, f8, dyn # perform operation
fnmsub.s f21, f28, f22, f8, rdn # perform operation
fnmsub.s f21, f28, f22, f8, rmm # perform operation
fnmsub.s f21, f28, f22, f8, rne # perform operation
fnmsub.s f21, f28, f22, f8, rtz # perform operation
fnmsub.s f21, f28, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f28, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f28, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f28, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f28, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f28, f22, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800000)
li x26, 0x2b6a7641e613d8a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
li x3, 0x4bca001adb901fd4 # load x3 with value 0x4bca001adb901fd4
sw x3, 0(x2) # store 0x4bca001adb901fd4 in memory
flw f4, 0(x2) # load 0x4bca001adb901fd4 from memory into f4
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
fnmsub.s f26, f13, f4, f15, dyn # perform operation
fnmsub.s f26, f13, f4, f15, rdn # perform operation
fnmsub.s f26, f13, f4, f15, rmm # perform operation
fnmsub.s f26, f13, f4, f15, rne # perform operation
fnmsub.s f26, f13, f4, f15, rtz # perform operation
fnmsub.s f26, f13, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f13, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f13, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f13, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f13, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f13, f4, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff800000)
li x14, 0x2f71975df2ea6726 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
li x3, 0xdee73dcbcec1864c # load x3 with value 0xdee73dcbcec1864c
sw x3, 0(x2) # store 0xdee73dcbcec1864c in memory
flw f6, 0(x2) # load 0xdee73dcbcec1864c from memory into f6
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
fnmsub.s f14, f2, f6, f12, dyn # perform operation
fnmsub.s f14, f2, f6, f12, rdn # perform operation
fnmsub.s f14, f2, f6, f12, rmm # perform operation
fnmsub.s f14, f2, f6, f12, rne # perform operation
fnmsub.s f14, f2, f6, f12, rtz # perform operation
fnmsub.s f14, f2, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f2, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f2, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f2, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f2, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f2, f6, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fc00000)
li x5, 0x53157a2612d88ac4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0xd220d6ef68676e66 # load x3 with value 0xd220d6ef68676e66
sw x3, 0(x2) # store 0xd220d6ef68676e66 in memory
flw f25, 0(x2) # load 0xd220d6ef68676e66 from memory into f25
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
fnmsub.s f5, f23, f25, f10, dyn # perform operation
fnmsub.s f5, f23, f25, f10, rdn # perform operation
fnmsub.s f5, f23, f25, f10, rmm # perform operation
fnmsub.s f5, f23, f25, f10, rne # perform operation
fnmsub.s f5, f23, f25, f10, rtz # perform operation
fnmsub.s f5, f23, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f23, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f23, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f23, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f23, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f23, f25, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffffff)
li x2, 0x165eaf27db1cd5cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
li x3, 0x30889be31c3fcbc1 # load x3 with value 0x30889be31c3fcbc1
sw x3, 0(x2) # store 0x30889be31c3fcbc1 in memory
flw f14, 0(x2) # load 0x30889be31c3fcbc1 from memory into f14
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
fnmsub.s f2, f31, f14, f3, dyn # perform operation
fnmsub.s f2, f31, f14, f3, rdn # perform operation
fnmsub.s f2, f31, f14, f3, rmm # perform operation
fnmsub.s f2, f31, f14, f3, rne # perform operation
fnmsub.s f2, f31, f14, f3, rtz # perform operation
fnmsub.s f2, f31, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f31, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f31, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f31, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f31, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f31, f14, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800001)
li x7, 0xac45295af2f05e31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0x6690d88f2c326ccf # load x3 with value 0x6690d88f2c326ccf
sw x3, 0(x2) # store 0x6690d88f2c326ccf in memory
flw f10, 0(x2) # load 0x6690d88f2c326ccf from memory into f10
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
fnmsub.s f7, f27, f10, f8, dyn # perform operation
fnmsub.s f7, f27, f10, f8, rdn # perform operation
fnmsub.s f7, f27, f10, f8, rmm # perform operation
fnmsub.s f7, f27, f10, f8, rne # perform operation
fnmsub.s f7, f27, f10, f8, rtz # perform operation
fnmsub.s f7, f27, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f27, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f27, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f27, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f27, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f27, f10, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fbfffff)
li x17, 0xe3883ca21d6a6631 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0xb8c65ddedc1a7938 # load x3 with value 0xb8c65ddedc1a7938
sw x3, 0(x2) # store 0xb8c65ddedc1a7938 in memory
flw f8, 0(x2) # load 0xb8c65ddedc1a7938 from memory into f8
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
fnmsub.s f17, f15, f8, f6, dyn # perform operation
fnmsub.s f17, f15, f8, f6, rdn # perform operation
fnmsub.s f17, f15, f8, f6, rmm # perform operation
fnmsub.s f17, f15, f8, f6, rne # perform operation
fnmsub.s f17, f15, f8, f6, rtz # perform operation
fnmsub.s f17, f15, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f15, f8, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7ef8654f)
li x3, 0x7befaccc80b66080 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0xdd397af6acb26aee # load x3 with value 0xdd397af6acb26aee
sw x3, 0(x2) # store 0xdd397af6acb26aee in memory
flw f14, 0(x2) # load 0xdd397af6acb26aee from memory into f14
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
fnmsub.s f3, f1, f14, f28, dyn # perform operation
fnmsub.s f3, f1, f14, f28, rdn # perform operation
fnmsub.s f3, f1, f14, f28, rmm # perform operation
fnmsub.s f3, f1, f14, f28, rne # perform operation
fnmsub.s f3, f1, f14, f28, rtz # perform operation
fnmsub.s f3, f1, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f1, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f1, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f1, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f1, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f1, f14, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x813d9ab0)
li x16, 0xe69a3b415c763e7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0xef404a3028272824 # load x3 with value 0xef404a3028272824
sw x3, 0(x2) # store 0xef404a3028272824 in memory
flw f20, 0(x2) # load 0xef404a3028272824 from memory into f20
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
fnmsub.s f16, f1, f20, f8, dyn # perform operation
fnmsub.s f16, f1, f20, f8, rdn # perform operation
fnmsub.s f16, f1, f20, f8, rmm # perform operation
fnmsub.s f16, f1, f20, f8, rne # perform operation
fnmsub.s f16, f1, f20, f8, rtz # perform operation
fnmsub.s f16, f1, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f1, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f1, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f1, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f1, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f1, f20, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x0)
li x17, 0x4c98c04eb43c4b66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0x4b67e68bf870469d # load x3 with value 0x4b67e68bf870469d
sw x3, 0(x2) # store 0x4b67e68bf870469d in memory
flw f3, 0(x2) # load 0x4b67e68bf870469d from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
fnmsub.s f17, f1, f3, f9, dyn # perform operation
fnmsub.s f17, f1, f3, f9, rdn # perform operation
fnmsub.s f17, f1, f3, f9, rmm # perform operation
fnmsub.s f17, f1, f3, f9, rne # perform operation
fnmsub.s f17, f1, f3, f9, rtz # perform operation
fnmsub.s f17, f1, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f1, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f1, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f1, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f1, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f1, f3, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000000)
li x2, 0xd47c6e119c1eb1ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
li x3, 0x8560e053947ae14d # load x3 with value 0x8560e053947ae14d
sw x3, 0(x2) # store 0x8560e053947ae14d in memory
flw f22, 0(x2) # load 0x8560e053947ae14d from memory into f22
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
fnmsub.s f2, f24, f22, f8, dyn # perform operation
fnmsub.s f2, f24, f22, f8, rdn # perform operation
fnmsub.s f2, f24, f22, f8, rmm # perform operation
fnmsub.s f2, f24, f22, f8, rne # perform operation
fnmsub.s f2, f24, f22, f8, rtz # perform operation
fnmsub.s f2, f24, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f24, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f24, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f24, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f24, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f24, f22, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3f800000)
li x4, 0x0762e1c62485925f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x1edaafb0490754df # load x3 with value 0x1edaafb0490754df
sw x3, 0(x2) # store 0x1edaafb0490754df in memory
flw f26, 0(x2) # load 0x1edaafb0490754df from memory into f26
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
fnmsub.s f4, f29, f26, f6, dyn # perform operation
fnmsub.s f4, f29, f26, f6, rdn # perform operation
fnmsub.s f4, f29, f26, f6, rmm # perform operation
fnmsub.s f4, f29, f26, f6, rne # perform operation
fnmsub.s f4, f29, f26, f6, rtz # perform operation
fnmsub.s f4, f29, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f29, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f29, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f29, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f29, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f29, f26, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbf800000)
li x21, 0x8e2bf72e64c429ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
li x3, 0xd2b5a84c1c360b0c # load x3 with value 0xd2b5a84c1c360b0c
sw x3, 0(x2) # store 0xd2b5a84c1c360b0c in memory
flw f18, 0(x2) # load 0xd2b5a84c1c360b0c from memory into f18
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
fnmsub.s f21, f8, f18, f13, dyn # perform operation
fnmsub.s f21, f8, f18, f13, rdn # perform operation
fnmsub.s f21, f8, f18, f13, rmm # perform operation
fnmsub.s f21, f8, f18, f13, rne # perform operation
fnmsub.s f21, f8, f18, f13, rtz # perform operation
fnmsub.s f21, f8, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f8, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f8, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f8, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f8, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f8, f18, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3fc00000)
li x4, 0x693f23642a371d7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
li x3, 0x6172766cd9b0036c # load x3 with value 0x6172766cd9b0036c
sw x3, 0(x2) # store 0x6172766cd9b0036c in memory
flw f5, 0(x2) # load 0x6172766cd9b0036c from memory into f5
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
fnmsub.s f4, f12, f5, f1, dyn # perform operation
fnmsub.s f4, f12, f5, f1, rdn # perform operation
fnmsub.s f4, f12, f5, f1, rmm # perform operation
fnmsub.s f4, f12, f5, f1, rne # perform operation
fnmsub.s f4, f12, f5, f1, rtz # perform operation
fnmsub.s f4, f12, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f12, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f12, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f12, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f12, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f12, f5, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbfc00000)
li x21, 0xcd76277ababea66d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0x19c3e915a2020bf1 # load x3 with value 0x19c3e915a2020bf1
sw x3, 0(x2) # store 0x19c3e915a2020bf1 in memory
flw f18, 0(x2) # load 0x19c3e915a2020bf1 from memory into f18
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
fnmsub.s f21, f5, f18, f9, dyn # perform operation
fnmsub.s f21, f5, f18, f9, rdn # perform operation
fnmsub.s f21, f5, f18, f9, rmm # perform operation
fnmsub.s f21, f5, f18, f9, rne # perform operation
fnmsub.s f21, f5, f18, f9, rtz # perform operation
fnmsub.s f21, f5, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f5, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f5, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f5, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f5, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f5, f18, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x40000000)
li x1, 0x722f2bb4c1859204 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0x84732dab53352220 # load x3 with value 0x84732dab53352220
sw x3, 0(x2) # store 0x84732dab53352220 in memory
flw f18, 0(x2) # load 0x84732dab53352220 from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
fnmsub.s f1, f28, f18, f6, dyn # perform operation
fnmsub.s f1, f28, f18, f6, rdn # perform operation
fnmsub.s f1, f28, f18, f6, rmm # perform operation
fnmsub.s f1, f28, f18, f6, rne # perform operation
fnmsub.s f1, f28, f18, f6, rtz # perform operation
fnmsub.s f1, f28, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f28, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f28, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f28, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f28, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f28, f18, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xc0000000)
li x3, 0x7bc4c1504e056557 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
li x3, 0x3b1478525ae8b949 # load x3 with value 0x3b1478525ae8b949
sw x3, 0(x2) # store 0x3b1478525ae8b949 in memory
flw f15, 0(x2) # load 0x3b1478525ae8b949 from memory into f15
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
fnmsub.s f3, f2, f15, f23, dyn # perform operation
fnmsub.s f3, f2, f15, f23, rdn # perform operation
fnmsub.s f3, f2, f15, f23, rmm # perform operation
fnmsub.s f3, f2, f15, f23, rne # perform operation
fnmsub.s f3, f2, f15, f23, rtz # perform operation
fnmsub.s f3, f2, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f2, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f2, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f2, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f2, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f2, f15, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x800000)
li x10, 0xfb30b21a61623130 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
li x3, 0x6e56d51fbcc14912 # load x3 with value 0x6e56d51fbcc14912
sw x3, 0(x2) # store 0x6e56d51fbcc14912 in memory
flw f20, 0(x2) # load 0x6e56d51fbcc14912 from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
fnmsub.s f10, f14, f20, f7, dyn # perform operation
fnmsub.s f10, f14, f20, f7, rdn # perform operation
fnmsub.s f10, f14, f20, f7, rmm # perform operation
fnmsub.s f10, f14, f20, f7, rne # perform operation
fnmsub.s f10, f14, f20, f7, rtz # perform operation
fnmsub.s f10, f14, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f14, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f14, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f14, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f14, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f14, f20, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80800000)
li x16, 0xd55683e85d85aefd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
li x3, 0xa44769472b4e7dc7 # load x3 with value 0xa44769472b4e7dc7
sw x3, 0(x2) # store 0xa44769472b4e7dc7 in memory
flw f5, 0(x2) # load 0xa44769472b4e7dc7 from memory into f5
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fnmsub.s f16, f19, f5, f12, dyn # perform operation
fnmsub.s f16, f19, f5, f12, rdn # perform operation
fnmsub.s f16, f19, f5, f12, rmm # perform operation
fnmsub.s f16, f19, f5, f12, rne # perform operation
fnmsub.s f16, f19, f5, f12, rtz # perform operation
fnmsub.s f16, f19, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f19, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f19, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f19, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f19, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f19, f5, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f7fffff)
li x15, 0x30b51ad1365cffd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x50c3353233607f7b # load x3 with value 0x50c3353233607f7b
sw x3, 0(x2) # store 0x50c3353233607f7b in memory
flw f3, 0(x2) # load 0x50c3353233607f7b from memory into f3
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
fnmsub.s f15, f21, f3, f18, dyn # perform operation
fnmsub.s f15, f21, f3, f18, rdn # perform operation
fnmsub.s f15, f21, f3, f18, rmm # perform operation
fnmsub.s f15, f21, f3, f18, rne # perform operation
fnmsub.s f15, f21, f3, f18, rtz # perform operation
fnmsub.s f15, f21, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f21, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f21, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f21, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f21, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f21, f3, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff7fffff)
li x21, 0x6d8bea0f9787a13c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0x8fc1354254f0419a # load x3 with value 0x8fc1354254f0419a
sw x3, 0(x2) # store 0x8fc1354254f0419a in memory
flw f16, 0(x2) # load 0x8fc1354254f0419a from memory into f16
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
fnmsub.s f21, f3, f16, f26, dyn # perform operation
fnmsub.s f21, f3, f16, f26, rdn # perform operation
fnmsub.s f21, f3, f16, f26, rmm # perform operation
fnmsub.s f21, f3, f16, f26, rne # perform operation
fnmsub.s f21, f3, f16, f26, rtz # perform operation
fnmsub.s f21, f3, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f3, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f3, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f3, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f3, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f3, f16, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffff)
li x15, 0xc6cebda2d275b4ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
li x3, 0xeaadbb90103530f9 # load x3 with value 0xeaadbb90103530f9
sw x3, 0(x2) # store 0xeaadbb90103530f9 in memory
flw f12, 0(x2) # load 0xeaadbb90103530f9 from memory into f12
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
fnmsub.s f15, f14, f12, f7, dyn # perform operation
fnmsub.s f15, f14, f12, f7, rdn # perform operation
fnmsub.s f15, f14, f12, f7, rmm # perform operation
fnmsub.s f15, f14, f12, f7, rne # perform operation
fnmsub.s f15, f14, f12, f7, rtz # perform operation
fnmsub.s f15, f14, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f14, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f14, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f14, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f14, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f14, f12, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x807fffff)
li x14, 0x7d2746f3acd23fd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0x8e1dca2bba6c380d # load x3 with value 0x8e1dca2bba6c380d
sw x3, 0(x2) # store 0x8e1dca2bba6c380d in memory
flw f23, 0(x2) # load 0x8e1dca2bba6c380d from memory into f23
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
fnmsub.s f14, f28, f23, f17, dyn # perform operation
fnmsub.s f14, f28, f23, f17, rdn # perform operation
fnmsub.s f14, f28, f23, f17, rmm # perform operation
fnmsub.s f14, f28, f23, f17, rne # perform operation
fnmsub.s f14, f28, f23, f17, rtz # perform operation
fnmsub.s f14, f28, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f28, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f28, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f28, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f28, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f28, f23, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x400000)
li x9, 0xfc36d88724903fe4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0xee0ca3f2b55462df # load x3 with value 0xee0ca3f2b55462df
sw x3, 0(x2) # store 0xee0ca3f2b55462df in memory
flw f7, 0(x2) # load 0xee0ca3f2b55462df from memory into f7
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fnmsub.s f9, f5, f7, f3, dyn # perform operation
fnmsub.s f9, f5, f7, f3, rdn # perform operation
fnmsub.s f9, f5, f7, f3, rmm # perform operation
fnmsub.s f9, f5, f7, f3, rne # perform operation
fnmsub.s f9, f5, f7, f3, rtz # perform operation
fnmsub.s f9, f5, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f5, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f5, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f5, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f5, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f5, f7, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80400000)
li x3, 0x2d1cfd4b4ae56674 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
li x3, 0x6a7dbca8e95938b2 # load x3 with value 0x6a7dbca8e95938b2
sw x3, 0(x2) # store 0x6a7dbca8e95938b2 in memory
flw f28, 0(x2) # load 0x6a7dbca8e95938b2 from memory into f28
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
fnmsub.s f3, f25, f28, f12, dyn # perform operation
fnmsub.s f3, f25, f28, f12, rdn # perform operation
fnmsub.s f3, f25, f28, f12, rmm # perform operation
fnmsub.s f3, f25, f28, f12, rne # perform operation
fnmsub.s f3, f25, f28, f12, rtz # perform operation
fnmsub.s f3, f25, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f25, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f25, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f25, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f25, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f25, f28, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x1)
li x7, 0xf0dc679f292b4269 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
li x3, 0x60af75d623606b37 # load x3 with value 0x60af75d623606b37
sw x3, 0(x2) # store 0x60af75d623606b37 in memory
flw f2, 0(x2) # load 0x60af75d623606b37 from memory into f2
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
fnmsub.s f7, f16, f2, f5, dyn # perform operation
fnmsub.s f7, f16, f2, f5, rdn # perform operation
fnmsub.s f7, f16, f2, f5, rmm # perform operation
fnmsub.s f7, f16, f2, f5, rne # perform operation
fnmsub.s f7, f16, f2, f5, rtz # perform operation
fnmsub.s f7, f16, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f16, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f16, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f16, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f16, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f16, f2, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000001)
li x21, 0x190a06621d1dbe7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0x607e031b1bdb75b4 # load x3 with value 0x607e031b1bdb75b4
sw x3, 0(x2) # store 0x607e031b1bdb75b4 in memory
flw f7, 0(x2) # load 0x607e031b1bdb75b4 from memory into f7
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
fnmsub.s f21, f26, f7, f22, dyn # perform operation
fnmsub.s f21, f26, f7, f22, rdn # perform operation
fnmsub.s f21, f26, f7, f22, rmm # perform operation
fnmsub.s f21, f26, f7, f22, rne # perform operation
fnmsub.s f21, f26, f7, f22, rtz # perform operation
fnmsub.s f21, f26, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f26, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f26, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f26, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f26, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f26, f7, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800000)
li x28, 0x1da267d57c26860d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0xde2ebf16581ae246 # load x3 with value 0xde2ebf16581ae246
sw x3, 0(x2) # store 0xde2ebf16581ae246 in memory
flw f25, 0(x2) # load 0xde2ebf16581ae246 from memory into f25
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
fnmsub.s f28, f15, f25, f22, dyn # perform operation
fnmsub.s f28, f15, f25, f22, rdn # perform operation
fnmsub.s f28, f15, f25, f22, rmm # perform operation
fnmsub.s f28, f15, f25, f22, rne # perform operation
fnmsub.s f28, f15, f25, f22, rtz # perform operation
fnmsub.s f28, f15, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f15, f25, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff800000)
li x2, 0x3d23e696c7119a05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0x757d8e6f3d8cd925 # load x3 with value 0x757d8e6f3d8cd925
sw x3, 0(x2) # store 0x757d8e6f3d8cd925 in memory
flw f20, 0(x2) # load 0x757d8e6f3d8cd925 from memory into f20
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fnmsub.s f2, f9, f20, f14, dyn # perform operation
fnmsub.s f2, f9, f20, f14, rdn # perform operation
fnmsub.s f2, f9, f20, f14, rmm # perform operation
fnmsub.s f2, f9, f20, f14, rne # perform operation
fnmsub.s f2, f9, f20, f14, rtz # perform operation
fnmsub.s f2, f9, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f9, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f9, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f9, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f9, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f9, f20, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fc00000)
li x6, 0x1bec271332c815d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
li x3, 0xd76eb19e57e1ad28 # load x3 with value 0xd76eb19e57e1ad28
sw x3, 0(x2) # store 0xd76eb19e57e1ad28 in memory
flw f20, 0(x2) # load 0xd76eb19e57e1ad28 from memory into f20
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
fnmsub.s f6, f24, f20, f3, dyn # perform operation
fnmsub.s f6, f24, f20, f3, rdn # perform operation
fnmsub.s f6, f24, f20, f3, rmm # perform operation
fnmsub.s f6, f24, f20, f3, rne # perform operation
fnmsub.s f6, f24, f20, f3, rtz # perform operation
fnmsub.s f6, f24, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f24, f20, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffffff)
li x7, 0xbe560c2804cee7fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0x27e4e47430032efd # load x3 with value 0x27e4e47430032efd
sw x3, 0(x2) # store 0x27e4e47430032efd in memory
flw f15, 0(x2) # load 0x27e4e47430032efd from memory into f15
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
fnmsub.s f7, f9, f15, f27, dyn # perform operation
fnmsub.s f7, f9, f15, f27, rdn # perform operation
fnmsub.s f7, f9, f15, f27, rmm # perform operation
fnmsub.s f7, f9, f15, f27, rne # perform operation
fnmsub.s f7, f9, f15, f27, rtz # perform operation
fnmsub.s f7, f9, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f9, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f9, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f9, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f9, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f9, f15, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800001)
li x16, 0x4119da9f7a7cf716 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0x3fea6f638d54b668 # load x3 with value 0x3fea6f638d54b668
sw x3, 0(x2) # store 0x3fea6f638d54b668 in memory
flw f18, 0(x2) # load 0x3fea6f638d54b668 from memory into f18
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
fnmsub.s f16, f3, f18, f22, dyn # perform operation
fnmsub.s f16, f3, f18, f22, rdn # perform operation
fnmsub.s f16, f3, f18, f22, rmm # perform operation
fnmsub.s f16, f3, f18, f22, rne # perform operation
fnmsub.s f16, f3, f18, f22, rtz # perform operation
fnmsub.s f16, f3, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f3, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f3, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f3, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f3, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f3, f18, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fbfffff)
li x29, 0x3a2edf80da94c977 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0xadfdaee2daca5340 # load x3 with value 0xadfdaee2daca5340
sw x3, 0(x2) # store 0xadfdaee2daca5340 in memory
flw f6, 0(x2) # load 0xadfdaee2daca5340 from memory into f6
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
fnmsub.s f29, f10, f6, f13, dyn # perform operation
fnmsub.s f29, f10, f6, f13, rdn # perform operation
fnmsub.s f29, f10, f6, f13, rmm # perform operation
fnmsub.s f29, f10, f6, f13, rne # perform operation
fnmsub.s f29, f10, f6, f13, rtz # perform operation
fnmsub.s f29, f10, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f10, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f10, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f10, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f10, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f10, f6, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7ef8654f)
li x22, 0xcd6698d38ab9debd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
li x3, 0xb1f01d2478b0ad5b # load x3 with value 0xb1f01d2478b0ad5b
sw x3, 0(x2) # store 0xb1f01d2478b0ad5b in memory
flw f29, 0(x2) # load 0xb1f01d2478b0ad5b from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fnmsub.s f22, f12, f29, f30, dyn # perform operation
fnmsub.s f22, f12, f29, f30, rdn # perform operation
fnmsub.s f22, f12, f29, f30, rmm # perform operation
fnmsub.s f22, f12, f29, f30, rne # perform operation
fnmsub.s f22, f12, f29, f30, rtz # perform operation
fnmsub.s f22, f12, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f12, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f12, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f12, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f12, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f12, f29, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x813d9ab0)
li x4, 0x1feff589c7206eb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
li x3, 0x88d1c7221713b48b # load x3 with value 0x88d1c7221713b48b
sw x3, 0(x2) # store 0x88d1c7221713b48b in memory
flw f24, 0(x2) # load 0x88d1c7221713b48b from memory into f24
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
fnmsub.s f4, f6, f24, f27, dyn # perform operation
fnmsub.s f4, f6, f24, f27, rdn # perform operation
fnmsub.s f4, f6, f24, f27, rmm # perform operation
fnmsub.s f4, f6, f24, f27, rne # perform operation
fnmsub.s f4, f6, f24, f27, rtz # perform operation
fnmsub.s f4, f6, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f6, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f6, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f6, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f6, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f6, f24, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x0)
li x1, 0x014c1e3e2d274973 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0xce210b0d58a4031e # load x3 with value 0xce210b0d58a4031e
sw x3, 0(x2) # store 0xce210b0d58a4031e in memory
flw f24, 0(x2) # load 0xce210b0d58a4031e from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
fnmsub.s f1, f20, f24, f9, dyn # perform operation
fnmsub.s f1, f20, f24, f9, rdn # perform operation
fnmsub.s f1, f20, f24, f9, rmm # perform operation
fnmsub.s f1, f20, f24, f9, rne # perform operation
fnmsub.s f1, f20, f24, f9, rtz # perform operation
fnmsub.s f1, f20, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f20, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f20, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f20, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f20, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f20, f24, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000000)
li x9, 0xd7d9b24ed97bf24e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
li x3, 0x97d60f7cb3d27ada # load x3 with value 0x97d60f7cb3d27ada
sw x3, 0(x2) # store 0x97d60f7cb3d27ada in memory
flw f6, 0(x2) # load 0x97d60f7cb3d27ada from memory into f6
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
fnmsub.s f9, f2, f6, f31, dyn # perform operation
fnmsub.s f9, f2, f6, f31, rdn # perform operation
fnmsub.s f9, f2, f6, f31, rmm # perform operation
fnmsub.s f9, f2, f6, f31, rne # perform operation
fnmsub.s f9, f2, f6, f31, rtz # perform operation
fnmsub.s f9, f2, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f2, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f2, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f2, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f2, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f2, f6, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3f800000)
li x18, 0x283f2f8566b63702 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0x70494f43fb7ee25e # load x3 with value 0x70494f43fb7ee25e
sw x3, 0(x2) # store 0x70494f43fb7ee25e in memory
flw f2, 0(x2) # load 0x70494f43fb7ee25e from memory into f2
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
fnmsub.s f18, f21, f2, f5, dyn # perform operation
fnmsub.s f18, f21, f2, f5, rdn # perform operation
fnmsub.s f18, f21, f2, f5, rmm # perform operation
fnmsub.s f18, f21, f2, f5, rne # perform operation
fnmsub.s f18, f21, f2, f5, rtz # perform operation
fnmsub.s f18, f21, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f21, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f21, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f21, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f21, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f21, f2, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbf800000)
li x19, 0x995574e760180785 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0x8e455c078dc5de6b # load x3 with value 0x8e455c078dc5de6b
sw x3, 0(x2) # store 0x8e455c078dc5de6b in memory
flw f15, 0(x2) # load 0x8e455c078dc5de6b from memory into f15
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
fnmsub.s f19, f1, f15, f30, dyn # perform operation
fnmsub.s f19, f1, f15, f30, rdn # perform operation
fnmsub.s f19, f1, f15, f30, rmm # perform operation
fnmsub.s f19, f1, f15, f30, rne # perform operation
fnmsub.s f19, f1, f15, f30, rtz # perform operation
fnmsub.s f19, f1, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f1, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f1, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f1, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f1, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f1, f15, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3fc00000)
li x25, 0xf475ef0cac981f00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
li x3, 0x9d39ebadcbc9e6eb # load x3 with value 0x9d39ebadcbc9e6eb
sw x3, 0(x2) # store 0x9d39ebadcbc9e6eb in memory
flw f8, 0(x2) # load 0x9d39ebadcbc9e6eb from memory into f8
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fnmsub.s f25, f7, f8, f23, dyn # perform operation
fnmsub.s f25, f7, f8, f23, rdn # perform operation
fnmsub.s f25, f7, f8, f23, rmm # perform operation
fnmsub.s f25, f7, f8, f23, rne # perform operation
fnmsub.s f25, f7, f8, f23, rtz # perform operation
fnmsub.s f25, f7, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f7, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f7, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f7, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f7, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f7, f8, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbfc00000)
li x20, 0x0d5e367c7c03697c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0x79e29af611f5b787 # load x3 with value 0x79e29af611f5b787
sw x3, 0(x2) # store 0x79e29af611f5b787 in memory
flw f11, 0(x2) # load 0x79e29af611f5b787 from memory into f11
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
fnmsub.s f20, f26, f11, f5, dyn # perform operation
fnmsub.s f20, f26, f11, f5, rdn # perform operation
fnmsub.s f20, f26, f11, f5, rmm # perform operation
fnmsub.s f20, f26, f11, f5, rne # perform operation
fnmsub.s f20, f26, f11, f5, rtz # perform operation
fnmsub.s f20, f26, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f26, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f26, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f26, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f26, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f26, f11, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x40000000)
li x9, 0x422f9aff3fac9339 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0x516bf17a56bba6be # load x3 with value 0x516bf17a56bba6be
sw x3, 0(x2) # store 0x516bf17a56bba6be in memory
flw f18, 0(x2) # load 0x516bf17a56bba6be from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
fnmsub.s f9, f25, f18, f4, dyn # perform operation
fnmsub.s f9, f25, f18, f4, rdn # perform operation
fnmsub.s f9, f25, f18, f4, rmm # perform operation
fnmsub.s f9, f25, f18, f4, rne # perform operation
fnmsub.s f9, f25, f18, f4, rtz # perform operation
fnmsub.s f9, f25, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f25, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f25, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f25, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f25, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f25, f18, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xc0000000)
li x12, 0xaedb8bdfcf707541 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
li x3, 0x8fc79bf86b8cd445 # load x3 with value 0x8fc79bf86b8cd445
sw x3, 0(x2) # store 0x8fc79bf86b8cd445 in memory
flw f29, 0(x2) # load 0x8fc79bf86b8cd445 from memory into f29
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
fnmsub.s f12, f5, f29, f23, dyn # perform operation
fnmsub.s f12, f5, f29, f23, rdn # perform operation
fnmsub.s f12, f5, f29, f23, rmm # perform operation
fnmsub.s f12, f5, f29, f23, rne # perform operation
fnmsub.s f12, f5, f29, f23, rtz # perform operation
fnmsub.s f12, f5, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f5, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f5, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f5, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f5, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f5, f29, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x800000)
li x24, 0xbf03220689a45e3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0x5c572f7c122bb42d # load x3 with value 0x5c572f7c122bb42d
sw x3, 0(x2) # store 0x5c572f7c122bb42d in memory
flw f12, 0(x2) # load 0x5c572f7c122bb42d from memory into f12
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
fnmsub.s f24, f27, f12, f23, dyn # perform operation
fnmsub.s f24, f27, f12, f23, rdn # perform operation
fnmsub.s f24, f27, f12, f23, rmm # perform operation
fnmsub.s f24, f27, f12, f23, rne # perform operation
fnmsub.s f24, f27, f12, f23, rtz # perform operation
fnmsub.s f24, f27, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f27, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f27, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f27, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f27, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f27, f12, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80800000)
li x14, 0xb81fdb58df8edd29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0xfc193ea920231d70 # load x3 with value 0xfc193ea920231d70
sw x3, 0(x2) # store 0xfc193ea920231d70 in memory
flw f1, 0(x2) # load 0xfc193ea920231d70 from memory into f1
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
fnmsub.s f14, f30, f1, f13, dyn # perform operation
fnmsub.s f14, f30, f1, f13, rdn # perform operation
fnmsub.s f14, f30, f1, f13, rmm # perform operation
fnmsub.s f14, f30, f1, f13, rne # perform operation
fnmsub.s f14, f30, f1, f13, rtz # perform operation
fnmsub.s f14, f30, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f30, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f30, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f30, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f30, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f30, f1, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f7fffff)
li x16, 0xb317da1adb9eea96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0xfcb9693affe8fcdf # load x3 with value 0xfcb9693affe8fcdf
sw x3, 0(x2) # store 0xfcb9693affe8fcdf in memory
flw f3, 0(x2) # load 0xfcb9693affe8fcdf from memory into f3
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
fnmsub.s f16, f1, f3, f23, dyn # perform operation
fnmsub.s f16, f1, f3, f23, rdn # perform operation
fnmsub.s f16, f1, f3, f23, rmm # perform operation
fnmsub.s f16, f1, f3, f23, rne # perform operation
fnmsub.s f16, f1, f3, f23, rtz # perform operation
fnmsub.s f16, f1, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f1, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f1, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f1, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f1, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f1, f3, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff7fffff)
li x11, 0xcf6d023daa62e00a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0x628d9a86f255c308 # load x3 with value 0x628d9a86f255c308
sw x3, 0(x2) # store 0x628d9a86f255c308 in memory
flw f26, 0(x2) # load 0x628d9a86f255c308 from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
fnmsub.s f11, f25, f26, f16, dyn # perform operation
fnmsub.s f11, f25, f26, f16, rdn # perform operation
fnmsub.s f11, f25, f26, f16, rmm # perform operation
fnmsub.s f11, f25, f26, f16, rne # perform operation
fnmsub.s f11, f25, f26, f16, rtz # perform operation
fnmsub.s f11, f25, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f25, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f25, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f25, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f25, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f25, f26, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffff)
li x13, 0x14743f2ba7625651 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
li x3, 0x2ea73054d6ea7440 # load x3 with value 0x2ea73054d6ea7440
sw x3, 0(x2) # store 0x2ea73054d6ea7440 in memory
flw f14, 0(x2) # load 0x2ea73054d6ea7440 from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
fnmsub.s f13, f11, f14, f29, dyn # perform operation
fnmsub.s f13, f11, f14, f29, rdn # perform operation
fnmsub.s f13, f11, f14, f29, rmm # perform operation
fnmsub.s f13, f11, f14, f29, rne # perform operation
fnmsub.s f13, f11, f14, f29, rtz # perform operation
fnmsub.s f13, f11, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f11, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f11, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f11, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f11, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f11, f14, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x807fffff)
li x18, 0xb9138082b66b6dab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0x9ea5bb98507fda4 # load x3 with value 0x9ea5bb98507fda4
sw x3, 0(x2) # store 0x9ea5bb98507fda4 in memory
flw f5, 0(x2) # load 0x9ea5bb98507fda4 from memory into f5
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
fnmsub.s f18, f1, f5, f23, dyn # perform operation
fnmsub.s f18, f1, f5, f23, rdn # perform operation
fnmsub.s f18, f1, f5, f23, rmm # perform operation
fnmsub.s f18, f1, f5, f23, rne # perform operation
fnmsub.s f18, f1, f5, f23, rtz # perform operation
fnmsub.s f18, f1, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f1, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f1, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f1, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f1, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f1, f5, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x400000)
li x28, 0x431628d83e07e339 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
li x3, 0xfbbbfd7bb358b8d1 # load x3 with value 0xfbbbfd7bb358b8d1
sw x3, 0(x2) # store 0xfbbbfd7bb358b8d1 in memory
flw f9, 0(x2) # load 0xfbbbfd7bb358b8d1 from memory into f9
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
fnmsub.s f28, f16, f9, f4, dyn # perform operation
fnmsub.s f28, f16, f9, f4, rdn # perform operation
fnmsub.s f28, f16, f9, f4, rmm # perform operation
fnmsub.s f28, f16, f9, f4, rne # perform operation
fnmsub.s f28, f16, f9, f4, rtz # perform operation
fnmsub.s f28, f16, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f16, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f16, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f16, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f16, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f16, f9, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80400000)
li x5, 0xa2a60cca0f337ccc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0x83c8dae5c5ca689a # load x3 with value 0x83c8dae5c5ca689a
sw x3, 0(x2) # store 0x83c8dae5c5ca689a in memory
flw f30, 0(x2) # load 0x83c8dae5c5ca689a from memory into f30
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
fnmsub.s f5, f22, f30, f3, dyn # perform operation
fnmsub.s f5, f22, f30, f3, rdn # perform operation
fnmsub.s f5, f22, f30, f3, rmm # perform operation
fnmsub.s f5, f22, f30, f3, rne # perform operation
fnmsub.s f5, f22, f30, f3, rtz # perform operation
fnmsub.s f5, f22, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f22, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f22, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f22, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f22, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f22, f30, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x1)
li x21, 0x2589f934c8f4ae33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0x2bdca1967516e131 # load x3 with value 0x2bdca1967516e131
sw x3, 0(x2) # store 0x2bdca1967516e131 in memory
flw f10, 0(x2) # load 0x2bdca1967516e131 from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
fnmsub.s f21, f1, f10, f17, dyn # perform operation
fnmsub.s f21, f1, f10, f17, rdn # perform operation
fnmsub.s f21, f1, f10, f17, rmm # perform operation
fnmsub.s f21, f1, f10, f17, rne # perform operation
fnmsub.s f21, f1, f10, f17, rtz # perform operation
fnmsub.s f21, f1, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f1, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f1, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f1, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f1, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f1, f10, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000001)
li x21, 0xcc5ed399c56cd076 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0xf883bb6ccff6f685 # load x3 with value 0xf883bb6ccff6f685
sw x3, 0(x2) # store 0xf883bb6ccff6f685 in memory
flw f1, 0(x2) # load 0xf883bb6ccff6f685 from memory into f1
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
fnmsub.s f21, f20, f1, f14, dyn # perform operation
fnmsub.s f21, f20, f1, f14, rdn # perform operation
fnmsub.s f21, f20, f1, f14, rmm # perform operation
fnmsub.s f21, f20, f1, f14, rne # perform operation
fnmsub.s f21, f20, f1, f14, rtz # perform operation
fnmsub.s f21, f20, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f20, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f20, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f20, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f20, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f20, f1, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800000)
li x10, 0xf2b5a23a59c06ed5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0x995d373076e4c364 # load x3 with value 0x995d373076e4c364
sw x3, 0(x2) # store 0x995d373076e4c364 in memory
flw f28, 0(x2) # load 0x995d373076e4c364 from memory into f28
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
fnmsub.s f10, f19, f28, f17, dyn # perform operation
fnmsub.s f10, f19, f28, f17, rdn # perform operation
fnmsub.s f10, f19, f28, f17, rmm # perform operation
fnmsub.s f10, f19, f28, f17, rne # perform operation
fnmsub.s f10, f19, f28, f17, rtz # perform operation
fnmsub.s f10, f19, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f19, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f19, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f19, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f19, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f19, f28, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff800000)
li x13, 0x7b92b97c7f95f3d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0x2fd3227d9c24cc15 # load x3 with value 0x2fd3227d9c24cc15
sw x3, 0(x2) # store 0x2fd3227d9c24cc15 in memory
flw f2, 0(x2) # load 0x2fd3227d9c24cc15 from memory into f2
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fnmsub.s f13, f24, f2, f9, dyn # perform operation
fnmsub.s f13, f24, f2, f9, rdn # perform operation
fnmsub.s f13, f24, f2, f9, rmm # perform operation
fnmsub.s f13, f24, f2, f9, rne # perform operation
fnmsub.s f13, f24, f2, f9, rtz # perform operation
fnmsub.s f13, f24, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f24, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f24, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f24, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f24, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f24, f2, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fc00000)
li x15, 0x75ad82e77069669f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x3fad181742a8ff9c # load x3 with value 0x3fad181742a8ff9c
sw x3, 0(x2) # store 0x3fad181742a8ff9c in memory
flw f31, 0(x2) # load 0x3fad181742a8ff9c from memory into f31
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
fnmsub.s f15, f30, f31, f28, dyn # perform operation
fnmsub.s f15, f30, f31, f28, rdn # perform operation
fnmsub.s f15, f30, f31, f28, rmm # perform operation
fnmsub.s f15, f30, f31, f28, rne # perform operation
fnmsub.s f15, f30, f31, f28, rtz # perform operation
fnmsub.s f15, f30, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f30, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f30, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f30, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f30, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f30, f31, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffffff)
li x22, 0xf8366aa01e833948 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0x2329f098c90af175 # load x3 with value 0x2329f098c90af175
sw x3, 0(x2) # store 0x2329f098c90af175 in memory
flw f4, 0(x2) # load 0x2329f098c90af175 from memory into f4
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
fnmsub.s f22, f14, f4, f10, dyn # perform operation
fnmsub.s f22, f14, f4, f10, rdn # perform operation
fnmsub.s f22, f14, f4, f10, rmm # perform operation
fnmsub.s f22, f14, f4, f10, rne # perform operation
fnmsub.s f22, f14, f4, f10, rtz # perform operation
fnmsub.s f22, f14, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f14, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f14, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f14, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f14, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f14, f4, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800001)
li x6, 0x94f9aaa3e2c0f7fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x17b2c9efa7c33d81 # load x3 with value 0x17b2c9efa7c33d81
sw x3, 0(x2) # store 0x17b2c9efa7c33d81 in memory
flw f17, 0(x2) # load 0x17b2c9efa7c33d81 from memory into f17
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
fnmsub.s f6, f30, f17, f9, dyn # perform operation
fnmsub.s f6, f30, f17, f9, rdn # perform operation
fnmsub.s f6, f30, f17, f9, rmm # perform operation
fnmsub.s f6, f30, f17, f9, rne # perform operation
fnmsub.s f6, f30, f17, f9, rtz # perform operation
fnmsub.s f6, f30, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f30, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f30, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f30, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f30, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f30, f17, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fbfffff)
li x4, 0x83ed0778287b3b1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
li x3, 0xf340ba7c41d754c6 # load x3 with value 0xf340ba7c41d754c6
sw x3, 0(x2) # store 0xf340ba7c41d754c6 in memory
flw f23, 0(x2) # load 0xf340ba7c41d754c6 from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
fnmsub.s f4, f2, f23, f20, dyn # perform operation
fnmsub.s f4, f2, f23, f20, rdn # perform operation
fnmsub.s f4, f2, f23, f20, rmm # perform operation
fnmsub.s f4, f2, f23, f20, rne # perform operation
fnmsub.s f4, f2, f23, f20, rtz # perform operation
fnmsub.s f4, f2, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f2, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f2, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f2, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f2, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f2, f23, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7ef8654f)
li x20, 0xa6c405fc8fba8937 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
li x3, 0x2fce6385651d0c7e # load x3 with value 0x2fce6385651d0c7e
sw x3, 0(x2) # store 0x2fce6385651d0c7e in memory
flw f5, 0(x2) # load 0x2fce6385651d0c7e from memory into f5
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fnmsub.s f20, f31, f5, f30, dyn # perform operation
fnmsub.s f20, f31, f5, f30, rdn # perform operation
fnmsub.s f20, f31, f5, f30, rmm # perform operation
fnmsub.s f20, f31, f5, f30, rne # perform operation
fnmsub.s f20, f31, f5, f30, rtz # perform operation
fnmsub.s f20, f31, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f31, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f31, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f31, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f31, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f31, f5, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x813d9ab0)
li x27, 0xa076b691bfcc6b55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0x101075741a3098fa # load x3 with value 0x101075741a3098fa
sw x3, 0(x2) # store 0x101075741a3098fa in memory
flw f1, 0(x2) # load 0x101075741a3098fa from memory into f1
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
fnmsub.s f27, f13, f1, f17, dyn # perform operation
fnmsub.s f27, f13, f1, f17, rdn # perform operation
fnmsub.s f27, f13, f1, f17, rmm # perform operation
fnmsub.s f27, f13, f1, f17, rne # perform operation
fnmsub.s f27, f13, f1, f17, rtz # perform operation
fnmsub.s f27, f13, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f13, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f13, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f13, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f13, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f13, f1, f17 # perform operation

# Testcase cp_fd (Test destination fd = x0)
li x0, 0x2b671ef1713da116 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x336debd80691666a # load x3 with value 0x336debd80691666a
sw x3, 0(x2) # store 0x336debd80691666a in memory
flw f30, 0(x2) # load 0x336debd80691666a from memory into f30
li x3, 0x528a3c437118fd0f # load x3 with value 0x528a3c437118fd0f
sw x3, 0(x2) # store 0x528a3c437118fd0f in memory
flw f13, 0(x2) # load 0x528a3c437118fd0f from memory into f13
li x3, 0x9e2908f2626ca3f4 # load x3 with value 0x9e2908f2626ca3f4
sw x3, 0(x2) # store 0x9e2908f2626ca3f4 in memory
flw f15, 0(x2) # load 0x9e2908f2626ca3f4 from memory into f15
fnmsub.s f0, f30, f13, f15 # perform operation

# Testcase cp_fd (Test destination fd = x1)
li x1, 0xf87ffa6159702534 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4abb75f805d888e6 # load x3 with value 0x4abb75f805d888e6
sw x3, 0(x2) # store 0x4abb75f805d888e6 in memory
flw f12, 0(x2) # load 0x4abb75f805d888e6 from memory into f12
li x3, 0xb531610c1bd5086f # load x3 with value 0xb531610c1bd5086f
sw x3, 0(x2) # store 0xb531610c1bd5086f in memory
flw f23, 0(x2) # load 0xb531610c1bd5086f from memory into f23
li x3, 0xbaaf67467ca38eef # load x3 with value 0xbaaf67467ca38eef
sw x3, 0(x2) # store 0xbaaf67467ca38eef in memory
flw f5, 0(x2) # load 0xbaaf67467ca38eef from memory into f5
fnmsub.s f1, f12, f23, f5 # perform operation

# Testcase cp_fd (Test destination fd = x2)
li x2, 0xbfc27805c7a5b06c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1f78fd2dda7dfa38 # load x3 with value 0x1f78fd2dda7dfa38
sw x3, 0(x2) # store 0x1f78fd2dda7dfa38 in memory
flw f2, 0(x2) # load 0x1f78fd2dda7dfa38 from memory into f2
li x3, 0x2f626073bd328eea # load x3 with value 0x2f626073bd328eea
sw x3, 0(x2) # store 0x2f626073bd328eea in memory
flw f16, 0(x2) # load 0x2f626073bd328eea from memory into f16
li x3, 0x2ed00d5371276a66 # load x3 with value 0x2ed00d5371276a66
sw x3, 0(x2) # store 0x2ed00d5371276a66 in memory
flw f3, 0(x2) # load 0x2ed00d5371276a66 from memory into f3
fnmsub.s f2, f2, f16, f3 # perform operation

# Testcase cp_fd (Test destination fd = x3)
li x3, 0x9bbfe944133a8ed3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x878a3c3a4b22560d # load x3 with value 0x878a3c3a4b22560d
sw x3, 0(x2) # store 0x878a3c3a4b22560d in memory
flw f23, 0(x2) # load 0x878a3c3a4b22560d from memory into f23
li x3, 0x1ec4d7fbb87f74d # load x3 with value 0x1ec4d7fbb87f74d
sw x3, 0(x2) # store 0x1ec4d7fbb87f74d in memory
flw f5, 0(x2) # load 0x1ec4d7fbb87f74d from memory into f5
li x3, 0xe6e268245983f145 # load x3 with value 0xe6e268245983f145
sw x3, 0(x2) # store 0xe6e268245983f145 in memory
flw f25, 0(x2) # load 0xe6e268245983f145 from memory into f25
fnmsub.s f3, f23, f5, f25 # perform operation

# Testcase cp_fd (Test destination fd = x4)
li x4, 0x244fcbb8307cf51a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1b193a4349d5c18b # load x3 with value 0x1b193a4349d5c18b
sw x3, 0(x2) # store 0x1b193a4349d5c18b in memory
flw f2, 0(x2) # load 0x1b193a4349d5c18b from memory into f2
li x3, 0x288ac73ed1be2644 # load x3 with value 0x288ac73ed1be2644
sw x3, 0(x2) # store 0x288ac73ed1be2644 in memory
flw f31, 0(x2) # load 0x288ac73ed1be2644 from memory into f31
li x3, 0x72ee4bdb59b50da3 # load x3 with value 0x72ee4bdb59b50da3
sw x3, 0(x2) # store 0x72ee4bdb59b50da3 in memory
flw f17, 0(x2) # load 0x72ee4bdb59b50da3 from memory into f17
fnmsub.s f4, f2, f31, f17 # perform operation

# Testcase cp_fd (Test destination fd = x5)
li x5, 0xc92effe834b3a5e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x199c9f1337780905 # load x3 with value 0x199c9f1337780905
sw x3, 0(x2) # store 0x199c9f1337780905 in memory
flw f22, 0(x2) # load 0x199c9f1337780905 from memory into f22
li x3, 0xf0c1342d55745530 # load x3 with value 0xf0c1342d55745530
sw x3, 0(x2) # store 0xf0c1342d55745530 in memory
flw f4, 0(x2) # load 0xf0c1342d55745530 from memory into f4
li x3, 0xe8b0fa22eaccfa46 # load x3 with value 0xe8b0fa22eaccfa46
sw x3, 0(x2) # store 0xe8b0fa22eaccfa46 in memory
flw f6, 0(x2) # load 0xe8b0fa22eaccfa46 from memory into f6
fnmsub.s f5, f22, f4, f6 # perform operation

# Testcase cp_fd (Test destination fd = x6)
li x6, 0x2d83191a10049990 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8e80af5e354ff127 # load x3 with value 0x8e80af5e354ff127
sw x3, 0(x2) # store 0x8e80af5e354ff127 in memory
flw f8, 0(x2) # load 0x8e80af5e354ff127 from memory into f8
li x3, 0x26f7f9fa8bbaed44 # load x3 with value 0x26f7f9fa8bbaed44
sw x3, 0(x2) # store 0x26f7f9fa8bbaed44 in memory
flw f17, 0(x2) # load 0x26f7f9fa8bbaed44 from memory into f17
li x3, 0xfb2c212eb9b22e2c # load x3 with value 0xfb2c212eb9b22e2c
sw x3, 0(x2) # store 0xfb2c212eb9b22e2c in memory
flw f10, 0(x2) # load 0xfb2c212eb9b22e2c from memory into f10
fnmsub.s f6, f8, f17, f10 # perform operation

# Testcase cp_fd (Test destination fd = x7)
li x7, 0x54e7419386e18c95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa1c85d2a4b3e3d54 # load x3 with value 0xa1c85d2a4b3e3d54
sw x3, 0(x2) # store 0xa1c85d2a4b3e3d54 in memory
flw f14, 0(x2) # load 0xa1c85d2a4b3e3d54 from memory into f14
li x3, 0xff94f58e14e59b7b # load x3 with value 0xff94f58e14e59b7b
sw x3, 0(x2) # store 0xff94f58e14e59b7b in memory
flw f10, 0(x2) # load 0xff94f58e14e59b7b from memory into f10
li x3, 0x26ecc1f6d35a18f5 # load x3 with value 0x26ecc1f6d35a18f5
sw x3, 0(x2) # store 0x26ecc1f6d35a18f5 in memory
flw f26, 0(x2) # load 0x26ecc1f6d35a18f5 from memory into f26
fnmsub.s f7, f14, f10, f26 # perform operation

# Testcase cp_fd (Test destination fd = x8)
li x8, 0x33733aea67af526b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x28efddd15440d1d5 # load x3 with value 0x28efddd15440d1d5
sw x3, 0(x2) # store 0x28efddd15440d1d5 in memory
flw f25, 0(x2) # load 0x28efddd15440d1d5 from memory into f25
li x3, 0x90860dba7d5b5642 # load x3 with value 0x90860dba7d5b5642
sw x3, 0(x2) # store 0x90860dba7d5b5642 in memory
flw f15, 0(x2) # load 0x90860dba7d5b5642 from memory into f15
li x3, 0x4f2a53f7c36c2677 # load x3 with value 0x4f2a53f7c36c2677
sw x3, 0(x2) # store 0x4f2a53f7c36c2677 in memory
flw f17, 0(x2) # load 0x4f2a53f7c36c2677 from memory into f17
fnmsub.s f8, f25, f15, f17 # perform operation

# Testcase cp_fd (Test destination fd = x9)
li x9, 0xc2349ac685570095 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc2977cd955af9f82 # load x3 with value 0xc2977cd955af9f82
sw x3, 0(x2) # store 0xc2977cd955af9f82 in memory
flw f19, 0(x2) # load 0xc2977cd955af9f82 from memory into f19
li x3, 0x5c239e775a4f2a0a # load x3 with value 0x5c239e775a4f2a0a
sw x3, 0(x2) # store 0x5c239e775a4f2a0a in memory
flw f31, 0(x2) # load 0x5c239e775a4f2a0a from memory into f31
li x3, 0x62dc84601c34075d # load x3 with value 0x62dc84601c34075d
sw x3, 0(x2) # store 0x62dc84601c34075d in memory
flw f12, 0(x2) # load 0x62dc84601c34075d from memory into f12
fnmsub.s f9, f19, f31, f12 # perform operation

# Testcase cp_fd (Test destination fd = x10)
li x10, 0xb8a1f86c7c26804b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb241c14002c9ad4 # load x3 with value 0xb241c14002c9ad4
sw x3, 0(x2) # store 0xb241c14002c9ad4 in memory
flw f3, 0(x2) # load 0xb241c14002c9ad4 from memory into f3
li x3, 0xeafaa7316fdcc02d # load x3 with value 0xeafaa7316fdcc02d
sw x3, 0(x2) # store 0xeafaa7316fdcc02d in memory
flw f29, 0(x2) # load 0xeafaa7316fdcc02d from memory into f29
li x3, 0x9f8b7421750deec6 # load x3 with value 0x9f8b7421750deec6
sw x3, 0(x2) # store 0x9f8b7421750deec6 in memory
flw f4, 0(x2) # load 0x9f8b7421750deec6 from memory into f4
fnmsub.s f10, f3, f29, f4 # perform operation

# Testcase cp_fd (Test destination fd = x11)
li x11, 0xdc389a5ca2691199 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe9b4f9eea9023471 # load x3 with value 0xe9b4f9eea9023471
sw x3, 0(x2) # store 0xe9b4f9eea9023471 in memory
flw f27, 0(x2) # load 0xe9b4f9eea9023471 from memory into f27
li x3, 0xb600c0555cd182d7 # load x3 with value 0xb600c0555cd182d7
sw x3, 0(x2) # store 0xb600c0555cd182d7 in memory
flw f28, 0(x2) # load 0xb600c0555cd182d7 from memory into f28
li x3, 0x1a43ee13f59e2578 # load x3 with value 0x1a43ee13f59e2578
sw x3, 0(x2) # store 0x1a43ee13f59e2578 in memory
flw f14, 0(x2) # load 0x1a43ee13f59e2578 from memory into f14
fnmsub.s f11, f27, f28, f14 # perform operation

# Testcase cp_fd (Test destination fd = x12)
li x12, 0xd9778b631e316d33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x12fcf9246197465a # load x3 with value 0x12fcf9246197465a
sw x3, 0(x2) # store 0x12fcf9246197465a in memory
flw f1, 0(x2) # load 0x12fcf9246197465a from memory into f1
li x3, 0x2ef5fd161c27a3f # load x3 with value 0x2ef5fd161c27a3f
sw x3, 0(x2) # store 0x2ef5fd161c27a3f in memory
flw f26, 0(x2) # load 0x2ef5fd161c27a3f from memory into f26
li x3, 0xcaabdb9cb36094c9 # load x3 with value 0xcaabdb9cb36094c9
sw x3, 0(x2) # store 0xcaabdb9cb36094c9 in memory
flw f7, 0(x2) # load 0xcaabdb9cb36094c9 from memory into f7
fnmsub.s f12, f1, f26, f7 # perform operation

# Testcase cp_fd (Test destination fd = x13)
li x13, 0x14ea68661d759394 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd31b2e157369a8d5 # load x3 with value 0xd31b2e157369a8d5
sw x3, 0(x2) # store 0xd31b2e157369a8d5 in memory
flw f19, 0(x2) # load 0xd31b2e157369a8d5 from memory into f19
li x3, 0xac1ad9a7a9cca58d # load x3 with value 0xac1ad9a7a9cca58d
sw x3, 0(x2) # store 0xac1ad9a7a9cca58d in memory
flw f26, 0(x2) # load 0xac1ad9a7a9cca58d from memory into f26
li x3, 0x632a4058a0957b81 # load x3 with value 0x632a4058a0957b81
sw x3, 0(x2) # store 0x632a4058a0957b81 in memory
flw f12, 0(x2) # load 0x632a4058a0957b81 from memory into f12
fnmsub.s f13, f19, f26, f12 # perform operation

# Testcase cp_fd (Test destination fd = x14)
li x14, 0xa180da72bd75e91b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xce162fcfdab9e8c9 # load x3 with value 0xce162fcfdab9e8c9
sw x3, 0(x2) # store 0xce162fcfdab9e8c9 in memory
flw f17, 0(x2) # load 0xce162fcfdab9e8c9 from memory into f17
li x3, 0x63879d56c60f5fce # load x3 with value 0x63879d56c60f5fce
sw x3, 0(x2) # store 0x63879d56c60f5fce in memory
flw f23, 0(x2) # load 0x63879d56c60f5fce from memory into f23
li x3, 0x3798211ab7c78937 # load x3 with value 0x3798211ab7c78937
sw x3, 0(x2) # store 0x3798211ab7c78937 in memory
flw f20, 0(x2) # load 0x3798211ab7c78937 from memory into f20
fnmsub.s f14, f17, f23, f20 # perform operation

# Testcase cp_fd (Test destination fd = x15)
li x15, 0xd330de3654669321 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4887ee7c72b7f13f # load x3 with value 0x4887ee7c72b7f13f
sw x3, 0(x2) # store 0x4887ee7c72b7f13f in memory
flw f25, 0(x2) # load 0x4887ee7c72b7f13f from memory into f25
li x3, 0x511593f272e91ce2 # load x3 with value 0x511593f272e91ce2
sw x3, 0(x2) # store 0x511593f272e91ce2 in memory
flw f23, 0(x2) # load 0x511593f272e91ce2 from memory into f23
li x3, 0xc0a4eacb96a754a4 # load x3 with value 0xc0a4eacb96a754a4
sw x3, 0(x2) # store 0xc0a4eacb96a754a4 in memory
flw f9, 0(x2) # load 0xc0a4eacb96a754a4 from memory into f9
fnmsub.s f15, f25, f23, f9 # perform operation

# Testcase cp_fd (Test destination fd = x16)
li x16, 0x47eadc5d3da5588e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x81f6cb92246deb4f # load x3 with value 0x81f6cb92246deb4f
sw x3, 0(x2) # store 0x81f6cb92246deb4f in memory
flw f15, 0(x2) # load 0x81f6cb92246deb4f from memory into f15
li x3, 0x79da9912918fdcf4 # load x3 with value 0x79da9912918fdcf4
sw x3, 0(x2) # store 0x79da9912918fdcf4 in memory
flw f31, 0(x2) # load 0x79da9912918fdcf4 from memory into f31
li x3, 0xbd4a5dafb3cf06c3 # load x3 with value 0xbd4a5dafb3cf06c3
sw x3, 0(x2) # store 0xbd4a5dafb3cf06c3 in memory
flw f12, 0(x2) # load 0xbd4a5dafb3cf06c3 from memory into f12
fnmsub.s f16, f15, f31, f12 # perform operation

# Testcase cp_fd (Test destination fd = x17)
li x17, 0xb054dd8f2643dd79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x591c1ce750ad5daf # load x3 with value 0x591c1ce750ad5daf
sw x3, 0(x2) # store 0x591c1ce750ad5daf in memory
flw f29, 0(x2) # load 0x591c1ce750ad5daf from memory into f29
li x3, 0xe3057ebf49331fd0 # load x3 with value 0xe3057ebf49331fd0
sw x3, 0(x2) # store 0xe3057ebf49331fd0 in memory
flw f14, 0(x2) # load 0xe3057ebf49331fd0 from memory into f14
li x3, 0xd2204cbefc47c02f # load x3 with value 0xd2204cbefc47c02f
sw x3, 0(x2) # store 0xd2204cbefc47c02f in memory
flw f8, 0(x2) # load 0xd2204cbefc47c02f from memory into f8
fnmsub.s f17, f29, f14, f8 # perform operation

# Testcase cp_fd (Test destination fd = x18)
li x18, 0x8e2fa2aa309c2ccd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeab93e1936dc18f8 # load x3 with value 0xeab93e1936dc18f8
sw x3, 0(x2) # store 0xeab93e1936dc18f8 in memory
flw f24, 0(x2) # load 0xeab93e1936dc18f8 from memory into f24
li x3, 0xdde47576cf78c514 # load x3 with value 0xdde47576cf78c514
sw x3, 0(x2) # store 0xdde47576cf78c514 in memory
flw f31, 0(x2) # load 0xdde47576cf78c514 from memory into f31
li x3, 0x1d9a10417e413fca # load x3 with value 0x1d9a10417e413fca
sw x3, 0(x2) # store 0x1d9a10417e413fca in memory
flw f15, 0(x2) # load 0x1d9a10417e413fca from memory into f15
fnmsub.s f18, f24, f31, f15 # perform operation

# Testcase cp_fd (Test destination fd = x19)
li x19, 0x8e0c781f0fe11e56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6dc42b04249ec6bc # load x3 with value 0x6dc42b04249ec6bc
sw x3, 0(x2) # store 0x6dc42b04249ec6bc in memory
flw f6, 0(x2) # load 0x6dc42b04249ec6bc from memory into f6
li x3, 0x6068320d45b6a362 # load x3 with value 0x6068320d45b6a362
sw x3, 0(x2) # store 0x6068320d45b6a362 in memory
flw f17, 0(x2) # load 0x6068320d45b6a362 from memory into f17
li x3, 0xeb94299d0dc66d1 # load x3 with value 0xeb94299d0dc66d1
sw x3, 0(x2) # store 0xeb94299d0dc66d1 in memory
flw f28, 0(x2) # load 0xeb94299d0dc66d1 from memory into f28
fnmsub.s f19, f6, f17, f28 # perform operation

# Testcase cp_fd (Test destination fd = x20)
li x20, 0xbcfb4818a32906b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3833a2d8068b8713 # load x3 with value 0x3833a2d8068b8713
sw x3, 0(x2) # store 0x3833a2d8068b8713 in memory
flw f5, 0(x2) # load 0x3833a2d8068b8713 from memory into f5
li x3, 0x4598fef2351a5efc # load x3 with value 0x4598fef2351a5efc
sw x3, 0(x2) # store 0x4598fef2351a5efc in memory
flw f9, 0(x2) # load 0x4598fef2351a5efc from memory into f9
li x3, 0xbed62c0c80575a39 # load x3 with value 0xbed62c0c80575a39
sw x3, 0(x2) # store 0xbed62c0c80575a39 in memory
flw f14, 0(x2) # load 0xbed62c0c80575a39 from memory into f14
fnmsub.s f20, f5, f9, f14 # perform operation

# Testcase cp_fd (Test destination fd = x21)
li x21, 0x1612549809026843 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc246633b8a1cdff4 # load x3 with value 0xc246633b8a1cdff4
sw x3, 0(x2) # store 0xc246633b8a1cdff4 in memory
flw f22, 0(x2) # load 0xc246633b8a1cdff4 from memory into f22
li x3, 0xfe044c31c9f06697 # load x3 with value 0xfe044c31c9f06697
sw x3, 0(x2) # store 0xfe044c31c9f06697 in memory
flw f19, 0(x2) # load 0xfe044c31c9f06697 from memory into f19
li x3, 0x4f251dcab9eca503 # load x3 with value 0x4f251dcab9eca503
sw x3, 0(x2) # store 0x4f251dcab9eca503 in memory
flw f21, 0(x2) # load 0x4f251dcab9eca503 from memory into f21
fnmsub.s f21, f22, f19, f21 # perform operation

# Testcase cp_fd (Test destination fd = x22)
li x22, 0x3d7ea3e6743cd751 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2885a4b115d7b24c # load x3 with value 0x2885a4b115d7b24c
sw x3, 0(x2) # store 0x2885a4b115d7b24c in memory
flw f30, 0(x2) # load 0x2885a4b115d7b24c from memory into f30
li x3, 0xcf288ca4a360efb7 # load x3 with value 0xcf288ca4a360efb7
sw x3, 0(x2) # store 0xcf288ca4a360efb7 in memory
flw f13, 0(x2) # load 0xcf288ca4a360efb7 from memory into f13
li x3, 0x221a5be436de5137 # load x3 with value 0x221a5be436de5137
sw x3, 0(x2) # store 0x221a5be436de5137 in memory
flw f2, 0(x2) # load 0x221a5be436de5137 from memory into f2
fnmsub.s f22, f30, f13, f2 # perform operation

# Testcase cp_fd (Test destination fd = x23)
li x23, 0x5d951a5ec8568ed0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeb2bcde3b928eef6 # load x3 with value 0xeb2bcde3b928eef6
sw x3, 0(x2) # store 0xeb2bcde3b928eef6 in memory
flw f17, 0(x2) # load 0xeb2bcde3b928eef6 from memory into f17
li x3, 0x345fe00ca1bac0a # load x3 with value 0x345fe00ca1bac0a
sw x3, 0(x2) # store 0x345fe00ca1bac0a in memory
flw f15, 0(x2) # load 0x345fe00ca1bac0a from memory into f15
li x3, 0xbb69bd3d823f335c # load x3 with value 0xbb69bd3d823f335c
sw x3, 0(x2) # store 0xbb69bd3d823f335c in memory
flw f25, 0(x2) # load 0xbb69bd3d823f335c from memory into f25
fnmsub.s f23, f17, f15, f25 # perform operation

# Testcase cp_fd (Test destination fd = x24)
li x24, 0x14350bc17a8886c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8dfb182e215ec45f # load x3 with value 0x8dfb182e215ec45f
sw x3, 0(x2) # store 0x8dfb182e215ec45f in memory
flw f9, 0(x2) # load 0x8dfb182e215ec45f from memory into f9
li x3, 0x4d496455ac5da1d7 # load x3 with value 0x4d496455ac5da1d7
sw x3, 0(x2) # store 0x4d496455ac5da1d7 in memory
flw f28, 0(x2) # load 0x4d496455ac5da1d7 from memory into f28
li x3, 0xd89a508aca486447 # load x3 with value 0xd89a508aca486447
sw x3, 0(x2) # store 0xd89a508aca486447 in memory
flw f10, 0(x2) # load 0xd89a508aca486447 from memory into f10
fnmsub.s f24, f9, f28, f10 # perform operation

# Testcase cp_fd (Test destination fd = x25)
li x25, 0xbe5a8c7d8321316b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6130ad10a3341abb # load x3 with value 0x6130ad10a3341abb
sw x3, 0(x2) # store 0x6130ad10a3341abb in memory
flw f3, 0(x2) # load 0x6130ad10a3341abb from memory into f3
li x3, 0x1e63ffe7569366bd # load x3 with value 0x1e63ffe7569366bd
sw x3, 0(x2) # store 0x1e63ffe7569366bd in memory
flw f25, 0(x2) # load 0x1e63ffe7569366bd from memory into f25
li x3, 0xff96c4f5b71bc7ee # load x3 with value 0xff96c4f5b71bc7ee
sw x3, 0(x2) # store 0xff96c4f5b71bc7ee in memory
flw f19, 0(x2) # load 0xff96c4f5b71bc7ee from memory into f19
fnmsub.s f25, f3, f25, f19 # perform operation

# Testcase cp_fd (Test destination fd = x26)
li x26, 0x6f9c85efa465ff4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb4b42ed9734056a5 # load x3 with value 0xb4b42ed9734056a5
sw x3, 0(x2) # store 0xb4b42ed9734056a5 in memory
flw f5, 0(x2) # load 0xb4b42ed9734056a5 from memory into f5
li x3, 0x198459b9da9633e8 # load x3 with value 0x198459b9da9633e8
sw x3, 0(x2) # store 0x198459b9da9633e8 in memory
flw f20, 0(x2) # load 0x198459b9da9633e8 from memory into f20
li x3, 0x60419957d1eaf8eb # load x3 with value 0x60419957d1eaf8eb
sw x3, 0(x2) # store 0x60419957d1eaf8eb in memory
flw f1, 0(x2) # load 0x60419957d1eaf8eb from memory into f1
fnmsub.s f26, f5, f20, f1 # perform operation

# Testcase cp_fd (Test destination fd = x27)
li x27, 0xc6d4a887c95641d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4a7a9d7a9f1fda3b # load x3 with value 0x4a7a9d7a9f1fda3b
sw x3, 0(x2) # store 0x4a7a9d7a9f1fda3b in memory
flw f30, 0(x2) # load 0x4a7a9d7a9f1fda3b from memory into f30
li x3, 0x76a7467c25054539 # load x3 with value 0x76a7467c25054539
sw x3, 0(x2) # store 0x76a7467c25054539 in memory
flw f29, 0(x2) # load 0x76a7467c25054539 from memory into f29
li x3, 0x475031cc95c67f7a # load x3 with value 0x475031cc95c67f7a
sw x3, 0(x2) # store 0x475031cc95c67f7a in memory
flw f16, 0(x2) # load 0x475031cc95c67f7a from memory into f16
fnmsub.s f27, f30, f29, f16 # perform operation

# Testcase cp_fd (Test destination fd = x28)
li x28, 0xeb3a54309edbac95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x990a4f6b55ff34d1 # load x3 with value 0x990a4f6b55ff34d1
sw x3, 0(x2) # store 0x990a4f6b55ff34d1 in memory
flw f26, 0(x2) # load 0x990a4f6b55ff34d1 from memory into f26
li x3, 0xde1fef668db9c1a5 # load x3 with value 0xde1fef668db9c1a5
sw x3, 0(x2) # store 0xde1fef668db9c1a5 in memory
flw f10, 0(x2) # load 0xde1fef668db9c1a5 from memory into f10
li x3, 0xb7073dcf3b29f296 # load x3 with value 0xb7073dcf3b29f296
sw x3, 0(x2) # store 0xb7073dcf3b29f296 in memory
flw f6, 0(x2) # load 0xb7073dcf3b29f296 from memory into f6
fnmsub.s f28, f26, f10, f6 # perform operation

# Testcase cp_fd (Test destination fd = x29)
li x29, 0xc2f990a6accf8e20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x426fbe7465bef230 # load x3 with value 0x426fbe7465bef230
sw x3, 0(x2) # store 0x426fbe7465bef230 in memory
flw f17, 0(x2) # load 0x426fbe7465bef230 from memory into f17
li x3, 0xb8c81f06ff091aa5 # load x3 with value 0xb8c81f06ff091aa5
sw x3, 0(x2) # store 0xb8c81f06ff091aa5 in memory
flw f7, 0(x2) # load 0xb8c81f06ff091aa5 from memory into f7
li x3, 0x25d7bae802593750 # load x3 with value 0x25d7bae802593750
sw x3, 0(x2) # store 0x25d7bae802593750 in memory
flw f5, 0(x2) # load 0x25d7bae802593750 from memory into f5
fnmsub.s f29, f17, f7, f5 # perform operation

# Testcase cp_fd (Test destination fd = x30)
li x30, 0xea3d97b8af75c5a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x85f5f95e067045c8 # load x3 with value 0x85f5f95e067045c8
sw x3, 0(x2) # store 0x85f5f95e067045c8 in memory
flw f21, 0(x2) # load 0x85f5f95e067045c8 from memory into f21
li x3, 0x830d24cafe849140 # load x3 with value 0x830d24cafe849140
sw x3, 0(x2) # store 0x830d24cafe849140 in memory
flw f31, 0(x2) # load 0x830d24cafe849140 from memory into f31
li x3, 0x50ed6020d27b0688 # load x3 with value 0x50ed6020d27b0688
sw x3, 0(x2) # store 0x50ed6020d27b0688 in memory
flw f29, 0(x2) # load 0x50ed6020d27b0688 from memory into f29
fnmsub.s f30, f21, f31, f29 # perform operation

# Testcase cp_fd (Test destination fd = x31)
li x31, 0x1909d15440baa7dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffd8915e721ff442 # load x3 with value 0xffd8915e721ff442
sw x3, 0(x2) # store 0xffd8915e721ff442 in memory
flw f9, 0(x2) # load 0xffd8915e721ff442 from memory into f9
li x3, 0x72d1844c5abd2a07 # load x3 with value 0x72d1844c5abd2a07
sw x3, 0(x2) # store 0x72d1844c5abd2a07 in memory
flw f27, 0(x2) # load 0x72d1844c5abd2a07 from memory into f27
li x3, 0x233433d6fe829f14 # load x3 with value 0x233433d6fe829f14
sw x3, 0(x2) # store 0x233433d6fe829f14 in memory
flw f24, 0(x2) # load 0x233433d6fe829f14 from memory into f24
fnmsub.s f31, f9, f27, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f0)
li x15, 0x4431144b1490d578 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf62e0ded5dfca384 # load x3 with value 0xf62e0ded5dfca384
sw x3, 0(x2) # store 0xf62e0ded5dfca384 in memory
flw f0, 0(x2) # load 0xf62e0ded5dfca384 from memory into f0
li x3, 0x46902a142d9904f2 # load x3 with value 0x46902a142d9904f2
sw x3, 0(x2) # store 0x46902a142d9904f2 in memory
flw f25, 0(x2) # load 0x46902a142d9904f2 from memory into f25
li x3, 0xeda8f78d52d5ed67 # load x3 with value 0xeda8f78d52d5ed67
sw x3, 0(x2) # store 0xeda8f78d52d5ed67 in memory
flw f21, 0(x2) # load 0xeda8f78d52d5ed67 from memory into f21
fnmsub.s f15, f0, f25, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
li x14, 0xaa2db7acadf0ac65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2fd42640e62f1991 # load x3 with value 0x2fd42640e62f1991
sw x3, 0(x2) # store 0x2fd42640e62f1991 in memory
flw f1, 0(x2) # load 0x2fd42640e62f1991 from memory into f1
li x3, 0x15f04defa503c8c # load x3 with value 0x15f04defa503c8c
sw x3, 0(x2) # store 0x15f04defa503c8c in memory
flw f11, 0(x2) # load 0x15f04defa503c8c from memory into f11
li x3, 0x13be4fd7f6a8439a # load x3 with value 0x13be4fd7f6a8439a
sw x3, 0(x2) # store 0x13be4fd7f6a8439a in memory
flw f26, 0(x2) # load 0x13be4fd7f6a8439a from memory into f26
fnmsub.s f14, f1, f11, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
li x27, 0xce035c0d5e742049 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x81e7e5de365b7af6 # load x3 with value 0x81e7e5de365b7af6
sw x3, 0(x2) # store 0x81e7e5de365b7af6 in memory
flw f2, 0(x2) # load 0x81e7e5de365b7af6 from memory into f2
li x3, 0x10c8dfc56ef21999 # load x3 with value 0x10c8dfc56ef21999
sw x3, 0(x2) # store 0x10c8dfc56ef21999 in memory
flw f22, 0(x2) # load 0x10c8dfc56ef21999 from memory into f22
li x3, 0xf7ad21f33aba87a6 # load x3 with value 0xf7ad21f33aba87a6
sw x3, 0(x2) # store 0xf7ad21f33aba87a6 in memory
flw f25, 0(x2) # load 0xf7ad21f33aba87a6 from memory into f25
fnmsub.s f27, f2, f22, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
li x27, 0xe825accb46d20e9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8981bf4a8123ac11 # load x3 with value 0x8981bf4a8123ac11
sw x3, 0(x2) # store 0x8981bf4a8123ac11 in memory
flw f3, 0(x2) # load 0x8981bf4a8123ac11 from memory into f3
li x3, 0x540cfec9bf3705c5 # load x3 with value 0x540cfec9bf3705c5
sw x3, 0(x2) # store 0x540cfec9bf3705c5 in memory
flw f9, 0(x2) # load 0x540cfec9bf3705c5 from memory into f9
li x3, 0xad90eccb41cdf9a # load x3 with value 0xad90eccb41cdf9a
sw x3, 0(x2) # store 0xad90eccb41cdf9a in memory
flw f31, 0(x2) # load 0xad90eccb41cdf9a from memory into f31
fnmsub.s f27, f3, f9, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
li x18, 0xe7189e471dcda2c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7539d618f38c6b27 # load x3 with value 0x7539d618f38c6b27
sw x3, 0(x2) # store 0x7539d618f38c6b27 in memory
flw f4, 0(x2) # load 0x7539d618f38c6b27 from memory into f4
li x3, 0x2e84c1d285d6cc7e # load x3 with value 0x2e84c1d285d6cc7e
sw x3, 0(x2) # store 0x2e84c1d285d6cc7e in memory
flw f19, 0(x2) # load 0x2e84c1d285d6cc7e from memory into f19
li x3, 0x1b3c6676f402f3b1 # load x3 with value 0x1b3c6676f402f3b1
sw x3, 0(x2) # store 0x1b3c6676f402f3b1 in memory
flw f21, 0(x2) # load 0x1b3c6676f402f3b1 from memory into f21
fnmsub.s f18, f4, f19, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
li x29, 0xa9b8d2e7d4fe7791 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6c1ea9193d05ffd7 # load x3 with value 0x6c1ea9193d05ffd7
sw x3, 0(x2) # store 0x6c1ea9193d05ffd7 in memory
flw f5, 0(x2) # load 0x6c1ea9193d05ffd7 from memory into f5
li x3, 0x3c880f9bed391a26 # load x3 with value 0x3c880f9bed391a26
sw x3, 0(x2) # store 0x3c880f9bed391a26 in memory
flw f3, 0(x2) # load 0x3c880f9bed391a26 from memory into f3
li x3, 0x8363dc82f7222bcf # load x3 with value 0x8363dc82f7222bcf
sw x3, 0(x2) # store 0x8363dc82f7222bcf in memory
flw f1, 0(x2) # load 0x8363dc82f7222bcf from memory into f1
fnmsub.s f29, f5, f3, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
li x10, 0x3378c1007a3ad492 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40ee72db42d713dc # load x3 with value 0x40ee72db42d713dc
sw x3, 0(x2) # store 0x40ee72db42d713dc in memory
flw f6, 0(x2) # load 0x40ee72db42d713dc from memory into f6
li x3, 0x11e5e74aa0cccefd # load x3 with value 0x11e5e74aa0cccefd
sw x3, 0(x2) # store 0x11e5e74aa0cccefd in memory
flw f1, 0(x2) # load 0x11e5e74aa0cccefd from memory into f1
li x3, 0x28b5ea1062e9d5cb # load x3 with value 0x28b5ea1062e9d5cb
sw x3, 0(x2) # store 0x28b5ea1062e9d5cb in memory
flw f9, 0(x2) # load 0x28b5ea1062e9d5cb from memory into f9
fnmsub.s f10, f6, f1, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
li x27, 0x6e23ff957344a901 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbbc9e647bfdf3ec9 # load x3 with value 0xbbc9e647bfdf3ec9
sw x3, 0(x2) # store 0xbbc9e647bfdf3ec9 in memory
flw f7, 0(x2) # load 0xbbc9e647bfdf3ec9 from memory into f7
li x3, 0xf2ce391c650f7d3b # load x3 with value 0xf2ce391c650f7d3b
sw x3, 0(x2) # store 0xf2ce391c650f7d3b in memory
flw f4, 0(x2) # load 0xf2ce391c650f7d3b from memory into f4
li x3, 0x12681879baf01f54 # load x3 with value 0x12681879baf01f54
sw x3, 0(x2) # store 0x12681879baf01f54 in memory
flw f19, 0(x2) # load 0x12681879baf01f54 from memory into f19
fnmsub.s f27, f7, f4, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
li x29, 0x0f211f24c25956c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd48ad96c07cda32a # load x3 with value 0xd48ad96c07cda32a
sw x3, 0(x2) # store 0xd48ad96c07cda32a in memory
flw f8, 0(x2) # load 0xd48ad96c07cda32a from memory into f8
li x3, 0x5dcd5a96e75b5de4 # load x3 with value 0x5dcd5a96e75b5de4
sw x3, 0(x2) # store 0x5dcd5a96e75b5de4 in memory
flw f23, 0(x2) # load 0x5dcd5a96e75b5de4 from memory into f23
li x3, 0x199ac2eef1039c # load x3 with value 0x199ac2eef1039c
sw x3, 0(x2) # store 0x199ac2eef1039c in memory
flw f3, 0(x2) # load 0x199ac2eef1039c from memory into f3
fnmsub.s f29, f8, f23, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
li x25, 0xf2bc795ef8313d5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfe867730294b526d # load x3 with value 0xfe867730294b526d
sw x3, 0(x2) # store 0xfe867730294b526d in memory
flw f9, 0(x2) # load 0xfe867730294b526d from memory into f9
li x3, 0x2c22f6d9aece1f9a # load x3 with value 0x2c22f6d9aece1f9a
sw x3, 0(x2) # store 0x2c22f6d9aece1f9a in memory
flw f16, 0(x2) # load 0x2c22f6d9aece1f9a from memory into f16
li x3, 0x933a71bb4e10dc11 # load x3 with value 0x933a71bb4e10dc11
sw x3, 0(x2) # store 0x933a71bb4e10dc11 in memory
flw f19, 0(x2) # load 0x933a71bb4e10dc11 from memory into f19
fnmsub.s f25, f9, f16, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
li x10, 0x64816ac1afec3dae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x521a2618c2e7c6db # load x3 with value 0x521a2618c2e7c6db
sw x3, 0(x2) # store 0x521a2618c2e7c6db in memory
flw f10, 0(x2) # load 0x521a2618c2e7c6db from memory into f10
li x3, 0xac2b2f484f7d0ba5 # load x3 with value 0xac2b2f484f7d0ba5
sw x3, 0(x2) # store 0xac2b2f484f7d0ba5 in memory
flw f6, 0(x2) # load 0xac2b2f484f7d0ba5 from memory into f6
li x3, 0x8ab5bdd26810d19d # load x3 with value 0x8ab5bdd26810d19d
sw x3, 0(x2) # store 0x8ab5bdd26810d19d in memory
flw f17, 0(x2) # load 0x8ab5bdd26810d19d from memory into f17
fnmsub.s f10, f10, f6, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
li x28, 0x7b33543732cf0b07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x669c855ad264adf # load x3 with value 0x669c855ad264adf
sw x3, 0(x2) # store 0x669c855ad264adf in memory
flw f11, 0(x2) # load 0x669c855ad264adf from memory into f11
li x3, 0xa9ece5edfd78e946 # load x3 with value 0xa9ece5edfd78e946
sw x3, 0(x2) # store 0xa9ece5edfd78e946 in memory
flw f10, 0(x2) # load 0xa9ece5edfd78e946 from memory into f10
li x3, 0x42b5bb3f249c630 # load x3 with value 0x42b5bb3f249c630
sw x3, 0(x2) # store 0x42b5bb3f249c630 in memory
flw f13, 0(x2) # load 0x42b5bb3f249c630 from memory into f13
fnmsub.s f28, f11, f10, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
li x1, 0x0c7f3f2be589a1e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc379febd07699dca # load x3 with value 0xc379febd07699dca
sw x3, 0(x2) # store 0xc379febd07699dca in memory
flw f12, 0(x2) # load 0xc379febd07699dca from memory into f12
li x3, 0x9227f13831130957 # load x3 with value 0x9227f13831130957
sw x3, 0(x2) # store 0x9227f13831130957 in memory
flw f31, 0(x2) # load 0x9227f13831130957 from memory into f31
li x3, 0x1ce8f7c74279f281 # load x3 with value 0x1ce8f7c74279f281
sw x3, 0(x2) # store 0x1ce8f7c74279f281 in memory
flw f10, 0(x2) # load 0x1ce8f7c74279f281 from memory into f10
fnmsub.s f1, f12, f31, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
li x28, 0xd46a9cd822a45aa4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x46cffa364fe05c16 # load x3 with value 0x46cffa364fe05c16
sw x3, 0(x2) # store 0x46cffa364fe05c16 in memory
flw f13, 0(x2) # load 0x46cffa364fe05c16 from memory into f13
li x3, 0xa151b741e8ddc68c # load x3 with value 0xa151b741e8ddc68c
sw x3, 0(x2) # store 0xa151b741e8ddc68c in memory
flw f19, 0(x2) # load 0xa151b741e8ddc68c from memory into f19
li x3, 0xeebce2756aca9ac3 # load x3 with value 0xeebce2756aca9ac3
sw x3, 0(x2) # store 0xeebce2756aca9ac3 in memory
flw f15, 0(x2) # load 0xeebce2756aca9ac3 from memory into f15
fnmsub.s f28, f13, f19, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
li x27, 0xe5f37327df7ef4d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeee7dfe1478d03d8 # load x3 with value 0xeee7dfe1478d03d8
sw x3, 0(x2) # store 0xeee7dfe1478d03d8 in memory
flw f14, 0(x2) # load 0xeee7dfe1478d03d8 from memory into f14
li x3, 0x4e81d67ae58150c5 # load x3 with value 0x4e81d67ae58150c5
sw x3, 0(x2) # store 0x4e81d67ae58150c5 in memory
flw f17, 0(x2) # load 0x4e81d67ae58150c5 from memory into f17
li x3, 0x3f4199bf2ac73104 # load x3 with value 0x3f4199bf2ac73104
sw x3, 0(x2) # store 0x3f4199bf2ac73104 in memory
flw f20, 0(x2) # load 0x3f4199bf2ac73104 from memory into f20
fnmsub.s f27, f14, f17, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
li x1, 0xaf96223fa9dfd2f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6a58dbb3133e1af3 # load x3 with value 0x6a58dbb3133e1af3
sw x3, 0(x2) # store 0x6a58dbb3133e1af3 in memory
flw f15, 0(x2) # load 0x6a58dbb3133e1af3 from memory into f15
li x3, 0x633f40c6eea1bd7e # load x3 with value 0x633f40c6eea1bd7e
sw x3, 0(x2) # store 0x633f40c6eea1bd7e in memory
flw f31, 0(x2) # load 0x633f40c6eea1bd7e from memory into f31
li x3, 0x96b819699d219d21 # load x3 with value 0x96b819699d219d21
sw x3, 0(x2) # store 0x96b819699d219d21 in memory
flw f5, 0(x2) # load 0x96b819699d219d21 from memory into f5
fnmsub.s f1, f15, f31, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
li x20, 0x91c39ef0dbab126f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1225714c8cd9a779 # load x3 with value 0x1225714c8cd9a779
sw x3, 0(x2) # store 0x1225714c8cd9a779 in memory
flw f16, 0(x2) # load 0x1225714c8cd9a779 from memory into f16
li x3, 0xb55667c18a5f47ac # load x3 with value 0xb55667c18a5f47ac
sw x3, 0(x2) # store 0xb55667c18a5f47ac in memory
flw f10, 0(x2) # load 0xb55667c18a5f47ac from memory into f10
li x3, 0x5fbd661fc6a86537 # load x3 with value 0x5fbd661fc6a86537
sw x3, 0(x2) # store 0x5fbd661fc6a86537 in memory
flw f27, 0(x2) # load 0x5fbd661fc6a86537 from memory into f27
fnmsub.s f20, f16, f10, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
li x16, 0x2c1a4088b30dff94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd7c697b5dc57a761 # load x3 with value 0xd7c697b5dc57a761
sw x3, 0(x2) # store 0xd7c697b5dc57a761 in memory
flw f17, 0(x2) # load 0xd7c697b5dc57a761 from memory into f17
li x3, 0x999127ce9509cd56 # load x3 with value 0x999127ce9509cd56
sw x3, 0(x2) # store 0x999127ce9509cd56 in memory
flw f6, 0(x2) # load 0x999127ce9509cd56 from memory into f6
li x3, 0xf0e33cfa6537d281 # load x3 with value 0xf0e33cfa6537d281
sw x3, 0(x2) # store 0xf0e33cfa6537d281 in memory
flw f13, 0(x2) # load 0xf0e33cfa6537d281 from memory into f13
fnmsub.s f16, f17, f6, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
li x19, 0x69bfc953b0c82ce9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1205aed78c0bac07 # load x3 with value 0x1205aed78c0bac07
sw x3, 0(x2) # store 0x1205aed78c0bac07 in memory
flw f18, 0(x2) # load 0x1205aed78c0bac07 from memory into f18
li x3, 0x3e9e582df27a69f1 # load x3 with value 0x3e9e582df27a69f1
sw x3, 0(x2) # store 0x3e9e582df27a69f1 in memory
flw f17, 0(x2) # load 0x3e9e582df27a69f1 from memory into f17
li x3, 0xda55e2a6ad8cd064 # load x3 with value 0xda55e2a6ad8cd064
sw x3, 0(x2) # store 0xda55e2a6ad8cd064 in memory
flw f9, 0(x2) # load 0xda55e2a6ad8cd064 from memory into f9
fnmsub.s f19, f18, f17, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
li x22, 0xd4f83e00843e8226 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xda70ee508699d4a6 # load x3 with value 0xda70ee508699d4a6
sw x3, 0(x2) # store 0xda70ee508699d4a6 in memory
flw f19, 0(x2) # load 0xda70ee508699d4a6 from memory into f19
li x3, 0xe3534ecb821977d6 # load x3 with value 0xe3534ecb821977d6
sw x3, 0(x2) # store 0xe3534ecb821977d6 in memory
flw f16, 0(x2) # load 0xe3534ecb821977d6 from memory into f16
li x3, 0x869b5d299b0a67d8 # load x3 with value 0x869b5d299b0a67d8
sw x3, 0(x2) # store 0x869b5d299b0a67d8 in memory
flw f23, 0(x2) # load 0x869b5d299b0a67d8 from memory into f23
fnmsub.s f22, f19, f16, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
li x31, 0xc6cc1171801c354c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x734ba4da6a376f4 # load x3 with value 0x734ba4da6a376f4
sw x3, 0(x2) # store 0x734ba4da6a376f4 in memory
flw f20, 0(x2) # load 0x734ba4da6a376f4 from memory into f20
li x3, 0x7c8ab3ad65a75401 # load x3 with value 0x7c8ab3ad65a75401
sw x3, 0(x2) # store 0x7c8ab3ad65a75401 in memory
flw f2, 0(x2) # load 0x7c8ab3ad65a75401 from memory into f2
li x3, 0xca9aea6957ed2ad1 # load x3 with value 0xca9aea6957ed2ad1
sw x3, 0(x2) # store 0xca9aea6957ed2ad1 in memory
flw f18, 0(x2) # load 0xca9aea6957ed2ad1 from memory into f18
fnmsub.s f31, f20, f2, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
li x26, 0x7d4da343c346ce31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9b2fc1f1047bcd1d # load x3 with value 0x9b2fc1f1047bcd1d
sw x3, 0(x2) # store 0x9b2fc1f1047bcd1d in memory
flw f21, 0(x2) # load 0x9b2fc1f1047bcd1d from memory into f21
li x3, 0xd7627e214cdc09f9 # load x3 with value 0xd7627e214cdc09f9
sw x3, 0(x2) # store 0xd7627e214cdc09f9 in memory
flw f11, 0(x2) # load 0xd7627e214cdc09f9 from memory into f11
li x3, 0xcaf01d8baeca347e # load x3 with value 0xcaf01d8baeca347e
sw x3, 0(x2) # store 0xcaf01d8baeca347e in memory
flw f15, 0(x2) # load 0xcaf01d8baeca347e from memory into f15
fnmsub.s f26, f21, f11, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
li x8, 0x3172ecaf5c5c9b64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x182a2d1c3b371528 # load x3 with value 0x182a2d1c3b371528
sw x3, 0(x2) # store 0x182a2d1c3b371528 in memory
flw f22, 0(x2) # load 0x182a2d1c3b371528 from memory into f22
li x3, 0x31c9221d729634b9 # load x3 with value 0x31c9221d729634b9
sw x3, 0(x2) # store 0x31c9221d729634b9 in memory
flw f3, 0(x2) # load 0x31c9221d729634b9 from memory into f3
li x3, 0x39df9da81ccc4324 # load x3 with value 0x39df9da81ccc4324
sw x3, 0(x2) # store 0x39df9da81ccc4324 in memory
flw f13, 0(x2) # load 0x39df9da81ccc4324 from memory into f13
fnmsub.s f8, f22, f3, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
li x6, 0xedba3bb16ec8d276 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa344d8191ea8f6a8 # load x3 with value 0xa344d8191ea8f6a8
sw x3, 0(x2) # store 0xa344d8191ea8f6a8 in memory
flw f23, 0(x2) # load 0xa344d8191ea8f6a8 from memory into f23
li x3, 0xb5f8d3bfee422bff # load x3 with value 0xb5f8d3bfee422bff
sw x3, 0(x2) # store 0xb5f8d3bfee422bff in memory
flw f8, 0(x2) # load 0xb5f8d3bfee422bff from memory into f8
li x3, 0x1ff85dc9c01bb5df # load x3 with value 0x1ff85dc9c01bb5df
sw x3, 0(x2) # store 0x1ff85dc9c01bb5df in memory
flw f11, 0(x2) # load 0x1ff85dc9c01bb5df from memory into f11
fnmsub.s f6, f23, f8, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
li x15, 0x441b657e0be0ae08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x60eb7c69b0dbecdd # load x3 with value 0x60eb7c69b0dbecdd
sw x3, 0(x2) # store 0x60eb7c69b0dbecdd in memory
flw f24, 0(x2) # load 0x60eb7c69b0dbecdd from memory into f24
li x3, 0x9cb975d409616e28 # load x3 with value 0x9cb975d409616e28
sw x3, 0(x2) # store 0x9cb975d409616e28 in memory
flw f14, 0(x2) # load 0x9cb975d409616e28 from memory into f14
li x3, 0xfbb2226068a79d0d # load x3 with value 0xfbb2226068a79d0d
sw x3, 0(x2) # store 0xfbb2226068a79d0d in memory
flw f27, 0(x2) # load 0xfbb2226068a79d0d from memory into f27
fnmsub.s f15, f24, f14, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
li x11, 0x7f66cee23b3f7445 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xafb6c10fbcf38ad9 # load x3 with value 0xafb6c10fbcf38ad9
sw x3, 0(x2) # store 0xafb6c10fbcf38ad9 in memory
flw f25, 0(x2) # load 0xafb6c10fbcf38ad9 from memory into f25
li x3, 0x191cffc02ff00dcf # load x3 with value 0x191cffc02ff00dcf
sw x3, 0(x2) # store 0x191cffc02ff00dcf in memory
flw f4, 0(x2) # load 0x191cffc02ff00dcf from memory into f4
li x3, 0x8cc3134228e1e2a7 # load x3 with value 0x8cc3134228e1e2a7
sw x3, 0(x2) # store 0x8cc3134228e1e2a7 in memory
flw f20, 0(x2) # load 0x8cc3134228e1e2a7 from memory into f20
fnmsub.s f11, f25, f4, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
li x26, 0x0212c2655964498e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x870c70580d27bec7 # load x3 with value 0x870c70580d27bec7
sw x3, 0(x2) # store 0x870c70580d27bec7 in memory
flw f26, 0(x2) # load 0x870c70580d27bec7 from memory into f26
li x3, 0x4d540670fb01444d # load x3 with value 0x4d540670fb01444d
sw x3, 0(x2) # store 0x4d540670fb01444d in memory
flw f25, 0(x2) # load 0x4d540670fb01444d from memory into f25
li x3, 0x195040efb88a82ac # load x3 with value 0x195040efb88a82ac
sw x3, 0(x2) # store 0x195040efb88a82ac in memory
flw f2, 0(x2) # load 0x195040efb88a82ac from memory into f2
fnmsub.s f26, f26, f25, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
li x13, 0xb939cd33c77669af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x22ac1fe65b9c8722 # load x3 with value 0x22ac1fe65b9c8722
sw x3, 0(x2) # store 0x22ac1fe65b9c8722 in memory
flw f27, 0(x2) # load 0x22ac1fe65b9c8722 from memory into f27
li x3, 0x4d98c4ecd5ad72b3 # load x3 with value 0x4d98c4ecd5ad72b3
sw x3, 0(x2) # store 0x4d98c4ecd5ad72b3 in memory
flw f21, 0(x2) # load 0x4d98c4ecd5ad72b3 from memory into f21
li x3, 0x405b7569eb3f6dba # load x3 with value 0x405b7569eb3f6dba
sw x3, 0(x2) # store 0x405b7569eb3f6dba in memory
flw f29, 0(x2) # load 0x405b7569eb3f6dba from memory into f29
fnmsub.s f13, f27, f21, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
li x2, 0x449176635df37f65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb071c0b829ffcc99 # load x3 with value 0xb071c0b829ffcc99
sw x3, 0(x2) # store 0xb071c0b829ffcc99 in memory
flw f28, 0(x2) # load 0xb071c0b829ffcc99 from memory into f28
li x3, 0x362b0e572b5d0c49 # load x3 with value 0x362b0e572b5d0c49
sw x3, 0(x2) # store 0x362b0e572b5d0c49 in memory
flw f4, 0(x2) # load 0x362b0e572b5d0c49 from memory into f4
li x3, 0x42708efbbf751e3c # load x3 with value 0x42708efbbf751e3c
sw x3, 0(x2) # store 0x42708efbbf751e3c in memory
flw f10, 0(x2) # load 0x42708efbbf751e3c from memory into f10
fnmsub.s f2, f28, f4, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
li x9, 0x98f6e925dec471b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2a5bf36d6816c832 # load x3 with value 0x2a5bf36d6816c832
sw x3, 0(x2) # store 0x2a5bf36d6816c832 in memory
flw f29, 0(x2) # load 0x2a5bf36d6816c832 from memory into f29
li x3, 0x67bfcaa16e32b0e9 # load x3 with value 0x67bfcaa16e32b0e9
sw x3, 0(x2) # store 0x67bfcaa16e32b0e9 in memory
flw f4, 0(x2) # load 0x67bfcaa16e32b0e9 from memory into f4
li x3, 0x76b0e4949ddbfafb # load x3 with value 0x76b0e4949ddbfafb
sw x3, 0(x2) # store 0x76b0e4949ddbfafb in memory
flw f23, 0(x2) # load 0x76b0e4949ddbfafb from memory into f23
fnmsub.s f9, f29, f4, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
li x22, 0x0f029d5862a4bd18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8bf8f43b47cd31dd # load x3 with value 0x8bf8f43b47cd31dd
sw x3, 0(x2) # store 0x8bf8f43b47cd31dd in memory
flw f30, 0(x2) # load 0x8bf8f43b47cd31dd from memory into f30
li x3, 0xe428857bf3a7c44e # load x3 with value 0xe428857bf3a7c44e
sw x3, 0(x2) # store 0xe428857bf3a7c44e in memory
flw f27, 0(x2) # load 0xe428857bf3a7c44e from memory into f27
li x3, 0xc41d69ccfab1377c # load x3 with value 0xc41d69ccfab1377c
sw x3, 0(x2) # store 0xc41d69ccfab1377c in memory
flw f4, 0(x2) # load 0xc41d69ccfab1377c from memory into f4
fnmsub.s f22, f30, f27, f4 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
li x30, 0x1aa71d8ffa8bd3b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc384a14f410bdc83 # load x3 with value 0xc384a14f410bdc83
sw x3, 0(x2) # store 0xc384a14f410bdc83 in memory
flw f31, 0(x2) # load 0xc384a14f410bdc83 from memory into f31
li x3, 0xb8affacd92d43f49 # load x3 with value 0xb8affacd92d43f49
sw x3, 0(x2) # store 0xb8affacd92d43f49 in memory
flw f13, 0(x2) # load 0xb8affacd92d43f49 from memory into f13
li x3, 0xfe73d00a9918272f # load x3 with value 0xfe73d00a9918272f
sw x3, 0(x2) # store 0xfe73d00a9918272f in memory
flw f3, 0(x2) # load 0xfe73d00a9918272f from memory into f3
fnmsub.s f30, f31, f13, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
li x31, 0x8a8561bead5354c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1bc20465be1cf02b # load x3 with value 0x1bc20465be1cf02b
sw x3, 0(x2) # store 0x1bc20465be1cf02b in memory
flw f5, 0(x2) # load 0x1bc20465be1cf02b from memory into f5
li x3, 0x4943607f548980c7 # load x3 with value 0x4943607f548980c7
sw x3, 0(x2) # store 0x4943607f548980c7 in memory
flw f0, 0(x2) # load 0x4943607f548980c7 from memory into f0
li x3, 0x1bb283f81e8ae6e # load x3 with value 0x1bb283f81e8ae6e
sw x3, 0(x2) # store 0x1bb283f81e8ae6e in memory
flw f29, 0(x2) # load 0x1bb283f81e8ae6e from memory into f29
fnmsub.s f31, f5, f0, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
li x11, 0xc9b9d3f8f77a255f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xacb3086d883d1890 # load x3 with value 0xacb3086d883d1890
sw x3, 0(x2) # store 0xacb3086d883d1890 in memory
flw f7, 0(x2) # load 0xacb3086d883d1890 from memory into f7
li x3, 0xd9d4c6facf9015cf # load x3 with value 0xd9d4c6facf9015cf
sw x3, 0(x2) # store 0xd9d4c6facf9015cf in memory
flw f1, 0(x2) # load 0xd9d4c6facf9015cf from memory into f1
li x3, 0x2bccc6db5337449e # load x3 with value 0x2bccc6db5337449e
sw x3, 0(x2) # store 0x2bccc6db5337449e in memory
flw f1, 0(x2) # load 0x2bccc6db5337449e from memory into f1
fnmsub.s f11, f7, f1, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
li x24, 0x3332733f3fb8ff41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1f42ba64cbabd069 # load x3 with value 0x1f42ba64cbabd069
sw x3, 0(x2) # store 0x1f42ba64cbabd069 in memory
flw f16, 0(x2) # load 0x1f42ba64cbabd069 from memory into f16
li x3, 0xd1c251f352e6bb41 # load x3 with value 0xd1c251f352e6bb41
sw x3, 0(x2) # store 0xd1c251f352e6bb41 in memory
flw f2, 0(x2) # load 0xd1c251f352e6bb41 from memory into f2
li x3, 0xd86511dd7e135f60 # load x3 with value 0xd86511dd7e135f60
sw x3, 0(x2) # store 0xd86511dd7e135f60 in memory
flw f17, 0(x2) # load 0xd86511dd7e135f60 from memory into f17
fnmsub.s f24, f16, f2, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
li x16, 0x48ed5861d428975c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6021e60c6419805c # load x3 with value 0x6021e60c6419805c
sw x3, 0(x2) # store 0x6021e60c6419805c in memory
flw f1, 0(x2) # load 0x6021e60c6419805c from memory into f1
li x3, 0xf9b2f8356ec2419c # load x3 with value 0xf9b2f8356ec2419c
sw x3, 0(x2) # store 0xf9b2f8356ec2419c in memory
flw f3, 0(x2) # load 0xf9b2f8356ec2419c from memory into f3
li x3, 0x9d5904c59fde5dba # load x3 with value 0x9d5904c59fde5dba
sw x3, 0(x2) # store 0x9d5904c59fde5dba in memory
flw f15, 0(x2) # load 0x9d5904c59fde5dba from memory into f15
fnmsub.s f16, f1, f3, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
li x15, 0x603e79f682ccfc5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x491bbba09b011a13 # load x3 with value 0x491bbba09b011a13
sw x3, 0(x2) # store 0x491bbba09b011a13 in memory
flw f1, 0(x2) # load 0x491bbba09b011a13 from memory into f1
li x3, 0x7c76a9a9ffeacc3a # load x3 with value 0x7c76a9a9ffeacc3a
sw x3, 0(x2) # store 0x7c76a9a9ffeacc3a in memory
flw f4, 0(x2) # load 0x7c76a9a9ffeacc3a from memory into f4
li x3, 0xb2a0845e3c92b997 # load x3 with value 0xb2a0845e3c92b997
sw x3, 0(x2) # store 0xb2a0845e3c92b997 in memory
flw f31, 0(x2) # load 0xb2a0845e3c92b997 from memory into f31
fnmsub.s f15, f1, f4, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
li x30, 0xb9b7b6fb06b18b5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8a3bda34e7c9765b # load x3 with value 0x8a3bda34e7c9765b
sw x3, 0(x2) # store 0x8a3bda34e7c9765b in memory
flw f22, 0(x2) # load 0x8a3bda34e7c9765b from memory into f22
li x3, 0xa1dd8fce084eb9aa # load x3 with value 0xa1dd8fce084eb9aa
sw x3, 0(x2) # store 0xa1dd8fce084eb9aa in memory
flw f5, 0(x2) # load 0xa1dd8fce084eb9aa from memory into f5
li x3, 0x4440ffc882494903 # load x3 with value 0x4440ffc882494903
sw x3, 0(x2) # store 0x4440ffc882494903 in memory
flw f21, 0(x2) # load 0x4440ffc882494903 from memory into f21
fnmsub.s f30, f22, f5, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
li x30, 0x2b23074d8cdf9bb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaddb6b451a2d20a3 # load x3 with value 0xaddb6b451a2d20a3
sw x3, 0(x2) # store 0xaddb6b451a2d20a3 in memory
flw f27, 0(x2) # load 0xaddb6b451a2d20a3 from memory into f27
li x3, 0x2b5fd77595e74d0f # load x3 with value 0x2b5fd77595e74d0f
sw x3, 0(x2) # store 0x2b5fd77595e74d0f in memory
flw f6, 0(x2) # load 0x2b5fd77595e74d0f from memory into f6
li x3, 0x5c2963c4f3648b6c # load x3 with value 0x5c2963c4f3648b6c
sw x3, 0(x2) # store 0x5c2963c4f3648b6c in memory
flw f13, 0(x2) # load 0x5c2963c4f3648b6c from memory into f13
fnmsub.s f30, f27, f6, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
li x10, 0x3216be1393dece54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x956b71b4212616ed # load x3 with value 0x956b71b4212616ed
sw x3, 0(x2) # store 0x956b71b4212616ed in memory
flw f23, 0(x2) # load 0x956b71b4212616ed from memory into f23
li x3, 0xd6083574aaaddd97 # load x3 with value 0xd6083574aaaddd97
sw x3, 0(x2) # store 0xd6083574aaaddd97 in memory
flw f7, 0(x2) # load 0xd6083574aaaddd97 from memory into f7
li x3, 0x4223af1a903379be # load x3 with value 0x4223af1a903379be
sw x3, 0(x2) # store 0x4223af1a903379be in memory
flw f5, 0(x2) # load 0x4223af1a903379be from memory into f5
fnmsub.s f10, f23, f7, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
li x17, 0xa46acacba0d42d4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5f85f74e0fc02e34 # load x3 with value 0x5f85f74e0fc02e34
sw x3, 0(x2) # store 0x5f85f74e0fc02e34 in memory
flw f12, 0(x2) # load 0x5f85f74e0fc02e34 from memory into f12
li x3, 0xdaa589b12290df64 # load x3 with value 0xdaa589b12290df64
sw x3, 0(x2) # store 0xdaa589b12290df64 in memory
flw f8, 0(x2) # load 0xdaa589b12290df64 from memory into f8
li x3, 0xf9bb16a991a531f5 # load x3 with value 0xf9bb16a991a531f5
sw x3, 0(x2) # store 0xf9bb16a991a531f5 in memory
flw f29, 0(x2) # load 0xf9bb16a991a531f5 from memory into f29
fnmsub.s f17, f12, f8, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
li x21, 0xc32b71a4f249fed7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xed9f8a16f1edb0bd # load x3 with value 0xed9f8a16f1edb0bd
sw x3, 0(x2) # store 0xed9f8a16f1edb0bd in memory
flw f6, 0(x2) # load 0xed9f8a16f1edb0bd from memory into f6
li x3, 0x3eb945d7ba48c77e # load x3 with value 0x3eb945d7ba48c77e
sw x3, 0(x2) # store 0x3eb945d7ba48c77e in memory
flw f9, 0(x2) # load 0x3eb945d7ba48c77e from memory into f9
li x3, 0xb34572a31e35112f # load x3 with value 0xb34572a31e35112f
sw x3, 0(x2) # store 0xb34572a31e35112f in memory
flw f31, 0(x2) # load 0xb34572a31e35112f from memory into f31
fnmsub.s f21, f6, f9, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
li x15, 0xa228666f9d377da6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x481840095513e076 # load x3 with value 0x481840095513e076
sw x3, 0(x2) # store 0x481840095513e076 in memory
flw f24, 0(x2) # load 0x481840095513e076 from memory into f24
li x3, 0x3e5d96ffb21ced27 # load x3 with value 0x3e5d96ffb21ced27
sw x3, 0(x2) # store 0x3e5d96ffb21ced27 in memory
flw f10, 0(x2) # load 0x3e5d96ffb21ced27 from memory into f10
li x3, 0xa786e9a181bc8b02 # load x3 with value 0xa786e9a181bc8b02
sw x3, 0(x2) # store 0xa786e9a181bc8b02 in memory
flw f12, 0(x2) # load 0xa786e9a181bc8b02 from memory into f12
fnmsub.s f15, f24, f10, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
li x2, 0x44b14ef17580dfc7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfb07e50eda712d5 # load x3 with value 0xfb07e50eda712d5
sw x3, 0(x2) # store 0xfb07e50eda712d5 in memory
flw f13, 0(x2) # load 0xfb07e50eda712d5 from memory into f13
li x3, 0x81f54df7d781cbfe # load x3 with value 0x81f54df7d781cbfe
sw x3, 0(x2) # store 0x81f54df7d781cbfe in memory
flw f11, 0(x2) # load 0x81f54df7d781cbfe from memory into f11
li x3, 0xea6f5d56ac294ab9 # load x3 with value 0xea6f5d56ac294ab9
sw x3, 0(x2) # store 0xea6f5d56ac294ab9 in memory
flw f6, 0(x2) # load 0xea6f5d56ac294ab9 from memory into f6
fnmsub.s f2, f13, f11, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
li x28, 0x808302ef9cf9ed1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcc776d74b51de447 # load x3 with value 0xcc776d74b51de447
sw x3, 0(x2) # store 0xcc776d74b51de447 in memory
flw f18, 0(x2) # load 0xcc776d74b51de447 from memory into f18
li x3, 0x687a6b01b61bb586 # load x3 with value 0x687a6b01b61bb586
sw x3, 0(x2) # store 0x687a6b01b61bb586 in memory
flw f12, 0(x2) # load 0x687a6b01b61bb586 from memory into f12
li x3, 0x16d32342fb753b9e # load x3 with value 0x16d32342fb753b9e
sw x3, 0(x2) # store 0x16d32342fb753b9e in memory
flw f15, 0(x2) # load 0x16d32342fb753b9e from memory into f15
fnmsub.s f28, f18, f12, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
li x19, 0x6817c84d22062c5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xac2c125300ae1b48 # load x3 with value 0xac2c125300ae1b48
sw x3, 0(x2) # store 0xac2c125300ae1b48 in memory
flw f30, 0(x2) # load 0xac2c125300ae1b48 from memory into f30
li x3, 0x53dade421feb87ff # load x3 with value 0x53dade421feb87ff
sw x3, 0(x2) # store 0x53dade421feb87ff in memory
flw f13, 0(x2) # load 0x53dade421feb87ff from memory into f13
li x3, 0xb4aa158262ef85d2 # load x3 with value 0xb4aa158262ef85d2
sw x3, 0(x2) # store 0xb4aa158262ef85d2 in memory
flw f18, 0(x2) # load 0xb4aa158262ef85d2 from memory into f18
fnmsub.s f19, f30, f13, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
li x28, 0x8d4e4bb40622a75a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd885e4ae6423310e # load x3 with value 0xd885e4ae6423310e
sw x3, 0(x2) # store 0xd885e4ae6423310e in memory
flw f30, 0(x2) # load 0xd885e4ae6423310e from memory into f30
li x3, 0x1062883ecd6f9a4 # load x3 with value 0x1062883ecd6f9a4
sw x3, 0(x2) # store 0x1062883ecd6f9a4 in memory
flw f14, 0(x2) # load 0x1062883ecd6f9a4 from memory into f14
li x3, 0xccacf7dac0b7ba5d # load x3 with value 0xccacf7dac0b7ba5d
sw x3, 0(x2) # store 0xccacf7dac0b7ba5d in memory
flw f23, 0(x2) # load 0xccacf7dac0b7ba5d from memory into f23
fnmsub.s f28, f30, f14, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
li x17, 0x03b4df54e36e3e36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9e3ce20b54fe58 # load x3 with value 0x9e3ce20b54fe58
sw x3, 0(x2) # store 0x9e3ce20b54fe58 in memory
flw f6, 0(x2) # load 0x9e3ce20b54fe58 from memory into f6
li x3, 0xc3fd82cec0241e2e # load x3 with value 0xc3fd82cec0241e2e
sw x3, 0(x2) # store 0xc3fd82cec0241e2e in memory
flw f15, 0(x2) # load 0xc3fd82cec0241e2e from memory into f15
li x3, 0x6a1fa541c68cb269 # load x3 with value 0x6a1fa541c68cb269
sw x3, 0(x2) # store 0x6a1fa541c68cb269 in memory
flw f3, 0(x2) # load 0x6a1fa541c68cb269 from memory into f3
fnmsub.s f17, f6, f15, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
li x8, 0xb6755205cfe8d11d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2db011f10fc75deb # load x3 with value 0x2db011f10fc75deb
sw x3, 0(x2) # store 0x2db011f10fc75deb in memory
flw f1, 0(x2) # load 0x2db011f10fc75deb from memory into f1
li x3, 0xa2da3f5924a22592 # load x3 with value 0xa2da3f5924a22592
sw x3, 0(x2) # store 0xa2da3f5924a22592 in memory
flw f16, 0(x2) # load 0xa2da3f5924a22592 from memory into f16
li x3, 0x38bcf2a253be13fb # load x3 with value 0x38bcf2a253be13fb
sw x3, 0(x2) # store 0x38bcf2a253be13fb in memory
flw f24, 0(x2) # load 0x38bcf2a253be13fb from memory into f24
fnmsub.s f8, f1, f16, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
li x15, 0xafa6cdc9fa7ce990 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf28783b21c266400 # load x3 with value 0xf28783b21c266400
sw x3, 0(x2) # store 0xf28783b21c266400 in memory
flw f30, 0(x2) # load 0xf28783b21c266400 from memory into f30
li x3, 0x6210803d4224415b # load x3 with value 0x6210803d4224415b
sw x3, 0(x2) # store 0x6210803d4224415b in memory
flw f17, 0(x2) # load 0x6210803d4224415b from memory into f17
li x3, 0xf7ea60c9243eb4fd # load x3 with value 0xf7ea60c9243eb4fd
sw x3, 0(x2) # store 0xf7ea60c9243eb4fd in memory
flw f18, 0(x2) # load 0xf7ea60c9243eb4fd from memory into f18
fnmsub.s f15, f30, f17, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
li x4, 0x503815f6f042b364 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe368a02178dd430d # load x3 with value 0xe368a02178dd430d
sw x3, 0(x2) # store 0xe368a02178dd430d in memory
flw f28, 0(x2) # load 0xe368a02178dd430d from memory into f28
li x3, 0x1c016c9c299f352d # load x3 with value 0x1c016c9c299f352d
sw x3, 0(x2) # store 0x1c016c9c299f352d in memory
flw f18, 0(x2) # load 0x1c016c9c299f352d from memory into f18
li x3, 0x485c9ef2cb9ddabb # load x3 with value 0x485c9ef2cb9ddabb
sw x3, 0(x2) # store 0x485c9ef2cb9ddabb in memory
flw f15, 0(x2) # load 0x485c9ef2cb9ddabb from memory into f15
fnmsub.s f4, f28, f18, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
li x20, 0xd6d117a13336adbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40f55988a190da5a # load x3 with value 0x40f55988a190da5a
sw x3, 0(x2) # store 0x40f55988a190da5a in memory
flw f13, 0(x2) # load 0x40f55988a190da5a from memory into f13
li x3, 0xe952157ef5ac46b8 # load x3 with value 0xe952157ef5ac46b8
sw x3, 0(x2) # store 0xe952157ef5ac46b8 in memory
flw f19, 0(x2) # load 0xe952157ef5ac46b8 from memory into f19
li x3, 0x40b129be3c611de8 # load x3 with value 0x40b129be3c611de8
sw x3, 0(x2) # store 0x40b129be3c611de8 in memory
flw f2, 0(x2) # load 0x40b129be3c611de8 from memory into f2
fnmsub.s f20, f13, f19, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
li x8, 0x12131ca0c9cdc0dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x23b61bf8e2c5a39c # load x3 with value 0x23b61bf8e2c5a39c
sw x3, 0(x2) # store 0x23b61bf8e2c5a39c in memory
flw f23, 0(x2) # load 0x23b61bf8e2c5a39c from memory into f23
li x3, 0xd05847a5dc9a3ba9 # load x3 with value 0xd05847a5dc9a3ba9
sw x3, 0(x2) # store 0xd05847a5dc9a3ba9 in memory
flw f20, 0(x2) # load 0xd05847a5dc9a3ba9 from memory into f20
li x3, 0x84ecfbd56de596d6 # load x3 with value 0x84ecfbd56de596d6
sw x3, 0(x2) # store 0x84ecfbd56de596d6 in memory
flw f22, 0(x2) # load 0x84ecfbd56de596d6 from memory into f22
fnmsub.s f8, f23, f20, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
li x9, 0xd09cc297cef1a227 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x86b06f505177695c # load x3 with value 0x86b06f505177695c
sw x3, 0(x2) # store 0x86b06f505177695c in memory
flw f22, 0(x2) # load 0x86b06f505177695c from memory into f22
li x3, 0x5ad1dd3dc9b6ecfa # load x3 with value 0x5ad1dd3dc9b6ecfa
sw x3, 0(x2) # store 0x5ad1dd3dc9b6ecfa in memory
flw f21, 0(x2) # load 0x5ad1dd3dc9b6ecfa from memory into f21
li x3, 0x5006f333030b931a # load x3 with value 0x5006f333030b931a
sw x3, 0(x2) # store 0x5006f333030b931a in memory
flw f21, 0(x2) # load 0x5006f333030b931a from memory into f21
fnmsub.s f9, f22, f21, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
li x2, 0xeb8d7aad3ad05915 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9d133443f2bdb296 # load x3 with value 0x9d133443f2bdb296
sw x3, 0(x2) # store 0x9d133443f2bdb296 in memory
flw f15, 0(x2) # load 0x9d133443f2bdb296 from memory into f15
li x3, 0x1cc42b8312e4a9a5 # load x3 with value 0x1cc42b8312e4a9a5
sw x3, 0(x2) # store 0x1cc42b8312e4a9a5 in memory
flw f22, 0(x2) # load 0x1cc42b8312e4a9a5 from memory into f22
li x3, 0xb6b06c30da973a39 # load x3 with value 0xb6b06c30da973a39
sw x3, 0(x2) # store 0xb6b06c30da973a39 in memory
flw f30, 0(x2) # load 0xb6b06c30da973a39 from memory into f30
fnmsub.s f2, f15, f22, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
li x1, 0x08ac817f31dac564 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4cff2345b0607b50 # load x3 with value 0x4cff2345b0607b50
sw x3, 0(x2) # store 0x4cff2345b0607b50 in memory
flw f9, 0(x2) # load 0x4cff2345b0607b50 from memory into f9
li x3, 0xc1b41a2215d90b86 # load x3 with value 0xc1b41a2215d90b86
sw x3, 0(x2) # store 0xc1b41a2215d90b86 in memory
flw f23, 0(x2) # load 0xc1b41a2215d90b86 from memory into f23
li x3, 0xd067f13ec93295cc # load x3 with value 0xd067f13ec93295cc
sw x3, 0(x2) # store 0xd067f13ec93295cc in memory
flw f12, 0(x2) # load 0xd067f13ec93295cc from memory into f12
fnmsub.s f1, f9, f23, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
li x26, 0xd460b5e05c1d0b0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6ea8a79092b6e8a # load x3 with value 0xa6ea8a79092b6e8a
sw x3, 0(x2) # store 0xa6ea8a79092b6e8a in memory
flw f27, 0(x2) # load 0xa6ea8a79092b6e8a from memory into f27
li x3, 0x688d2e1ec08c01b9 # load x3 with value 0x688d2e1ec08c01b9
sw x3, 0(x2) # store 0x688d2e1ec08c01b9 in memory
flw f24, 0(x2) # load 0x688d2e1ec08c01b9 from memory into f24
li x3, 0xda2be38fe08f1c0b # load x3 with value 0xda2be38fe08f1c0b
sw x3, 0(x2) # store 0xda2be38fe08f1c0b in memory
flw f9, 0(x2) # load 0xda2be38fe08f1c0b from memory into f9
fnmsub.s f26, f27, f24, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
li x16, 0x1f936353d235e633 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1bc0f7597d48bd72 # load x3 with value 0x1bc0f7597d48bd72
sw x3, 0(x2) # store 0x1bc0f7597d48bd72 in memory
flw f13, 0(x2) # load 0x1bc0f7597d48bd72 from memory into f13
li x3, 0x34ead95fa714b38f # load x3 with value 0x34ead95fa714b38f
sw x3, 0(x2) # store 0x34ead95fa714b38f in memory
flw f25, 0(x2) # load 0x34ead95fa714b38f from memory into f25
li x3, 0x1b378a7c7d7b6c36 # load x3 with value 0x1b378a7c7d7b6c36
sw x3, 0(x2) # store 0x1b378a7c7d7b6c36 in memory
flw f25, 0(x2) # load 0x1b378a7c7d7b6c36 from memory into f25
fnmsub.s f16, f13, f25, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
li x12, 0x659a295604d51864 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2823e48c0d8da57e # load x3 with value 0x2823e48c0d8da57e
sw x3, 0(x2) # store 0x2823e48c0d8da57e in memory
flw f17, 0(x2) # load 0x2823e48c0d8da57e from memory into f17
li x3, 0xb5666aae2dc66934 # load x3 with value 0xb5666aae2dc66934
sw x3, 0(x2) # store 0xb5666aae2dc66934 in memory
flw f26, 0(x2) # load 0xb5666aae2dc66934 from memory into f26
li x3, 0x3c9e840f83ffd500 # load x3 with value 0x3c9e840f83ffd500
sw x3, 0(x2) # store 0x3c9e840f83ffd500 in memory
flw f13, 0(x2) # load 0x3c9e840f83ffd500 from memory into f13
fnmsub.s f12, f17, f26, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
li x31, 0x25c8113952c46ae9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x20331a4ff43c460 # load x3 with value 0x20331a4ff43c460
sw x3, 0(x2) # store 0x20331a4ff43c460 in memory
flw f5, 0(x2) # load 0x20331a4ff43c460 from memory into f5
li x3, 0x283f2ea66c21225 # load x3 with value 0x283f2ea66c21225
sw x3, 0(x2) # store 0x283f2ea66c21225 in memory
flw f27, 0(x2) # load 0x283f2ea66c21225 from memory into f27
li x3, 0x795266ffa2b94d70 # load x3 with value 0x795266ffa2b94d70
sw x3, 0(x2) # store 0x795266ffa2b94d70 in memory
flw f19, 0(x2) # load 0x795266ffa2b94d70 from memory into f19
fnmsub.s f31, f5, f27, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
li x3, 0xf09f7896dc40ce83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf6531e77a9c144c # load x3 with value 0xf6531e77a9c144c
sw x3, 0(x2) # store 0xf6531e77a9c144c in memory
flw f17, 0(x2) # load 0xf6531e77a9c144c from memory into f17
li x3, 0xf389303d65f524c0 # load x3 with value 0xf389303d65f524c0
sw x3, 0(x2) # store 0xf389303d65f524c0 in memory
flw f28, 0(x2) # load 0xf389303d65f524c0 from memory into f28
li x3, 0x6bfa5d54f4555f1a # load x3 with value 0x6bfa5d54f4555f1a
sw x3, 0(x2) # store 0x6bfa5d54f4555f1a in memory
flw f11, 0(x2) # load 0x6bfa5d54f4555f1a from memory into f11
fnmsub.s f3, f17, f28, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
li x19, 0xd8f5a1501efca8de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdcffc67befd8a043 # load x3 with value 0xdcffc67befd8a043
sw x3, 0(x2) # store 0xdcffc67befd8a043 in memory
flw f10, 0(x2) # load 0xdcffc67befd8a043 from memory into f10
li x3, 0xd1a6ae0be8035c95 # load x3 with value 0xd1a6ae0be8035c95
sw x3, 0(x2) # store 0xd1a6ae0be8035c95 in memory
flw f29, 0(x2) # load 0xd1a6ae0be8035c95 from memory into f29
li x3, 0x42aab6b3ccea3eb3 # load x3 with value 0x42aab6b3ccea3eb3
sw x3, 0(x2) # store 0x42aab6b3ccea3eb3 in memory
flw f23, 0(x2) # load 0x42aab6b3ccea3eb3 from memory into f23
fnmsub.s f19, f10, f29, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
li x22, 0xd37480751a81078f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x83003dc5c72b2f7b # load x3 with value 0x83003dc5c72b2f7b
sw x3, 0(x2) # store 0x83003dc5c72b2f7b in memory
flw f11, 0(x2) # load 0x83003dc5c72b2f7b from memory into f11
li x3, 0x52cef5250ac1ada5 # load x3 with value 0x52cef5250ac1ada5
sw x3, 0(x2) # store 0x52cef5250ac1ada5 in memory
flw f30, 0(x2) # load 0x52cef5250ac1ada5 from memory into f30
li x3, 0x597bcd59b5ed86e6 # load x3 with value 0x597bcd59b5ed86e6
sw x3, 0(x2) # store 0x597bcd59b5ed86e6 in memory
flw f23, 0(x2) # load 0x597bcd59b5ed86e6 from memory into f23
fnmsub.s f22, f11, f30, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
li x4, 0xe590b6e0a465698f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1ab691cb83fdb865 # load x3 with value 0x1ab691cb83fdb865
sw x3, 0(x2) # store 0x1ab691cb83fdb865 in memory
flw f20, 0(x2) # load 0x1ab691cb83fdb865 from memory into f20
li x3, 0xdba78d79b1328b10 # load x3 with value 0xdba78d79b1328b10
sw x3, 0(x2) # store 0xdba78d79b1328b10 in memory
flw f31, 0(x2) # load 0xdba78d79b1328b10 from memory into f31
li x3, 0x9b7b43287d6b3b46 # load x3 with value 0x9b7b43287d6b3b46
sw x3, 0(x2) # store 0x9b7b43287d6b3b46 in memory
flw f12, 0(x2) # load 0x9b7b43287d6b3b46 from memory into f12
fnmsub.s f4, f20, f31, f12 # perform operation

.EQU NUMTESTS,1


self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 8

.end
