///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/lockstep/rv64/Zfh/WALLY-COV-fnmadd.h.S
// David_Harris@hmc.edu

 # testgen_header.S
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

#include "macros.h"

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

# initialize signature pointer
la x4, begin_signature

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cp_gpr/fpr_hazard nohaz test
add x23, x14, x3 # perform first operation
fnmadd.h f19, f20, f11, f15 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x7, x25, x6 # perform first operation
fnmadd.h f27, f29, f28, f3 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x1, x19, x6 # perform first operation
fnmadd.h f13, f25, f11, f8 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f2, f28, f27 # perform first operation
fnmadd.h f27, f2, f12, f25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f27, f30, f3 # perform first operation
fnmadd.h f27, f6, f27, f29 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f24, f18, f23 # perform first operation
fnmadd.h f23, f9, f10, f24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f10, f7, f24 # perform first operation
fnmadd.h f10, f14, f25, f15 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f19, f21, f31 # perform first operation
fnmadd.h f19, f12, f27, f8 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f8, f7, f19 # perform first operation
fnmadd.h f8, f24, f21, f15 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f11, f10, f29 # perform first operation
fnmadd.h f10, f19, f14, f9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f18, f2, f10 # perform first operation
fnmadd.h f10, f30, f22, f5 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f25, f2, f31 # perform first operation
fnmadd.h f5, f29, f7, f22 # perform second (triggering) operation

# Testcase cp_fs1 (Test source fs1 = f0)
la x2, scratch
li x3, 0x71cf23003c6711e6 # load x3 with value 0x71cf23003c6711e6
sw x3, 0(x2) # store 0x71cf23003c6711e6 in memory
flh f0, 0(x2) # load 0x71cf23003c6711e6 from memory into f0
la x2, scratch
li x3, 0xf1ff8f24271f9873 # load x3 with value 0xf1ff8f24271f9873
sw x3, 0(x2) # store 0xf1ff8f24271f9873 in memory
flh f9, 0(x2) # load 0xf1ff8f24271f9873 from memory into f9
la x2, scratch
li x3, 0xe100c0b73db4d466 # load x3 with value 0xe100c0b73db4d466
sw x3, 0(x2) # store 0xe100c0b73db4d466 in memory
flh f17, 0(x2) # load 0xe100c0b73db4d466 from memory into f17
fnmadd.h f19, f0, f9, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
la x2, scratch
li x3, 0xc09fb606430a5a50 # load x3 with value 0xc09fb606430a5a50
sw x3, 0(x2) # store 0xc09fb606430a5a50 in memory
flh f1, 0(x2) # load 0xc09fb606430a5a50 from memory into f1
la x2, scratch
li x3, 0x45e454c5af3445a6 # load x3 with value 0x45e454c5af3445a6
sw x3, 0(x2) # store 0x45e454c5af3445a6 in memory
flh f20, 0(x2) # load 0x45e454c5af3445a6 from memory into f20
la x2, scratch
li x3, 0x51481e2c222b942b # load x3 with value 0x51481e2c222b942b
sw x3, 0(x2) # store 0x51481e2c222b942b in memory
flh f26, 0(x2) # load 0x51481e2c222b942b from memory into f26
fnmadd.h f21, f1, f20, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
la x2, scratch
li x3, 0xc58fba02cb0d4373 # load x3 with value 0xc58fba02cb0d4373
sw x3, 0(x2) # store 0xc58fba02cb0d4373 in memory
flh f2, 0(x2) # load 0xc58fba02cb0d4373 from memory into f2
la x2, scratch
li x3, 0x6631fcdc58fb9b8b # load x3 with value 0x6631fcdc58fb9b8b
sw x3, 0(x2) # store 0x6631fcdc58fb9b8b in memory
flh f5, 0(x2) # load 0x6631fcdc58fb9b8b from memory into f5
la x2, scratch
li x3, 0x7542830350ffda47 # load x3 with value 0x7542830350ffda47
sw x3, 0(x2) # store 0x7542830350ffda47 in memory
flh f22, 0(x2) # load 0x7542830350ffda47 from memory into f22
fnmadd.h f24, f2, f5, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
la x2, scratch
li x3, 0x8a1647a0cd318d64 # load x3 with value 0x8a1647a0cd318d64
sw x3, 0(x2) # store 0x8a1647a0cd318d64 in memory
flh f3, 0(x2) # load 0x8a1647a0cd318d64 from memory into f3
la x2, scratch
li x3, 0xecfe5214103ded6d # load x3 with value 0xecfe5214103ded6d
sw x3, 0(x2) # store 0xecfe5214103ded6d in memory
flh f24, 0(x2) # load 0xecfe5214103ded6d from memory into f24
la x2, scratch
li x3, 0xb4aad24ef115dd83 # load x3 with value 0xb4aad24ef115dd83
sw x3, 0(x2) # store 0xb4aad24ef115dd83 in memory
flh f7, 0(x2) # load 0xb4aad24ef115dd83 from memory into f7
fnmadd.h f15, f3, f24, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x2a231a368f8fac83 # load x3 with value 0x2a231a368f8fac83
sw x3, 0(x2) # store 0x2a231a368f8fac83 in memory
flh f4, 0(x2) # load 0x2a231a368f8fac83 from memory into f4
la x2, scratch
li x3, 0x8bc4f5499af1c03c # load x3 with value 0x8bc4f5499af1c03c
sw x3, 0(x2) # store 0x8bc4f5499af1c03c in memory
flh f17, 0(x2) # load 0x8bc4f5499af1c03c from memory into f17
la x2, scratch
li x3, 0x23a1d9cecdfe437f # load x3 with value 0x23a1d9cecdfe437f
sw x3, 0(x2) # store 0x23a1d9cecdfe437f in memory
flh f7, 0(x2) # load 0x23a1d9cecdfe437f from memory into f7
fnmadd.h f20, f4, f17, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x11de302ca427030d # load x3 with value 0x11de302ca427030d
sw x3, 0(x2) # store 0x11de302ca427030d in memory
flh f5, 0(x2) # load 0x11de302ca427030d from memory into f5
la x2, scratch
li x3, 0x68010aa671a3eeb9 # load x3 with value 0x68010aa671a3eeb9
sw x3, 0(x2) # store 0x68010aa671a3eeb9 in memory
flh f10, 0(x2) # load 0x68010aa671a3eeb9 from memory into f10
la x2, scratch
li x3, 0x6e2cd7ffe3a8b3b0 # load x3 with value 0x6e2cd7ffe3a8b3b0
sw x3, 0(x2) # store 0x6e2cd7ffe3a8b3b0 in memory
flh f16, 0(x2) # load 0x6e2cd7ffe3a8b3b0 from memory into f16
fnmadd.h f20, f5, f10, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x354deea83520ea21 # load x3 with value 0x354deea83520ea21
sw x3, 0(x2) # store 0x354deea83520ea21 in memory
flh f6, 0(x2) # load 0x354deea83520ea21 from memory into f6
la x2, scratch
li x3, 0x17534abf43a1df5a # load x3 with value 0x17534abf43a1df5a
sw x3, 0(x2) # store 0x17534abf43a1df5a in memory
flh f23, 0(x2) # load 0x17534abf43a1df5a from memory into f23
la x2, scratch
li x3, 0x4a5245cb1ae73b21 # load x3 with value 0x4a5245cb1ae73b21
sw x3, 0(x2) # store 0x4a5245cb1ae73b21 in memory
flh f1, 0(x2) # load 0x4a5245cb1ae73b21 from memory into f1
fnmadd.h f24, f6, f23, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x4183a8027781f62b # load x3 with value 0x4183a8027781f62b
sw x3, 0(x2) # store 0x4183a8027781f62b in memory
flh f7, 0(x2) # load 0x4183a8027781f62b from memory into f7
la x2, scratch
li x3, 0x2cc5c8c82baff972 # load x3 with value 0x2cc5c8c82baff972
sw x3, 0(x2) # store 0x2cc5c8c82baff972 in memory
flh f16, 0(x2) # load 0x2cc5c8c82baff972 from memory into f16
la x2, scratch
li x3, 0x7fe7fbf0ade9f696 # load x3 with value 0x7fe7fbf0ade9f696
sw x3, 0(x2) # store 0x7fe7fbf0ade9f696 in memory
flh f17, 0(x2) # load 0x7fe7fbf0ade9f696 from memory into f17
fnmadd.h f21, f7, f16, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
la x2, scratch
li x3, 0xb0122e5dd80dd22a # load x3 with value 0xb0122e5dd80dd22a
sw x3, 0(x2) # store 0xb0122e5dd80dd22a in memory
flh f8, 0(x2) # load 0xb0122e5dd80dd22a from memory into f8
la x2, scratch
li x3, 0x718d0364be4597fe # load x3 with value 0x718d0364be4597fe
sw x3, 0(x2) # store 0x718d0364be4597fe in memory
flh f16, 0(x2) # load 0x718d0364be4597fe from memory into f16
la x2, scratch
li x3, 0x4189962acbd11cb6 # load x3 with value 0x4189962acbd11cb6
sw x3, 0(x2) # store 0x4189962acbd11cb6 in memory
flh f5, 0(x2) # load 0x4189962acbd11cb6 from memory into f5
fnmadd.h f28, f8, f16, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
la x2, scratch
li x3, 0x9af8e6b8f9a6984a # load x3 with value 0x9af8e6b8f9a6984a
sw x3, 0(x2) # store 0x9af8e6b8f9a6984a in memory
flh f9, 0(x2) # load 0x9af8e6b8f9a6984a from memory into f9
la x2, scratch
li x3, 0xd9adbc59a39c75df # load x3 with value 0xd9adbc59a39c75df
sw x3, 0(x2) # store 0xd9adbc59a39c75df in memory
flh f30, 0(x2) # load 0xd9adbc59a39c75df from memory into f30
la x2, scratch
li x3, 0x36ff5ca9abb4b303 # load x3 with value 0x36ff5ca9abb4b303
sw x3, 0(x2) # store 0x36ff5ca9abb4b303 in memory
flh f20, 0(x2) # load 0x36ff5ca9abb4b303 from memory into f20
fnmadd.h f25, f9, f30, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
la x2, scratch
li x3, 0x70b08240645f952 # load x3 with value 0x70b08240645f952
sw x3, 0(x2) # store 0x70b08240645f952 in memory
flh f10, 0(x2) # load 0x70b08240645f952 from memory into f10
la x2, scratch
li x3, 0xf0d92e7464efc548 # load x3 with value 0xf0d92e7464efc548
sw x3, 0(x2) # store 0xf0d92e7464efc548 in memory
flh f31, 0(x2) # load 0xf0d92e7464efc548 from memory into f31
la x2, scratch
li x3, 0xbef43e1945395818 # load x3 with value 0xbef43e1945395818
sw x3, 0(x2) # store 0xbef43e1945395818 in memory
flh f6, 0(x2) # load 0xbef43e1945395818 from memory into f6
fnmadd.h f18, f10, f31, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
la x2, scratch
li x3, 0x2b108f0017059e5d # load x3 with value 0x2b108f0017059e5d
sw x3, 0(x2) # store 0x2b108f0017059e5d in memory
flh f11, 0(x2) # load 0x2b108f0017059e5d from memory into f11
la x2, scratch
li x3, 0x9a48db66f87b0131 # load x3 with value 0x9a48db66f87b0131
sw x3, 0(x2) # store 0x9a48db66f87b0131 in memory
flh f29, 0(x2) # load 0x9a48db66f87b0131 from memory into f29
la x2, scratch
li x3, 0x579ec69ca3f91735 # load x3 with value 0x579ec69ca3f91735
sw x3, 0(x2) # store 0x579ec69ca3f91735 in memory
flh f20, 0(x2) # load 0x579ec69ca3f91735 from memory into f20
fnmadd.h f27, f11, f29, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
la x2, scratch
li x3, 0xcb5d261eeff176d # load x3 with value 0xcb5d261eeff176d
sw x3, 0(x2) # store 0xcb5d261eeff176d in memory
flh f12, 0(x2) # load 0xcb5d261eeff176d from memory into f12
la x2, scratch
li x3, 0xb502d301947eb74d # load x3 with value 0xb502d301947eb74d
sw x3, 0(x2) # store 0xb502d301947eb74d in memory
flh f2, 0(x2) # load 0xb502d301947eb74d from memory into f2
la x2, scratch
li x3, 0x771e2c93db7acda7 # load x3 with value 0x771e2c93db7acda7
sw x3, 0(x2) # store 0x771e2c93db7acda7 in memory
flh f5, 0(x2) # load 0x771e2c93db7acda7 from memory into f5
fnmadd.h f21, f12, f2, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
la x2, scratch
li x3, 0xd44d0a71758c7906 # load x3 with value 0xd44d0a71758c7906
sw x3, 0(x2) # store 0xd44d0a71758c7906 in memory
flh f13, 0(x2) # load 0xd44d0a71758c7906 from memory into f13
la x2, scratch
li x3, 0xce255d43baac18fd # load x3 with value 0xce255d43baac18fd
sw x3, 0(x2) # store 0xce255d43baac18fd in memory
flh f11, 0(x2) # load 0xce255d43baac18fd from memory into f11
la x2, scratch
li x3, 0x91906d867c557217 # load x3 with value 0x91906d867c557217
sw x3, 0(x2) # store 0x91906d867c557217 in memory
flh f31, 0(x2) # load 0x91906d867c557217 from memory into f31
fnmadd.h f13, f13, f11, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
la x2, scratch
li x3, 0xb1dfc46999d868c9 # load x3 with value 0xb1dfc46999d868c9
sw x3, 0(x2) # store 0xb1dfc46999d868c9 in memory
flh f14, 0(x2) # load 0xb1dfc46999d868c9 from memory into f14
la x2, scratch
li x3, 0xa9d355c16c25f4c1 # load x3 with value 0xa9d355c16c25f4c1
sw x3, 0(x2) # store 0xa9d355c16c25f4c1 in memory
flh f28, 0(x2) # load 0xa9d355c16c25f4c1 from memory into f28
la x2, scratch
li x3, 0x6488fcf4b8b13381 # load x3 with value 0x6488fcf4b8b13381
sw x3, 0(x2) # store 0x6488fcf4b8b13381 in memory
flh f19, 0(x2) # load 0x6488fcf4b8b13381 from memory into f19
fnmadd.h f10, f14, f28, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
la x2, scratch
li x3, 0xc2eef3f2908f905d # load x3 with value 0xc2eef3f2908f905d
sw x3, 0(x2) # store 0xc2eef3f2908f905d in memory
flh f15, 0(x2) # load 0xc2eef3f2908f905d from memory into f15
la x2, scratch
li x3, 0x6835766168226b5b # load x3 with value 0x6835766168226b5b
sw x3, 0(x2) # store 0x6835766168226b5b in memory
flh f1, 0(x2) # load 0x6835766168226b5b from memory into f1
la x2, scratch
li x3, 0xdcba45492ee456e1 # load x3 with value 0xdcba45492ee456e1
sw x3, 0(x2) # store 0xdcba45492ee456e1 in memory
flh f3, 0(x2) # load 0xdcba45492ee456e1 from memory into f3
fnmadd.h f11, f15, f1, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
la x2, scratch
li x3, 0x45dff4276fe21b4c # load x3 with value 0x45dff4276fe21b4c
sw x3, 0(x2) # store 0x45dff4276fe21b4c in memory
flh f16, 0(x2) # load 0x45dff4276fe21b4c from memory into f16
la x2, scratch
li x3, 0x679e7b32daf94e6e # load x3 with value 0x679e7b32daf94e6e
sw x3, 0(x2) # store 0x679e7b32daf94e6e in memory
flh f8, 0(x2) # load 0x679e7b32daf94e6e from memory into f8
la x2, scratch
li x3, 0x5b1a078023eb6fd5 # load x3 with value 0x5b1a078023eb6fd5
sw x3, 0(x2) # store 0x5b1a078023eb6fd5 in memory
flh f12, 0(x2) # load 0x5b1a078023eb6fd5 from memory into f12
fnmadd.h f7, f16, f8, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
la x2, scratch
li x3, 0x8f975f8c266656d0 # load x3 with value 0x8f975f8c266656d0
sw x3, 0(x2) # store 0x8f975f8c266656d0 in memory
flh f17, 0(x2) # load 0x8f975f8c266656d0 from memory into f17
la x2, scratch
li x3, 0x98b60a9d4663c933 # load x3 with value 0x98b60a9d4663c933
sw x3, 0(x2) # store 0x98b60a9d4663c933 in memory
flh f13, 0(x2) # load 0x98b60a9d4663c933 from memory into f13
la x2, scratch
li x3, 0x851a795b9a75aaa1 # load x3 with value 0x851a795b9a75aaa1
sw x3, 0(x2) # store 0x851a795b9a75aaa1 in memory
flh f5, 0(x2) # load 0x851a795b9a75aaa1 from memory into f5
fnmadd.h f12, f17, f13, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
la x2, scratch
li x3, 0x77f20fe57407a92c # load x3 with value 0x77f20fe57407a92c
sw x3, 0(x2) # store 0x77f20fe57407a92c in memory
flh f18, 0(x2) # load 0x77f20fe57407a92c from memory into f18
la x2, scratch
li x3, 0xaeffc183c1015ea6 # load x3 with value 0xaeffc183c1015ea6
sw x3, 0(x2) # store 0xaeffc183c1015ea6 in memory
flh f29, 0(x2) # load 0xaeffc183c1015ea6 from memory into f29
la x2, scratch
li x3, 0x6d4e03086d75e479 # load x3 with value 0x6d4e03086d75e479
sw x3, 0(x2) # store 0x6d4e03086d75e479 in memory
flh f19, 0(x2) # load 0x6d4e03086d75e479 from memory into f19
fnmadd.h f23, f18, f29, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
la x2, scratch
li x3, 0xc3a39dd4518efaaa # load x3 with value 0xc3a39dd4518efaaa
sw x3, 0(x2) # store 0xc3a39dd4518efaaa in memory
flh f19, 0(x2) # load 0xc3a39dd4518efaaa from memory into f19
la x2, scratch
li x3, 0x20c0f019e12deedb # load x3 with value 0x20c0f019e12deedb
sw x3, 0(x2) # store 0x20c0f019e12deedb in memory
flh f3, 0(x2) # load 0x20c0f019e12deedb from memory into f3
la x2, scratch
li x3, 0xc777b2b3dafc5020 # load x3 with value 0xc777b2b3dafc5020
sw x3, 0(x2) # store 0xc777b2b3dafc5020 in memory
flh f15, 0(x2) # load 0xc777b2b3dafc5020 from memory into f15
fnmadd.h f5, f19, f3, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
la x2, scratch
li x3, 0x498e4245ba842e7a # load x3 with value 0x498e4245ba842e7a
sw x3, 0(x2) # store 0x498e4245ba842e7a in memory
flh f20, 0(x2) # load 0x498e4245ba842e7a from memory into f20
la x2, scratch
li x3, 0x78c30407de5c206d # load x3 with value 0x78c30407de5c206d
sw x3, 0(x2) # store 0x78c30407de5c206d in memory
flh f19, 0(x2) # load 0x78c30407de5c206d from memory into f19
la x2, scratch
li x3, 0xc18f0efee3256570 # load x3 with value 0xc18f0efee3256570
sw x3, 0(x2) # store 0xc18f0efee3256570 in memory
flh f26, 0(x2) # load 0xc18f0efee3256570 from memory into f26
fnmadd.h f12, f20, f19, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
la x2, scratch
li x3, 0x8e058cfdcccd913d # load x3 with value 0x8e058cfdcccd913d
sw x3, 0(x2) # store 0x8e058cfdcccd913d in memory
flh f21, 0(x2) # load 0x8e058cfdcccd913d from memory into f21
la x2, scratch
li x3, 0x57df0ce94b8c027 # load x3 with value 0x57df0ce94b8c027
sw x3, 0(x2) # store 0x57df0ce94b8c027 in memory
flh f26, 0(x2) # load 0x57df0ce94b8c027 from memory into f26
la x2, scratch
li x3, 0xecc3754d123d7456 # load x3 with value 0xecc3754d123d7456
sw x3, 0(x2) # store 0xecc3754d123d7456 in memory
flh f29, 0(x2) # load 0xecc3754d123d7456 from memory into f29
fnmadd.h f31, f21, f26, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
la x2, scratch
li x3, 0x608ce495afe22c92 # load x3 with value 0x608ce495afe22c92
sw x3, 0(x2) # store 0x608ce495afe22c92 in memory
flh f22, 0(x2) # load 0x608ce495afe22c92 from memory into f22
la x2, scratch
li x3, 0xd3d7f2127566fe21 # load x3 with value 0xd3d7f2127566fe21
sw x3, 0(x2) # store 0xd3d7f2127566fe21 in memory
flh f1, 0(x2) # load 0xd3d7f2127566fe21 from memory into f1
la x2, scratch
li x3, 0xe2715554d4397846 # load x3 with value 0xe2715554d4397846
sw x3, 0(x2) # store 0xe2715554d4397846 in memory
flh f20, 0(x2) # load 0xe2715554d4397846 from memory into f20
fnmadd.h f8, f22, f1, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
la x2, scratch
li x3, 0x606114038029b1e9 # load x3 with value 0x606114038029b1e9
sw x3, 0(x2) # store 0x606114038029b1e9 in memory
flh f23, 0(x2) # load 0x606114038029b1e9 from memory into f23
la x2, scratch
li x3, 0x84fadcc3c7e67820 # load x3 with value 0x84fadcc3c7e67820
sw x3, 0(x2) # store 0x84fadcc3c7e67820 in memory
flh f22, 0(x2) # load 0x84fadcc3c7e67820 from memory into f22
la x2, scratch
li x3, 0xe5dc7da29066bee7 # load x3 with value 0xe5dc7da29066bee7
sw x3, 0(x2) # store 0xe5dc7da29066bee7 in memory
flh f2, 0(x2) # load 0xe5dc7da29066bee7 from memory into f2
fnmadd.h f24, f23, f22, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
la x2, scratch
li x3, 0x4fb912d9b3f3a559 # load x3 with value 0x4fb912d9b3f3a559
sw x3, 0(x2) # store 0x4fb912d9b3f3a559 in memory
flh f24, 0(x2) # load 0x4fb912d9b3f3a559 from memory into f24
la x2, scratch
li x3, 0x7be16dc624dc7ae2 # load x3 with value 0x7be16dc624dc7ae2
sw x3, 0(x2) # store 0x7be16dc624dc7ae2 in memory
flh f1, 0(x2) # load 0x7be16dc624dc7ae2 from memory into f1
la x2, scratch
li x3, 0xe0e58c81eab83a99 # load x3 with value 0xe0e58c81eab83a99
sw x3, 0(x2) # store 0xe0e58c81eab83a99 in memory
flh f15, 0(x2) # load 0xe0e58c81eab83a99 from memory into f15
fnmadd.h f14, f24, f1, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
la x2, scratch
li x3, 0x3cb3e8dc616329dd # load x3 with value 0x3cb3e8dc616329dd
sw x3, 0(x2) # store 0x3cb3e8dc616329dd in memory
flh f25, 0(x2) # load 0x3cb3e8dc616329dd from memory into f25
la x2, scratch
li x3, 0xd2c069ce565b81ea # load x3 with value 0xd2c069ce565b81ea
sw x3, 0(x2) # store 0xd2c069ce565b81ea in memory
flh f22, 0(x2) # load 0xd2c069ce565b81ea from memory into f22
la x2, scratch
li x3, 0xf2eff566ea0c62ce # load x3 with value 0xf2eff566ea0c62ce
sw x3, 0(x2) # store 0xf2eff566ea0c62ce in memory
flh f20, 0(x2) # load 0xf2eff566ea0c62ce from memory into f20
fnmadd.h f30, f25, f22, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
la x2, scratch
li x3, 0xc3852279a70c20f6 # load x3 with value 0xc3852279a70c20f6
sw x3, 0(x2) # store 0xc3852279a70c20f6 in memory
flh f26, 0(x2) # load 0xc3852279a70c20f6 from memory into f26
la x2, scratch
li x3, 0x6b97f8d9c27240a2 # load x3 with value 0x6b97f8d9c27240a2
sw x3, 0(x2) # store 0x6b97f8d9c27240a2 in memory
flh f9, 0(x2) # load 0x6b97f8d9c27240a2 from memory into f9
la x2, scratch
li x3, 0xec7bde50863cfdfa # load x3 with value 0xec7bde50863cfdfa
sw x3, 0(x2) # store 0xec7bde50863cfdfa in memory
flh f27, 0(x2) # load 0xec7bde50863cfdfa from memory into f27
fnmadd.h f20, f26, f9, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
la x2, scratch
li x3, 0x96e0d1a81c9db14c # load x3 with value 0x96e0d1a81c9db14c
sw x3, 0(x2) # store 0x96e0d1a81c9db14c in memory
flh f27, 0(x2) # load 0x96e0d1a81c9db14c from memory into f27
la x2, scratch
li x3, 0xbbe0b74f4c13b097 # load x3 with value 0xbbe0b74f4c13b097
sw x3, 0(x2) # store 0xbbe0b74f4c13b097 in memory
flh f8, 0(x2) # load 0xbbe0b74f4c13b097 from memory into f8
la x2, scratch
li x3, 0xb731f8aceda4aaf6 # load x3 with value 0xb731f8aceda4aaf6
sw x3, 0(x2) # store 0xb731f8aceda4aaf6 in memory
flh f29, 0(x2) # load 0xb731f8aceda4aaf6 from memory into f29
fnmadd.h f5, f27, f8, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
la x2, scratch
li x3, 0xcddde11264587467 # load x3 with value 0xcddde11264587467
sw x3, 0(x2) # store 0xcddde11264587467 in memory
flh f28, 0(x2) # load 0xcddde11264587467 from memory into f28
la x2, scratch
li x3, 0x1dcba4b78758d3e9 # load x3 with value 0x1dcba4b78758d3e9
sw x3, 0(x2) # store 0x1dcba4b78758d3e9 in memory
flh f27, 0(x2) # load 0x1dcba4b78758d3e9 from memory into f27
la x2, scratch
li x3, 0x437d46425e81f849 # load x3 with value 0x437d46425e81f849
sw x3, 0(x2) # store 0x437d46425e81f849 in memory
flh f1, 0(x2) # load 0x437d46425e81f849 from memory into f1
fnmadd.h f5, f28, f27, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
la x2, scratch
li x3, 0xa57dcb786e8d6f9f # load x3 with value 0xa57dcb786e8d6f9f
sw x3, 0(x2) # store 0xa57dcb786e8d6f9f in memory
flh f29, 0(x2) # load 0xa57dcb786e8d6f9f from memory into f29
la x2, scratch
li x3, 0x8ae36fee41323b6c # load x3 with value 0x8ae36fee41323b6c
sw x3, 0(x2) # store 0x8ae36fee41323b6c in memory
flh f3, 0(x2) # load 0x8ae36fee41323b6c from memory into f3
la x2, scratch
li x3, 0xb1c982019c6e62a9 # load x3 with value 0xb1c982019c6e62a9
sw x3, 0(x2) # store 0xb1c982019c6e62a9 in memory
flh f20, 0(x2) # load 0xb1c982019c6e62a9 from memory into f20
fnmadd.h f22, f29, f3, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
la x2, scratch
li x3, 0xe90b7916312139bc # load x3 with value 0xe90b7916312139bc
sw x3, 0(x2) # store 0xe90b7916312139bc in memory
flh f30, 0(x2) # load 0xe90b7916312139bc from memory into f30
la x2, scratch
li x3, 0xafd6072a133b4d87 # load x3 with value 0xafd6072a133b4d87
sw x3, 0(x2) # store 0xafd6072a133b4d87 in memory
flh f31, 0(x2) # load 0xafd6072a133b4d87 from memory into f31
la x2, scratch
li x3, 0x9b6e6d6d9d67dc # load x3 with value 0x9b6e6d6d9d67dc
sw x3, 0(x2) # store 0x9b6e6d6d9d67dc in memory
flh f28, 0(x2) # load 0x9b6e6d6d9d67dc from memory into f28
fnmadd.h f24, f30, f31, f28 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
la x2, scratch
li x3, 0xff9fcbaa3acea132 # load x3 with value 0xff9fcbaa3acea132
sw x3, 0(x2) # store 0xff9fcbaa3acea132 in memory
flh f31, 0(x2) # load 0xff9fcbaa3acea132 from memory into f31
la x2, scratch
li x3, 0x4b7d6df699338f17 # load x3 with value 0x4b7d6df699338f17
sw x3, 0(x2) # store 0x4b7d6df699338f17 in memory
flh f20, 0(x2) # load 0x4b7d6df699338f17 from memory into f20
la x2, scratch
li x3, 0x1df12571203288d2 # load x3 with value 0x1df12571203288d2
sw x3, 0(x2) # store 0x1df12571203288d2 in memory
flh f15, 0(x2) # load 0x1df12571203288d2 from memory into f15
fnmadd.h f27, f31, f20, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
la x2, scratch
li x3, 0x3c40e41117ba9231 # load x3 with value 0x3c40e41117ba9231
sw x3, 0(x2) # store 0x3c40e41117ba9231 in memory
flh f18, 0(x2) # load 0x3c40e41117ba9231 from memory into f18
la x2, scratch
li x3, 0x748ce9d5f8a083f6 # load x3 with value 0x748ce9d5f8a083f6
sw x3, 0(x2) # store 0x748ce9d5f8a083f6 in memory
flh f0, 0(x2) # load 0x748ce9d5f8a083f6 from memory into f0
la x2, scratch
li x3, 0xd09072083b4cfc9c # load x3 with value 0xd09072083b4cfc9c
sw x3, 0(x2) # store 0xd09072083b4cfc9c in memory
flh f28, 0(x2) # load 0xd09072083b4cfc9c from memory into f28
fnmadd.h f15, f18, f0, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
la x2, scratch
li x3, 0x54589b3edc1a3cb5 # load x3 with value 0x54589b3edc1a3cb5
sw x3, 0(x2) # store 0x54589b3edc1a3cb5 in memory
flh f30, 0(x2) # load 0x54589b3edc1a3cb5 from memory into f30
la x2, scratch
li x3, 0xe04c2fe258ab930e # load x3 with value 0xe04c2fe258ab930e
sw x3, 0(x2) # store 0xe04c2fe258ab930e in memory
flh f1, 0(x2) # load 0xe04c2fe258ab930e from memory into f1
la x2, scratch
li x3, 0x62a27ba25c7de88b # load x3 with value 0x62a27ba25c7de88b
sw x3, 0(x2) # store 0x62a27ba25c7de88b in memory
flh f21, 0(x2) # load 0x62a27ba25c7de88b from memory into f21
fnmadd.h f20, f30, f1, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
la x2, scratch
li x3, 0xa89d14388428971c # load x3 with value 0xa89d14388428971c
sw x3, 0(x2) # store 0xa89d14388428971c in memory
flh f10, 0(x2) # load 0xa89d14388428971c from memory into f10
la x2, scratch
li x3, 0x4a8f4369625e3ec9 # load x3 with value 0x4a8f4369625e3ec9
sw x3, 0(x2) # store 0x4a8f4369625e3ec9 in memory
flh f2, 0(x2) # load 0x4a8f4369625e3ec9 from memory into f2
la x2, scratch
li x3, 0xc1232e56d80ef0f7 # load x3 with value 0xc1232e56d80ef0f7
sw x3, 0(x2) # store 0xc1232e56d80ef0f7 in memory
flh f22, 0(x2) # load 0xc1232e56d80ef0f7 from memory into f22
fnmadd.h f20, f10, f2, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
la x2, scratch
li x3, 0x13cadd676e080aef # load x3 with value 0x13cadd676e080aef
sw x3, 0(x2) # store 0x13cadd676e080aef in memory
flh f23, 0(x2) # load 0x13cadd676e080aef from memory into f23
la x2, scratch
li x3, 0x3b0ea0900c3da394 # load x3 with value 0x3b0ea0900c3da394
sw x3, 0(x2) # store 0x3b0ea0900c3da394 in memory
flh f3, 0(x2) # load 0x3b0ea0900c3da394 from memory into f3
la x2, scratch
li x3, 0xa166807189ab5544 # load x3 with value 0xa166807189ab5544
sw x3, 0(x2) # store 0xa166807189ab5544 in memory
flh f29, 0(x2) # load 0xa166807189ab5544 from memory into f29
fnmadd.h f27, f23, f3, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x2601d759c84c6378 # load x3 with value 0x2601d759c84c6378
sw x3, 0(x2) # store 0x2601d759c84c6378 in memory
flh f13, 0(x2) # load 0x2601d759c84c6378 from memory into f13
la x2, scratch
li x3, 0x15fef6c13260d746 # load x3 with value 0x15fef6c13260d746
sw x3, 0(x2) # store 0x15fef6c13260d746 in memory
flh f4, 0(x2) # load 0x15fef6c13260d746 from memory into f4
la x2, scratch
li x3, 0x6dc4bb597c410c57 # load x3 with value 0x6dc4bb597c410c57
sw x3, 0(x2) # store 0x6dc4bb597c410c57 in memory
flh f14, 0(x2) # load 0x6dc4bb597c410c57 from memory into f14
fnmadd.h f3, f13, f4, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xb431889941f52fb0 # load x3 with value 0xb431889941f52fb0
sw x3, 0(x2) # store 0xb431889941f52fb0 in memory
flh f15, 0(x2) # load 0xb431889941f52fb0 from memory into f15
la x2, scratch
li x3, 0x7ba660b92d672a94 # load x3 with value 0x7ba660b92d672a94
sw x3, 0(x2) # store 0x7ba660b92d672a94 in memory
flh f5, 0(x2) # load 0x7ba660b92d672a94 from memory into f5
la x2, scratch
li x3, 0xbdd223147f45666a # load x3 with value 0xbdd223147f45666a
sw x3, 0(x2) # store 0xbdd223147f45666a in memory
flh f25, 0(x2) # load 0xbdd223147f45666a from memory into f25
fnmadd.h f28, f15, f5, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xed9116e56a5c39e8 # load x3 with value 0xed9116e56a5c39e8
sw x3, 0(x2) # store 0xed9116e56a5c39e8 in memory
flh f18, 0(x2) # load 0xed9116e56a5c39e8 from memory into f18
la x2, scratch
li x3, 0x9b52abf7146bccc # load x3 with value 0x9b52abf7146bccc
sw x3, 0(x2) # store 0x9b52abf7146bccc in memory
flh f6, 0(x2) # load 0x9b52abf7146bccc from memory into f6
la x2, scratch
li x3, 0x93dc4dbf408900f3 # load x3 with value 0x93dc4dbf408900f3
sw x3, 0(x2) # store 0x93dc4dbf408900f3 in memory
flh f17, 0(x2) # load 0x93dc4dbf408900f3 from memory into f17
fnmadd.h f4, f18, f6, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x101b4f7377a594a5 # load x3 with value 0x101b4f7377a594a5
sw x3, 0(x2) # store 0x101b4f7377a594a5 in memory
flh f15, 0(x2) # load 0x101b4f7377a594a5 from memory into f15
la x2, scratch
li x3, 0x6e45e85b2ba0f700 # load x3 with value 0x6e45e85b2ba0f700
sw x3, 0(x2) # store 0x6e45e85b2ba0f700 in memory
flh f7, 0(x2) # load 0x6e45e85b2ba0f700 from memory into f7
la x2, scratch
li x3, 0x15e751ca7d1d37c0 # load x3 with value 0x15e751ca7d1d37c0
sw x3, 0(x2) # store 0x15e751ca7d1d37c0 in memory
flh f26, 0(x2) # load 0x15e751ca7d1d37c0 from memory into f26
fnmadd.h f27, f15, f7, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
la x2, scratch
li x3, 0x42eb7c476255fbb9 # load x3 with value 0x42eb7c476255fbb9
sw x3, 0(x2) # store 0x42eb7c476255fbb9 in memory
flh f7, 0(x2) # load 0x42eb7c476255fbb9 from memory into f7
la x2, scratch
li x3, 0x572409863d21f113 # load x3 with value 0x572409863d21f113
sw x3, 0(x2) # store 0x572409863d21f113 in memory
flh f8, 0(x2) # load 0x572409863d21f113 from memory into f8
la x2, scratch
li x3, 0xbfaf66b0c78600a8 # load x3 with value 0xbfaf66b0c78600a8
sw x3, 0(x2) # store 0xbfaf66b0c78600a8 in memory
flh f27, 0(x2) # load 0xbfaf66b0c78600a8 from memory into f27
fnmadd.h f25, f7, f8, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
la x2, scratch
li x3, 0xf421052ec3b9a373 # load x3 with value 0xf421052ec3b9a373
sw x3, 0(x2) # store 0xf421052ec3b9a373 in memory
flh f31, 0(x2) # load 0xf421052ec3b9a373 from memory into f31
la x2, scratch
li x3, 0xccaf97050df5900e # load x3 with value 0xccaf97050df5900e
sw x3, 0(x2) # store 0xccaf97050df5900e in memory
flh f9, 0(x2) # load 0xccaf97050df5900e from memory into f9
la x2, scratch
li x3, 0xadb398012e9d5d # load x3 with value 0xadb398012e9d5d
sw x3, 0(x2) # store 0xadb398012e9d5d in memory
flh f30, 0(x2) # load 0xadb398012e9d5d from memory into f30
fnmadd.h f11, f31, f9, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
la x2, scratch
li x3, 0xfb6035ff7f480050 # load x3 with value 0xfb6035ff7f480050
sw x3, 0(x2) # store 0xfb6035ff7f480050 in memory
flh f2, 0(x2) # load 0xfb6035ff7f480050 from memory into f2
la x2, scratch
li x3, 0xf8a4ebc506ba49d9 # load x3 with value 0xf8a4ebc506ba49d9
sw x3, 0(x2) # store 0xf8a4ebc506ba49d9 in memory
flh f10, 0(x2) # load 0xf8a4ebc506ba49d9 from memory into f10
la x2, scratch
li x3, 0x3a7db92a42c58c98 # load x3 with value 0x3a7db92a42c58c98
sw x3, 0(x2) # store 0x3a7db92a42c58c98 in memory
flh f28, 0(x2) # load 0x3a7db92a42c58c98 from memory into f28
fnmadd.h f27, f2, f10, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
la x2, scratch
li x3, 0x1f148c672bdbe47d # load x3 with value 0x1f148c672bdbe47d
sw x3, 0(x2) # store 0x1f148c672bdbe47d in memory
flh f31, 0(x2) # load 0x1f148c672bdbe47d from memory into f31
la x2, scratch
li x3, 0xff3eb0b6fec89e05 # load x3 with value 0xff3eb0b6fec89e05
sw x3, 0(x2) # store 0xff3eb0b6fec89e05 in memory
flh f11, 0(x2) # load 0xff3eb0b6fec89e05 from memory into f11
la x2, scratch
li x3, 0x1b90e3838b1513f6 # load x3 with value 0x1b90e3838b1513f6
sw x3, 0(x2) # store 0x1b90e3838b1513f6 in memory
flh f18, 0(x2) # load 0x1b90e3838b1513f6 from memory into f18
fnmadd.h f8, f31, f11, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
la x2, scratch
li x3, 0xd9d672f12180bc11 # load x3 with value 0xd9d672f12180bc11
sw x3, 0(x2) # store 0xd9d672f12180bc11 in memory
flh f8, 0(x2) # load 0xd9d672f12180bc11 from memory into f8
la x2, scratch
li x3, 0x9893eb2ed6cbc442 # load x3 with value 0x9893eb2ed6cbc442
sw x3, 0(x2) # store 0x9893eb2ed6cbc442 in memory
flh f12, 0(x2) # load 0x9893eb2ed6cbc442 from memory into f12
la x2, scratch
li x3, 0xc42a4ce499663139 # load x3 with value 0xc42a4ce499663139
sw x3, 0(x2) # store 0xc42a4ce499663139 in memory
flh f17, 0(x2) # load 0xc42a4ce499663139 from memory into f17
fnmadd.h f2, f8, f12, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
la x2, scratch
li x3, 0x6dee7a42c01caefc # load x3 with value 0x6dee7a42c01caefc
sw x3, 0(x2) # store 0x6dee7a42c01caefc in memory
flh f12, 0(x2) # load 0x6dee7a42c01caefc from memory into f12
la x2, scratch
li x3, 0x62f7249b5c4d68e4 # load x3 with value 0x62f7249b5c4d68e4
sw x3, 0(x2) # store 0x62f7249b5c4d68e4 in memory
flh f13, 0(x2) # load 0x62f7249b5c4d68e4 from memory into f13
la x2, scratch
li x3, 0x99fd11e9a3fc1590 # load x3 with value 0x99fd11e9a3fc1590
sw x3, 0(x2) # store 0x99fd11e9a3fc1590 in memory
flh f3, 0(x2) # load 0x99fd11e9a3fc1590 from memory into f3
fnmadd.h f28, f12, f13, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
la x2, scratch
li x3, 0xdb66edfeb08573ec # load x3 with value 0xdb66edfeb08573ec
sw x3, 0(x2) # store 0xdb66edfeb08573ec in memory
flh f18, 0(x2) # load 0xdb66edfeb08573ec from memory into f18
la x2, scratch
li x3, 0x7a5ee788c96fb6a2 # load x3 with value 0x7a5ee788c96fb6a2
sw x3, 0(x2) # store 0x7a5ee788c96fb6a2 in memory
flh f14, 0(x2) # load 0x7a5ee788c96fb6a2 from memory into f14
la x2, scratch
li x3, 0xec800c82ea0af0d8 # load x3 with value 0xec800c82ea0af0d8
sw x3, 0(x2) # store 0xec800c82ea0af0d8 in memory
flh f9, 0(x2) # load 0xec800c82ea0af0d8 from memory into f9
fnmadd.h f13, f18, f14, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
la x2, scratch
li x3, 0x5d0acb77911348 # load x3 with value 0x5d0acb77911348
sw x3, 0(x2) # store 0x5d0acb77911348 in memory
flh f30, 0(x2) # load 0x5d0acb77911348 from memory into f30
la x2, scratch
li x3, 0x1d1948a309589025 # load x3 with value 0x1d1948a309589025
sw x3, 0(x2) # store 0x1d1948a309589025 in memory
flh f15, 0(x2) # load 0x1d1948a309589025 from memory into f15
la x2, scratch
li x3, 0xae3ca73b189e3ff # load x3 with value 0xae3ca73b189e3ff
sw x3, 0(x2) # store 0xae3ca73b189e3ff in memory
flh f24, 0(x2) # load 0xae3ca73b189e3ff from memory into f24
fnmadd.h f9, f30, f15, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
la x2, scratch
li x3, 0xa6e6f35b9acf4dfd # load x3 with value 0xa6e6f35b9acf4dfd
sw x3, 0(x2) # store 0xa6e6f35b9acf4dfd in memory
flh f20, 0(x2) # load 0xa6e6f35b9acf4dfd from memory into f20
la x2, scratch
li x3, 0x61133c763bd464ce # load x3 with value 0x61133c763bd464ce
sw x3, 0(x2) # store 0x61133c763bd464ce in memory
flh f16, 0(x2) # load 0x61133c763bd464ce from memory into f16
la x2, scratch
li x3, 0x1c3a1b2a70391a61 # load x3 with value 0x1c3a1b2a70391a61
sw x3, 0(x2) # store 0x1c3a1b2a70391a61 in memory
flh f12, 0(x2) # load 0x1c3a1b2a70391a61 from memory into f12
fnmadd.h f21, f20, f16, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
la x2, scratch
li x3, 0x64238677b7a64b24 # load x3 with value 0x64238677b7a64b24
sw x3, 0(x2) # store 0x64238677b7a64b24 in memory
flh f22, 0(x2) # load 0x64238677b7a64b24 from memory into f22
la x2, scratch
li x3, 0x46fe9094266b0cb0 # load x3 with value 0x46fe9094266b0cb0
sw x3, 0(x2) # store 0x46fe9094266b0cb0 in memory
flh f17, 0(x2) # load 0x46fe9094266b0cb0 from memory into f17
la x2, scratch
li x3, 0xb4dc6cd01b1ae834 # load x3 with value 0xb4dc6cd01b1ae834
sw x3, 0(x2) # store 0xb4dc6cd01b1ae834 in memory
flh f30, 0(x2) # load 0xb4dc6cd01b1ae834 from memory into f30
fnmadd.h f2, f22, f17, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
la x2, scratch
li x3, 0xa6a1ee3583bbbe7 # load x3 with value 0xa6a1ee3583bbbe7
sw x3, 0(x2) # store 0xa6a1ee3583bbbe7 in memory
flh f20, 0(x2) # load 0xa6a1ee3583bbbe7 from memory into f20
la x2, scratch
li x3, 0xe52fd407b2c02ce9 # load x3 with value 0xe52fd407b2c02ce9
sw x3, 0(x2) # store 0xe52fd407b2c02ce9 in memory
flh f18, 0(x2) # load 0xe52fd407b2c02ce9 from memory into f18
la x2, scratch
li x3, 0xc74ae1aabcc6fa47 # load x3 with value 0xc74ae1aabcc6fa47
sw x3, 0(x2) # store 0xc74ae1aabcc6fa47 in memory
flh f8, 0(x2) # load 0xc74ae1aabcc6fa47 from memory into f8
fnmadd.h f25, f20, f18, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
la x2, scratch
li x3, 0x78dea6dcc7298ad # load x3 with value 0x78dea6dcc7298ad
sw x3, 0(x2) # store 0x78dea6dcc7298ad in memory
flh f23, 0(x2) # load 0x78dea6dcc7298ad from memory into f23
la x2, scratch
li x3, 0x581795356694f618 # load x3 with value 0x581795356694f618
sw x3, 0(x2) # store 0x581795356694f618 in memory
flh f19, 0(x2) # load 0x581795356694f618 from memory into f19
la x2, scratch
li x3, 0xd04a19f73663b652 # load x3 with value 0xd04a19f73663b652
sw x3, 0(x2) # store 0xd04a19f73663b652 in memory
flh f11, 0(x2) # load 0xd04a19f73663b652 from memory into f11
fnmadd.h f9, f23, f19, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
la x2, scratch
li x3, 0x16e740d248ee1d2b # load x3 with value 0x16e740d248ee1d2b
sw x3, 0(x2) # store 0x16e740d248ee1d2b in memory
flh f1, 0(x2) # load 0x16e740d248ee1d2b from memory into f1
la x2, scratch
li x3, 0x8aa66158ee66b6e9 # load x3 with value 0x8aa66158ee66b6e9
sw x3, 0(x2) # store 0x8aa66158ee66b6e9 in memory
flh f20, 0(x2) # load 0x8aa66158ee66b6e9 from memory into f20
la x2, scratch
li x3, 0x757f04e34a6f798a # load x3 with value 0x757f04e34a6f798a
sw x3, 0(x2) # store 0x757f04e34a6f798a in memory
flh f23, 0(x2) # load 0x757f04e34a6f798a from memory into f23
fnmadd.h f12, f1, f20, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
la x2, scratch
li x3, 0x3b0279d4ea26d65d # load x3 with value 0x3b0279d4ea26d65d
sw x3, 0(x2) # store 0x3b0279d4ea26d65d in memory
flh f18, 0(x2) # load 0x3b0279d4ea26d65d from memory into f18
la x2, scratch
li x3, 0xe573a3b16f199c00 # load x3 with value 0xe573a3b16f199c00
sw x3, 0(x2) # store 0xe573a3b16f199c00 in memory
flh f21, 0(x2) # load 0xe573a3b16f199c00 from memory into f21
la x2, scratch
li x3, 0x5a7e94b271fe4ad6 # load x3 with value 0x5a7e94b271fe4ad6
sw x3, 0(x2) # store 0x5a7e94b271fe4ad6 in memory
flh f8, 0(x2) # load 0x5a7e94b271fe4ad6 from memory into f8
fnmadd.h f27, f18, f21, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
la x2, scratch
li x3, 0xb2359a2d20d0d14e # load x3 with value 0xb2359a2d20d0d14e
sw x3, 0(x2) # store 0xb2359a2d20d0d14e in memory
flh f13, 0(x2) # load 0xb2359a2d20d0d14e from memory into f13
la x2, scratch
li x3, 0xb718ff564449f416 # load x3 with value 0xb718ff564449f416
sw x3, 0(x2) # store 0xb718ff564449f416 in memory
flh f22, 0(x2) # load 0xb718ff564449f416 from memory into f22
la x2, scratch
li x3, 0xdd4728bbe7f63ba # load x3 with value 0xdd4728bbe7f63ba
sw x3, 0(x2) # store 0xdd4728bbe7f63ba in memory
flh f30, 0(x2) # load 0xdd4728bbe7f63ba from memory into f30
fnmadd.h f28, f13, f22, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
la x2, scratch
li x3, 0x433b5f615b85a686 # load x3 with value 0x433b5f615b85a686
sw x3, 0(x2) # store 0x433b5f615b85a686 in memory
flh f9, 0(x2) # load 0x433b5f615b85a686 from memory into f9
la x2, scratch
li x3, 0x5cf809274d51f124 # load x3 with value 0x5cf809274d51f124
sw x3, 0(x2) # store 0x5cf809274d51f124 in memory
flh f23, 0(x2) # load 0x5cf809274d51f124 from memory into f23
la x2, scratch
li x3, 0x95a092bd2707e6cb # load x3 with value 0x95a092bd2707e6cb
sw x3, 0(x2) # store 0x95a092bd2707e6cb in memory
flh f5, 0(x2) # load 0x95a092bd2707e6cb from memory into f5
fnmadd.h f24, f9, f23, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
la x2, scratch
li x3, 0x23e92a2f003e08fa # load x3 with value 0x23e92a2f003e08fa
sw x3, 0(x2) # store 0x23e92a2f003e08fa in memory
flh f1, 0(x2) # load 0x23e92a2f003e08fa from memory into f1
la x2, scratch
li x3, 0xf38e7fc9f6959d6c # load x3 with value 0xf38e7fc9f6959d6c
sw x3, 0(x2) # store 0xf38e7fc9f6959d6c in memory
flh f24, 0(x2) # load 0xf38e7fc9f6959d6c from memory into f24
la x2, scratch
li x3, 0xda8d23c5f1c71c1b # load x3 with value 0xda8d23c5f1c71c1b
sw x3, 0(x2) # store 0xda8d23c5f1c71c1b in memory
flh f11, 0(x2) # load 0xda8d23c5f1c71c1b from memory into f11
fnmadd.h f31, f1, f24, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
la x2, scratch
li x3, 0xee6583435ac8c9b4 # load x3 with value 0xee6583435ac8c9b4
sw x3, 0(x2) # store 0xee6583435ac8c9b4 in memory
flh f18, 0(x2) # load 0xee6583435ac8c9b4 from memory into f18
la x2, scratch
li x3, 0x39a5f90c95069076 # load x3 with value 0x39a5f90c95069076
sw x3, 0(x2) # store 0x39a5f90c95069076 in memory
flh f25, 0(x2) # load 0x39a5f90c95069076 from memory into f25
la x2, scratch
li x3, 0x3fc985db5d380e83 # load x3 with value 0x3fc985db5d380e83
sw x3, 0(x2) # store 0x3fc985db5d380e83 in memory
flh f22, 0(x2) # load 0x3fc985db5d380e83 from memory into f22
fnmadd.h f24, f18, f25, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
la x2, scratch
li x3, 0xccfa6f86d7c6d0d7 # load x3 with value 0xccfa6f86d7c6d0d7
sw x3, 0(x2) # store 0xccfa6f86d7c6d0d7 in memory
flh f18, 0(x2) # load 0xccfa6f86d7c6d0d7 from memory into f18
la x2, scratch
li x3, 0xd8d941f679f865f2 # load x3 with value 0xd8d941f679f865f2
sw x3, 0(x2) # store 0xd8d941f679f865f2 in memory
flh f26, 0(x2) # load 0xd8d941f679f865f2 from memory into f26
la x2, scratch
li x3, 0xe98ff39ae54d604 # load x3 with value 0xe98ff39ae54d604
sw x3, 0(x2) # store 0xe98ff39ae54d604 in memory
flh f29, 0(x2) # load 0xe98ff39ae54d604 from memory into f29
fnmadd.h f20, f18, f26, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
la x2, scratch
li x3, 0x3705eaa0b47b2dfd # load x3 with value 0x3705eaa0b47b2dfd
sw x3, 0(x2) # store 0x3705eaa0b47b2dfd in memory
flh f24, 0(x2) # load 0x3705eaa0b47b2dfd from memory into f24
la x2, scratch
li x3, 0xbf351e79b1185f55 # load x3 with value 0xbf351e79b1185f55
sw x3, 0(x2) # store 0xbf351e79b1185f55 in memory
flh f27, 0(x2) # load 0xbf351e79b1185f55 from memory into f27
la x2, scratch
li x3, 0x87219566fae07f4a # load x3 with value 0x87219566fae07f4a
sw x3, 0(x2) # store 0x87219566fae07f4a in memory
flh f31, 0(x2) # load 0x87219566fae07f4a from memory into f31
fnmadd.h f10, f24, f27, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
la x2, scratch
li x3, 0xa5f82e4644ec7e57 # load x3 with value 0xa5f82e4644ec7e57
sw x3, 0(x2) # store 0xa5f82e4644ec7e57 in memory
flh f3, 0(x2) # load 0xa5f82e4644ec7e57 from memory into f3
la x2, scratch
li x3, 0x3a53736ab7f48d4d # load x3 with value 0x3a53736ab7f48d4d
sw x3, 0(x2) # store 0x3a53736ab7f48d4d in memory
flh f28, 0(x2) # load 0x3a53736ab7f48d4d from memory into f28
la x2, scratch
li x3, 0xea4577a52e8d65b1 # load x3 with value 0xea4577a52e8d65b1
sw x3, 0(x2) # store 0xea4577a52e8d65b1 in memory
flh f13, 0(x2) # load 0xea4577a52e8d65b1 from memory into f13
fnmadd.h f20, f3, f28, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
la x2, scratch
li x3, 0x8a88957c4916ed3a # load x3 with value 0x8a88957c4916ed3a
sw x3, 0(x2) # store 0x8a88957c4916ed3a in memory
flh f12, 0(x2) # load 0x8a88957c4916ed3a from memory into f12
la x2, scratch
li x3, 0x818917ab3b070449 # load x3 with value 0x818917ab3b070449
sw x3, 0(x2) # store 0x818917ab3b070449 in memory
flh f29, 0(x2) # load 0x818917ab3b070449 from memory into f29
la x2, scratch
li x3, 0x4299583bdb640704 # load x3 with value 0x4299583bdb640704
sw x3, 0(x2) # store 0x4299583bdb640704 in memory
flh f16, 0(x2) # load 0x4299583bdb640704 from memory into f16
fnmadd.h f15, f12, f29, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
la x2, scratch
li x3, 0x8a3bbda9bc037c69 # load x3 with value 0x8a3bbda9bc037c69
sw x3, 0(x2) # store 0x8a3bbda9bc037c69 in memory
flh f9, 0(x2) # load 0x8a3bbda9bc037c69 from memory into f9
la x2, scratch
li x3, 0xb56de290405263a6 # load x3 with value 0xb56de290405263a6
sw x3, 0(x2) # store 0xb56de290405263a6 in memory
flh f30, 0(x2) # load 0xb56de290405263a6 from memory into f30
la x2, scratch
li x3, 0x1e9a21785f14f7e2 # load x3 with value 0x1e9a21785f14f7e2
sw x3, 0(x2) # store 0x1e9a21785f14f7e2 in memory
flh f25, 0(x2) # load 0x1e9a21785f14f7e2 from memory into f25
fnmadd.h f29, f9, f30, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
la x2, scratch
li x3, 0xf32110c59100ee6f # load x3 with value 0xf32110c59100ee6f
sw x3, 0(x2) # store 0xf32110c59100ee6f in memory
flh f15, 0(x2) # load 0xf32110c59100ee6f from memory into f15
la x2, scratch
li x3, 0xe047eaf97e4f4910 # load x3 with value 0xe047eaf97e4f4910
sw x3, 0(x2) # store 0xe047eaf97e4f4910 in memory
flh f31, 0(x2) # load 0xe047eaf97e4f4910 from memory into f31
la x2, scratch
li x3, 0x6f3b1e9643146086 # load x3 with value 0x6f3b1e9643146086
sw x3, 0(x2) # store 0x6f3b1e9643146086 in memory
flh f24, 0(x2) # load 0x6f3b1e9643146086 from memory into f24
fnmadd.h f29, f15, f31, f24 # perform operation

# Testcase cp_fs3 (Test source fs3 = f0)
la x2, scratch
li x3, 0xffcb2857ce160040 # load x3 with value 0xffcb2857ce160040
sw x3, 0(x2) # store 0xffcb2857ce160040 in memory
flh f24, 0(x2) # load 0xffcb2857ce160040 from memory into f24
la x2, scratch
li x3, 0x3932de71a09fcefc # load x3 with value 0x3932de71a09fcefc
sw x3, 0(x2) # store 0x3932de71a09fcefc in memory
flh f11, 0(x2) # load 0x3932de71a09fcefc from memory into f11
la x2, scratch
li x3, 0x5e76f8bfb0522e9c # load x3 with value 0x5e76f8bfb0522e9c
sw x3, 0(x2) # store 0x5e76f8bfb0522e9c in memory
flh f0, 0(x2) # load 0x5e76f8bfb0522e9c from memory into f0
fnmadd.h f2, f24, f11, f0 # perform operation

# Testcase cp_fs3 (Test source fs3 = f1)
la x2, scratch
li x3, 0x321bf2c524f5278 # load x3 with value 0x321bf2c524f5278
sw x3, 0(x2) # store 0x321bf2c524f5278 in memory
flh f2, 0(x2) # load 0x321bf2c524f5278 from memory into f2
la x2, scratch
li x3, 0x17f8d15184199f77 # load x3 with value 0x17f8d15184199f77
sw x3, 0(x2) # store 0x17f8d15184199f77 in memory
flh f5, 0(x2) # load 0x17f8d15184199f77 from memory into f5
la x2, scratch
li x3, 0x65b44e97b1225f98 # load x3 with value 0x65b44e97b1225f98
sw x3, 0(x2) # store 0x65b44e97b1225f98 in memory
flh f1, 0(x2) # load 0x65b44e97b1225f98 from memory into f1
fnmadd.h f10, f2, f5, f1 # perform operation

# Testcase cp_fs3 (Test source fs3 = f2)
la x2, scratch
li x3, 0x1f289e94ca792741 # load x3 with value 0x1f289e94ca792741
sw x3, 0(x2) # store 0x1f289e94ca792741 in memory
flh f21, 0(x2) # load 0x1f289e94ca792741 from memory into f21
la x2, scratch
li x3, 0x5ab8f8f209073ddd # load x3 with value 0x5ab8f8f209073ddd
sw x3, 0(x2) # store 0x5ab8f8f209073ddd in memory
flh f17, 0(x2) # load 0x5ab8f8f209073ddd from memory into f17
la x2, scratch
li x3, 0x6a36a84fa7641f4f # load x3 with value 0x6a36a84fa7641f4f
sw x3, 0(x2) # store 0x6a36a84fa7641f4f in memory
flh f2, 0(x2) # load 0x6a36a84fa7641f4f from memory into f2
fnmadd.h f23, f21, f17, f2 # perform operation

# Testcase cp_fs3 (Test source fs3 = f3)
la x2, scratch
li x3, 0x482f50c41cb9449b # load x3 with value 0x482f50c41cb9449b
sw x3, 0(x2) # store 0x482f50c41cb9449b in memory
flh f27, 0(x2) # load 0x482f50c41cb9449b from memory into f27
la x2, scratch
li x3, 0x3b4d3db136248ff6 # load x3 with value 0x3b4d3db136248ff6
sw x3, 0(x2) # store 0x3b4d3db136248ff6 in memory
flh f25, 0(x2) # load 0x3b4d3db136248ff6 from memory into f25
la x2, scratch
li x3, 0x2f482cd106fe83cd # load x3 with value 0x2f482cd106fe83cd
sw x3, 0(x2) # store 0x2f482cd106fe83cd in memory
flh f3, 0(x2) # load 0x2f482cd106fe83cd from memory into f3
fnmadd.h f8, f27, f25, f3 # perform operation

# Testcase cp_fs3 (Test source fs3 = f4)
la x2, scratch
li x3, 0x1b167f4c6cc5b12f # load x3 with value 0x1b167f4c6cc5b12f
sw x3, 0(x2) # store 0x1b167f4c6cc5b12f in memory
flh f6, 0(x2) # load 0x1b167f4c6cc5b12f from memory into f6
la x2, scratch
li x3, 0xf839081f695d0453 # load x3 with value 0xf839081f695d0453
sw x3, 0(x2) # store 0xf839081f695d0453 in memory
flh f18, 0(x2) # load 0xf839081f695d0453 from memory into f18
la x2, scratch
li x3, 0x166be6feb1e689b3 # load x3 with value 0x166be6feb1e689b3
sw x3, 0(x2) # store 0x166be6feb1e689b3 in memory
flh f4, 0(x2) # load 0x166be6feb1e689b3 from memory into f4
fnmadd.h f17, f6, f18, f4 # perform operation

# Testcase cp_fs3 (Test source fs3 = f5)
la x2, scratch
li x3, 0xcfb92300e37871fb # load x3 with value 0xcfb92300e37871fb
sw x3, 0(x2) # store 0xcfb92300e37871fb in memory
flh f23, 0(x2) # load 0xcfb92300e37871fb from memory into f23
la x2, scratch
li x3, 0x4752af61f3e965b9 # load x3 with value 0x4752af61f3e965b9
sw x3, 0(x2) # store 0x4752af61f3e965b9 in memory
flh f20, 0(x2) # load 0x4752af61f3e965b9 from memory into f20
la x2, scratch
li x3, 0x8e24e9c55d76c65e # load x3 with value 0x8e24e9c55d76c65e
sw x3, 0(x2) # store 0x8e24e9c55d76c65e in memory
flh f5, 0(x2) # load 0x8e24e9c55d76c65e from memory into f5
fnmadd.h f1, f23, f20, f5 # perform operation

# Testcase cp_fs3 (Test source fs3 = f6)
la x2, scratch
li x3, 0xcd206cb042c97ae6 # load x3 with value 0xcd206cb042c97ae6
sw x3, 0(x2) # store 0xcd206cb042c97ae6 in memory
flh f2, 0(x2) # load 0xcd206cb042c97ae6 from memory into f2
la x2, scratch
li x3, 0x661395c6f92e4534 # load x3 with value 0x661395c6f92e4534
sw x3, 0(x2) # store 0x661395c6f92e4534 in memory
flh f28, 0(x2) # load 0x661395c6f92e4534 from memory into f28
la x2, scratch
li x3, 0x9e20c99796af15b1 # load x3 with value 0x9e20c99796af15b1
sw x3, 0(x2) # store 0x9e20c99796af15b1 in memory
flh f6, 0(x2) # load 0x9e20c99796af15b1 from memory into f6
fnmadd.h f26, f2, f28, f6 # perform operation

# Testcase cp_fs3 (Test source fs3 = f7)
la x2, scratch
li x3, 0x4eeafb4d8390218c # load x3 with value 0x4eeafb4d8390218c
sw x3, 0(x2) # store 0x4eeafb4d8390218c in memory
flh f3, 0(x2) # load 0x4eeafb4d8390218c from memory into f3
la x2, scratch
li x3, 0x30d7ea88b6425d8e # load x3 with value 0x30d7ea88b6425d8e
sw x3, 0(x2) # store 0x30d7ea88b6425d8e in memory
flh f27, 0(x2) # load 0x30d7ea88b6425d8e from memory into f27
la x2, scratch
li x3, 0xc351d457036a59df # load x3 with value 0xc351d457036a59df
sw x3, 0(x2) # store 0xc351d457036a59df in memory
flh f7, 0(x2) # load 0xc351d457036a59df from memory into f7
fnmadd.h f26, f3, f27, f7 # perform operation

# Testcase cp_fs3 (Test source fs3 = f8)
la x2, scratch
li x3, 0xc4455ccc257abc4b # load x3 with value 0xc4455ccc257abc4b
sw x3, 0(x2) # store 0xc4455ccc257abc4b in memory
flh f2, 0(x2) # load 0xc4455ccc257abc4b from memory into f2
la x2, scratch
li x3, 0x27d5d5b7413eba4f # load x3 with value 0x27d5d5b7413eba4f
sw x3, 0(x2) # store 0x27d5d5b7413eba4f in memory
flh f3, 0(x2) # load 0x27d5d5b7413eba4f from memory into f3
la x2, scratch
li x3, 0x9de8071b8a0eb749 # load x3 with value 0x9de8071b8a0eb749
sw x3, 0(x2) # store 0x9de8071b8a0eb749 in memory
flh f8, 0(x2) # load 0x9de8071b8a0eb749 from memory into f8
fnmadd.h f17, f2, f3, f8 # perform operation

# Testcase cp_fs3 (Test source fs3 = f9)
la x2, scratch
li x3, 0xaf778c723d04aae # load x3 with value 0xaf778c723d04aae
sw x3, 0(x2) # store 0xaf778c723d04aae in memory
flh f8, 0(x2) # load 0xaf778c723d04aae from memory into f8
la x2, scratch
li x3, 0x36ccd64953db0cff # load x3 with value 0x36ccd64953db0cff
sw x3, 0(x2) # store 0x36ccd64953db0cff in memory
flh f6, 0(x2) # load 0x36ccd64953db0cff from memory into f6
la x2, scratch
li x3, 0xcaf9bdabc170b72a # load x3 with value 0xcaf9bdabc170b72a
sw x3, 0(x2) # store 0xcaf9bdabc170b72a in memory
flh f9, 0(x2) # load 0xcaf9bdabc170b72a from memory into f9
fnmadd.h f19, f8, f6, f9 # perform operation

# Testcase cp_fs3 (Test source fs3 = f10)
la x2, scratch
li x3, 0x8c06a4ebbca16dc8 # load x3 with value 0x8c06a4ebbca16dc8
sw x3, 0(x2) # store 0x8c06a4ebbca16dc8 in memory
flh f24, 0(x2) # load 0x8c06a4ebbca16dc8 from memory into f24
la x2, scratch
li x3, 0x210272b05503d238 # load x3 with value 0x210272b05503d238
sw x3, 0(x2) # store 0x210272b05503d238 in memory
flh f21, 0(x2) # load 0x210272b05503d238 from memory into f21
la x2, scratch
li x3, 0x9cf51bc1fa4b6d1c # load x3 with value 0x9cf51bc1fa4b6d1c
sw x3, 0(x2) # store 0x9cf51bc1fa4b6d1c in memory
flh f10, 0(x2) # load 0x9cf51bc1fa4b6d1c from memory into f10
fnmadd.h f27, f24, f21, f10 # perform operation

# Testcase cp_fs3 (Test source fs3 = f11)
la x2, scratch
li x3, 0x7ec7c7a9aa763884 # load x3 with value 0x7ec7c7a9aa763884
sw x3, 0(x2) # store 0x7ec7c7a9aa763884 in memory
flh f6, 0(x2) # load 0x7ec7c7a9aa763884 from memory into f6
la x2, scratch
li x3, 0xa6930ce1b1fe5e3a # load x3 with value 0xa6930ce1b1fe5e3a
sw x3, 0(x2) # store 0xa6930ce1b1fe5e3a in memory
flh f3, 0(x2) # load 0xa6930ce1b1fe5e3a from memory into f3
la x2, scratch
li x3, 0xc0dbdba6ca5c8f13 # load x3 with value 0xc0dbdba6ca5c8f13
sw x3, 0(x2) # store 0xc0dbdba6ca5c8f13 in memory
flh f11, 0(x2) # load 0xc0dbdba6ca5c8f13 from memory into f11
fnmadd.h f21, f6, f3, f11 # perform operation

# Testcase cp_fs3 (Test source fs3 = f12)
la x2, scratch
li x3, 0x33f153fb6f663985 # load x3 with value 0x33f153fb6f663985
sw x3, 0(x2) # store 0x33f153fb6f663985 in memory
flh f28, 0(x2) # load 0x33f153fb6f663985 from memory into f28
la x2, scratch
li x3, 0xbd71471010011f # load x3 with value 0xbd71471010011f
sw x3, 0(x2) # store 0xbd71471010011f in memory
flh f2, 0(x2) # load 0xbd71471010011f from memory into f2
la x2, scratch
li x3, 0xefd039c4296efc87 # load x3 with value 0xefd039c4296efc87
sw x3, 0(x2) # store 0xefd039c4296efc87 in memory
flh f12, 0(x2) # load 0xefd039c4296efc87 from memory into f12
fnmadd.h f18, f28, f2, f12 # perform operation

# Testcase cp_fs3 (Test source fs3 = f13)
la x2, scratch
li x3, 0x4a1254f490c5f54d # load x3 with value 0x4a1254f490c5f54d
sw x3, 0(x2) # store 0x4a1254f490c5f54d in memory
flh f22, 0(x2) # load 0x4a1254f490c5f54d from memory into f22
la x2, scratch
li x3, 0x867df7baf3f03826 # load x3 with value 0x867df7baf3f03826
sw x3, 0(x2) # store 0x867df7baf3f03826 in memory
flh f12, 0(x2) # load 0x867df7baf3f03826 from memory into f12
la x2, scratch
li x3, 0xa5c8df3cc5c4ab8d # load x3 with value 0xa5c8df3cc5c4ab8d
sw x3, 0(x2) # store 0xa5c8df3cc5c4ab8d in memory
flh f13, 0(x2) # load 0xa5c8df3cc5c4ab8d from memory into f13
fnmadd.h f8, f22, f12, f13 # perform operation

# Testcase cp_fs3 (Test source fs3 = f14)
la x2, scratch
li x3, 0x65025fd7410d825f # load x3 with value 0x65025fd7410d825f
sw x3, 0(x2) # store 0x65025fd7410d825f in memory
flh f6, 0(x2) # load 0x65025fd7410d825f from memory into f6
la x2, scratch
li x3, 0x989bb8b590cac6a7 # load x3 with value 0x989bb8b590cac6a7
sw x3, 0(x2) # store 0x989bb8b590cac6a7 in memory
flh f27, 0(x2) # load 0x989bb8b590cac6a7 from memory into f27
la x2, scratch
li x3, 0x4528ccbab7fc79e3 # load x3 with value 0x4528ccbab7fc79e3
sw x3, 0(x2) # store 0x4528ccbab7fc79e3 in memory
flh f14, 0(x2) # load 0x4528ccbab7fc79e3 from memory into f14
fnmadd.h f13, f6, f27, f14 # perform operation

# Testcase cp_fs3 (Test source fs3 = f15)
la x2, scratch
li x3, 0x94733cb99f7aa68a # load x3 with value 0x94733cb99f7aa68a
sw x3, 0(x2) # store 0x94733cb99f7aa68a in memory
flh f10, 0(x2) # load 0x94733cb99f7aa68a from memory into f10
la x2, scratch
li x3, 0x4e6f308a9e713463 # load x3 with value 0x4e6f308a9e713463
sw x3, 0(x2) # store 0x4e6f308a9e713463 in memory
flh f28, 0(x2) # load 0x4e6f308a9e713463 from memory into f28
la x2, scratch
li x3, 0x3cfdc41bceaa0d9c # load x3 with value 0x3cfdc41bceaa0d9c
sw x3, 0(x2) # store 0x3cfdc41bceaa0d9c in memory
flh f15, 0(x2) # load 0x3cfdc41bceaa0d9c from memory into f15
fnmadd.h f18, f10, f28, f15 # perform operation

# Testcase cp_fs3 (Test source fs3 = f16)
la x2, scratch
li x3, 0x695e8a12148a4265 # load x3 with value 0x695e8a12148a4265
sw x3, 0(x2) # store 0x695e8a12148a4265 in memory
flh f1, 0(x2) # load 0x695e8a12148a4265 from memory into f1
la x2, scratch
li x3, 0xe57a78dc5eca55d1 # load x3 with value 0xe57a78dc5eca55d1
sw x3, 0(x2) # store 0xe57a78dc5eca55d1 in memory
flh f14, 0(x2) # load 0xe57a78dc5eca55d1 from memory into f14
la x2, scratch
li x3, 0xcc00dc6eb27abd73 # load x3 with value 0xcc00dc6eb27abd73
sw x3, 0(x2) # store 0xcc00dc6eb27abd73 in memory
flh f16, 0(x2) # load 0xcc00dc6eb27abd73 from memory into f16
fnmadd.h f26, f1, f14, f16 # perform operation

# Testcase cp_fs3 (Test source fs3 = f17)
la x2, scratch
li x3, 0xe88f6ca995fba80f # load x3 with value 0xe88f6ca995fba80f
sw x3, 0(x2) # store 0xe88f6ca995fba80f in memory
flh f5, 0(x2) # load 0xe88f6ca995fba80f from memory into f5
la x2, scratch
li x3, 0xccbd14e34e106319 # load x3 with value 0xccbd14e34e106319
sw x3, 0(x2) # store 0xccbd14e34e106319 in memory
flh f1, 0(x2) # load 0xccbd14e34e106319 from memory into f1
la x2, scratch
li x3, 0xabb8165f8bf8d305 # load x3 with value 0xabb8165f8bf8d305
sw x3, 0(x2) # store 0xabb8165f8bf8d305 in memory
flh f17, 0(x2) # load 0xabb8165f8bf8d305 from memory into f17
fnmadd.h f22, f5, f1, f17 # perform operation

# Testcase cp_fs3 (Test source fs3 = f18)
la x2, scratch
li x3, 0xd2f99306aaf62978 # load x3 with value 0xd2f99306aaf62978
sw x3, 0(x2) # store 0xd2f99306aaf62978 in memory
flh f7, 0(x2) # load 0xd2f99306aaf62978 from memory into f7
la x2, scratch
li x3, 0xf992a62034f71566 # load x3 with value 0xf992a62034f71566
sw x3, 0(x2) # store 0xf992a62034f71566 in memory
flh f10, 0(x2) # load 0xf992a62034f71566 from memory into f10
la x2, scratch
li x3, 0x26ce9ee412430a4e # load x3 with value 0x26ce9ee412430a4e
sw x3, 0(x2) # store 0x26ce9ee412430a4e in memory
flh f18, 0(x2) # load 0x26ce9ee412430a4e from memory into f18
fnmadd.h f20, f7, f10, f18 # perform operation

# Testcase cp_fs3 (Test source fs3 = f19)
la x2, scratch
li x3, 0x73b58ae0b5636eef # load x3 with value 0x73b58ae0b5636eef
sw x3, 0(x2) # store 0x73b58ae0b5636eef in memory
flh f26, 0(x2) # load 0x73b58ae0b5636eef from memory into f26
la x2, scratch
li x3, 0x89741ae57f26c5bd # load x3 with value 0x89741ae57f26c5bd
sw x3, 0(x2) # store 0x89741ae57f26c5bd in memory
flh f6, 0(x2) # load 0x89741ae57f26c5bd from memory into f6
la x2, scratch
li x3, 0xb7e5b264f2b7cd7f # load x3 with value 0xb7e5b264f2b7cd7f
sw x3, 0(x2) # store 0xb7e5b264f2b7cd7f in memory
flh f19, 0(x2) # load 0xb7e5b264f2b7cd7f from memory into f19
fnmadd.h f8, f26, f6, f19 # perform operation

# Testcase cp_fs3 (Test source fs3 = f20)
la x2, scratch
li x3, 0xda222ae14156d66d # load x3 with value 0xda222ae14156d66d
sw x3, 0(x2) # store 0xda222ae14156d66d in memory
flh f30, 0(x2) # load 0xda222ae14156d66d from memory into f30
la x2, scratch
li x3, 0xeee0ed4ebf886fae # load x3 with value 0xeee0ed4ebf886fae
sw x3, 0(x2) # store 0xeee0ed4ebf886fae in memory
flh f12, 0(x2) # load 0xeee0ed4ebf886fae from memory into f12
la x2, scratch
li x3, 0x8dcc3a723e05135f # load x3 with value 0x8dcc3a723e05135f
sw x3, 0(x2) # store 0x8dcc3a723e05135f in memory
flh f20, 0(x2) # load 0x8dcc3a723e05135f from memory into f20
fnmadd.h f15, f30, f12, f20 # perform operation

# Testcase cp_fs3 (Test source fs3 = f21)
la x2, scratch
li x3, 0x5a11020fac7e4123 # load x3 with value 0x5a11020fac7e4123
sw x3, 0(x2) # store 0x5a11020fac7e4123 in memory
flh f8, 0(x2) # load 0x5a11020fac7e4123 from memory into f8
la x2, scratch
li x3, 0x287d3684d38f9bee # load x3 with value 0x287d3684d38f9bee
sw x3, 0(x2) # store 0x287d3684d38f9bee in memory
flh f31, 0(x2) # load 0x287d3684d38f9bee from memory into f31
la x2, scratch
li x3, 0x38d79461d3fa32ee # load x3 with value 0x38d79461d3fa32ee
sw x3, 0(x2) # store 0x38d79461d3fa32ee in memory
flh f21, 0(x2) # load 0x38d79461d3fa32ee from memory into f21
fnmadd.h f10, f8, f31, f21 # perform operation

# Testcase cp_fs3 (Test source fs3 = f22)
la x2, scratch
li x3, 0x8a1ba75c9c805bca # load x3 with value 0x8a1ba75c9c805bca
sw x3, 0(x2) # store 0x8a1ba75c9c805bca in memory
flh f31, 0(x2) # load 0x8a1ba75c9c805bca from memory into f31
la x2, scratch
li x3, 0x6d60f0eb96d5aeb0 # load x3 with value 0x6d60f0eb96d5aeb0
sw x3, 0(x2) # store 0x6d60f0eb96d5aeb0 in memory
flh f9, 0(x2) # load 0x6d60f0eb96d5aeb0 from memory into f9
la x2, scratch
li x3, 0x17f97088835b8095 # load x3 with value 0x17f97088835b8095
sw x3, 0(x2) # store 0x17f97088835b8095 in memory
flh f22, 0(x2) # load 0x17f97088835b8095 from memory into f22
fnmadd.h f20, f31, f9, f22 # perform operation

# Testcase cp_fs3 (Test source fs3 = f23)
la x2, scratch
li x3, 0x864a8a5055684cfb # load x3 with value 0x864a8a5055684cfb
sw x3, 0(x2) # store 0x864a8a5055684cfb in memory
flh f5, 0(x2) # load 0x864a8a5055684cfb from memory into f5
la x2, scratch
li x3, 0xdb494af3e76ee064 # load x3 with value 0xdb494af3e76ee064
sw x3, 0(x2) # store 0xdb494af3e76ee064 in memory
flh f31, 0(x2) # load 0xdb494af3e76ee064 from memory into f31
la x2, scratch
li x3, 0xf2e34d24a272668c # load x3 with value 0xf2e34d24a272668c
sw x3, 0(x2) # store 0xf2e34d24a272668c in memory
flh f23, 0(x2) # load 0xf2e34d24a272668c from memory into f23
fnmadd.h f2, f5, f31, f23 # perform operation

# Testcase cp_fs3 (Test source fs3 = f24)
la x2, scratch
li x3, 0xb05cdb16eedfadb6 # load x3 with value 0xb05cdb16eedfadb6
sw x3, 0(x2) # store 0xb05cdb16eedfadb6 in memory
flh f21, 0(x2) # load 0xb05cdb16eedfadb6 from memory into f21
la x2, scratch
li x3, 0x81d9877078e9e1f8 # load x3 with value 0x81d9877078e9e1f8
sw x3, 0(x2) # store 0x81d9877078e9e1f8 in memory
flh f2, 0(x2) # load 0x81d9877078e9e1f8 from memory into f2
la x2, scratch
li x3, 0xbea700e434c7aa1e # load x3 with value 0xbea700e434c7aa1e
sw x3, 0(x2) # store 0xbea700e434c7aa1e in memory
flh f24, 0(x2) # load 0xbea700e434c7aa1e from memory into f24
fnmadd.h f3, f21, f2, f24 # perform operation

# Testcase cp_fs3 (Test source fs3 = f25)
la x2, scratch
li x3, 0x55df782845381ab0 # load x3 with value 0x55df782845381ab0
sw x3, 0(x2) # store 0x55df782845381ab0 in memory
flh f13, 0(x2) # load 0x55df782845381ab0 from memory into f13
la x2, scratch
li x3, 0x899251809b0cd9de # load x3 with value 0x899251809b0cd9de
sw x3, 0(x2) # store 0x899251809b0cd9de in memory
flh f1, 0(x2) # load 0x899251809b0cd9de from memory into f1
la x2, scratch
li x3, 0x37c0ddc9a602f8d6 # load x3 with value 0x37c0ddc9a602f8d6
sw x3, 0(x2) # store 0x37c0ddc9a602f8d6 in memory
flh f25, 0(x2) # load 0x37c0ddc9a602f8d6 from memory into f25
fnmadd.h f2, f13, f1, f25 # perform operation

# Testcase cp_fs3 (Test source fs3 = f26)
la x2, scratch
li x3, 0x531a3de10bc884f5 # load x3 with value 0x531a3de10bc884f5
sw x3, 0(x2) # store 0x531a3de10bc884f5 in memory
flh f2, 0(x2) # load 0x531a3de10bc884f5 from memory into f2
la x2, scratch
li x3, 0xd5b9f97b846b5ae9 # load x3 with value 0xd5b9f97b846b5ae9
sw x3, 0(x2) # store 0xd5b9f97b846b5ae9 in memory
flh f13, 0(x2) # load 0xd5b9f97b846b5ae9 from memory into f13
la x2, scratch
li x3, 0x6e3ce0a57525d1fe # load x3 with value 0x6e3ce0a57525d1fe
sw x3, 0(x2) # store 0x6e3ce0a57525d1fe in memory
flh f26, 0(x2) # load 0x6e3ce0a57525d1fe from memory into f26
fnmadd.h f22, f2, f13, f26 # perform operation

# Testcase cp_fs3 (Test source fs3 = f27)
la x2, scratch
li x3, 0x5a33caa3c24c2c9a # load x3 with value 0x5a33caa3c24c2c9a
sw x3, 0(x2) # store 0x5a33caa3c24c2c9a in memory
flh f25, 0(x2) # load 0x5a33caa3c24c2c9a from memory into f25
la x2, scratch
li x3, 0x12e806ffaebf0725 # load x3 with value 0x12e806ffaebf0725
sw x3, 0(x2) # store 0x12e806ffaebf0725 in memory
flh f13, 0(x2) # load 0x12e806ffaebf0725 from memory into f13
la x2, scratch
li x3, 0xb3df97ac3688e6fe # load x3 with value 0xb3df97ac3688e6fe
sw x3, 0(x2) # store 0xb3df97ac3688e6fe in memory
flh f27, 0(x2) # load 0xb3df97ac3688e6fe from memory into f27
fnmadd.h f28, f25, f13, f27 # perform operation

# Testcase cp_fs3 (Test source fs3 = f28)
la x2, scratch
li x3, 0xf41afc535c94181d # load x3 with value 0xf41afc535c94181d
sw x3, 0(x2) # store 0xf41afc535c94181d in memory
flh f7, 0(x2) # load 0xf41afc535c94181d from memory into f7
la x2, scratch
li x3, 0x2c3f0faecc347d4b # load x3 with value 0x2c3f0faecc347d4b
sw x3, 0(x2) # store 0x2c3f0faecc347d4b in memory
flh f31, 0(x2) # load 0x2c3f0faecc347d4b from memory into f31
la x2, scratch
li x3, 0xcd034969830666e # load x3 with value 0xcd034969830666e
sw x3, 0(x2) # store 0xcd034969830666e in memory
flh f28, 0(x2) # load 0xcd034969830666e from memory into f28
fnmadd.h f25, f7, f31, f28 # perform operation

# Testcase cp_fs3 (Test source fs3 = f29)
la x2, scratch
li x3, 0x556c976302414cad # load x3 with value 0x556c976302414cad
sw x3, 0(x2) # store 0x556c976302414cad in memory
flh f10, 0(x2) # load 0x556c976302414cad from memory into f10
la x2, scratch
li x3, 0xbf31597cff565c34 # load x3 with value 0xbf31597cff565c34
sw x3, 0(x2) # store 0xbf31597cff565c34 in memory
flh f15, 0(x2) # load 0xbf31597cff565c34 from memory into f15
la x2, scratch
li x3, 0xcb1099ff5c041455 # load x3 with value 0xcb1099ff5c041455
sw x3, 0(x2) # store 0xcb1099ff5c041455 in memory
flh f29, 0(x2) # load 0xcb1099ff5c041455 from memory into f29
fnmadd.h f25, f10, f15, f29 # perform operation

# Testcase cp_fs3 (Test source fs3 = f30)
la x2, scratch
li x3, 0x725feefb43227d42 # load x3 with value 0x725feefb43227d42
sw x3, 0(x2) # store 0x725feefb43227d42 in memory
flh f25, 0(x2) # load 0x725feefb43227d42 from memory into f25
la x2, scratch
li x3, 0x381e5fc6173edc9f # load x3 with value 0x381e5fc6173edc9f
sw x3, 0(x2) # store 0x381e5fc6173edc9f in memory
flh f8, 0(x2) # load 0x381e5fc6173edc9f from memory into f8
la x2, scratch
li x3, 0x6093d57b7fdf8d3c # load x3 with value 0x6093d57b7fdf8d3c
sw x3, 0(x2) # store 0x6093d57b7fdf8d3c in memory
flh f30, 0(x2) # load 0x6093d57b7fdf8d3c from memory into f30
fnmadd.h f5, f25, f8, f30 # perform operation

# Testcase cp_fs3 (Test source fs3 = f31)
la x2, scratch
li x3, 0x809cf961bc2a1b27 # load x3 with value 0x809cf961bc2a1b27
sw x3, 0(x2) # store 0x809cf961bc2a1b27 in memory
flh f7, 0(x2) # load 0x809cf961bc2a1b27 from memory into f7
la x2, scratch
li x3, 0x5cd1549e24190e3 # load x3 with value 0x5cd1549e24190e3
sw x3, 0(x2) # store 0x5cd1549e24190e3 in memory
flh f17, 0(x2) # load 0x5cd1549e24190e3 from memory into f17
la x2, scratch
li x3, 0x5c98766eb78028dd # load x3 with value 0x5c98766eb78028dd
sw x3, 0(x2) # store 0x5c98766eb78028dd in memory
flh f31, 0(x2) # load 0x5c98766eb78028dd from memory into f31
fnmadd.h f23, f7, f17, f31 # perform operation

# Testcase cp_fd (Test destination fd = x0)
la x2, scratch
li x3, 0x872cb83ab291d639 # load x3 with value 0x872cb83ab291d639
sw x3, 0(x2) # store 0x872cb83ab291d639 in memory
flh f29, 0(x2) # load 0x872cb83ab291d639 from memory into f29
la x2, scratch
li x3, 0x82d4821524855683 # load x3 with value 0x82d4821524855683
sw x3, 0(x2) # store 0x82d4821524855683 in memory
flh f14, 0(x2) # load 0x82d4821524855683 from memory into f14
la x2, scratch
li x3, 0xe62188396b09788a # load x3 with value 0xe62188396b09788a
sw x3, 0(x2) # store 0xe62188396b09788a in memory
flh f8, 0(x2) # load 0xe62188396b09788a from memory into f8
fnmadd.h f0, f29, f14, f8 # perform operation

# Testcase cp_fd (Test destination fd = x1)
la x2, scratch
li x3, 0xce5e05405c18b0a1 # load x3 with value 0xce5e05405c18b0a1
sw x3, 0(x2) # store 0xce5e05405c18b0a1 in memory
flh f20, 0(x2) # load 0xce5e05405c18b0a1 from memory into f20
la x2, scratch
li x3, 0xbd93f5e238405907 # load x3 with value 0xbd93f5e238405907
sw x3, 0(x2) # store 0xbd93f5e238405907 in memory
flh f2, 0(x2) # load 0xbd93f5e238405907 from memory into f2
la x2, scratch
li x3, 0x583f0c418a7b091f # load x3 with value 0x583f0c418a7b091f
sw x3, 0(x2) # store 0x583f0c418a7b091f in memory
flh f31, 0(x2) # load 0x583f0c418a7b091f from memory into f31
fnmadd.h f1, f20, f2, f31 # perform operation

# Testcase cp_fd (Test destination fd = x2)
la x2, scratch
li x3, 0x78a4202a4eff5d1a # load x3 with value 0x78a4202a4eff5d1a
sw x3, 0(x2) # store 0x78a4202a4eff5d1a in memory
flh f1, 0(x2) # load 0x78a4202a4eff5d1a from memory into f1
la x2, scratch
li x3, 0x3a15f7d1f2093e6d # load x3 with value 0x3a15f7d1f2093e6d
sw x3, 0(x2) # store 0x3a15f7d1f2093e6d in memory
flh f24, 0(x2) # load 0x3a15f7d1f2093e6d from memory into f24
la x2, scratch
li x3, 0x1c6bc4f438524eb7 # load x3 with value 0x1c6bc4f438524eb7
sw x3, 0(x2) # store 0x1c6bc4f438524eb7 in memory
flh f7, 0(x2) # load 0x1c6bc4f438524eb7 from memory into f7
fnmadd.h f2, f1, f24, f7 # perform operation

# Testcase cp_fd (Test destination fd = x3)
la x2, scratch
li x3, 0x79504d04a25d3798 # load x3 with value 0x79504d04a25d3798
sw x3, 0(x2) # store 0x79504d04a25d3798 in memory
flh f29, 0(x2) # load 0x79504d04a25d3798 from memory into f29
la x2, scratch
li x3, 0xe3fec9bea1505b51 # load x3 with value 0xe3fec9bea1505b51
sw x3, 0(x2) # store 0xe3fec9bea1505b51 in memory
flh f2, 0(x2) # load 0xe3fec9bea1505b51 from memory into f2
la x2, scratch
li x3, 0x702a6809a6a16725 # load x3 with value 0x702a6809a6a16725
sw x3, 0(x2) # store 0x702a6809a6a16725 in memory
flh f25, 0(x2) # load 0x702a6809a6a16725 from memory into f25
fnmadd.h f3, f29, f2, f25 # perform operation

# Testcase cp_fd (Test destination fd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xdaf43e3f5a51a8f3 # load x3 with value 0xdaf43e3f5a51a8f3
sw x3, 0(x2) # store 0xdaf43e3f5a51a8f3 in memory
flh f2, 0(x2) # load 0xdaf43e3f5a51a8f3 from memory into f2
la x2, scratch
li x3, 0x5a52fd8f2a17c917 # load x3 with value 0x5a52fd8f2a17c917
sw x3, 0(x2) # store 0x5a52fd8f2a17c917 in memory
flh f11, 0(x2) # load 0x5a52fd8f2a17c917 from memory into f11
la x2, scratch
li x3, 0xde0483c8edd808d3 # load x3 with value 0xde0483c8edd808d3
sw x3, 0(x2) # store 0xde0483c8edd808d3 in memory
flh f30, 0(x2) # load 0xde0483c8edd808d3 from memory into f30
fnmadd.h f4, f2, f11, f30 # perform operation

# Testcase cp_fd (Test destination fd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xd6e70df6f3814459 # load x3 with value 0xd6e70df6f3814459
sw x3, 0(x2) # store 0xd6e70df6f3814459 in memory
flh f2, 0(x2) # load 0xd6e70df6f3814459 from memory into f2
la x2, scratch
li x3, 0xd634c5715ed86e5e # load x3 with value 0xd634c5715ed86e5e
sw x3, 0(x2) # store 0xd634c5715ed86e5e in memory
flh f3, 0(x2) # load 0xd634c5715ed86e5e from memory into f3
la x2, scratch
li x3, 0xb707b28eabc8e88a # load x3 with value 0xb707b28eabc8e88a
sw x3, 0(x2) # store 0xb707b28eabc8e88a in memory
flh f20, 0(x2) # load 0xb707b28eabc8e88a from memory into f20
fnmadd.h f5, f2, f3, f20 # perform operation

# Testcase cp_fd (Test destination fd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x8c1927ab99630f70 # load x3 with value 0x8c1927ab99630f70
sw x3, 0(x2) # store 0x8c1927ab99630f70 in memory
flh f3, 0(x2) # load 0x8c1927ab99630f70 from memory into f3
la x2, scratch
li x3, 0x80e3ff05207af40e # load x3 with value 0x80e3ff05207af40e
sw x3, 0(x2) # store 0x80e3ff05207af40e in memory
flh f20, 0(x2) # load 0x80e3ff05207af40e from memory into f20
la x2, scratch
li x3, 0x45da6a676445ce5f # load x3 with value 0x45da6a676445ce5f
sw x3, 0(x2) # store 0x45da6a676445ce5f in memory
flh f29, 0(x2) # load 0x45da6a676445ce5f from memory into f29
fnmadd.h f6, f3, f20, f29 # perform operation

# Testcase cp_fd (Test destination fd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x32afaa3c0f6b5074 # load x3 with value 0x32afaa3c0f6b5074
sw x3, 0(x2) # store 0x32afaa3c0f6b5074 in memory
flh f6, 0(x2) # load 0x32afaa3c0f6b5074 from memory into f6
la x2, scratch
li x3, 0x87fcd656f3849744 # load x3 with value 0x87fcd656f3849744
sw x3, 0(x2) # store 0x87fcd656f3849744 in memory
flh f18, 0(x2) # load 0x87fcd656f3849744 from memory into f18
la x2, scratch
li x3, 0x68d204a3c3587e7f # load x3 with value 0x68d204a3c3587e7f
sw x3, 0(x2) # store 0x68d204a3c3587e7f in memory
flh f12, 0(x2) # load 0x68d204a3c3587e7f from memory into f12
fnmadd.h f7, f6, f18, f12 # perform operation

# Testcase cp_fd (Test destination fd = x8)
la x2, scratch
li x3, 0x3074a397acecade4 # load x3 with value 0x3074a397acecade4
sw x3, 0(x2) # store 0x3074a397acecade4 in memory
flh f31, 0(x2) # load 0x3074a397acecade4 from memory into f31
la x2, scratch
li x3, 0xe0403074fe5bfe6d # load x3 with value 0xe0403074fe5bfe6d
sw x3, 0(x2) # store 0xe0403074fe5bfe6d in memory
flh f2, 0(x2) # load 0xe0403074fe5bfe6d from memory into f2
la x2, scratch
li x3, 0x838d328c7c8da617 # load x3 with value 0x838d328c7c8da617
sw x3, 0(x2) # store 0x838d328c7c8da617 in memory
flh f30, 0(x2) # load 0x838d328c7c8da617 from memory into f30
fnmadd.h f8, f31, f2, f30 # perform operation

# Testcase cp_fd (Test destination fd = x9)
la x2, scratch
li x3, 0xe7a91a50253ea362 # load x3 with value 0xe7a91a50253ea362
sw x3, 0(x2) # store 0xe7a91a50253ea362 in memory
flh f10, 0(x2) # load 0xe7a91a50253ea362 from memory into f10
la x2, scratch
li x3, 0x37d2a39c2d1728a9 # load x3 with value 0x37d2a39c2d1728a9
sw x3, 0(x2) # store 0x37d2a39c2d1728a9 in memory
flh f18, 0(x2) # load 0x37d2a39c2d1728a9 from memory into f18
la x2, scratch
li x3, 0x528cb9e34bd84979 # load x3 with value 0x528cb9e34bd84979
sw x3, 0(x2) # store 0x528cb9e34bd84979 in memory
flh f8, 0(x2) # load 0x528cb9e34bd84979 from memory into f8
fnmadd.h f9, f10, f18, f8 # perform operation

# Testcase cp_fd (Test destination fd = x10)
la x2, scratch
li x3, 0x55c315baf0115b96 # load x3 with value 0x55c315baf0115b96
sw x3, 0(x2) # store 0x55c315baf0115b96 in memory
flh f22, 0(x2) # load 0x55c315baf0115b96 from memory into f22
la x2, scratch
li x3, 0x7e2f98bf9e44266c # load x3 with value 0x7e2f98bf9e44266c
sw x3, 0(x2) # store 0x7e2f98bf9e44266c in memory
flh f21, 0(x2) # load 0x7e2f98bf9e44266c from memory into f21
la x2, scratch
li x3, 0xeb7e59e6cdecca23 # load x3 with value 0xeb7e59e6cdecca23
sw x3, 0(x2) # store 0xeb7e59e6cdecca23 in memory
flh f7, 0(x2) # load 0xeb7e59e6cdecca23 from memory into f7
fnmadd.h f10, f22, f21, f7 # perform operation

# Testcase cp_fd (Test destination fd = x11)
la x2, scratch
li x3, 0xd888b59aa3c1ecc # load x3 with value 0xd888b59aa3c1ecc
sw x3, 0(x2) # store 0xd888b59aa3c1ecc in memory
flh f7, 0(x2) # load 0xd888b59aa3c1ecc from memory into f7
la x2, scratch
li x3, 0x70750ca0fdc5732f # load x3 with value 0x70750ca0fdc5732f
sw x3, 0(x2) # store 0x70750ca0fdc5732f in memory
flh f2, 0(x2) # load 0x70750ca0fdc5732f from memory into f2
la x2, scratch
li x3, 0xdd42268736d430b2 # load x3 with value 0xdd42268736d430b2
sw x3, 0(x2) # store 0xdd42268736d430b2 in memory
flh f12, 0(x2) # load 0xdd42268736d430b2 from memory into f12
fnmadd.h f11, f7, f2, f12 # perform operation

# Testcase cp_fd (Test destination fd = x12)
la x2, scratch
li x3, 0xc2ed5f65b1fe2200 # load x3 with value 0xc2ed5f65b1fe2200
sw x3, 0(x2) # store 0xc2ed5f65b1fe2200 in memory
flh f21, 0(x2) # load 0xc2ed5f65b1fe2200 from memory into f21
la x2, scratch
li x3, 0x792886daab76e645 # load x3 with value 0x792886daab76e645
sw x3, 0(x2) # store 0x792886daab76e645 in memory
flh f28, 0(x2) # load 0x792886daab76e645 from memory into f28
la x2, scratch
li x3, 0x43e29f5781ef776b # load x3 with value 0x43e29f5781ef776b
sw x3, 0(x2) # store 0x43e29f5781ef776b in memory
flh f27, 0(x2) # load 0x43e29f5781ef776b from memory into f27
fnmadd.h f12, f21, f28, f27 # perform operation

# Testcase cp_fd (Test destination fd = x13)
la x2, scratch
li x3, 0xc3a81cb7ba31e3b5 # load x3 with value 0xc3a81cb7ba31e3b5
sw x3, 0(x2) # store 0xc3a81cb7ba31e3b5 in memory
flh f23, 0(x2) # load 0xc3a81cb7ba31e3b5 from memory into f23
la x2, scratch
li x3, 0xfb946517e7e46264 # load x3 with value 0xfb946517e7e46264
sw x3, 0(x2) # store 0xfb946517e7e46264 in memory
flh f1, 0(x2) # load 0xfb946517e7e46264 from memory into f1
la x2, scratch
li x3, 0xcd85b913c58db7b8 # load x3 with value 0xcd85b913c58db7b8
sw x3, 0(x2) # store 0xcd85b913c58db7b8 in memory
flh f3, 0(x2) # load 0xcd85b913c58db7b8 from memory into f3
fnmadd.h f13, f23, f1, f3 # perform operation

# Testcase cp_fd (Test destination fd = x14)
la x2, scratch
li x3, 0x77b08d74e90998cd # load x3 with value 0x77b08d74e90998cd
sw x3, 0(x2) # store 0x77b08d74e90998cd in memory
flh f31, 0(x2) # load 0x77b08d74e90998cd from memory into f31
la x2, scratch
li x3, 0xb6f10df77d4b75e2 # load x3 with value 0xb6f10df77d4b75e2
sw x3, 0(x2) # store 0xb6f10df77d4b75e2 in memory
flh f28, 0(x2) # load 0xb6f10df77d4b75e2 from memory into f28
la x2, scratch
li x3, 0xeeb135bcaab26e # load x3 with value 0xeeb135bcaab26e
sw x3, 0(x2) # store 0xeeb135bcaab26e in memory
flh f14, 0(x2) # load 0xeeb135bcaab26e from memory into f14
fnmadd.h f14, f31, f28, f14 # perform operation

# Testcase cp_fd (Test destination fd = x15)
la x2, scratch
li x3, 0xbe1708d6ac86ce16 # load x3 with value 0xbe1708d6ac86ce16
sw x3, 0(x2) # store 0xbe1708d6ac86ce16 in memory
flh f14, 0(x2) # load 0xbe1708d6ac86ce16 from memory into f14
la x2, scratch
li x3, 0xefd0cdde81b1d249 # load x3 with value 0xefd0cdde81b1d249
sw x3, 0(x2) # store 0xefd0cdde81b1d249 in memory
flh f3, 0(x2) # load 0xefd0cdde81b1d249 from memory into f3
la x2, scratch
li x3, 0x6bbae1bdbc65b952 # load x3 with value 0x6bbae1bdbc65b952
sw x3, 0(x2) # store 0x6bbae1bdbc65b952 in memory
flh f17, 0(x2) # load 0x6bbae1bdbc65b952 from memory into f17
fnmadd.h f15, f14, f3, f17 # perform operation

# Testcase cp_fd (Test destination fd = x16)
la x2, scratch
li x3, 0xaf0cec311ecfdb9b # load x3 with value 0xaf0cec311ecfdb9b
sw x3, 0(x2) # store 0xaf0cec311ecfdb9b in memory
flh f2, 0(x2) # load 0xaf0cec311ecfdb9b from memory into f2
la x2, scratch
li x3, 0x709199c3214770c1 # load x3 with value 0x709199c3214770c1
sw x3, 0(x2) # store 0x709199c3214770c1 in memory
flh f28, 0(x2) # load 0x709199c3214770c1 from memory into f28
la x2, scratch
li x3, 0x371dfcc01168bfed # load x3 with value 0x371dfcc01168bfed
sw x3, 0(x2) # store 0x371dfcc01168bfed in memory
flh f30, 0(x2) # load 0x371dfcc01168bfed from memory into f30
fnmadd.h f16, f2, f28, f30 # perform operation

# Testcase cp_fd (Test destination fd = x17)
la x2, scratch
li x3, 0x895fdf835020ff1b # load x3 with value 0x895fdf835020ff1b
sw x3, 0(x2) # store 0x895fdf835020ff1b in memory
flh f2, 0(x2) # load 0x895fdf835020ff1b from memory into f2
la x2, scratch
li x3, 0x3256c457d13f7a5c # load x3 with value 0x3256c457d13f7a5c
sw x3, 0(x2) # store 0x3256c457d13f7a5c in memory
flh f11, 0(x2) # load 0x3256c457d13f7a5c from memory into f11
la x2, scratch
li x3, 0x25f7f9c63160d5a1 # load x3 with value 0x25f7f9c63160d5a1
sw x3, 0(x2) # store 0x25f7f9c63160d5a1 in memory
flh f27, 0(x2) # load 0x25f7f9c63160d5a1 from memory into f27
fnmadd.h f17, f2, f11, f27 # perform operation

# Testcase cp_fd (Test destination fd = x18)
la x2, scratch
li x3, 0x793cfb4bdfd72864 # load x3 with value 0x793cfb4bdfd72864
sw x3, 0(x2) # store 0x793cfb4bdfd72864 in memory
flh f5, 0(x2) # load 0x793cfb4bdfd72864 from memory into f5
la x2, scratch
li x3, 0x384f57e2f3b52e5a # load x3 with value 0x384f57e2f3b52e5a
sw x3, 0(x2) # store 0x384f57e2f3b52e5a in memory
flh f10, 0(x2) # load 0x384f57e2f3b52e5a from memory into f10
la x2, scratch
li x3, 0xaffa4169b2340fd9 # load x3 with value 0xaffa4169b2340fd9
sw x3, 0(x2) # store 0xaffa4169b2340fd9 in memory
flh f13, 0(x2) # load 0xaffa4169b2340fd9 from memory into f13
fnmadd.h f18, f5, f10, f13 # perform operation

# Testcase cp_fd (Test destination fd = x19)
la x2, scratch
li x3, 0x53bff11c0ccc2b0c # load x3 with value 0x53bff11c0ccc2b0c
sw x3, 0(x2) # store 0x53bff11c0ccc2b0c in memory
flh f25, 0(x2) # load 0x53bff11c0ccc2b0c from memory into f25
la x2, scratch
li x3, 0xb7c280c6d088befd # load x3 with value 0xb7c280c6d088befd
sw x3, 0(x2) # store 0xb7c280c6d088befd in memory
flh f12, 0(x2) # load 0xb7c280c6d088befd from memory into f12
la x2, scratch
li x3, 0xbcaf57360b4db6a6 # load x3 with value 0xbcaf57360b4db6a6
sw x3, 0(x2) # store 0xbcaf57360b4db6a6 in memory
flh f3, 0(x2) # load 0xbcaf57360b4db6a6 from memory into f3
fnmadd.h f19, f25, f12, f3 # perform operation

# Testcase cp_fd (Test destination fd = x20)
la x2, scratch
li x3, 0xfd1110c81e411255 # load x3 with value 0xfd1110c81e411255
sw x3, 0(x2) # store 0xfd1110c81e411255 in memory
flh f13, 0(x2) # load 0xfd1110c81e411255 from memory into f13
la x2, scratch
li x3, 0x93e1b7201f7626c6 # load x3 with value 0x93e1b7201f7626c6
sw x3, 0(x2) # store 0x93e1b7201f7626c6 in memory
flh f28, 0(x2) # load 0x93e1b7201f7626c6 from memory into f28
la x2, scratch
li x3, 0x137c7e86e6754919 # load x3 with value 0x137c7e86e6754919
sw x3, 0(x2) # store 0x137c7e86e6754919 in memory
flh f18, 0(x2) # load 0x137c7e86e6754919 from memory into f18
fnmadd.h f20, f13, f28, f18 # perform operation

# Testcase cp_fd (Test destination fd = x21)
la x2, scratch
li x3, 0xb00beb4b9df66914 # load x3 with value 0xb00beb4b9df66914
sw x3, 0(x2) # store 0xb00beb4b9df66914 in memory
flh f2, 0(x2) # load 0xb00beb4b9df66914 from memory into f2
la x2, scratch
li x3, 0x5409c76f1dd30f11 # load x3 with value 0x5409c76f1dd30f11
sw x3, 0(x2) # store 0x5409c76f1dd30f11 in memory
flh f27, 0(x2) # load 0x5409c76f1dd30f11 from memory into f27
la x2, scratch
li x3, 0xeb83945fb7d248c # load x3 with value 0xeb83945fb7d248c
sw x3, 0(x2) # store 0xeb83945fb7d248c in memory
flh f12, 0(x2) # load 0xeb83945fb7d248c from memory into f12
fnmadd.h f21, f2, f27, f12 # perform operation

# Testcase cp_fd (Test destination fd = x22)
la x2, scratch
li x3, 0x73425b6e00301122 # load x3 with value 0x73425b6e00301122
sw x3, 0(x2) # store 0x73425b6e00301122 in memory
flh f13, 0(x2) # load 0x73425b6e00301122 from memory into f13
la x2, scratch
li x3, 0xb191d985abc31176 # load x3 with value 0xb191d985abc31176
sw x3, 0(x2) # store 0xb191d985abc31176 in memory
flh f11, 0(x2) # load 0xb191d985abc31176 from memory into f11
la x2, scratch
li x3, 0xb83e772de985ff3 # load x3 with value 0xb83e772de985ff3
sw x3, 0(x2) # store 0xb83e772de985ff3 in memory
flh f29, 0(x2) # load 0xb83e772de985ff3 from memory into f29
fnmadd.h f22, f13, f11, f29 # perform operation

# Testcase cp_fd (Test destination fd = x23)
la x2, scratch
li x3, 0x238b43c8a63878da # load x3 with value 0x238b43c8a63878da
sw x3, 0(x2) # store 0x238b43c8a63878da in memory
flh f2, 0(x2) # load 0x238b43c8a63878da from memory into f2
la x2, scratch
li x3, 0x317964ebb6b8d409 # load x3 with value 0x317964ebb6b8d409
sw x3, 0(x2) # store 0x317964ebb6b8d409 in memory
flh f16, 0(x2) # load 0x317964ebb6b8d409 from memory into f16
la x2, scratch
li x3, 0x44d3bd6891513170 # load x3 with value 0x44d3bd6891513170
sw x3, 0(x2) # store 0x44d3bd6891513170 in memory
flh f5, 0(x2) # load 0x44d3bd6891513170 from memory into f5
fnmadd.h f23, f2, f16, f5 # perform operation

# Testcase cp_fd (Test destination fd = x24)
la x2, scratch
li x3, 0x5f38669640839b76 # load x3 with value 0x5f38669640839b76
sw x3, 0(x2) # store 0x5f38669640839b76 in memory
flh f12, 0(x2) # load 0x5f38669640839b76 from memory into f12
la x2, scratch
li x3, 0x277e40a6315d53c5 # load x3 with value 0x277e40a6315d53c5
sw x3, 0(x2) # store 0x277e40a6315d53c5 in memory
flh f26, 0(x2) # load 0x277e40a6315d53c5 from memory into f26
la x2, scratch
li x3, 0x3faeefe8475e5983 # load x3 with value 0x3faeefe8475e5983
sw x3, 0(x2) # store 0x3faeefe8475e5983 in memory
flh f30, 0(x2) # load 0x3faeefe8475e5983 from memory into f30
fnmadd.h f24, f12, f26, f30 # perform operation

# Testcase cp_fd (Test destination fd = x25)
la x2, scratch
li x3, 0xb37f028b2287f908 # load x3 with value 0xb37f028b2287f908
sw x3, 0(x2) # store 0xb37f028b2287f908 in memory
flh f17, 0(x2) # load 0xb37f028b2287f908 from memory into f17
la x2, scratch
li x3, 0x8406c3184477906b # load x3 with value 0x8406c3184477906b
sw x3, 0(x2) # store 0x8406c3184477906b in memory
flh f28, 0(x2) # load 0x8406c3184477906b from memory into f28
la x2, scratch
li x3, 0xc6039b209b39ee98 # load x3 with value 0xc6039b209b39ee98
sw x3, 0(x2) # store 0xc6039b209b39ee98 in memory
flh f3, 0(x2) # load 0xc6039b209b39ee98 from memory into f3
fnmadd.h f25, f17, f28, f3 # perform operation

# Testcase cp_fd (Test destination fd = x26)
la x2, scratch
li x3, 0x36d1fcb75a99f51c # load x3 with value 0x36d1fcb75a99f51c
sw x3, 0(x2) # store 0x36d1fcb75a99f51c in memory
flh f23, 0(x2) # load 0x36d1fcb75a99f51c from memory into f23
la x2, scratch
li x3, 0x10457254bed5ac1e # load x3 with value 0x10457254bed5ac1e
sw x3, 0(x2) # store 0x10457254bed5ac1e in memory
flh f20, 0(x2) # load 0x10457254bed5ac1e from memory into f20
la x2, scratch
li x3, 0x7b3f26314e35d077 # load x3 with value 0x7b3f26314e35d077
sw x3, 0(x2) # store 0x7b3f26314e35d077 in memory
flh f29, 0(x2) # load 0x7b3f26314e35d077 from memory into f29
fnmadd.h f26, f23, f20, f29 # perform operation

# Testcase cp_fd (Test destination fd = x27)
la x2, scratch
li x3, 0xa2616cb234eb494b # load x3 with value 0xa2616cb234eb494b
sw x3, 0(x2) # store 0xa2616cb234eb494b in memory
flh f1, 0(x2) # load 0xa2616cb234eb494b from memory into f1
la x2, scratch
li x3, 0x6c404e98446203b0 # load x3 with value 0x6c404e98446203b0
sw x3, 0(x2) # store 0x6c404e98446203b0 in memory
flh f6, 0(x2) # load 0x6c404e98446203b0 from memory into f6
la x2, scratch
li x3, 0xd4744ad379e0b080 # load x3 with value 0xd4744ad379e0b080
sw x3, 0(x2) # store 0xd4744ad379e0b080 in memory
flh f21, 0(x2) # load 0xd4744ad379e0b080 from memory into f21
fnmadd.h f27, f1, f6, f21 # perform operation

# Testcase cp_fd (Test destination fd = x28)
la x2, scratch
li x3, 0xa5d557192378ef4c # load x3 with value 0xa5d557192378ef4c
sw x3, 0(x2) # store 0xa5d557192378ef4c in memory
flh f13, 0(x2) # load 0xa5d557192378ef4c from memory into f13
la x2, scratch
li x3, 0xae45c56624f90b79 # load x3 with value 0xae45c56624f90b79
sw x3, 0(x2) # store 0xae45c56624f90b79 in memory
flh f22, 0(x2) # load 0xae45c56624f90b79 from memory into f22
la x2, scratch
li x3, 0x47e7e2b3f0e1b687 # load x3 with value 0x47e7e2b3f0e1b687
sw x3, 0(x2) # store 0x47e7e2b3f0e1b687 in memory
flh f9, 0(x2) # load 0x47e7e2b3f0e1b687 from memory into f9
fnmadd.h f28, f13, f22, f9 # perform operation

# Testcase cp_fd (Test destination fd = x29)
la x2, scratch
li x3, 0x344b6ebb45d01a19 # load x3 with value 0x344b6ebb45d01a19
sw x3, 0(x2) # store 0x344b6ebb45d01a19 in memory
flh f19, 0(x2) # load 0x344b6ebb45d01a19 from memory into f19
la x2, scratch
li x3, 0x2e3114622ae45f14 # load x3 with value 0x2e3114622ae45f14
sw x3, 0(x2) # store 0x2e3114622ae45f14 in memory
flh f16, 0(x2) # load 0x2e3114622ae45f14 from memory into f16
la x2, scratch
li x3, 0x179060a12170751d # load x3 with value 0x179060a12170751d
sw x3, 0(x2) # store 0x179060a12170751d in memory
flh f28, 0(x2) # load 0x179060a12170751d from memory into f28
fnmadd.h f29, f19, f16, f28 # perform operation

# Testcase cp_fd (Test destination fd = x30)
la x2, scratch
li x3, 0x3fb72fd1e82af686 # load x3 with value 0x3fb72fd1e82af686
sw x3, 0(x2) # store 0x3fb72fd1e82af686 in memory
flh f3, 0(x2) # load 0x3fb72fd1e82af686 from memory into f3
la x2, scratch
li x3, 0x997a736652e260ba # load x3 with value 0x997a736652e260ba
sw x3, 0(x2) # store 0x997a736652e260ba in memory
flh f29, 0(x2) # load 0x997a736652e260ba from memory into f29
la x2, scratch
li x3, 0xc7affb9b617fb0fc # load x3 with value 0xc7affb9b617fb0fc
sw x3, 0(x2) # store 0xc7affb9b617fb0fc in memory
flh f23, 0(x2) # load 0xc7affb9b617fb0fc from memory into f23
fnmadd.h f30, f3, f29, f23 # perform operation

# Testcase cp_fd (Test destination fd = x31)
la x2, scratch
li x3, 0x9d794bba91264808 # load x3 with value 0x9d794bba91264808
sw x3, 0(x2) # store 0x9d794bba91264808 in memory
flh f14, 0(x2) # load 0x9d794bba91264808 from memory into f14
la x2, scratch
li x3, 0xee8b880cf797a0d1 # load x3 with value 0xee8b880cf797a0d1
sw x3, 0(x2) # store 0xee8b880cf797a0d1 in memory
flh f8, 0(x2) # load 0xee8b880cf797a0d1 from memory into f8
la x2, scratch
li x3, 0x2db551976ff163bd # load x3 with value 0x2db551976ff163bd
sw x3, 0(x2) # store 0x2db551976ff163bd in memory
flh f30, 0(x2) # load 0x2db551976ff163bd from memory into f30
fnmadd.h f31, f14, f8, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x61b69b8875b2900 # load x3 with value 0x61b69b8875b2900
sw x3, 0(x2) # store 0x61b69b8875b2900 in memory
flh f10, 0(x2) # load 0x61b69b8875b2900 from memory into f10
la x2, scratch
li x3, 0xfda8ed6efa8cdc7b # load x3 with value 0xfda8ed6efa8cdc7b
sw x3, 0(x2) # store 0xfda8ed6efa8cdc7b in memory
flh f30, 0(x2) # load 0xfda8ed6efa8cdc7b from memory into f30
fnmadd.h f5, f21, f10, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f16, 0(x2) # load 0x00008000 from memory into f16
la x2, scratch
li x3, 0xc02441239e1f22d6 # load x3 with value 0xc02441239e1f22d6
sw x3, 0(x2) # store 0xc02441239e1f22d6 in memory
flh f6, 0(x2) # load 0xc02441239e1f22d6 from memory into f6
la x2, scratch
li x3, 0x71794f028c899bd3 # load x3 with value 0x71794f028c899bd3
sw x3, 0(x2) # store 0x71794f028c899bd3 in memory
flh f31, 0(x2) # load 0x71794f028c899bd3 from memory into f31
fnmadd.h f24, f16, f6, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f12, 0(x2) # load 0x00003c00 from memory into f12
la x2, scratch
li x3, 0xb063d886f400d6e4 # load x3 with value 0xb063d886f400d6e4
sw x3, 0(x2) # store 0xb063d886f400d6e4 in memory
flh f15, 0(x2) # load 0xb063d886f400d6e4 from memory into f15
la x2, scratch
li x3, 0x1ee3f85e37b268b9 # load x3 with value 0x1ee3f85e37b268b9
sw x3, 0(x2) # store 0x1ee3f85e37b268b9 in memory
flh f11, 0(x2) # load 0x1ee3f85e37b268b9 from memory into f11
fnmadd.h f25, f12, f15, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f3, 0(x2) # load 0x0000bc00 from memory into f3
la x2, scratch
li x3, 0x3838242084c067a4 # load x3 with value 0x3838242084c067a4
sw x3, 0(x2) # store 0x3838242084c067a4 in memory
flh f2, 0(x2) # load 0x3838242084c067a4 from memory into f2
la x2, scratch
li x3, 0x5fa3648928e731fa # load x3 with value 0x5fa3648928e731fa
sw x3, 0(x2) # store 0x5fa3648928e731fa in memory
flh f13, 0(x2) # load 0x5fa3648928e731fa from memory into f13
fnmadd.h f10, f3, f2, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f18, 0(x2) # load 0x00003e00 from memory into f18
la x2, scratch
li x3, 0xfb0ca22fe0b7ecb5 # load x3 with value 0xfb0ca22fe0b7ecb5
sw x3, 0(x2) # store 0xfb0ca22fe0b7ecb5 in memory
flh f7, 0(x2) # load 0xfb0ca22fe0b7ecb5 from memory into f7
la x2, scratch
li x3, 0x750ec71455d222d7 # load x3 with value 0x750ec71455d222d7
sw x3, 0(x2) # store 0x750ec71455d222d7 in memory
flh f21, 0(x2) # load 0x750ec71455d222d7 from memory into f21
fnmadd.h f27, f18, f7, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f16, 0(x2) # load 0x0000be00 from memory into f16
la x2, scratch
li x3, 0x258423ea9bec78a6 # load x3 with value 0x258423ea9bec78a6
sw x3, 0(x2) # store 0x258423ea9bec78a6 in memory
flh f17, 0(x2) # load 0x258423ea9bec78a6 from memory into f17
la x2, scratch
li x3, 0x32cd6131a1eb768c # load x3 with value 0x32cd6131a1eb768c
sw x3, 0(x2) # store 0x32cd6131a1eb768c in memory
flh f22, 0(x2) # load 0x32cd6131a1eb768c from memory into f22
fnmadd.h f12, f16, f17, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
la x2, scratch
li x3, 0x17a79c2b2703260f # load x3 with value 0x17a79c2b2703260f
sw x3, 0(x2) # store 0x17a79c2b2703260f in memory
flh f2, 0(x2) # load 0x17a79c2b2703260f from memory into f2
la x2, scratch
li x3, 0x8c538ba40ee44fdd # load x3 with value 0x8c538ba40ee44fdd
sw x3, 0(x2) # store 0x8c538ba40ee44fdd in memory
flh f12, 0(x2) # load 0x8c538ba40ee44fdd from memory into f12
fnmadd.h f10, f23, f2, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f27, 0(x2) # load 0x0000c000 from memory into f27
la x2, scratch
li x3, 0x9e00fa8a98883d3a # load x3 with value 0x9e00fa8a98883d3a
sw x3, 0(x2) # store 0x9e00fa8a98883d3a in memory
flh f12, 0(x2) # load 0x9e00fa8a98883d3a from memory into f12
la x2, scratch
li x3, 0x894098c4988fa63 # load x3 with value 0x894098c4988fa63
sw x3, 0(x2) # store 0x894098c4988fa63 in memory
flh f6, 0(x2) # load 0x894098c4988fa63 from memory into f6
fnmadd.h f10, f27, f12, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f31, 0(x2) # load 0x00000400 from memory into f31
la x2, scratch
li x3, 0xfce5af771d7ce01b # load x3 with value 0xfce5af771d7ce01b
sw x3, 0(x2) # store 0xfce5af771d7ce01b in memory
flh f21, 0(x2) # load 0xfce5af771d7ce01b from memory into f21
la x2, scratch
li x3, 0x12b4d286412c567d # load x3 with value 0x12b4d286412c567d
sw x3, 0(x2) # store 0x12b4d286412c567d in memory
flh f25, 0(x2) # load 0x12b4d286412c567d from memory into f25
fnmadd.h f16, f31, f21, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f23, 0(x2) # load 0x00008400 from memory into f23
la x2, scratch
li x3, 0x5e9b12177c1b1eed # load x3 with value 0x5e9b12177c1b1eed
sw x3, 0(x2) # store 0x5e9b12177c1b1eed in memory
flh f24, 0(x2) # load 0x5e9b12177c1b1eed from memory into f24
la x2, scratch
li x3, 0xf5823f0787b8416b # load x3 with value 0xf5823f0787b8416b
sw x3, 0(x2) # store 0xf5823f0787b8416b in memory
flh f9, 0(x2) # load 0xf5823f0787b8416b from memory into f9
fnmadd.h f8, f23, f24, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f23, 0(x2) # load 0x00007bff from memory into f23
la x2, scratch
li x3, 0x538a1e53ac558959 # load x3 with value 0x538a1e53ac558959
sw x3, 0(x2) # store 0x538a1e53ac558959 in memory
flh f10, 0(x2) # load 0x538a1e53ac558959 from memory into f10
la x2, scratch
li x3, 0xd58723634c6bcffa # load x3 with value 0xd58723634c6bcffa
sw x3, 0(x2) # store 0xd58723634c6bcffa in memory
flh f12, 0(x2) # load 0xd58723634c6bcffa from memory into f12
fnmadd.h f16, f23, f10, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f3, 0(x2) # load 0x0000fbff from memory into f3
la x2, scratch
li x3, 0xf5436b598f582ff6 # load x3 with value 0xf5436b598f582ff6
sw x3, 0(x2) # store 0xf5436b598f582ff6 in memory
flh f13, 0(x2) # load 0xf5436b598f582ff6 from memory into f13
la x2, scratch
li x3, 0xb856796863626a7c # load x3 with value 0xb856796863626a7c
sw x3, 0(x2) # store 0xb856796863626a7c in memory
flh f27, 0(x2) # load 0xb856796863626a7c from memory into f27
fnmadd.h f26, f3, f13, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f29, 0(x2) # load 0x000003ff from memory into f29
la x2, scratch
li x3, 0x8a09bc31f1be3c8f # load x3 with value 0x8a09bc31f1be3c8f
sw x3, 0(x2) # store 0x8a09bc31f1be3c8f in memory
flh f14, 0(x2) # load 0x8a09bc31f1be3c8f from memory into f14
la x2, scratch
li x3, 0xf47c33da537b65b2 # load x3 with value 0xf47c33da537b65b2
sw x3, 0(x2) # store 0xf47c33da537b65b2 in memory
flh f13, 0(x2) # load 0xf47c33da537b65b2 from memory into f13
fnmadd.h f11, f29, f14, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f5, 0(x2) # load 0x000083ff from memory into f5
la x2, scratch
li x3, 0xa8e18a23b717164a # load x3 with value 0xa8e18a23b717164a
sw x3, 0(x2) # store 0xa8e18a23b717164a in memory
flh f12, 0(x2) # load 0xa8e18a23b717164a from memory into f12
la x2, scratch
li x3, 0x9a9f8fba2a9f99e1 # load x3 with value 0x9a9f8fba2a9f99e1
sw x3, 0(x2) # store 0x9a9f8fba2a9f99e1 in memory
flh f30, 0(x2) # load 0x9a9f8fba2a9f99e1 from memory into f30
fnmadd.h f14, f5, f12, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f2, 0(x2) # load 0x00000200 from memory into f2
la x2, scratch
li x3, 0xc7b879d7aa532eee # load x3 with value 0xc7b879d7aa532eee
sw x3, 0(x2) # store 0xc7b879d7aa532eee in memory
flh f11, 0(x2) # load 0xc7b879d7aa532eee from memory into f11
la x2, scratch
li x3, 0x1f5634984f2699b # load x3 with value 0x1f5634984f2699b
sw x3, 0(x2) # store 0x1f5634984f2699b in memory
flh f23, 0(x2) # load 0x1f5634984f2699b from memory into f23
fnmadd.h f20, f2, f11, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f15, 0(x2) # load 0x00008200 from memory into f15
la x2, scratch
li x3, 0xe8f1bbf815d5d5fb # load x3 with value 0xe8f1bbf815d5d5fb
sw x3, 0(x2) # store 0xe8f1bbf815d5d5fb in memory
flh f6, 0(x2) # load 0xe8f1bbf815d5d5fb from memory into f6
la x2, scratch
li x3, 0x419a9b4bce40a8d8 # load x3 with value 0x419a9b4bce40a8d8
sw x3, 0(x2) # store 0x419a9b4bce40a8d8 in memory
flh f30, 0(x2) # load 0x419a9b4bce40a8d8 from memory into f30
fnmadd.h f27, f15, f6, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0x7df413628e864d55 # load x3 with value 0x7df413628e864d55
sw x3, 0(x2) # store 0x7df413628e864d55 in memory
flh f21, 0(x2) # load 0x7df413628e864d55 from memory into f21
la x2, scratch
li x3, 0xa62033d200bfb1b9 # load x3 with value 0xa62033d200bfb1b9
sw x3, 0(x2) # store 0xa62033d200bfb1b9 in memory
flh f23, 0(x2) # load 0xa62033d200bfb1b9 from memory into f23
fnmadd.h f8, f26, f21, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f13, 0(x2) # load 0x00008001 from memory into f13
la x2, scratch
li x3, 0x82567e878726192f # load x3 with value 0x82567e878726192f
sw x3, 0(x2) # store 0x82567e878726192f in memory
flh f26, 0(x2) # load 0x82567e878726192f from memory into f26
la x2, scratch
li x3, 0x69d38521a06c1568 # load x3 with value 0x69d38521a06c1568
sw x3, 0(x2) # store 0x69d38521a06c1568 in memory
flh f20, 0(x2) # load 0x69d38521a06c1568 from memory into f20
fnmadd.h f30, f13, f26, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f1, 0(x2) # load 0x00007c00 from memory into f1
la x2, scratch
li x3, 0x87cc1f581acc80fd # load x3 with value 0x87cc1f581acc80fd
sw x3, 0(x2) # store 0x87cc1f581acc80fd in memory
flh f12, 0(x2) # load 0x87cc1f581acc80fd from memory into f12
la x2, scratch
li x3, 0xecdd7d17450d454c # load x3 with value 0xecdd7d17450d454c
sw x3, 0(x2) # store 0xecdd7d17450d454c in memory
flh f8, 0(x2) # load 0xecdd7d17450d454c from memory into f8
fnmadd.h f14, f1, f12, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f26, 0(x2) # load 0x0000fc00 from memory into f26
la x2, scratch
li x3, 0xc475a0026d8c1e46 # load x3 with value 0xc475a0026d8c1e46
sw x3, 0(x2) # store 0xc475a0026d8c1e46 in memory
flh f31, 0(x2) # load 0xc475a0026d8c1e46 from memory into f31
la x2, scratch
li x3, 0xea9417723f2469d6 # load x3 with value 0xea9417723f2469d6
sw x3, 0(x2) # store 0xea9417723f2469d6 in memory
flh f9, 0(x2) # load 0xea9417723f2469d6 from memory into f9
fnmadd.h f7, f26, f31, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f3, 0(x2) # load 0x00007e00 from memory into f3
la x2, scratch
li x3, 0xec12655edfe7349b # load x3 with value 0xec12655edfe7349b
sw x3, 0(x2) # store 0xec12655edfe7349b in memory
flh f29, 0(x2) # load 0xec12655edfe7349b from memory into f29
la x2, scratch
li x3, 0x784eb3ad1a153dcb # load x3 with value 0x784eb3ad1a153dcb
sw x3, 0(x2) # store 0x784eb3ad1a153dcb in memory
flh f16, 0(x2) # load 0x784eb3ad1a153dcb from memory into f16
fnmadd.h f6, f3, f29, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f31, 0(x2) # load 0x00007fff from memory into f31
la x2, scratch
li x3, 0x55eb5b72225d5a5d # load x3 with value 0x55eb5b72225d5a5d
sw x3, 0(x2) # store 0x55eb5b72225d5a5d in memory
flh f23, 0(x2) # load 0x55eb5b72225d5a5d from memory into f23
la x2, scratch
li x3, 0x9d6ad8cba37bb5af # load x3 with value 0x9d6ad8cba37bb5af
sw x3, 0(x2) # store 0x9d6ad8cba37bb5af in memory
flh f13, 0(x2) # load 0x9d6ad8cba37bb5af from memory into f13
fnmadd.h f5, f31, f23, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f18, 0(x2) # load 0x0000fe00 from memory into f18
la x2, scratch
li x3, 0x58a079a773393681 # load x3 with value 0x58a079a773393681
sw x3, 0(x2) # store 0x58a079a773393681 in memory
flh f29, 0(x2) # load 0x58a079a773393681 from memory into f29
la x2, scratch
li x3, 0x1ddfea1c64245d6a # load x3 with value 0x1ddfea1c64245d6a
sw x3, 0(x2) # store 0x1ddfea1c64245d6a in memory
flh f27, 0(x2) # load 0x1ddfea1c64245d6a from memory into f27
fnmadd.h f21, f18, f29, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f28, 0(x2) # load 0x00007c01 from memory into f28
la x2, scratch
li x3, 0xab2df0a3d9548be # load x3 with value 0xab2df0a3d9548be
sw x3, 0(x2) # store 0xab2df0a3d9548be in memory
flh f15, 0(x2) # load 0xab2df0a3d9548be from memory into f15
la x2, scratch
li x3, 0x2e83baec5f2dafd2 # load x3 with value 0x2e83baec5f2dafd2
sw x3, 0(x2) # store 0x2e83baec5f2dafd2 in memory
flh f20, 0(x2) # load 0x2e83baec5f2dafd2 from memory into f20
fnmadd.h f1, f28, f15, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f10, 0(x2) # load 0x00007dff from memory into f10
la x2, scratch
li x3, 0xf28762a9dc37eb51 # load x3 with value 0xf28762a9dc37eb51
sw x3, 0(x2) # store 0xf28762a9dc37eb51 in memory
flh f30, 0(x2) # load 0xf28762a9dc37eb51 from memory into f30
la x2, scratch
li x3, 0xd6d9e2381184c13c # load x3 with value 0xd6d9e2381184c13c
sw x3, 0(x2) # store 0xd6d9e2381184c13c in memory
flh f28, 0(x2) # load 0xd6d9e2381184c13c from memory into f28
fnmadd.h f20, f10, f30, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f1, 0(x2) # load 0x0000fc01 from memory into f1
la x2, scratch
li x3, 0xf0fe3212fb18fe43 # load x3 with value 0xf0fe3212fb18fe43
sw x3, 0(x2) # store 0xf0fe3212fb18fe43 in memory
flh f30, 0(x2) # load 0xf0fe3212fb18fe43 from memory into f30
la x2, scratch
li x3, 0x54f11665c6a0c579 # load x3 with value 0x54f11665c6a0c579
sw x3, 0(x2) # store 0x54f11665c6a0c579 in memory
flh f24, 0(x2) # load 0x54f11665c6a0c579 from memory into f24
fnmadd.h f26, f1, f30, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f19, 0(x2) # load 0x000058b4 from memory into f19
la x2, scratch
li x3, 0x5455cba894dd91e1 # load x3 with value 0x5455cba894dd91e1
sw x3, 0(x2) # store 0x5455cba894dd91e1 in memory
flh f2, 0(x2) # load 0x5455cba894dd91e1 from memory into f2
la x2, scratch
li x3, 0x59d22b5dabcc3f4d # load x3 with value 0x59d22b5dabcc3f4d
sw x3, 0(x2) # store 0x59d22b5dabcc3f4d in memory
flh f24, 0(x2) # load 0x59d22b5dabcc3f4d from memory into f24
fnmadd.h f21, f19, f2, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f13, 0(x2) # load 0x0000c93a from memory into f13
la x2, scratch
li x3, 0x726d7e90fb2a8227 # load x3 with value 0x726d7e90fb2a8227
sw x3, 0(x2) # store 0x726d7e90fb2a8227 in memory
flh f27, 0(x2) # load 0x726d7e90fb2a8227 from memory into f27
la x2, scratch
li x3, 0xaa7f6de0c76fe162 # load x3 with value 0xaa7f6de0c76fe162
sw x3, 0(x2) # store 0xaa7f6de0c76fe162 in memory
flh f11, 0(x2) # load 0xaa7f6de0c76fe162 from memory into f11
fnmadd.h f29, f13, f27, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
la x2, scratch
li x3, 0xeaae317d62e71b1d # load x3 with value 0xeaae317d62e71b1d
sw x3, 0(x2) # store 0xeaae317d62e71b1d in memory
flh f5, 0(x2) # load 0xeaae317d62e71b1d from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x33b4d03aa0fdabf7 # load x3 with value 0x33b4d03aa0fdabf7
sw x3, 0(x2) # store 0x33b4d03aa0fdabf7 in memory
flh f20, 0(x2) # load 0x33b4d03aa0fdabf7 from memory into f20
fnmadd.h f10, f5, f16, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000)
la x2, scratch
li x3, 0x81860529716f236 # load x3 with value 0x81860529716f236
sw x3, 0(x2) # store 0x81860529716f236 in memory
flh f11, 0(x2) # load 0x81860529716f236 from memory into f11
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f17, 0(x2) # load 0x00008000 from memory into f17
la x2, scratch
li x3, 0x3aa2c4b0e60cb6f9 # load x3 with value 0x3aa2c4b0e60cb6f9
sw x3, 0(x2) # store 0x3aa2c4b0e60cb6f9 in memory
flh f26, 0(x2) # load 0x3aa2c4b0e60cb6f9 from memory into f26
fnmadd.h f19, f11, f17, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3c00)
la x2, scratch
li x3, 0xc2426e12a1c7c607 # load x3 with value 0xc2426e12a1c7c607
sw x3, 0(x2) # store 0xc2426e12a1c7c607 in memory
flh f13, 0(x2) # load 0xc2426e12a1c7c607 from memory into f13
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f14, 0(x2) # load 0x00003c00 from memory into f14
la x2, scratch
li x3, 0x93501ca7b7904ae0 # load x3 with value 0x93501ca7b7904ae0
sw x3, 0(x2) # store 0x93501ca7b7904ae0 in memory
flh f11, 0(x2) # load 0x93501ca7b7904ae0 from memory into f11
fnmadd.h f10, f13, f14, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbc00)
la x2, scratch
li x3, 0x227423d645a695b9 # load x3 with value 0x227423d645a695b9
sw x3, 0(x2) # store 0x227423d645a695b9 in memory
flh f17, 0(x2) # load 0x227423d645a695b9 from memory into f17
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f13, 0(x2) # load 0x0000bc00 from memory into f13
la x2, scratch
li x3, 0xccbb13c3d7257fdb # load x3 with value 0xccbb13c3d7257fdb
sw x3, 0(x2) # store 0xccbb13c3d7257fdb in memory
flh f10, 0(x2) # load 0xccbb13c3d7257fdb from memory into f10
fnmadd.h f9, f17, f13, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3e00)
la x2, scratch
li x3, 0x83fa98255f957fb7 # load x3 with value 0x83fa98255f957fb7
sw x3, 0(x2) # store 0x83fa98255f957fb7 in memory
flh f22, 0(x2) # load 0x83fa98255f957fb7 from memory into f22
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f20, 0(x2) # load 0x00003e00 from memory into f20
la x2, scratch
li x3, 0x6b93aa32dfb2bd6a # load x3 with value 0x6b93aa32dfb2bd6a
sw x3, 0(x2) # store 0x6b93aa32dfb2bd6a in memory
flh f17, 0(x2) # load 0x6b93aa32dfb2bd6a from memory into f17
fnmadd.h f12, f22, f20, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbe00)
la x2, scratch
li x3, 0x84b7daff69d9bf81 # load x3 with value 0x84b7daff69d9bf81
sw x3, 0(x2) # store 0x84b7daff69d9bf81 in memory
flh f7, 0(x2) # load 0x84b7daff69d9bf81 from memory into f7
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f31, 0(x2) # load 0x0000be00 from memory into f31
la x2, scratch
li x3, 0x2fe8e41a6cd0d3b4 # load x3 with value 0x2fe8e41a6cd0d3b4
sw x3, 0(x2) # store 0x2fe8e41a6cd0d3b4 in memory
flh f28, 0(x2) # load 0x2fe8e41a6cd0d3b4 from memory into f28
fnmadd.h f30, f7, f31, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x4000)
la x2, scratch
li x3, 0xe8f56939d126a1c6 # load x3 with value 0xe8f56939d126a1c6
sw x3, 0(x2) # store 0xe8f56939d126a1c6 in memory
flh f22, 0(x2) # load 0xe8f56939d126a1c6 from memory into f22
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f8, 0(x2) # load 0x00004000 from memory into f8
la x2, scratch
li x3, 0x3b72de6c8428f69e # load x3 with value 0x3b72de6c8428f69e
sw x3, 0(x2) # store 0x3b72de6c8428f69e in memory
flh f21, 0(x2) # load 0x3b72de6c8428f69e from memory into f21
fnmadd.h f25, f22, f8, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc000)
la x2, scratch
li x3, 0x62588313135ddcd1 # load x3 with value 0x62588313135ddcd1
sw x3, 0(x2) # store 0x62588313135ddcd1 in memory
flh f14, 0(x2) # load 0x62588313135ddcd1 from memory into f14
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f16, 0(x2) # load 0x0000c000 from memory into f16
la x2, scratch
li x3, 0x965031fd54c64099 # load x3 with value 0x965031fd54c64099
sw x3, 0(x2) # store 0x965031fd54c64099 in memory
flh f17, 0(x2) # load 0x965031fd54c64099 from memory into f17
fnmadd.h f31, f14, f16, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400)
la x2, scratch
li x3, 0x5c8dffda0750a924 # load x3 with value 0x5c8dffda0750a924
sw x3, 0(x2) # store 0x5c8dffda0750a924 in memory
flh f24, 0(x2) # load 0x5c8dffda0750a924 from memory into f24
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
la x2, scratch
li x3, 0x2112e59c44df3deb # load x3 with value 0x2112e59c44df3deb
sw x3, 0(x2) # store 0x2112e59c44df3deb in memory
flh f28, 0(x2) # load 0x2112e59c44df3deb from memory into f28
fnmadd.h f16, f24, f1, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8400)
la x2, scratch
li x3, 0xd73cc75cf7ae15b6 # load x3 with value 0xd73cc75cf7ae15b6
sw x3, 0(x2) # store 0xd73cc75cf7ae15b6 in memory
flh f10, 0(x2) # load 0xd73cc75cf7ae15b6 from memory into f10
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f1, 0(x2) # load 0x00008400 from memory into f1
la x2, scratch
li x3, 0xcbaac23309e0df8 # load x3 with value 0xcbaac23309e0df8
sw x3, 0(x2) # store 0xcbaac23309e0df8 in memory
flh f25, 0(x2) # load 0xcbaac23309e0df8 from memory into f25
fnmadd.h f15, f10, f1, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7bff)
la x2, scratch
li x3, 0x38e8844df497de9b # load x3 with value 0x38e8844df497de9b
sw x3, 0(x2) # store 0x38e8844df497de9b in memory
flh f1, 0(x2) # load 0x38e8844df497de9b from memory into f1
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f10, 0(x2) # load 0x00007bff from memory into f10
la x2, scratch
li x3, 0x2231d53c663738c # load x3 with value 0x2231d53c663738c
sw x3, 0(x2) # store 0x2231d53c663738c in memory
flh f19, 0(x2) # load 0x2231d53c663738c from memory into f19
fnmadd.h f16, f1, f10, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfbff)
la x2, scratch
li x3, 0x7a8984e1671b26b1 # load x3 with value 0x7a8984e1671b26b1
sw x3, 0(x2) # store 0x7a8984e1671b26b1 in memory
flh f30, 0(x2) # load 0x7a8984e1671b26b1 from memory into f30
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f19, 0(x2) # load 0x0000fbff from memory into f19
la x2, scratch
li x3, 0xed57e539febf28fb # load x3 with value 0xed57e539febf28fb
sw x3, 0(x2) # store 0xed57e539febf28fb in memory
flh f28, 0(x2) # load 0xed57e539febf28fb from memory into f28
fnmadd.h f7, f30, f19, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff)
la x2, scratch
li x3, 0xa67f1598287d2e55 # load x3 with value 0xa67f1598287d2e55
sw x3, 0(x2) # store 0xa67f1598287d2e55 in memory
flh f30, 0(x2) # load 0xa67f1598287d2e55 from memory into f30
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
la x2, scratch
li x3, 0x737555a81d65e76f # load x3 with value 0x737555a81d65e76f
sw x3, 0(x2) # store 0x737555a81d65e76f in memory
flh f13, 0(x2) # load 0x737555a81d65e76f from memory into f13
fnmadd.h f10, f30, f15, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x83ff)
la x2, scratch
li x3, 0x87c5bd73a606144c # load x3 with value 0x87c5bd73a606144c
sw x3, 0(x2) # store 0x87c5bd73a606144c in memory
flh f17, 0(x2) # load 0x87c5bd73a606144c from memory into f17
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f1, 0(x2) # load 0x000083ff from memory into f1
la x2, scratch
li x3, 0x98e9671d1ea8b1b2 # load x3 with value 0x98e9671d1ea8b1b2
sw x3, 0(x2) # store 0x98e9671d1ea8b1b2 in memory
flh f26, 0(x2) # load 0x98e9671d1ea8b1b2 from memory into f26
fnmadd.h f16, f17, f1, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x200)
la x2, scratch
li x3, 0x8254fe57649e6806 # load x3 with value 0x8254fe57649e6806
sw x3, 0(x2) # store 0x8254fe57649e6806 in memory
flh f23, 0(x2) # load 0x8254fe57649e6806 from memory into f23
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f29, 0(x2) # load 0x00000200 from memory into f29
la x2, scratch
li x3, 0xe4f05ee25cecc598 # load x3 with value 0xe4f05ee25cecc598
sw x3, 0(x2) # store 0xe4f05ee25cecc598 in memory
flh f11, 0(x2) # load 0xe4f05ee25cecc598 from memory into f11
fnmadd.h f17, f23, f29, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8200)
la x2, scratch
li x3, 0x5c21376ddfe827b1 # load x3 with value 0x5c21376ddfe827b1
sw x3, 0(x2) # store 0x5c21376ddfe827b1 in memory
flh f25, 0(x2) # load 0x5c21376ddfe827b1 from memory into f25
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f10, 0(x2) # load 0x00008200 from memory into f10
la x2, scratch
li x3, 0x8fe599c13846cd64 # load x3 with value 0x8fe599c13846cd64
sw x3, 0(x2) # store 0x8fe599c13846cd64 in memory
flh f29, 0(x2) # load 0x8fe599c13846cd64 from memory into f29
fnmadd.h f28, f25, f10, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
la x2, scratch
li x3, 0x3e224d265fd554b # load x3 with value 0x3e224d265fd554b
sw x3, 0(x2) # store 0x3e224d265fd554b in memory
flh f18, 0(x2) # load 0x3e224d265fd554b from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0x6ee9c55c890761de # load x3 with value 0x6ee9c55c890761de
sw x3, 0(x2) # store 0x6ee9c55c890761de in memory
flh f19, 0(x2) # load 0x6ee9c55c890761de from memory into f19
fnmadd.h f28, f18, f30, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8001)
la x2, scratch
li x3, 0xc56e313d01c0b7fd # load x3 with value 0xc56e313d01c0b7fd
sw x3, 0(x2) # store 0xc56e313d01c0b7fd in memory
flh f26, 0(x2) # load 0xc56e313d01c0b7fd from memory into f26
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f21, 0(x2) # load 0x00008001 from memory into f21
la x2, scratch
li x3, 0x6e4df68e158a97a7 # load x3 with value 0x6e4df68e158a97a7
sw x3, 0(x2) # store 0x6e4df68e158a97a7 in memory
flh f22, 0(x2) # load 0x6e4df68e158a97a7 from memory into f22
fnmadd.h f12, f26, f21, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7c00)
la x2, scratch
li x3, 0x39122f4f1fa7ace6 # load x3 with value 0x39122f4f1fa7ace6
sw x3, 0(x2) # store 0x39122f4f1fa7ace6 in memory
flh f13, 0(x2) # load 0x39122f4f1fa7ace6 from memory into f13
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f30, 0(x2) # load 0x00007c00 from memory into f30
la x2, scratch
li x3, 0xed12be209d196dc7 # load x3 with value 0xed12be209d196dc7
sw x3, 0(x2) # store 0xed12be209d196dc7 in memory
flh f9, 0(x2) # load 0xed12be209d196dc7 from memory into f9
fnmadd.h f19, f13, f30, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfc00)
la x2, scratch
li x3, 0x8146e8c841497c53 # load x3 with value 0x8146e8c841497c53
sw x3, 0(x2) # store 0x8146e8c841497c53 in memory
flh f9, 0(x2) # load 0x8146e8c841497c53 from memory into f9
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f10, 0(x2) # load 0x0000fc00 from memory into f10
la x2, scratch
li x3, 0xaefaa7b998139717 # load x3 with value 0xaefaa7b998139717
sw x3, 0(x2) # store 0xaefaa7b998139717 in memory
flh f27, 0(x2) # load 0xaefaa7b998139717 from memory into f27
fnmadd.h f16, f9, f10, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7e00)
la x2, scratch
li x3, 0x8491b34aff3d9fee # load x3 with value 0x8491b34aff3d9fee
sw x3, 0(x2) # store 0x8491b34aff3d9fee in memory
flh f16, 0(x2) # load 0x8491b34aff3d9fee from memory into f16
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f30, 0(x2) # load 0x00007e00 from memory into f30
la x2, scratch
li x3, 0x43bb3abb2f1557cf # load x3 with value 0x43bb3abb2f1557cf
sw x3, 0(x2) # store 0x43bb3abb2f1557cf in memory
flh f24, 0(x2) # load 0x43bb3abb2f1557cf from memory into f24
fnmadd.h f3, f16, f30, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fff)
la x2, scratch
li x3, 0x828f335ad2573ded # load x3 with value 0x828f335ad2573ded
sw x3, 0(x2) # store 0x828f335ad2573ded in memory
flh f17, 0(x2) # load 0x828f335ad2573ded from memory into f17
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
la x2, scratch
li x3, 0xa1de9e7d51c57828 # load x3 with value 0xa1de9e7d51c57828
sw x3, 0(x2) # store 0xa1de9e7d51c57828 in memory
flh f31, 0(x2) # load 0xa1de9e7d51c57828 from memory into f31
fnmadd.h f2, f17, f23, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfe00)
la x2, scratch
li x3, 0xd0a7a7ec445d20b6 # load x3 with value 0xd0a7a7ec445d20b6
sw x3, 0(x2) # store 0xd0a7a7ec445d20b6 in memory
flh f2, 0(x2) # load 0xd0a7a7ec445d20b6 from memory into f2
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f13, 0(x2) # load 0x0000fe00 from memory into f13
la x2, scratch
li x3, 0xe2ad24574416f0a1 # load x3 with value 0xe2ad24574416f0a1
sw x3, 0(x2) # store 0xe2ad24574416f0a1 in memory
flh f14, 0(x2) # load 0xe2ad24574416f0a1 from memory into f14
fnmadd.h f7, f2, f13, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7c01)
la x2, scratch
li x3, 0x5a5e0c35f06a30dc # load x3 with value 0x5a5e0c35f06a30dc
sw x3, 0(x2) # store 0x5a5e0c35f06a30dc in memory
flh f1, 0(x2) # load 0x5a5e0c35f06a30dc from memory into f1
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f17, 0(x2) # load 0x00007c01 from memory into f17
la x2, scratch
li x3, 0xaa7403ff272d18dd # load x3 with value 0xaa7403ff272d18dd
sw x3, 0(x2) # store 0xaa7403ff272d18dd in memory
flh f15, 0(x2) # load 0xaa7403ff272d18dd from memory into f15
fnmadd.h f22, f1, f17, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7dff)
la x2, scratch
li x3, 0x9e067a4e0dcc3431 # load x3 with value 0x9e067a4e0dcc3431
sw x3, 0(x2) # store 0x9e067a4e0dcc3431 in memory
flh f26, 0(x2) # load 0x9e067a4e0dcc3431 from memory into f26
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f12, 0(x2) # load 0x00007dff from memory into f12
la x2, scratch
li x3, 0x8069077249e2996 # load x3 with value 0x8069077249e2996
sw x3, 0(x2) # store 0x8069077249e2996 in memory
flh f29, 0(x2) # load 0x8069077249e2996 from memory into f29
fnmadd.h f23, f26, f12, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfc01)
la x2, scratch
li x3, 0x2cb04548d0acb47a # load x3 with value 0x2cb04548d0acb47a
sw x3, 0(x2) # store 0x2cb04548d0acb47a in memory
flh f16, 0(x2) # load 0x2cb04548d0acb47a from memory into f16
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f20, 0(x2) # load 0x0000fc01 from memory into f20
la x2, scratch
li x3, 0x60d68daff2c54348 # load x3 with value 0x60d68daff2c54348
sw x3, 0(x2) # store 0x60d68daff2c54348 in memory
flh f2, 0(x2) # load 0x60d68daff2c54348 from memory into f2
fnmadd.h f27, f16, f20, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x58b4)
la x2, scratch
li x3, 0x74a1e2b779a4d417 # load x3 with value 0x74a1e2b779a4d417
sw x3, 0(x2) # store 0x74a1e2b779a4d417 in memory
flh f22, 0(x2) # load 0x74a1e2b779a4d417 from memory into f22
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f27, 0(x2) # load 0x000058b4 from memory into f27
la x2, scratch
li x3, 0x5432ca73eaf66f60 # load x3 with value 0x5432ca73eaf66f60
sw x3, 0(x2) # store 0x5432ca73eaf66f60 in memory
flh f19, 0(x2) # load 0x5432ca73eaf66f60 from memory into f19
fnmadd.h f14, f22, f27, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc93a)
la x2, scratch
li x3, 0xf37633e6a66e43dd # load x3 with value 0xf37633e6a66e43dd
sw x3, 0(x2) # store 0xf37633e6a66e43dd in memory
flh f28, 0(x2) # load 0xf37633e6a66e43dd from memory into f28
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f21, 0(x2) # load 0x0000c93a from memory into f21
la x2, scratch
li x3, 0xd45942d082876ae # load x3 with value 0xd45942d082876ae
sw x3, 0(x2) # store 0xd45942d082876ae in memory
flh f9, 0(x2) # load 0xd45942d082876ae from memory into f9
fnmadd.h f13, f28, f21, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
la x2, scratch
li x3, 0xed3e46c09ffb354f # load x3 with value 0xed3e46c09ffb354f
sw x3, 0(x2) # store 0xed3e46c09ffb354f in memory
flh f21, 0(x2) # load 0xed3e46c09ffb354f from memory into f21
la x2, scratch
li x3, 0x8635be210116e73 # load x3 with value 0x8635be210116e73
sw x3, 0(x2) # store 0x8635be210116e73 in memory
flh f15, 0(x2) # load 0x8635be210116e73 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f5, 0(x2) # load 0x00000000 from memory into f5
fnmadd.h f28, f21, f15, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8000)
la x2, scratch
li x3, 0xac43fec5fd511b0f # load x3 with value 0xac43fec5fd511b0f
sw x3, 0(x2) # store 0xac43fec5fd511b0f in memory
flh f9, 0(x2) # load 0xac43fec5fd511b0f from memory into f9
la x2, scratch
li x3, 0x58b3daadcea46445 # load x3 with value 0x58b3daadcea46445
sw x3, 0(x2) # store 0x58b3daadcea46445 in memory
flh f21, 0(x2) # load 0x58b3daadcea46445 from memory into f21
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f3, 0(x2) # load 0x00008000 from memory into f3
fnmadd.h f8, f9, f21, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3c00)
la x2, scratch
li x3, 0xc549941581541a4e # load x3 with value 0xc549941581541a4e
sw x3, 0(x2) # store 0xc549941581541a4e in memory
flh f8, 0(x2) # load 0xc549941581541a4e from memory into f8
la x2, scratch
li x3, 0x461dae0c013f5e9f # load x3 with value 0x461dae0c013f5e9f
sw x3, 0(x2) # store 0x461dae0c013f5e9f in memory
flh f1, 0(x2) # load 0x461dae0c013f5e9f from memory into f1
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f29, 0(x2) # load 0x00003c00 from memory into f29
fnmadd.h f12, f8, f1, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbc00)
la x2, scratch
li x3, 0x4b9c755b23d1e938 # load x3 with value 0x4b9c755b23d1e938
sw x3, 0(x2) # store 0x4b9c755b23d1e938 in memory
flh f1, 0(x2) # load 0x4b9c755b23d1e938 from memory into f1
la x2, scratch
li x3, 0x3981ce59ce3aad4c # load x3 with value 0x3981ce59ce3aad4c
sw x3, 0(x2) # store 0x3981ce59ce3aad4c in memory
flh f5, 0(x2) # load 0x3981ce59ce3aad4c from memory into f5
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f29, 0(x2) # load 0x0000bc00 from memory into f29
fnmadd.h f30, f1, f5, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3e00)
la x2, scratch
li x3, 0x6eb08b2f64305bff # load x3 with value 0x6eb08b2f64305bff
sw x3, 0(x2) # store 0x6eb08b2f64305bff in memory
flh f7, 0(x2) # load 0x6eb08b2f64305bff from memory into f7
la x2, scratch
li x3, 0x71812e204e8edfb9 # load x3 with value 0x71812e204e8edfb9
sw x3, 0(x2) # store 0x71812e204e8edfb9 in memory
flh f14, 0(x2) # load 0x71812e204e8edfb9 from memory into f14
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f28, 0(x2) # load 0x00003e00 from memory into f28
fnmadd.h f11, f7, f14, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbe00)
la x2, scratch
li x3, 0xccdb97d28b35b49f # load x3 with value 0xccdb97d28b35b49f
sw x3, 0(x2) # store 0xccdb97d28b35b49f in memory
flh f15, 0(x2) # load 0xccdb97d28b35b49f from memory into f15
la x2, scratch
li x3, 0x408de8d89846ee05 # load x3 with value 0x408de8d89846ee05
sw x3, 0(x2) # store 0x408de8d89846ee05 in memory
flh f8, 0(x2) # load 0x408de8d89846ee05 from memory into f8
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
fnmadd.h f31, f15, f8, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x4000)
la x2, scratch
li x3, 0x2c48ab660ce61c13 # load x3 with value 0x2c48ab660ce61c13
sw x3, 0(x2) # store 0x2c48ab660ce61c13 in memory
flh f5, 0(x2) # load 0x2c48ab660ce61c13 from memory into f5
la x2, scratch
li x3, 0x3cb25de08b77364b # load x3 with value 0x3cb25de08b77364b
sw x3, 0(x2) # store 0x3cb25de08b77364b in memory
flh f8, 0(x2) # load 0x3cb25de08b77364b from memory into f8
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f17, 0(x2) # load 0x00004000 from memory into f17
fnmadd.h f11, f5, f8, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc000)
la x2, scratch
li x3, 0x223015fe6aaccb42 # load x3 with value 0x223015fe6aaccb42
sw x3, 0(x2) # store 0x223015fe6aaccb42 in memory
flh f15, 0(x2) # load 0x223015fe6aaccb42 from memory into f15
la x2, scratch
li x3, 0x4939a124a4a2d843 # load x3 with value 0x4939a124a4a2d843
sw x3, 0(x2) # store 0x4939a124a4a2d843 in memory
flh f26, 0(x2) # load 0x4939a124a4a2d843 from memory into f26
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f18, 0(x2) # load 0x0000c000 from memory into f18
fnmadd.h f6, f15, f26, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400)
la x2, scratch
li x3, 0xa64aee02d682064b # load x3 with value 0xa64aee02d682064b
sw x3, 0(x2) # store 0xa64aee02d682064b in memory
flh f1, 0(x2) # load 0xa64aee02d682064b from memory into f1
la x2, scratch
li x3, 0xaa2f96cad1df4ef9 # load x3 with value 0xaa2f96cad1df4ef9
sw x3, 0(x2) # store 0xaa2f96cad1df4ef9 in memory
flh f10, 0(x2) # load 0xaa2f96cad1df4ef9 from memory into f10
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f16, 0(x2) # load 0x00000400 from memory into f16
fnmadd.h f19, f1, f10, f16 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8400)
la x2, scratch
li x3, 0xe74cad6d0cf07f48 # load x3 with value 0xe74cad6d0cf07f48
sw x3, 0(x2) # store 0xe74cad6d0cf07f48 in memory
flh f23, 0(x2) # load 0xe74cad6d0cf07f48 from memory into f23
la x2, scratch
li x3, 0xb652e25c86055358 # load x3 with value 0xb652e25c86055358
sw x3, 0(x2) # store 0xb652e25c86055358 in memory
flh f29, 0(x2) # load 0xb652e25c86055358 from memory into f29
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f11, 0(x2) # load 0x00008400 from memory into f11
fnmadd.h f1, f23, f29, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7bff)
la x2, scratch
li x3, 0x54ffe4a8963f769b # load x3 with value 0x54ffe4a8963f769b
sw x3, 0(x2) # store 0x54ffe4a8963f769b in memory
flh f7, 0(x2) # load 0x54ffe4a8963f769b from memory into f7
la x2, scratch
li x3, 0xa2f7c1b37bde317e # load x3 with value 0xa2f7c1b37bde317e
sw x3, 0(x2) # store 0xa2f7c1b37bde317e in memory
flh f10, 0(x2) # load 0xa2f7c1b37bde317e from memory into f10
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
fnmadd.h f31, f7, f10, f15 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfbff)
la x2, scratch
li x3, 0x1280a6b48d720936 # load x3 with value 0x1280a6b48d720936
sw x3, 0(x2) # store 0x1280a6b48d720936 in memory
flh f23, 0(x2) # load 0x1280a6b48d720936 from memory into f23
la x2, scratch
li x3, 0x6476c4cf5993405c # load x3 with value 0x6476c4cf5993405c
sw x3, 0(x2) # store 0x6476c4cf5993405c in memory
flh f18, 0(x2) # load 0x6476c4cf5993405c from memory into f18
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f3, 0(x2) # load 0x0000fbff from memory into f3
fnmadd.h f7, f23, f18, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3ff)
la x2, scratch
li x3, 0x5b4ff357986fc8c7 # load x3 with value 0x5b4ff357986fc8c7
sw x3, 0(x2) # store 0x5b4ff357986fc8c7 in memory
flh f11, 0(x2) # load 0x5b4ff357986fc8c7 from memory into f11
la x2, scratch
li x3, 0x17a31fecc8cffdfc # load x3 with value 0x17a31fecc8cffdfc
sw x3, 0(x2) # store 0x17a31fecc8cffdfc in memory
flh f5, 0(x2) # load 0x17a31fecc8cffdfc from memory into f5
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f2, 0(x2) # load 0x000003ff from memory into f2
fnmadd.h f23, f11, f5, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x83ff)
la x2, scratch
li x3, 0x997c5de1890774f6 # load x3 with value 0x997c5de1890774f6
sw x3, 0(x2) # store 0x997c5de1890774f6 in memory
flh f14, 0(x2) # load 0x997c5de1890774f6 from memory into f14
la x2, scratch
li x3, 0x70b6d5e09cc165b7 # load x3 with value 0x70b6d5e09cc165b7
sw x3, 0(x2) # store 0x70b6d5e09cc165b7 in memory
flh f10, 0(x2) # load 0x70b6d5e09cc165b7 from memory into f10
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f13, 0(x2) # load 0x000083ff from memory into f13
fnmadd.h f5, f14, f10, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x200)
la x2, scratch
li x3, 0xec8b293d0b875303 # load x3 with value 0xec8b293d0b875303
sw x3, 0(x2) # store 0xec8b293d0b875303 in memory
flh f16, 0(x2) # load 0xec8b293d0b875303 from memory into f16
la x2, scratch
li x3, 0x9b50a45039f35919 # load x3 with value 0x9b50a45039f35919
sw x3, 0(x2) # store 0x9b50a45039f35919 in memory
flh f24, 0(x2) # load 0x9b50a45039f35919 from memory into f24
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f20, 0(x2) # load 0x00000200 from memory into f20
fnmadd.h f25, f16, f24, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8200)
la x2, scratch
li x3, 0xf44fc38529a53cba # load x3 with value 0xf44fc38529a53cba
sw x3, 0(x2) # store 0xf44fc38529a53cba in memory
flh f30, 0(x2) # load 0xf44fc38529a53cba from memory into f30
la x2, scratch
li x3, 0x56d8bd725ee1c68b # load x3 with value 0x56d8bd725ee1c68b
sw x3, 0(x2) # store 0x56d8bd725ee1c68b in memory
flh f22, 0(x2) # load 0x56d8bd725ee1c68b from memory into f22
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f15, 0(x2) # load 0x00008200 from memory into f15
fnmadd.h f25, f30, f22, f15 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
la x2, scratch
li x3, 0x261dfbc4aaee6cf8 # load x3 with value 0x261dfbc4aaee6cf8
sw x3, 0(x2) # store 0x261dfbc4aaee6cf8 in memory
flh f21, 0(x2) # load 0x261dfbc4aaee6cf8 from memory into f21
la x2, scratch
li x3, 0x270f4b8f11e8b268 # load x3 with value 0x270f4b8f11e8b268
sw x3, 0(x2) # store 0x270f4b8f11e8b268 in memory
flh f18, 0(x2) # load 0x270f4b8f11e8b268 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f7, 0(x2) # load 0x00000001 from memory into f7
fnmadd.h f8, f21, f18, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8001)
la x2, scratch
li x3, 0xe94ee4552f8457b7 # load x3 with value 0xe94ee4552f8457b7
sw x3, 0(x2) # store 0xe94ee4552f8457b7 in memory
flh f29, 0(x2) # load 0xe94ee4552f8457b7 from memory into f29
la x2, scratch
li x3, 0x3f4932b719546b44 # load x3 with value 0x3f4932b719546b44
sw x3, 0(x2) # store 0x3f4932b719546b44 in memory
flh f25, 0(x2) # load 0x3f4932b719546b44 from memory into f25
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
fnmadd.h f12, f29, f25, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7c00)
la x2, scratch
li x3, 0x92efe6fce2f23deb # load x3 with value 0x92efe6fce2f23deb
sw x3, 0(x2) # store 0x92efe6fce2f23deb in memory
flh f1, 0(x2) # load 0x92efe6fce2f23deb from memory into f1
la x2, scratch
li x3, 0xd30ba3c0023a4c9b # load x3 with value 0xd30ba3c0023a4c9b
sw x3, 0(x2) # store 0xd30ba3c0023a4c9b in memory
flh f15, 0(x2) # load 0xd30ba3c0023a4c9b from memory into f15
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f30, 0(x2) # load 0x00007c00 from memory into f30
fnmadd.h f26, f1, f15, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfc00)
la x2, scratch
li x3, 0x94c521c9a067a3fc # load x3 with value 0x94c521c9a067a3fc
sw x3, 0(x2) # store 0x94c521c9a067a3fc in memory
flh f2, 0(x2) # load 0x94c521c9a067a3fc from memory into f2
la x2, scratch
li x3, 0x7bd82c3c7797c842 # load x3 with value 0x7bd82c3c7797c842
sw x3, 0(x2) # store 0x7bd82c3c7797c842 in memory
flh f22, 0(x2) # load 0x7bd82c3c7797c842 from memory into f22
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f7, 0(x2) # load 0x0000fc00 from memory into f7
fnmadd.h f28, f2, f22, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7e00)
la x2, scratch
li x3, 0xa11ab178ea82a67d # load x3 with value 0xa11ab178ea82a67d
sw x3, 0(x2) # store 0xa11ab178ea82a67d in memory
flh f25, 0(x2) # load 0xa11ab178ea82a67d from memory into f25
la x2, scratch
li x3, 0x1536790e65d6cfcd # load x3 with value 0x1536790e65d6cfcd
sw x3, 0(x2) # store 0x1536790e65d6cfcd in memory
flh f27, 0(x2) # load 0x1536790e65d6cfcd from memory into f27
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
fnmadd.h f9, f25, f27, f24 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fff)
la x2, scratch
li x3, 0x790aab9fa857b123 # load x3 with value 0x790aab9fa857b123
sw x3, 0(x2) # store 0x790aab9fa857b123 in memory
flh f6, 0(x2) # load 0x790aab9fa857b123 from memory into f6
la x2, scratch
li x3, 0x1ef3d9269f81141e # load x3 with value 0x1ef3d9269f81141e
sw x3, 0(x2) # store 0x1ef3d9269f81141e in memory
flh f22, 0(x2) # load 0x1ef3d9269f81141e from memory into f22
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f21, 0(x2) # load 0x00007fff from memory into f21
fnmadd.h f3, f6, f22, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfe00)
la x2, scratch
li x3, 0xd9f99ee38efee11f # load x3 with value 0xd9f99ee38efee11f
sw x3, 0(x2) # store 0xd9f99ee38efee11f in memory
flh f15, 0(x2) # load 0xd9f99ee38efee11f from memory into f15
la x2, scratch
li x3, 0x57b9de82bcf91178 # load x3 with value 0x57b9de82bcf91178
sw x3, 0(x2) # store 0x57b9de82bcf91178 in memory
flh f31, 0(x2) # load 0x57b9de82bcf91178 from memory into f31
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f28, 0(x2) # load 0x0000fe00 from memory into f28
fnmadd.h f30, f15, f31, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7c01)
la x2, scratch
li x3, 0xb2920b25122a4fa0 # load x3 with value 0xb2920b25122a4fa0
sw x3, 0(x2) # store 0xb2920b25122a4fa0 in memory
flh f5, 0(x2) # load 0xb2920b25122a4fa0 from memory into f5
la x2, scratch
li x3, 0xded1a7d32cab82e1 # load x3 with value 0xded1a7d32cab82e1
sw x3, 0(x2) # store 0xded1a7d32cab82e1 in memory
flh f1, 0(x2) # load 0xded1a7d32cab82e1 from memory into f1
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f22, 0(x2) # load 0x00007c01 from memory into f22
fnmadd.h f13, f5, f1, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7dff)
la x2, scratch
li x3, 0x50c1a96bc5087ee1 # load x3 with value 0x50c1a96bc5087ee1
sw x3, 0(x2) # store 0x50c1a96bc5087ee1 in memory
flh f28, 0(x2) # load 0x50c1a96bc5087ee1 from memory into f28
la x2, scratch
li x3, 0xe4cf20a90cc66735 # load x3 with value 0xe4cf20a90cc66735
sw x3, 0(x2) # store 0xe4cf20a90cc66735 in memory
flh f16, 0(x2) # load 0xe4cf20a90cc66735 from memory into f16
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f21, 0(x2) # load 0x00007dff from memory into f21
fnmadd.h f30, f28, f16, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfc01)
la x2, scratch
li x3, 0xf544819b30bb61ce # load x3 with value 0xf544819b30bb61ce
sw x3, 0(x2) # store 0xf544819b30bb61ce in memory
flh f8, 0(x2) # load 0xf544819b30bb61ce from memory into f8
la x2, scratch
li x3, 0x774713d32ce0fe16 # load x3 with value 0x774713d32ce0fe16
sw x3, 0(x2) # store 0x774713d32ce0fe16 in memory
flh f22, 0(x2) # load 0x774713d32ce0fe16 from memory into f22
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f1, 0(x2) # load 0x0000fc01 from memory into f1
fnmadd.h f28, f8, f22, f1 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x58b4)
la x2, scratch
li x3, 0xb2c85325859fd67 # load x3 with value 0xb2c85325859fd67
sw x3, 0(x2) # store 0xb2c85325859fd67 in memory
flh f18, 0(x2) # load 0xb2c85325859fd67 from memory into f18
la x2, scratch
li x3, 0x9849c7d545fd6ab7 # load x3 with value 0x9849c7d545fd6ab7
sw x3, 0(x2) # store 0x9849c7d545fd6ab7 in memory
flh f27, 0(x2) # load 0x9849c7d545fd6ab7 from memory into f27
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f20, 0(x2) # load 0x000058b4 from memory into f20
fnmadd.h f13, f18, f27, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc93a)
la x2, scratch
li x3, 0x1805d44effd3910 # load x3 with value 0x1805d44effd3910
sw x3, 0(x2) # store 0x1805d44effd3910 in memory
flh f11, 0(x2) # load 0x1805d44effd3910 from memory into f11
la x2, scratch
li x3, 0x341d41b933da30b5 # load x3 with value 0x341d41b933da30b5
sw x3, 0(x2) # store 0x341d41b933da30b5 in memory
flh f19, 0(x2) # load 0x341d41b933da30b5 from memory into f19
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f5, 0(x2) # load 0x0000c93a from memory into f5
fnmadd.h f25, f11, f19, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
la x2, scratch
li x3, 0x3b4cfd75f5832a3f # load x3 with value 0x3b4cfd75f5832a3f
sw x3, 0(x2) # store 0x3b4cfd75f5832a3f in memory
flh f0, 0(x2) # load 0x3b4cfd75f5832a3f from memory into f0
la x2, scratch
li x3, 0xbfdeec3a43bab28 # load x3 with value 0xbfdeec3a43bab28
sw x3, 0(x2) # store 0xbfdeec3a43bab28 in memory
flh f9, 0(x2) # load 0xbfdeec3a43bab28 from memory into f9
la x2, scratch
li x3, 0x84274c0b20d830ce # load x3 with value 0x84274c0b20d830ce
sw x3, 0(x2) # store 0x84274c0b20d830ce in memory
flh f11, 0(x2) # load 0x84274c0b20d830ce from memory into f11
fnmadd.h f0, f0, f9, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
la x2, scratch
li x3, 0x62a656d7415c22b5 # load x3 with value 0x62a656d7415c22b5
sw x3, 0(x2) # store 0x62a656d7415c22b5 in memory
flh f1, 0(x2) # load 0x62a656d7415c22b5 from memory into f1
la x2, scratch
li x3, 0xfd51ad788e3f5cd6 # load x3 with value 0xfd51ad788e3f5cd6
sw x3, 0(x2) # store 0xfd51ad788e3f5cd6 in memory
flh f9, 0(x2) # load 0xfd51ad788e3f5cd6 from memory into f9
la x2, scratch
li x3, 0x2ce3ed912badf22e # load x3 with value 0x2ce3ed912badf22e
sw x3, 0(x2) # store 0x2ce3ed912badf22e in memory
flh f14, 0(x2) # load 0x2ce3ed912badf22e from memory into f14
fnmadd.h f1, f1, f9, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
la x2, scratch
li x3, 0x99bd7e46e4a9ab17 # load x3 with value 0x99bd7e46e4a9ab17
sw x3, 0(x2) # store 0x99bd7e46e4a9ab17 in memory
flh f2, 0(x2) # load 0x99bd7e46e4a9ab17 from memory into f2
la x2, scratch
li x3, 0x58db02692d46cc14 # load x3 with value 0x58db02692d46cc14
sw x3, 0(x2) # store 0x58db02692d46cc14 in memory
flh f6, 0(x2) # load 0x58db02692d46cc14 from memory into f6
la x2, scratch
li x3, 0xa2b61f4a77b9f6c6 # load x3 with value 0xa2b61f4a77b9f6c6
sw x3, 0(x2) # store 0xa2b61f4a77b9f6c6 in memory
flh f14, 0(x2) # load 0xa2b61f4a77b9f6c6 from memory into f14
fnmadd.h f2, f2, f6, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
la x2, scratch
li x3, 0x15612e89662c4f6 # load x3 with value 0x15612e89662c4f6
sw x3, 0(x2) # store 0x15612e89662c4f6 in memory
flh f3, 0(x2) # load 0x15612e89662c4f6 from memory into f3
la x2, scratch
li x3, 0xc247ab3729b82541 # load x3 with value 0xc247ab3729b82541
sw x3, 0(x2) # store 0xc247ab3729b82541 in memory
flh f23, 0(x2) # load 0xc247ab3729b82541 from memory into f23
la x2, scratch
li x3, 0xf84f3b4728baf823 # load x3 with value 0xf84f3b4728baf823
sw x3, 0(x2) # store 0xf84f3b4728baf823 in memory
flh f10, 0(x2) # load 0xf84f3b4728baf823 from memory into f10
fnmadd.h f3, f3, f23, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x13ac17648807c2cb # load x3 with value 0x13ac17648807c2cb
sw x3, 0(x2) # store 0x13ac17648807c2cb in memory
flh f4, 0(x2) # load 0x13ac17648807c2cb from memory into f4
la x2, scratch
li x3, 0x6e21a2ebb1b70efe # load x3 with value 0x6e21a2ebb1b70efe
sw x3, 0(x2) # store 0x6e21a2ebb1b70efe in memory
flh f7, 0(x2) # load 0x6e21a2ebb1b70efe from memory into f7
la x2, scratch
li x3, 0xfe7cf7baaa3c52eb # load x3 with value 0xfe7cf7baaa3c52eb
sw x3, 0(x2) # store 0xfe7cf7baaa3c52eb in memory
flh f6, 0(x2) # load 0xfe7cf7baaa3c52eb from memory into f6
fnmadd.h f4, f4, f7, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x2a1377d095bf7081 # load x3 with value 0x2a1377d095bf7081
sw x3, 0(x2) # store 0x2a1377d095bf7081 in memory
flh f5, 0(x2) # load 0x2a1377d095bf7081 from memory into f5
la x2, scratch
li x3, 0xa79e1d63bfee5b07 # load x3 with value 0xa79e1d63bfee5b07
sw x3, 0(x2) # store 0xa79e1d63bfee5b07 in memory
flh f14, 0(x2) # load 0xa79e1d63bfee5b07 from memory into f14
la x2, scratch
li x3, 0x1028de887c1a75f8 # load x3 with value 0x1028de887c1a75f8
sw x3, 0(x2) # store 0x1028de887c1a75f8 in memory
flh f31, 0(x2) # load 0x1028de887c1a75f8 from memory into f31
fnmadd.h f5, f5, f14, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x5327a8ba8c16b270 # load x3 with value 0x5327a8ba8c16b270
sw x3, 0(x2) # store 0x5327a8ba8c16b270 in memory
flh f6, 0(x2) # load 0x5327a8ba8c16b270 from memory into f6
la x2, scratch
li x3, 0xfe04a081c4f95841 # load x3 with value 0xfe04a081c4f95841
sw x3, 0(x2) # store 0xfe04a081c4f95841 in memory
flh f10, 0(x2) # load 0xfe04a081c4f95841 from memory into f10
la x2, scratch
li x3, 0x9e89672bf73eb2c5 # load x3 with value 0x9e89672bf73eb2c5
sw x3, 0(x2) # store 0x9e89672bf73eb2c5 in memory
flh f3, 0(x2) # load 0x9e89672bf73eb2c5 from memory into f3
fnmadd.h f6, f6, f10, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x40e894c2f7eb4794 # load x3 with value 0x40e894c2f7eb4794
sw x3, 0(x2) # store 0x40e894c2f7eb4794 in memory
flh f7, 0(x2) # load 0x40e894c2f7eb4794 from memory into f7
la x2, scratch
li x3, 0x113e5f2f05ebaccf # load x3 with value 0x113e5f2f05ebaccf
sw x3, 0(x2) # store 0x113e5f2f05ebaccf in memory
flh f22, 0(x2) # load 0x113e5f2f05ebaccf from memory into f22
la x2, scratch
li x3, 0xc48873a04cffe22e # load x3 with value 0xc48873a04cffe22e
sw x3, 0(x2) # store 0xc48873a04cffe22e in memory
flh f13, 0(x2) # load 0xc48873a04cffe22e from memory into f13
fnmadd.h f7, f7, f22, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
la x2, scratch
li x3, 0x32448e68f94dcd72 # load x3 with value 0x32448e68f94dcd72
sw x3, 0(x2) # store 0x32448e68f94dcd72 in memory
flh f8, 0(x2) # load 0x32448e68f94dcd72 from memory into f8
la x2, scratch
li x3, 0xbf58c9aa74eda49f # load x3 with value 0xbf58c9aa74eda49f
sw x3, 0(x2) # store 0xbf58c9aa74eda49f in memory
flh f9, 0(x2) # load 0xbf58c9aa74eda49f from memory into f9
la x2, scratch
li x3, 0x2158eac4e1c5a053 # load x3 with value 0x2158eac4e1c5a053
sw x3, 0(x2) # store 0x2158eac4e1c5a053 in memory
flh f21, 0(x2) # load 0x2158eac4e1c5a053 from memory into f21
fnmadd.h f8, f8, f9, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
la x2, scratch
li x3, 0xb8fac8c83221cdb0 # load x3 with value 0xb8fac8c83221cdb0
sw x3, 0(x2) # store 0xb8fac8c83221cdb0 in memory
flh f9, 0(x2) # load 0xb8fac8c83221cdb0 from memory into f9
la x2, scratch
li x3, 0xaa978e95d0af186d # load x3 with value 0xaa978e95d0af186d
sw x3, 0(x2) # store 0xaa978e95d0af186d in memory
flh f14, 0(x2) # load 0xaa978e95d0af186d from memory into f14
la x2, scratch
li x3, 0x296e52dd56ae4e89 # load x3 with value 0x296e52dd56ae4e89
sw x3, 0(x2) # store 0x296e52dd56ae4e89 in memory
flh f19, 0(x2) # load 0x296e52dd56ae4e89 from memory into f19
fnmadd.h f9, f9, f14, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
la x2, scratch
li x3, 0xc7b57600924e8a5c # load x3 with value 0xc7b57600924e8a5c
sw x3, 0(x2) # store 0xc7b57600924e8a5c in memory
flh f10, 0(x2) # load 0xc7b57600924e8a5c from memory into f10
la x2, scratch
li x3, 0x91b8324f29721579 # load x3 with value 0x91b8324f29721579
sw x3, 0(x2) # store 0x91b8324f29721579 in memory
flh f26, 0(x2) # load 0x91b8324f29721579 from memory into f26
la x2, scratch
li x3, 0x4d64e4ef4304ccf # load x3 with value 0x4d64e4ef4304ccf
sw x3, 0(x2) # store 0x4d64e4ef4304ccf in memory
flh f20, 0(x2) # load 0x4d64e4ef4304ccf from memory into f20
fnmadd.h f10, f10, f26, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
la x2, scratch
li x3, 0xc7eef4feb1d31c43 # load x3 with value 0xc7eef4feb1d31c43
sw x3, 0(x2) # store 0xc7eef4feb1d31c43 in memory
flh f11, 0(x2) # load 0xc7eef4feb1d31c43 from memory into f11
la x2, scratch
li x3, 0xffabeba35c67b8d3 # load x3 with value 0xffabeba35c67b8d3
sw x3, 0(x2) # store 0xffabeba35c67b8d3 in memory
flh f30, 0(x2) # load 0xffabeba35c67b8d3 from memory into f30
la x2, scratch
li x3, 0x98a2c994c0c1f90f # load x3 with value 0x98a2c994c0c1f90f
sw x3, 0(x2) # store 0x98a2c994c0c1f90f in memory
flh f23, 0(x2) # load 0x98a2c994c0c1f90f from memory into f23
fnmadd.h f11, f11, f30, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
la x2, scratch
li x3, 0xa8893a95cbb54e8b # load x3 with value 0xa8893a95cbb54e8b
sw x3, 0(x2) # store 0xa8893a95cbb54e8b in memory
flh f12, 0(x2) # load 0xa8893a95cbb54e8b from memory into f12
la x2, scratch
li x3, 0x4c26f4e81ac8da9b # load x3 with value 0x4c26f4e81ac8da9b
sw x3, 0(x2) # store 0x4c26f4e81ac8da9b in memory
flh f6, 0(x2) # load 0x4c26f4e81ac8da9b from memory into f6
la x2, scratch
li x3, 0x1b3039a09a0848a0 # load x3 with value 0x1b3039a09a0848a0
sw x3, 0(x2) # store 0x1b3039a09a0848a0 in memory
flh f18, 0(x2) # load 0x1b3039a09a0848a0 from memory into f18
fnmadd.h f12, f12, f6, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
la x2, scratch
li x3, 0xdd8099f440446eea # load x3 with value 0xdd8099f440446eea
sw x3, 0(x2) # store 0xdd8099f440446eea in memory
flh f13, 0(x2) # load 0xdd8099f440446eea from memory into f13
la x2, scratch
li x3, 0x22d4df3fba1d5e89 # load x3 with value 0x22d4df3fba1d5e89
sw x3, 0(x2) # store 0x22d4df3fba1d5e89 in memory
flh f24, 0(x2) # load 0x22d4df3fba1d5e89 from memory into f24
la x2, scratch
li x3, 0x4e30d9132ea49261 # load x3 with value 0x4e30d9132ea49261
sw x3, 0(x2) # store 0x4e30d9132ea49261 in memory
flh f21, 0(x2) # load 0x4e30d9132ea49261 from memory into f21
fnmadd.h f13, f13, f24, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
la x2, scratch
li x3, 0x20eb483293ee0552 # load x3 with value 0x20eb483293ee0552
sw x3, 0(x2) # store 0x20eb483293ee0552 in memory
flh f14, 0(x2) # load 0x20eb483293ee0552 from memory into f14
la x2, scratch
li x3, 0xac2eb1e1074fc28f # load x3 with value 0xac2eb1e1074fc28f
sw x3, 0(x2) # store 0xac2eb1e1074fc28f in memory
flh f15, 0(x2) # load 0xac2eb1e1074fc28f from memory into f15
la x2, scratch
li x3, 0xc1d3703ab30c433d # load x3 with value 0xc1d3703ab30c433d
sw x3, 0(x2) # store 0xc1d3703ab30c433d in memory
flh f23, 0(x2) # load 0xc1d3703ab30c433d from memory into f23
fnmadd.h f14, f14, f15, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
la x2, scratch
li x3, 0x4e043e1a84a4f8ed # load x3 with value 0x4e043e1a84a4f8ed
sw x3, 0(x2) # store 0x4e043e1a84a4f8ed in memory
flh f15, 0(x2) # load 0x4e043e1a84a4f8ed from memory into f15
la x2, scratch
li x3, 0xe9f78bdd5db322a8 # load x3 with value 0xe9f78bdd5db322a8
sw x3, 0(x2) # store 0xe9f78bdd5db322a8 in memory
flh f3, 0(x2) # load 0xe9f78bdd5db322a8 from memory into f3
la x2, scratch
li x3, 0x83e8e6d4b7a47b96 # load x3 with value 0x83e8e6d4b7a47b96
sw x3, 0(x2) # store 0x83e8e6d4b7a47b96 in memory
flh f19, 0(x2) # load 0x83e8e6d4b7a47b96 from memory into f19
fnmadd.h f15, f15, f3, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
la x2, scratch
li x3, 0x2ee23947bf5d1cd0 # load x3 with value 0x2ee23947bf5d1cd0
sw x3, 0(x2) # store 0x2ee23947bf5d1cd0 in memory
flh f16, 0(x2) # load 0x2ee23947bf5d1cd0 from memory into f16
la x2, scratch
li x3, 0x25329ab429c682fd # load x3 with value 0x25329ab429c682fd
sw x3, 0(x2) # store 0x25329ab429c682fd in memory
flh f12, 0(x2) # load 0x25329ab429c682fd from memory into f12
la x2, scratch
li x3, 0x1e4e25640a0490b3 # load x3 with value 0x1e4e25640a0490b3
sw x3, 0(x2) # store 0x1e4e25640a0490b3 in memory
flh f8, 0(x2) # load 0x1e4e25640a0490b3 from memory into f8
fnmadd.h f16, f16, f12, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
la x2, scratch
li x3, 0xb7113ac441dfc496 # load x3 with value 0xb7113ac441dfc496
sw x3, 0(x2) # store 0xb7113ac441dfc496 in memory
flh f17, 0(x2) # load 0xb7113ac441dfc496 from memory into f17
la x2, scratch
li x3, 0x3fde4cfd0cfba13c # load x3 with value 0x3fde4cfd0cfba13c
sw x3, 0(x2) # store 0x3fde4cfd0cfba13c in memory
flh f23, 0(x2) # load 0x3fde4cfd0cfba13c from memory into f23
la x2, scratch
li x3, 0xfa9525e19625b55b # load x3 with value 0xfa9525e19625b55b
sw x3, 0(x2) # store 0xfa9525e19625b55b in memory
flh f18, 0(x2) # load 0xfa9525e19625b55b from memory into f18
fnmadd.h f17, f17, f23, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
la x2, scratch
li x3, 0x7c72b025cbf0d2c3 # load x3 with value 0x7c72b025cbf0d2c3
sw x3, 0(x2) # store 0x7c72b025cbf0d2c3 in memory
flh f18, 0(x2) # load 0x7c72b025cbf0d2c3 from memory into f18
la x2, scratch
li x3, 0x68c31e8416950bb5 # load x3 with value 0x68c31e8416950bb5
sw x3, 0(x2) # store 0x68c31e8416950bb5 in memory
flh f2, 0(x2) # load 0x68c31e8416950bb5 from memory into f2
la x2, scratch
li x3, 0x75302af082c396d7 # load x3 with value 0x75302af082c396d7
sw x3, 0(x2) # store 0x75302af082c396d7 in memory
flh f20, 0(x2) # load 0x75302af082c396d7 from memory into f20
fnmadd.h f18, f18, f2, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
la x2, scratch
li x3, 0xce446fa14e3604dc # load x3 with value 0xce446fa14e3604dc
sw x3, 0(x2) # store 0xce446fa14e3604dc in memory
flh f19, 0(x2) # load 0xce446fa14e3604dc from memory into f19
la x2, scratch
li x3, 0x8b197387ab7d6b2 # load x3 with value 0x8b197387ab7d6b2
sw x3, 0(x2) # store 0x8b197387ab7d6b2 in memory
flh f31, 0(x2) # load 0x8b197387ab7d6b2 from memory into f31
la x2, scratch
li x3, 0x7fbd9d5d4b4e9b3b # load x3 with value 0x7fbd9d5d4b4e9b3b
sw x3, 0(x2) # store 0x7fbd9d5d4b4e9b3b in memory
flh f7, 0(x2) # load 0x7fbd9d5d4b4e9b3b from memory into f7
fnmadd.h f19, f19, f31, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
la x2, scratch
li x3, 0xb3e74aaa7c938261 # load x3 with value 0xb3e74aaa7c938261
sw x3, 0(x2) # store 0xb3e74aaa7c938261 in memory
flh f20, 0(x2) # load 0xb3e74aaa7c938261 from memory into f20
la x2, scratch
li x3, 0x176d46b69bf60ee7 # load x3 with value 0x176d46b69bf60ee7
sw x3, 0(x2) # store 0x176d46b69bf60ee7 in memory
flh f14, 0(x2) # load 0x176d46b69bf60ee7 from memory into f14
la x2, scratch
li x3, 0x3b282b0f77d9d447 # load x3 with value 0x3b282b0f77d9d447
sw x3, 0(x2) # store 0x3b282b0f77d9d447 in memory
flh f18, 0(x2) # load 0x3b282b0f77d9d447 from memory into f18
fnmadd.h f20, f20, f14, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
la x2, scratch
li x3, 0x6531f1029b4798f7 # load x3 with value 0x6531f1029b4798f7
sw x3, 0(x2) # store 0x6531f1029b4798f7 in memory
flh f21, 0(x2) # load 0x6531f1029b4798f7 from memory into f21
la x2, scratch
li x3, 0x506126c3310a8824 # load x3 with value 0x506126c3310a8824
sw x3, 0(x2) # store 0x506126c3310a8824 in memory
flh f9, 0(x2) # load 0x506126c3310a8824 from memory into f9
la x2, scratch
li x3, 0x7641d15d5a46996d # load x3 with value 0x7641d15d5a46996d
sw x3, 0(x2) # store 0x7641d15d5a46996d in memory
flh f26, 0(x2) # load 0x7641d15d5a46996d from memory into f26
fnmadd.h f21, f21, f9, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
la x2, scratch
li x3, 0xb5fd6e9710ce8445 # load x3 with value 0xb5fd6e9710ce8445
sw x3, 0(x2) # store 0xb5fd6e9710ce8445 in memory
flh f22, 0(x2) # load 0xb5fd6e9710ce8445 from memory into f22
la x2, scratch
li x3, 0xb02ec146e748c8c3 # load x3 with value 0xb02ec146e748c8c3
sw x3, 0(x2) # store 0xb02ec146e748c8c3 in memory
flh f15, 0(x2) # load 0xb02ec146e748c8c3 from memory into f15
la x2, scratch
li x3, 0x95f8a7b0a69cdae1 # load x3 with value 0x95f8a7b0a69cdae1
sw x3, 0(x2) # store 0x95f8a7b0a69cdae1 in memory
flh f11, 0(x2) # load 0x95f8a7b0a69cdae1 from memory into f11
fnmadd.h f22, f22, f15, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
la x2, scratch
li x3, 0x5535403c886e4393 # load x3 with value 0x5535403c886e4393
sw x3, 0(x2) # store 0x5535403c886e4393 in memory
flh f23, 0(x2) # load 0x5535403c886e4393 from memory into f23
la x2, scratch
li x3, 0xe2f249d9bfb6f7e4 # load x3 with value 0xe2f249d9bfb6f7e4
sw x3, 0(x2) # store 0xe2f249d9bfb6f7e4 in memory
flh f18, 0(x2) # load 0xe2f249d9bfb6f7e4 from memory into f18
la x2, scratch
li x3, 0xa284652d02ae6bd8 # load x3 with value 0xa284652d02ae6bd8
sw x3, 0(x2) # store 0xa284652d02ae6bd8 in memory
flh f20, 0(x2) # load 0xa284652d02ae6bd8 from memory into f20
fnmadd.h f23, f23, f18, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
la x2, scratch
li x3, 0x5221aa8c589288a4 # load x3 with value 0x5221aa8c589288a4
sw x3, 0(x2) # store 0x5221aa8c589288a4 in memory
flh f24, 0(x2) # load 0x5221aa8c589288a4 from memory into f24
la x2, scratch
li x3, 0x65cf9595e65a14bc # load x3 with value 0x65cf9595e65a14bc
sw x3, 0(x2) # store 0x65cf9595e65a14bc in memory
flh f28, 0(x2) # load 0x65cf9595e65a14bc from memory into f28
la x2, scratch
li x3, 0x92e0007a81f714ce # load x3 with value 0x92e0007a81f714ce
sw x3, 0(x2) # store 0x92e0007a81f714ce in memory
flh f24, 0(x2) # load 0x92e0007a81f714ce from memory into f24
fnmadd.h f24, f24, f28, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
la x2, scratch
li x3, 0xedfad0c8c12d1b09 # load x3 with value 0xedfad0c8c12d1b09
sw x3, 0(x2) # store 0xedfad0c8c12d1b09 in memory
flh f25, 0(x2) # load 0xedfad0c8c12d1b09 from memory into f25
la x2, scratch
li x3, 0x82647570ce2b11f1 # load x3 with value 0x82647570ce2b11f1
sw x3, 0(x2) # store 0x82647570ce2b11f1 in memory
flh f11, 0(x2) # load 0x82647570ce2b11f1 from memory into f11
la x2, scratch
li x3, 0x3fb60bc8001610e1 # load x3 with value 0x3fb60bc8001610e1
sw x3, 0(x2) # store 0x3fb60bc8001610e1 in memory
flh f20, 0(x2) # load 0x3fb60bc8001610e1 from memory into f20
fnmadd.h f25, f25, f11, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
la x2, scratch
li x3, 0xf4ba2c80b965b949 # load x3 with value 0xf4ba2c80b965b949
sw x3, 0(x2) # store 0xf4ba2c80b965b949 in memory
flh f26, 0(x2) # load 0xf4ba2c80b965b949 from memory into f26
la x2, scratch
li x3, 0xafa2a8751893eabc # load x3 with value 0xafa2a8751893eabc
sw x3, 0(x2) # store 0xafa2a8751893eabc in memory
flh f14, 0(x2) # load 0xafa2a8751893eabc from memory into f14
la x2, scratch
li x3, 0x3d9a92d156fb8f9b # load x3 with value 0x3d9a92d156fb8f9b
sw x3, 0(x2) # store 0x3d9a92d156fb8f9b in memory
flh f30, 0(x2) # load 0x3d9a92d156fb8f9b from memory into f30
fnmadd.h f26, f26, f14, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
la x2, scratch
li x3, 0x6e7a3f578d5fdf94 # load x3 with value 0x6e7a3f578d5fdf94
sw x3, 0(x2) # store 0x6e7a3f578d5fdf94 in memory
flh f27, 0(x2) # load 0x6e7a3f578d5fdf94 from memory into f27
la x2, scratch
li x3, 0x3625656f41337c2c # load x3 with value 0x3625656f41337c2c
sw x3, 0(x2) # store 0x3625656f41337c2c in memory
flh f1, 0(x2) # load 0x3625656f41337c2c from memory into f1
la x2, scratch
li x3, 0x59cb7e1bf8b57b9e # load x3 with value 0x59cb7e1bf8b57b9e
sw x3, 0(x2) # store 0x59cb7e1bf8b57b9e in memory
flh f24, 0(x2) # load 0x59cb7e1bf8b57b9e from memory into f24
fnmadd.h f27, f27, f1, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
la x2, scratch
li x3, 0xccf7dd3bc593112 # load x3 with value 0xccf7dd3bc593112
sw x3, 0(x2) # store 0xccf7dd3bc593112 in memory
flh f28, 0(x2) # load 0xccf7dd3bc593112 from memory into f28
la x2, scratch
li x3, 0x8552df5ff08e08d7 # load x3 with value 0x8552df5ff08e08d7
sw x3, 0(x2) # store 0x8552df5ff08e08d7 in memory
flh f12, 0(x2) # load 0x8552df5ff08e08d7 from memory into f12
la x2, scratch
li x3, 0x255b74c5fb414283 # load x3 with value 0x255b74c5fb414283
sw x3, 0(x2) # store 0x255b74c5fb414283 in memory
flh f17, 0(x2) # load 0x255b74c5fb414283 from memory into f17
fnmadd.h f28, f28, f12, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
la x2, scratch
li x3, 0xe000db50cb2f64a # load x3 with value 0xe000db50cb2f64a
sw x3, 0(x2) # store 0xe000db50cb2f64a in memory
flh f29, 0(x2) # load 0xe000db50cb2f64a from memory into f29
la x2, scratch
li x3, 0x45a001a0f50bae03 # load x3 with value 0x45a001a0f50bae03
sw x3, 0(x2) # store 0x45a001a0f50bae03 in memory
flh f11, 0(x2) # load 0x45a001a0f50bae03 from memory into f11
la x2, scratch
li x3, 0x6fbc65238b974cd7 # load x3 with value 0x6fbc65238b974cd7
sw x3, 0(x2) # store 0x6fbc65238b974cd7 in memory
flh f26, 0(x2) # load 0x6fbc65238b974cd7 from memory into f26
fnmadd.h f29, f29, f11, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
la x2, scratch
li x3, 0x2ee2cdbd151ef646 # load x3 with value 0x2ee2cdbd151ef646
sw x3, 0(x2) # store 0x2ee2cdbd151ef646 in memory
flh f30, 0(x2) # load 0x2ee2cdbd151ef646 from memory into f30
la x2, scratch
li x3, 0xec2cef23961dc9f4 # load x3 with value 0xec2cef23961dc9f4
sw x3, 0(x2) # store 0xec2cef23961dc9f4 in memory
flh f15, 0(x2) # load 0xec2cef23961dc9f4 from memory into f15
la x2, scratch
li x3, 0xd369392ba825da22 # load x3 with value 0xd369392ba825da22
sw x3, 0(x2) # store 0xd369392ba825da22 in memory
flh f13, 0(x2) # load 0xd369392ba825da22 from memory into f13
fnmadd.h f30, f30, f15, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
la x2, scratch
li x3, 0x86050dcd0a3768ba # load x3 with value 0x86050dcd0a3768ba
sw x3, 0(x2) # store 0x86050dcd0a3768ba in memory
flh f31, 0(x2) # load 0x86050dcd0a3768ba from memory into f31
la x2, scratch
li x3, 0x5dad88d1e76ab650 # load x3 with value 0x5dad88d1e76ab650
sw x3, 0(x2) # store 0x5dad88d1e76ab650 in memory
flh f17, 0(x2) # load 0x5dad88d1e76ab650 from memory into f17
la x2, scratch
li x3, 0x8fd18788d67d163c # load x3 with value 0x8fd18788d67d163c
sw x3, 0(x2) # store 0x8fd18788d67d163c in memory
flh f18, 0(x2) # load 0x8fd18788d67d163c from memory into f18
fnmadd.h f31, f31, f17, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
la x2, scratch
li x3, 0x5920962c91b4184c # load x3 with value 0x5920962c91b4184c
sw x3, 0(x2) # store 0x5920962c91b4184c in memory
flh f21, 0(x2) # load 0x5920962c91b4184c from memory into f21
la x2, scratch
li x3, 0x72cf2828033b0ce6 # load x3 with value 0x72cf2828033b0ce6
sw x3, 0(x2) # store 0x72cf2828033b0ce6 in memory
flh f0, 0(x2) # load 0x72cf2828033b0ce6 from memory into f0
la x2, scratch
li x3, 0xe70fc9c2b3e4bf57 # load x3 with value 0xe70fc9c2b3e4bf57
sw x3, 0(x2) # store 0xe70fc9c2b3e4bf57 in memory
flh f5, 0(x2) # load 0xe70fc9c2b3e4bf57 from memory into f5
fnmadd.h f0, f21, f0, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
la x2, scratch
li x3, 0x18d715be44d7fcea # load x3 with value 0x18d715be44d7fcea
sw x3, 0(x2) # store 0x18d715be44d7fcea in memory
flh f28, 0(x2) # load 0x18d715be44d7fcea from memory into f28
la x2, scratch
li x3, 0x182559d8aad17163 # load x3 with value 0x182559d8aad17163
sw x3, 0(x2) # store 0x182559d8aad17163 in memory
flh f1, 0(x2) # load 0x182559d8aad17163 from memory into f1
la x2, scratch
li x3, 0x1f908c0aa546428c # load x3 with value 0x1f908c0aa546428c
sw x3, 0(x2) # store 0x1f908c0aa546428c in memory
flh f2, 0(x2) # load 0x1f908c0aa546428c from memory into f2
fnmadd.h f1, f28, f1, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
la x2, scratch
li x3, 0xa71ba3b1967001f8 # load x3 with value 0xa71ba3b1967001f8
sw x3, 0(x2) # store 0xa71ba3b1967001f8 in memory
flh f18, 0(x2) # load 0xa71ba3b1967001f8 from memory into f18
la x2, scratch
li x3, 0x9d46d39525acd3a0 # load x3 with value 0x9d46d39525acd3a0
sw x3, 0(x2) # store 0x9d46d39525acd3a0 in memory
flh f2, 0(x2) # load 0x9d46d39525acd3a0 from memory into f2
la x2, scratch
li x3, 0xafa7b6a23e130282 # load x3 with value 0xafa7b6a23e130282
sw x3, 0(x2) # store 0xafa7b6a23e130282 in memory
flh f1, 0(x2) # load 0xafa7b6a23e130282 from memory into f1
fnmadd.h f2, f18, f2, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
la x2, scratch
li x3, 0x8ca1fc0d5a6d4104 # load x3 with value 0x8ca1fc0d5a6d4104
sw x3, 0(x2) # store 0x8ca1fc0d5a6d4104 in memory
flh f22, 0(x2) # load 0x8ca1fc0d5a6d4104 from memory into f22
la x2, scratch
li x3, 0x7738b4e871dda381 # load x3 with value 0x7738b4e871dda381
sw x3, 0(x2) # store 0x7738b4e871dda381 in memory
flh f3, 0(x2) # load 0x7738b4e871dda381 from memory into f3
la x2, scratch
li x3, 0x7b8d0ff7da168423 # load x3 with value 0x7b8d0ff7da168423
sw x3, 0(x2) # store 0x7b8d0ff7da168423 in memory
flh f9, 0(x2) # load 0x7b8d0ff7da168423 from memory into f9
fnmadd.h f3, f22, f3, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x39058eaac317609b # load x3 with value 0x39058eaac317609b
sw x3, 0(x2) # store 0x39058eaac317609b in memory
flh f12, 0(x2) # load 0x39058eaac317609b from memory into f12
la x2, scratch
li x3, 0x76a65a23a41e5db2 # load x3 with value 0x76a65a23a41e5db2
sw x3, 0(x2) # store 0x76a65a23a41e5db2 in memory
flh f4, 0(x2) # load 0x76a65a23a41e5db2 from memory into f4
la x2, scratch
li x3, 0xd76f1af48a8dda9d # load x3 with value 0xd76f1af48a8dda9d
sw x3, 0(x2) # store 0xd76f1af48a8dda9d in memory
flh f23, 0(x2) # load 0xd76f1af48a8dda9d from memory into f23
fnmadd.h f4, f12, f4, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x97d4cb3725353a26 # load x3 with value 0x97d4cb3725353a26
sw x3, 0(x2) # store 0x97d4cb3725353a26 in memory
flh f31, 0(x2) # load 0x97d4cb3725353a26 from memory into f31
la x2, scratch
li x3, 0x8780e0fe229dc0d5 # load x3 with value 0x8780e0fe229dc0d5
sw x3, 0(x2) # store 0x8780e0fe229dc0d5 in memory
flh f5, 0(x2) # load 0x8780e0fe229dc0d5 from memory into f5
la x2, scratch
li x3, 0x296a45aa1a83448e # load x3 with value 0x296a45aa1a83448e
sw x3, 0(x2) # store 0x296a45aa1a83448e in memory
flh f18, 0(x2) # load 0x296a45aa1a83448e from memory into f18
fnmadd.h f5, f31, f5, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xa23a9610c46c1aac # load x3 with value 0xa23a9610c46c1aac
sw x3, 0(x2) # store 0xa23a9610c46c1aac in memory
flh f18, 0(x2) # load 0xa23a9610c46c1aac from memory into f18
la x2, scratch
li x3, 0xdc4ffadeb2a51aac # load x3 with value 0xdc4ffadeb2a51aac
sw x3, 0(x2) # store 0xdc4ffadeb2a51aac in memory
flh f6, 0(x2) # load 0xdc4ffadeb2a51aac from memory into f6
la x2, scratch
li x3, 0x1571a08801486699 # load x3 with value 0x1571a08801486699
sw x3, 0(x2) # store 0x1571a08801486699 in memory
flh f15, 0(x2) # load 0x1571a08801486699 from memory into f15
fnmadd.h f6, f18, f6, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xd78ab07a6f012db2 # load x3 with value 0xd78ab07a6f012db2
sw x3, 0(x2) # store 0xd78ab07a6f012db2 in memory
flh f13, 0(x2) # load 0xd78ab07a6f012db2 from memory into f13
la x2, scratch
li x3, 0xd9e22123b0beb756 # load x3 with value 0xd9e22123b0beb756
sw x3, 0(x2) # store 0xd9e22123b0beb756 in memory
flh f7, 0(x2) # load 0xd9e22123b0beb756 from memory into f7
la x2, scratch
li x3, 0x69dcd58931f914e2 # load x3 with value 0x69dcd58931f914e2
sw x3, 0(x2) # store 0x69dcd58931f914e2 in memory
flh f26, 0(x2) # load 0x69dcd58931f914e2 from memory into f26
fnmadd.h f7, f13, f7, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
la x2, scratch
li x3, 0x7dee0d3be2919b52 # load x3 with value 0x7dee0d3be2919b52
sw x3, 0(x2) # store 0x7dee0d3be2919b52 in memory
flh f17, 0(x2) # load 0x7dee0d3be2919b52 from memory into f17
la x2, scratch
li x3, 0x6d720ec36ba51717 # load x3 with value 0x6d720ec36ba51717
sw x3, 0(x2) # store 0x6d720ec36ba51717 in memory
flh f8, 0(x2) # load 0x6d720ec36ba51717 from memory into f8
la x2, scratch
li x3, 0xf9632a48a739d38d # load x3 with value 0xf9632a48a739d38d
sw x3, 0(x2) # store 0xf9632a48a739d38d in memory
flh f23, 0(x2) # load 0xf9632a48a739d38d from memory into f23
fnmadd.h f8, f17, f8, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
la x2, scratch
li x3, 0x677381d142d5b2e7 # load x3 with value 0x677381d142d5b2e7
sw x3, 0(x2) # store 0x677381d142d5b2e7 in memory
flh f30, 0(x2) # load 0x677381d142d5b2e7 from memory into f30
la x2, scratch
li x3, 0xc74759fadad100e4 # load x3 with value 0xc74759fadad100e4
sw x3, 0(x2) # store 0xc74759fadad100e4 in memory
flh f9, 0(x2) # load 0xc74759fadad100e4 from memory into f9
la x2, scratch
li x3, 0xf82a9594713815b1 # load x3 with value 0xf82a9594713815b1
sw x3, 0(x2) # store 0xf82a9594713815b1 in memory
flh f20, 0(x2) # load 0xf82a9594713815b1 from memory into f20
fnmadd.h f9, f30, f9, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
la x2, scratch
li x3, 0x161b181a506753f2 # load x3 with value 0x161b181a506753f2
sw x3, 0(x2) # store 0x161b181a506753f2 in memory
flh f14, 0(x2) # load 0x161b181a506753f2 from memory into f14
la x2, scratch
li x3, 0xbca76810c5685a7a # load x3 with value 0xbca76810c5685a7a
sw x3, 0(x2) # store 0xbca76810c5685a7a in memory
flh f10, 0(x2) # load 0xbca76810c5685a7a from memory into f10
la x2, scratch
li x3, 0x31d14e147c9cd195 # load x3 with value 0x31d14e147c9cd195
sw x3, 0(x2) # store 0x31d14e147c9cd195 in memory
flh f1, 0(x2) # load 0x31d14e147c9cd195 from memory into f1
fnmadd.h f10, f14, f10, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
la x2, scratch
li x3, 0x49ca3a636b8b8db7 # load x3 with value 0x49ca3a636b8b8db7
sw x3, 0(x2) # store 0x49ca3a636b8b8db7 in memory
flh f7, 0(x2) # load 0x49ca3a636b8b8db7 from memory into f7
la x2, scratch
li x3, 0xffd70f4dec995c3 # load x3 with value 0xffd70f4dec995c3
sw x3, 0(x2) # store 0xffd70f4dec995c3 in memory
flh f11, 0(x2) # load 0xffd70f4dec995c3 from memory into f11
la x2, scratch
li x3, 0x209135d37e77439b # load x3 with value 0x209135d37e77439b
sw x3, 0(x2) # store 0x209135d37e77439b in memory
flh f30, 0(x2) # load 0x209135d37e77439b from memory into f30
fnmadd.h f11, f7, f11, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
la x2, scratch
li x3, 0x1684f6aaa6f0949d # load x3 with value 0x1684f6aaa6f0949d
sw x3, 0(x2) # store 0x1684f6aaa6f0949d in memory
flh f9, 0(x2) # load 0x1684f6aaa6f0949d from memory into f9
la x2, scratch
li x3, 0x2c1d0b7ec30276f1 # load x3 with value 0x2c1d0b7ec30276f1
sw x3, 0(x2) # store 0x2c1d0b7ec30276f1 in memory
flh f12, 0(x2) # load 0x2c1d0b7ec30276f1 from memory into f12
la x2, scratch
li x3, 0xa1e66bf0f90feee9 # load x3 with value 0xa1e66bf0f90feee9
sw x3, 0(x2) # store 0xa1e66bf0f90feee9 in memory
flh f27, 0(x2) # load 0xa1e66bf0f90feee9 from memory into f27
fnmadd.h f12, f9, f12, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
la x2, scratch
li x3, 0x3fc6fca99dde7809 # load x3 with value 0x3fc6fca99dde7809
sw x3, 0(x2) # store 0x3fc6fca99dde7809 in memory
flh f16, 0(x2) # load 0x3fc6fca99dde7809 from memory into f16
la x2, scratch
li x3, 0x41bc4308005e51fa # load x3 with value 0x41bc4308005e51fa
sw x3, 0(x2) # store 0x41bc4308005e51fa in memory
flh f13, 0(x2) # load 0x41bc4308005e51fa from memory into f13
la x2, scratch
li x3, 0x7905dbe23387a4 # load x3 with value 0x7905dbe23387a4
sw x3, 0(x2) # store 0x7905dbe23387a4 in memory
flh f21, 0(x2) # load 0x7905dbe23387a4 from memory into f21
fnmadd.h f13, f16, f13, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
la x2, scratch
li x3, 0xe082c7dfbe73cd53 # load x3 with value 0xe082c7dfbe73cd53
sw x3, 0(x2) # store 0xe082c7dfbe73cd53 in memory
flh f7, 0(x2) # load 0xe082c7dfbe73cd53 from memory into f7
la x2, scratch
li x3, 0xce561d6ad8a1263b # load x3 with value 0xce561d6ad8a1263b
sw x3, 0(x2) # store 0xce561d6ad8a1263b in memory
flh f14, 0(x2) # load 0xce561d6ad8a1263b from memory into f14
la x2, scratch
li x3, 0x13c7925be70feeaf # load x3 with value 0x13c7925be70feeaf
sw x3, 0(x2) # store 0x13c7925be70feeaf in memory
flh f8, 0(x2) # load 0x13c7925be70feeaf from memory into f8
fnmadd.h f14, f7, f14, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
la x2, scratch
li x3, 0x5c666529b2145c1e # load x3 with value 0x5c666529b2145c1e
sw x3, 0(x2) # store 0x5c666529b2145c1e in memory
flh f28, 0(x2) # load 0x5c666529b2145c1e from memory into f28
la x2, scratch
li x3, 0x86b65ff536a9178c # load x3 with value 0x86b65ff536a9178c
sw x3, 0(x2) # store 0x86b65ff536a9178c in memory
flh f15, 0(x2) # load 0x86b65ff536a9178c from memory into f15
la x2, scratch
li x3, 0x96621693c09ca6 # load x3 with value 0x96621693c09ca6
sw x3, 0(x2) # store 0x96621693c09ca6 in memory
flh f8, 0(x2) # load 0x96621693c09ca6 from memory into f8
fnmadd.h f15, f28, f15, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
la x2, scratch
li x3, 0xfd4d679cf76d0dc5 # load x3 with value 0xfd4d679cf76d0dc5
sw x3, 0(x2) # store 0xfd4d679cf76d0dc5 in memory
flh f15, 0(x2) # load 0xfd4d679cf76d0dc5 from memory into f15
la x2, scratch
li x3, 0x5d3e801270836f19 # load x3 with value 0x5d3e801270836f19
sw x3, 0(x2) # store 0x5d3e801270836f19 in memory
flh f16, 0(x2) # load 0x5d3e801270836f19 from memory into f16
la x2, scratch
li x3, 0x32ff63becc05a3c3 # load x3 with value 0x32ff63becc05a3c3
sw x3, 0(x2) # store 0x32ff63becc05a3c3 in memory
flh f8, 0(x2) # load 0x32ff63becc05a3c3 from memory into f8
fnmadd.h f16, f15, f16, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
la x2, scratch
li x3, 0x47394d646c1bcdc # load x3 with value 0x47394d646c1bcdc
sw x3, 0(x2) # store 0x47394d646c1bcdc in memory
flh f30, 0(x2) # load 0x47394d646c1bcdc from memory into f30
la x2, scratch
li x3, 0x8172da96737a96ad # load x3 with value 0x8172da96737a96ad
sw x3, 0(x2) # store 0x8172da96737a96ad in memory
flh f17, 0(x2) # load 0x8172da96737a96ad from memory into f17
la x2, scratch
li x3, 0xd492fae7fde93c11 # load x3 with value 0xd492fae7fde93c11
sw x3, 0(x2) # store 0xd492fae7fde93c11 in memory
flh f8, 0(x2) # load 0xd492fae7fde93c11 from memory into f8
fnmadd.h f17, f30, f17, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
la x2, scratch
li x3, 0x4b80f84933ec1fbe # load x3 with value 0x4b80f84933ec1fbe
sw x3, 0(x2) # store 0x4b80f84933ec1fbe in memory
flh f5, 0(x2) # load 0x4b80f84933ec1fbe from memory into f5
la x2, scratch
li x3, 0xc2dfaffd5b50344c # load x3 with value 0xc2dfaffd5b50344c
sw x3, 0(x2) # store 0xc2dfaffd5b50344c in memory
flh f18, 0(x2) # load 0xc2dfaffd5b50344c from memory into f18
la x2, scratch
li x3, 0x5ea46362f6fc522a # load x3 with value 0x5ea46362f6fc522a
sw x3, 0(x2) # store 0x5ea46362f6fc522a in memory
flh f9, 0(x2) # load 0x5ea46362f6fc522a from memory into f9
fnmadd.h f18, f5, f18, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
la x2, scratch
li x3, 0x3beb1f0819a3aba4 # load x3 with value 0x3beb1f0819a3aba4
sw x3, 0(x2) # store 0x3beb1f0819a3aba4 in memory
flh f18, 0(x2) # load 0x3beb1f0819a3aba4 from memory into f18
la x2, scratch
li x3, 0x9dfdfa867d9025cd # load x3 with value 0x9dfdfa867d9025cd
sw x3, 0(x2) # store 0x9dfdfa867d9025cd in memory
flh f19, 0(x2) # load 0x9dfdfa867d9025cd from memory into f19
la x2, scratch
li x3, 0x494a087bc5559d0b # load x3 with value 0x494a087bc5559d0b
sw x3, 0(x2) # store 0x494a087bc5559d0b in memory
flh f6, 0(x2) # load 0x494a087bc5559d0b from memory into f6
fnmadd.h f19, f18, f19, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
la x2, scratch
li x3, 0x8505c9f9b1a459ea # load x3 with value 0x8505c9f9b1a459ea
sw x3, 0(x2) # store 0x8505c9f9b1a459ea in memory
flh f24, 0(x2) # load 0x8505c9f9b1a459ea from memory into f24
la x2, scratch
li x3, 0xd9c14f6ff7e5bb31 # load x3 with value 0xd9c14f6ff7e5bb31
sw x3, 0(x2) # store 0xd9c14f6ff7e5bb31 in memory
flh f20, 0(x2) # load 0xd9c14f6ff7e5bb31 from memory into f20
la x2, scratch
li x3, 0xf726abccd280f691 # load x3 with value 0xf726abccd280f691
sw x3, 0(x2) # store 0xf726abccd280f691 in memory
flh f17, 0(x2) # load 0xf726abccd280f691 from memory into f17
fnmadd.h f20, f24, f20, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
la x2, scratch
li x3, 0xf5ba7ab72f326268 # load x3 with value 0xf5ba7ab72f326268
sw x3, 0(x2) # store 0xf5ba7ab72f326268 in memory
flh f18, 0(x2) # load 0xf5ba7ab72f326268 from memory into f18
la x2, scratch
li x3, 0x3f6077680adbc51f # load x3 with value 0x3f6077680adbc51f
sw x3, 0(x2) # store 0x3f6077680adbc51f in memory
flh f21, 0(x2) # load 0x3f6077680adbc51f from memory into f21
la x2, scratch
li x3, 0x1b776cecf3130a28 # load x3 with value 0x1b776cecf3130a28
sw x3, 0(x2) # store 0x1b776cecf3130a28 in memory
flh f31, 0(x2) # load 0x1b776cecf3130a28 from memory into f31
fnmadd.h f21, f18, f21, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
la x2, scratch
li x3, 0x7afa37c2c4543106 # load x3 with value 0x7afa37c2c4543106
sw x3, 0(x2) # store 0x7afa37c2c4543106 in memory
flh f29, 0(x2) # load 0x7afa37c2c4543106 from memory into f29
la x2, scratch
li x3, 0x3b3719ab772442e4 # load x3 with value 0x3b3719ab772442e4
sw x3, 0(x2) # store 0x3b3719ab772442e4 in memory
flh f22, 0(x2) # load 0x3b3719ab772442e4 from memory into f22
la x2, scratch
li x3, 0xa0acd0282a8962e8 # load x3 with value 0xa0acd0282a8962e8
sw x3, 0(x2) # store 0xa0acd0282a8962e8 in memory
flh f7, 0(x2) # load 0xa0acd0282a8962e8 from memory into f7
fnmadd.h f22, f29, f22, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
la x2, scratch
li x3, 0xa0da6e8f6d8f8574 # load x3 with value 0xa0da6e8f6d8f8574
sw x3, 0(x2) # store 0xa0da6e8f6d8f8574 in memory
flh f29, 0(x2) # load 0xa0da6e8f6d8f8574 from memory into f29
la x2, scratch
li x3, 0xb8f212cf5d43a520 # load x3 with value 0xb8f212cf5d43a520
sw x3, 0(x2) # store 0xb8f212cf5d43a520 in memory
flh f23, 0(x2) # load 0xb8f212cf5d43a520 from memory into f23
la x2, scratch
li x3, 0xcf55d8e153363f53 # load x3 with value 0xcf55d8e153363f53
sw x3, 0(x2) # store 0xcf55d8e153363f53 in memory
flh f31, 0(x2) # load 0xcf55d8e153363f53 from memory into f31
fnmadd.h f23, f29, f23, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
la x2, scratch
li x3, 0xb32462ad4e7ed2ab # load x3 with value 0xb32462ad4e7ed2ab
sw x3, 0(x2) # store 0xb32462ad4e7ed2ab in memory
flh f31, 0(x2) # load 0xb32462ad4e7ed2ab from memory into f31
la x2, scratch
li x3, 0xedb6b3ad23dc1110 # load x3 with value 0xedb6b3ad23dc1110
sw x3, 0(x2) # store 0xedb6b3ad23dc1110 in memory
flh f24, 0(x2) # load 0xedb6b3ad23dc1110 from memory into f24
la x2, scratch
li x3, 0xa8fa382906a7926a # load x3 with value 0xa8fa382906a7926a
sw x3, 0(x2) # store 0xa8fa382906a7926a in memory
flh f13, 0(x2) # load 0xa8fa382906a7926a from memory into f13
fnmadd.h f24, f31, f24, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
la x2, scratch
li x3, 0x755e4a7fd6b4739c # load x3 with value 0x755e4a7fd6b4739c
sw x3, 0(x2) # store 0x755e4a7fd6b4739c in memory
flh f31, 0(x2) # load 0x755e4a7fd6b4739c from memory into f31
la x2, scratch
li x3, 0x466daf3911887809 # load x3 with value 0x466daf3911887809
sw x3, 0(x2) # store 0x466daf3911887809 in memory
flh f25, 0(x2) # load 0x466daf3911887809 from memory into f25
la x2, scratch
li x3, 0x503357fc61ac7be1 # load x3 with value 0x503357fc61ac7be1
sw x3, 0(x2) # store 0x503357fc61ac7be1 in memory
flh f26, 0(x2) # load 0x503357fc61ac7be1 from memory into f26
fnmadd.h f25, f31, f25, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
la x2, scratch
li x3, 0xbc8b458d65a592c9 # load x3 with value 0xbc8b458d65a592c9
sw x3, 0(x2) # store 0xbc8b458d65a592c9 in memory
flh f7, 0(x2) # load 0xbc8b458d65a592c9 from memory into f7
la x2, scratch
li x3, 0x9911a7b26ead5d88 # load x3 with value 0x9911a7b26ead5d88
sw x3, 0(x2) # store 0x9911a7b26ead5d88 in memory
flh f26, 0(x2) # load 0x9911a7b26ead5d88 from memory into f26
la x2, scratch
li x3, 0x1ad817fac67dd7af # load x3 with value 0x1ad817fac67dd7af
sw x3, 0(x2) # store 0x1ad817fac67dd7af in memory
flh f13, 0(x2) # load 0x1ad817fac67dd7af from memory into f13
fnmadd.h f26, f7, f26, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
la x2, scratch
li x3, 0x669564d98e58b7f6 # load x3 with value 0x669564d98e58b7f6
sw x3, 0(x2) # store 0x669564d98e58b7f6 in memory
flh f15, 0(x2) # load 0x669564d98e58b7f6 from memory into f15
la x2, scratch
li x3, 0x1846f4b0559d389e # load x3 with value 0x1846f4b0559d389e
sw x3, 0(x2) # store 0x1846f4b0559d389e in memory
flh f27, 0(x2) # load 0x1846f4b0559d389e from memory into f27
la x2, scratch
li x3, 0xd79f0cd1d6609705 # load x3 with value 0xd79f0cd1d6609705
sw x3, 0(x2) # store 0xd79f0cd1d6609705 in memory
flh f23, 0(x2) # load 0xd79f0cd1d6609705 from memory into f23
fnmadd.h f27, f15, f27, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
la x2, scratch
li x3, 0xa6c9b41ad569df98 # load x3 with value 0xa6c9b41ad569df98
sw x3, 0(x2) # store 0xa6c9b41ad569df98 in memory
flh f18, 0(x2) # load 0xa6c9b41ad569df98 from memory into f18
la x2, scratch
li x3, 0x87a0ce5d7a918645 # load x3 with value 0x87a0ce5d7a918645
sw x3, 0(x2) # store 0x87a0ce5d7a918645 in memory
flh f28, 0(x2) # load 0x87a0ce5d7a918645 from memory into f28
la x2, scratch
li x3, 0x3e93c591e802bb20 # load x3 with value 0x3e93c591e802bb20
sw x3, 0(x2) # store 0x3e93c591e802bb20 in memory
flh f9, 0(x2) # load 0x3e93c591e802bb20 from memory into f9
fnmadd.h f28, f18, f28, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
la x2, scratch
li x3, 0x62890022562f89d4 # load x3 with value 0x62890022562f89d4
sw x3, 0(x2) # store 0x62890022562f89d4 in memory
flh f13, 0(x2) # load 0x62890022562f89d4 from memory into f13
la x2, scratch
li x3, 0xb92e814a2db6df0c # load x3 with value 0xb92e814a2db6df0c
sw x3, 0(x2) # store 0xb92e814a2db6df0c in memory
flh f29, 0(x2) # load 0xb92e814a2db6df0c from memory into f29
la x2, scratch
li x3, 0x8b0df18711e0741c # load x3 with value 0x8b0df18711e0741c
sw x3, 0(x2) # store 0x8b0df18711e0741c in memory
flh f6, 0(x2) # load 0x8b0df18711e0741c from memory into f6
fnmadd.h f29, f13, f29, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
la x2, scratch
li x3, 0x6c3ffcd1c942d0c2 # load x3 with value 0x6c3ffcd1c942d0c2
sw x3, 0(x2) # store 0x6c3ffcd1c942d0c2 in memory
flh f13, 0(x2) # load 0x6c3ffcd1c942d0c2 from memory into f13
la x2, scratch
li x3, 0x2bf61ead63ee0580 # load x3 with value 0x2bf61ead63ee0580
sw x3, 0(x2) # store 0x2bf61ead63ee0580 in memory
flh f30, 0(x2) # load 0x2bf61ead63ee0580 from memory into f30
la x2, scratch
li x3, 0xffafd24607ea357c # load x3 with value 0xffafd24607ea357c
sw x3, 0(x2) # store 0xffafd24607ea357c in memory
flh f17, 0(x2) # load 0xffafd24607ea357c from memory into f17
fnmadd.h f30, f13, f30, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
la x2, scratch
li x3, 0x8213828bc02c2a3e # load x3 with value 0x8213828bc02c2a3e
sw x3, 0(x2) # store 0x8213828bc02c2a3e in memory
flh f7, 0(x2) # load 0x8213828bc02c2a3e from memory into f7
la x2, scratch
li x3, 0x1082305e8d1870e # load x3 with value 0x1082305e8d1870e
sw x3, 0(x2) # store 0x1082305e8d1870e in memory
flh f31, 0(x2) # load 0x1082305e8d1870e from memory into f31
la x2, scratch
li x3, 0xd9f4127da14fa6c9 # load x3 with value 0xd9f4127da14fa6c9
sw x3, 0(x2) # store 0xd9f4127da14fa6c9 in memory
flh f8, 0(x2) # load 0xd9f4127da14fa6c9 from memory into f8
fnmadd.h f31, f7, f31, f8 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f0)
la x2, scratch
li x3, 0x6cba399c7568c1c9 # load x3 with value 0x6cba399c7568c1c9
sw x3, 0(x2) # store 0x6cba399c7568c1c9 in memory
flh f14, 0(x2) # load 0x6cba399c7568c1c9 from memory into f14
la x2, scratch
li x3, 0x5663ee449990ca17 # load x3 with value 0x5663ee449990ca17
sw x3, 0(x2) # store 0x5663ee449990ca17 in memory
flh f8, 0(x2) # load 0x5663ee449990ca17 from memory into f8
la x2, scratch
li x3, 0xc3f8b38290dd098c # load x3 with value 0xc3f8b38290dd098c
sw x3, 0(x2) # store 0xc3f8b38290dd098c in memory
flh f0, 0(x2) # load 0xc3f8b38290dd098c from memory into f0
fnmadd.h f0, f14, f8, f0 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f1)
la x2, scratch
li x3, 0x66956626ee58cd6b # load x3 with value 0x66956626ee58cd6b
sw x3, 0(x2) # store 0x66956626ee58cd6b in memory
flh f31, 0(x2) # load 0x66956626ee58cd6b from memory into f31
la x2, scratch
li x3, 0x5b53d96639e10598 # load x3 with value 0x5b53d96639e10598
sw x3, 0(x2) # store 0x5b53d96639e10598 in memory
flh f22, 0(x2) # load 0x5b53d96639e10598 from memory into f22
la x2, scratch
li x3, 0x6eca38c2ccd56d3e # load x3 with value 0x6eca38c2ccd56d3e
sw x3, 0(x2) # store 0x6eca38c2ccd56d3e in memory
flh f1, 0(x2) # load 0x6eca38c2ccd56d3e from memory into f1
fnmadd.h f1, f31, f22, f1 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f2)
la x2, scratch
li x3, 0xed231526310dca61 # load x3 with value 0xed231526310dca61
sw x3, 0(x2) # store 0xed231526310dca61 in memory
flh f10, 0(x2) # load 0xed231526310dca61 from memory into f10
la x2, scratch
li x3, 0xf75adda114031393 # load x3 with value 0xf75adda114031393
sw x3, 0(x2) # store 0xf75adda114031393 in memory
flh f28, 0(x2) # load 0xf75adda114031393 from memory into f28
la x2, scratch
li x3, 0x70962d5a6ad280e9 # load x3 with value 0x70962d5a6ad280e9
sw x3, 0(x2) # store 0x70962d5a6ad280e9 in memory
flh f2, 0(x2) # load 0x70962d5a6ad280e9 from memory into f2
fnmadd.h f2, f10, f28, f2 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f3)
la x2, scratch
li x3, 0x369226f0f1babfb3 # load x3 with value 0x369226f0f1babfb3
sw x3, 0(x2) # store 0x369226f0f1babfb3 in memory
flh f14, 0(x2) # load 0x369226f0f1babfb3 from memory into f14
la x2, scratch
li x3, 0x33f8443793b49faf # load x3 with value 0x33f8443793b49faf
sw x3, 0(x2) # store 0x33f8443793b49faf in memory
flh f3, 0(x2) # load 0x33f8443793b49faf from memory into f3
la x2, scratch
li x3, 0x6c508fbce5ea732e # load x3 with value 0x6c508fbce5ea732e
sw x3, 0(x2) # store 0x6c508fbce5ea732e in memory
flh f3, 0(x2) # load 0x6c508fbce5ea732e from memory into f3
fnmadd.h f3, f14, f3, f3 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xa317338e32e514ae # load x3 with value 0xa317338e32e514ae
sw x3, 0(x2) # store 0xa317338e32e514ae in memory
flh f3, 0(x2) # load 0xa317338e32e514ae from memory into f3
la x2, scratch
li x3, 0xa9560c87b0015ff7 # load x3 with value 0xa9560c87b0015ff7
sw x3, 0(x2) # store 0xa9560c87b0015ff7 in memory
flh f23, 0(x2) # load 0xa9560c87b0015ff7 from memory into f23
la x2, scratch
li x3, 0x879647177fe0c098 # load x3 with value 0x879647177fe0c098
sw x3, 0(x2) # store 0x879647177fe0c098 in memory
flh f4, 0(x2) # load 0x879647177fe0c098 from memory into f4
fnmadd.h f4, f3, f23, f4 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xab5a789ee3ec2cc7 # load x3 with value 0xab5a789ee3ec2cc7
sw x3, 0(x2) # store 0xab5a789ee3ec2cc7 in memory
flh f11, 0(x2) # load 0xab5a789ee3ec2cc7 from memory into f11
la x2, scratch
li x3, 0x488644056473d55 # load x3 with value 0x488644056473d55
sw x3, 0(x2) # store 0x488644056473d55 in memory
flh f22, 0(x2) # load 0x488644056473d55 from memory into f22
la x2, scratch
li x3, 0xbbe9783521881562 # load x3 with value 0xbbe9783521881562
sw x3, 0(x2) # store 0xbbe9783521881562 in memory
flh f5, 0(x2) # load 0xbbe9783521881562 from memory into f5
fnmadd.h f5, f11, f22, f5 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xdfebea9c9e4181af # load x3 with value 0xdfebea9c9e4181af
sw x3, 0(x2) # store 0xdfebea9c9e4181af in memory
flh f25, 0(x2) # load 0xdfebea9c9e4181af from memory into f25
la x2, scratch
li x3, 0x2d3335bc9a650dae # load x3 with value 0x2d3335bc9a650dae
sw x3, 0(x2) # store 0x2d3335bc9a650dae in memory
flh f15, 0(x2) # load 0x2d3335bc9a650dae from memory into f15
la x2, scratch
li x3, 0x54456b5012e54098 # load x3 with value 0x54456b5012e54098
sw x3, 0(x2) # store 0x54456b5012e54098 in memory
flh f6, 0(x2) # load 0x54456b5012e54098 from memory into f6
fnmadd.h f6, f25, f15, f6 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xc476446252b35cf8 # load x3 with value 0xc476446252b35cf8
sw x3, 0(x2) # store 0xc476446252b35cf8 in memory
flh f13, 0(x2) # load 0xc476446252b35cf8 from memory into f13
la x2, scratch
li x3, 0x231699519d67d178 # load x3 with value 0x231699519d67d178
sw x3, 0(x2) # store 0x231699519d67d178 in memory
flh f12, 0(x2) # load 0x231699519d67d178 from memory into f12
la x2, scratch
li x3, 0x211d0a3a4665dbaa # load x3 with value 0x211d0a3a4665dbaa
sw x3, 0(x2) # store 0x211d0a3a4665dbaa in memory
flh f7, 0(x2) # load 0x211d0a3a4665dbaa from memory into f7
fnmadd.h f7, f13, f12, f7 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f8)
la x2, scratch
li x3, 0x8690a15d5ae4818d # load x3 with value 0x8690a15d5ae4818d
sw x3, 0(x2) # store 0x8690a15d5ae4818d in memory
flh f8, 0(x2) # load 0x8690a15d5ae4818d from memory into f8
la x2, scratch
li x3, 0x1857a9cc49fd13d9 # load x3 with value 0x1857a9cc49fd13d9
sw x3, 0(x2) # store 0x1857a9cc49fd13d9 in memory
flh f17, 0(x2) # load 0x1857a9cc49fd13d9 from memory into f17
la x2, scratch
li x3, 0xbbd2a4d94994ee94 # load x3 with value 0xbbd2a4d94994ee94
sw x3, 0(x2) # store 0xbbd2a4d94994ee94 in memory
flh f8, 0(x2) # load 0xbbd2a4d94994ee94 from memory into f8
fnmadd.h f8, f8, f17, f8 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f9)
la x2, scratch
li x3, 0x267db1b7e92b9280 # load x3 with value 0x267db1b7e92b9280
sw x3, 0(x2) # store 0x267db1b7e92b9280 in memory
flh f19, 0(x2) # load 0x267db1b7e92b9280 from memory into f19
la x2, scratch
li x3, 0x91ab340ed02eb17c # load x3 with value 0x91ab340ed02eb17c
sw x3, 0(x2) # store 0x91ab340ed02eb17c in memory
flh f5, 0(x2) # load 0x91ab340ed02eb17c from memory into f5
la x2, scratch
li x3, 0x1800007fbd4c849b # load x3 with value 0x1800007fbd4c849b
sw x3, 0(x2) # store 0x1800007fbd4c849b in memory
flh f9, 0(x2) # load 0x1800007fbd4c849b from memory into f9
fnmadd.h f9, f19, f5, f9 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f10)
la x2, scratch
li x3, 0x9196914c32a8acfc # load x3 with value 0x9196914c32a8acfc
sw x3, 0(x2) # store 0x9196914c32a8acfc in memory
flh f30, 0(x2) # load 0x9196914c32a8acfc from memory into f30
la x2, scratch
li x3, 0xcdf366500946280c # load x3 with value 0xcdf366500946280c
sw x3, 0(x2) # store 0xcdf366500946280c in memory
flh f17, 0(x2) # load 0xcdf366500946280c from memory into f17
la x2, scratch
li x3, 0x8c50aa6f4fea60af # load x3 with value 0x8c50aa6f4fea60af
sw x3, 0(x2) # store 0x8c50aa6f4fea60af in memory
flh f10, 0(x2) # load 0x8c50aa6f4fea60af from memory into f10
fnmadd.h f10, f30, f17, f10 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f11)
la x2, scratch
li x3, 0x62ab9d28900054d4 # load x3 with value 0x62ab9d28900054d4
sw x3, 0(x2) # store 0x62ab9d28900054d4 in memory
flh f12, 0(x2) # load 0x62ab9d28900054d4 from memory into f12
la x2, scratch
li x3, 0xef922f3cb41292ba # load x3 with value 0xef922f3cb41292ba
sw x3, 0(x2) # store 0xef922f3cb41292ba in memory
flh f1, 0(x2) # load 0xef922f3cb41292ba from memory into f1
la x2, scratch
li x3, 0x7a9d1d2f6c3728d0 # load x3 with value 0x7a9d1d2f6c3728d0
sw x3, 0(x2) # store 0x7a9d1d2f6c3728d0 in memory
flh f11, 0(x2) # load 0x7a9d1d2f6c3728d0 from memory into f11
fnmadd.h f11, f12, f1, f11 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f12)
la x2, scratch
li x3, 0xc0003a07ab5fab92 # load x3 with value 0xc0003a07ab5fab92
sw x3, 0(x2) # store 0xc0003a07ab5fab92 in memory
flh f24, 0(x2) # load 0xc0003a07ab5fab92 from memory into f24
la x2, scratch
li x3, 0xb32fa1941830f2b2 # load x3 with value 0xb32fa1941830f2b2
sw x3, 0(x2) # store 0xb32fa1941830f2b2 in memory
flh f26, 0(x2) # load 0xb32fa1941830f2b2 from memory into f26
la x2, scratch
li x3, 0xb46eb1f464d4aa11 # load x3 with value 0xb46eb1f464d4aa11
sw x3, 0(x2) # store 0xb46eb1f464d4aa11 in memory
flh f12, 0(x2) # load 0xb46eb1f464d4aa11 from memory into f12
fnmadd.h f12, f24, f26, f12 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f13)
la x2, scratch
li x3, 0xb85c48bc52fb3dc3 # load x3 with value 0xb85c48bc52fb3dc3
sw x3, 0(x2) # store 0xb85c48bc52fb3dc3 in memory
flh f8, 0(x2) # load 0xb85c48bc52fb3dc3 from memory into f8
la x2, scratch
li x3, 0x9d52233159959b1d # load x3 with value 0x9d52233159959b1d
sw x3, 0(x2) # store 0x9d52233159959b1d in memory
flh f18, 0(x2) # load 0x9d52233159959b1d from memory into f18
la x2, scratch
li x3, 0xf0e9d44d45b22f38 # load x3 with value 0xf0e9d44d45b22f38
sw x3, 0(x2) # store 0xf0e9d44d45b22f38 in memory
flh f13, 0(x2) # load 0xf0e9d44d45b22f38 from memory into f13
fnmadd.h f13, f8, f18, f13 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f14)
la x2, scratch
li x3, 0x20d0fe5cddc03ba6 # load x3 with value 0x20d0fe5cddc03ba6
sw x3, 0(x2) # store 0x20d0fe5cddc03ba6 in memory
flh f8, 0(x2) # load 0x20d0fe5cddc03ba6 from memory into f8
la x2, scratch
li x3, 0x1aa6daeb7672c2bb # load x3 with value 0x1aa6daeb7672c2bb
sw x3, 0(x2) # store 0x1aa6daeb7672c2bb in memory
flh f23, 0(x2) # load 0x1aa6daeb7672c2bb from memory into f23
la x2, scratch
li x3, 0x318b1e20e4b1c7b # load x3 with value 0x318b1e20e4b1c7b
sw x3, 0(x2) # store 0x318b1e20e4b1c7b in memory
flh f14, 0(x2) # load 0x318b1e20e4b1c7b from memory into f14
fnmadd.h f14, f8, f23, f14 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f15)
la x2, scratch
li x3, 0x44956c0d4950f423 # load x3 with value 0x44956c0d4950f423
sw x3, 0(x2) # store 0x44956c0d4950f423 in memory
flh f16, 0(x2) # load 0x44956c0d4950f423 from memory into f16
la x2, scratch
li x3, 0x5fb0b2fb4c9bf864 # load x3 with value 0x5fb0b2fb4c9bf864
sw x3, 0(x2) # store 0x5fb0b2fb4c9bf864 in memory
flh f26, 0(x2) # load 0x5fb0b2fb4c9bf864 from memory into f26
la x2, scratch
li x3, 0x91d37ad9fa6a8d8 # load x3 with value 0x91d37ad9fa6a8d8
sw x3, 0(x2) # store 0x91d37ad9fa6a8d8 in memory
flh f15, 0(x2) # load 0x91d37ad9fa6a8d8 from memory into f15
fnmadd.h f15, f16, f26, f15 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f16)
la x2, scratch
li x3, 0xd656d092139c9fdb # load x3 with value 0xd656d092139c9fdb
sw x3, 0(x2) # store 0xd656d092139c9fdb in memory
flh f17, 0(x2) # load 0xd656d092139c9fdb from memory into f17
la x2, scratch
li x3, 0x4f52a47fbba96a0 # load x3 with value 0x4f52a47fbba96a0
sw x3, 0(x2) # store 0x4f52a47fbba96a0 in memory
flh f21, 0(x2) # load 0x4f52a47fbba96a0 from memory into f21
la x2, scratch
li x3, 0x7d003afacad8cd25 # load x3 with value 0x7d003afacad8cd25
sw x3, 0(x2) # store 0x7d003afacad8cd25 in memory
flh f16, 0(x2) # load 0x7d003afacad8cd25 from memory into f16
fnmadd.h f16, f17, f21, f16 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f17)
la x2, scratch
li x3, 0x8e8c5c63028680b9 # load x3 with value 0x8e8c5c63028680b9
sw x3, 0(x2) # store 0x8e8c5c63028680b9 in memory
flh f13, 0(x2) # load 0x8e8c5c63028680b9 from memory into f13
la x2, scratch
li x3, 0x658d15cbf7e73cdb # load x3 with value 0x658d15cbf7e73cdb
sw x3, 0(x2) # store 0x658d15cbf7e73cdb in memory
flh f28, 0(x2) # load 0x658d15cbf7e73cdb from memory into f28
la x2, scratch
li x3, 0x5f6b094dbf692825 # load x3 with value 0x5f6b094dbf692825
sw x3, 0(x2) # store 0x5f6b094dbf692825 in memory
flh f17, 0(x2) # load 0x5f6b094dbf692825 from memory into f17
fnmadd.h f17, f13, f28, f17 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f18)
la x2, scratch
li x3, 0xbb46d48adcef5191 # load x3 with value 0xbb46d48adcef5191
sw x3, 0(x2) # store 0xbb46d48adcef5191 in memory
flh f27, 0(x2) # load 0xbb46d48adcef5191 from memory into f27
la x2, scratch
li x3, 0x731cb9b28f070fb3 # load x3 with value 0x731cb9b28f070fb3
sw x3, 0(x2) # store 0x731cb9b28f070fb3 in memory
flh f18, 0(x2) # load 0x731cb9b28f070fb3 from memory into f18
la x2, scratch
li x3, 0x61f2fec18d24cd42 # load x3 with value 0x61f2fec18d24cd42
sw x3, 0(x2) # store 0x61f2fec18d24cd42 in memory
flh f18, 0(x2) # load 0x61f2fec18d24cd42 from memory into f18
fnmadd.h f18, f27, f18, f18 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f19)
la x2, scratch
li x3, 0x6c0310b78dd23bb # load x3 with value 0x6c0310b78dd23bb
sw x3, 0(x2) # store 0x6c0310b78dd23bb in memory
flh f14, 0(x2) # load 0x6c0310b78dd23bb from memory into f14
la x2, scratch
li x3, 0x669cd03823695d27 # load x3 with value 0x669cd03823695d27
sw x3, 0(x2) # store 0x669cd03823695d27 in memory
flh f25, 0(x2) # load 0x669cd03823695d27 from memory into f25
la x2, scratch
li x3, 0xf08b32d641c2b7d0 # load x3 with value 0xf08b32d641c2b7d0
sw x3, 0(x2) # store 0xf08b32d641c2b7d0 in memory
flh f19, 0(x2) # load 0xf08b32d641c2b7d0 from memory into f19
fnmadd.h f19, f14, f25, f19 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f20)
la x2, scratch
li x3, 0x12ea7538f6429a1e # load x3 with value 0x12ea7538f6429a1e
sw x3, 0(x2) # store 0x12ea7538f6429a1e in memory
flh f3, 0(x2) # load 0x12ea7538f6429a1e from memory into f3
la x2, scratch
li x3, 0x9ba18d06fbd66925 # load x3 with value 0x9ba18d06fbd66925
sw x3, 0(x2) # store 0x9ba18d06fbd66925 in memory
flh f1, 0(x2) # load 0x9ba18d06fbd66925 from memory into f1
la x2, scratch
li x3, 0xced55f56b7ff3241 # load x3 with value 0xced55f56b7ff3241
sw x3, 0(x2) # store 0xced55f56b7ff3241 in memory
flh f20, 0(x2) # load 0xced55f56b7ff3241 from memory into f20
fnmadd.h f20, f3, f1, f20 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f21)
la x2, scratch
li x3, 0x45d04c21af1ba343 # load x3 with value 0x45d04c21af1ba343
sw x3, 0(x2) # store 0x45d04c21af1ba343 in memory
flh f15, 0(x2) # load 0x45d04c21af1ba343 from memory into f15
la x2, scratch
li x3, 0x167fdea660a183ff # load x3 with value 0x167fdea660a183ff
sw x3, 0(x2) # store 0x167fdea660a183ff in memory
flh f8, 0(x2) # load 0x167fdea660a183ff from memory into f8
la x2, scratch
li x3, 0x1e3c4a3bf5e1fa64 # load x3 with value 0x1e3c4a3bf5e1fa64
sw x3, 0(x2) # store 0x1e3c4a3bf5e1fa64 in memory
flh f21, 0(x2) # load 0x1e3c4a3bf5e1fa64 from memory into f21
fnmadd.h f21, f15, f8, f21 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f22)
la x2, scratch
li x3, 0x53389f638b7f233b # load x3 with value 0x53389f638b7f233b
sw x3, 0(x2) # store 0x53389f638b7f233b in memory
flh f17, 0(x2) # load 0x53389f638b7f233b from memory into f17
la x2, scratch
li x3, 0x4667f57f52ee7cd4 # load x3 with value 0x4667f57f52ee7cd4
sw x3, 0(x2) # store 0x4667f57f52ee7cd4 in memory
flh f2, 0(x2) # load 0x4667f57f52ee7cd4 from memory into f2
la x2, scratch
li x3, 0x9984010901e799b9 # load x3 with value 0x9984010901e799b9
sw x3, 0(x2) # store 0x9984010901e799b9 in memory
flh f22, 0(x2) # load 0x9984010901e799b9 from memory into f22
fnmadd.h f22, f17, f2, f22 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f23)
la x2, scratch
li x3, 0x34855cd71df2b530 # load x3 with value 0x34855cd71df2b530
sw x3, 0(x2) # store 0x34855cd71df2b530 in memory
flh f29, 0(x2) # load 0x34855cd71df2b530 from memory into f29
la x2, scratch
li x3, 0xa8f450952d5f77ab # load x3 with value 0xa8f450952d5f77ab
sw x3, 0(x2) # store 0xa8f450952d5f77ab in memory
flh f17, 0(x2) # load 0xa8f450952d5f77ab from memory into f17
la x2, scratch
li x3, 0x5525620356e99e71 # load x3 with value 0x5525620356e99e71
sw x3, 0(x2) # store 0x5525620356e99e71 in memory
flh f23, 0(x2) # load 0x5525620356e99e71 from memory into f23
fnmadd.h f23, f29, f17, f23 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f24)
la x2, scratch
li x3, 0xe90097a193d633c2 # load x3 with value 0xe90097a193d633c2
sw x3, 0(x2) # store 0xe90097a193d633c2 in memory
flh f30, 0(x2) # load 0xe90097a193d633c2 from memory into f30
la x2, scratch
li x3, 0x230c666d6e61be87 # load x3 with value 0x230c666d6e61be87
sw x3, 0(x2) # store 0x230c666d6e61be87 in memory
flh f31, 0(x2) # load 0x230c666d6e61be87 from memory into f31
la x2, scratch
li x3, 0xe8fc4fe4eb7be666 # load x3 with value 0xe8fc4fe4eb7be666
sw x3, 0(x2) # store 0xe8fc4fe4eb7be666 in memory
flh f24, 0(x2) # load 0xe8fc4fe4eb7be666 from memory into f24
fnmadd.h f24, f30, f31, f24 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f25)
la x2, scratch
li x3, 0x1f524bb3d28443b1 # load x3 with value 0x1f524bb3d28443b1
sw x3, 0(x2) # store 0x1f524bb3d28443b1 in memory
flh f13, 0(x2) # load 0x1f524bb3d28443b1 from memory into f13
la x2, scratch
li x3, 0xf42046f4b88dc0a6 # load x3 with value 0xf42046f4b88dc0a6
sw x3, 0(x2) # store 0xf42046f4b88dc0a6 in memory
flh f30, 0(x2) # load 0xf42046f4b88dc0a6 from memory into f30
la x2, scratch
li x3, 0x9cf40b0b4ac3c5d2 # load x3 with value 0x9cf40b0b4ac3c5d2
sw x3, 0(x2) # store 0x9cf40b0b4ac3c5d2 in memory
flh f25, 0(x2) # load 0x9cf40b0b4ac3c5d2 from memory into f25
fnmadd.h f25, f13, f30, f25 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f26)
la x2, scratch
li x3, 0x117d48e724634b72 # load x3 with value 0x117d48e724634b72
sw x3, 0(x2) # store 0x117d48e724634b72 in memory
flh f30, 0(x2) # load 0x117d48e724634b72 from memory into f30
la x2, scratch
li x3, 0x239701dbab6f4a39 # load x3 with value 0x239701dbab6f4a39
sw x3, 0(x2) # store 0x239701dbab6f4a39 in memory
flh f25, 0(x2) # load 0x239701dbab6f4a39 from memory into f25
la x2, scratch
li x3, 0x70f551773411549e # load x3 with value 0x70f551773411549e
sw x3, 0(x2) # store 0x70f551773411549e in memory
flh f26, 0(x2) # load 0x70f551773411549e from memory into f26
fnmadd.h f26, f30, f25, f26 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f27)
la x2, scratch
li x3, 0xc288902510d06c2b # load x3 with value 0xc288902510d06c2b
sw x3, 0(x2) # store 0xc288902510d06c2b in memory
flh f27, 0(x2) # load 0xc288902510d06c2b from memory into f27
la x2, scratch
li x3, 0xcf395db23d632187 # load x3 with value 0xcf395db23d632187
sw x3, 0(x2) # store 0xcf395db23d632187 in memory
flh f5, 0(x2) # load 0xcf395db23d632187 from memory into f5
la x2, scratch
li x3, 0xcd4a5baef85c69e1 # load x3 with value 0xcd4a5baef85c69e1
sw x3, 0(x2) # store 0xcd4a5baef85c69e1 in memory
flh f27, 0(x2) # load 0xcd4a5baef85c69e1 from memory into f27
fnmadd.h f27, f27, f5, f27 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f28)
la x2, scratch
li x3, 0x24be6eb96893dc7c # load x3 with value 0x24be6eb96893dc7c
sw x3, 0(x2) # store 0x24be6eb96893dc7c in memory
flh f1, 0(x2) # load 0x24be6eb96893dc7c from memory into f1
la x2, scratch
li x3, 0xf8b4f26def2d8886 # load x3 with value 0xf8b4f26def2d8886
sw x3, 0(x2) # store 0xf8b4f26def2d8886 in memory
flh f20, 0(x2) # load 0xf8b4f26def2d8886 from memory into f20
la x2, scratch
li x3, 0xeb3ea07cdf5e7721 # load x3 with value 0xeb3ea07cdf5e7721
sw x3, 0(x2) # store 0xeb3ea07cdf5e7721 in memory
flh f28, 0(x2) # load 0xeb3ea07cdf5e7721 from memory into f28
fnmadd.h f28, f1, f20, f28 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f29)
la x2, scratch
li x3, 0x1009aa560f999c03 # load x3 with value 0x1009aa560f999c03
sw x3, 0(x2) # store 0x1009aa560f999c03 in memory
flh f7, 0(x2) # load 0x1009aa560f999c03 from memory into f7
la x2, scratch
li x3, 0x90712c3ed2acc5d1 # load x3 with value 0x90712c3ed2acc5d1
sw x3, 0(x2) # store 0x90712c3ed2acc5d1 in memory
flh f13, 0(x2) # load 0x90712c3ed2acc5d1 from memory into f13
la x2, scratch
li x3, 0xd00ff8ce31df2a46 # load x3 with value 0xd00ff8ce31df2a46
sw x3, 0(x2) # store 0xd00ff8ce31df2a46 in memory
flh f29, 0(x2) # load 0xd00ff8ce31df2a46 from memory into f29
fnmadd.h f29, f7, f13, f29 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f30)
la x2, scratch
li x3, 0x423f995a943ec182 # load x3 with value 0x423f995a943ec182
sw x3, 0(x2) # store 0x423f995a943ec182 in memory
flh f13, 0(x2) # load 0x423f995a943ec182 from memory into f13
la x2, scratch
li x3, 0x75559199a29030c # load x3 with value 0x75559199a29030c
sw x3, 0(x2) # store 0x75559199a29030c in memory
flh f12, 0(x2) # load 0x75559199a29030c from memory into f12
la x2, scratch
li x3, 0xb19d86e947a33f22 # load x3 with value 0xb19d86e947a33f22
sw x3, 0(x2) # store 0xb19d86e947a33f22 in memory
flh f30, 0(x2) # load 0xb19d86e947a33f22 from memory into f30
fnmadd.h f30, f13, f12, f30 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f31)
la x2, scratch
li x3, 0xbecaaa29335dbcb6 # load x3 with value 0xbecaaa29335dbcb6
sw x3, 0(x2) # store 0xbecaaa29335dbcb6 in memory
flh f16, 0(x2) # load 0xbecaaa29335dbcb6 from memory into f16
la x2, scratch
li x3, 0xcce968fc33da7d67 # load x3 with value 0xcce968fc33da7d67
sw x3, 0(x2) # store 0xcce968fc33da7d67 in memory
flh f25, 0(x2) # load 0xcce968fc33da7d67 from memory into f25
la x2, scratch
li x3, 0x7ca13f0db565ed32 # load x3 with value 0x7ca13f0db565ed32
sw x3, 0(x2) # store 0x7ca13f0db565ed32 in memory
flh f31, 0(x2) # load 0x7ca13f0db565ed32 from memory into f31
fnmadd.h f31, f16, f25, f31 # perform operation

# Testcase cp_frm
la x2, scratch
li x3, 0xf2652072d1ffe1c # load x3 with value 0xf2652072d1ffe1c
sw x3, 0(x2) # store 0xf2652072d1ffe1c in memory
flh f31, 0(x2) # load 0xf2652072d1ffe1c from memory into f31
la x2, scratch
li x3, 0xa7cba99f87f0efe0 # load x3 with value 0xa7cba99f87f0efe0
sw x3, 0(x2) # store 0xa7cba99f87f0efe0 in memory
flh f28, 0(x2) # load 0xa7cba99f87f0efe0 from memory into f28
la x2, scratch
li x3, 0x0000000f # load x3 with value 0x0000000f
sw x3, 0(x2) # store 0x0000000f in memory
flh f15, 0(x2) # load 0x0000000f from memory into f15
fnmadd.h f10, f31, f28, f15, dyn # perform operation
fnmadd.h f10, f31, f28, f15, rdn # perform operation
fnmadd.h f10, f31, f28, f15, rmm # perform operation
fnmadd.h f10, f31, f28, f15, rne # perform operation
fnmadd.h f10, f31, f28, f15, rtz # perform operation
fnmadd.h f10, f31, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f31, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f31, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f31, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f31, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f31, f28, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x941ffadbd11b0794 # load x3 with value 0x941ffadbd11b0794
sw x3, 0(x2) # store 0x941ffadbd11b0794 in memory
flh f17, 0(x2) # load 0x941ffadbd11b0794 from memory into f17
fnmadd.h f11, f13, f5, f17, dyn # perform operation
fnmadd.h f11, f13, f5, f17, rdn # perform operation
fnmadd.h f11, f13, f5, f17, rmm # perform operation
fnmadd.h f11, f13, f5, f17, rne # perform operation
fnmadd.h f11, f13, f5, f17, rtz # perform operation
fnmadd.h f11, f13, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f13, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f13, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f13, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f13, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f13, f5, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f8, 0(x2) # load 0x00008000 from memory into f8
la x2, scratch
li x3, 0xea82d343f0e696b7 # load x3 with value 0xea82d343f0e696b7
sw x3, 0(x2) # store 0xea82d343f0e696b7 in memory
flh f31, 0(x2) # load 0xea82d343f0e696b7 from memory into f31
fnmadd.h f16, f18, f8, f31, dyn # perform operation
fnmadd.h f16, f18, f8, f31, rdn # perform operation
fnmadd.h f16, f18, f8, f31, rmm # perform operation
fnmadd.h f16, f18, f8, f31, rne # perform operation
fnmadd.h f16, f18, f8, f31, rtz # perform operation
fnmadd.h f16, f18, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f18, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f18, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f18, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f18, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f18, f8, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f24, 0(x2) # load 0x00003c00 from memory into f24
la x2, scratch
li x3, 0x87b2d49119dfcf2d # load x3 with value 0x87b2d49119dfcf2d
sw x3, 0(x2) # store 0x87b2d49119dfcf2d in memory
flh f5, 0(x2) # load 0x87b2d49119dfcf2d from memory into f5
fnmadd.h f10, f28, f24, f5, dyn # perform operation
fnmadd.h f10, f28, f24, f5, rdn # perform operation
fnmadd.h f10, f28, f24, f5, rmm # perform operation
fnmadd.h f10, f28, f24, f5, rne # perform operation
fnmadd.h f10, f28, f24, f5, rtz # perform operation
fnmadd.h f10, f28, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f28, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f28, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f28, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f28, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f28, f24, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
la x2, scratch
li x3, 0x60c558ce9ab7967a # load x3 with value 0x60c558ce9ab7967a
sw x3, 0(x2) # store 0x60c558ce9ab7967a in memory
flh f3, 0(x2) # load 0x60c558ce9ab7967a from memory into f3
fnmadd.h f23, f11, f6, f3, dyn # perform operation
fnmadd.h f23, f11, f6, f3, rdn # perform operation
fnmadd.h f23, f11, f6, f3, rmm # perform operation
fnmadd.h f23, f11, f6, f3, rne # perform operation
fnmadd.h f23, f11, f6, f3, rtz # perform operation
fnmadd.h f23, f11, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f11, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f11, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f11, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f11, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f11, f6, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f14, 0(x2) # load 0x00003e00 from memory into f14
la x2, scratch
li x3, 0xe1a949e9e08b922f # load x3 with value 0xe1a949e9e08b922f
sw x3, 0(x2) # store 0xe1a949e9e08b922f in memory
flh f1, 0(x2) # load 0xe1a949e9e08b922f from memory into f1
fnmadd.h f29, f20, f14, f1, dyn # perform operation
fnmadd.h f29, f20, f14, f1, rdn # perform operation
fnmadd.h f29, f20, f14, f1, rmm # perform operation
fnmadd.h f29, f20, f14, f1, rne # perform operation
fnmadd.h f29, f20, f14, f1, rtz # perform operation
fnmadd.h f29, f20, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f20, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f20, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f20, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f20, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f20, f14, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
la x2, scratch
li x3, 0xe0fd5349d858783d # load x3 with value 0xe0fd5349d858783d
sw x3, 0(x2) # store 0xe0fd5349d858783d in memory
flh f29, 0(x2) # load 0xe0fd5349d858783d from memory into f29
fnmadd.h f7, f8, f1, f29, dyn # perform operation
fnmadd.h f7, f8, f1, f29, rdn # perform operation
fnmadd.h f7, f8, f1, f29, rmm # perform operation
fnmadd.h f7, f8, f1, f29, rne # perform operation
fnmadd.h f7, f8, f1, f29, rtz # perform operation
fnmadd.h f7, f8, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f8, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f8, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f8, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f8, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f8, f1, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f20, 0(x2) # load 0x00004000 from memory into f20
la x2, scratch
li x3, 0xb15f1601a276b3b # load x3 with value 0xb15f1601a276b3b
sw x3, 0(x2) # store 0xb15f1601a276b3b in memory
flh f30, 0(x2) # load 0xb15f1601a276b3b from memory into f30
fnmadd.h f10, f3, f20, f30, dyn # perform operation
fnmadd.h f10, f3, f20, f30, rdn # perform operation
fnmadd.h f10, f3, f20, f30, rmm # perform operation
fnmadd.h f10, f3, f20, f30, rne # perform operation
fnmadd.h f10, f3, f20, f30, rtz # perform operation
fnmadd.h f10, f3, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f3, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f3, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f3, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f3, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f3, f20, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
la x2, scratch
li x3, 0x5bf997c8ced3db67 # load x3 with value 0x5bf997c8ced3db67
sw x3, 0(x2) # store 0x5bf997c8ced3db67 in memory
flh f14, 0(x2) # load 0x5bf997c8ced3db67 from memory into f14
fnmadd.h f18, f9, f2, f14, dyn # perform operation
fnmadd.h f18, f9, f2, f14, rdn # perform operation
fnmadd.h f18, f9, f2, f14, rmm # perform operation
fnmadd.h f18, f9, f2, f14, rne # perform operation
fnmadd.h f18, f9, f2, f14, rtz # perform operation
fnmadd.h f18, f9, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f9, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f9, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f9, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f9, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f9, f2, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f5, 0(x2) # load 0x00000400 from memory into f5
la x2, scratch
li x3, 0x68b4536e5dde0836 # load x3 with value 0x68b4536e5dde0836
sw x3, 0(x2) # store 0x68b4536e5dde0836 in memory
flh f14, 0(x2) # load 0x68b4536e5dde0836 from memory into f14
fnmadd.h f31, f8, f5, f14, dyn # perform operation
fnmadd.h f31, f8, f5, f14, rdn # perform operation
fnmadd.h f31, f8, f5, f14, rmm # perform operation
fnmadd.h f31, f8, f5, f14, rne # perform operation
fnmadd.h f31, f8, f5, f14, rtz # perform operation
fnmadd.h f31, f8, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f8, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f8, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f8, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f8, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f8, f5, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
la x2, scratch
li x3, 0x35da3ced2905c5c9 # load x3 with value 0x35da3ced2905c5c9
sw x3, 0(x2) # store 0x35da3ced2905c5c9 in memory
flh f23, 0(x2) # load 0x35da3ced2905c5c9 from memory into f23
fnmadd.h f7, f27, f15, f23, dyn # perform operation
fnmadd.h f7, f27, f15, f23, rdn # perform operation
fnmadd.h f7, f27, f15, f23, rmm # perform operation
fnmadd.h f7, f27, f15, f23, rne # perform operation
fnmadd.h f7, f27, f15, f23, rtz # perform operation
fnmadd.h f7, f27, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f27, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f27, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f27, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f27, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f27, f15, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f22, 0(x2) # load 0x00007bff from memory into f22
la x2, scratch
li x3, 0xf2246403e2eab6f2 # load x3 with value 0xf2246403e2eab6f2
sw x3, 0(x2) # store 0xf2246403e2eab6f2 in memory
flh f27, 0(x2) # load 0xf2246403e2eab6f2 from memory into f27
fnmadd.h f8, f18, f22, f27, dyn # perform operation
fnmadd.h f8, f18, f22, f27, rdn # perform operation
fnmadd.h f8, f18, f22, f27, rmm # perform operation
fnmadd.h f8, f18, f22, f27, rne # perform operation
fnmadd.h f8, f18, f22, f27, rtz # perform operation
fnmadd.h f8, f18, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f18, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f18, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f18, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f18, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f18, f22, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f1, 0(x2) # load 0x0000fbff from memory into f1
la x2, scratch
li x3, 0xbb444a7386fd6a01 # load x3 with value 0xbb444a7386fd6a01
sw x3, 0(x2) # store 0xbb444a7386fd6a01 in memory
flh f15, 0(x2) # load 0xbb444a7386fd6a01 from memory into f15
fnmadd.h f7, f11, f1, f15, dyn # perform operation
fnmadd.h f7, f11, f1, f15, rdn # perform operation
fnmadd.h f7, f11, f1, f15, rmm # perform operation
fnmadd.h f7, f11, f1, f15, rne # perform operation
fnmadd.h f7, f11, f1, f15, rtz # perform operation
fnmadd.h f7, f11, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f11, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f11, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f11, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f11, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f11, f1, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f14, 0(x2) # load 0x000003ff from memory into f14
la x2, scratch
li x3, 0x6c88e31910345d3e # load x3 with value 0x6c88e31910345d3e
sw x3, 0(x2) # store 0x6c88e31910345d3e in memory
flh f5, 0(x2) # load 0x6c88e31910345d3e from memory into f5
fnmadd.h f31, f7, f14, f5, dyn # perform operation
fnmadd.h f31, f7, f14, f5, rdn # perform operation
fnmadd.h f31, f7, f14, f5, rmm # perform operation
fnmadd.h f31, f7, f14, f5, rne # perform operation
fnmadd.h f31, f7, f14, f5, rtz # perform operation
fnmadd.h f31, f7, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f7, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f7, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f7, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f7, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f7, f14, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f23, 0(x2) # load 0x000083ff from memory into f23
la x2, scratch
li x3, 0xbc6bc5f907cb4e63 # load x3 with value 0xbc6bc5f907cb4e63
sw x3, 0(x2) # store 0xbc6bc5f907cb4e63 in memory
flh f15, 0(x2) # load 0xbc6bc5f907cb4e63 from memory into f15
fnmadd.h f28, f17, f23, f15, dyn # perform operation
fnmadd.h f28, f17, f23, f15, rdn # perform operation
fnmadd.h f28, f17, f23, f15, rmm # perform operation
fnmadd.h f28, f17, f23, f15, rne # perform operation
fnmadd.h f28, f17, f23, f15, rtz # perform operation
fnmadd.h f28, f17, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f17, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f17, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f17, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f17, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f17, f23, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f10, 0(x2) # load 0x00000200 from memory into f10
la x2, scratch
li x3, 0xe08aac447cf02ae6 # load x3 with value 0xe08aac447cf02ae6
sw x3, 0(x2) # store 0xe08aac447cf02ae6 in memory
flh f29, 0(x2) # load 0xe08aac447cf02ae6 from memory into f29
fnmadd.h f12, f28, f10, f29, dyn # perform operation
fnmadd.h f12, f28, f10, f29, rdn # perform operation
fnmadd.h f12, f28, f10, f29, rmm # perform operation
fnmadd.h f12, f28, f10, f29, rne # perform operation
fnmadd.h f12, f28, f10, f29, rtz # perform operation
fnmadd.h f12, f28, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f28, f10, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f25, 0(x2) # load 0x00008200 from memory into f25
la x2, scratch
li x3, 0x66639921045acd35 # load x3 with value 0x66639921045acd35
sw x3, 0(x2) # store 0x66639921045acd35 in memory
flh f16, 0(x2) # load 0x66639921045acd35 from memory into f16
fnmadd.h f8, f26, f25, f16, dyn # perform operation
fnmadd.h f8, f26, f25, f16, rdn # perform operation
fnmadd.h f8, f26, f25, f16, rmm # perform operation
fnmadd.h f8, f26, f25, f16, rne # perform operation
fnmadd.h f8, f26, f25, f16, rtz # perform operation
fnmadd.h f8, f26, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f26, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f26, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f26, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f26, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f26, f25, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0xc62c1dbcba153804 # load x3 with value 0xc62c1dbcba153804
sw x3, 0(x2) # store 0xc62c1dbcba153804 in memory
flh f26, 0(x2) # load 0xc62c1dbcba153804 from memory into f26
fnmadd.h f2, f23, f3, f26, dyn # perform operation
fnmadd.h f2, f23, f3, f26, rdn # perform operation
fnmadd.h f2, f23, f3, f26, rmm # perform operation
fnmadd.h f2, f23, f3, f26, rne # perform operation
fnmadd.h f2, f23, f3, f26, rtz # perform operation
fnmadd.h f2, f23, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f23, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f23, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f23, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f23, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f23, f3, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f18, 0(x2) # load 0x00008001 from memory into f18
la x2, scratch
li x3, 0x65dbc848414ae316 # load x3 with value 0x65dbc848414ae316
sw x3, 0(x2) # store 0x65dbc848414ae316 in memory
flh f14, 0(x2) # load 0x65dbc848414ae316 from memory into f14
fnmadd.h f5, f2, f18, f14, dyn # perform operation
fnmadd.h f5, f2, f18, f14, rdn # perform operation
fnmadd.h f5, f2, f18, f14, rmm # perform operation
fnmadd.h f5, f2, f18, f14, rne # perform operation
fnmadd.h f5, f2, f18, f14, rtz # perform operation
fnmadd.h f5, f2, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f2, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f2, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f2, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f2, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f2, f18, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f28, 0(x2) # load 0x00007c00 from memory into f28
la x2, scratch
li x3, 0x3777a91749c426e7 # load x3 with value 0x3777a91749c426e7
sw x3, 0(x2) # store 0x3777a91749c426e7 in memory
flh f11, 0(x2) # load 0x3777a91749c426e7 from memory into f11
fnmadd.h f3, f20, f28, f11, dyn # perform operation
fnmadd.h f3, f20, f28, f11, rdn # perform operation
fnmadd.h f3, f20, f28, f11, rmm # perform operation
fnmadd.h f3, f20, f28, f11, rne # perform operation
fnmadd.h f3, f20, f28, f11, rtz # perform operation
fnmadd.h f3, f20, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f20, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f20, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f20, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f20, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f20, f28, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f20, 0(x2) # load 0x0000fc00 from memory into f20
la x2, scratch
li x3, 0xa098a82e2ee7f36d # load x3 with value 0xa098a82e2ee7f36d
sw x3, 0(x2) # store 0xa098a82e2ee7f36d in memory
flh f18, 0(x2) # load 0xa098a82e2ee7f36d from memory into f18
fnmadd.h f22, f8, f20, f18, dyn # perform operation
fnmadd.h f22, f8, f20, f18, rdn # perform operation
fnmadd.h f22, f8, f20, f18, rmm # perform operation
fnmadd.h f22, f8, f20, f18, rne # perform operation
fnmadd.h f22, f8, f20, f18, rtz # perform operation
fnmadd.h f22, f8, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f8, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f8, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f8, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f8, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f8, f20, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f7, 0(x2) # load 0x00007e00 from memory into f7
la x2, scratch
li x3, 0x6fd0c801630f04ea # load x3 with value 0x6fd0c801630f04ea
sw x3, 0(x2) # store 0x6fd0c801630f04ea in memory
flh f19, 0(x2) # load 0x6fd0c801630f04ea from memory into f19
fnmadd.h f20, f10, f7, f19, dyn # perform operation
fnmadd.h f20, f10, f7, f19, rdn # perform operation
fnmadd.h f20, f10, f7, f19, rmm # perform operation
fnmadd.h f20, f10, f7, f19, rne # perform operation
fnmadd.h f20, f10, f7, f19, rtz # perform operation
fnmadd.h f20, f10, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f10, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f10, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f10, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f10, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f10, f7, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f31, 0(x2) # load 0x00007fff from memory into f31
la x2, scratch
li x3, 0x9a0d6dabf90f9a18 # load x3 with value 0x9a0d6dabf90f9a18
sw x3, 0(x2) # store 0x9a0d6dabf90f9a18 in memory
flh f7, 0(x2) # load 0x9a0d6dabf90f9a18 from memory into f7
fnmadd.h f28, f13, f31, f7, dyn # perform operation
fnmadd.h f28, f13, f31, f7, rdn # perform operation
fnmadd.h f28, f13, f31, f7, rmm # perform operation
fnmadd.h f28, f13, f31, f7, rne # perform operation
fnmadd.h f28, f13, f31, f7, rtz # perform operation
fnmadd.h f28, f13, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f13, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f13, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f13, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f13, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f13, f31, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f13, 0(x2) # load 0x0000fe00 from memory into f13
la x2, scratch
li x3, 0x65757da589f4e538 # load x3 with value 0x65757da589f4e538
sw x3, 0(x2) # store 0x65757da589f4e538 in memory
flh f19, 0(x2) # load 0x65757da589f4e538 from memory into f19
fnmadd.h f12, f5, f13, f19, dyn # perform operation
fnmadd.h f12, f5, f13, f19, rdn # perform operation
fnmadd.h f12, f5, f13, f19, rmm # perform operation
fnmadd.h f12, f5, f13, f19, rne # perform operation
fnmadd.h f12, f5, f13, f19, rtz # perform operation
fnmadd.h f12, f5, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f5, f13, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f25, 0(x2) # load 0x00007c01 from memory into f25
la x2, scratch
li x3, 0xb27d1ba82eb40c22 # load x3 with value 0xb27d1ba82eb40c22
sw x3, 0(x2) # store 0xb27d1ba82eb40c22 in memory
flh f29, 0(x2) # load 0xb27d1ba82eb40c22 from memory into f29
fnmadd.h f30, f27, f25, f29, dyn # perform operation
fnmadd.h f30, f27, f25, f29, rdn # perform operation
fnmadd.h f30, f27, f25, f29, rmm # perform operation
fnmadd.h f30, f27, f25, f29, rne # perform operation
fnmadd.h f30, f27, f25, f29, rtz # perform operation
fnmadd.h f30, f27, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f27, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f27, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f27, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f27, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f27, f25, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f12, 0(x2) # load 0x00007dff from memory into f12
la x2, scratch
li x3, 0x27635006e264b443 # load x3 with value 0x27635006e264b443
sw x3, 0(x2) # store 0x27635006e264b443 in memory
flh f18, 0(x2) # load 0x27635006e264b443 from memory into f18
fnmadd.h f19, f11, f12, f18, dyn # perform operation
fnmadd.h f19, f11, f12, f18, rdn # perform operation
fnmadd.h f19, f11, f12, f18, rmm # perform operation
fnmadd.h f19, f11, f12, f18, rne # perform operation
fnmadd.h f19, f11, f12, f18, rtz # perform operation
fnmadd.h f19, f11, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f11, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f11, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f11, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f11, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f11, f12, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f23, 0(x2) # load 0x0000fc01 from memory into f23
la x2, scratch
li x3, 0x1239de2887b1b532 # load x3 with value 0x1239de2887b1b532
sw x3, 0(x2) # store 0x1239de2887b1b532 in memory
flh f10, 0(x2) # load 0x1239de2887b1b532 from memory into f10
fnmadd.h f26, f28, f23, f10, dyn # perform operation
fnmadd.h f26, f28, f23, f10, rdn # perform operation
fnmadd.h f26, f28, f23, f10, rmm # perform operation
fnmadd.h f26, f28, f23, f10, rne # perform operation
fnmadd.h f26, f28, f23, f10, rtz # perform operation
fnmadd.h f26, f28, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f28, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f28, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f28, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f28, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f28, f23, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f3, 0(x2) # load 0x000058b4 from memory into f3
la x2, scratch
li x3, 0xad7c63a336e18abb # load x3 with value 0xad7c63a336e18abb
sw x3, 0(x2) # store 0xad7c63a336e18abb in memory
flh f13, 0(x2) # load 0xad7c63a336e18abb from memory into f13
fnmadd.h f2, f9, f3, f13, dyn # perform operation
fnmadd.h f2, f9, f3, f13, rdn # perform operation
fnmadd.h f2, f9, f3, f13, rmm # perform operation
fnmadd.h f2, f9, f3, f13, rne # perform operation
fnmadd.h f2, f9, f3, f13, rtz # perform operation
fnmadd.h f2, f9, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f9, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f9, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f9, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f9, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f9, f3, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
la x2, scratch
li x3, 0xe42727462988a47b # load x3 with value 0xe42727462988a47b
sw x3, 0(x2) # store 0xe42727462988a47b in memory
flh f29, 0(x2) # load 0xe42727462988a47b from memory into f29
fnmadd.h f2, f27, f3, f29, dyn # perform operation
fnmadd.h f2, f27, f3, f29, rdn # perform operation
fnmadd.h f2, f27, f3, f29, rmm # perform operation
fnmadd.h f2, f27, f3, f29, rne # perform operation
fnmadd.h f2, f27, f3, f29, rtz # perform operation
fnmadd.h f2, f27, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f27, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f27, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f27, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f27, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f27, f3, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f15, 0(x2) # load 0x00008000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0xab198e12756eae6b # load x3 with value 0xab198e12756eae6b
sw x3, 0(x2) # store 0xab198e12756eae6b in memory
flh f26, 0(x2) # load 0xab198e12756eae6b from memory into f26
fnmadd.h f5, f15, f30, f26, dyn # perform operation
fnmadd.h f5, f15, f30, f26, rdn # perform operation
fnmadd.h f5, f15, f30, f26, rmm # perform operation
fnmadd.h f5, f15, f30, f26, rne # perform operation
fnmadd.h f5, f15, f30, f26, rtz # perform operation
fnmadd.h f5, f15, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f15, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f15, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f15, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f15, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f15, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f20, 0(x2) # load 0x00008000 from memory into f20
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f7, 0(x2) # load 0x00008000 from memory into f7
la x2, scratch
li x3, 0x899f791bd5a79174 # load x3 with value 0x899f791bd5a79174
sw x3, 0(x2) # store 0x899f791bd5a79174 in memory
flh f22, 0(x2) # load 0x899f791bd5a79174 from memory into f22
fnmadd.h f28, f20, f7, f22, dyn # perform operation
fnmadd.h f28, f20, f7, f22, rdn # perform operation
fnmadd.h f28, f20, f7, f22, rmm # perform operation
fnmadd.h f28, f20, f7, f22, rne # perform operation
fnmadd.h f28, f20, f7, f22, rtz # perform operation
fnmadd.h f28, f20, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f20, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f20, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f20, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f20, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f20, f7, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f2, 0(x2) # load 0x00008000 from memory into f2
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f20, 0(x2) # load 0x00003c00 from memory into f20
la x2, scratch
li x3, 0xc351cadf0167d2fa # load x3 with value 0xc351cadf0167d2fa
sw x3, 0(x2) # store 0xc351cadf0167d2fa in memory
flh f6, 0(x2) # load 0xc351cadf0167d2fa from memory into f6
fnmadd.h f8, f2, f20, f6, dyn # perform operation
fnmadd.h f8, f2, f20, f6, rdn # perform operation
fnmadd.h f8, f2, f20, f6, rmm # perform operation
fnmadd.h f8, f2, f20, f6, rne # perform operation
fnmadd.h f8, f2, f20, f6, rtz # perform operation
fnmadd.h f8, f2, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f2, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f2, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f2, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f2, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f2, f20, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f1, 0(x2) # load 0x00008000 from memory into f1
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f25, 0(x2) # load 0x0000bc00 from memory into f25
la x2, scratch
li x3, 0x1eb5e344f1daf023 # load x3 with value 0x1eb5e344f1daf023
sw x3, 0(x2) # store 0x1eb5e344f1daf023 in memory
flh f3, 0(x2) # load 0x1eb5e344f1daf023 from memory into f3
fnmadd.h f10, f1, f25, f3, dyn # perform operation
fnmadd.h f10, f1, f25, f3, rdn # perform operation
fnmadd.h f10, f1, f25, f3, rmm # perform operation
fnmadd.h f10, f1, f25, f3, rne # perform operation
fnmadd.h f10, f1, f25, f3, rtz # perform operation
fnmadd.h f10, f1, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f1, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f1, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f1, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f1, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f1, f25, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f1, 0(x2) # load 0x00008000 from memory into f1
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f13, 0(x2) # load 0x00003e00 from memory into f13
la x2, scratch
li x3, 0xdd1e74aba3dd4dac # load x3 with value 0xdd1e74aba3dd4dac
sw x3, 0(x2) # store 0xdd1e74aba3dd4dac in memory
flh f18, 0(x2) # load 0xdd1e74aba3dd4dac from memory into f18
fnmadd.h f22, f1, f13, f18, dyn # perform operation
fnmadd.h f22, f1, f13, f18, rdn # perform operation
fnmadd.h f22, f1, f13, f18, rmm # perform operation
fnmadd.h f22, f1, f13, f18, rne # perform operation
fnmadd.h f22, f1, f13, f18, rtz # perform operation
fnmadd.h f22, f1, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f1, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f1, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f1, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f1, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f1, f13, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f14, 0(x2) # load 0x00008000 from memory into f14
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f15, 0(x2) # load 0x0000be00 from memory into f15
la x2, scratch
li x3, 0xf68d03ad85949c74 # load x3 with value 0xf68d03ad85949c74
sw x3, 0(x2) # store 0xf68d03ad85949c74 in memory
flh f13, 0(x2) # load 0xf68d03ad85949c74 from memory into f13
fnmadd.h f8, f14, f15, f13, dyn # perform operation
fnmadd.h f8, f14, f15, f13, rdn # perform operation
fnmadd.h f8, f14, f15, f13, rmm # perform operation
fnmadd.h f8, f14, f15, f13, rne # perform operation
fnmadd.h f8, f14, f15, f13, rtz # perform operation
fnmadd.h f8, f14, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f14, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f14, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f14, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f14, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f14, f15, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f16, 0(x2) # load 0x00008000 from memory into f16
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f2, 0(x2) # load 0x00004000 from memory into f2
la x2, scratch
li x3, 0x5e2fa7a84a094c08 # load x3 with value 0x5e2fa7a84a094c08
sw x3, 0(x2) # store 0x5e2fa7a84a094c08 in memory
flh f10, 0(x2) # load 0x5e2fa7a84a094c08 from memory into f10
fnmadd.h f21, f16, f2, f10, dyn # perform operation
fnmadd.h f21, f16, f2, f10, rdn # perform operation
fnmadd.h f21, f16, f2, f10, rmm # perform operation
fnmadd.h f21, f16, f2, f10, rne # perform operation
fnmadd.h f21, f16, f2, f10, rtz # perform operation
fnmadd.h f21, f16, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f16, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f16, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f16, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f16, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f16, f2, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f24, 0(x2) # load 0x00008000 from memory into f24
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f25, 0(x2) # load 0x0000c000 from memory into f25
la x2, scratch
li x3, 0xb4edc4f62838ab46 # load x3 with value 0xb4edc4f62838ab46
sw x3, 0(x2) # store 0xb4edc4f62838ab46 in memory
flh f16, 0(x2) # load 0xb4edc4f62838ab46 from memory into f16
fnmadd.h f29, f24, f25, f16, dyn # perform operation
fnmadd.h f29, f24, f25, f16, rdn # perform operation
fnmadd.h f29, f24, f25, f16, rmm # perform operation
fnmadd.h f29, f24, f25, f16, rne # perform operation
fnmadd.h f29, f24, f25, f16, rtz # perform operation
fnmadd.h f29, f24, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f24, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f24, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f24, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f24, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f24, f25, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f28, 0(x2) # load 0x00008000 from memory into f28
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f5, 0(x2) # load 0x00000400 from memory into f5
la x2, scratch
li x3, 0xb6a3819bbe8cd0db # load x3 with value 0xb6a3819bbe8cd0db
sw x3, 0(x2) # store 0xb6a3819bbe8cd0db in memory
flh f15, 0(x2) # load 0xb6a3819bbe8cd0db from memory into f15
fnmadd.h f14, f28, f5, f15, dyn # perform operation
fnmadd.h f14, f28, f5, f15, rdn # perform operation
fnmadd.h f14, f28, f5, f15, rmm # perform operation
fnmadd.h f14, f28, f5, f15, rne # perform operation
fnmadd.h f14, f28, f5, f15, rtz # perform operation
fnmadd.h f14, f28, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f28, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f28, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f28, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f28, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f28, f5, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f10, 0(x2) # load 0x00008000 from memory into f10
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f9, 0(x2) # load 0x00008400 from memory into f9
la x2, scratch
li x3, 0x9639a66961fa9638 # load x3 with value 0x9639a66961fa9638
sw x3, 0(x2) # store 0x9639a66961fa9638 in memory
flh f15, 0(x2) # load 0x9639a66961fa9638 from memory into f15
fnmadd.h f1, f10, f9, f15, dyn # perform operation
fnmadd.h f1, f10, f9, f15, rdn # perform operation
fnmadd.h f1, f10, f9, f15, rmm # perform operation
fnmadd.h f1, f10, f9, f15, rne # perform operation
fnmadd.h f1, f10, f9, f15, rtz # perform operation
fnmadd.h f1, f10, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f10, f9, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f5, 0(x2) # load 0x00008000 from memory into f5
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
la x2, scratch
li x3, 0x44264891f247a1dc # load x3 with value 0x44264891f247a1dc
sw x3, 0(x2) # store 0x44264891f247a1dc in memory
flh f9, 0(x2) # load 0x44264891f247a1dc from memory into f9
fnmadd.h f10, f5, f24, f9, dyn # perform operation
fnmadd.h f10, f5, f24, f9, rdn # perform operation
fnmadd.h f10, f5, f24, f9, rmm # perform operation
fnmadd.h f10, f5, f24, f9, rne # perform operation
fnmadd.h f10, f5, f24, f9, rtz # perform operation
fnmadd.h f10, f5, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f5, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f5, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f5, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f5, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f5, f24, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f19, 0(x2) # load 0x00008000 from memory into f19
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f10, 0(x2) # load 0x0000fbff from memory into f10
la x2, scratch
li x3, 0x5a91f040c738e99d # load x3 with value 0x5a91f040c738e99d
sw x3, 0(x2) # store 0x5a91f040c738e99d in memory
flh f21, 0(x2) # load 0x5a91f040c738e99d from memory into f21
fnmadd.h f30, f19, f10, f21, dyn # perform operation
fnmadd.h f30, f19, f10, f21, rdn # perform operation
fnmadd.h f30, f19, f10, f21, rmm # perform operation
fnmadd.h f30, f19, f10, f21, rne # perform operation
fnmadd.h f30, f19, f10, f21, rtz # perform operation
fnmadd.h f30, f19, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f19, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f19, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f19, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f19, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f19, f10, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f5, 0(x2) # load 0x00008000 from memory into f5
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f14, 0(x2) # load 0x000003ff from memory into f14
la x2, scratch
li x3, 0x858ffd45bc54986a # load x3 with value 0x858ffd45bc54986a
sw x3, 0(x2) # store 0x858ffd45bc54986a in memory
flh f20, 0(x2) # load 0x858ffd45bc54986a from memory into f20
fnmadd.h f16, f5, f14, f20, dyn # perform operation
fnmadd.h f16, f5, f14, f20, rdn # perform operation
fnmadd.h f16, f5, f14, f20, rmm # perform operation
fnmadd.h f16, f5, f14, f20, rne # perform operation
fnmadd.h f16, f5, f14, f20, rtz # perform operation
fnmadd.h f16, f5, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f5, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f5, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f5, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f5, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f5, f14, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f1, 0(x2) # load 0x00008000 from memory into f1
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
la x2, scratch
li x3, 0xdfed7d77299a06ca # load x3 with value 0xdfed7d77299a06ca
sw x3, 0(x2) # store 0xdfed7d77299a06ca in memory
flh f29, 0(x2) # load 0xdfed7d77299a06ca from memory into f29
fnmadd.h f15, f1, f19, f29, dyn # perform operation
fnmadd.h f15, f1, f19, f29, rdn # perform operation
fnmadd.h f15, f1, f19, f29, rmm # perform operation
fnmadd.h f15, f1, f19, f29, rne # perform operation
fnmadd.h f15, f1, f19, f29, rtz # perform operation
fnmadd.h f15, f1, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f1, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f1, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f1, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f1, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f1, f19, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f22, 0(x2) # load 0x00008000 from memory into f22
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f7, 0(x2) # load 0x00000200 from memory into f7
la x2, scratch
li x3, 0x4dd6144ef0284f0e # load x3 with value 0x4dd6144ef0284f0e
sw x3, 0(x2) # store 0x4dd6144ef0284f0e in memory
flh f10, 0(x2) # load 0x4dd6144ef0284f0e from memory into f10
fnmadd.h f8, f22, f7, f10, dyn # perform operation
fnmadd.h f8, f22, f7, f10, rdn # perform operation
fnmadd.h f8, f22, f7, f10, rmm # perform operation
fnmadd.h f8, f22, f7, f10, rne # perform operation
fnmadd.h f8, f22, f7, f10, rtz # perform operation
fnmadd.h f8, f22, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f22, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f22, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f22, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f22, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f22, f7, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f1, 0(x2) # load 0x00008000 from memory into f1
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f9, 0(x2) # load 0x00008200 from memory into f9
la x2, scratch
li x3, 0x786d68aee3572f5c # load x3 with value 0x786d68aee3572f5c
sw x3, 0(x2) # store 0x786d68aee3572f5c in memory
flh f22, 0(x2) # load 0x786d68aee3572f5c from memory into f22
fnmadd.h f20, f1, f9, f22, dyn # perform operation
fnmadd.h f20, f1, f9, f22, rdn # perform operation
fnmadd.h f20, f1, f9, f22, rmm # perform operation
fnmadd.h f20, f1, f9, f22, rne # perform operation
fnmadd.h f20, f1, f9, f22, rtz # perform operation
fnmadd.h f20, f1, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f1, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f1, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f1, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f1, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f1, f9, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f24, 0(x2) # load 0x00008000 from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0x6627f7d0c2b22aff # load x3 with value 0x6627f7d0c2b22aff
sw x3, 0(x2) # store 0x6627f7d0c2b22aff in memory
flh f16, 0(x2) # load 0x6627f7d0c2b22aff from memory into f16
fnmadd.h f10, f24, f22, f16, dyn # perform operation
fnmadd.h f10, f24, f22, f16, rdn # perform operation
fnmadd.h f10, f24, f22, f16, rmm # perform operation
fnmadd.h f10, f24, f22, f16, rne # perform operation
fnmadd.h f10, f24, f22, f16, rtz # perform operation
fnmadd.h f10, f24, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f24, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f24, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f24, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f24, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f24, f22, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f19, 0(x2) # load 0x00008000 from memory into f19
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f26, 0(x2) # load 0x00008001 from memory into f26
la x2, scratch
li x3, 0xcf2379d6a427303a # load x3 with value 0xcf2379d6a427303a
sw x3, 0(x2) # store 0xcf2379d6a427303a in memory
flh f13, 0(x2) # load 0xcf2379d6a427303a from memory into f13
fnmadd.h f14, f19, f26, f13, dyn # perform operation
fnmadd.h f14, f19, f26, f13, rdn # perform operation
fnmadd.h f14, f19, f26, f13, rmm # perform operation
fnmadd.h f14, f19, f26, f13, rne # perform operation
fnmadd.h f14, f19, f26, f13, rtz # perform operation
fnmadd.h f14, f19, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f19, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f19, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f19, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f19, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f19, f26, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f29, 0(x2) # load 0x00008000 from memory into f29
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f25, 0(x2) # load 0x00007c00 from memory into f25
la x2, scratch
li x3, 0x47d8065e42c429c2 # load x3 with value 0x47d8065e42c429c2
sw x3, 0(x2) # store 0x47d8065e42c429c2 in memory
flh f24, 0(x2) # load 0x47d8065e42c429c2 from memory into f24
fnmadd.h f18, f29, f25, f24, dyn # perform operation
fnmadd.h f18, f29, f25, f24, rdn # perform operation
fnmadd.h f18, f29, f25, f24, rmm # perform operation
fnmadd.h f18, f29, f25, f24, rne # perform operation
fnmadd.h f18, f29, f25, f24, rtz # perform operation
fnmadd.h f18, f29, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f29, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f29, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f29, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f29, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f29, f25, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f22, 0(x2) # load 0x00008000 from memory into f22
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f30, 0(x2) # load 0x0000fc00 from memory into f30
la x2, scratch
li x3, 0x82f199e2f1f9d42c # load x3 with value 0x82f199e2f1f9d42c
sw x3, 0(x2) # store 0x82f199e2f1f9d42c in memory
flh f26, 0(x2) # load 0x82f199e2f1f9d42c from memory into f26
fnmadd.h f10, f22, f30, f26, dyn # perform operation
fnmadd.h f10, f22, f30, f26, rdn # perform operation
fnmadd.h f10, f22, f30, f26, rmm # perform operation
fnmadd.h f10, f22, f30, f26, rne # perform operation
fnmadd.h f10, f22, f30, f26, rtz # perform operation
fnmadd.h f10, f22, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f22, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f22, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f22, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f22, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f22, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f27, 0(x2) # load 0x00008000 from memory into f27
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f11, 0(x2) # load 0x00007e00 from memory into f11
la x2, scratch
li x3, 0x3344acde1870a595 # load x3 with value 0x3344acde1870a595
sw x3, 0(x2) # store 0x3344acde1870a595 in memory
flh f9, 0(x2) # load 0x3344acde1870a595 from memory into f9
fnmadd.h f21, f27, f11, f9, dyn # perform operation
fnmadd.h f21, f27, f11, f9, rdn # perform operation
fnmadd.h f21, f27, f11, f9, rmm # perform operation
fnmadd.h f21, f27, f11, f9, rne # perform operation
fnmadd.h f21, f27, f11, f9, rtz # perform operation
fnmadd.h f21, f27, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f27, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f27, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f27, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f27, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f27, f11, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f31, 0(x2) # load 0x00008000 from memory into f31
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
la x2, scratch
li x3, 0xee63e4e5ee090286 # load x3 with value 0xee63e4e5ee090286
sw x3, 0(x2) # store 0xee63e4e5ee090286 in memory
flh f18, 0(x2) # load 0xee63e4e5ee090286 from memory into f18
fnmadd.h f20, f31, f23, f18, dyn # perform operation
fnmadd.h f20, f31, f23, f18, rdn # perform operation
fnmadd.h f20, f31, f23, f18, rmm # perform operation
fnmadd.h f20, f31, f23, f18, rne # perform operation
fnmadd.h f20, f31, f23, f18, rtz # perform operation
fnmadd.h f20, f31, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f31, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f31, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f31, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f31, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f31, f23, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f9, 0(x2) # load 0x00008000 from memory into f9
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f26, 0(x2) # load 0x0000fe00 from memory into f26
la x2, scratch
li x3, 0xefce44ae10255d8a # load x3 with value 0xefce44ae10255d8a
sw x3, 0(x2) # store 0xefce44ae10255d8a in memory
flh f27, 0(x2) # load 0xefce44ae10255d8a from memory into f27
fnmadd.h f30, f9, f26, f27, dyn # perform operation
fnmadd.h f30, f9, f26, f27, rdn # perform operation
fnmadd.h f30, f9, f26, f27, rmm # perform operation
fnmadd.h f30, f9, f26, f27, rne # perform operation
fnmadd.h f30, f9, f26, f27, rtz # perform operation
fnmadd.h f30, f9, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f9, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f9, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f9, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f9, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f9, f26, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f13, 0(x2) # load 0x00008000 from memory into f13
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f5, 0(x2) # load 0x00007c01 from memory into f5
la x2, scratch
li x3, 0xac51a5cf02703cc4 # load x3 with value 0xac51a5cf02703cc4
sw x3, 0(x2) # store 0xac51a5cf02703cc4 in memory
flh f15, 0(x2) # load 0xac51a5cf02703cc4 from memory into f15
fnmadd.h f28, f13, f5, f15, dyn # perform operation
fnmadd.h f28, f13, f5, f15, rdn # perform operation
fnmadd.h f28, f13, f5, f15, rmm # perform operation
fnmadd.h f28, f13, f5, f15, rne # perform operation
fnmadd.h f28, f13, f5, f15, rtz # perform operation
fnmadd.h f28, f13, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f13, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f13, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f13, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f13, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f13, f5, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f28, 0(x2) # load 0x00008000 from memory into f28
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f19, 0(x2) # load 0x00007dff from memory into f19
la x2, scratch
li x3, 0xb02f8b8aea4464c2 # load x3 with value 0xb02f8b8aea4464c2
sw x3, 0(x2) # store 0xb02f8b8aea4464c2 in memory
flh f17, 0(x2) # load 0xb02f8b8aea4464c2 from memory into f17
fnmadd.h f15, f28, f19, f17, dyn # perform operation
fnmadd.h f15, f28, f19, f17, rdn # perform operation
fnmadd.h f15, f28, f19, f17, rmm # perform operation
fnmadd.h f15, f28, f19, f17, rne # perform operation
fnmadd.h f15, f28, f19, f17, rtz # perform operation
fnmadd.h f15, f28, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f28, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f28, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f28, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f28, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f28, f19, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f10, 0(x2) # load 0x00008000 from memory into f10
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f3, 0(x2) # load 0x0000fc01 from memory into f3
la x2, scratch
li x3, 0x6664d260b8969fee # load x3 with value 0x6664d260b8969fee
sw x3, 0(x2) # store 0x6664d260b8969fee in memory
flh f27, 0(x2) # load 0x6664d260b8969fee from memory into f27
fnmadd.h f30, f10, f3, f27, dyn # perform operation
fnmadd.h f30, f10, f3, f27, rdn # perform operation
fnmadd.h f30, f10, f3, f27, rmm # perform operation
fnmadd.h f30, f10, f3, f27, rne # perform operation
fnmadd.h f30, f10, f3, f27, rtz # perform operation
fnmadd.h f30, f10, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f10, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f10, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f10, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f10, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f10, f3, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f30, 0(x2) # load 0x00008000 from memory into f30
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f7, 0(x2) # load 0x000058b4 from memory into f7
la x2, scratch
li x3, 0x8138c2394fc7c549 # load x3 with value 0x8138c2394fc7c549
sw x3, 0(x2) # store 0x8138c2394fc7c549 in memory
flh f31, 0(x2) # load 0x8138c2394fc7c549 from memory into f31
fnmadd.h f26, f30, f7, f31, dyn # perform operation
fnmadd.h f26, f30, f7, f31, rdn # perform operation
fnmadd.h f26, f30, f7, f31, rmm # perform operation
fnmadd.h f26, f30, f7, f31, rne # perform operation
fnmadd.h f26, f30, f7, f31, rtz # perform operation
fnmadd.h f26, f30, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f30, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f30, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f30, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f30, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f30, f7, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f2, 0(x2) # load 0x00008000 from memory into f2
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f27, 0(x2) # load 0x0000c93a from memory into f27
la x2, scratch
li x3, 0x5303b3dbf6c7f8ba # load x3 with value 0x5303b3dbf6c7f8ba
sw x3, 0(x2) # store 0x5303b3dbf6c7f8ba in memory
flh f23, 0(x2) # load 0x5303b3dbf6c7f8ba from memory into f23
fnmadd.h f25, f2, f27, f23, dyn # perform operation
fnmadd.h f25, f2, f27, f23, rdn # perform operation
fnmadd.h f25, f2, f27, f23, rmm # perform operation
fnmadd.h f25, f2, f27, f23, rne # perform operation
fnmadd.h f25, f2, f27, f23, rtz # perform operation
fnmadd.h f25, f2, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f2, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f2, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f2, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f2, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f2, f27, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f3, 0(x2) # load 0x00003c00 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0xa88943cd058f166e # load x3 with value 0xa88943cd058f166e
sw x3, 0(x2) # store 0xa88943cd058f166e in memory
flh f1, 0(x2) # load 0xa88943cd058f166e from memory into f1
fnmadd.h f19, f3, f26, f1, dyn # perform operation
fnmadd.h f19, f3, f26, f1, rdn # perform operation
fnmadd.h f19, f3, f26, f1, rmm # perform operation
fnmadd.h f19, f3, f26, f1, rne # perform operation
fnmadd.h f19, f3, f26, f1, rtz # perform operation
fnmadd.h f19, f3, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f3, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f3, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f3, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f3, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f3, f26, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f20, 0(x2) # load 0x00003c00 from memory into f20
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f16, 0(x2) # load 0x00008000 from memory into f16
la x2, scratch
li x3, 0xdc4dc381444cd7da # load x3 with value 0xdc4dc381444cd7da
sw x3, 0(x2) # store 0xdc4dc381444cd7da in memory
flh f22, 0(x2) # load 0xdc4dc381444cd7da from memory into f22
fnmadd.h f21, f20, f16, f22, dyn # perform operation
fnmadd.h f21, f20, f16, f22, rdn # perform operation
fnmadd.h f21, f20, f16, f22, rmm # perform operation
fnmadd.h f21, f20, f16, f22, rne # perform operation
fnmadd.h f21, f20, f16, f22, rtz # perform operation
fnmadd.h f21, f20, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f20, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f17, 0(x2) # load 0x00003c00 from memory into f17
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f30, 0(x2) # load 0x00003c00 from memory into f30
la x2, scratch
li x3, 0x3ed3c80f42849303 # load x3 with value 0x3ed3c80f42849303
sw x3, 0(x2) # store 0x3ed3c80f42849303 in memory
flh f25, 0(x2) # load 0x3ed3c80f42849303 from memory into f25
fnmadd.h f26, f17, f30, f25, dyn # perform operation
fnmadd.h f26, f17, f30, f25, rdn # perform operation
fnmadd.h f26, f17, f30, f25, rmm # perform operation
fnmadd.h f26, f17, f30, f25, rne # perform operation
fnmadd.h f26, f17, f30, f25, rtz # perform operation
fnmadd.h f26, f17, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f17, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f17, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f17, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f17, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f17, f30, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f8, 0(x2) # load 0x0000bc00 from memory into f8
la x2, scratch
li x3, 0x9c3871c36449d7f7 # load x3 with value 0x9c3871c36449d7f7
sw x3, 0(x2) # store 0x9c3871c36449d7f7 in memory
flh f5, 0(x2) # load 0x9c3871c36449d7f7 from memory into f5
fnmadd.h f10, f18, f8, f5, dyn # perform operation
fnmadd.h f10, f18, f8, f5, rdn # perform operation
fnmadd.h f10, f18, f8, f5, rmm # perform operation
fnmadd.h f10, f18, f8, f5, rne # perform operation
fnmadd.h f10, f18, f8, f5, rtz # perform operation
fnmadd.h f10, f18, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f18, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f18, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f18, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f18, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f18, f8, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f5, 0(x2) # load 0x00003c00 from memory into f5
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f12, 0(x2) # load 0x00003e00 from memory into f12
la x2, scratch
li x3, 0x30b875ed3a3001e1 # load x3 with value 0x30b875ed3a3001e1
sw x3, 0(x2) # store 0x30b875ed3a3001e1 in memory
flh f2, 0(x2) # load 0x30b875ed3a3001e1 from memory into f2
fnmadd.h f19, f5, f12, f2, dyn # perform operation
fnmadd.h f19, f5, f12, f2, rdn # perform operation
fnmadd.h f19, f5, f12, f2, rmm # perform operation
fnmadd.h f19, f5, f12, f2, rne # perform operation
fnmadd.h f19, f5, f12, f2, rtz # perform operation
fnmadd.h f19, f5, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f5, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f5, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f5, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f5, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f5, f12, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f22, 0(x2) # load 0x00003c00 from memory into f22
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f21, 0(x2) # load 0x0000be00 from memory into f21
la x2, scratch
li x3, 0x125d93c7f8194e31 # load x3 with value 0x125d93c7f8194e31
sw x3, 0(x2) # store 0x125d93c7f8194e31 in memory
flh f5, 0(x2) # load 0x125d93c7f8194e31 from memory into f5
fnmadd.h f27, f22, f21, f5, dyn # perform operation
fnmadd.h f27, f22, f21, f5, rdn # perform operation
fnmadd.h f27, f22, f21, f5, rmm # perform operation
fnmadd.h f27, f22, f21, f5, rne # perform operation
fnmadd.h f27, f22, f21, f5, rtz # perform operation
fnmadd.h f27, f22, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f22, f21, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f5, 0(x2) # load 0x00003c00 from memory into f5
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f20, 0(x2) # load 0x00004000 from memory into f20
la x2, scratch
li x3, 0x8eb47c38d323376c # load x3 with value 0x8eb47c38d323376c
sw x3, 0(x2) # store 0x8eb47c38d323376c in memory
flh f10, 0(x2) # load 0x8eb47c38d323376c from memory into f10
fnmadd.h f18, f5, f20, f10, dyn # perform operation
fnmadd.h f18, f5, f20, f10, rdn # perform operation
fnmadd.h f18, f5, f20, f10, rmm # perform operation
fnmadd.h f18, f5, f20, f10, rne # perform operation
fnmadd.h f18, f5, f20, f10, rtz # perform operation
fnmadd.h f18, f5, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f5, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f5, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f5, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f5, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f5, f20, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f5, 0(x2) # load 0x00003c00 from memory into f5
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f16, 0(x2) # load 0x0000c000 from memory into f16
la x2, scratch
li x3, 0x9d1ff9512b9875f3 # load x3 with value 0x9d1ff9512b9875f3
sw x3, 0(x2) # store 0x9d1ff9512b9875f3 in memory
flh f31, 0(x2) # load 0x9d1ff9512b9875f3 from memory into f31
fnmadd.h f8, f5, f16, f31, dyn # perform operation
fnmadd.h f8, f5, f16, f31, rdn # perform operation
fnmadd.h f8, f5, f16, f31, rmm # perform operation
fnmadd.h f8, f5, f16, f31, rne # perform operation
fnmadd.h f8, f5, f16, f31, rtz # perform operation
fnmadd.h f8, f5, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f5, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f5, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f5, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f5, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f5, f16, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f23, 0(x2) # load 0x00003c00 from memory into f23
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f26, 0(x2) # load 0x00000400 from memory into f26
la x2, scratch
li x3, 0x46b5f1fae95cc99 # load x3 with value 0x46b5f1fae95cc99
sw x3, 0(x2) # store 0x46b5f1fae95cc99 in memory
flh f9, 0(x2) # load 0x46b5f1fae95cc99 from memory into f9
fnmadd.h f12, f23, f26, f9, dyn # perform operation
fnmadd.h f12, f23, f26, f9, rdn # perform operation
fnmadd.h f12, f23, f26, f9, rmm # perform operation
fnmadd.h f12, f23, f26, f9, rne # perform operation
fnmadd.h f12, f23, f26, f9, rtz # perform operation
fnmadd.h f12, f23, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f23, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f23, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f23, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f23, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f23, f26, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f23, 0(x2) # load 0x00003c00 from memory into f23
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f5, 0(x2) # load 0x00008400 from memory into f5
la x2, scratch
li x3, 0x3d2091796af55b6c # load x3 with value 0x3d2091796af55b6c
sw x3, 0(x2) # store 0x3d2091796af55b6c in memory
flh f28, 0(x2) # load 0x3d2091796af55b6c from memory into f28
fnmadd.h f25, f23, f5, f28, dyn # perform operation
fnmadd.h f25, f23, f5, f28, rdn # perform operation
fnmadd.h f25, f23, f5, f28, rmm # perform operation
fnmadd.h f25, f23, f5, f28, rne # perform operation
fnmadd.h f25, f23, f5, f28, rtz # perform operation
fnmadd.h f25, f23, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f23, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f23, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f23, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f23, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f23, f5, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f9, 0(x2) # load 0x00007bff from memory into f9
la x2, scratch
li x3, 0x59bab821514def58 # load x3 with value 0x59bab821514def58
sw x3, 0(x2) # store 0x59bab821514def58 in memory
flh f19, 0(x2) # load 0x59bab821514def58 from memory into f19
fnmadd.h f13, f6, f9, f19, dyn # perform operation
fnmadd.h f13, f6, f9, f19, rdn # perform operation
fnmadd.h f13, f6, f9, f19, rmm # perform operation
fnmadd.h f13, f6, f9, f19, rne # perform operation
fnmadd.h f13, f6, f9, f19, rtz # perform operation
fnmadd.h f13, f6, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f6, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f6, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f6, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f6, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f6, f9, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f21, 0(x2) # load 0x00003c00 from memory into f21
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f16, 0(x2) # load 0x0000fbff from memory into f16
la x2, scratch
li x3, 0x8878774b595347a6 # load x3 with value 0x8878774b595347a6
sw x3, 0(x2) # store 0x8878774b595347a6 in memory
flh f9, 0(x2) # load 0x8878774b595347a6 from memory into f9
fnmadd.h f26, f21, f16, f9, dyn # perform operation
fnmadd.h f26, f21, f16, f9, rdn # perform operation
fnmadd.h f26, f21, f16, f9, rmm # perform operation
fnmadd.h f26, f21, f16, f9, rne # perform operation
fnmadd.h f26, f21, f16, f9, rtz # perform operation
fnmadd.h f26, f21, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f21, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f21, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f21, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f21, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f21, f16, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f28, 0(x2) # load 0x00003c00 from memory into f28
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f8, 0(x2) # load 0x000003ff from memory into f8
la x2, scratch
li x3, 0xc408fd391e482d02 # load x3 with value 0xc408fd391e482d02
sw x3, 0(x2) # store 0xc408fd391e482d02 in memory
flh f3, 0(x2) # load 0xc408fd391e482d02 from memory into f3
fnmadd.h f14, f28, f8, f3, dyn # perform operation
fnmadd.h f14, f28, f8, f3, rdn # perform operation
fnmadd.h f14, f28, f8, f3, rmm # perform operation
fnmadd.h f14, f28, f8, f3, rne # perform operation
fnmadd.h f14, f28, f8, f3, rtz # perform operation
fnmadd.h f14, f28, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f28, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f28, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f28, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f28, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f28, f8, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f3, 0(x2) # load 0x00003c00 from memory into f3
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f9, 0(x2) # load 0x000083ff from memory into f9
la x2, scratch
li x3, 0xfb7370c16e05beb2 # load x3 with value 0xfb7370c16e05beb2
sw x3, 0(x2) # store 0xfb7370c16e05beb2 in memory
flh f1, 0(x2) # load 0xfb7370c16e05beb2 from memory into f1
fnmadd.h f23, f3, f9, f1, dyn # perform operation
fnmadd.h f23, f3, f9, f1, rdn # perform operation
fnmadd.h f23, f3, f9, f1, rmm # perform operation
fnmadd.h f23, f3, f9, f1, rne # perform operation
fnmadd.h f23, f3, f9, f1, rtz # perform operation
fnmadd.h f23, f3, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f3, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f3, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f3, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f3, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f3, f9, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
la x2, scratch
li x3, 0x28e50af30a318ce9 # load x3 with value 0x28e50af30a318ce9
sw x3, 0(x2) # store 0x28e50af30a318ce9 in memory
flh f17, 0(x2) # load 0x28e50af30a318ce9 from memory into f17
fnmadd.h f18, f16, f19, f17, dyn # perform operation
fnmadd.h f18, f16, f19, f17, rdn # perform operation
fnmadd.h f18, f16, f19, f17, rmm # perform operation
fnmadd.h f18, f16, f19, f17, rne # perform operation
fnmadd.h f18, f16, f19, f17, rtz # perform operation
fnmadd.h f18, f16, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f16, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f16, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f16, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f16, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f16, f19, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f25, 0(x2) # load 0x00003c00 from memory into f25
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f15, 0(x2) # load 0x00008200 from memory into f15
la x2, scratch
li x3, 0xb7c95564fd75c98d # load x3 with value 0xb7c95564fd75c98d
sw x3, 0(x2) # store 0xb7c95564fd75c98d in memory
flh f11, 0(x2) # load 0xb7c95564fd75c98d from memory into f11
fnmadd.h f3, f25, f15, f11, dyn # perform operation
fnmadd.h f3, f25, f15, f11, rdn # perform operation
fnmadd.h f3, f25, f15, f11, rmm # perform operation
fnmadd.h f3, f25, f15, f11, rne # perform operation
fnmadd.h f3, f25, f15, f11, rtz # perform operation
fnmadd.h f3, f25, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f25, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f25, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f25, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f25, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f25, f15, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f7, 0(x2) # load 0x00003c00 from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x7549c70a2c6db625 # load x3 with value 0x7549c70a2c6db625
sw x3, 0(x2) # store 0x7549c70a2c6db625 in memory
flh f24, 0(x2) # load 0x7549c70a2c6db625 from memory into f24
fnmadd.h f6, f7, f17, f24, dyn # perform operation
fnmadd.h f6, f7, f17, f24, rdn # perform operation
fnmadd.h f6, f7, f17, f24, rmm # perform operation
fnmadd.h f6, f7, f17, f24, rne # perform operation
fnmadd.h f6, f7, f17, f24, rtz # perform operation
fnmadd.h f6, f7, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f7, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f7, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f7, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f7, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f7, f17, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f7, 0(x2) # load 0x00003c00 from memory into f7
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f31, 0(x2) # load 0x00008001 from memory into f31
la x2, scratch
li x3, 0x1b396062ffd18931 # load x3 with value 0x1b396062ffd18931
sw x3, 0(x2) # store 0x1b396062ffd18931 in memory
flh f21, 0(x2) # load 0x1b396062ffd18931 from memory into f21
fnmadd.h f8, f7, f31, f21, dyn # perform operation
fnmadd.h f8, f7, f31, f21, rdn # perform operation
fnmadd.h f8, f7, f31, f21, rmm # perform operation
fnmadd.h f8, f7, f31, f21, rne # perform operation
fnmadd.h f8, f7, f31, f21, rtz # perform operation
fnmadd.h f8, f7, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f7, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f7, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f7, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f7, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f7, f31, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f3, 0(x2) # load 0x00003c00 from memory into f3
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f28, 0(x2) # load 0x00007c00 from memory into f28
la x2, scratch
li x3, 0x827aa468d03c3e37 # load x3 with value 0x827aa468d03c3e37
sw x3, 0(x2) # store 0x827aa468d03c3e37 in memory
flh f16, 0(x2) # load 0x827aa468d03c3e37 from memory into f16
fnmadd.h f26, f3, f28, f16, dyn # perform operation
fnmadd.h f26, f3, f28, f16, rdn # perform operation
fnmadd.h f26, f3, f28, f16, rmm # perform operation
fnmadd.h f26, f3, f28, f16, rne # perform operation
fnmadd.h f26, f3, f28, f16, rtz # perform operation
fnmadd.h f26, f3, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f3, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f3, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f3, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f3, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f3, f28, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f21, 0(x2) # load 0x00003c00 from memory into f21
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f16, 0(x2) # load 0x0000fc00 from memory into f16
la x2, scratch
li x3, 0x1f3831ad0f795198 # load x3 with value 0x1f3831ad0f795198
sw x3, 0(x2) # store 0x1f3831ad0f795198 in memory
flh f28, 0(x2) # load 0x1f3831ad0f795198 from memory into f28
fnmadd.h f9, f21, f16, f28, dyn # perform operation
fnmadd.h f9, f21, f16, f28, rdn # perform operation
fnmadd.h f9, f21, f16, f28, rmm # perform operation
fnmadd.h f9, f21, f16, f28, rne # perform operation
fnmadd.h f9, f21, f16, f28, rtz # perform operation
fnmadd.h f9, f21, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f21, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f21, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f21, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f21, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f21, f16, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f17, 0(x2) # load 0x00003c00 from memory into f17
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f31, 0(x2) # load 0x00007e00 from memory into f31
la x2, scratch
li x3, 0x53c6fd49e11b6f9b # load x3 with value 0x53c6fd49e11b6f9b
sw x3, 0(x2) # store 0x53c6fd49e11b6f9b in memory
flh f18, 0(x2) # load 0x53c6fd49e11b6f9b from memory into f18
fnmadd.h f27, f17, f31, f18, dyn # perform operation
fnmadd.h f27, f17, f31, f18, rdn # perform operation
fnmadd.h f27, f17, f31, f18, rmm # perform operation
fnmadd.h f27, f17, f31, f18, rne # perform operation
fnmadd.h f27, f17, f31, f18, rtz # perform operation
fnmadd.h f27, f17, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f17, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f17, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f17, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f17, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f17, f31, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f24, 0(x2) # load 0x00003c00 from memory into f24
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f27, 0(x2) # load 0x00007fff from memory into f27
la x2, scratch
li x3, 0x2b297281f08f4b1b # load x3 with value 0x2b297281f08f4b1b
sw x3, 0(x2) # store 0x2b297281f08f4b1b in memory
flh f20, 0(x2) # load 0x2b297281f08f4b1b from memory into f20
fnmadd.h f2, f24, f27, f20, dyn # perform operation
fnmadd.h f2, f24, f27, f20, rdn # perform operation
fnmadd.h f2, f24, f27, f20, rmm # perform operation
fnmadd.h f2, f24, f27, f20, rne # perform operation
fnmadd.h f2, f24, f27, f20, rtz # perform operation
fnmadd.h f2, f24, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f24, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f24, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f24, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f24, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f24, f27, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f2, 0(x2) # load 0x0000fe00 from memory into f2
la x2, scratch
li x3, 0x27661ccd462f7758 # load x3 with value 0x27661ccd462f7758
sw x3, 0(x2) # store 0x27661ccd462f7758 in memory
flh f11, 0(x2) # load 0x27661ccd462f7758 from memory into f11
fnmadd.h f12, f16, f2, f11, dyn # perform operation
fnmadd.h f12, f16, f2, f11, rdn # perform operation
fnmadd.h f12, f16, f2, f11, rmm # perform operation
fnmadd.h f12, f16, f2, f11, rne # perform operation
fnmadd.h f12, f16, f2, f11, rtz # perform operation
fnmadd.h f12, f16, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f16, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f16, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f16, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f16, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f16, f2, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f27, 0(x2) # load 0x00003c00 from memory into f27
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
la x2, scratch
li x3, 0xbda0d6a74032b456 # load x3 with value 0xbda0d6a74032b456
sw x3, 0(x2) # store 0xbda0d6a74032b456 in memory
flh f7, 0(x2) # load 0xbda0d6a74032b456 from memory into f7
fnmadd.h f6, f27, f20, f7, dyn # perform operation
fnmadd.h f6, f27, f20, f7, rdn # perform operation
fnmadd.h f6, f27, f20, f7, rmm # perform operation
fnmadd.h f6, f27, f20, f7, rne # perform operation
fnmadd.h f6, f27, f20, f7, rtz # perform operation
fnmadd.h f6, f27, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f27, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f27, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f27, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f27, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f27, f20, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f31, 0(x2) # load 0x00003c00 from memory into f31
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f24, 0(x2) # load 0x00007dff from memory into f24
la x2, scratch
li x3, 0x3e9d79b832688b2c # load x3 with value 0x3e9d79b832688b2c
sw x3, 0(x2) # store 0x3e9d79b832688b2c in memory
flh f23, 0(x2) # load 0x3e9d79b832688b2c from memory into f23
fnmadd.h f27, f31, f24, f23, dyn # perform operation
fnmadd.h f27, f31, f24, f23, rdn # perform operation
fnmadd.h f27, f31, f24, f23, rmm # perform operation
fnmadd.h f27, f31, f24, f23, rne # perform operation
fnmadd.h f27, f31, f24, f23, rtz # perform operation
fnmadd.h f27, f31, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f31, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f31, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f31, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f31, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f31, f24, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f15, 0(x2) # load 0x00003c00 from memory into f15
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f21, 0(x2) # load 0x0000fc01 from memory into f21
la x2, scratch
li x3, 0xc43ab9fffc586053 # load x3 with value 0xc43ab9fffc586053
sw x3, 0(x2) # store 0xc43ab9fffc586053 in memory
flh f12, 0(x2) # load 0xc43ab9fffc586053 from memory into f12
fnmadd.h f2, f15, f21, f12, dyn # perform operation
fnmadd.h f2, f15, f21, f12, rdn # perform operation
fnmadd.h f2, f15, f21, f12, rmm # perform operation
fnmadd.h f2, f15, f21, f12, rne # perform operation
fnmadd.h f2, f15, f21, f12, rtz # perform operation
fnmadd.h f2, f15, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f15, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f15, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f15, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f15, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f15, f21, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f5, 0(x2) # load 0x00003c00 from memory into f5
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f6, 0(x2) # load 0x000058b4 from memory into f6
la x2, scratch
li x3, 0x66860daa11b8f082 # load x3 with value 0x66860daa11b8f082
sw x3, 0(x2) # store 0x66860daa11b8f082 in memory
flh f8, 0(x2) # load 0x66860daa11b8f082 from memory into f8
fnmadd.h f10, f5, f6, f8, dyn # perform operation
fnmadd.h f10, f5, f6, f8, rdn # perform operation
fnmadd.h f10, f5, f6, f8, rmm # perform operation
fnmadd.h f10, f5, f6, f8, rne # perform operation
fnmadd.h f10, f5, f6, f8, rtz # perform operation
fnmadd.h f10, f5, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f5, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f5, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f5, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f5, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f5, f6, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f17, 0(x2) # load 0x00003c00 from memory into f17
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f14, 0(x2) # load 0x0000c93a from memory into f14
la x2, scratch
li x3, 0x2e7cb1d412151610 # load x3 with value 0x2e7cb1d412151610
sw x3, 0(x2) # store 0x2e7cb1d412151610 in memory
flh f29, 0(x2) # load 0x2e7cb1d412151610 from memory into f29
fnmadd.h f15, f17, f14, f29, dyn # perform operation
fnmadd.h f15, f17, f14, f29, rdn # perform operation
fnmadd.h f15, f17, f14, f29, rmm # perform operation
fnmadd.h f15, f17, f14, f29, rne # perform operation
fnmadd.h f15, f17, f14, f29, rtz # perform operation
fnmadd.h f15, f17, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f17, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f17, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f17, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f17, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f17, f14, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f30, 0(x2) # load 0x0000bc00 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x20ed0f4c2647f75 # load x3 with value 0x20ed0f4c2647f75
sw x3, 0(x2) # store 0x20ed0f4c2647f75 in memory
flh f10, 0(x2) # load 0x20ed0f4c2647f75 from memory into f10
fnmadd.h f22, f30, f16, f10, dyn # perform operation
fnmadd.h f22, f30, f16, f10, rdn # perform operation
fnmadd.h f22, f30, f16, f10, rmm # perform operation
fnmadd.h f22, f30, f16, f10, rne # perform operation
fnmadd.h f22, f30, f16, f10, rtz # perform operation
fnmadd.h f22, f30, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f30, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f30, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f30, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f30, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f30, f16, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f31, 0(x2) # load 0x0000bc00 from memory into f31
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f9, 0(x2) # load 0x00008000 from memory into f9
la x2, scratch
li x3, 0x2d8415a5d40a4e2 # load x3 with value 0x2d8415a5d40a4e2
sw x3, 0(x2) # store 0x2d8415a5d40a4e2 in memory
flh f27, 0(x2) # load 0x2d8415a5d40a4e2 from memory into f27
fnmadd.h f11, f31, f9, f27, dyn # perform operation
fnmadd.h f11, f31, f9, f27, rdn # perform operation
fnmadd.h f11, f31, f9, f27, rmm # perform operation
fnmadd.h f11, f31, f9, f27, rne # perform operation
fnmadd.h f11, f31, f9, f27, rtz # perform operation
fnmadd.h f11, f31, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f31, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f31, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f31, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f31, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f31, f9, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f2, 0(x2) # load 0x0000bc00 from memory into f2
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
la x2, scratch
li x3, 0x5894afe46a23a679 # load x3 with value 0x5894afe46a23a679
sw x3, 0(x2) # store 0x5894afe46a23a679 in memory
flh f10, 0(x2) # load 0x5894afe46a23a679 from memory into f10
fnmadd.h f9, f2, f18, f10, dyn # perform operation
fnmadd.h f9, f2, f18, f10, rdn # perform operation
fnmadd.h f9, f2, f18, f10, rmm # perform operation
fnmadd.h f9, f2, f18, f10, rne # perform operation
fnmadd.h f9, f2, f18, f10, rtz # perform operation
fnmadd.h f9, f2, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f2, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f2, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f2, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f2, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f2, f18, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f29, 0(x2) # load 0x0000bc00 from memory into f29
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f21, 0(x2) # load 0x0000bc00 from memory into f21
la x2, scratch
li x3, 0xee7b00ab3501ace5 # load x3 with value 0xee7b00ab3501ace5
sw x3, 0(x2) # store 0xee7b00ab3501ace5 in memory
flh f9, 0(x2) # load 0xee7b00ab3501ace5 from memory into f9
fnmadd.h f13, f29, f21, f9, dyn # perform operation
fnmadd.h f13, f29, f21, f9, rdn # perform operation
fnmadd.h f13, f29, f21, f9, rmm # perform operation
fnmadd.h f13, f29, f21, f9, rne # perform operation
fnmadd.h f13, f29, f21, f9, rtz # perform operation
fnmadd.h f13, f29, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f29, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f29, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f29, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f29, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f29, f21, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
la x2, scratch
li x3, 0x14b6bc447e69b46d # load x3 with value 0x14b6bc447e69b46d
sw x3, 0(x2) # store 0x14b6bc447e69b46d in memory
flh f13, 0(x2) # load 0x14b6bc447e69b46d from memory into f13
fnmadd.h f12, f11, f21, f13, dyn # perform operation
fnmadd.h f12, f11, f21, f13, rdn # perform operation
fnmadd.h f12, f11, f21, f13, rmm # perform operation
fnmadd.h f12, f11, f21, f13, rne # perform operation
fnmadd.h f12, f11, f21, f13, rtz # perform operation
fnmadd.h f12, f11, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f11, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f11, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f11, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f11, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f11, f21, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f29, 0(x2) # load 0x0000bc00 from memory into f29
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f31, 0(x2) # load 0x0000be00 from memory into f31
la x2, scratch
li x3, 0xd3fd53b47adc8dd3 # load x3 with value 0xd3fd53b47adc8dd3
sw x3, 0(x2) # store 0xd3fd53b47adc8dd3 in memory
flh f27, 0(x2) # load 0xd3fd53b47adc8dd3 from memory into f27
fnmadd.h f1, f29, f31, f27, dyn # perform operation
fnmadd.h f1, f29, f31, f27, rdn # perform operation
fnmadd.h f1, f29, f31, f27, rmm # perform operation
fnmadd.h f1, f29, f31, f27, rne # perform operation
fnmadd.h f1, f29, f31, f27, rtz # perform operation
fnmadd.h f1, f29, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f29, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f29, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f29, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f29, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f29, f31, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f10, 0(x2) # load 0x00004000 from memory into f10
la x2, scratch
li x3, 0x9f1994a6dafa0c77 # load x3 with value 0x9f1994a6dafa0c77
sw x3, 0(x2) # store 0x9f1994a6dafa0c77 in memory
flh f13, 0(x2) # load 0x9f1994a6dafa0c77 from memory into f13
fnmadd.h f3, f6, f10, f13, dyn # perform operation
fnmadd.h f3, f6, f10, f13, rdn # perform operation
fnmadd.h f3, f6, f10, f13, rmm # perform operation
fnmadd.h f3, f6, f10, f13, rne # perform operation
fnmadd.h f3, f6, f10, f13, rtz # perform operation
fnmadd.h f3, f6, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f6, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f6, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f6, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f6, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f6, f10, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f20, 0(x2) # load 0x0000bc00 from memory into f20
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f18, 0(x2) # load 0x0000c000 from memory into f18
la x2, scratch
li x3, 0x4287864221a46ee6 # load x3 with value 0x4287864221a46ee6
sw x3, 0(x2) # store 0x4287864221a46ee6 in memory
flh f14, 0(x2) # load 0x4287864221a46ee6 from memory into f14
fnmadd.h f3, f20, f18, f14, dyn # perform operation
fnmadd.h f3, f20, f18, f14, rdn # perform operation
fnmadd.h f3, f20, f18, f14, rmm # perform operation
fnmadd.h f3, f20, f18, f14, rne # perform operation
fnmadd.h f3, f20, f18, f14, rtz # perform operation
fnmadd.h f3, f20, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f20, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f20, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f20, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f20, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f20, f18, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f31, 0(x2) # load 0x0000bc00 from memory into f31
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f13, 0(x2) # load 0x00000400 from memory into f13
la x2, scratch
li x3, 0x723c8fb414c5bfb8 # load x3 with value 0x723c8fb414c5bfb8
sw x3, 0(x2) # store 0x723c8fb414c5bfb8 in memory
flh f30, 0(x2) # load 0x723c8fb414c5bfb8 from memory into f30
fnmadd.h f26, f31, f13, f30, dyn # perform operation
fnmadd.h f26, f31, f13, f30, rdn # perform operation
fnmadd.h f26, f31, f13, f30, rmm # perform operation
fnmadd.h f26, f31, f13, f30, rne # perform operation
fnmadd.h f26, f31, f13, f30, rtz # perform operation
fnmadd.h f26, f31, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f31, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f31, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f31, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f31, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f31, f13, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f13, 0(x2) # load 0x0000bc00 from memory into f13
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f31, 0(x2) # load 0x00008400 from memory into f31
la x2, scratch
li x3, 0x79191ba2d3d1e4e4 # load x3 with value 0x79191ba2d3d1e4e4
sw x3, 0(x2) # store 0x79191ba2d3d1e4e4 in memory
flh f21, 0(x2) # load 0x79191ba2d3d1e4e4 from memory into f21
fnmadd.h f26, f13, f31, f21, dyn # perform operation
fnmadd.h f26, f13, f31, f21, rdn # perform operation
fnmadd.h f26, f13, f31, f21, rmm # perform operation
fnmadd.h f26, f13, f31, f21, rne # perform operation
fnmadd.h f26, f13, f31, f21, rtz # perform operation
fnmadd.h f26, f13, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f13, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f13, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f13, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f13, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f13, f31, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f15, 0(x2) # load 0x0000bc00 from memory into f15
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f26, 0(x2) # load 0x00007bff from memory into f26
la x2, scratch
li x3, 0xef106e25a2b7f4e2 # load x3 with value 0xef106e25a2b7f4e2
sw x3, 0(x2) # store 0xef106e25a2b7f4e2 in memory
flh f30, 0(x2) # load 0xef106e25a2b7f4e2 from memory into f30
fnmadd.h f21, f15, f26, f30, dyn # perform operation
fnmadd.h f21, f15, f26, f30, rdn # perform operation
fnmadd.h f21, f15, f26, f30, rmm # perform operation
fnmadd.h f21, f15, f26, f30, rne # perform operation
fnmadd.h f21, f15, f26, f30, rtz # perform operation
fnmadd.h f21, f15, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f15, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f15, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f15, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f15, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f15, f26, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f28, 0(x2) # load 0x0000fbff from memory into f28
la x2, scratch
li x3, 0xf8cb77759c26bdcd # load x3 with value 0xf8cb77759c26bdcd
sw x3, 0(x2) # store 0xf8cb77759c26bdcd in memory
flh f11, 0(x2) # load 0xf8cb77759c26bdcd from memory into f11
fnmadd.h f20, f24, f28, f11, dyn # perform operation
fnmadd.h f20, f24, f28, f11, rdn # perform operation
fnmadd.h f20, f24, f28, f11, rmm # perform operation
fnmadd.h f20, f24, f28, f11, rne # perform operation
fnmadd.h f20, f24, f28, f11, rtz # perform operation
fnmadd.h f20, f24, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f24, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f24, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f24, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f24, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f24, f28, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f3, 0(x2) # load 0x0000bc00 from memory into f3
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f8, 0(x2) # load 0x000003ff from memory into f8
la x2, scratch
li x3, 0x4cfde4f2de6b1ffd # load x3 with value 0x4cfde4f2de6b1ffd
sw x3, 0(x2) # store 0x4cfde4f2de6b1ffd in memory
flh f30, 0(x2) # load 0x4cfde4f2de6b1ffd from memory into f30
fnmadd.h f24, f3, f8, f30, dyn # perform operation
fnmadd.h f24, f3, f8, f30, rdn # perform operation
fnmadd.h f24, f3, f8, f30, rmm # perform operation
fnmadd.h f24, f3, f8, f30, rne # perform operation
fnmadd.h f24, f3, f8, f30, rtz # perform operation
fnmadd.h f24, f3, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f3, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f3, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f3, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f3, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f3, f8, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f16, 0(x2) # load 0x0000bc00 from memory into f16
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f9, 0(x2) # load 0x000083ff from memory into f9
la x2, scratch
li x3, 0x2b348362aaf99f5f # load x3 with value 0x2b348362aaf99f5f
sw x3, 0(x2) # store 0x2b348362aaf99f5f in memory
flh f2, 0(x2) # load 0x2b348362aaf99f5f from memory into f2
fnmadd.h f15, f16, f9, f2, dyn # perform operation
fnmadd.h f15, f16, f9, f2, rdn # perform operation
fnmadd.h f15, f16, f9, f2, rmm # perform operation
fnmadd.h f15, f16, f9, f2, rne # perform operation
fnmadd.h f15, f16, f9, f2, rtz # perform operation
fnmadd.h f15, f16, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f16, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f16, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f16, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f16, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f16, f9, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f19, 0(x2) # load 0x0000bc00 from memory into f19
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f2, 0(x2) # load 0x00000200 from memory into f2
la x2, scratch
li x3, 0x4db8a0fd3869224f # load x3 with value 0x4db8a0fd3869224f
sw x3, 0(x2) # store 0x4db8a0fd3869224f in memory
flh f14, 0(x2) # load 0x4db8a0fd3869224f from memory into f14
fnmadd.h f22, f19, f2, f14, dyn # perform operation
fnmadd.h f22, f19, f2, f14, rdn # perform operation
fnmadd.h f22, f19, f2, f14, rmm # perform operation
fnmadd.h f22, f19, f2, f14, rne # perform operation
fnmadd.h f22, f19, f2, f14, rtz # perform operation
fnmadd.h f22, f19, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f19, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f19, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f19, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f19, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f19, f2, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f21, 0(x2) # load 0x0000bc00 from memory into f21
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
la x2, scratch
li x3, 0x816c78a1d2a2810 # load x3 with value 0x816c78a1d2a2810
sw x3, 0(x2) # store 0x816c78a1d2a2810 in memory
flh f9, 0(x2) # load 0x816c78a1d2a2810 from memory into f9
fnmadd.h f2, f21, f17, f9, dyn # perform operation
fnmadd.h f2, f21, f17, f9, rdn # perform operation
fnmadd.h f2, f21, f17, f9, rmm # perform operation
fnmadd.h f2, f21, f17, f9, rne # perform operation
fnmadd.h f2, f21, f17, f9, rtz # perform operation
fnmadd.h f2, f21, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f21, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f21, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f21, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f21, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f21, f17, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f31, 0(x2) # load 0x0000bc00 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0xadbeba98b1a8b85c # load x3 with value 0xadbeba98b1a8b85c
sw x3, 0(x2) # store 0xadbeba98b1a8b85c in memory
flh f6, 0(x2) # load 0xadbeba98b1a8b85c from memory into f6
fnmadd.h f12, f31, f24, f6, dyn # perform operation
fnmadd.h f12, f31, f24, f6, rdn # perform operation
fnmadd.h f12, f31, f24, f6, rmm # perform operation
fnmadd.h f12, f31, f24, f6, rne # perform operation
fnmadd.h f12, f31, f24, f6, rtz # perform operation
fnmadd.h f12, f31, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f31, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f31, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f31, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f31, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f31, f24, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f2, 0(x2) # load 0x00008001 from memory into f2
la x2, scratch
li x3, 0x3ce202e9d6c0c57a # load x3 with value 0x3ce202e9d6c0c57a
sw x3, 0(x2) # store 0x3ce202e9d6c0c57a in memory
flh f26, 0(x2) # load 0x3ce202e9d6c0c57a from memory into f26
fnmadd.h f27, f11, f2, f26, dyn # perform operation
fnmadd.h f27, f11, f2, f26, rdn # perform operation
fnmadd.h f27, f11, f2, f26, rmm # perform operation
fnmadd.h f27, f11, f2, f26, rne # perform operation
fnmadd.h f27, f11, f2, f26, rtz # perform operation
fnmadd.h f27, f11, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f11, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f11, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f11, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f11, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f11, f2, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f28, 0(x2) # load 0x0000bc00 from memory into f28
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f31, 0(x2) # load 0x00007c00 from memory into f31
la x2, scratch
li x3, 0xd373d2e7986098b # load x3 with value 0xd373d2e7986098b
sw x3, 0(x2) # store 0xd373d2e7986098b in memory
flh f10, 0(x2) # load 0xd373d2e7986098b from memory into f10
fnmadd.h f16, f28, f31, f10, dyn # perform operation
fnmadd.h f16, f28, f31, f10, rdn # perform operation
fnmadd.h f16, f28, f31, f10, rmm # perform operation
fnmadd.h f16, f28, f31, f10, rne # perform operation
fnmadd.h f16, f28, f31, f10, rtz # perform operation
fnmadd.h f16, f28, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f28, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f28, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f28, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f28, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f28, f31, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f2, 0(x2) # load 0x0000bc00 from memory into f2
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f31, 0(x2) # load 0x0000fc00 from memory into f31
la x2, scratch
li x3, 0x92e698d318941b7 # load x3 with value 0x92e698d318941b7
sw x3, 0(x2) # store 0x92e698d318941b7 in memory
flh f27, 0(x2) # load 0x92e698d318941b7 from memory into f27
fnmadd.h f7, f2, f31, f27, dyn # perform operation
fnmadd.h f7, f2, f31, f27, rdn # perform operation
fnmadd.h f7, f2, f31, f27, rmm # perform operation
fnmadd.h f7, f2, f31, f27, rne # perform operation
fnmadd.h f7, f2, f31, f27, rtz # perform operation
fnmadd.h f7, f2, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f2, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f2, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f2, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f2, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f2, f31, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f12, 0(x2) # load 0x0000bc00 from memory into f12
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f15, 0(x2) # load 0x00007e00 from memory into f15
la x2, scratch
li x3, 0x722d9f46313f4708 # load x3 with value 0x722d9f46313f4708
sw x3, 0(x2) # store 0x722d9f46313f4708 in memory
flh f1, 0(x2) # load 0x722d9f46313f4708 from memory into f1
fnmadd.h f19, f12, f15, f1, dyn # perform operation
fnmadd.h f19, f12, f15, f1, rdn # perform operation
fnmadd.h f19, f12, f15, f1, rmm # perform operation
fnmadd.h f19, f12, f15, f1, rne # perform operation
fnmadd.h f19, f12, f15, f1, rtz # perform operation
fnmadd.h f19, f12, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f12, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f12, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f12, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f12, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f12, f15, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f23, 0(x2) # load 0x0000bc00 from memory into f23
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f3, 0(x2) # load 0x00007fff from memory into f3
la x2, scratch
li x3, 0xf8f2694589770400 # load x3 with value 0xf8f2694589770400
sw x3, 0(x2) # store 0xf8f2694589770400 in memory
flh f20, 0(x2) # load 0xf8f2694589770400 from memory into f20
fnmadd.h f24, f23, f3, f20, dyn # perform operation
fnmadd.h f24, f23, f3, f20, rdn # perform operation
fnmadd.h f24, f23, f3, f20, rmm # perform operation
fnmadd.h f24, f23, f3, f20, rne # perform operation
fnmadd.h f24, f23, f3, f20, rtz # perform operation
fnmadd.h f24, f23, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f23, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f23, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f23, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f23, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f23, f3, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f1, 0(x2) # load 0x0000bc00 from memory into f1
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f22, 0(x2) # load 0x0000fe00 from memory into f22
la x2, scratch
li x3, 0x497f9eebe256879d # load x3 with value 0x497f9eebe256879d
sw x3, 0(x2) # store 0x497f9eebe256879d in memory
flh f19, 0(x2) # load 0x497f9eebe256879d from memory into f19
fnmadd.h f5, f1, f22, f19, dyn # perform operation
fnmadd.h f5, f1, f22, f19, rdn # perform operation
fnmadd.h f5, f1, f22, f19, rmm # perform operation
fnmadd.h f5, f1, f22, f19, rne # perform operation
fnmadd.h f5, f1, f22, f19, rtz # perform operation
fnmadd.h f5, f1, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f1, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f1, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f1, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f1, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f1, f22, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f18, 0(x2) # load 0x0000bc00 from memory into f18
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f7, 0(x2) # load 0x00007c01 from memory into f7
la x2, scratch
li x3, 0x47725568b40362f7 # load x3 with value 0x47725568b40362f7
sw x3, 0(x2) # store 0x47725568b40362f7 in memory
flh f20, 0(x2) # load 0x47725568b40362f7 from memory into f20
fnmadd.h f17, f18, f7, f20, dyn # perform operation
fnmadd.h f17, f18, f7, f20, rdn # perform operation
fnmadd.h f17, f18, f7, f20, rmm # perform operation
fnmadd.h f17, f18, f7, f20, rne # perform operation
fnmadd.h f17, f18, f7, f20, rtz # perform operation
fnmadd.h f17, f18, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f18, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f18, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f18, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f18, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f18, f7, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f31, 0(x2) # load 0x0000bc00 from memory into f31
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f30, 0(x2) # load 0x00007dff from memory into f30
la x2, scratch
li x3, 0x9060996b26a80dba # load x3 with value 0x9060996b26a80dba
sw x3, 0(x2) # store 0x9060996b26a80dba in memory
flh f9, 0(x2) # load 0x9060996b26a80dba from memory into f9
fnmadd.h f18, f31, f30, f9, dyn # perform operation
fnmadd.h f18, f31, f30, f9, rdn # perform operation
fnmadd.h f18, f31, f30, f9, rmm # perform operation
fnmadd.h f18, f31, f30, f9, rne # perform operation
fnmadd.h f18, f31, f30, f9, rtz # perform operation
fnmadd.h f18, f31, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f31, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f31, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f31, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f31, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f31, f30, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f15, 0(x2) # load 0x0000fc01 from memory into f15
la x2, scratch
li x3, 0x8821a01fe35ac668 # load x3 with value 0x8821a01fe35ac668
sw x3, 0(x2) # store 0x8821a01fe35ac668 in memory
flh f28, 0(x2) # load 0x8821a01fe35ac668 from memory into f28
fnmadd.h f22, f11, f15, f28, dyn # perform operation
fnmadd.h f22, f11, f15, f28, rdn # perform operation
fnmadd.h f22, f11, f15, f28, rmm # perform operation
fnmadd.h f22, f11, f15, f28, rne # perform operation
fnmadd.h f22, f11, f15, f28, rtz # perform operation
fnmadd.h f22, f11, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f11, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f11, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f11, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f11, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f11, f15, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f5, 0(x2) # load 0x0000bc00 from memory into f5
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f9, 0(x2) # load 0x000058b4 from memory into f9
la x2, scratch
li x3, 0x66b309837b5fd83e # load x3 with value 0x66b309837b5fd83e
sw x3, 0(x2) # store 0x66b309837b5fd83e in memory
flh f29, 0(x2) # load 0x66b309837b5fd83e from memory into f29
fnmadd.h f25, f5, f9, f29, dyn # perform operation
fnmadd.h f25, f5, f9, f29, rdn # perform operation
fnmadd.h f25, f5, f9, f29, rmm # perform operation
fnmadd.h f25, f5, f9, f29, rne # perform operation
fnmadd.h f25, f5, f9, f29, rtz # perform operation
fnmadd.h f25, f5, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f5, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f5, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f5, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f5, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f5, f9, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f9, 0(x2) # load 0x0000c93a from memory into f9
la x2, scratch
li x3, 0x20a44b1a0c4dd333 # load x3 with value 0x20a44b1a0c4dd333
sw x3, 0(x2) # store 0x20a44b1a0c4dd333 in memory
flh f13, 0(x2) # load 0x20a44b1a0c4dd333 from memory into f13
fnmadd.h f20, f11, f9, f13, dyn # perform operation
fnmadd.h f20, f11, f9, f13, rdn # perform operation
fnmadd.h f20, f11, f9, f13, rmm # perform operation
fnmadd.h f20, f11, f9, f13, rne # perform operation
fnmadd.h f20, f11, f9, f13, rtz # perform operation
fnmadd.h f20, f11, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f11, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f11, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f11, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f11, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f11, f9, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x7c1deb9b8f1587e8 # load x3 with value 0x7c1deb9b8f1587e8
sw x3, 0(x2) # store 0x7c1deb9b8f1587e8 in memory
flh f7, 0(x2) # load 0x7c1deb9b8f1587e8 from memory into f7
fnmadd.h f6, f21, f22, f7, dyn # perform operation
fnmadd.h f6, f21, f22, f7, rdn # perform operation
fnmadd.h f6, f21, f22, f7, rmm # perform operation
fnmadd.h f6, f21, f22, f7, rne # perform operation
fnmadd.h f6, f21, f22, f7, rtz # perform operation
fnmadd.h f6, f21, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f21, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f21, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f21, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f21, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f21, f22, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f5, 0(x2) # load 0x00003e00 from memory into f5
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f15, 0(x2) # load 0x00008000 from memory into f15
la x2, scratch
li x3, 0x28d0a333697f0542 # load x3 with value 0x28d0a333697f0542
sw x3, 0(x2) # store 0x28d0a333697f0542 in memory
flh f6, 0(x2) # load 0x28d0a333697f0542 from memory into f6
fnmadd.h f28, f5, f15, f6, dyn # perform operation
fnmadd.h f28, f5, f15, f6, rdn # perform operation
fnmadd.h f28, f5, f15, f6, rmm # perform operation
fnmadd.h f28, f5, f15, f6, rne # perform operation
fnmadd.h f28, f5, f15, f6, rtz # perform operation
fnmadd.h f28, f5, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f5, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f5, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f5, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f5, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f5, f15, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f27, 0(x2) # load 0x00003e00 from memory into f27
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f26, 0(x2) # load 0x00003c00 from memory into f26
la x2, scratch
li x3, 0xc7543e3794814c8c # load x3 with value 0xc7543e3794814c8c
sw x3, 0(x2) # store 0xc7543e3794814c8c in memory
flh f21, 0(x2) # load 0xc7543e3794814c8c from memory into f21
fnmadd.h f29, f27, f26, f21, dyn # perform operation
fnmadd.h f29, f27, f26, f21, rdn # perform operation
fnmadd.h f29, f27, f26, f21, rmm # perform operation
fnmadd.h f29, f27, f26, f21, rne # perform operation
fnmadd.h f29, f27, f26, f21, rtz # perform operation
fnmadd.h f29, f27, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f27, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f27, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f27, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f27, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f27, f26, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f11, 0(x2) # load 0x00003e00 from memory into f11
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
la x2, scratch
li x3, 0x52e04be218732735 # load x3 with value 0x52e04be218732735
sw x3, 0(x2) # store 0x52e04be218732735 in memory
flh f29, 0(x2) # load 0x52e04be218732735 from memory into f29
fnmadd.h f26, f11, f24, f29, dyn # perform operation
fnmadd.h f26, f11, f24, f29, rdn # perform operation
fnmadd.h f26, f11, f24, f29, rmm # perform operation
fnmadd.h f26, f11, f24, f29, rne # perform operation
fnmadd.h f26, f11, f24, f29, rtz # perform operation
fnmadd.h f26, f11, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f11, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f11, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f11, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f11, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f11, f24, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f23, 0(x2) # load 0x00003e00 from memory into f23
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f3, 0(x2) # load 0x00003e00 from memory into f3
la x2, scratch
li x3, 0x7ee1ad2ec1f6bbab # load x3 with value 0x7ee1ad2ec1f6bbab
sw x3, 0(x2) # store 0x7ee1ad2ec1f6bbab in memory
flh f7, 0(x2) # load 0x7ee1ad2ec1f6bbab from memory into f7
fnmadd.h f20, f23, f3, f7, dyn # perform operation
fnmadd.h f20, f23, f3, f7, rdn # perform operation
fnmadd.h f20, f23, f3, f7, rmm # perform operation
fnmadd.h f20, f23, f3, f7, rne # perform operation
fnmadd.h f20, f23, f3, f7, rtz # perform operation
fnmadd.h f20, f23, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f23, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f23, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f23, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f23, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f23, f3, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f24, 0(x2) # load 0x0000be00 from memory into f24
la x2, scratch
li x3, 0x99ab9d97601131d8 # load x3 with value 0x99ab9d97601131d8
sw x3, 0(x2) # store 0x99ab9d97601131d8 in memory
flh f13, 0(x2) # load 0x99ab9d97601131d8 from memory into f13
fnmadd.h f19, f7, f24, f13, dyn # perform operation
fnmadd.h f19, f7, f24, f13, rdn # perform operation
fnmadd.h f19, f7, f24, f13, rmm # perform operation
fnmadd.h f19, f7, f24, f13, rne # perform operation
fnmadd.h f19, f7, f24, f13, rtz # perform operation
fnmadd.h f19, f7, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f7, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f7, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f7, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f7, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f7, f24, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f2, 0(x2) # load 0x00003e00 from memory into f2
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f31, 0(x2) # load 0x00004000 from memory into f31
la x2, scratch
li x3, 0x6155042ad7dba2ab # load x3 with value 0x6155042ad7dba2ab
sw x3, 0(x2) # store 0x6155042ad7dba2ab in memory
flh f3, 0(x2) # load 0x6155042ad7dba2ab from memory into f3
fnmadd.h f14, f2, f31, f3, dyn # perform operation
fnmadd.h f14, f2, f31, f3, rdn # perform operation
fnmadd.h f14, f2, f31, f3, rmm # perform operation
fnmadd.h f14, f2, f31, f3, rne # perform operation
fnmadd.h f14, f2, f31, f3, rtz # perform operation
fnmadd.h f14, f2, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f2, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f2, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f2, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f2, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f2, f31, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f1, 0(x2) # load 0x00003e00 from memory into f1
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f14, 0(x2) # load 0x0000c000 from memory into f14
la x2, scratch
li x3, 0x6dc1375a7b48971b # load x3 with value 0x6dc1375a7b48971b
sw x3, 0(x2) # store 0x6dc1375a7b48971b in memory
flh f12, 0(x2) # load 0x6dc1375a7b48971b from memory into f12
fnmadd.h f26, f1, f14, f12, dyn # perform operation
fnmadd.h f26, f1, f14, f12, rdn # perform operation
fnmadd.h f26, f1, f14, f12, rmm # perform operation
fnmadd.h f26, f1, f14, f12, rne # perform operation
fnmadd.h f26, f1, f14, f12, rtz # perform operation
fnmadd.h f26, f1, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f1, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f1, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f1, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f1, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f1, f14, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f12, 0(x2) # load 0x00003e00 from memory into f12
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
la x2, scratch
li x3, 0xcd852079728fba99 # load x3 with value 0xcd852079728fba99
sw x3, 0(x2) # store 0xcd852079728fba99 in memory
flh f15, 0(x2) # load 0xcd852079728fba99 from memory into f15
fnmadd.h f25, f12, f18, f15, dyn # perform operation
fnmadd.h f25, f12, f18, f15, rdn # perform operation
fnmadd.h f25, f12, f18, f15, rmm # perform operation
fnmadd.h f25, f12, f18, f15, rne # perform operation
fnmadd.h f25, f12, f18, f15, rtz # perform operation
fnmadd.h f25, f12, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f12, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f12, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f12, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f12, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f12, f18, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f6, 0(x2) # load 0x00003e00 from memory into f6
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
la x2, scratch
li x3, 0xa9957e328b17b49a # load x3 with value 0xa9957e328b17b49a
sw x3, 0(x2) # store 0xa9957e328b17b49a in memory
flh f9, 0(x2) # load 0xa9957e328b17b49a from memory into f9
fnmadd.h f28, f6, f15, f9, dyn # perform operation
fnmadd.h f28, f6, f15, f9, rdn # perform operation
fnmadd.h f28, f6, f15, f9, rmm # perform operation
fnmadd.h f28, f6, f15, f9, rne # perform operation
fnmadd.h f28, f6, f15, f9, rtz # perform operation
fnmadd.h f28, f6, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f6, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f6, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f6, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f6, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f6, f15, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f16, 0(x2) # load 0x00003e00 from memory into f16
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f8, 0(x2) # load 0x00007bff from memory into f8
la x2, scratch
li x3, 0xfcc1a58e62d9b96c # load x3 with value 0xfcc1a58e62d9b96c
sw x3, 0(x2) # store 0xfcc1a58e62d9b96c in memory
flh f12, 0(x2) # load 0xfcc1a58e62d9b96c from memory into f12
fnmadd.h f19, f16, f8, f12, dyn # perform operation
fnmadd.h f19, f16, f8, f12, rdn # perform operation
fnmadd.h f19, f16, f8, f12, rmm # perform operation
fnmadd.h f19, f16, f8, f12, rne # perform operation
fnmadd.h f19, f16, f8, f12, rtz # perform operation
fnmadd.h f19, f16, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f16, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f16, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f16, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f16, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f16, f8, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f6, 0(x2) # load 0x00003e00 from memory into f6
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f19, 0(x2) # load 0x0000fbff from memory into f19
la x2, scratch
li x3, 0x8e5ecf96f23fb33d # load x3 with value 0x8e5ecf96f23fb33d
sw x3, 0(x2) # store 0x8e5ecf96f23fb33d in memory
flh f29, 0(x2) # load 0x8e5ecf96f23fb33d from memory into f29
fnmadd.h f22, f6, f19, f29, dyn # perform operation
fnmadd.h f22, f6, f19, f29, rdn # perform operation
fnmadd.h f22, f6, f19, f29, rmm # perform operation
fnmadd.h f22, f6, f19, f29, rne # perform operation
fnmadd.h f22, f6, f19, f29, rtz # perform operation
fnmadd.h f22, f6, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f6, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f6, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f6, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f6, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f6, f19, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f20, 0(x2) # load 0x00003e00 from memory into f20
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f16, 0(x2) # load 0x000003ff from memory into f16
la x2, scratch
li x3, 0x57814e812e796a6d # load x3 with value 0x57814e812e796a6d
sw x3, 0(x2) # store 0x57814e812e796a6d in memory
flh f1, 0(x2) # load 0x57814e812e796a6d from memory into f1
fnmadd.h f3, f20, f16, f1, dyn # perform operation
fnmadd.h f3, f20, f16, f1, rdn # perform operation
fnmadd.h f3, f20, f16, f1, rmm # perform operation
fnmadd.h f3, f20, f16, f1, rne # perform operation
fnmadd.h f3, f20, f16, f1, rtz # perform operation
fnmadd.h f3, f20, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f20, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f20, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f20, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f20, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f20, f16, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f25, 0(x2) # load 0x00003e00 from memory into f25
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f29, 0(x2) # load 0x000083ff from memory into f29
la x2, scratch
li x3, 0xf61d74462d61faa3 # load x3 with value 0xf61d74462d61faa3
sw x3, 0(x2) # store 0xf61d74462d61faa3 in memory
flh f7, 0(x2) # load 0xf61d74462d61faa3 from memory into f7
fnmadd.h f28, f25, f29, f7, dyn # perform operation
fnmadd.h f28, f25, f29, f7, rdn # perform operation
fnmadd.h f28, f25, f29, f7, rmm # perform operation
fnmadd.h f28, f25, f29, f7, rne # perform operation
fnmadd.h f28, f25, f29, f7, rtz # perform operation
fnmadd.h f28, f25, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f25, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f25, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f25, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f25, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f25, f29, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f11, 0(x2) # load 0x00000200 from memory into f11
la x2, scratch
li x3, 0x760994b9ac7b867 # load x3 with value 0x760994b9ac7b867
sw x3, 0(x2) # store 0x760994b9ac7b867 in memory
flh f26, 0(x2) # load 0x760994b9ac7b867 from memory into f26
fnmadd.h f10, f21, f11, f26, dyn # perform operation
fnmadd.h f10, f21, f11, f26, rdn # perform operation
fnmadd.h f10, f21, f11, f26, rmm # perform operation
fnmadd.h f10, f21, f11, f26, rne # perform operation
fnmadd.h f10, f21, f11, f26, rtz # perform operation
fnmadd.h f10, f21, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f21, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f21, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f21, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f21, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f21, f11, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f31, 0(x2) # load 0x00003e00 from memory into f31
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f15, 0(x2) # load 0x00008200 from memory into f15
la x2, scratch
li x3, 0xae3fee85d65246e4 # load x3 with value 0xae3fee85d65246e4
sw x3, 0(x2) # store 0xae3fee85d65246e4 in memory
flh f18, 0(x2) # load 0xae3fee85d65246e4 from memory into f18
fnmadd.h f20, f31, f15, f18, dyn # perform operation
fnmadd.h f20, f31, f15, f18, rdn # perform operation
fnmadd.h f20, f31, f15, f18, rmm # perform operation
fnmadd.h f20, f31, f15, f18, rne # perform operation
fnmadd.h f20, f31, f15, f18, rtz # perform operation
fnmadd.h f20, f31, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f31, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f31, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f31, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f31, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f31, f15, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f11, 0(x2) # load 0x00003e00 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x4d61ee8a37dc1298 # load x3 with value 0x4d61ee8a37dc1298
sw x3, 0(x2) # store 0x4d61ee8a37dc1298 in memory
flh f13, 0(x2) # load 0x4d61ee8a37dc1298 from memory into f13
fnmadd.h f18, f11, f15, f13, dyn # perform operation
fnmadd.h f18, f11, f15, f13, rdn # perform operation
fnmadd.h f18, f11, f15, f13, rmm # perform operation
fnmadd.h f18, f11, f15, f13, rne # perform operation
fnmadd.h f18, f11, f15, f13, rtz # perform operation
fnmadd.h f18, f11, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f11, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f11, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f11, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f11, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f11, f15, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f19, 0(x2) # load 0x00003e00 from memory into f19
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f16, 0(x2) # load 0x00008001 from memory into f16
la x2, scratch
li x3, 0xa46c4fee6aea6bfe # load x3 with value 0xa46c4fee6aea6bfe
sw x3, 0(x2) # store 0xa46c4fee6aea6bfe in memory
flh f26, 0(x2) # load 0xa46c4fee6aea6bfe from memory into f26
fnmadd.h f22, f19, f16, f26, dyn # perform operation
fnmadd.h f22, f19, f16, f26, rdn # perform operation
fnmadd.h f22, f19, f16, f26, rmm # perform operation
fnmadd.h f22, f19, f16, f26, rne # perform operation
fnmadd.h f22, f19, f16, f26, rtz # perform operation
fnmadd.h f22, f19, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f19, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f19, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f19, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f19, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f19, f16, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f29, 0(x2) # load 0x00003e00 from memory into f29
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f11, 0(x2) # load 0x00007c00 from memory into f11
la x2, scratch
li x3, 0xaa06bdbcccf52de1 # load x3 with value 0xaa06bdbcccf52de1
sw x3, 0(x2) # store 0xaa06bdbcccf52de1 in memory
flh f8, 0(x2) # load 0xaa06bdbcccf52de1 from memory into f8
fnmadd.h f14, f29, f11, f8, dyn # perform operation
fnmadd.h f14, f29, f11, f8, rdn # perform operation
fnmadd.h f14, f29, f11, f8, rmm # perform operation
fnmadd.h f14, f29, f11, f8, rne # perform operation
fnmadd.h f14, f29, f11, f8, rtz # perform operation
fnmadd.h f14, f29, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f29, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f29, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f29, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f29, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f29, f11, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f13, 0(x2) # load 0x00003e00 from memory into f13
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f16, 0(x2) # load 0x0000fc00 from memory into f16
la x2, scratch
li x3, 0xbfaf5fda3d6c4e98 # load x3 with value 0xbfaf5fda3d6c4e98
sw x3, 0(x2) # store 0xbfaf5fda3d6c4e98 in memory
flh f10, 0(x2) # load 0xbfaf5fda3d6c4e98 from memory into f10
fnmadd.h f22, f13, f16, f10, dyn # perform operation
fnmadd.h f22, f13, f16, f10, rdn # perform operation
fnmadd.h f22, f13, f16, f10, rmm # perform operation
fnmadd.h f22, f13, f16, f10, rne # perform operation
fnmadd.h f22, f13, f16, f10, rtz # perform operation
fnmadd.h f22, f13, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f13, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f13, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f13, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f13, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f13, f16, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f16, 0(x2) # load 0x00003e00 from memory into f16
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f10, 0(x2) # load 0x00007e00 from memory into f10
la x2, scratch
li x3, 0x846f10504552f2ad # load x3 with value 0x846f10504552f2ad
sw x3, 0(x2) # store 0x846f10504552f2ad in memory
flh f3, 0(x2) # load 0x846f10504552f2ad from memory into f3
fnmadd.h f27, f16, f10, f3, dyn # perform operation
fnmadd.h f27, f16, f10, f3, rdn # perform operation
fnmadd.h f27, f16, f10, f3, rmm # perform operation
fnmadd.h f27, f16, f10, f3, rne # perform operation
fnmadd.h f27, f16, f10, f3, rtz # perform operation
fnmadd.h f27, f16, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f16, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f16, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f16, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f16, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f16, f10, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f5, 0(x2) # load 0x00003e00 from memory into f5
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f9, 0(x2) # load 0x00007fff from memory into f9
la x2, scratch
li x3, 0xf53a1e9ff1186c42 # load x3 with value 0xf53a1e9ff1186c42
sw x3, 0(x2) # store 0xf53a1e9ff1186c42 in memory
flh f27, 0(x2) # load 0xf53a1e9ff1186c42 from memory into f27
fnmadd.h f20, f5, f9, f27, dyn # perform operation
fnmadd.h f20, f5, f9, f27, rdn # perform operation
fnmadd.h f20, f5, f9, f27, rmm # perform operation
fnmadd.h f20, f5, f9, f27, rne # perform operation
fnmadd.h f20, f5, f9, f27, rtz # perform operation
fnmadd.h f20, f5, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f5, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f5, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f5, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f5, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f5, f9, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f18, 0(x2) # load 0x00003e00 from memory into f18
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f7, 0(x2) # load 0x0000fe00 from memory into f7
la x2, scratch
li x3, 0x6256ad5ffd142c93 # load x3 with value 0x6256ad5ffd142c93
sw x3, 0(x2) # store 0x6256ad5ffd142c93 in memory
flh f12, 0(x2) # load 0x6256ad5ffd142c93 from memory into f12
fnmadd.h f17, f18, f7, f12, dyn # perform operation
fnmadd.h f17, f18, f7, f12, rdn # perform operation
fnmadd.h f17, f18, f7, f12, rmm # perform operation
fnmadd.h f17, f18, f7, f12, rne # perform operation
fnmadd.h f17, f18, f7, f12, rtz # perform operation
fnmadd.h f17, f18, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f18, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f18, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f18, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f18, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f18, f7, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f3, 0(x2) # load 0x00003e00 from memory into f3
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f11, 0(x2) # load 0x00007c01 from memory into f11
la x2, scratch
li x3, 0x3c09c2ac3bfb7ce4 # load x3 with value 0x3c09c2ac3bfb7ce4
sw x3, 0(x2) # store 0x3c09c2ac3bfb7ce4 in memory
flh f6, 0(x2) # load 0x3c09c2ac3bfb7ce4 from memory into f6
fnmadd.h f26, f3, f11, f6, dyn # perform operation
fnmadd.h f26, f3, f11, f6, rdn # perform operation
fnmadd.h f26, f3, f11, f6, rmm # perform operation
fnmadd.h f26, f3, f11, f6, rne # perform operation
fnmadd.h f26, f3, f11, f6, rtz # perform operation
fnmadd.h f26, f3, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f3, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f30, 0(x2) # load 0x00003e00 from memory into f30
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f25, 0(x2) # load 0x00007dff from memory into f25
la x2, scratch
li x3, 0x702e86bc441b1b7d # load x3 with value 0x702e86bc441b1b7d
sw x3, 0(x2) # store 0x702e86bc441b1b7d in memory
flh f12, 0(x2) # load 0x702e86bc441b1b7d from memory into f12
fnmadd.h f31, f30, f25, f12, dyn # perform operation
fnmadd.h f31, f30, f25, f12, rdn # perform operation
fnmadd.h f31, f30, f25, f12, rmm # perform operation
fnmadd.h f31, f30, f25, f12, rne # perform operation
fnmadd.h f31, f30, f25, f12, rtz # perform operation
fnmadd.h f31, f30, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f30, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f30, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f30, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f30, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f30, f25, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f27, 0(x2) # load 0x0000fc01 from memory into f27
la x2, scratch
li x3, 0x1cf0ef5d2a0b617f # load x3 with value 0x1cf0ef5d2a0b617f
sw x3, 0(x2) # store 0x1cf0ef5d2a0b617f in memory
flh f12, 0(x2) # load 0x1cf0ef5d2a0b617f from memory into f12
fnmadd.h f21, f7, f27, f12, dyn # perform operation
fnmadd.h f21, f7, f27, f12, rdn # perform operation
fnmadd.h f21, f7, f27, f12, rmm # perform operation
fnmadd.h f21, f7, f27, f12, rne # perform operation
fnmadd.h f21, f7, f27, f12, rtz # perform operation
fnmadd.h f21, f7, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f7, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f7, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f7, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f7, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f7, f27, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f9, 0(x2) # load 0x000058b4 from memory into f9
la x2, scratch
li x3, 0xc47ccf40e106f7cc # load x3 with value 0xc47ccf40e106f7cc
sw x3, 0(x2) # store 0xc47ccf40e106f7cc in memory
flh f11, 0(x2) # load 0xc47ccf40e106f7cc from memory into f11
fnmadd.h f2, f7, f9, f11, dyn # perform operation
fnmadd.h f2, f7, f9, f11, rdn # perform operation
fnmadd.h f2, f7, f9, f11, rmm # perform operation
fnmadd.h f2, f7, f9, f11, rne # perform operation
fnmadd.h f2, f7, f9, f11, rtz # perform operation
fnmadd.h f2, f7, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f7, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f7, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f7, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f7, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f7, f9, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f22, 0(x2) # load 0x00003e00 from memory into f22
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f25, 0(x2) # load 0x0000c93a from memory into f25
la x2, scratch
li x3, 0x4bcd42b660978968 # load x3 with value 0x4bcd42b660978968
sw x3, 0(x2) # store 0x4bcd42b660978968 in memory
flh f15, 0(x2) # load 0x4bcd42b660978968 from memory into f15
fnmadd.h f5, f22, f25, f15, dyn # perform operation
fnmadd.h f5, f22, f25, f15, rdn # perform operation
fnmadd.h f5, f22, f25, f15, rmm # perform operation
fnmadd.h f5, f22, f25, f15, rne # perform operation
fnmadd.h f5, f22, f25, f15, rtz # perform operation
fnmadd.h f5, f22, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f22, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f22, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f22, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f22, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f22, f25, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f9, 0(x2) # load 0x0000be00 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0x88aacf18329a896e # load x3 with value 0x88aacf18329a896e
sw x3, 0(x2) # store 0x88aacf18329a896e in memory
flh f27, 0(x2) # load 0x88aacf18329a896e from memory into f27
fnmadd.h f11, f9, f6, f27, dyn # perform operation
fnmadd.h f11, f9, f6, f27, rdn # perform operation
fnmadd.h f11, f9, f6, f27, rmm # perform operation
fnmadd.h f11, f9, f6, f27, rne # perform operation
fnmadd.h f11, f9, f6, f27, rtz # perform operation
fnmadd.h f11, f9, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f9, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f9, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f9, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f9, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f9, f6, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f10, 0(x2) # load 0x0000be00 from memory into f10
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f16, 0(x2) # load 0x00008000 from memory into f16
la x2, scratch
li x3, 0xe44590b43bd1378b # load x3 with value 0xe44590b43bd1378b
sw x3, 0(x2) # store 0xe44590b43bd1378b in memory
flh f14, 0(x2) # load 0xe44590b43bd1378b from memory into f14
fnmadd.h f13, f10, f16, f14, dyn # perform operation
fnmadd.h f13, f10, f16, f14, rdn # perform operation
fnmadd.h f13, f10, f16, f14, rmm # perform operation
fnmadd.h f13, f10, f16, f14, rne # perform operation
fnmadd.h f13, f10, f16, f14, rtz # perform operation
fnmadd.h f13, f10, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f10, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f10, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f10, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f10, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f10, f16, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f5, 0(x2) # load 0x0000be00 from memory into f5
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
la x2, scratch
li x3, 0x3cdea17b9c86bd15 # load x3 with value 0x3cdea17b9c86bd15
sw x3, 0(x2) # store 0x3cdea17b9c86bd15 in memory
flh f1, 0(x2) # load 0x3cdea17b9c86bd15 from memory into f1
fnmadd.h f16, f5, f18, f1, dyn # perform operation
fnmadd.h f16, f5, f18, f1, rdn # perform operation
fnmadd.h f16, f5, f18, f1, rmm # perform operation
fnmadd.h f16, f5, f18, f1, rne # perform operation
fnmadd.h f16, f5, f18, f1, rtz # perform operation
fnmadd.h f16, f5, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f5, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f5, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f5, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f5, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f5, f18, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f11, 0(x2) # load 0x0000be00 from memory into f11
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f18, 0(x2) # load 0x0000bc00 from memory into f18
la x2, scratch
li x3, 0x2f0a7812c38baf82 # load x3 with value 0x2f0a7812c38baf82
sw x3, 0(x2) # store 0x2f0a7812c38baf82 in memory
flh f25, 0(x2) # load 0x2f0a7812c38baf82 from memory into f25
fnmadd.h f31, f11, f18, f25, dyn # perform operation
fnmadd.h f31, f11, f18, f25, rdn # perform operation
fnmadd.h f31, f11, f18, f25, rmm # perform operation
fnmadd.h f31, f11, f18, f25, rne # perform operation
fnmadd.h f31, f11, f18, f25, rtz # perform operation
fnmadd.h f31, f11, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f11, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f11, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f11, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f11, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f11, f18, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f15, 0(x2) # load 0x0000be00 from memory into f15
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f28, 0(x2) # load 0x00003e00 from memory into f28
la x2, scratch
li x3, 0xac6dbaab20a1c529 # load x3 with value 0xac6dbaab20a1c529
sw x3, 0(x2) # store 0xac6dbaab20a1c529 in memory
flh f31, 0(x2) # load 0xac6dbaab20a1c529 from memory into f31
fnmadd.h f14, f15, f28, f31, dyn # perform operation
fnmadd.h f14, f15, f28, f31, rdn # perform operation
fnmadd.h f14, f15, f28, f31, rmm # perform operation
fnmadd.h f14, f15, f28, f31, rne # perform operation
fnmadd.h f14, f15, f28, f31, rtz # perform operation
fnmadd.h f14, f15, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f15, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f15, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f15, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f15, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f15, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
la x2, scratch
li x3, 0x2c87afb39344d363 # load x3 with value 0x2c87afb39344d363
sw x3, 0(x2) # store 0x2c87afb39344d363 in memory
flh f22, 0(x2) # load 0x2c87afb39344d363 from memory into f22
fnmadd.h f16, f23, f14, f22, dyn # perform operation
fnmadd.h f16, f23, f14, f22, rdn # perform operation
fnmadd.h f16, f23, f14, f22, rmm # perform operation
fnmadd.h f16, f23, f14, f22, rne # perform operation
fnmadd.h f16, f23, f14, f22, rtz # perform operation
fnmadd.h f16, f23, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f23, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f23, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f23, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f23, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f23, f14, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f8, 0(x2) # load 0x00004000 from memory into f8
la x2, scratch
li x3, 0xb407940a7e4cfc22 # load x3 with value 0xb407940a7e4cfc22
sw x3, 0(x2) # store 0xb407940a7e4cfc22 in memory
flh f30, 0(x2) # load 0xb407940a7e4cfc22 from memory into f30
fnmadd.h f1, f14, f8, f30, dyn # perform operation
fnmadd.h f1, f14, f8, f30, rdn # perform operation
fnmadd.h f1, f14, f8, f30, rmm # perform operation
fnmadd.h f1, f14, f8, f30, rne # perform operation
fnmadd.h f1, f14, f8, f30, rtz # perform operation
fnmadd.h f1, f14, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f14, f8, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f21, 0(x2) # load 0x0000be00 from memory into f21
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f22, 0(x2) # load 0x0000c000 from memory into f22
la x2, scratch
li x3, 0x7c8c025269d0d595 # load x3 with value 0x7c8c025269d0d595
sw x3, 0(x2) # store 0x7c8c025269d0d595 in memory
flh f10, 0(x2) # load 0x7c8c025269d0d595 from memory into f10
fnmadd.h f20, f21, f22, f10, dyn # perform operation
fnmadd.h f20, f21, f22, f10, rdn # perform operation
fnmadd.h f20, f21, f22, f10, rmm # perform operation
fnmadd.h f20, f21, f22, f10, rne # perform operation
fnmadd.h f20, f21, f22, f10, rtz # perform operation
fnmadd.h f20, f21, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f21, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f21, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f21, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f21, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f21, f22, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f8, 0(x2) # load 0x0000be00 from memory into f8
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f16, 0(x2) # load 0x00000400 from memory into f16
la x2, scratch
li x3, 0x34b5c612c16c5a02 # load x3 with value 0x34b5c612c16c5a02
sw x3, 0(x2) # store 0x34b5c612c16c5a02 in memory
flh f18, 0(x2) # load 0x34b5c612c16c5a02 from memory into f18
fnmadd.h f5, f8, f16, f18, dyn # perform operation
fnmadd.h f5, f8, f16, f18, rdn # perform operation
fnmadd.h f5, f8, f16, f18, rmm # perform operation
fnmadd.h f5, f8, f16, f18, rne # perform operation
fnmadd.h f5, f8, f16, f18, rtz # perform operation
fnmadd.h f5, f8, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f8, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f8, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f8, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f8, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f8, f16, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f8, 0(x2) # load 0x0000be00 from memory into f8
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f18, 0(x2) # load 0x00008400 from memory into f18
la x2, scratch
li x3, 0xebed13761d8a7a54 # load x3 with value 0xebed13761d8a7a54
sw x3, 0(x2) # store 0xebed13761d8a7a54 in memory
flh f29, 0(x2) # load 0xebed13761d8a7a54 from memory into f29
fnmadd.h f9, f8, f18, f29, dyn # perform operation
fnmadd.h f9, f8, f18, f29, rdn # perform operation
fnmadd.h f9, f8, f18, f29, rmm # perform operation
fnmadd.h f9, f8, f18, f29, rne # perform operation
fnmadd.h f9, f8, f18, f29, rtz # perform operation
fnmadd.h f9, f8, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f8, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f8, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f8, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f8, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f8, f18, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f11, 0(x2) # load 0x00007bff from memory into f11
la x2, scratch
li x3, 0x23b5b961282552e1 # load x3 with value 0x23b5b961282552e1
sw x3, 0(x2) # store 0x23b5b961282552e1 in memory
flh f21, 0(x2) # load 0x23b5b961282552e1 from memory into f21
fnmadd.h f26, f14, f11, f21, dyn # perform operation
fnmadd.h f26, f14, f11, f21, rdn # perform operation
fnmadd.h f26, f14, f11, f21, rmm # perform operation
fnmadd.h f26, f14, f11, f21, rne # perform operation
fnmadd.h f26, f14, f11, f21, rtz # perform operation
fnmadd.h f26, f14, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f14, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f14, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f14, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f14, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f14, f11, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f17, 0(x2) # load 0x0000be00 from memory into f17
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f31, 0(x2) # load 0x0000fbff from memory into f31
la x2, scratch
li x3, 0x3edefb5e40271184 # load x3 with value 0x3edefb5e40271184
sw x3, 0(x2) # store 0x3edefb5e40271184 in memory
flh f21, 0(x2) # load 0x3edefb5e40271184 from memory into f21
fnmadd.h f8, f17, f31, f21, dyn # perform operation
fnmadd.h f8, f17, f31, f21, rdn # perform operation
fnmadd.h f8, f17, f31, f21, rmm # perform operation
fnmadd.h f8, f17, f31, f21, rne # perform operation
fnmadd.h f8, f17, f31, f21, rtz # perform operation
fnmadd.h f8, f17, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f17, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f17, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f17, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f17, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f17, f31, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f28, 0(x2) # load 0x000003ff from memory into f28
la x2, scratch
li x3, 0xf570a76d66c676ec # load x3 with value 0xf570a76d66c676ec
sw x3, 0(x2) # store 0xf570a76d66c676ec in memory
flh f23, 0(x2) # load 0xf570a76d66c676ec from memory into f23
fnmadd.h f7, f1, f28, f23, dyn # perform operation
fnmadd.h f7, f1, f28, f23, rdn # perform operation
fnmadd.h f7, f1, f28, f23, rmm # perform operation
fnmadd.h f7, f1, f28, f23, rne # perform operation
fnmadd.h f7, f1, f28, f23, rtz # perform operation
fnmadd.h f7, f1, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f1, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f1, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f1, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f1, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f1, f28, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f23, 0(x2) # load 0x000083ff from memory into f23
la x2, scratch
li x3, 0xecbf0e845474cb32 # load x3 with value 0xecbf0e845474cb32
sw x3, 0(x2) # store 0xecbf0e845474cb32 in memory
flh f28, 0(x2) # load 0xecbf0e845474cb32 from memory into f28
fnmadd.h f11, f14, f23, f28, dyn # perform operation
fnmadd.h f11, f14, f23, f28, rdn # perform operation
fnmadd.h f11, f14, f23, f28, rmm # perform operation
fnmadd.h f11, f14, f23, f28, rne # perform operation
fnmadd.h f11, f14, f23, f28, rtz # perform operation
fnmadd.h f11, f14, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f14, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f14, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f14, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f14, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f14, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f31, 0(x2) # load 0x0000be00 from memory into f31
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
la x2, scratch
li x3, 0xe4ea1cb4058dbe3f # load x3 with value 0xe4ea1cb4058dbe3f
sw x3, 0(x2) # store 0xe4ea1cb4058dbe3f in memory
flh f10, 0(x2) # load 0xe4ea1cb4058dbe3f from memory into f10
fnmadd.h f11, f31, f6, f10, dyn # perform operation
fnmadd.h f11, f31, f6, f10, rdn # perform operation
fnmadd.h f11, f31, f6, f10, rmm # perform operation
fnmadd.h f11, f31, f6, f10, rne # perform operation
fnmadd.h f11, f31, f6, f10, rtz # perform operation
fnmadd.h f11, f31, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f31, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f31, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f31, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f31, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f31, f6, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f31, 0(x2) # load 0x0000be00 from memory into f31
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f14, 0(x2) # load 0x00008200 from memory into f14
la x2, scratch
li x3, 0x6446f8fa43317b8e # load x3 with value 0x6446f8fa43317b8e
sw x3, 0(x2) # store 0x6446f8fa43317b8e in memory
flh f20, 0(x2) # load 0x6446f8fa43317b8e from memory into f20
fnmadd.h f17, f31, f14, f20, dyn # perform operation
fnmadd.h f17, f31, f14, f20, rdn # perform operation
fnmadd.h f17, f31, f14, f20, rmm # perform operation
fnmadd.h f17, f31, f14, f20, rne # perform operation
fnmadd.h f17, f31, f14, f20, rtz # perform operation
fnmadd.h f17, f31, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f31, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f31, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f31, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f31, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f31, f14, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f16, 0(x2) # load 0x0000be00 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0x5d6c226dcc4afa25 # load x3 with value 0x5d6c226dcc4afa25
sw x3, 0(x2) # store 0x5d6c226dcc4afa25 in memory
flh f26, 0(x2) # load 0x5d6c226dcc4afa25 from memory into f26
fnmadd.h f11, f16, f23, f26, dyn # perform operation
fnmadd.h f11, f16, f23, f26, rdn # perform operation
fnmadd.h f11, f16, f23, f26, rmm # perform operation
fnmadd.h f11, f16, f23, f26, rne # perform operation
fnmadd.h f11, f16, f23, f26, rtz # perform operation
fnmadd.h f11, f16, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f16, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f16, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f16, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f16, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f16, f23, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f18, 0(x2) # load 0x0000be00 from memory into f18
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
la x2, scratch
li x3, 0xf87a2b860572a181 # load x3 with value 0xf87a2b860572a181
sw x3, 0(x2) # store 0xf87a2b860572a181 in memory
flh f23, 0(x2) # load 0xf87a2b860572a181 from memory into f23
fnmadd.h f15, f18, f22, f23, dyn # perform operation
fnmadd.h f15, f18, f22, f23, rdn # perform operation
fnmadd.h f15, f18, f22, f23, rmm # perform operation
fnmadd.h f15, f18, f22, f23, rne # perform operation
fnmadd.h f15, f18, f22, f23, rtz # perform operation
fnmadd.h f15, f18, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f18, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f18, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f18, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f18, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f18, f22, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f11, 0(x2) # load 0x0000be00 from memory into f11
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f7, 0(x2) # load 0x00007c00 from memory into f7
la x2, scratch
li x3, 0xe134a1138a26d8b9 # load x3 with value 0xe134a1138a26d8b9
sw x3, 0(x2) # store 0xe134a1138a26d8b9 in memory
flh f30, 0(x2) # load 0xe134a1138a26d8b9 from memory into f30
fnmadd.h f3, f11, f7, f30, dyn # perform operation
fnmadd.h f3, f11, f7, f30, rdn # perform operation
fnmadd.h f3, f11, f7, f30, rmm # perform operation
fnmadd.h f3, f11, f7, f30, rne # perform operation
fnmadd.h f3, f11, f7, f30, rtz # perform operation
fnmadd.h f3, f11, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f11, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f11, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f11, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f11, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f11, f7, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f27, 0(x2) # load 0x0000fc00 from memory into f27
la x2, scratch
li x3, 0xd5eaebfa8f73b01 # load x3 with value 0xd5eaebfa8f73b01
sw x3, 0(x2) # store 0xd5eaebfa8f73b01 in memory
flh f13, 0(x2) # load 0xd5eaebfa8f73b01 from memory into f13
fnmadd.h f1, f14, f27, f13, dyn # perform operation
fnmadd.h f1, f14, f27, f13, rdn # perform operation
fnmadd.h f1, f14, f27, f13, rmm # perform operation
fnmadd.h f1, f14, f27, f13, rne # perform operation
fnmadd.h f1, f14, f27, f13, rtz # perform operation
fnmadd.h f1, f14, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f14, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f14, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f14, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f14, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f14, f27, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f26, 0(x2) # load 0x0000be00 from memory into f26
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f10, 0(x2) # load 0x00007e00 from memory into f10
la x2, scratch
li x3, 0x325c3ff643512b01 # load x3 with value 0x325c3ff643512b01
sw x3, 0(x2) # store 0x325c3ff643512b01 in memory
flh f24, 0(x2) # load 0x325c3ff643512b01 from memory into f24
fnmadd.h f21, f26, f10, f24, dyn # perform operation
fnmadd.h f21, f26, f10, f24, rdn # perform operation
fnmadd.h f21, f26, f10, f24, rmm # perform operation
fnmadd.h f21, f26, f10, f24, rne # perform operation
fnmadd.h f21, f26, f10, f24, rtz # perform operation
fnmadd.h f21, f26, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f26, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f26, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f26, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f26, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f26, f10, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f2, 0(x2) # load 0x0000be00 from memory into f2
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
la x2, scratch
li x3, 0x98a00fd659c11289 # load x3 with value 0x98a00fd659c11289
sw x3, 0(x2) # store 0x98a00fd659c11289 in memory
flh f6, 0(x2) # load 0x98a00fd659c11289 from memory into f6
fnmadd.h f12, f2, f23, f6, dyn # perform operation
fnmadd.h f12, f2, f23, f6, rdn # perform operation
fnmadd.h f12, f2, f23, f6, rmm # perform operation
fnmadd.h f12, f2, f23, f6, rne # perform operation
fnmadd.h f12, f2, f23, f6, rtz # perform operation
fnmadd.h f12, f2, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f2, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f2, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f2, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f2, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f2, f23, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f8, 0(x2) # load 0x0000be00 from memory into f8
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f20, 0(x2) # load 0x0000fe00 from memory into f20
la x2, scratch
li x3, 0x94e665d4241d525 # load x3 with value 0x94e665d4241d525
sw x3, 0(x2) # store 0x94e665d4241d525 in memory
flh f16, 0(x2) # load 0x94e665d4241d525 from memory into f16
fnmadd.h f1, f8, f20, f16, dyn # perform operation
fnmadd.h f1, f8, f20, f16, rdn # perform operation
fnmadd.h f1, f8, f20, f16, rmm # perform operation
fnmadd.h f1, f8, f20, f16, rne # perform operation
fnmadd.h f1, f8, f20, f16, rtz # perform operation
fnmadd.h f1, f8, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f8, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f8, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f8, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f8, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f8, f20, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f19, 0(x2) # load 0x00007c01 from memory into f19
la x2, scratch
li x3, 0xa2bd87112f75d7bb # load x3 with value 0xa2bd87112f75d7bb
sw x3, 0(x2) # store 0xa2bd87112f75d7bb in memory
flh f11, 0(x2) # load 0xa2bd87112f75d7bb from memory into f11
fnmadd.h f5, f1, f19, f11, dyn # perform operation
fnmadd.h f5, f1, f19, f11, rdn # perform operation
fnmadd.h f5, f1, f19, f11, rmm # perform operation
fnmadd.h f5, f1, f19, f11, rne # perform operation
fnmadd.h f5, f1, f19, f11, rtz # perform operation
fnmadd.h f5, f1, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f1, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f1, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f1, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f1, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f1, f19, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f3, 0(x2) # load 0x0000be00 from memory into f3
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f30, 0(x2) # load 0x00007dff from memory into f30
la x2, scratch
li x3, 0xdfdfa3744f4c2182 # load x3 with value 0xdfdfa3744f4c2182
sw x3, 0(x2) # store 0xdfdfa3744f4c2182 in memory
flh f17, 0(x2) # load 0xdfdfa3744f4c2182 from memory into f17
fnmadd.h f1, f3, f30, f17, dyn # perform operation
fnmadd.h f1, f3, f30, f17, rdn # perform operation
fnmadd.h f1, f3, f30, f17, rmm # perform operation
fnmadd.h f1, f3, f30, f17, rne # perform operation
fnmadd.h f1, f3, f30, f17, rtz # perform operation
fnmadd.h f1, f3, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f3, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f3, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f3, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f3, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f3, f30, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f20, 0(x2) # load 0x0000be00 from memory into f20
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f25, 0(x2) # load 0x0000fc01 from memory into f25
la x2, scratch
li x3, 0x9d10df79ad4490dc # load x3 with value 0x9d10df79ad4490dc
sw x3, 0(x2) # store 0x9d10df79ad4490dc in memory
flh f14, 0(x2) # load 0x9d10df79ad4490dc from memory into f14
fnmadd.h f12, f20, f25, f14, dyn # perform operation
fnmadd.h f12, f20, f25, f14, rdn # perform operation
fnmadd.h f12, f20, f25, f14, rmm # perform operation
fnmadd.h f12, f20, f25, f14, rne # perform operation
fnmadd.h f12, f20, f25, f14, rtz # perform operation
fnmadd.h f12, f20, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f20, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f20, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f20, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f20, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f20, f25, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f19, 0(x2) # load 0x0000be00 from memory into f19
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f31, 0(x2) # load 0x000058b4 from memory into f31
la x2, scratch
li x3, 0x3267a9b653c7790e # load x3 with value 0x3267a9b653c7790e
sw x3, 0(x2) # store 0x3267a9b653c7790e in memory
flh f28, 0(x2) # load 0x3267a9b653c7790e from memory into f28
fnmadd.h f9, f19, f31, f28, dyn # perform operation
fnmadd.h f9, f19, f31, f28, rdn # perform operation
fnmadd.h f9, f19, f31, f28, rmm # perform operation
fnmadd.h f9, f19, f31, f28, rne # perform operation
fnmadd.h f9, f19, f31, f28, rtz # perform operation
fnmadd.h f9, f19, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f19, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f19, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f19, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f19, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f19, f31, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f17, 0(x2) # load 0x0000c93a from memory into f17
la x2, scratch
li x3, 0x3ab51825d4cac5ac # load x3 with value 0x3ab51825d4cac5ac
sw x3, 0(x2) # store 0x3ab51825d4cac5ac in memory
flh f19, 0(x2) # load 0x3ab51825d4cac5ac from memory into f19
fnmadd.h f12, f23, f17, f19, dyn # perform operation
fnmadd.h f12, f23, f17, f19, rdn # perform operation
fnmadd.h f12, f23, f17, f19, rmm # perform operation
fnmadd.h f12, f23, f17, f19, rne # perform operation
fnmadd.h f12, f23, f17, f19, rtz # perform operation
fnmadd.h f12, f23, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f23, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f23, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f23, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f23, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f23, f17, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f9, 0(x2) # load 0x00004000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0xa91ccdef3e7365ec # load x3 with value 0xa91ccdef3e7365ec
sw x3, 0(x2) # store 0xa91ccdef3e7365ec in memory
flh f26, 0(x2) # load 0xa91ccdef3e7365ec from memory into f26
fnmadd.h f24, f9, f21, f26, dyn # perform operation
fnmadd.h f24, f9, f21, f26, rdn # perform operation
fnmadd.h f24, f9, f21, f26, rmm # perform operation
fnmadd.h f24, f9, f21, f26, rne # perform operation
fnmadd.h f24, f9, f21, f26, rtz # perform operation
fnmadd.h f24, f9, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f9, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f9, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f9, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f9, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f9, f21, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f18, 0(x2) # load 0x00004000 from memory into f18
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f19, 0(x2) # load 0x00008000 from memory into f19
la x2, scratch
li x3, 0x1e8fbdeffce63668 # load x3 with value 0x1e8fbdeffce63668
sw x3, 0(x2) # store 0x1e8fbdeffce63668 in memory
flh f25, 0(x2) # load 0x1e8fbdeffce63668 from memory into f25
fnmadd.h f9, f18, f19, f25, dyn # perform operation
fnmadd.h f9, f18, f19, f25, rdn # perform operation
fnmadd.h f9, f18, f19, f25, rmm # perform operation
fnmadd.h f9, f18, f19, f25, rne # perform operation
fnmadd.h f9, f18, f19, f25, rtz # perform operation
fnmadd.h f9, f18, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f18, f19, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f19, 0(x2) # load 0x00004000 from memory into f19
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f10, 0(x2) # load 0x00003c00 from memory into f10
la x2, scratch
li x3, 0x9995f359998f981b # load x3 with value 0x9995f359998f981b
sw x3, 0(x2) # store 0x9995f359998f981b in memory
flh f27, 0(x2) # load 0x9995f359998f981b from memory into f27
fnmadd.h f31, f19, f10, f27, dyn # perform operation
fnmadd.h f31, f19, f10, f27, rdn # perform operation
fnmadd.h f31, f19, f10, f27, rmm # perform operation
fnmadd.h f31, f19, f10, f27, rne # perform operation
fnmadd.h f31, f19, f10, f27, rtz # perform operation
fnmadd.h f31, f19, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f19, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f19, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f19, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f19, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f19, f10, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f20, 0(x2) # load 0x00004000 from memory into f20
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f25, 0(x2) # load 0x0000bc00 from memory into f25
la x2, scratch
li x3, 0x3b32300ff4ac6ddc # load x3 with value 0x3b32300ff4ac6ddc
sw x3, 0(x2) # store 0x3b32300ff4ac6ddc in memory
flh f22, 0(x2) # load 0x3b32300ff4ac6ddc from memory into f22
fnmadd.h f27, f20, f25, f22, dyn # perform operation
fnmadd.h f27, f20, f25, f22, rdn # perform operation
fnmadd.h f27, f20, f25, f22, rmm # perform operation
fnmadd.h f27, f20, f25, f22, rne # perform operation
fnmadd.h f27, f20, f25, f22, rtz # perform operation
fnmadd.h f27, f20, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f20, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f20, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f20, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f20, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f20, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f27, 0(x2) # load 0x00004000 from memory into f27
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f22, 0(x2) # load 0x00003e00 from memory into f22
la x2, scratch
li x3, 0x8c3a8dbe23a18b06 # load x3 with value 0x8c3a8dbe23a18b06
sw x3, 0(x2) # store 0x8c3a8dbe23a18b06 in memory
flh f30, 0(x2) # load 0x8c3a8dbe23a18b06 from memory into f30
fnmadd.h f14, f27, f22, f30, dyn # perform operation
fnmadd.h f14, f27, f22, f30, rdn # perform operation
fnmadd.h f14, f27, f22, f30, rmm # perform operation
fnmadd.h f14, f27, f22, f30, rne # perform operation
fnmadd.h f14, f27, f22, f30, rtz # perform operation
fnmadd.h f14, f27, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f27, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f27, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f27, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f27, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f27, f22, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f8, 0(x2) # load 0x00004000 from memory into f8
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
la x2, scratch
li x3, 0x4a6125b37e5e9edc # load x3 with value 0x4a6125b37e5e9edc
sw x3, 0(x2) # store 0x4a6125b37e5e9edc in memory
flh f22, 0(x2) # load 0x4a6125b37e5e9edc from memory into f22
fnmadd.h f26, f8, f1, f22, dyn # perform operation
fnmadd.h f26, f8, f1, f22, rdn # perform operation
fnmadd.h f26, f8, f1, f22, rmm # perform operation
fnmadd.h f26, f8, f1, f22, rne # perform operation
fnmadd.h f26, f8, f1, f22, rtz # perform operation
fnmadd.h f26, f8, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f8, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f8, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f8, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f8, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f8, f1, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f9, 0(x2) # load 0x00004000 from memory into f9
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f22, 0(x2) # load 0x00004000 from memory into f22
la x2, scratch
li x3, 0x615e541bae9ce909 # load x3 with value 0x615e541bae9ce909
sw x3, 0(x2) # store 0x615e541bae9ce909 in memory
flh f16, 0(x2) # load 0x615e541bae9ce909 from memory into f16
fnmadd.h f26, f9, f22, f16, dyn # perform operation
fnmadd.h f26, f9, f22, f16, rdn # perform operation
fnmadd.h f26, f9, f22, f16, rmm # perform operation
fnmadd.h f26, f9, f22, f16, rne # perform operation
fnmadd.h f26, f9, f22, f16, rtz # perform operation
fnmadd.h f26, f9, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f9, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f9, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f9, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f9, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f9, f22, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f31, 0(x2) # load 0x00004000 from memory into f31
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f27, 0(x2) # load 0x0000c000 from memory into f27
la x2, scratch
li x3, 0xa409f1a8879c0dce # load x3 with value 0xa409f1a8879c0dce
sw x3, 0(x2) # store 0xa409f1a8879c0dce in memory
flh f1, 0(x2) # load 0xa409f1a8879c0dce from memory into f1
fnmadd.h f22, f31, f27, f1, dyn # perform operation
fnmadd.h f22, f31, f27, f1, rdn # perform operation
fnmadd.h f22, f31, f27, f1, rmm # perform operation
fnmadd.h f22, f31, f27, f1, rne # perform operation
fnmadd.h f22, f31, f27, f1, rtz # perform operation
fnmadd.h f22, f31, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f31, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f31, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f31, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f31, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f31, f27, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f30, 0(x2) # load 0x00000400 from memory into f30
la x2, scratch
li x3, 0xaca44b2d03fb4037 # load x3 with value 0xaca44b2d03fb4037
sw x3, 0(x2) # store 0xaca44b2d03fb4037 in memory
flh f19, 0(x2) # load 0xaca44b2d03fb4037 from memory into f19
fnmadd.h f28, f23, f30, f19, dyn # perform operation
fnmadd.h f28, f23, f30, f19, rdn # perform operation
fnmadd.h f28, f23, f30, f19, rmm # perform operation
fnmadd.h f28, f23, f30, f19, rne # perform operation
fnmadd.h f28, f23, f30, f19, rtz # perform operation
fnmadd.h f28, f23, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f23, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f23, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f23, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f23, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f23, f30, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f20, 0(x2) # load 0x00008400 from memory into f20
la x2, scratch
li x3, 0x3e9e342a19a5e2b9 # load x3 with value 0x3e9e342a19a5e2b9
sw x3, 0(x2) # store 0x3e9e342a19a5e2b9 in memory
flh f25, 0(x2) # load 0x3e9e342a19a5e2b9 from memory into f25
fnmadd.h f1, f23, f20, f25, dyn # perform operation
fnmadd.h f1, f23, f20, f25, rdn # perform operation
fnmadd.h f1, f23, f20, f25, rmm # perform operation
fnmadd.h f1, f23, f20, f25, rne # perform operation
fnmadd.h f1, f23, f20, f25, rtz # perform operation
fnmadd.h f1, f23, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f23, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f23, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f23, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f23, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f23, f20, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f16, 0(x2) # load 0x00004000 from memory into f16
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f12, 0(x2) # load 0x00007bff from memory into f12
la x2, scratch
li x3, 0xf697581e48d1426b # load x3 with value 0xf697581e48d1426b
sw x3, 0(x2) # store 0xf697581e48d1426b in memory
flh f29, 0(x2) # load 0xf697581e48d1426b from memory into f29
fnmadd.h f3, f16, f12, f29, dyn # perform operation
fnmadd.h f3, f16, f12, f29, rdn # perform operation
fnmadd.h f3, f16, f12, f29, rmm # perform operation
fnmadd.h f3, f16, f12, f29, rne # perform operation
fnmadd.h f3, f16, f12, f29, rtz # perform operation
fnmadd.h f3, f16, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f16, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f16, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f16, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f16, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f16, f12, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f31, 0(x2) # load 0x00004000 from memory into f31
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f26, 0(x2) # load 0x0000fbff from memory into f26
la x2, scratch
li x3, 0x3cf1a9a5cfc1cc99 # load x3 with value 0x3cf1a9a5cfc1cc99
sw x3, 0(x2) # store 0x3cf1a9a5cfc1cc99 in memory
flh f24, 0(x2) # load 0x3cf1a9a5cfc1cc99 from memory into f24
fnmadd.h f29, f31, f26, f24, dyn # perform operation
fnmadd.h f29, f31, f26, f24, rdn # perform operation
fnmadd.h f29, f31, f26, f24, rmm # perform operation
fnmadd.h f29, f31, f26, f24, rne # perform operation
fnmadd.h f29, f31, f26, f24, rtz # perform operation
fnmadd.h f29, f31, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f31, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f31, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f31, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f31, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f31, f26, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f1, 0(x2) # load 0x00004000 from memory into f1
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f3, 0(x2) # load 0x000003ff from memory into f3
la x2, scratch
li x3, 0xda2a1223cd07ca66 # load x3 with value 0xda2a1223cd07ca66
sw x3, 0(x2) # store 0xda2a1223cd07ca66 in memory
flh f9, 0(x2) # load 0xda2a1223cd07ca66 from memory into f9
fnmadd.h f23, f1, f3, f9, dyn # perform operation
fnmadd.h f23, f1, f3, f9, rdn # perform operation
fnmadd.h f23, f1, f3, f9, rmm # perform operation
fnmadd.h f23, f1, f3, f9, rne # perform operation
fnmadd.h f23, f1, f3, f9, rtz # perform operation
fnmadd.h f23, f1, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f1, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f1, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f1, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f1, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f1, f3, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f26, 0(x2) # load 0x00004000 from memory into f26
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f10, 0(x2) # load 0x000083ff from memory into f10
la x2, scratch
li x3, 0x801521897e0d18ba # load x3 with value 0x801521897e0d18ba
sw x3, 0(x2) # store 0x801521897e0d18ba in memory
flh f29, 0(x2) # load 0x801521897e0d18ba from memory into f29
fnmadd.h f25, f26, f10, f29, dyn # perform operation
fnmadd.h f25, f26, f10, f29, rdn # perform operation
fnmadd.h f25, f26, f10, f29, rmm # perform operation
fnmadd.h f25, f26, f10, f29, rne # perform operation
fnmadd.h f25, f26, f10, f29, rtz # perform operation
fnmadd.h f25, f26, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f26, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f26, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f26, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f26, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f26, f10, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f11, 0(x2) # load 0x00004000 from memory into f11
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f17, 0(x2) # load 0x00000200 from memory into f17
la x2, scratch
li x3, 0x3d3beb693a09a476 # load x3 with value 0x3d3beb693a09a476
sw x3, 0(x2) # store 0x3d3beb693a09a476 in memory
flh f7, 0(x2) # load 0x3d3beb693a09a476 from memory into f7
fnmadd.h f14, f11, f17, f7, dyn # perform operation
fnmadd.h f14, f11, f17, f7, rdn # perform operation
fnmadd.h f14, f11, f17, f7, rmm # perform operation
fnmadd.h f14, f11, f17, f7, rne # perform operation
fnmadd.h f14, f11, f17, f7, rtz # perform operation
fnmadd.h f14, f11, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f11, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f11, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f11, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f11, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f11, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f27, 0(x2) # load 0x00004000 from memory into f27
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
la x2, scratch
li x3, 0xb3030bd34ef534e9 # load x3 with value 0xb3030bd34ef534e9
sw x3, 0(x2) # store 0xb3030bd34ef534e9 in memory
flh f18, 0(x2) # load 0xb3030bd34ef534e9 from memory into f18
fnmadd.h f21, f27, f6, f18, dyn # perform operation
fnmadd.h f21, f27, f6, f18, rdn # perform operation
fnmadd.h f21, f27, f6, f18, rmm # perform operation
fnmadd.h f21, f27, f6, f18, rne # perform operation
fnmadd.h f21, f27, f6, f18, rtz # perform operation
fnmadd.h f21, f27, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f27, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f27, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f27, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f27, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f27, f6, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f16, 0(x2) # load 0x00004000 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x11463ef028482a8d # load x3 with value 0x11463ef028482a8d
sw x3, 0(x2) # store 0x11463ef028482a8d in memory
flh f27, 0(x2) # load 0x11463ef028482a8d from memory into f27
fnmadd.h f8, f16, f9, f27, dyn # perform operation
fnmadd.h f8, f16, f9, f27, rdn # perform operation
fnmadd.h f8, f16, f9, f27, rmm # perform operation
fnmadd.h f8, f16, f9, f27, rne # perform operation
fnmadd.h f8, f16, f9, f27, rtz # perform operation
fnmadd.h f8, f16, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f16, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f16, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f16, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f16, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f16, f9, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f17, 0(x2) # load 0x00004000 from memory into f17
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f16, 0(x2) # load 0x00008001 from memory into f16
la x2, scratch
li x3, 0xf5cff578899530b8 # load x3 with value 0xf5cff578899530b8
sw x3, 0(x2) # store 0xf5cff578899530b8 in memory
flh f6, 0(x2) # load 0xf5cff578899530b8 from memory into f6
fnmadd.h f23, f17, f16, f6, dyn # perform operation
fnmadd.h f23, f17, f16, f6, rdn # perform operation
fnmadd.h f23, f17, f16, f6, rmm # perform operation
fnmadd.h f23, f17, f16, f6, rne # perform operation
fnmadd.h f23, f17, f16, f6, rtz # perform operation
fnmadd.h f23, f17, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f17, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f17, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f17, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f17, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f17, f16, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f16, 0(x2) # load 0x00004000 from memory into f16
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f18, 0(x2) # load 0x00007c00 from memory into f18
la x2, scratch
li x3, 0x621dfedcf1391bd2 # load x3 with value 0x621dfedcf1391bd2
sw x3, 0(x2) # store 0x621dfedcf1391bd2 in memory
flh f6, 0(x2) # load 0x621dfedcf1391bd2 from memory into f6
fnmadd.h f19, f16, f18, f6, dyn # perform operation
fnmadd.h f19, f16, f18, f6, rdn # perform operation
fnmadd.h f19, f16, f18, f6, rmm # perform operation
fnmadd.h f19, f16, f18, f6, rne # perform operation
fnmadd.h f19, f16, f18, f6, rtz # perform operation
fnmadd.h f19, f16, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f16, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f16, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f16, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f16, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f16, f18, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f22, 0(x2) # load 0x00004000 from memory into f22
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f17, 0(x2) # load 0x0000fc00 from memory into f17
la x2, scratch
li x3, 0x9679ea702eff78c5 # load x3 with value 0x9679ea702eff78c5
sw x3, 0(x2) # store 0x9679ea702eff78c5 in memory
flh f7, 0(x2) # load 0x9679ea702eff78c5 from memory into f7
fnmadd.h f23, f22, f17, f7, dyn # perform operation
fnmadd.h f23, f22, f17, f7, rdn # perform operation
fnmadd.h f23, f22, f17, f7, rmm # perform operation
fnmadd.h f23, f22, f17, f7, rne # perform operation
fnmadd.h f23, f22, f17, f7, rtz # perform operation
fnmadd.h f23, f22, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f22, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f22, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f22, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f22, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f22, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f15, 0(x2) # load 0x00004000 from memory into f15
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f28, 0(x2) # load 0x00007e00 from memory into f28
la x2, scratch
li x3, 0xd04f0908a3886d55 # load x3 with value 0xd04f0908a3886d55
sw x3, 0(x2) # store 0xd04f0908a3886d55 in memory
flh f31, 0(x2) # load 0xd04f0908a3886d55 from memory into f31
fnmadd.h f24, f15, f28, f31, dyn # perform operation
fnmadd.h f24, f15, f28, f31, rdn # perform operation
fnmadd.h f24, f15, f28, f31, rmm # perform operation
fnmadd.h f24, f15, f28, f31, rne # perform operation
fnmadd.h f24, f15, f28, f31, rtz # perform operation
fnmadd.h f24, f15, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f15, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f15, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f15, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f15, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f15, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f10, 0(x2) # load 0x00004000 from memory into f10
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f21, 0(x2) # load 0x00007fff from memory into f21
la x2, scratch
li x3, 0x8f6537fe4d8ef654 # load x3 with value 0x8f6537fe4d8ef654
sw x3, 0(x2) # store 0x8f6537fe4d8ef654 in memory
flh f27, 0(x2) # load 0x8f6537fe4d8ef654 from memory into f27
fnmadd.h f3, f10, f21, f27, dyn # perform operation
fnmadd.h f3, f10, f21, f27, rdn # perform operation
fnmadd.h f3, f10, f21, f27, rmm # perform operation
fnmadd.h f3, f10, f21, f27, rne # perform operation
fnmadd.h f3, f10, f21, f27, rtz # perform operation
fnmadd.h f3, f10, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f10, f21, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f8, 0(x2) # load 0x00004000 from memory into f8
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f14, 0(x2) # load 0x0000fe00 from memory into f14
la x2, scratch
li x3, 0x5bb1963b579ffe59 # load x3 with value 0x5bb1963b579ffe59
sw x3, 0(x2) # store 0x5bb1963b579ffe59 in memory
flh f26, 0(x2) # load 0x5bb1963b579ffe59 from memory into f26
fnmadd.h f10, f8, f14, f26, dyn # perform operation
fnmadd.h f10, f8, f14, f26, rdn # perform operation
fnmadd.h f10, f8, f14, f26, rmm # perform operation
fnmadd.h f10, f8, f14, f26, rne # perform operation
fnmadd.h f10, f8, f14, f26, rtz # perform operation
fnmadd.h f10, f8, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f8, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f8, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f8, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f8, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f8, f14, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f19, 0(x2) # load 0x00004000 from memory into f19
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f6, 0(x2) # load 0x00007c01 from memory into f6
la x2, scratch
li x3, 0xf8fe1b0b0c5b54a4 # load x3 with value 0xf8fe1b0b0c5b54a4
sw x3, 0(x2) # store 0xf8fe1b0b0c5b54a4 in memory
flh f7, 0(x2) # load 0xf8fe1b0b0c5b54a4 from memory into f7
fnmadd.h f17, f19, f6, f7, dyn # perform operation
fnmadd.h f17, f19, f6, f7, rdn # perform operation
fnmadd.h f17, f19, f6, f7, rmm # perform operation
fnmadd.h f17, f19, f6, f7, rne # perform operation
fnmadd.h f17, f19, f6, f7, rtz # perform operation
fnmadd.h f17, f19, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f19, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f19, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f19, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f19, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f19, f6, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f20, 0(x2) # load 0x00004000 from memory into f20
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f7, 0(x2) # load 0x00007dff from memory into f7
la x2, scratch
li x3, 0x29a1718ec7c6dd39 # load x3 with value 0x29a1718ec7c6dd39
sw x3, 0(x2) # store 0x29a1718ec7c6dd39 in memory
flh f13, 0(x2) # load 0x29a1718ec7c6dd39 from memory into f13
fnmadd.h f5, f20, f7, f13, dyn # perform operation
fnmadd.h f5, f20, f7, f13, rdn # perform operation
fnmadd.h f5, f20, f7, f13, rmm # perform operation
fnmadd.h f5, f20, f7, f13, rne # perform operation
fnmadd.h f5, f20, f7, f13, rtz # perform operation
fnmadd.h f5, f20, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f20, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f20, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f20, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f20, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f20, f7, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f24, 0(x2) # load 0x00004000 from memory into f24
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f9, 0(x2) # load 0x0000fc01 from memory into f9
la x2, scratch
li x3, 0x2345b41fac897ed7 # load x3 with value 0x2345b41fac897ed7
sw x3, 0(x2) # store 0x2345b41fac897ed7 in memory
flh f16, 0(x2) # load 0x2345b41fac897ed7 from memory into f16
fnmadd.h f7, f24, f9, f16, dyn # perform operation
fnmadd.h f7, f24, f9, f16, rdn # perform operation
fnmadd.h f7, f24, f9, f16, rmm # perform operation
fnmadd.h f7, f24, f9, f16, rne # perform operation
fnmadd.h f7, f24, f9, f16, rtz # perform operation
fnmadd.h f7, f24, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f24, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f24, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f24, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f24, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f24, f9, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f22, 0(x2) # load 0x00004000 from memory into f22
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f16, 0(x2) # load 0x000058b4 from memory into f16
la x2, scratch
li x3, 0x31fe8c659d96445a # load x3 with value 0x31fe8c659d96445a
sw x3, 0(x2) # store 0x31fe8c659d96445a in memory
flh f3, 0(x2) # load 0x31fe8c659d96445a from memory into f3
fnmadd.h f27, f22, f16, f3, dyn # perform operation
fnmadd.h f27, f22, f16, f3, rdn # perform operation
fnmadd.h f27, f22, f16, f3, rmm # perform operation
fnmadd.h f27, f22, f16, f3, rne # perform operation
fnmadd.h f27, f22, f16, f3, rtz # perform operation
fnmadd.h f27, f22, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f22, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f22, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f22, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f22, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f22, f16, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f10, 0(x2) # load 0x00004000 from memory into f10
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f25, 0(x2) # load 0x0000c93a from memory into f25
la x2, scratch
li x3, 0xc728e82f85d0f0cf # load x3 with value 0xc728e82f85d0f0cf
sw x3, 0(x2) # store 0xc728e82f85d0f0cf in memory
flh f8, 0(x2) # load 0xc728e82f85d0f0cf from memory into f8
fnmadd.h f27, f10, f25, f8, dyn # perform operation
fnmadd.h f27, f10, f25, f8, rdn # perform operation
fnmadd.h f27, f10, f25, f8, rmm # perform operation
fnmadd.h f27, f10, f25, f8, rne # perform operation
fnmadd.h f27, f10, f25, f8, rtz # perform operation
fnmadd.h f27, f10, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f10, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f10, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f10, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f10, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f10, f25, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f16, 0(x2) # load 0x0000c000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0x827cdcbf703a9d7b # load x3 with value 0x827cdcbf703a9d7b
sw x3, 0(x2) # store 0x827cdcbf703a9d7b in memory
flh f9, 0(x2) # load 0x827cdcbf703a9d7b from memory into f9
fnmadd.h f17, f16, f10, f9, dyn # perform operation
fnmadd.h f17, f16, f10, f9, rdn # perform operation
fnmadd.h f17, f16, f10, f9, rmm # perform operation
fnmadd.h f17, f16, f10, f9, rne # perform operation
fnmadd.h f17, f16, f10, f9, rtz # perform operation
fnmadd.h f17, f16, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f16, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f16, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f16, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f16, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f16, f10, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f28, 0(x2) # load 0x0000c000 from memory into f28
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f13, 0(x2) # load 0x00008000 from memory into f13
la x2, scratch
li x3, 0x3cca33a0479ca877 # load x3 with value 0x3cca33a0479ca877
sw x3, 0(x2) # store 0x3cca33a0479ca877 in memory
flh f6, 0(x2) # load 0x3cca33a0479ca877 from memory into f6
fnmadd.h f3, f28, f13, f6, dyn # perform operation
fnmadd.h f3, f28, f13, f6, rdn # perform operation
fnmadd.h f3, f28, f13, f6, rmm # perform operation
fnmadd.h f3, f28, f13, f6, rne # perform operation
fnmadd.h f3, f28, f13, f6, rtz # perform operation
fnmadd.h f3, f28, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f28, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f28, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f28, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f28, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f28, f13, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f7, 0(x2) # load 0x0000c000 from memory into f7
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f31, 0(x2) # load 0x00003c00 from memory into f31
la x2, scratch
li x3, 0x715e847f58568503 # load x3 with value 0x715e847f58568503
sw x3, 0(x2) # store 0x715e847f58568503 in memory
flh f16, 0(x2) # load 0x715e847f58568503 from memory into f16
fnmadd.h f27, f7, f31, f16, dyn # perform operation
fnmadd.h f27, f7, f31, f16, rdn # perform operation
fnmadd.h f27, f7, f31, f16, rmm # perform operation
fnmadd.h f27, f7, f31, f16, rne # perform operation
fnmadd.h f27, f7, f31, f16, rtz # perform operation
fnmadd.h f27, f7, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f7, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f7, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f7, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f7, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f7, f31, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f27, 0(x2) # load 0x0000c000 from memory into f27
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f19, 0(x2) # load 0x0000bc00 from memory into f19
la x2, scratch
li x3, 0xafd59fb51a52d1ed # load x3 with value 0xafd59fb51a52d1ed
sw x3, 0(x2) # store 0xafd59fb51a52d1ed in memory
flh f26, 0(x2) # load 0xafd59fb51a52d1ed from memory into f26
fnmadd.h f31, f27, f19, f26, dyn # perform operation
fnmadd.h f31, f27, f19, f26, rdn # perform operation
fnmadd.h f31, f27, f19, f26, rmm # perform operation
fnmadd.h f31, f27, f19, f26, rne # perform operation
fnmadd.h f31, f27, f19, f26, rtz # perform operation
fnmadd.h f31, f27, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f27, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f27, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f27, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f27, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f27, f19, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f9, 0(x2) # load 0x0000c000 from memory into f9
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f17, 0(x2) # load 0x00003e00 from memory into f17
la x2, scratch
li x3, 0xe5c80efdfc22b9a2 # load x3 with value 0xe5c80efdfc22b9a2
sw x3, 0(x2) # store 0xe5c80efdfc22b9a2 in memory
flh f26, 0(x2) # load 0xe5c80efdfc22b9a2 from memory into f26
fnmadd.h f21, f9, f17, f26, dyn # perform operation
fnmadd.h f21, f9, f17, f26, rdn # perform operation
fnmadd.h f21, f9, f17, f26, rmm # perform operation
fnmadd.h f21, f9, f17, f26, rne # perform operation
fnmadd.h f21, f9, f17, f26, rtz # perform operation
fnmadd.h f21, f9, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f9, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f9, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f9, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f9, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f9, f17, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f30, 0(x2) # load 0x0000be00 from memory into f30
la x2, scratch
li x3, 0x2b699d842319e3c1 # load x3 with value 0x2b699d842319e3c1
sw x3, 0(x2) # store 0x2b699d842319e3c1 in memory
flh f5, 0(x2) # load 0x2b699d842319e3c1 from memory into f5
fnmadd.h f21, f12, f30, f5, dyn # perform operation
fnmadd.h f21, f12, f30, f5, rdn # perform operation
fnmadd.h f21, f12, f30, f5, rmm # perform operation
fnmadd.h f21, f12, f30, f5, rne # perform operation
fnmadd.h f21, f12, f30, f5, rtz # perform operation
fnmadd.h f21, f12, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f12, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f12, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f12, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f12, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f12, f30, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f25, 0(x2) # load 0x0000c000 from memory into f25
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f11, 0(x2) # load 0x00004000 from memory into f11
la x2, scratch
li x3, 0x4cdc9c78d3ee55b6 # load x3 with value 0x4cdc9c78d3ee55b6
sw x3, 0(x2) # store 0x4cdc9c78d3ee55b6 in memory
flh f6, 0(x2) # load 0x4cdc9c78d3ee55b6 from memory into f6
fnmadd.h f24, f25, f11, f6, dyn # perform operation
fnmadd.h f24, f25, f11, f6, rdn # perform operation
fnmadd.h f24, f25, f11, f6, rmm # perform operation
fnmadd.h f24, f25, f11, f6, rne # perform operation
fnmadd.h f24, f25, f11, f6, rtz # perform operation
fnmadd.h f24, f25, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f25, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f25, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f25, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f25, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f25, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f22, 0(x2) # load 0x0000c000 from memory into f22
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f8, 0(x2) # load 0x0000c000 from memory into f8
la x2, scratch
li x3, 0xa283a686a79f6cb9 # load x3 with value 0xa283a686a79f6cb9
sw x3, 0(x2) # store 0xa283a686a79f6cb9 in memory
flh f1, 0(x2) # load 0xa283a686a79f6cb9 from memory into f1
fnmadd.h f9, f22, f8, f1, dyn # perform operation
fnmadd.h f9, f22, f8, f1, rdn # perform operation
fnmadd.h f9, f22, f8, f1, rmm # perform operation
fnmadd.h f9, f22, f8, f1, rne # perform operation
fnmadd.h f9, f22, f8, f1, rtz # perform operation
fnmadd.h f9, f22, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f22, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f22, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f22, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f22, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f22, f8, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f28, 0(x2) # load 0x0000c000 from memory into f28
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f29, 0(x2) # load 0x00000400 from memory into f29
la x2, scratch
li x3, 0x602be54720870d2b # load x3 with value 0x602be54720870d2b
sw x3, 0(x2) # store 0x602be54720870d2b in memory
flh f1, 0(x2) # load 0x602be54720870d2b from memory into f1
fnmadd.h f26, f28, f29, f1, dyn # perform operation
fnmadd.h f26, f28, f29, f1, rdn # perform operation
fnmadd.h f26, f28, f29, f1, rmm # perform operation
fnmadd.h f26, f28, f29, f1, rne # perform operation
fnmadd.h f26, f28, f29, f1, rtz # perform operation
fnmadd.h f26, f28, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f28, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f28, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f28, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f28, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f28, f29, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f10, 0(x2) # load 0x0000c000 from memory into f10
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f7, 0(x2) # load 0x00008400 from memory into f7
la x2, scratch
li x3, 0x40f60b1c17859ce5 # load x3 with value 0x40f60b1c17859ce5
sw x3, 0(x2) # store 0x40f60b1c17859ce5 in memory
flh f17, 0(x2) # load 0x40f60b1c17859ce5 from memory into f17
fnmadd.h f1, f10, f7, f17, dyn # perform operation
fnmadd.h f1, f10, f7, f17, rdn # perform operation
fnmadd.h f1, f10, f7, f17, rmm # perform operation
fnmadd.h f1, f10, f7, f17, rne # perform operation
fnmadd.h f1, f10, f7, f17, rtz # perform operation
fnmadd.h f1, f10, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f10, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f10, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f10, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f10, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f10, f7, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f1, 0(x2) # load 0x0000c000 from memory into f1
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
la x2, scratch
li x3, 0x647559a408915db9 # load x3 with value 0x647559a408915db9
sw x3, 0(x2) # store 0x647559a408915db9 in memory
flh f16, 0(x2) # load 0x647559a408915db9 from memory into f16
fnmadd.h f2, f1, f24, f16, dyn # perform operation
fnmadd.h f2, f1, f24, f16, rdn # perform operation
fnmadd.h f2, f1, f24, f16, rmm # perform operation
fnmadd.h f2, f1, f24, f16, rne # perform operation
fnmadd.h f2, f1, f24, f16, rtz # perform operation
fnmadd.h f2, f1, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f1, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f1, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f1, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f1, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f1, f24, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f7, 0(x2) # load 0x0000c000 from memory into f7
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f3, 0(x2) # load 0x0000fbff from memory into f3
la x2, scratch
li x3, 0xfcbcea8d7933bc08 # load x3 with value 0xfcbcea8d7933bc08
sw x3, 0(x2) # store 0xfcbcea8d7933bc08 in memory
flh f28, 0(x2) # load 0xfcbcea8d7933bc08 from memory into f28
fnmadd.h f15, f7, f3, f28, dyn # perform operation
fnmadd.h f15, f7, f3, f28, rdn # perform operation
fnmadd.h f15, f7, f3, f28, rmm # perform operation
fnmadd.h f15, f7, f3, f28, rne # perform operation
fnmadd.h f15, f7, f3, f28, rtz # perform operation
fnmadd.h f15, f7, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f7, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f7, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f7, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f7, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f7, f3, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f1, 0(x2) # load 0x0000c000 from memory into f1
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f21, 0(x2) # load 0x000003ff from memory into f21
la x2, scratch
li x3, 0xd7791e0511cb50f8 # load x3 with value 0xd7791e0511cb50f8
sw x3, 0(x2) # store 0xd7791e0511cb50f8 in memory
flh f18, 0(x2) # load 0xd7791e0511cb50f8 from memory into f18
fnmadd.h f14, f1, f21, f18, dyn # perform operation
fnmadd.h f14, f1, f21, f18, rdn # perform operation
fnmadd.h f14, f1, f21, f18, rmm # perform operation
fnmadd.h f14, f1, f21, f18, rne # perform operation
fnmadd.h f14, f1, f21, f18, rtz # perform operation
fnmadd.h f14, f1, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f1, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f1, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f1, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f1, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f1, f21, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f22, 0(x2) # load 0x0000c000 from memory into f22
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
la x2, scratch
li x3, 0xb663e2df440765ed # load x3 with value 0xb663e2df440765ed
sw x3, 0(x2) # store 0xb663e2df440765ed in memory
flh f3, 0(x2) # load 0xb663e2df440765ed from memory into f3
fnmadd.h f14, f22, f17, f3, dyn # perform operation
fnmadd.h f14, f22, f17, f3, rdn # perform operation
fnmadd.h f14, f22, f17, f3, rmm # perform operation
fnmadd.h f14, f22, f17, f3, rne # perform operation
fnmadd.h f14, f22, f17, f3, rtz # perform operation
fnmadd.h f14, f22, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f22, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f22, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f22, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f22, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f22, f17, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f31, 0(x2) # load 0x0000c000 from memory into f31
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f27, 0(x2) # load 0x00000200 from memory into f27
la x2, scratch
li x3, 0xe9abb9461d39cf61 # load x3 with value 0xe9abb9461d39cf61
sw x3, 0(x2) # store 0xe9abb9461d39cf61 in memory
flh f29, 0(x2) # load 0xe9abb9461d39cf61 from memory into f29
fnmadd.h f17, f31, f27, f29, dyn # perform operation
fnmadd.h f17, f31, f27, f29, rdn # perform operation
fnmadd.h f17, f31, f27, f29, rmm # perform operation
fnmadd.h f17, f31, f27, f29, rne # perform operation
fnmadd.h f17, f31, f27, f29, rtz # perform operation
fnmadd.h f17, f31, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f31, f27, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f18, 0(x2) # load 0x00008200 from memory into f18
la x2, scratch
li x3, 0xf900d53e5564c98d # load x3 with value 0xf900d53e5564c98d
sw x3, 0(x2) # store 0xf900d53e5564c98d in memory
flh f9, 0(x2) # load 0xf900d53e5564c98d from memory into f9
fnmadd.h f15, f20, f18, f9, dyn # perform operation
fnmadd.h f15, f20, f18, f9, rdn # perform operation
fnmadd.h f15, f20, f18, f9, rmm # perform operation
fnmadd.h f15, f20, f18, f9, rne # perform operation
fnmadd.h f15, f20, f18, f9, rtz # perform operation
fnmadd.h f15, f20, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f20, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f20, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f20, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f20, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f20, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x6ae58a2b8f0dfe0a # load x3 with value 0x6ae58a2b8f0dfe0a
sw x3, 0(x2) # store 0x6ae58a2b8f0dfe0a in memory
flh f6, 0(x2) # load 0x6ae58a2b8f0dfe0a from memory into f6
fnmadd.h f19, f30, f10, f6, dyn # perform operation
fnmadd.h f19, f30, f10, f6, rdn # perform operation
fnmadd.h f19, f30, f10, f6, rmm # perform operation
fnmadd.h f19, f30, f10, f6, rne # perform operation
fnmadd.h f19, f30, f10, f6, rtz # perform operation
fnmadd.h f19, f30, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f30, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f30, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f30, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f30, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f30, f10, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f29, 0(x2) # load 0x0000c000 from memory into f29
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f11, 0(x2) # load 0x00008001 from memory into f11
la x2, scratch
li x3, 0xe67d59dee8bccc94 # load x3 with value 0xe67d59dee8bccc94
sw x3, 0(x2) # store 0xe67d59dee8bccc94 in memory
flh f23, 0(x2) # load 0xe67d59dee8bccc94 from memory into f23
fnmadd.h f1, f29, f11, f23, dyn # perform operation
fnmadd.h f1, f29, f11, f23, rdn # perform operation
fnmadd.h f1, f29, f11, f23, rmm # perform operation
fnmadd.h f1, f29, f11, f23, rne # perform operation
fnmadd.h f1, f29, f11, f23, rtz # perform operation
fnmadd.h f1, f29, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f29, f11, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f31, 0(x2) # load 0x0000c000 from memory into f31
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f5, 0(x2) # load 0x00007c00 from memory into f5
la x2, scratch
li x3, 0xdb53df835e054bc5 # load x3 with value 0xdb53df835e054bc5
sw x3, 0(x2) # store 0xdb53df835e054bc5 in memory
flh f17, 0(x2) # load 0xdb53df835e054bc5 from memory into f17
fnmadd.h f14, f31, f5, f17, dyn # perform operation
fnmadd.h f14, f31, f5, f17, rdn # perform operation
fnmadd.h f14, f31, f5, f17, rmm # perform operation
fnmadd.h f14, f31, f5, f17, rne # perform operation
fnmadd.h f14, f31, f5, f17, rtz # perform operation
fnmadd.h f14, f31, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f31, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f31, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f31, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f31, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f31, f5, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f21, 0(x2) # load 0x0000c000 from memory into f21
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f6, 0(x2) # load 0x0000fc00 from memory into f6
la x2, scratch
li x3, 0xf910ee7ba7987321 # load x3 with value 0xf910ee7ba7987321
sw x3, 0(x2) # store 0xf910ee7ba7987321 in memory
flh f15, 0(x2) # load 0xf910ee7ba7987321 from memory into f15
fnmadd.h f9, f21, f6, f15, dyn # perform operation
fnmadd.h f9, f21, f6, f15, rdn # perform operation
fnmadd.h f9, f21, f6, f15, rmm # perform operation
fnmadd.h f9, f21, f6, f15, rne # perform operation
fnmadd.h f9, f21, f6, f15, rtz # perform operation
fnmadd.h f9, f21, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f21, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f21, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f21, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f21, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f21, f6, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f1, 0(x2) # load 0x0000c000 from memory into f1
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f15, 0(x2) # load 0x00007e00 from memory into f15
la x2, scratch
li x3, 0xee54b1bedc2cda2c # load x3 with value 0xee54b1bedc2cda2c
sw x3, 0(x2) # store 0xee54b1bedc2cda2c in memory
flh f16, 0(x2) # load 0xee54b1bedc2cda2c from memory into f16
fnmadd.h f26, f1, f15, f16, dyn # perform operation
fnmadd.h f26, f1, f15, f16, rdn # perform operation
fnmadd.h f26, f1, f15, f16, rmm # perform operation
fnmadd.h f26, f1, f15, f16, rne # perform operation
fnmadd.h f26, f1, f15, f16, rtz # perform operation
fnmadd.h f26, f1, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f1, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f1, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f1, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f1, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f1, f15, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f7, 0(x2) # load 0x0000c000 from memory into f7
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f24, 0(x2) # load 0x00007fff from memory into f24
la x2, scratch
li x3, 0x6915d7bef639c8a8 # load x3 with value 0x6915d7bef639c8a8
sw x3, 0(x2) # store 0x6915d7bef639c8a8 in memory
flh f16, 0(x2) # load 0x6915d7bef639c8a8 from memory into f16
fnmadd.h f12, f7, f24, f16, dyn # perform operation
fnmadd.h f12, f7, f24, f16, rdn # perform operation
fnmadd.h f12, f7, f24, f16, rmm # perform operation
fnmadd.h f12, f7, f24, f16, rne # perform operation
fnmadd.h f12, f7, f24, f16, rtz # perform operation
fnmadd.h f12, f7, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f7, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f7, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f7, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f7, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f7, f24, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f11, 0(x2) # load 0x0000c000 from memory into f11
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f14, 0(x2) # load 0x0000fe00 from memory into f14
la x2, scratch
li x3, 0x80bf1fcb3dfeb9e4 # load x3 with value 0x80bf1fcb3dfeb9e4
sw x3, 0(x2) # store 0x80bf1fcb3dfeb9e4 in memory
flh f6, 0(x2) # load 0x80bf1fcb3dfeb9e4 from memory into f6
fnmadd.h f12, f11, f14, f6, dyn # perform operation
fnmadd.h f12, f11, f14, f6, rdn # perform operation
fnmadd.h f12, f11, f14, f6, rmm # perform operation
fnmadd.h f12, f11, f14, f6, rne # perform operation
fnmadd.h f12, f11, f14, f6, rtz # perform operation
fnmadd.h f12, f11, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f11, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f11, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f11, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f11, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f11, f14, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f21, 0(x2) # load 0x0000c000 from memory into f21
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f29, 0(x2) # load 0x00007c01 from memory into f29
la x2, scratch
li x3, 0x871f29288b684876 # load x3 with value 0x871f29288b684876
sw x3, 0(x2) # store 0x871f29288b684876 in memory
flh f12, 0(x2) # load 0x871f29288b684876 from memory into f12
fnmadd.h f23, f21, f29, f12, dyn # perform operation
fnmadd.h f23, f21, f29, f12, rdn # perform operation
fnmadd.h f23, f21, f29, f12, rmm # perform operation
fnmadd.h f23, f21, f29, f12, rne # perform operation
fnmadd.h f23, f21, f29, f12, rtz # perform operation
fnmadd.h f23, f21, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f21, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f21, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f21, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f21, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f21, f29, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f5, 0(x2) # load 0x0000c000 from memory into f5
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
la x2, scratch
li x3, 0xfa953b757bdde8c1 # load x3 with value 0xfa953b757bdde8c1
sw x3, 0(x2) # store 0xfa953b757bdde8c1 in memory
flh f14, 0(x2) # load 0xfa953b757bdde8c1 from memory into f14
fnmadd.h f18, f5, f26, f14, dyn # perform operation
fnmadd.h f18, f5, f26, f14, rdn # perform operation
fnmadd.h f18, f5, f26, f14, rmm # perform operation
fnmadd.h f18, f5, f26, f14, rne # perform operation
fnmadd.h f18, f5, f26, f14, rtz # perform operation
fnmadd.h f18, f5, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f5, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f5, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f5, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f5, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f5, f26, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f13, 0(x2) # load 0x0000c000 from memory into f13
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f20, 0(x2) # load 0x0000fc01 from memory into f20
la x2, scratch
li x3, 0x56212b5aed767c # load x3 with value 0x56212b5aed767c
sw x3, 0(x2) # store 0x56212b5aed767c in memory
flh f2, 0(x2) # load 0x56212b5aed767c from memory into f2
fnmadd.h f25, f13, f20, f2, dyn # perform operation
fnmadd.h f25, f13, f20, f2, rdn # perform operation
fnmadd.h f25, f13, f20, f2, rmm # perform operation
fnmadd.h f25, f13, f20, f2, rne # perform operation
fnmadd.h f25, f13, f20, f2, rtz # perform operation
fnmadd.h f25, f13, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f13, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f13, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f13, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f13, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f13, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f27, 0(x2) # load 0x000058b4 from memory into f27
la x2, scratch
li x3, 0xd71bad0495dd6549 # load x3 with value 0xd71bad0495dd6549
sw x3, 0(x2) # store 0xd71bad0495dd6549 in memory
flh f8, 0(x2) # load 0xd71bad0495dd6549 from memory into f8
fnmadd.h f30, f12, f27, f8, dyn # perform operation
fnmadd.h f30, f12, f27, f8, rdn # perform operation
fnmadd.h f30, f12, f27, f8, rmm # perform operation
fnmadd.h f30, f12, f27, f8, rne # perform operation
fnmadd.h f30, f12, f27, f8, rtz # perform operation
fnmadd.h f30, f12, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f12, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f12, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f12, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f12, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f12, f27, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f27, 0(x2) # load 0x0000c000 from memory into f27
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
la x2, scratch
li x3, 0x2a8922a11ca82407 # load x3 with value 0x2a8922a11ca82407
sw x3, 0(x2) # store 0x2a8922a11ca82407 in memory
flh f22, 0(x2) # load 0x2a8922a11ca82407 from memory into f22
fnmadd.h f2, f27, f16, f22, dyn # perform operation
fnmadd.h f2, f27, f16, f22, rdn # perform operation
fnmadd.h f2, f27, f16, f22, rmm # perform operation
fnmadd.h f2, f27, f16, f22, rne # perform operation
fnmadd.h f2, f27, f16, f22, rtz # perform operation
fnmadd.h f2, f27, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f27, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f24, 0(x2) # load 0x00000400 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x38638abf8676b3ad # load x3 with value 0x38638abf8676b3ad
sw x3, 0(x2) # store 0x38638abf8676b3ad in memory
flh f30, 0(x2) # load 0x38638abf8676b3ad from memory into f30
fnmadd.h f28, f24, f1, f30, dyn # perform operation
fnmadd.h f28, f24, f1, f30, rdn # perform operation
fnmadd.h f28, f24, f1, f30, rmm # perform operation
fnmadd.h f28, f24, f1, f30, rne # perform operation
fnmadd.h f28, f24, f1, f30, rtz # perform operation
fnmadd.h f28, f24, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f24, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f24, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f24, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f24, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f24, f1, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f29, 0(x2) # load 0x00000400 from memory into f29
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f19, 0(x2) # load 0x00008000 from memory into f19
la x2, scratch
li x3, 0x396613ceb318df65 # load x3 with value 0x396613ceb318df65
sw x3, 0(x2) # store 0x396613ceb318df65 in memory
flh f14, 0(x2) # load 0x396613ceb318df65 from memory into f14
fnmadd.h f28, f29, f19, f14, dyn # perform operation
fnmadd.h f28, f29, f19, f14, rdn # perform operation
fnmadd.h f28, f29, f19, f14, rmm # perform operation
fnmadd.h f28, f29, f19, f14, rne # perform operation
fnmadd.h f28, f29, f19, f14, rtz # perform operation
fnmadd.h f28, f29, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f29, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f29, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f29, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f29, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f29, f19, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f28, 0(x2) # load 0x00000400 from memory into f28
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f20, 0(x2) # load 0x00003c00 from memory into f20
la x2, scratch
li x3, 0x4f95391174d6e91d # load x3 with value 0x4f95391174d6e91d
sw x3, 0(x2) # store 0x4f95391174d6e91d in memory
flh f17, 0(x2) # load 0x4f95391174d6e91d from memory into f17
fnmadd.h f15, f28, f20, f17, dyn # perform operation
fnmadd.h f15, f28, f20, f17, rdn # perform operation
fnmadd.h f15, f28, f20, f17, rmm # perform operation
fnmadd.h f15, f28, f20, f17, rne # perform operation
fnmadd.h f15, f28, f20, f17, rtz # perform operation
fnmadd.h f15, f28, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f28, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f28, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f28, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f28, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f28, f20, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f31, 0(x2) # load 0x00000400 from memory into f31
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f17, 0(x2) # load 0x0000bc00 from memory into f17
la x2, scratch
li x3, 0x78598282effe1656 # load x3 with value 0x78598282effe1656
sw x3, 0(x2) # store 0x78598282effe1656 in memory
flh f19, 0(x2) # load 0x78598282effe1656 from memory into f19
fnmadd.h f2, f31, f17, f19, dyn # perform operation
fnmadd.h f2, f31, f17, f19, rdn # perform operation
fnmadd.h f2, f31, f17, f19, rmm # perform operation
fnmadd.h f2, f31, f17, f19, rne # perform operation
fnmadd.h f2, f31, f17, f19, rtz # perform operation
fnmadd.h f2, f31, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f31, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f31, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f31, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f31, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f31, f17, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f8, 0(x2) # load 0x00000400 from memory into f8
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f28, 0(x2) # load 0x00003e00 from memory into f28
la x2, scratch
li x3, 0x8d78678578384b30 # load x3 with value 0x8d78678578384b30
sw x3, 0(x2) # store 0x8d78678578384b30 in memory
flh f17, 0(x2) # load 0x8d78678578384b30 from memory into f17
fnmadd.h f14, f8, f28, f17, dyn # perform operation
fnmadd.h f14, f8, f28, f17, rdn # perform operation
fnmadd.h f14, f8, f28, f17, rmm # perform operation
fnmadd.h f14, f8, f28, f17, rne # perform operation
fnmadd.h f14, f8, f28, f17, rtz # perform operation
fnmadd.h f14, f8, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f8, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f8, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f8, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f8, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f8, f28, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f26, 0(x2) # load 0x00000400 from memory into f26
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f21, 0(x2) # load 0x0000be00 from memory into f21
la x2, scratch
li x3, 0x1af8057c151f6e20 # load x3 with value 0x1af8057c151f6e20
sw x3, 0(x2) # store 0x1af8057c151f6e20 in memory
flh f12, 0(x2) # load 0x1af8057c151f6e20 from memory into f12
fnmadd.h f25, f26, f21, f12, dyn # perform operation
fnmadd.h f25, f26, f21, f12, rdn # perform operation
fnmadd.h f25, f26, f21, f12, rmm # perform operation
fnmadd.h f25, f26, f21, f12, rne # perform operation
fnmadd.h f25, f26, f21, f12, rtz # perform operation
fnmadd.h f25, f26, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f26, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f26, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f26, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f26, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f26, f21, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f3, 0(x2) # load 0x00000400 from memory into f3
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f8, 0(x2) # load 0x00004000 from memory into f8
la x2, scratch
li x3, 0xc34c8d14f14559bb # load x3 with value 0xc34c8d14f14559bb
sw x3, 0(x2) # store 0xc34c8d14f14559bb in memory
flh f23, 0(x2) # load 0xc34c8d14f14559bb from memory into f23
fnmadd.h f14, f3, f8, f23, dyn # perform operation
fnmadd.h f14, f3, f8, f23, rdn # perform operation
fnmadd.h f14, f3, f8, f23, rmm # perform operation
fnmadd.h f14, f3, f8, f23, rne # perform operation
fnmadd.h f14, f3, f8, f23, rtz # perform operation
fnmadd.h f14, f3, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f3, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f3, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f3, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f3, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f3, f8, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f11, 0(x2) # load 0x00000400 from memory into f11
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f18, 0(x2) # load 0x0000c000 from memory into f18
la x2, scratch
li x3, 0xc79f9a8ce37b3936 # load x3 with value 0xc79f9a8ce37b3936
sw x3, 0(x2) # store 0xc79f9a8ce37b3936 in memory
flh f3, 0(x2) # load 0xc79f9a8ce37b3936 from memory into f3
fnmadd.h f31, f11, f18, f3, dyn # perform operation
fnmadd.h f31, f11, f18, f3, rdn # perform operation
fnmadd.h f31, f11, f18, f3, rmm # perform operation
fnmadd.h f31, f11, f18, f3, rne # perform operation
fnmadd.h f31, f11, f18, f3, rtz # perform operation
fnmadd.h f31, f11, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f11, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f11, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f11, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f11, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f11, f18, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f15, 0(x2) # load 0x00000400 from memory into f15
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f7, 0(x2) # load 0x00000400 from memory into f7
la x2, scratch
li x3, 0x37e97d19da93d1eb # load x3 with value 0x37e97d19da93d1eb
sw x3, 0(x2) # store 0x37e97d19da93d1eb in memory
flh f18, 0(x2) # load 0x37e97d19da93d1eb from memory into f18
fnmadd.h f2, f15, f7, f18, dyn # perform operation
fnmadd.h f2, f15, f7, f18, rdn # perform operation
fnmadd.h f2, f15, f7, f18, rmm # perform operation
fnmadd.h f2, f15, f7, f18, rne # perform operation
fnmadd.h f2, f15, f7, f18, rtz # perform operation
fnmadd.h f2, f15, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f15, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f15, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f15, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f15, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f15, f7, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f22, 0(x2) # load 0x00008400 from memory into f22
la x2, scratch
li x3, 0x3d68aa7e3d175ff # load x3 with value 0x3d68aa7e3d175ff
sw x3, 0(x2) # store 0x3d68aa7e3d175ff in memory
flh f3, 0(x2) # load 0x3d68aa7e3d175ff from memory into f3
fnmadd.h f16, f1, f22, f3, dyn # perform operation
fnmadd.h f16, f1, f22, f3, rdn # perform operation
fnmadd.h f16, f1, f22, f3, rmm # perform operation
fnmadd.h f16, f1, f22, f3, rne # perform operation
fnmadd.h f16, f1, f22, f3, rtz # perform operation
fnmadd.h f16, f1, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f1, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f1, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f1, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f1, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f1, f22, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f31, 0(x2) # load 0x00000400 from memory into f31
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f3, 0(x2) # load 0x00007bff from memory into f3
la x2, scratch
li x3, 0xc4b338894c552670 # load x3 with value 0xc4b338894c552670
sw x3, 0(x2) # store 0xc4b338894c552670 in memory
flh f23, 0(x2) # load 0xc4b338894c552670 from memory into f23
fnmadd.h f28, f31, f3, f23, dyn # perform operation
fnmadd.h f28, f31, f3, f23, rdn # perform operation
fnmadd.h f28, f31, f3, f23, rmm # perform operation
fnmadd.h f28, f31, f3, f23, rne # perform operation
fnmadd.h f28, f31, f3, f23, rtz # perform operation
fnmadd.h f28, f31, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f31, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f31, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f31, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f31, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f31, f3, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f13, 0(x2) # load 0x00000400 from memory into f13
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f5, 0(x2) # load 0x0000fbff from memory into f5
la x2, scratch
li x3, 0x6f3f7b081d38889a # load x3 with value 0x6f3f7b081d38889a
sw x3, 0(x2) # store 0x6f3f7b081d38889a in memory
flh f3, 0(x2) # load 0x6f3f7b081d38889a from memory into f3
fnmadd.h f14, f13, f5, f3, dyn # perform operation
fnmadd.h f14, f13, f5, f3, rdn # perform operation
fnmadd.h f14, f13, f5, f3, rmm # perform operation
fnmadd.h f14, f13, f5, f3, rne # perform operation
fnmadd.h f14, f13, f5, f3, rtz # perform operation
fnmadd.h f14, f13, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f13, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f13, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f13, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f13, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f13, f5, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f29, 0(x2) # load 0x00000400 from memory into f29
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
la x2, scratch
li x3, 0x113e4c0dac12b7ec # load x3 with value 0x113e4c0dac12b7ec
sw x3, 0(x2) # store 0x113e4c0dac12b7ec in memory
flh f7, 0(x2) # load 0x113e4c0dac12b7ec from memory into f7
fnmadd.h f27, f29, f20, f7, dyn # perform operation
fnmadd.h f27, f29, f20, f7, rdn # perform operation
fnmadd.h f27, f29, f20, f7, rmm # perform operation
fnmadd.h f27, f29, f20, f7, rne # perform operation
fnmadd.h f27, f29, f20, f7, rtz # perform operation
fnmadd.h f27, f29, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f29, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f29, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f29, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f29, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f29, f20, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f3, 0(x2) # load 0x00000400 from memory into f3
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f21, 0(x2) # load 0x000083ff from memory into f21
la x2, scratch
li x3, 0xaa76cb79e40cb7d2 # load x3 with value 0xaa76cb79e40cb7d2
sw x3, 0(x2) # store 0xaa76cb79e40cb7d2 in memory
flh f22, 0(x2) # load 0xaa76cb79e40cb7d2 from memory into f22
fnmadd.h f19, f3, f21, f22, dyn # perform operation
fnmadd.h f19, f3, f21, f22, rdn # perform operation
fnmadd.h f19, f3, f21, f22, rmm # perform operation
fnmadd.h f19, f3, f21, f22, rne # perform operation
fnmadd.h f19, f3, f21, f22, rtz # perform operation
fnmadd.h f19, f3, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f3, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f3, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f3, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f3, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f3, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f14, 0(x2) # load 0x00000400 from memory into f14
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f27, 0(x2) # load 0x00000200 from memory into f27
la x2, scratch
li x3, 0x496eb5dee5e0c74e # load x3 with value 0x496eb5dee5e0c74e
sw x3, 0(x2) # store 0x496eb5dee5e0c74e in memory
flh f29, 0(x2) # load 0x496eb5dee5e0c74e from memory into f29
fnmadd.h f20, f14, f27, f29, dyn # perform operation
fnmadd.h f20, f14, f27, f29, rdn # perform operation
fnmadd.h f20, f14, f27, f29, rmm # perform operation
fnmadd.h f20, f14, f27, f29, rne # perform operation
fnmadd.h f20, f14, f27, f29, rtz # perform operation
fnmadd.h f20, f14, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f14, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f14, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f14, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f14, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f14, f27, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f3, 0(x2) # load 0x00000400 from memory into f3
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f25, 0(x2) # load 0x00008200 from memory into f25
la x2, scratch
li x3, 0x47c7c338bef3c4e4 # load x3 with value 0x47c7c338bef3c4e4
sw x3, 0(x2) # store 0x47c7c338bef3c4e4 in memory
flh f31, 0(x2) # load 0x47c7c338bef3c4e4 from memory into f31
fnmadd.h f5, f3, f25, f31, dyn # perform operation
fnmadd.h f5, f3, f25, f31, rdn # perform operation
fnmadd.h f5, f3, f25, f31, rmm # perform operation
fnmadd.h f5, f3, f25, f31, rne # perform operation
fnmadd.h f5, f3, f25, f31, rtz # perform operation
fnmadd.h f5, f3, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f3, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f3, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f3, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f3, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f3, f25, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f22, 0(x2) # load 0x00000400 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0xe205150ad7d84090 # load x3 with value 0xe205150ad7d84090
sw x3, 0(x2) # store 0xe205150ad7d84090 in memory
flh f8, 0(x2) # load 0xe205150ad7d84090 from memory into f8
fnmadd.h f17, f22, f12, f8, dyn # perform operation
fnmadd.h f17, f22, f12, f8, rdn # perform operation
fnmadd.h f17, f22, f12, f8, rmm # perform operation
fnmadd.h f17, f22, f12, f8, rne # perform operation
fnmadd.h f17, f22, f12, f8, rtz # perform operation
fnmadd.h f17, f22, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f22, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f22, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f22, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f22, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f22, f12, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f22, 0(x2) # load 0x00000400 from memory into f22
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f1, 0(x2) # load 0x00008001 from memory into f1
la x2, scratch
li x3, 0x8b3cb90a5148ddf8 # load x3 with value 0x8b3cb90a5148ddf8
sw x3, 0(x2) # store 0x8b3cb90a5148ddf8 in memory
flh f16, 0(x2) # load 0x8b3cb90a5148ddf8 from memory into f16
fnmadd.h f25, f22, f1, f16, dyn # perform operation
fnmadd.h f25, f22, f1, f16, rdn # perform operation
fnmadd.h f25, f22, f1, f16, rmm # perform operation
fnmadd.h f25, f22, f1, f16, rne # perform operation
fnmadd.h f25, f22, f1, f16, rtz # perform operation
fnmadd.h f25, f22, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f22, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f22, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f22, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f22, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f22, f1, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f26, 0(x2) # load 0x00000400 from memory into f26
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f30, 0(x2) # load 0x00007c00 from memory into f30
la x2, scratch
li x3, 0xad695681c2c7af9a # load x3 with value 0xad695681c2c7af9a
sw x3, 0(x2) # store 0xad695681c2c7af9a in memory
flh f23, 0(x2) # load 0xad695681c2c7af9a from memory into f23
fnmadd.h f3, f26, f30, f23, dyn # perform operation
fnmadd.h f3, f26, f30, f23, rdn # perform operation
fnmadd.h f3, f26, f30, f23, rmm # perform operation
fnmadd.h f3, f26, f30, f23, rne # perform operation
fnmadd.h f3, f26, f30, f23, rtz # perform operation
fnmadd.h f3, f26, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f26, f30, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f10, 0(x2) # load 0x00000400 from memory into f10
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f26, 0(x2) # load 0x0000fc00 from memory into f26
la x2, scratch
li x3, 0xeebab78e89a0d773 # load x3 with value 0xeebab78e89a0d773
sw x3, 0(x2) # store 0xeebab78e89a0d773 in memory
flh f24, 0(x2) # load 0xeebab78e89a0d773 from memory into f24
fnmadd.h f2, f10, f26, f24, dyn # perform operation
fnmadd.h f2, f10, f26, f24, rdn # perform operation
fnmadd.h f2, f10, f26, f24, rmm # perform operation
fnmadd.h f2, f10, f26, f24, rne # perform operation
fnmadd.h f2, f10, f26, f24, rtz # perform operation
fnmadd.h f2, f10, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f10, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f10, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f10, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f10, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f10, f26, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f8, 0(x2) # load 0x00000400 from memory into f8
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
la x2, scratch
li x3, 0xeb302d4f0af13391 # load x3 with value 0xeb302d4f0af13391
sw x3, 0(x2) # store 0xeb302d4f0af13391 in memory
flh f2, 0(x2) # load 0xeb302d4f0af13391 from memory into f2
fnmadd.h f30, f8, f18, f2, dyn # perform operation
fnmadd.h f30, f8, f18, f2, rdn # perform operation
fnmadd.h f30, f8, f18, f2, rmm # perform operation
fnmadd.h f30, f8, f18, f2, rne # perform operation
fnmadd.h f30, f8, f18, f2, rtz # perform operation
fnmadd.h f30, f8, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f8, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f8, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f8, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f8, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f8, f18, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f12, 0(x2) # load 0x00000400 from memory into f12
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f19, 0(x2) # load 0x00007fff from memory into f19
la x2, scratch
li x3, 0x3f97b9f7927bf3f3 # load x3 with value 0x3f97b9f7927bf3f3
sw x3, 0(x2) # store 0x3f97b9f7927bf3f3 in memory
flh f27, 0(x2) # load 0x3f97b9f7927bf3f3 from memory into f27
fnmadd.h f22, f12, f19, f27, dyn # perform operation
fnmadd.h f22, f12, f19, f27, rdn # perform operation
fnmadd.h f22, f12, f19, f27, rmm # perform operation
fnmadd.h f22, f12, f19, f27, rne # perform operation
fnmadd.h f22, f12, f19, f27, rtz # perform operation
fnmadd.h f22, f12, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f12, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f12, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f12, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f12, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f12, f19, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f15, 0(x2) # load 0x00000400 from memory into f15
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f26, 0(x2) # load 0x0000fe00 from memory into f26
la x2, scratch
li x3, 0x6370acb93f4bf6ef # load x3 with value 0x6370acb93f4bf6ef
sw x3, 0(x2) # store 0x6370acb93f4bf6ef in memory
flh f18, 0(x2) # load 0x6370acb93f4bf6ef from memory into f18
fnmadd.h f7, f15, f26, f18, dyn # perform operation
fnmadd.h f7, f15, f26, f18, rdn # perform operation
fnmadd.h f7, f15, f26, f18, rmm # perform operation
fnmadd.h f7, f15, f26, f18, rne # perform operation
fnmadd.h f7, f15, f26, f18, rtz # perform operation
fnmadd.h f7, f15, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f15, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f15, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f15, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f15, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f15, f26, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f16, 0(x2) # load 0x00000400 from memory into f16
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f31, 0(x2) # load 0x00007c01 from memory into f31
la x2, scratch
li x3, 0x419f30d9cbc409a6 # load x3 with value 0x419f30d9cbc409a6
sw x3, 0(x2) # store 0x419f30d9cbc409a6 in memory
flh f1, 0(x2) # load 0x419f30d9cbc409a6 from memory into f1
fnmadd.h f9, f16, f31, f1, dyn # perform operation
fnmadd.h f9, f16, f31, f1, rdn # perform operation
fnmadd.h f9, f16, f31, f1, rmm # perform operation
fnmadd.h f9, f16, f31, f1, rne # perform operation
fnmadd.h f9, f16, f31, f1, rtz # perform operation
fnmadd.h f9, f16, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f16, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f16, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f16, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f16, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f16, f31, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f23, 0(x2) # load 0x00000400 from memory into f23
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f5, 0(x2) # load 0x00007dff from memory into f5
la x2, scratch
li x3, 0xc0a80c0a96dacabf # load x3 with value 0xc0a80c0a96dacabf
sw x3, 0(x2) # store 0xc0a80c0a96dacabf in memory
flh f24, 0(x2) # load 0xc0a80c0a96dacabf from memory into f24
fnmadd.h f6, f23, f5, f24, dyn # perform operation
fnmadd.h f6, f23, f5, f24, rdn # perform operation
fnmadd.h f6, f23, f5, f24, rmm # perform operation
fnmadd.h f6, f23, f5, f24, rne # perform operation
fnmadd.h f6, f23, f5, f24, rtz # perform operation
fnmadd.h f6, f23, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f23, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f23, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f23, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f23, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f23, f5, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f6, 0(x2) # load 0x00000400 from memory into f6
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f3, 0(x2) # load 0x0000fc01 from memory into f3
la x2, scratch
li x3, 0xc31ffe2fec7e064b # load x3 with value 0xc31ffe2fec7e064b
sw x3, 0(x2) # store 0xc31ffe2fec7e064b in memory
flh f1, 0(x2) # load 0xc31ffe2fec7e064b from memory into f1
fnmadd.h f10, f6, f3, f1, dyn # perform operation
fnmadd.h f10, f6, f3, f1, rdn # perform operation
fnmadd.h f10, f6, f3, f1, rmm # perform operation
fnmadd.h f10, f6, f3, f1, rne # perform operation
fnmadd.h f10, f6, f3, f1, rtz # perform operation
fnmadd.h f10, f6, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f6, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f6, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f6, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f6, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f6, f3, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f22, 0(x2) # load 0x00000400 from memory into f22
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f31, 0(x2) # load 0x000058b4 from memory into f31
la x2, scratch
li x3, 0xafc24f318b6c5982 # load x3 with value 0xafc24f318b6c5982
sw x3, 0(x2) # store 0xafc24f318b6c5982 in memory
flh f13, 0(x2) # load 0xafc24f318b6c5982 from memory into f13
fnmadd.h f9, f22, f31, f13, dyn # perform operation
fnmadd.h f9, f22, f31, f13, rdn # perform operation
fnmadd.h f9, f22, f31, f13, rmm # perform operation
fnmadd.h f9, f22, f31, f13, rne # perform operation
fnmadd.h f9, f22, f31, f13, rtz # perform operation
fnmadd.h f9, f22, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f22, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f22, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f22, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f22, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f22, f31, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f27, 0(x2) # load 0x00000400 from memory into f27
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f15, 0(x2) # load 0x0000c93a from memory into f15
la x2, scratch
li x3, 0x9ea05312c587c60a # load x3 with value 0x9ea05312c587c60a
sw x3, 0(x2) # store 0x9ea05312c587c60a in memory
flh f11, 0(x2) # load 0x9ea05312c587c60a from memory into f11
fnmadd.h f17, f27, f15, f11, dyn # perform operation
fnmadd.h f17, f27, f15, f11, rdn # perform operation
fnmadd.h f17, f27, f15, f11, rmm # perform operation
fnmadd.h f17, f27, f15, f11, rne # perform operation
fnmadd.h f17, f27, f15, f11, rtz # perform operation
fnmadd.h f17, f27, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f27, f15, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f21, 0(x2) # load 0x00008400 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0x61ad4e077852399e # load x3 with value 0x61ad4e077852399e
sw x3, 0(x2) # store 0x61ad4e077852399e in memory
flh f22, 0(x2) # load 0x61ad4e077852399e from memory into f22
fnmadd.h f27, f21, f6, f22, dyn # perform operation
fnmadd.h f27, f21, f6, f22, rdn # perform operation
fnmadd.h f27, f21, f6, f22, rmm # perform operation
fnmadd.h f27, f21, f6, f22, rne # perform operation
fnmadd.h f27, f21, f6, f22, rtz # perform operation
fnmadd.h f27, f21, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f21, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f21, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f21, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f21, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f21, f6, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f10, 0(x2) # load 0x00008400 from memory into f10
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f5, 0(x2) # load 0x00008000 from memory into f5
la x2, scratch
li x3, 0x633a896578374564 # load x3 with value 0x633a896578374564
sw x3, 0(x2) # store 0x633a896578374564 in memory
flh f27, 0(x2) # load 0x633a896578374564 from memory into f27
fnmadd.h f30, f10, f5, f27, dyn # perform operation
fnmadd.h f30, f10, f5, f27, rdn # perform operation
fnmadd.h f30, f10, f5, f27, rmm # perform operation
fnmadd.h f30, f10, f5, f27, rne # perform operation
fnmadd.h f30, f10, f5, f27, rtz # perform operation
fnmadd.h f30, f10, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f10, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f10, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f10, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f10, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f10, f5, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f9, 0(x2) # load 0x00008400 from memory into f9
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f26, 0(x2) # load 0x00003c00 from memory into f26
la x2, scratch
li x3, 0xdff623c2882f7130 # load x3 with value 0xdff623c2882f7130
sw x3, 0(x2) # store 0xdff623c2882f7130 in memory
flh f18, 0(x2) # load 0xdff623c2882f7130 from memory into f18
fnmadd.h f25, f9, f26, f18, dyn # perform operation
fnmadd.h f25, f9, f26, f18, rdn # perform operation
fnmadd.h f25, f9, f26, f18, rmm # perform operation
fnmadd.h f25, f9, f26, f18, rne # perform operation
fnmadd.h f25, f9, f26, f18, rtz # perform operation
fnmadd.h f25, f9, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f9, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f9, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f9, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f9, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f9, f26, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f3, 0(x2) # load 0x00008400 from memory into f3
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f19, 0(x2) # load 0x0000bc00 from memory into f19
la x2, scratch
li x3, 0x47c9f1d124bc41bc # load x3 with value 0x47c9f1d124bc41bc
sw x3, 0(x2) # store 0x47c9f1d124bc41bc in memory
flh f5, 0(x2) # load 0x47c9f1d124bc41bc from memory into f5
fnmadd.h f10, f3, f19, f5, dyn # perform operation
fnmadd.h f10, f3, f19, f5, rdn # perform operation
fnmadd.h f10, f3, f19, f5, rmm # perform operation
fnmadd.h f10, f3, f19, f5, rne # perform operation
fnmadd.h f10, f3, f19, f5, rtz # perform operation
fnmadd.h f10, f3, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f3, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f3, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f3, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f3, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f3, f19, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
la x2, scratch
li x3, 0x2a443099d09b19a # load x3 with value 0x2a443099d09b19a
sw x3, 0(x2) # store 0x2a443099d09b19a in memory
flh f28, 0(x2) # load 0x2a443099d09b19a from memory into f28
fnmadd.h f3, f13, f21, f28, dyn # perform operation
fnmadd.h f3, f13, f21, f28, rdn # perform operation
fnmadd.h f3, f13, f21, f28, rmm # perform operation
fnmadd.h f3, f13, f21, f28, rne # perform operation
fnmadd.h f3, f13, f21, f28, rtz # perform operation
fnmadd.h f3, f13, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f13, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f13, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f13, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f13, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f13, f21, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f12, 0(x2) # load 0x00008400 from memory into f12
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
la x2, scratch
li x3, 0xfaf9de5a06cc29b2 # load x3 with value 0xfaf9de5a06cc29b2
sw x3, 0(x2) # store 0xfaf9de5a06cc29b2 in memory
flh f7, 0(x2) # load 0xfaf9de5a06cc29b2 from memory into f7
fnmadd.h f13, f12, f23, f7, dyn # perform operation
fnmadd.h f13, f12, f23, f7, rdn # perform operation
fnmadd.h f13, f12, f23, f7, rmm # perform operation
fnmadd.h f13, f12, f23, f7, rne # perform operation
fnmadd.h f13, f12, f23, f7, rtz # perform operation
fnmadd.h f13, f12, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f12, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f12, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f12, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f12, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f12, f23, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f5, 0(x2) # load 0x00008400 from memory into f5
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f29, 0(x2) # load 0x00004000 from memory into f29
la x2, scratch
li x3, 0xea1af12905cee3c9 # load x3 with value 0xea1af12905cee3c9
sw x3, 0(x2) # store 0xea1af12905cee3c9 in memory
flh f24, 0(x2) # load 0xea1af12905cee3c9 from memory into f24
fnmadd.h f28, f5, f29, f24, dyn # perform operation
fnmadd.h f28, f5, f29, f24, rdn # perform operation
fnmadd.h f28, f5, f29, f24, rmm # perform operation
fnmadd.h f28, f5, f29, f24, rne # perform operation
fnmadd.h f28, f5, f29, f24, rtz # perform operation
fnmadd.h f28, f5, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f5, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f5, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f5, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f5, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f5, f29, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f20, 0(x2) # load 0x00008400 from memory into f20
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f10, 0(x2) # load 0x0000c000 from memory into f10
la x2, scratch
li x3, 0x4f0aa5cf3927ab10 # load x3 with value 0x4f0aa5cf3927ab10
sw x3, 0(x2) # store 0x4f0aa5cf3927ab10 in memory
flh f14, 0(x2) # load 0x4f0aa5cf3927ab10 from memory into f14
fnmadd.h f29, f20, f10, f14, dyn # perform operation
fnmadd.h f29, f20, f10, f14, rdn # perform operation
fnmadd.h f29, f20, f10, f14, rmm # perform operation
fnmadd.h f29, f20, f10, f14, rne # perform operation
fnmadd.h f29, f20, f10, f14, rtz # perform operation
fnmadd.h f29, f20, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f20, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f20, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f20, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f20, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f20, f10, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f14, 0(x2) # load 0x00008400 from memory into f14
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f29, 0(x2) # load 0x00000400 from memory into f29
la x2, scratch
li x3, 0x9da8da768fba7903 # load x3 with value 0x9da8da768fba7903
sw x3, 0(x2) # store 0x9da8da768fba7903 in memory
flh f2, 0(x2) # load 0x9da8da768fba7903 from memory into f2
fnmadd.h f3, f14, f29, f2, dyn # perform operation
fnmadd.h f3, f14, f29, f2, rdn # perform operation
fnmadd.h f3, f14, f29, f2, rmm # perform operation
fnmadd.h f3, f14, f29, f2, rne # perform operation
fnmadd.h f3, f14, f29, f2, rtz # perform operation
fnmadd.h f3, f14, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f14, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f14, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f14, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f14, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f14, f29, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f3, 0(x2) # load 0x00008400 from memory into f3
la x2, scratch
li x3, 0x89550890e279e555 # load x3 with value 0x89550890e279e555
sw x3, 0(x2) # store 0x89550890e279e555 in memory
flh f8, 0(x2) # load 0x89550890e279e555 from memory into f8
fnmadd.h f30, f13, f3, f8, dyn # perform operation
fnmadd.h f30, f13, f3, f8, rdn # perform operation
fnmadd.h f30, f13, f3, f8, rmm # perform operation
fnmadd.h f30, f13, f3, f8, rne # perform operation
fnmadd.h f30, f13, f3, f8, rtz # perform operation
fnmadd.h f30, f13, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f13, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f13, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f13, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f13, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f13, f3, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f12, 0(x2) # load 0x00008400 from memory into f12
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f6, 0(x2) # load 0x00007bff from memory into f6
la x2, scratch
li x3, 0xb0b4a3557ed0832e # load x3 with value 0xb0b4a3557ed0832e
sw x3, 0(x2) # store 0xb0b4a3557ed0832e in memory
flh f15, 0(x2) # load 0xb0b4a3557ed0832e from memory into f15
fnmadd.h f16, f12, f6, f15, dyn # perform operation
fnmadd.h f16, f12, f6, f15, rdn # perform operation
fnmadd.h f16, f12, f6, f15, rmm # perform operation
fnmadd.h f16, f12, f6, f15, rne # perform operation
fnmadd.h f16, f12, f6, f15, rtz # perform operation
fnmadd.h f16, f12, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f12, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f12, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f12, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f12, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f12, f6, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f23, 0(x2) # load 0x00008400 from memory into f23
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
la x2, scratch
li x3, 0xc3b785ee48ef9db9 # load x3 with value 0xc3b785ee48ef9db9
sw x3, 0(x2) # store 0xc3b785ee48ef9db9 in memory
flh f16, 0(x2) # load 0xc3b785ee48ef9db9 from memory into f16
fnmadd.h f2, f23, f13, f16, dyn # perform operation
fnmadd.h f2, f23, f13, f16, rdn # perform operation
fnmadd.h f2, f23, f13, f16, rmm # perform operation
fnmadd.h f2, f23, f13, f16, rne # perform operation
fnmadd.h f2, f23, f13, f16, rtz # perform operation
fnmadd.h f2, f23, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f23, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f23, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f23, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f23, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f23, f13, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f16, 0(x2) # load 0x00008400 from memory into f16
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f18, 0(x2) # load 0x000003ff from memory into f18
la x2, scratch
li x3, 0x78782db9ed291c79 # load x3 with value 0x78782db9ed291c79
sw x3, 0(x2) # store 0x78782db9ed291c79 in memory
flh f19, 0(x2) # load 0x78782db9ed291c79 from memory into f19
fnmadd.h f29, f16, f18, f19, dyn # perform operation
fnmadd.h f29, f16, f18, f19, rdn # perform operation
fnmadd.h f29, f16, f18, f19, rmm # perform operation
fnmadd.h f29, f16, f18, f19, rne # perform operation
fnmadd.h f29, f16, f18, f19, rtz # perform operation
fnmadd.h f29, f16, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f16, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f16, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f16, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f16, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f16, f18, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f21, 0(x2) # load 0x000083ff from memory into f21
la x2, scratch
li x3, 0x22ba66428424d7f0 # load x3 with value 0x22ba66428424d7f0
sw x3, 0(x2) # store 0x22ba66428424d7f0 in memory
flh f3, 0(x2) # load 0x22ba66428424d7f0 from memory into f3
fnmadd.h f8, f13, f21, f3, dyn # perform operation
fnmadd.h f8, f13, f21, f3, rdn # perform operation
fnmadd.h f8, f13, f21, f3, rmm # perform operation
fnmadd.h f8, f13, f21, f3, rne # perform operation
fnmadd.h f8, f13, f21, f3, rtz # perform operation
fnmadd.h f8, f13, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f13, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f13, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f13, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f13, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f13, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f2, 0(x2) # load 0x00008400 from memory into f2
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f12, 0(x2) # load 0x00000200 from memory into f12
la x2, scratch
li x3, 0x3cfdf8cdfdf5771f # load x3 with value 0x3cfdf8cdfdf5771f
sw x3, 0(x2) # store 0x3cfdf8cdfdf5771f in memory
flh f22, 0(x2) # load 0x3cfdf8cdfdf5771f from memory into f22
fnmadd.h f20, f2, f12, f22, dyn # perform operation
fnmadd.h f20, f2, f12, f22, rdn # perform operation
fnmadd.h f20, f2, f12, f22, rmm # perform operation
fnmadd.h f20, f2, f12, f22, rne # perform operation
fnmadd.h f20, f2, f12, f22, rtz # perform operation
fnmadd.h f20, f2, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f2, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f2, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f2, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f2, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f2, f12, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f7, 0(x2) # load 0x00008400 from memory into f7
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f18, 0(x2) # load 0x00008200 from memory into f18
la x2, scratch
li x3, 0x70c38952ee63a9ac # load x3 with value 0x70c38952ee63a9ac
sw x3, 0(x2) # store 0x70c38952ee63a9ac in memory
flh f8, 0(x2) # load 0x70c38952ee63a9ac from memory into f8
fnmadd.h f17, f7, f18, f8, dyn # perform operation
fnmadd.h f17, f7, f18, f8, rdn # perform operation
fnmadd.h f17, f7, f18, f8, rmm # perform operation
fnmadd.h f17, f7, f18, f8, rne # perform operation
fnmadd.h f17, f7, f18, f8, rtz # perform operation
fnmadd.h f17, f7, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f7, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f7, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f7, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f7, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f7, f18, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f11, 0(x2) # load 0x00008400 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0x29d9683fcdcf02f # load x3 with value 0x29d9683fcdcf02f
sw x3, 0(x2) # store 0x29d9683fcdcf02f in memory
flh f15, 0(x2) # load 0x29d9683fcdcf02f from memory into f15
fnmadd.h f10, f11, f21, f15, dyn # perform operation
fnmadd.h f10, f11, f21, f15, rdn # perform operation
fnmadd.h f10, f11, f21, f15, rmm # perform operation
fnmadd.h f10, f11, f21, f15, rne # perform operation
fnmadd.h f10, f11, f21, f15, rtz # perform operation
fnmadd.h f10, f11, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f11, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f11, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f11, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f11, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f11, f21, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f10, 0(x2) # load 0x00008400 from memory into f10
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
la x2, scratch
li x3, 0x8c5af1067410a0f6 # load x3 with value 0x8c5af1067410a0f6
sw x3, 0(x2) # store 0x8c5af1067410a0f6 in memory
flh f27, 0(x2) # load 0x8c5af1067410a0f6 from memory into f27
fnmadd.h f22, f10, f14, f27, dyn # perform operation
fnmadd.h f22, f10, f14, f27, rdn # perform operation
fnmadd.h f22, f10, f14, f27, rmm # perform operation
fnmadd.h f22, f10, f14, f27, rne # perform operation
fnmadd.h f22, f10, f14, f27, rtz # perform operation
fnmadd.h f22, f10, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f10, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f10, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f10, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f10, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f10, f14, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f18, 0(x2) # load 0x00007c00 from memory into f18
la x2, scratch
li x3, 0x3ad5242ef9cb6bb # load x3 with value 0x3ad5242ef9cb6bb
sw x3, 0(x2) # store 0x3ad5242ef9cb6bb in memory
flh f7, 0(x2) # load 0x3ad5242ef9cb6bb from memory into f7
fnmadd.h f5, f15, f18, f7, dyn # perform operation
fnmadd.h f5, f15, f18, f7, rdn # perform operation
fnmadd.h f5, f15, f18, f7, rmm # perform operation
fnmadd.h f5, f15, f18, f7, rne # perform operation
fnmadd.h f5, f15, f18, f7, rtz # perform operation
fnmadd.h f5, f15, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f15, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f15, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f15, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f15, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f15, f18, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f16, 0(x2) # load 0x00008400 from memory into f16
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f15, 0(x2) # load 0x0000fc00 from memory into f15
la x2, scratch
li x3, 0xd07235a3da5a2ddf # load x3 with value 0xd07235a3da5a2ddf
sw x3, 0(x2) # store 0xd07235a3da5a2ddf in memory
flh f19, 0(x2) # load 0xd07235a3da5a2ddf from memory into f19
fnmadd.h f26, f16, f15, f19, dyn # perform operation
fnmadd.h f26, f16, f15, f19, rdn # perform operation
fnmadd.h f26, f16, f15, f19, rmm # perform operation
fnmadd.h f26, f16, f15, f19, rne # perform operation
fnmadd.h f26, f16, f15, f19, rtz # perform operation
fnmadd.h f26, f16, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f16, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f16, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f16, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f16, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f16, f15, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f7, 0(x2) # load 0x00007e00 from memory into f7
la x2, scratch
li x3, 0x5794b5c439b75acb # load x3 with value 0x5794b5c439b75acb
sw x3, 0(x2) # store 0x5794b5c439b75acb in memory
flh f13, 0(x2) # load 0x5794b5c439b75acb from memory into f13
fnmadd.h f25, f15, f7, f13, dyn # perform operation
fnmadd.h f25, f15, f7, f13, rdn # perform operation
fnmadd.h f25, f15, f7, f13, rmm # perform operation
fnmadd.h f25, f15, f7, f13, rne # perform operation
fnmadd.h f25, f15, f7, f13, rtz # perform operation
fnmadd.h f25, f15, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f15, f7, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f17, 0(x2) # load 0x00008400 from memory into f17
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f14, 0(x2) # load 0x00007fff from memory into f14
la x2, scratch
li x3, 0xdc84d0e79f92a4e4 # load x3 with value 0xdc84d0e79f92a4e4
sw x3, 0(x2) # store 0xdc84d0e79f92a4e4 in memory
flh f24, 0(x2) # load 0xdc84d0e79f92a4e4 from memory into f24
fnmadd.h f12, f17, f14, f24, dyn # perform operation
fnmadd.h f12, f17, f14, f24, rdn # perform operation
fnmadd.h f12, f17, f14, f24, rmm # perform operation
fnmadd.h f12, f17, f14, f24, rne # perform operation
fnmadd.h f12, f17, f14, f24, rtz # perform operation
fnmadd.h f12, f17, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f17, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f17, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f17, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f17, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f17, f14, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f31, 0(x2) # load 0x00008400 from memory into f31
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f28, 0(x2) # load 0x0000fe00 from memory into f28
la x2, scratch
li x3, 0x346e080fd96bab02 # load x3 with value 0x346e080fd96bab02
sw x3, 0(x2) # store 0x346e080fd96bab02 in memory
flh f17, 0(x2) # load 0x346e080fd96bab02 from memory into f17
fnmadd.h f9, f31, f28, f17, dyn # perform operation
fnmadd.h f9, f31, f28, f17, rdn # perform operation
fnmadd.h f9, f31, f28, f17, rmm # perform operation
fnmadd.h f9, f31, f28, f17, rne # perform operation
fnmadd.h f9, f31, f28, f17, rtz # perform operation
fnmadd.h f9, f31, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f31, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f31, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f31, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f31, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f31, f28, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f8, 0(x2) # load 0x00008400 from memory into f8
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f18, 0(x2) # load 0x00007c01 from memory into f18
la x2, scratch
li x3, 0xfc560c59f62508e8 # load x3 with value 0xfc560c59f62508e8
sw x3, 0(x2) # store 0xfc560c59f62508e8 in memory
flh f10, 0(x2) # load 0xfc560c59f62508e8 from memory into f10
fnmadd.h f6, f8, f18, f10, dyn # perform operation
fnmadd.h f6, f8, f18, f10, rdn # perform operation
fnmadd.h f6, f8, f18, f10, rmm # perform operation
fnmadd.h f6, f8, f18, f10, rne # perform operation
fnmadd.h f6, f8, f18, f10, rtz # perform operation
fnmadd.h f6, f8, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f8, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f8, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f8, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f8, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f8, f18, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f8, 0(x2) # load 0x00008400 from memory into f8
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f18, 0(x2) # load 0x00007dff from memory into f18
la x2, scratch
li x3, 0x73e17641616bbc0f # load x3 with value 0x73e17641616bbc0f
sw x3, 0(x2) # store 0x73e17641616bbc0f in memory
flh f27, 0(x2) # load 0x73e17641616bbc0f from memory into f27
fnmadd.h f19, f8, f18, f27, dyn # perform operation
fnmadd.h f19, f8, f18, f27, rdn # perform operation
fnmadd.h f19, f8, f18, f27, rmm # perform operation
fnmadd.h f19, f8, f18, f27, rne # perform operation
fnmadd.h f19, f8, f18, f27, rtz # perform operation
fnmadd.h f19, f8, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f8, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f8, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f8, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f8, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f8, f18, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f22, 0(x2) # load 0x00008400 from memory into f22
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f15, 0(x2) # load 0x0000fc01 from memory into f15
la x2, scratch
li x3, 0xb55df190f4e4de7b # load x3 with value 0xb55df190f4e4de7b
sw x3, 0(x2) # store 0xb55df190f4e4de7b in memory
flh f6, 0(x2) # load 0xb55df190f4e4de7b from memory into f6
fnmadd.h f30, f22, f15, f6, dyn # perform operation
fnmadd.h f30, f22, f15, f6, rdn # perform operation
fnmadd.h f30, f22, f15, f6, rmm # perform operation
fnmadd.h f30, f22, f15, f6, rne # perform operation
fnmadd.h f30, f22, f15, f6, rtz # perform operation
fnmadd.h f30, f22, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f22, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f22, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f22, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f22, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f22, f15, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f16, 0(x2) # load 0x00008400 from memory into f16
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
la x2, scratch
li x3, 0xac5805df65ed15e4 # load x3 with value 0xac5805df65ed15e4
sw x3, 0(x2) # store 0xac5805df65ed15e4 in memory
flh f17, 0(x2) # load 0xac5805df65ed15e4 from memory into f17
fnmadd.h f10, f16, f13, f17, dyn # perform operation
fnmadd.h f10, f16, f13, f17, rdn # perform operation
fnmadd.h f10, f16, f13, f17, rmm # perform operation
fnmadd.h f10, f16, f13, f17, rne # perform operation
fnmadd.h f10, f16, f13, f17, rtz # perform operation
fnmadd.h f10, f16, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f16, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f16, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f16, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f16, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f16, f13, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f8, 0(x2) # load 0x00008400 from memory into f8
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f30, 0(x2) # load 0x0000c93a from memory into f30
la x2, scratch
li x3, 0x58c766653e71578c # load x3 with value 0x58c766653e71578c
sw x3, 0(x2) # store 0x58c766653e71578c in memory
flh f31, 0(x2) # load 0x58c766653e71578c from memory into f31
fnmadd.h f14, f8, f30, f31, dyn # perform operation
fnmadd.h f14, f8, f30, f31, rdn # perform operation
fnmadd.h f14, f8, f30, f31, rmm # perform operation
fnmadd.h f14, f8, f30, f31, rne # perform operation
fnmadd.h f14, f8, f30, f31, rtz # perform operation
fnmadd.h f14, f8, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f8, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f8, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f8, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f8, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f8, f30, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f22, 0(x2) # load 0x00007bff from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0x1b5c17c12e86346d # load x3 with value 0x1b5c17c12e86346d
sw x3, 0(x2) # store 0x1b5c17c12e86346d in memory
flh f16, 0(x2) # load 0x1b5c17c12e86346d from memory into f16
fnmadd.h f8, f22, f23, f16, dyn # perform operation
fnmadd.h f8, f22, f23, f16, rdn # perform operation
fnmadd.h f8, f22, f23, f16, rmm # perform operation
fnmadd.h f8, f22, f23, f16, rne # perform operation
fnmadd.h f8, f22, f23, f16, rtz # perform operation
fnmadd.h f8, f22, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f22, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f22, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f22, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f22, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f22, f23, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f9, 0(x2) # load 0x00007bff from memory into f9
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f11, 0(x2) # load 0x00008000 from memory into f11
la x2, scratch
li x3, 0xbc64caf33ea8400d # load x3 with value 0xbc64caf33ea8400d
sw x3, 0(x2) # store 0xbc64caf33ea8400d in memory
flh f13, 0(x2) # load 0xbc64caf33ea8400d from memory into f13
fnmadd.h f7, f9, f11, f13, dyn # perform operation
fnmadd.h f7, f9, f11, f13, rdn # perform operation
fnmadd.h f7, f9, f11, f13, rmm # perform operation
fnmadd.h f7, f9, f11, f13, rne # perform operation
fnmadd.h f7, f9, f11, f13, rtz # perform operation
fnmadd.h f7, f9, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f9, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f9, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f9, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f9, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f9, f11, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f6, 0(x2) # load 0x00007bff from memory into f6
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f15, 0(x2) # load 0x00003c00 from memory into f15
la x2, scratch
li x3, 0x9a97f62a04e40b32 # load x3 with value 0x9a97f62a04e40b32
sw x3, 0(x2) # store 0x9a97f62a04e40b32 in memory
flh f7, 0(x2) # load 0x9a97f62a04e40b32 from memory into f7
fnmadd.h f23, f6, f15, f7, dyn # perform operation
fnmadd.h f23, f6, f15, f7, rdn # perform operation
fnmadd.h f23, f6, f15, f7, rmm # perform operation
fnmadd.h f23, f6, f15, f7, rne # perform operation
fnmadd.h f23, f6, f15, f7, rtz # perform operation
fnmadd.h f23, f6, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f6, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f6, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f6, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f6, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f6, f15, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f29, 0(x2) # load 0x00007bff from memory into f29
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f1, 0(x2) # load 0x0000bc00 from memory into f1
la x2, scratch
li x3, 0x22fb4c348f145a34 # load x3 with value 0x22fb4c348f145a34
sw x3, 0(x2) # store 0x22fb4c348f145a34 in memory
flh f28, 0(x2) # load 0x22fb4c348f145a34 from memory into f28
fnmadd.h f18, f29, f1, f28, dyn # perform operation
fnmadd.h f18, f29, f1, f28, rdn # perform operation
fnmadd.h f18, f29, f1, f28, rmm # perform operation
fnmadd.h f18, f29, f1, f28, rne # perform operation
fnmadd.h f18, f29, f1, f28, rtz # perform operation
fnmadd.h f18, f29, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f29, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f29, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f29, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f29, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f29, f1, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f26, 0(x2) # load 0x00007bff from memory into f26
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f31, 0(x2) # load 0x00003e00 from memory into f31
la x2, scratch
li x3, 0x1d200b6cee9b4146 # load x3 with value 0x1d200b6cee9b4146
sw x3, 0(x2) # store 0x1d200b6cee9b4146 in memory
flh f19, 0(x2) # load 0x1d200b6cee9b4146 from memory into f19
fnmadd.h f1, f26, f31, f19, dyn # perform operation
fnmadd.h f1, f26, f31, f19, rdn # perform operation
fnmadd.h f1, f26, f31, f19, rmm # perform operation
fnmadd.h f1, f26, f31, f19, rne # perform operation
fnmadd.h f1, f26, f31, f19, rtz # perform operation
fnmadd.h f1, f26, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f26, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f26, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f26, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f26, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f26, f31, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f18, 0(x2) # load 0x0000be00 from memory into f18
la x2, scratch
li x3, 0x3613032663295e53 # load x3 with value 0x3613032663295e53
sw x3, 0(x2) # store 0x3613032663295e53 in memory
flh f10, 0(x2) # load 0x3613032663295e53 from memory into f10
fnmadd.h f7, f24, f18, f10, dyn # perform operation
fnmadd.h f7, f24, f18, f10, rdn # perform operation
fnmadd.h f7, f24, f18, f10, rmm # perform operation
fnmadd.h f7, f24, f18, f10, rne # perform operation
fnmadd.h f7, f24, f18, f10, rtz # perform operation
fnmadd.h f7, f24, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f24, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f24, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f24, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f24, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f24, f18, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f31, 0(x2) # load 0x00007bff from memory into f31
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f26, 0(x2) # load 0x00004000 from memory into f26
la x2, scratch
li x3, 0xc128885783d21cfe # load x3 with value 0xc128885783d21cfe
sw x3, 0(x2) # store 0xc128885783d21cfe in memory
flh f1, 0(x2) # load 0xc128885783d21cfe from memory into f1
fnmadd.h f25, f31, f26, f1, dyn # perform operation
fnmadd.h f25, f31, f26, f1, rdn # perform operation
fnmadd.h f25, f31, f26, f1, rmm # perform operation
fnmadd.h f25, f31, f26, f1, rne # perform operation
fnmadd.h f25, f31, f26, f1, rtz # perform operation
fnmadd.h f25, f31, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f31, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f31, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f31, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f31, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f31, f26, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f14, 0(x2) # load 0x00007bff from memory into f14
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f3, 0(x2) # load 0x0000c000 from memory into f3
la x2, scratch
li x3, 0xabee2fe77eb103d1 # load x3 with value 0xabee2fe77eb103d1
sw x3, 0(x2) # store 0xabee2fe77eb103d1 in memory
flh f19, 0(x2) # load 0xabee2fe77eb103d1 from memory into f19
fnmadd.h f22, f14, f3, f19, dyn # perform operation
fnmadd.h f22, f14, f3, f19, rdn # perform operation
fnmadd.h f22, f14, f3, f19, rmm # perform operation
fnmadd.h f22, f14, f3, f19, rne # perform operation
fnmadd.h f22, f14, f3, f19, rtz # perform operation
fnmadd.h f22, f14, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f14, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f14, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f14, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f14, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f14, f3, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f17, 0(x2) # load 0x00007bff from memory into f17
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f6, 0(x2) # load 0x00000400 from memory into f6
la x2, scratch
li x3, 0x7551f3c959921a94 # load x3 with value 0x7551f3c959921a94
sw x3, 0(x2) # store 0x7551f3c959921a94 in memory
flh f21, 0(x2) # load 0x7551f3c959921a94 from memory into f21
fnmadd.h f9, f17, f6, f21, dyn # perform operation
fnmadd.h f9, f17, f6, f21, rdn # perform operation
fnmadd.h f9, f17, f6, f21, rmm # perform operation
fnmadd.h f9, f17, f6, f21, rne # perform operation
fnmadd.h f9, f17, f6, f21, rtz # perform operation
fnmadd.h f9, f17, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f17, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f17, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f17, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f17, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f17, f6, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f7, 0(x2) # load 0x00007bff from memory into f7
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f21, 0(x2) # load 0x00008400 from memory into f21
la x2, scratch
li x3, 0xaf874e74172af82d # load x3 with value 0xaf874e74172af82d
sw x3, 0(x2) # store 0xaf874e74172af82d in memory
flh f12, 0(x2) # load 0xaf874e74172af82d from memory into f12
fnmadd.h f23, f7, f21, f12, dyn # perform operation
fnmadd.h f23, f7, f21, f12, rdn # perform operation
fnmadd.h f23, f7, f21, f12, rmm # perform operation
fnmadd.h f23, f7, f21, f12, rne # perform operation
fnmadd.h f23, f7, f21, f12, rtz # perform operation
fnmadd.h f23, f7, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f7, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f7, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f7, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f7, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f7, f21, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f8, 0(x2) # load 0x00007bff from memory into f8
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f1, 0(x2) # load 0x00007bff from memory into f1
la x2, scratch
li x3, 0x91a8687a3da4f84c # load x3 with value 0x91a8687a3da4f84c
sw x3, 0(x2) # store 0x91a8687a3da4f84c in memory
flh f21, 0(x2) # load 0x91a8687a3da4f84c from memory into f21
fnmadd.h f25, f8, f1, f21, dyn # perform operation
fnmadd.h f25, f8, f1, f21, rdn # perform operation
fnmadd.h f25, f8, f1, f21, rmm # perform operation
fnmadd.h f25, f8, f1, f21, rne # perform operation
fnmadd.h f25, f8, f1, f21, rtz # perform operation
fnmadd.h f25, f8, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f8, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f8, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f8, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f8, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f8, f1, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f20, 0(x2) # load 0x00007bff from memory into f20
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f19, 0(x2) # load 0x0000fbff from memory into f19
la x2, scratch
li x3, 0xd257f7b7f7f25644 # load x3 with value 0xd257f7b7f7f25644
sw x3, 0(x2) # store 0xd257f7b7f7f25644 in memory
flh f3, 0(x2) # load 0xd257f7b7f7f25644 from memory into f3
fnmadd.h f10, f20, f19, f3, dyn # perform operation
fnmadd.h f10, f20, f19, f3, rdn # perform operation
fnmadd.h f10, f20, f19, f3, rmm # perform operation
fnmadd.h f10, f20, f19, f3, rne # perform operation
fnmadd.h f10, f20, f19, f3, rtz # perform operation
fnmadd.h f10, f20, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f20, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f20, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f20, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f20, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f20, f19, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f11, 0(x2) # load 0x00007bff from memory into f11
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
la x2, scratch
li x3, 0xb2119060a89ddbb6 # load x3 with value 0xb2119060a89ddbb6
sw x3, 0(x2) # store 0xb2119060a89ddbb6 in memory
flh f3, 0(x2) # load 0xb2119060a89ddbb6 from memory into f3
fnmadd.h f8, f11, f15, f3, dyn # perform operation
fnmadd.h f8, f11, f15, f3, rdn # perform operation
fnmadd.h f8, f11, f15, f3, rmm # perform operation
fnmadd.h f8, f11, f15, f3, rne # perform operation
fnmadd.h f8, f11, f15, f3, rtz # perform operation
fnmadd.h f8, f11, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f11, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f11, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f11, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f11, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f11, f15, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f17, 0(x2) # load 0x00007bff from memory into f17
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f16, 0(x2) # load 0x000083ff from memory into f16
la x2, scratch
li x3, 0xd077525d2aa16479 # load x3 with value 0xd077525d2aa16479
sw x3, 0(x2) # store 0xd077525d2aa16479 in memory
flh f25, 0(x2) # load 0xd077525d2aa16479 from memory into f25
fnmadd.h f13, f17, f16, f25, dyn # perform operation
fnmadd.h f13, f17, f16, f25, rdn # perform operation
fnmadd.h f13, f17, f16, f25, rmm # perform operation
fnmadd.h f13, f17, f16, f25, rne # perform operation
fnmadd.h f13, f17, f16, f25, rtz # perform operation
fnmadd.h f13, f17, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f17, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f17, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f17, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f17, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f17, f16, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f20, 0(x2) # load 0x00007bff from memory into f20
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f26, 0(x2) # load 0x00000200 from memory into f26
la x2, scratch
li x3, 0x28a2b383f10bba15 # load x3 with value 0x28a2b383f10bba15
sw x3, 0(x2) # store 0x28a2b383f10bba15 in memory
flh f18, 0(x2) # load 0x28a2b383f10bba15 from memory into f18
fnmadd.h f7, f20, f26, f18, dyn # perform operation
fnmadd.h f7, f20, f26, f18, rdn # perform operation
fnmadd.h f7, f20, f26, f18, rmm # perform operation
fnmadd.h f7, f20, f26, f18, rne # perform operation
fnmadd.h f7, f20, f26, f18, rtz # perform operation
fnmadd.h f7, f20, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f20, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f20, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f20, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f20, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f20, f26, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f17, 0(x2) # load 0x00007bff from memory into f17
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f26, 0(x2) # load 0x00008200 from memory into f26
la x2, scratch
li x3, 0xf8224cdb6eedfe48 # load x3 with value 0xf8224cdb6eedfe48
sw x3, 0(x2) # store 0xf8224cdb6eedfe48 in memory
flh f22, 0(x2) # load 0xf8224cdb6eedfe48 from memory into f22
fnmadd.h f31, f17, f26, f22, dyn # perform operation
fnmadd.h f31, f17, f26, f22, rdn # perform operation
fnmadd.h f31, f17, f26, f22, rmm # perform operation
fnmadd.h f31, f17, f26, f22, rne # perform operation
fnmadd.h f31, f17, f26, f22, rtz # perform operation
fnmadd.h f31, f17, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f17, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f17, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f17, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f17, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f17, f26, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f19, 0(x2) # load 0x00007bff from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0xd1486757709ea63a # load x3 with value 0xd1486757709ea63a
sw x3, 0(x2) # store 0xd1486757709ea63a in memory
flh f31, 0(x2) # load 0xd1486757709ea63a from memory into f31
fnmadd.h f15, f19, f24, f31, dyn # perform operation
fnmadd.h f15, f19, f24, f31, rdn # perform operation
fnmadd.h f15, f19, f24, f31, rmm # perform operation
fnmadd.h f15, f19, f24, f31, rne # perform operation
fnmadd.h f15, f19, f24, f31, rtz # perform operation
fnmadd.h f15, f19, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f19, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f19, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f19, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f19, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f19, f24, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f29, 0(x2) # load 0x00007bff from memory into f29
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f16, 0(x2) # load 0x00008001 from memory into f16
la x2, scratch
li x3, 0x40f07718f7b24693 # load x3 with value 0x40f07718f7b24693
sw x3, 0(x2) # store 0x40f07718f7b24693 in memory
flh f14, 0(x2) # load 0x40f07718f7b24693 from memory into f14
fnmadd.h f11, f29, f16, f14, dyn # perform operation
fnmadd.h f11, f29, f16, f14, rdn # perform operation
fnmadd.h f11, f29, f16, f14, rmm # perform operation
fnmadd.h f11, f29, f16, f14, rne # perform operation
fnmadd.h f11, f29, f16, f14, rtz # perform operation
fnmadd.h f11, f29, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f29, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f29, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f29, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f29, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f29, f16, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f7, 0(x2) # load 0x00007c00 from memory into f7
la x2, scratch
li x3, 0x5737e4bf018cbba8 # load x3 with value 0x5737e4bf018cbba8
sw x3, 0(x2) # store 0x5737e4bf018cbba8 in memory
flh f8, 0(x2) # load 0x5737e4bf018cbba8 from memory into f8
fnmadd.h f23, f15, f7, f8, dyn # perform operation
fnmadd.h f23, f15, f7, f8, rdn # perform operation
fnmadd.h f23, f15, f7, f8, rmm # perform operation
fnmadd.h f23, f15, f7, f8, rne # perform operation
fnmadd.h f23, f15, f7, f8, rtz # perform operation
fnmadd.h f23, f15, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f15, f7, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f27, 0(x2) # load 0x00007bff from memory into f27
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f19, 0(x2) # load 0x0000fc00 from memory into f19
la x2, scratch
li x3, 0xa14c3bfecd107806 # load x3 with value 0xa14c3bfecd107806
sw x3, 0(x2) # store 0xa14c3bfecd107806 in memory
flh f28, 0(x2) # load 0xa14c3bfecd107806 from memory into f28
fnmadd.h f3, f27, f19, f28, dyn # perform operation
fnmadd.h f3, f27, f19, f28, rdn # perform operation
fnmadd.h f3, f27, f19, f28, rmm # perform operation
fnmadd.h f3, f27, f19, f28, rne # perform operation
fnmadd.h f3, f27, f19, f28, rtz # perform operation
fnmadd.h f3, f27, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f27, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f27, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f27, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f27, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f27, f19, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f18, 0(x2) # load 0x00007bff from memory into f18
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f22, 0(x2) # load 0x00007e00 from memory into f22
la x2, scratch
li x3, 0x21a3f3a9c167ed84 # load x3 with value 0x21a3f3a9c167ed84
sw x3, 0(x2) # store 0x21a3f3a9c167ed84 in memory
flh f8, 0(x2) # load 0x21a3f3a9c167ed84 from memory into f8
fnmadd.h f6, f18, f22, f8, dyn # perform operation
fnmadd.h f6, f18, f22, f8, rdn # perform operation
fnmadd.h f6, f18, f22, f8, rmm # perform operation
fnmadd.h f6, f18, f22, f8, rne # perform operation
fnmadd.h f6, f18, f22, f8, rtz # perform operation
fnmadd.h f6, f18, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f18, f22, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f29, 0(x2) # load 0x00007bff from memory into f29
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f19, 0(x2) # load 0x00007fff from memory into f19
la x2, scratch
li x3, 0x643571423442749a # load x3 with value 0x643571423442749a
sw x3, 0(x2) # store 0x643571423442749a in memory
flh f15, 0(x2) # load 0x643571423442749a from memory into f15
fnmadd.h f23, f29, f19, f15, dyn # perform operation
fnmadd.h f23, f29, f19, f15, rdn # perform operation
fnmadd.h f23, f29, f19, f15, rmm # perform operation
fnmadd.h f23, f29, f19, f15, rne # perform operation
fnmadd.h f23, f29, f19, f15, rtz # perform operation
fnmadd.h f23, f29, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f29, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f29, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f29, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f29, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f29, f19, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f20, 0(x2) # load 0x00007bff from memory into f20
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f18, 0(x2) # load 0x0000fe00 from memory into f18
la x2, scratch
li x3, 0x3b6c5a61f41139b7 # load x3 with value 0x3b6c5a61f41139b7
sw x3, 0(x2) # store 0x3b6c5a61f41139b7 in memory
flh f5, 0(x2) # load 0x3b6c5a61f41139b7 from memory into f5
fnmadd.h f13, f20, f18, f5, dyn # perform operation
fnmadd.h f13, f20, f18, f5, rdn # perform operation
fnmadd.h f13, f20, f18, f5, rmm # perform operation
fnmadd.h f13, f20, f18, f5, rne # perform operation
fnmadd.h f13, f20, f18, f5, rtz # perform operation
fnmadd.h f13, f20, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f20, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f20, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f20, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f20, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f20, f18, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f6, 0(x2) # load 0x00007bff from memory into f6
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f5, 0(x2) # load 0x00007c01 from memory into f5
la x2, scratch
li x3, 0x8d8816defb924ba2 # load x3 with value 0x8d8816defb924ba2
sw x3, 0(x2) # store 0x8d8816defb924ba2 in memory
flh f14, 0(x2) # load 0x8d8816defb924ba2 from memory into f14
fnmadd.h f10, f6, f5, f14, dyn # perform operation
fnmadd.h f10, f6, f5, f14, rdn # perform operation
fnmadd.h f10, f6, f5, f14, rmm # perform operation
fnmadd.h f10, f6, f5, f14, rne # perform operation
fnmadd.h f10, f6, f5, f14, rtz # perform operation
fnmadd.h f10, f6, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f6, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f6, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f6, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f6, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f6, f5, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f31, 0(x2) # load 0x00007bff from memory into f31
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f24, 0(x2) # load 0x00007dff from memory into f24
la x2, scratch
li x3, 0xa452172eafccc260 # load x3 with value 0xa452172eafccc260
sw x3, 0(x2) # store 0xa452172eafccc260 in memory
flh f16, 0(x2) # load 0xa452172eafccc260 from memory into f16
fnmadd.h f10, f31, f24, f16, dyn # perform operation
fnmadd.h f10, f31, f24, f16, rdn # perform operation
fnmadd.h f10, f31, f24, f16, rmm # perform operation
fnmadd.h f10, f31, f24, f16, rne # perform operation
fnmadd.h f10, f31, f24, f16, rtz # perform operation
fnmadd.h f10, f31, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f31, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f31, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f31, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f31, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f31, f24, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f3, 0(x2) # load 0x00007bff from memory into f3
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f14, 0(x2) # load 0x0000fc01 from memory into f14
la x2, scratch
li x3, 0x801b96806486c3c8 # load x3 with value 0x801b96806486c3c8
sw x3, 0(x2) # store 0x801b96806486c3c8 in memory
flh f25, 0(x2) # load 0x801b96806486c3c8 from memory into f25
fnmadd.h f29, f3, f14, f25, dyn # perform operation
fnmadd.h f29, f3, f14, f25, rdn # perform operation
fnmadd.h f29, f3, f14, f25, rmm # perform operation
fnmadd.h f29, f3, f14, f25, rne # perform operation
fnmadd.h f29, f3, f14, f25, rtz # perform operation
fnmadd.h f29, f3, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f3, f14, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f8, 0(x2) # load 0x00007bff from memory into f8
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f26, 0(x2) # load 0x000058b4 from memory into f26
la x2, scratch
li x3, 0x6925776516b9f375 # load x3 with value 0x6925776516b9f375
sw x3, 0(x2) # store 0x6925776516b9f375 in memory
flh f16, 0(x2) # load 0x6925776516b9f375 from memory into f16
fnmadd.h f1, f8, f26, f16, dyn # perform operation
fnmadd.h f1, f8, f26, f16, rdn # perform operation
fnmadd.h f1, f8, f26, f16, rmm # perform operation
fnmadd.h f1, f8, f26, f16, rne # perform operation
fnmadd.h f1, f8, f26, f16, rtz # perform operation
fnmadd.h f1, f8, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f8, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f8, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f8, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f8, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f8, f26, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f22, 0(x2) # load 0x00007bff from memory into f22
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f5, 0(x2) # load 0x0000c93a from memory into f5
la x2, scratch
li x3, 0xfcc575bafc9ec7c2 # load x3 with value 0xfcc575bafc9ec7c2
sw x3, 0(x2) # store 0xfcc575bafc9ec7c2 in memory
flh f18, 0(x2) # load 0xfcc575bafc9ec7c2 from memory into f18
fnmadd.h f10, f22, f5, f18, dyn # perform operation
fnmadd.h f10, f22, f5, f18, rdn # perform operation
fnmadd.h f10, f22, f5, f18, rmm # perform operation
fnmadd.h f10, f22, f5, f18, rne # perform operation
fnmadd.h f10, f22, f5, f18, rtz # perform operation
fnmadd.h f10, f22, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f22, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f22, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f22, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f22, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f22, f5, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f23, 0(x2) # load 0x0000fbff from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x6ad07fa3c22e5c9c # load x3 with value 0x6ad07fa3c22e5c9c
sw x3, 0(x2) # store 0x6ad07fa3c22e5c9c in memory
flh f2, 0(x2) # load 0x6ad07fa3c22e5c9c from memory into f2
fnmadd.h f18, f23, f31, f2, dyn # perform operation
fnmadd.h f18, f23, f31, f2, rdn # perform operation
fnmadd.h f18, f23, f31, f2, rmm # perform operation
fnmadd.h f18, f23, f31, f2, rne # perform operation
fnmadd.h f18, f23, f31, f2, rtz # perform operation
fnmadd.h f18, f23, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f23, f31, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f9, 0(x2) # load 0x0000fbff from memory into f9
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f18, 0(x2) # load 0x00008000 from memory into f18
la x2, scratch
li x3, 0x2f05f5b9535918a2 # load x3 with value 0x2f05f5b9535918a2
sw x3, 0(x2) # store 0x2f05f5b9535918a2 in memory
flh f5, 0(x2) # load 0x2f05f5b9535918a2 from memory into f5
fnmadd.h f3, f9, f18, f5, dyn # perform operation
fnmadd.h f3, f9, f18, f5, rdn # perform operation
fnmadd.h f3, f9, f18, f5, rmm # perform operation
fnmadd.h f3, f9, f18, f5, rne # perform operation
fnmadd.h f3, f9, f18, f5, rtz # perform operation
fnmadd.h f3, f9, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f9, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f9, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f9, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f9, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f9, f18, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f28, 0(x2) # load 0x0000fbff from memory into f28
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f22, 0(x2) # load 0x00003c00 from memory into f22
la x2, scratch
li x3, 0x9239a6dbc6648e5e # load x3 with value 0x9239a6dbc6648e5e
sw x3, 0(x2) # store 0x9239a6dbc6648e5e in memory
flh f16, 0(x2) # load 0x9239a6dbc6648e5e from memory into f16
fnmadd.h f20, f28, f22, f16, dyn # perform operation
fnmadd.h f20, f28, f22, f16, rdn # perform operation
fnmadd.h f20, f28, f22, f16, rmm # perform operation
fnmadd.h f20, f28, f22, f16, rne # perform operation
fnmadd.h f20, f28, f22, f16, rtz # perform operation
fnmadd.h f20, f28, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f28, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f28, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f28, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f28, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f28, f22, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f20, 0(x2) # load 0x0000fbff from memory into f20
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f8, 0(x2) # load 0x0000bc00 from memory into f8
la x2, scratch
li x3, 0x32b1c1a474290de6 # load x3 with value 0x32b1c1a474290de6
sw x3, 0(x2) # store 0x32b1c1a474290de6 in memory
flh f26, 0(x2) # load 0x32b1c1a474290de6 from memory into f26
fnmadd.h f22, f20, f8, f26, dyn # perform operation
fnmadd.h f22, f20, f8, f26, rdn # perform operation
fnmadd.h f22, f20, f8, f26, rmm # perform operation
fnmadd.h f22, f20, f8, f26, rne # perform operation
fnmadd.h f22, f20, f8, f26, rtz # perform operation
fnmadd.h f22, f20, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f20, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f20, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f20, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f20, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f20, f8, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f8, 0(x2) # load 0x0000fbff from memory into f8
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f24, 0(x2) # load 0x00003e00 from memory into f24
la x2, scratch
li x3, 0x4c692d69e4c4f5a6 # load x3 with value 0x4c692d69e4c4f5a6
sw x3, 0(x2) # store 0x4c692d69e4c4f5a6 in memory
flh f22, 0(x2) # load 0x4c692d69e4c4f5a6 from memory into f22
fnmadd.h f19, f8, f24, f22, dyn # perform operation
fnmadd.h f19, f8, f24, f22, rdn # perform operation
fnmadd.h f19, f8, f24, f22, rmm # perform operation
fnmadd.h f19, f8, f24, f22, rne # perform operation
fnmadd.h f19, f8, f24, f22, rtz # perform operation
fnmadd.h f19, f8, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f8, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f8, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f8, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f8, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f8, f24, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f6, 0(x2) # load 0x0000fbff from memory into f6
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f15, 0(x2) # load 0x0000be00 from memory into f15
la x2, scratch
li x3, 0xb13e6fe64734898f # load x3 with value 0xb13e6fe64734898f
sw x3, 0(x2) # store 0xb13e6fe64734898f in memory
flh f24, 0(x2) # load 0xb13e6fe64734898f from memory into f24
fnmadd.h f3, f6, f15, f24, dyn # perform operation
fnmadd.h f3, f6, f15, f24, rdn # perform operation
fnmadd.h f3, f6, f15, f24, rmm # perform operation
fnmadd.h f3, f6, f15, f24, rne # perform operation
fnmadd.h f3, f6, f15, f24, rtz # perform operation
fnmadd.h f3, f6, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f6, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f6, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f6, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f6, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f6, f15, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f1, 0(x2) # load 0x0000fbff from memory into f1
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f26, 0(x2) # load 0x00004000 from memory into f26
la x2, scratch
li x3, 0x61f9bb3b4144b50d # load x3 with value 0x61f9bb3b4144b50d
sw x3, 0(x2) # store 0x61f9bb3b4144b50d in memory
flh f31, 0(x2) # load 0x61f9bb3b4144b50d from memory into f31
fnmadd.h f22, f1, f26, f31, dyn # perform operation
fnmadd.h f22, f1, f26, f31, rdn # perform operation
fnmadd.h f22, f1, f26, f31, rmm # perform operation
fnmadd.h f22, f1, f26, f31, rne # perform operation
fnmadd.h f22, f1, f26, f31, rtz # perform operation
fnmadd.h f22, f1, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f1, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f1, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f1, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f1, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f1, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f3, 0(x2) # load 0x0000fbff from memory into f3
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f17, 0(x2) # load 0x0000c000 from memory into f17
la x2, scratch
li x3, 0x22c8f337552f6f8e # load x3 with value 0x22c8f337552f6f8e
sw x3, 0(x2) # store 0x22c8f337552f6f8e in memory
flh f20, 0(x2) # load 0x22c8f337552f6f8e from memory into f20
fnmadd.h f19, f3, f17, f20, dyn # perform operation
fnmadd.h f19, f3, f17, f20, rdn # perform operation
fnmadd.h f19, f3, f17, f20, rmm # perform operation
fnmadd.h f19, f3, f17, f20, rne # perform operation
fnmadd.h f19, f3, f17, f20, rtz # perform operation
fnmadd.h f19, f3, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f3, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f3, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f3, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f3, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f3, f17, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f27, 0(x2) # load 0x0000fbff from memory into f27
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f24, 0(x2) # load 0x00000400 from memory into f24
la x2, scratch
li x3, 0xbd8727e7e59b5d11 # load x3 with value 0xbd8727e7e59b5d11
sw x3, 0(x2) # store 0xbd8727e7e59b5d11 in memory
flh f29, 0(x2) # load 0xbd8727e7e59b5d11 from memory into f29
fnmadd.h f15, f27, f24, f29, dyn # perform operation
fnmadd.h f15, f27, f24, f29, rdn # perform operation
fnmadd.h f15, f27, f24, f29, rmm # perform operation
fnmadd.h f15, f27, f24, f29, rne # perform operation
fnmadd.h f15, f27, f24, f29, rtz # perform operation
fnmadd.h f15, f27, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f27, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f27, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f27, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f27, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f27, f24, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f16, 0(x2) # load 0x0000fbff from memory into f16
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f18, 0(x2) # load 0x00008400 from memory into f18
la x2, scratch
li x3, 0x2b043773ab8833d2 # load x3 with value 0x2b043773ab8833d2
sw x3, 0(x2) # store 0x2b043773ab8833d2 in memory
flh f28, 0(x2) # load 0x2b043773ab8833d2 from memory into f28
fnmadd.h f22, f16, f18, f28, dyn # perform operation
fnmadd.h f22, f16, f18, f28, rdn # perform operation
fnmadd.h f22, f16, f18, f28, rmm # perform operation
fnmadd.h f22, f16, f18, f28, rne # perform operation
fnmadd.h f22, f16, f18, f28, rtz # perform operation
fnmadd.h f22, f16, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f16, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f16, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f16, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f16, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f16, f18, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f1, 0(x2) # load 0x0000fbff from memory into f1
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f22, 0(x2) # load 0x00007bff from memory into f22
la x2, scratch
li x3, 0x860329f568e74053 # load x3 with value 0x860329f568e74053
sw x3, 0(x2) # store 0x860329f568e74053 in memory
flh f8, 0(x2) # load 0x860329f568e74053 from memory into f8
fnmadd.h f24, f1, f22, f8, dyn # perform operation
fnmadd.h f24, f1, f22, f8, rdn # perform operation
fnmadd.h f24, f1, f22, f8, rmm # perform operation
fnmadd.h f24, f1, f22, f8, rne # perform operation
fnmadd.h f24, f1, f22, f8, rtz # perform operation
fnmadd.h f24, f1, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f1, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f1, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f1, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f1, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f1, f22, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f25, 0(x2) # load 0x0000fbff from memory into f25
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f18, 0(x2) # load 0x0000fbff from memory into f18
la x2, scratch
li x3, 0x938f11718b336d5e # load x3 with value 0x938f11718b336d5e
sw x3, 0(x2) # store 0x938f11718b336d5e in memory
flh f15, 0(x2) # load 0x938f11718b336d5e from memory into f15
fnmadd.h f6, f25, f18, f15, dyn # perform operation
fnmadd.h f6, f25, f18, f15, rdn # perform operation
fnmadd.h f6, f25, f18, f15, rmm # perform operation
fnmadd.h f6, f25, f18, f15, rne # perform operation
fnmadd.h f6, f25, f18, f15, rtz # perform operation
fnmadd.h f6, f25, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f25, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f25, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f25, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f25, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f25, f18, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f10, 0(x2) # load 0x0000fbff from memory into f10
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f19, 0(x2) # load 0x000003ff from memory into f19
la x2, scratch
li x3, 0x19efc09106ed1a5e # load x3 with value 0x19efc09106ed1a5e
sw x3, 0(x2) # store 0x19efc09106ed1a5e in memory
flh f16, 0(x2) # load 0x19efc09106ed1a5e from memory into f16
fnmadd.h f5, f10, f19, f16, dyn # perform operation
fnmadd.h f5, f10, f19, f16, rdn # perform operation
fnmadd.h f5, f10, f19, f16, rmm # perform operation
fnmadd.h f5, f10, f19, f16, rne # perform operation
fnmadd.h f5, f10, f19, f16, rtz # perform operation
fnmadd.h f5, f10, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f10, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f10, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f10, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f10, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f10, f19, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f20, 0(x2) # load 0x0000fbff from memory into f20
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f3, 0(x2) # load 0x000083ff from memory into f3
la x2, scratch
li x3, 0xec8b2d1280f6b03c # load x3 with value 0xec8b2d1280f6b03c
sw x3, 0(x2) # store 0xec8b2d1280f6b03c in memory
flh f19, 0(x2) # load 0xec8b2d1280f6b03c from memory into f19
fnmadd.h f1, f20, f3, f19, dyn # perform operation
fnmadd.h f1, f20, f3, f19, rdn # perform operation
fnmadd.h f1, f20, f3, f19, rmm # perform operation
fnmadd.h f1, f20, f3, f19, rne # perform operation
fnmadd.h f1, f20, f3, f19, rtz # perform operation
fnmadd.h f1, f20, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f20, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f20, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f20, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f20, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f20, f3, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
la x2, scratch
li x3, 0xe3d6693727e284be # load x3 with value 0xe3d6693727e284be
sw x3, 0(x2) # store 0xe3d6693727e284be in memory
flh f25, 0(x2) # load 0xe3d6693727e284be from memory into f25
fnmadd.h f31, f15, f19, f25, dyn # perform operation
fnmadd.h f31, f15, f19, f25, rdn # perform operation
fnmadd.h f31, f15, f19, f25, rmm # perform operation
fnmadd.h f31, f15, f19, f25, rne # perform operation
fnmadd.h f31, f15, f19, f25, rtz # perform operation
fnmadd.h f31, f15, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f15, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f15, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f15, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f15, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f15, f19, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f1, 0(x2) # load 0x0000fbff from memory into f1
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f18, 0(x2) # load 0x00008200 from memory into f18
la x2, scratch
li x3, 0x8564a2fa7c768ce9 # load x3 with value 0x8564a2fa7c768ce9
sw x3, 0(x2) # store 0x8564a2fa7c768ce9 in memory
flh f11, 0(x2) # load 0x8564a2fa7c768ce9 from memory into f11
fnmadd.h f31, f1, f18, f11, dyn # perform operation
fnmadd.h f31, f1, f18, f11, rdn # perform operation
fnmadd.h f31, f1, f18, f11, rmm # perform operation
fnmadd.h f31, f1, f18, f11, rne # perform operation
fnmadd.h f31, f1, f18, f11, rtz # perform operation
fnmadd.h f31, f1, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f1, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f1, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f1, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f1, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f1, f18, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f20, 0(x2) # load 0x0000fbff from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0xab49f907dd637fea # load x3 with value 0xab49f907dd637fea
sw x3, 0(x2) # store 0xab49f907dd637fea in memory
flh f13, 0(x2) # load 0xab49f907dd637fea from memory into f13
fnmadd.h f21, f20, f14, f13, dyn # perform operation
fnmadd.h f21, f20, f14, f13, rdn # perform operation
fnmadd.h f21, f20, f14, f13, rmm # perform operation
fnmadd.h f21, f20, f14, f13, rne # perform operation
fnmadd.h f21, f20, f14, f13, rtz # perform operation
fnmadd.h f21, f20, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f20, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f20, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f20, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f20, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f20, f14, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f28, 0(x2) # load 0x0000fbff from memory into f28
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
la x2, scratch
li x3, 0x7df8a41fc77a900d # load x3 with value 0x7df8a41fc77a900d
sw x3, 0(x2) # store 0x7df8a41fc77a900d in memory
flh f20, 0(x2) # load 0x7df8a41fc77a900d from memory into f20
fnmadd.h f19, f28, f14, f20, dyn # perform operation
fnmadd.h f19, f28, f14, f20, rdn # perform operation
fnmadd.h f19, f28, f14, f20, rmm # perform operation
fnmadd.h f19, f28, f14, f20, rne # perform operation
fnmadd.h f19, f28, f14, f20, rtz # perform operation
fnmadd.h f19, f28, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f28, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f28, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f28, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f28, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f28, f14, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f9, 0(x2) # load 0x0000fbff from memory into f9
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f21, 0(x2) # load 0x00007c00 from memory into f21
la x2, scratch
li x3, 0xafff9c2992a6b46c # load x3 with value 0xafff9c2992a6b46c
sw x3, 0(x2) # store 0xafff9c2992a6b46c in memory
flh f29, 0(x2) # load 0xafff9c2992a6b46c from memory into f29
fnmadd.h f31, f9, f21, f29, dyn # perform operation
fnmadd.h f31, f9, f21, f29, rdn # perform operation
fnmadd.h f31, f9, f21, f29, rmm # perform operation
fnmadd.h f31, f9, f21, f29, rne # perform operation
fnmadd.h f31, f9, f21, f29, rtz # perform operation
fnmadd.h f31, f9, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f9, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f9, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f9, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f9, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f9, f21, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f29, 0(x2) # load 0x0000fbff from memory into f29
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f1, 0(x2) # load 0x0000fc00 from memory into f1
la x2, scratch
li x3, 0x6fcb25f8e20ae876 # load x3 with value 0x6fcb25f8e20ae876
sw x3, 0(x2) # store 0x6fcb25f8e20ae876 in memory
flh f27, 0(x2) # load 0x6fcb25f8e20ae876 from memory into f27
fnmadd.h f24, f29, f1, f27, dyn # perform operation
fnmadd.h f24, f29, f1, f27, rdn # perform operation
fnmadd.h f24, f29, f1, f27, rmm # perform operation
fnmadd.h f24, f29, f1, f27, rne # perform operation
fnmadd.h f24, f29, f1, f27, rtz # perform operation
fnmadd.h f24, f29, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f29, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f29, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f29, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f29, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f29, f1, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f19, 0(x2) # load 0x0000fbff from memory into f19
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
la x2, scratch
li x3, 0xc7662110021a8093 # load x3 with value 0xc7662110021a8093
sw x3, 0(x2) # store 0xc7662110021a8093 in memory
flh f13, 0(x2) # load 0xc7662110021a8093 from memory into f13
fnmadd.h f23, f19, f18, f13, dyn # perform operation
fnmadd.h f23, f19, f18, f13, rdn # perform operation
fnmadd.h f23, f19, f18, f13, rmm # perform operation
fnmadd.h f23, f19, f18, f13, rne # perform operation
fnmadd.h f23, f19, f18, f13, rtz # perform operation
fnmadd.h f23, f19, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f19, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f19, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f19, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f19, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f19, f18, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f24, 0(x2) # load 0x00007fff from memory into f24
la x2, scratch
li x3, 0x8a3bf98814410bcc # load x3 with value 0x8a3bf98814410bcc
sw x3, 0(x2) # store 0x8a3bf98814410bcc in memory
flh f14, 0(x2) # load 0x8a3bf98814410bcc from memory into f14
fnmadd.h f9, f15, f24, f14, dyn # perform operation
fnmadd.h f9, f15, f24, f14, rdn # perform operation
fnmadd.h f9, f15, f24, f14, rmm # perform operation
fnmadd.h f9, f15, f24, f14, rne # perform operation
fnmadd.h f9, f15, f24, f14, rtz # perform operation
fnmadd.h f9, f15, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f15, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f15, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f15, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f15, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f15, f24, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f23, 0(x2) # load 0x0000fe00 from memory into f23
la x2, scratch
li x3, 0x747d940019443ea7 # load x3 with value 0x747d940019443ea7
sw x3, 0(x2) # store 0x747d940019443ea7 in memory
flh f14, 0(x2) # load 0x747d940019443ea7 from memory into f14
fnmadd.h f26, f13, f23, f14, dyn # perform operation
fnmadd.h f26, f13, f23, f14, rdn # perform operation
fnmadd.h f26, f13, f23, f14, rmm # perform operation
fnmadd.h f26, f13, f23, f14, rne # perform operation
fnmadd.h f26, f13, f23, f14, rtz # perform operation
fnmadd.h f26, f13, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f13, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f13, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f13, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f13, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f13, f23, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f27, 0(x2) # load 0x00007c01 from memory into f27
la x2, scratch
li x3, 0x9d6e25409c84126 # load x3 with value 0x9d6e25409c84126
sw x3, 0(x2) # store 0x9d6e25409c84126 in memory
flh f16, 0(x2) # load 0x9d6e25409c84126 from memory into f16
fnmadd.h f24, f15, f27, f16, dyn # perform operation
fnmadd.h f24, f15, f27, f16, rdn # perform operation
fnmadd.h f24, f15, f27, f16, rmm # perform operation
fnmadd.h f24, f15, f27, f16, rne # perform operation
fnmadd.h f24, f15, f27, f16, rtz # perform operation
fnmadd.h f24, f15, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f15, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f15, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f15, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f15, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f15, f27, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f9, 0(x2) # load 0x0000fbff from memory into f9
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f20, 0(x2) # load 0x00007dff from memory into f20
la x2, scratch
li x3, 0xacab282001216b6f # load x3 with value 0xacab282001216b6f
sw x3, 0(x2) # store 0xacab282001216b6f in memory
flh f19, 0(x2) # load 0xacab282001216b6f from memory into f19
fnmadd.h f21, f9, f20, f19, dyn # perform operation
fnmadd.h f21, f9, f20, f19, rdn # perform operation
fnmadd.h f21, f9, f20, f19, rmm # perform operation
fnmadd.h f21, f9, f20, f19, rne # perform operation
fnmadd.h f21, f9, f20, f19, rtz # perform operation
fnmadd.h f21, f9, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f9, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f9, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f9, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f9, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f9, f20, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f1, 0(x2) # load 0x0000fbff from memory into f1
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f24, 0(x2) # load 0x0000fc01 from memory into f24
la x2, scratch
li x3, 0x715478ededf03797 # load x3 with value 0x715478ededf03797
sw x3, 0(x2) # store 0x715478ededf03797 in memory
flh f7, 0(x2) # load 0x715478ededf03797 from memory into f7
fnmadd.h f26, f1, f24, f7, dyn # perform operation
fnmadd.h f26, f1, f24, f7, rdn # perform operation
fnmadd.h f26, f1, f24, f7, rmm # perform operation
fnmadd.h f26, f1, f24, f7, rne # perform operation
fnmadd.h f26, f1, f24, f7, rtz # perform operation
fnmadd.h f26, f1, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f1, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f1, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f1, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f1, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f1, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f19, 0(x2) # load 0x0000fbff from memory into f19
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f1, 0(x2) # load 0x000058b4 from memory into f1
la x2, scratch
li x3, 0xda5f064185f16104 # load x3 with value 0xda5f064185f16104
sw x3, 0(x2) # store 0xda5f064185f16104 in memory
flh f14, 0(x2) # load 0xda5f064185f16104 from memory into f14
fnmadd.h f10, f19, f1, f14, dyn # perform operation
fnmadd.h f10, f19, f1, f14, rdn # perform operation
fnmadd.h f10, f19, f1, f14, rmm # perform operation
fnmadd.h f10, f19, f1, f14, rne # perform operation
fnmadd.h f10, f19, f1, f14, rtz # perform operation
fnmadd.h f10, f19, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f19, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f19, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f19, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f19, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f19, f1, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f9, 0(x2) # load 0x0000fbff from memory into f9
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
la x2, scratch
li x3, 0xb924cf5c5443a56e # load x3 with value 0xb924cf5c5443a56e
sw x3, 0(x2) # store 0xb924cf5c5443a56e in memory
flh f15, 0(x2) # load 0xb924cf5c5443a56e from memory into f15
fnmadd.h f7, f9, f3, f15, dyn # perform operation
fnmadd.h f7, f9, f3, f15, rdn # perform operation
fnmadd.h f7, f9, f3, f15, rmm # perform operation
fnmadd.h f7, f9, f3, f15, rne # perform operation
fnmadd.h f7, f9, f3, f15, rtz # perform operation
fnmadd.h f7, f9, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f9, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f9, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f9, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f9, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f9, f3, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0xc61e4c8a3a747abc # load x3 with value 0xc61e4c8a3a747abc
sw x3, 0(x2) # store 0xc61e4c8a3a747abc in memory
flh f6, 0(x2) # load 0xc61e4c8a3a747abc from memory into f6
fnmadd.h f16, f15, f30, f6, dyn # perform operation
fnmadd.h f16, f15, f30, f6, rdn # perform operation
fnmadd.h f16, f15, f30, f6, rmm # perform operation
fnmadd.h f16, f15, f30, f6, rne # perform operation
fnmadd.h f16, f15, f30, f6, rtz # perform operation
fnmadd.h f16, f15, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f15, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f15, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f15, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f15, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f15, f30, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f14, 0(x2) # load 0x000003ff from memory into f14
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f20, 0(x2) # load 0x00008000 from memory into f20
la x2, scratch
li x3, 0x49cb1566b5e833c7 # load x3 with value 0x49cb1566b5e833c7
sw x3, 0(x2) # store 0x49cb1566b5e833c7 in memory
flh f29, 0(x2) # load 0x49cb1566b5e833c7 from memory into f29
fnmadd.h f24, f14, f20, f29, dyn # perform operation
fnmadd.h f24, f14, f20, f29, rdn # perform operation
fnmadd.h f24, f14, f20, f29, rmm # perform operation
fnmadd.h f24, f14, f20, f29, rne # perform operation
fnmadd.h f24, f14, f20, f29, rtz # perform operation
fnmadd.h f24, f14, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f14, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f14, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f14, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f14, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f14, f20, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f17, 0(x2) # load 0x000003ff from memory into f17
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
la x2, scratch
li x3, 0x3ae71632f1c65e2d # load x3 with value 0x3ae71632f1c65e2d
sw x3, 0(x2) # store 0x3ae71632f1c65e2d in memory
flh f28, 0(x2) # load 0x3ae71632f1c65e2d from memory into f28
fnmadd.h f8, f17, f16, f28, dyn # perform operation
fnmadd.h f8, f17, f16, f28, rdn # perform operation
fnmadd.h f8, f17, f16, f28, rmm # perform operation
fnmadd.h f8, f17, f16, f28, rne # perform operation
fnmadd.h f8, f17, f16, f28, rtz # perform operation
fnmadd.h f8, f17, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f17, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f17, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f17, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f17, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f17, f16, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f14, 0(x2) # load 0x0000bc00 from memory into f14
la x2, scratch
li x3, 0x741af0c69a58646b # load x3 with value 0x741af0c69a58646b
sw x3, 0(x2) # store 0x741af0c69a58646b in memory
flh f31, 0(x2) # load 0x741af0c69a58646b from memory into f31
fnmadd.h f3, f15, f14, f31, dyn # perform operation
fnmadd.h f3, f15, f14, f31, rdn # perform operation
fnmadd.h f3, f15, f14, f31, rmm # perform operation
fnmadd.h f3, f15, f14, f31, rne # perform operation
fnmadd.h f3, f15, f14, f31, rtz # perform operation
fnmadd.h f3, f15, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f15, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f15, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f15, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f15, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f15, f14, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f24, 0(x2) # load 0x000003ff from memory into f24
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f25, 0(x2) # load 0x00003e00 from memory into f25
la x2, scratch
li x3, 0x30b30d8379c182b8 # load x3 with value 0x30b30d8379c182b8
sw x3, 0(x2) # store 0x30b30d8379c182b8 in memory
flh f11, 0(x2) # load 0x30b30d8379c182b8 from memory into f11
fnmadd.h f21, f24, f25, f11, dyn # perform operation
fnmadd.h f21, f24, f25, f11, rdn # perform operation
fnmadd.h f21, f24, f25, f11, rmm # perform operation
fnmadd.h f21, f24, f25, f11, rne # perform operation
fnmadd.h f21, f24, f25, f11, rtz # perform operation
fnmadd.h f21, f24, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f24, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f24, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f24, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f24, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f24, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f21, 0(x2) # load 0x0000be00 from memory into f21
la x2, scratch
li x3, 0x7b67bfc2128705ef # load x3 with value 0x7b67bfc2128705ef
sw x3, 0(x2) # store 0x7b67bfc2128705ef in memory
flh f5, 0(x2) # load 0x7b67bfc2128705ef from memory into f5
fnmadd.h f2, f20, f21, f5, dyn # perform operation
fnmadd.h f2, f20, f21, f5, rdn # perform operation
fnmadd.h f2, f20, f21, f5, rmm # perform operation
fnmadd.h f2, f20, f21, f5, rne # perform operation
fnmadd.h f2, f20, f21, f5, rtz # perform operation
fnmadd.h f2, f20, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f20, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f20, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f20, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f20, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f20, f21, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f27, 0(x2) # load 0x000003ff from memory into f27
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
la x2, scratch
li x3, 0xad606989c81adf22 # load x3 with value 0xad606989c81adf22
sw x3, 0(x2) # store 0xad606989c81adf22 in memory
flh f19, 0(x2) # load 0xad606989c81adf22 from memory into f19
fnmadd.h f18, f27, f6, f19, dyn # perform operation
fnmadd.h f18, f27, f6, f19, rdn # perform operation
fnmadd.h f18, f27, f6, f19, rmm # perform operation
fnmadd.h f18, f27, f6, f19, rne # perform operation
fnmadd.h f18, f27, f6, f19, rtz # perform operation
fnmadd.h f18, f27, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f27, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f27, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f27, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f27, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f27, f6, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f21, 0(x2) # load 0x000003ff from memory into f21
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f27, 0(x2) # load 0x0000c000 from memory into f27
la x2, scratch
li x3, 0x49b40e80f746b46c # load x3 with value 0x49b40e80f746b46c
sw x3, 0(x2) # store 0x49b40e80f746b46c in memory
flh f26, 0(x2) # load 0x49b40e80f746b46c from memory into f26
fnmadd.h f29, f21, f27, f26, dyn # perform operation
fnmadd.h f29, f21, f27, f26, rdn # perform operation
fnmadd.h f29, f21, f27, f26, rmm # perform operation
fnmadd.h f29, f21, f27, f26, rne # perform operation
fnmadd.h f29, f21, f27, f26, rtz # perform operation
fnmadd.h f29, f21, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f21, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f21, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f21, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f21, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f21, f27, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f31, 0(x2) # load 0x000003ff from memory into f31
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f27, 0(x2) # load 0x00000400 from memory into f27
la x2, scratch
li x3, 0x44fa5ac19dcb6502 # load x3 with value 0x44fa5ac19dcb6502
sw x3, 0(x2) # store 0x44fa5ac19dcb6502 in memory
flh f17, 0(x2) # load 0x44fa5ac19dcb6502 from memory into f17
fnmadd.h f10, f31, f27, f17, dyn # perform operation
fnmadd.h f10, f31, f27, f17, rdn # perform operation
fnmadd.h f10, f31, f27, f17, rmm # perform operation
fnmadd.h f10, f31, f27, f17, rne # perform operation
fnmadd.h f10, f31, f27, f17, rtz # perform operation
fnmadd.h f10, f31, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f31, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f31, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f31, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f31, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f31, f27, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f23, 0(x2) # load 0x00008400 from memory into f23
la x2, scratch
li x3, 0xe0b0a1310fe35c28 # load x3 with value 0xe0b0a1310fe35c28
sw x3, 0(x2) # store 0xe0b0a1310fe35c28 in memory
flh f13, 0(x2) # load 0xe0b0a1310fe35c28 from memory into f13
fnmadd.h f29, f15, f23, f13, dyn # perform operation
fnmadd.h f29, f15, f23, f13, rdn # perform operation
fnmadd.h f29, f15, f23, f13, rmm # perform operation
fnmadd.h f29, f15, f23, f13, rne # perform operation
fnmadd.h f29, f15, f23, f13, rtz # perform operation
fnmadd.h f29, f15, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f15, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f15, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f15, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f15, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f15, f23, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f19, 0(x2) # load 0x000003ff from memory into f19
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f10, 0(x2) # load 0x00007bff from memory into f10
la x2, scratch
li x3, 0xa8f4f9150015fd0c # load x3 with value 0xa8f4f9150015fd0c
sw x3, 0(x2) # store 0xa8f4f9150015fd0c in memory
flh f2, 0(x2) # load 0xa8f4f9150015fd0c from memory into f2
fnmadd.h f14, f19, f10, f2, dyn # perform operation
fnmadd.h f14, f19, f10, f2, rdn # perform operation
fnmadd.h f14, f19, f10, f2, rmm # perform operation
fnmadd.h f14, f19, f10, f2, rne # perform operation
fnmadd.h f14, f19, f10, f2, rtz # perform operation
fnmadd.h f14, f19, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f19, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f19, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f19, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f19, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f19, f10, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f21, 0(x2) # load 0x000003ff from memory into f21
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f30, 0(x2) # load 0x0000fbff from memory into f30
la x2, scratch
li x3, 0x6e955c147b9e9d45 # load x3 with value 0x6e955c147b9e9d45
sw x3, 0(x2) # store 0x6e955c147b9e9d45 in memory
flh f1, 0(x2) # load 0x6e955c147b9e9d45 from memory into f1
fnmadd.h f19, f21, f30, f1, dyn # perform operation
fnmadd.h f19, f21, f30, f1, rdn # perform operation
fnmadd.h f19, f21, f30, f1, rmm # perform operation
fnmadd.h f19, f21, f30, f1, rne # perform operation
fnmadd.h f19, f21, f30, f1, rtz # perform operation
fnmadd.h f19, f21, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f21, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f21, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f21, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f21, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f21, f30, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f3, 0(x2) # load 0x000003ff from memory into f3
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f28, 0(x2) # load 0x000003ff from memory into f28
la x2, scratch
li x3, 0x2a85a0fa31e48657 # load x3 with value 0x2a85a0fa31e48657
sw x3, 0(x2) # store 0x2a85a0fa31e48657 in memory
flh f10, 0(x2) # load 0x2a85a0fa31e48657 from memory into f10
fnmadd.h f13, f3, f28, f10, dyn # perform operation
fnmadd.h f13, f3, f28, f10, rdn # perform operation
fnmadd.h f13, f3, f28, f10, rmm # perform operation
fnmadd.h f13, f3, f28, f10, rne # perform operation
fnmadd.h f13, f3, f28, f10, rtz # perform operation
fnmadd.h f13, f3, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f3, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f3, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f3, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f3, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f3, f28, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f11, 0(x2) # load 0x000003ff from memory into f11
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f12, 0(x2) # load 0x000083ff from memory into f12
la x2, scratch
li x3, 0x7326c03e0a42a47b # load x3 with value 0x7326c03e0a42a47b
sw x3, 0(x2) # store 0x7326c03e0a42a47b in memory
flh f31, 0(x2) # load 0x7326c03e0a42a47b from memory into f31
fnmadd.h f8, f11, f12, f31, dyn # perform operation
fnmadd.h f8, f11, f12, f31, rdn # perform operation
fnmadd.h f8, f11, f12, f31, rmm # perform operation
fnmadd.h f8, f11, f12, f31, rne # perform operation
fnmadd.h f8, f11, f12, f31, rtz # perform operation
fnmadd.h f8, f11, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f11, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f11, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f11, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f11, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f11, f12, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f7, 0(x2) # load 0x000003ff from memory into f7
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f31, 0(x2) # load 0x00000200 from memory into f31
la x2, scratch
li x3, 0xdf6f77367f45b773 # load x3 with value 0xdf6f77367f45b773
sw x3, 0(x2) # store 0xdf6f77367f45b773 in memory
flh f19, 0(x2) # load 0xdf6f77367f45b773 from memory into f19
fnmadd.h f2, f7, f31, f19, dyn # perform operation
fnmadd.h f2, f7, f31, f19, rdn # perform operation
fnmadd.h f2, f7, f31, f19, rmm # perform operation
fnmadd.h f2, f7, f31, f19, rne # perform operation
fnmadd.h f2, f7, f31, f19, rtz # perform operation
fnmadd.h f2, f7, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f7, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f7, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f7, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f7, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f7, f31, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f31, 0(x2) # load 0x000003ff from memory into f31
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f5, 0(x2) # load 0x00008200 from memory into f5
la x2, scratch
li x3, 0x1f3d368220bd0998 # load x3 with value 0x1f3d368220bd0998
sw x3, 0(x2) # store 0x1f3d368220bd0998 in memory
flh f1, 0(x2) # load 0x1f3d368220bd0998 from memory into f1
fnmadd.h f21, f31, f5, f1, dyn # perform operation
fnmadd.h f21, f31, f5, f1, rdn # perform operation
fnmadd.h f21, f31, f5, f1, rmm # perform operation
fnmadd.h f21, f31, f5, f1, rne # perform operation
fnmadd.h f21, f31, f5, f1, rtz # perform operation
fnmadd.h f21, f31, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f31, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f31, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f31, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f31, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f31, f5, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f8, 0(x2) # load 0x000003ff from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0xf4b8dc69c6a925d # load x3 with value 0xf4b8dc69c6a925d
sw x3, 0(x2) # store 0xf4b8dc69c6a925d in memory
flh f13, 0(x2) # load 0xf4b8dc69c6a925d from memory into f13
fnmadd.h f18, f8, f19, f13, dyn # perform operation
fnmadd.h f18, f8, f19, f13, rdn # perform operation
fnmadd.h f18, f8, f19, f13, rmm # perform operation
fnmadd.h f18, f8, f19, f13, rne # perform operation
fnmadd.h f18, f8, f19, f13, rtz # perform operation
fnmadd.h f18, f8, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f8, f19, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f30, 0(x2) # load 0x000003ff from memory into f30
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f31, 0(x2) # load 0x00008001 from memory into f31
la x2, scratch
li x3, 0xc7277e59dff7f8c2 # load x3 with value 0xc7277e59dff7f8c2
sw x3, 0(x2) # store 0xc7277e59dff7f8c2 in memory
flh f2, 0(x2) # load 0xc7277e59dff7f8c2 from memory into f2
fnmadd.h f22, f30, f31, f2, dyn # perform operation
fnmadd.h f22, f30, f31, f2, rdn # perform operation
fnmadd.h f22, f30, f31, f2, rmm # perform operation
fnmadd.h f22, f30, f31, f2, rne # perform operation
fnmadd.h f22, f30, f31, f2, rtz # perform operation
fnmadd.h f22, f30, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f30, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f30, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f30, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f30, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f30, f31, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f5, 0(x2) # load 0x000003ff from memory into f5
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f20, 0(x2) # load 0x00007c00 from memory into f20
la x2, scratch
li x3, 0xc54cb2ebf424166b # load x3 with value 0xc54cb2ebf424166b
sw x3, 0(x2) # store 0xc54cb2ebf424166b in memory
flh f14, 0(x2) # load 0xc54cb2ebf424166b from memory into f14
fnmadd.h f29, f5, f20, f14, dyn # perform operation
fnmadd.h f29, f5, f20, f14, rdn # perform operation
fnmadd.h f29, f5, f20, f14, rmm # perform operation
fnmadd.h f29, f5, f20, f14, rne # perform operation
fnmadd.h f29, f5, f20, f14, rtz # perform operation
fnmadd.h f29, f5, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f5, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f5, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f5, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f5, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f5, f20, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f19, 0(x2) # load 0x000003ff from memory into f19
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f12, 0(x2) # load 0x0000fc00 from memory into f12
la x2, scratch
li x3, 0xbb340b22aabee335 # load x3 with value 0xbb340b22aabee335
sw x3, 0(x2) # store 0xbb340b22aabee335 in memory
flh f30, 0(x2) # load 0xbb340b22aabee335 from memory into f30
fnmadd.h f20, f19, f12, f30, dyn # perform operation
fnmadd.h f20, f19, f12, f30, rdn # perform operation
fnmadd.h f20, f19, f12, f30, rmm # perform operation
fnmadd.h f20, f19, f12, f30, rne # perform operation
fnmadd.h f20, f19, f12, f30, rtz # perform operation
fnmadd.h f20, f19, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f19, f12, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f9, 0(x2) # load 0x00007e00 from memory into f9
la x2, scratch
li x3, 0xd26d17349920e075 # load x3 with value 0xd26d17349920e075
sw x3, 0(x2) # store 0xd26d17349920e075 in memory
flh f23, 0(x2) # load 0xd26d17349920e075 from memory into f23
fnmadd.h f2, f20, f9, f23, dyn # perform operation
fnmadd.h f2, f20, f9, f23, rdn # perform operation
fnmadd.h f2, f20, f9, f23, rmm # perform operation
fnmadd.h f2, f20, f9, f23, rne # perform operation
fnmadd.h f2, f20, f9, f23, rtz # perform operation
fnmadd.h f2, f20, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f20, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f20, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f20, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f20, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f20, f9, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f16, 0(x2) # load 0x000003ff from memory into f16
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f11, 0(x2) # load 0x00007fff from memory into f11
la x2, scratch
li x3, 0xcfe624441b152b8f # load x3 with value 0xcfe624441b152b8f
sw x3, 0(x2) # store 0xcfe624441b152b8f in memory
flh f24, 0(x2) # load 0xcfe624441b152b8f from memory into f24
fnmadd.h f7, f16, f11, f24, dyn # perform operation
fnmadd.h f7, f16, f11, f24, rdn # perform operation
fnmadd.h f7, f16, f11, f24, rmm # perform operation
fnmadd.h f7, f16, f11, f24, rne # perform operation
fnmadd.h f7, f16, f11, f24, rtz # perform operation
fnmadd.h f7, f16, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f16, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f16, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f16, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f16, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f16, f11, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f25, 0(x2) # load 0x000003ff from memory into f25
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f7, 0(x2) # load 0x0000fe00 from memory into f7
la x2, scratch
li x3, 0xf8dd085395f68567 # load x3 with value 0xf8dd085395f68567
sw x3, 0(x2) # store 0xf8dd085395f68567 in memory
flh f3, 0(x2) # load 0xf8dd085395f68567 from memory into f3
fnmadd.h f31, f25, f7, f3, dyn # perform operation
fnmadd.h f31, f25, f7, f3, rdn # perform operation
fnmadd.h f31, f25, f7, f3, rmm # perform operation
fnmadd.h f31, f25, f7, f3, rne # perform operation
fnmadd.h f31, f25, f7, f3, rtz # perform operation
fnmadd.h f31, f25, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f25, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f25, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f25, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f25, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f25, f7, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f6, 0(x2) # load 0x000003ff from memory into f6
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f7, 0(x2) # load 0x00007c01 from memory into f7
la x2, scratch
li x3, 0xe635f96d70a0e5f2 # load x3 with value 0xe635f96d70a0e5f2
sw x3, 0(x2) # store 0xe635f96d70a0e5f2 in memory
flh f22, 0(x2) # load 0xe635f96d70a0e5f2 from memory into f22
fnmadd.h f26, f6, f7, f22, dyn # perform operation
fnmadd.h f26, f6, f7, f22, rdn # perform operation
fnmadd.h f26, f6, f7, f22, rmm # perform operation
fnmadd.h f26, f6, f7, f22, rne # perform operation
fnmadd.h f26, f6, f7, f22, rtz # perform operation
fnmadd.h f26, f6, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f6, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f6, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f6, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f6, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f6, f7, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f17, 0(x2) # load 0x000003ff from memory into f17
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f8, 0(x2) # load 0x00007dff from memory into f8
la x2, scratch
li x3, 0x298772a3029ab9e3 # load x3 with value 0x298772a3029ab9e3
sw x3, 0(x2) # store 0x298772a3029ab9e3 in memory
flh f3, 0(x2) # load 0x298772a3029ab9e3 from memory into f3
fnmadd.h f25, f17, f8, f3, dyn # perform operation
fnmadd.h f25, f17, f8, f3, rdn # perform operation
fnmadd.h f25, f17, f8, f3, rmm # perform operation
fnmadd.h f25, f17, f8, f3, rne # perform operation
fnmadd.h f25, f17, f8, f3, rtz # perform operation
fnmadd.h f25, f17, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f17, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f17, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f17, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f17, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f17, f8, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f5, 0(x2) # load 0x0000fc01 from memory into f5
la x2, scratch
li x3, 0xd84f0667227eee67 # load x3 with value 0xd84f0667227eee67
sw x3, 0(x2) # store 0xd84f0667227eee67 in memory
flh f12, 0(x2) # load 0xd84f0667227eee67 from memory into f12
fnmadd.h f9, f15, f5, f12, dyn # perform operation
fnmadd.h f9, f15, f5, f12, rdn # perform operation
fnmadd.h f9, f15, f5, f12, rmm # perform operation
fnmadd.h f9, f15, f5, f12, rne # perform operation
fnmadd.h f9, f15, f5, f12, rtz # perform operation
fnmadd.h f9, f15, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f15, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f15, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f15, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f15, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f15, f5, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f26, 0(x2) # load 0x000003ff from memory into f26
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f3, 0(x2) # load 0x000058b4 from memory into f3
la x2, scratch
li x3, 0x442f422182282d8b # load x3 with value 0x442f422182282d8b
sw x3, 0(x2) # store 0x442f422182282d8b in memory
flh f21, 0(x2) # load 0x442f422182282d8b from memory into f21
fnmadd.h f14, f26, f3, f21, dyn # perform operation
fnmadd.h f14, f26, f3, f21, rdn # perform operation
fnmadd.h f14, f26, f3, f21, rmm # perform operation
fnmadd.h f14, f26, f3, f21, rne # perform operation
fnmadd.h f14, f26, f3, f21, rtz # perform operation
fnmadd.h f14, f26, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f26, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f26, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f26, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f26, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f26, f3, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f2, 0(x2) # load 0x0000c93a from memory into f2
la x2, scratch
li x3, 0xd81ae48f83520a8b # load x3 with value 0xd81ae48f83520a8b
sw x3, 0(x2) # store 0xd81ae48f83520a8b in memory
flh f25, 0(x2) # load 0xd81ae48f83520a8b from memory into f25
fnmadd.h f5, f15, f2, f25, dyn # perform operation
fnmadd.h f5, f15, f2, f25, rdn # perform operation
fnmadd.h f5, f15, f2, f25, rmm # perform operation
fnmadd.h f5, f15, f2, f25, rne # perform operation
fnmadd.h f5, f15, f2, f25, rtz # perform operation
fnmadd.h f5, f15, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f15, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f15, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f15, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f15, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f15, f2, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f16, 0(x2) # load 0x000083ff from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0xa945850c03eb3297 # load x3 with value 0xa945850c03eb3297
sw x3, 0(x2) # store 0xa945850c03eb3297 in memory
flh f17, 0(x2) # load 0xa945850c03eb3297 from memory into f17
fnmadd.h f18, f16, f29, f17, dyn # perform operation
fnmadd.h f18, f16, f29, f17, rdn # perform operation
fnmadd.h f18, f16, f29, f17, rmm # perform operation
fnmadd.h f18, f16, f29, f17, rne # perform operation
fnmadd.h f18, f16, f29, f17, rtz # perform operation
fnmadd.h f18, f16, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f16, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f16, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f16, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f16, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f16, f29, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f26, 0(x2) # load 0x000083ff from memory into f26
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f13, 0(x2) # load 0x00008000 from memory into f13
la x2, scratch
li x3, 0x2b16e13e494811aa # load x3 with value 0x2b16e13e494811aa
sw x3, 0(x2) # store 0x2b16e13e494811aa in memory
flh f18, 0(x2) # load 0x2b16e13e494811aa from memory into f18
fnmadd.h f11, f26, f13, f18, dyn # perform operation
fnmadd.h f11, f26, f13, f18, rdn # perform operation
fnmadd.h f11, f26, f13, f18, rmm # perform operation
fnmadd.h f11, f26, f13, f18, rne # perform operation
fnmadd.h f11, f26, f13, f18, rtz # perform operation
fnmadd.h f11, f26, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f26, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f26, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f26, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f26, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f26, f13, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f29, 0(x2) # load 0x000083ff from memory into f29
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f12, 0(x2) # load 0x00003c00 from memory into f12
la x2, scratch
li x3, 0x8f0024e2c15110b0 # load x3 with value 0x8f0024e2c15110b0
sw x3, 0(x2) # store 0x8f0024e2c15110b0 in memory
flh f8, 0(x2) # load 0x8f0024e2c15110b0 from memory into f8
fnmadd.h f28, f29, f12, f8, dyn # perform operation
fnmadd.h f28, f29, f12, f8, rdn # perform operation
fnmadd.h f28, f29, f12, f8, rmm # perform operation
fnmadd.h f28, f29, f12, f8, rne # perform operation
fnmadd.h f28, f29, f12, f8, rtz # perform operation
fnmadd.h f28, f29, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f29, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f29, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f29, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f29, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f29, f12, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f29, 0(x2) # load 0x000083ff from memory into f29
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f10, 0(x2) # load 0x0000bc00 from memory into f10
la x2, scratch
li x3, 0xab92e868b82a8177 # load x3 with value 0xab92e868b82a8177
sw x3, 0(x2) # store 0xab92e868b82a8177 in memory
flh f3, 0(x2) # load 0xab92e868b82a8177 from memory into f3
fnmadd.h f15, f29, f10, f3, dyn # perform operation
fnmadd.h f15, f29, f10, f3, rdn # perform operation
fnmadd.h f15, f29, f10, f3, rmm # perform operation
fnmadd.h f15, f29, f10, f3, rne # perform operation
fnmadd.h f15, f29, f10, f3, rtz # perform operation
fnmadd.h f15, f29, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f29, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f29, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f29, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f29, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f29, f10, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f23, 0(x2) # load 0x000083ff from memory into f23
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
la x2, scratch
li x3, 0xde3b79d38dcfa32c # load x3 with value 0xde3b79d38dcfa32c
sw x3, 0(x2) # store 0xde3b79d38dcfa32c in memory
flh f19, 0(x2) # load 0xde3b79d38dcfa32c from memory into f19
fnmadd.h f22, f23, f21, f19, dyn # perform operation
fnmadd.h f22, f23, f21, f19, rdn # perform operation
fnmadd.h f22, f23, f21, f19, rmm # perform operation
fnmadd.h f22, f23, f21, f19, rne # perform operation
fnmadd.h f22, f23, f21, f19, rtz # perform operation
fnmadd.h f22, f23, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f23, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f23, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f23, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f23, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f23, f21, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f19, 0(x2) # load 0x0000be00 from memory into f19
la x2, scratch
li x3, 0x8402457fc7301c30 # load x3 with value 0x8402457fc7301c30
sw x3, 0(x2) # store 0x8402457fc7301c30 in memory
flh f10, 0(x2) # load 0x8402457fc7301c30 from memory into f10
fnmadd.h f12, f17, f19, f10, dyn # perform operation
fnmadd.h f12, f17, f19, f10, rdn # perform operation
fnmadd.h f12, f17, f19, f10, rmm # perform operation
fnmadd.h f12, f17, f19, f10, rne # perform operation
fnmadd.h f12, f17, f19, f10, rtz # perform operation
fnmadd.h f12, f17, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f17, f19, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f23, 0(x2) # load 0x000083ff from memory into f23
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f10, 0(x2) # load 0x00004000 from memory into f10
la x2, scratch
li x3, 0xccb31eafd89702e3 # load x3 with value 0xccb31eafd89702e3
sw x3, 0(x2) # store 0xccb31eafd89702e3 in memory
flh f15, 0(x2) # load 0xccb31eafd89702e3 from memory into f15
fnmadd.h f13, f23, f10, f15, dyn # perform operation
fnmadd.h f13, f23, f10, f15, rdn # perform operation
fnmadd.h f13, f23, f10, f15, rmm # perform operation
fnmadd.h f13, f23, f10, f15, rne # perform operation
fnmadd.h f13, f23, f10, f15, rtz # perform operation
fnmadd.h f13, f23, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f23, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f23, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f23, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f23, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f23, f10, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f25, 0(x2) # load 0x000083ff from memory into f25
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f11, 0(x2) # load 0x0000c000 from memory into f11
la x2, scratch
li x3, 0xcfc7e264e0291d6c # load x3 with value 0xcfc7e264e0291d6c
sw x3, 0(x2) # store 0xcfc7e264e0291d6c in memory
flh f8, 0(x2) # load 0xcfc7e264e0291d6c from memory into f8
fnmadd.h f19, f25, f11, f8, dyn # perform operation
fnmadd.h f19, f25, f11, f8, rdn # perform operation
fnmadd.h f19, f25, f11, f8, rmm # perform operation
fnmadd.h f19, f25, f11, f8, rne # perform operation
fnmadd.h f19, f25, f11, f8, rtz # perform operation
fnmadd.h f19, f25, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f25, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f25, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f25, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f25, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f25, f11, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f23, 0(x2) # load 0x000083ff from memory into f23
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f17, 0(x2) # load 0x00000400 from memory into f17
la x2, scratch
li x3, 0x343741878439c48c # load x3 with value 0x343741878439c48c
sw x3, 0(x2) # store 0x343741878439c48c in memory
flh f28, 0(x2) # load 0x343741878439c48c from memory into f28
fnmadd.h f26, f23, f17, f28, dyn # perform operation
fnmadd.h f26, f23, f17, f28, rdn # perform operation
fnmadd.h f26, f23, f17, f28, rmm # perform operation
fnmadd.h f26, f23, f17, f28, rne # perform operation
fnmadd.h f26, f23, f17, f28, rtz # perform operation
fnmadd.h f26, f23, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f23, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f23, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f23, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f23, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f23, f17, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f15, 0(x2) # load 0x000083ff from memory into f15
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f23, 0(x2) # load 0x00008400 from memory into f23
la x2, scratch
li x3, 0x8f897be8686332ae # load x3 with value 0x8f897be8686332ae
sw x3, 0(x2) # store 0x8f897be8686332ae in memory
flh f9, 0(x2) # load 0x8f897be8686332ae from memory into f9
fnmadd.h f27, f15, f23, f9, dyn # perform operation
fnmadd.h f27, f15, f23, f9, rdn # perform operation
fnmadd.h f27, f15, f23, f9, rmm # perform operation
fnmadd.h f27, f15, f23, f9, rne # perform operation
fnmadd.h f27, f15, f23, f9, rtz # perform operation
fnmadd.h f27, f15, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f15, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f15, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f15, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f15, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f15, f23, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f6, 0(x2) # load 0x000083ff from memory into f6
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f22, 0(x2) # load 0x00007bff from memory into f22
la x2, scratch
li x3, 0xc7a3a7a1b53de1bf # load x3 with value 0xc7a3a7a1b53de1bf
sw x3, 0(x2) # store 0xc7a3a7a1b53de1bf in memory
flh f27, 0(x2) # load 0xc7a3a7a1b53de1bf from memory into f27
fnmadd.h f20, f6, f22, f27, dyn # perform operation
fnmadd.h f20, f6, f22, f27, rdn # perform operation
fnmadd.h f20, f6, f22, f27, rmm # perform operation
fnmadd.h f20, f6, f22, f27, rne # perform operation
fnmadd.h f20, f6, f22, f27, rtz # perform operation
fnmadd.h f20, f6, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f6, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f6, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f6, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f6, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f6, f22, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f28, 0(x2) # load 0x000083ff from memory into f28
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f19, 0(x2) # load 0x0000fbff from memory into f19
la x2, scratch
li x3, 0x83ff48f4da071dce # load x3 with value 0x83ff48f4da071dce
sw x3, 0(x2) # store 0x83ff48f4da071dce in memory
flh f13, 0(x2) # load 0x83ff48f4da071dce from memory into f13
fnmadd.h f5, f28, f19, f13, dyn # perform operation
fnmadd.h f5, f28, f19, f13, rdn # perform operation
fnmadd.h f5, f28, f19, f13, rmm # perform operation
fnmadd.h f5, f28, f19, f13, rne # perform operation
fnmadd.h f5, f28, f19, f13, rtz # perform operation
fnmadd.h f5, f28, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f28, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f28, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f28, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f28, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f28, f19, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f2, 0(x2) # load 0x000083ff from memory into f2
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
la x2, scratch
li x3, 0x94b136fe44108273 # load x3 with value 0x94b136fe44108273
sw x3, 0(x2) # store 0x94b136fe44108273 in memory
flh f22, 0(x2) # load 0x94b136fe44108273 from memory into f22
fnmadd.h f21, f2, f15, f22, dyn # perform operation
fnmadd.h f21, f2, f15, f22, rdn # perform operation
fnmadd.h f21, f2, f15, f22, rmm # perform operation
fnmadd.h f21, f2, f15, f22, rne # perform operation
fnmadd.h f21, f2, f15, f22, rtz # perform operation
fnmadd.h f21, f2, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f2, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f2, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f2, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f2, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f2, f15, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f30, 0(x2) # load 0x000083ff from memory into f30
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f29, 0(x2) # load 0x000083ff from memory into f29
la x2, scratch
li x3, 0x315f4eedb458916c # load x3 with value 0x315f4eedb458916c
sw x3, 0(x2) # store 0x315f4eedb458916c in memory
flh f9, 0(x2) # load 0x315f4eedb458916c from memory into f9
fnmadd.h f14, f30, f29, f9, dyn # perform operation
fnmadd.h f14, f30, f29, f9, rdn # perform operation
fnmadd.h f14, f30, f29, f9, rmm # perform operation
fnmadd.h f14, f30, f29, f9, rne # perform operation
fnmadd.h f14, f30, f29, f9, rtz # perform operation
fnmadd.h f14, f30, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f30, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f30, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f30, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f30, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f30, f29, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
la x2, scratch
li x3, 0x5e836db2990906a3 # load x3 with value 0x5e836db2990906a3
sw x3, 0(x2) # store 0x5e836db2990906a3 in memory
flh f10, 0(x2) # load 0x5e836db2990906a3 from memory into f10
fnmadd.h f11, f17, f19, f10, dyn # perform operation
fnmadd.h f11, f17, f19, f10, rdn # perform operation
fnmadd.h f11, f17, f19, f10, rmm # perform operation
fnmadd.h f11, f17, f19, f10, rne # perform operation
fnmadd.h f11, f17, f19, f10, rtz # perform operation
fnmadd.h f11, f17, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f17, f19, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f25, 0(x2) # load 0x000083ff from memory into f25
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f8, 0(x2) # load 0x00008200 from memory into f8
la x2, scratch
li x3, 0xde35713ad429d498 # load x3 with value 0xde35713ad429d498
sw x3, 0(x2) # store 0xde35713ad429d498 in memory
flh f23, 0(x2) # load 0xde35713ad429d498 from memory into f23
fnmadd.h f22, f25, f8, f23, dyn # perform operation
fnmadd.h f22, f25, f8, f23, rdn # perform operation
fnmadd.h f22, f25, f8, f23, rmm # perform operation
fnmadd.h f22, f25, f8, f23, rne # perform operation
fnmadd.h f22, f25, f8, f23, rtz # perform operation
fnmadd.h f22, f25, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f25, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f25, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f25, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f25, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f25, f8, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f13, 0(x2) # load 0x000083ff from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x141d2565c61878bb # load x3 with value 0x141d2565c61878bb
sw x3, 0(x2) # store 0x141d2565c61878bb in memory
flh f2, 0(x2) # load 0x141d2565c61878bb from memory into f2
fnmadd.h f22, f13, f12, f2, dyn # perform operation
fnmadd.h f22, f13, f12, f2, rdn # perform operation
fnmadd.h f22, f13, f12, f2, rmm # perform operation
fnmadd.h f22, f13, f12, f2, rne # perform operation
fnmadd.h f22, f13, f12, f2, rtz # perform operation
fnmadd.h f22, f13, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f13, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f13, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f13, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f13, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f13, f12, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f9, 0(x2) # load 0x000083ff from memory into f9
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f29, 0(x2) # load 0x00008001 from memory into f29
la x2, scratch
li x3, 0x540240d9f8c4e7f5 # load x3 with value 0x540240d9f8c4e7f5
sw x3, 0(x2) # store 0x540240d9f8c4e7f5 in memory
flh f14, 0(x2) # load 0x540240d9f8c4e7f5 from memory into f14
fnmadd.h f21, f9, f29, f14, dyn # perform operation
fnmadd.h f21, f9, f29, f14, rdn # perform operation
fnmadd.h f21, f9, f29, f14, rmm # perform operation
fnmadd.h f21, f9, f29, f14, rne # perform operation
fnmadd.h f21, f9, f29, f14, rtz # perform operation
fnmadd.h f21, f9, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f9, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f9, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f9, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f9, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f9, f29, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f28, 0(x2) # load 0x000083ff from memory into f28
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f12, 0(x2) # load 0x00007c00 from memory into f12
la x2, scratch
li x3, 0x274fb117ed086e0b # load x3 with value 0x274fb117ed086e0b
sw x3, 0(x2) # store 0x274fb117ed086e0b in memory
flh f13, 0(x2) # load 0x274fb117ed086e0b from memory into f13
fnmadd.h f30, f28, f12, f13, dyn # perform operation
fnmadd.h f30, f28, f12, f13, rdn # perform operation
fnmadd.h f30, f28, f12, f13, rmm # perform operation
fnmadd.h f30, f28, f12, f13, rne # perform operation
fnmadd.h f30, f28, f12, f13, rtz # perform operation
fnmadd.h f30, f28, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f28, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f28, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f28, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f28, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f28, f12, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f28, 0(x2) # load 0x000083ff from memory into f28
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f31, 0(x2) # load 0x0000fc00 from memory into f31
la x2, scratch
li x3, 0x20e6452f88efc65d # load x3 with value 0x20e6452f88efc65d
sw x3, 0(x2) # store 0x20e6452f88efc65d in memory
flh f1, 0(x2) # load 0x20e6452f88efc65d from memory into f1
fnmadd.h f12, f28, f31, f1, dyn # perform operation
fnmadd.h f12, f28, f31, f1, rdn # perform operation
fnmadd.h f12, f28, f31, f1, rmm # perform operation
fnmadd.h f12, f28, f31, f1, rne # perform operation
fnmadd.h f12, f28, f31, f1, rtz # perform operation
fnmadd.h f12, f28, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f28, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f28, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f28, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f28, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f28, f31, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f15, 0(x2) # load 0x000083ff from memory into f15
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
la x2, scratch
li x3, 0x4ad84b6fb25d75e8 # load x3 with value 0x4ad84b6fb25d75e8
sw x3, 0(x2) # store 0x4ad84b6fb25d75e8 in memory
flh f24, 0(x2) # load 0x4ad84b6fb25d75e8 from memory into f24
fnmadd.h f8, f15, f18, f24, dyn # perform operation
fnmadd.h f8, f15, f18, f24, rdn # perform operation
fnmadd.h f8, f15, f18, f24, rmm # perform operation
fnmadd.h f8, f15, f18, f24, rne # perform operation
fnmadd.h f8, f15, f18, f24, rtz # perform operation
fnmadd.h f8, f15, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f15, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f15, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f15, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f15, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f15, f18, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f12, 0(x2) # load 0x000083ff from memory into f12
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f26, 0(x2) # load 0x00007fff from memory into f26
la x2, scratch
li x3, 0xca8f9b746019393a # load x3 with value 0xca8f9b746019393a
sw x3, 0(x2) # store 0xca8f9b746019393a in memory
flh f25, 0(x2) # load 0xca8f9b746019393a from memory into f25
fnmadd.h f22, f12, f26, f25, dyn # perform operation
fnmadd.h f22, f12, f26, f25, rdn # perform operation
fnmadd.h f22, f12, f26, f25, rmm # perform operation
fnmadd.h f22, f12, f26, f25, rne # perform operation
fnmadd.h f22, f12, f26, f25, rtz # perform operation
fnmadd.h f22, f12, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f12, f26, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f10, 0(x2) # load 0x000083ff from memory into f10
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f9, 0(x2) # load 0x0000fe00 from memory into f9
la x2, scratch
li x3, 0x70092898d4311f65 # load x3 with value 0x70092898d4311f65
sw x3, 0(x2) # store 0x70092898d4311f65 in memory
flh f16, 0(x2) # load 0x70092898d4311f65 from memory into f16
fnmadd.h f6, f10, f9, f16, dyn # perform operation
fnmadd.h f6, f10, f9, f16, rdn # perform operation
fnmadd.h f6, f10, f9, f16, rmm # perform operation
fnmadd.h f6, f10, f9, f16, rne # perform operation
fnmadd.h f6, f10, f9, f16, rtz # perform operation
fnmadd.h f6, f10, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f10, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f10, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f10, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f10, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f10, f9, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f12, 0(x2) # load 0x000083ff from memory into f12
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
la x2, scratch
li x3, 0xe64e5ba6437c3d36 # load x3 with value 0xe64e5ba6437c3d36
sw x3, 0(x2) # store 0xe64e5ba6437c3d36 in memory
flh f3, 0(x2) # load 0xe64e5ba6437c3d36 from memory into f3
fnmadd.h f27, f12, f30, f3, dyn # perform operation
fnmadd.h f27, f12, f30, f3, rdn # perform operation
fnmadd.h f27, f12, f30, f3, rmm # perform operation
fnmadd.h f27, f12, f30, f3, rne # perform operation
fnmadd.h f27, f12, f30, f3, rtz # perform operation
fnmadd.h f27, f12, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f12, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f12, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f12, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f12, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f12, f30, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f21, 0(x2) # load 0x000083ff from memory into f21
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f23, 0(x2) # load 0x00007dff from memory into f23
la x2, scratch
li x3, 0xa7996f94bcc6e0e1 # load x3 with value 0xa7996f94bcc6e0e1
sw x3, 0(x2) # store 0xa7996f94bcc6e0e1 in memory
flh f20, 0(x2) # load 0xa7996f94bcc6e0e1 from memory into f20
fnmadd.h f19, f21, f23, f20, dyn # perform operation
fnmadd.h f19, f21, f23, f20, rdn # perform operation
fnmadd.h f19, f21, f23, f20, rmm # perform operation
fnmadd.h f19, f21, f23, f20, rne # perform operation
fnmadd.h f19, f21, f23, f20, rtz # perform operation
fnmadd.h f19, f21, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f21, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f21, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f21, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f21, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f21, f23, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f5, 0(x2) # load 0x000083ff from memory into f5
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f10, 0(x2) # load 0x0000fc01 from memory into f10
la x2, scratch
li x3, 0x15840dbdcca0aedb # load x3 with value 0x15840dbdcca0aedb
sw x3, 0(x2) # store 0x15840dbdcca0aedb in memory
flh f23, 0(x2) # load 0x15840dbdcca0aedb from memory into f23
fnmadd.h f19, f5, f10, f23, dyn # perform operation
fnmadd.h f19, f5, f10, f23, rdn # perform operation
fnmadd.h f19, f5, f10, f23, rmm # perform operation
fnmadd.h f19, f5, f10, f23, rne # perform operation
fnmadd.h f19, f5, f10, f23, rtz # perform operation
fnmadd.h f19, f5, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f5, f10, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f20, 0(x2) # load 0x000083ff from memory into f20
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
la x2, scratch
li x3, 0x8b8b0510a474f168 # load x3 with value 0x8b8b0510a474f168
sw x3, 0(x2) # store 0x8b8b0510a474f168 in memory
flh f29, 0(x2) # load 0x8b8b0510a474f168 from memory into f29
fnmadd.h f27, f20, f21, f29, dyn # perform operation
fnmadd.h f27, f20, f21, f29, rdn # perform operation
fnmadd.h f27, f20, f21, f29, rmm # perform operation
fnmadd.h f27, f20, f21, f29, rne # perform operation
fnmadd.h f27, f20, f21, f29, rtz # perform operation
fnmadd.h f27, f20, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f20, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f20, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f20, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f20, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f20, f21, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f3, 0(x2) # load 0x000083ff from memory into f3
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f25, 0(x2) # load 0x0000c93a from memory into f25
la x2, scratch
li x3, 0xcc3efe09e5ec2779 # load x3 with value 0xcc3efe09e5ec2779
sw x3, 0(x2) # store 0xcc3efe09e5ec2779 in memory
flh f8, 0(x2) # load 0xcc3efe09e5ec2779 from memory into f8
fnmadd.h f18, f3, f25, f8, dyn # perform operation
fnmadd.h f18, f3, f25, f8, rdn # perform operation
fnmadd.h f18, f3, f25, f8, rmm # perform operation
fnmadd.h f18, f3, f25, f8, rne # perform operation
fnmadd.h f18, f3, f25, f8, rtz # perform operation
fnmadd.h f18, f3, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f3, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f3, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f3, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f3, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f3, f25, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f16, 0(x2) # load 0x00000200 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0xb6e4cddbcd165ad6 # load x3 with value 0xb6e4cddbcd165ad6
sw x3, 0(x2) # store 0xb6e4cddbcd165ad6 in memory
flh f27, 0(x2) # load 0xb6e4cddbcd165ad6 from memory into f27
fnmadd.h f9, f16, f7, f27, dyn # perform operation
fnmadd.h f9, f16, f7, f27, rdn # perform operation
fnmadd.h f9, f16, f7, f27, rmm # perform operation
fnmadd.h f9, f16, f7, f27, rne # perform operation
fnmadd.h f9, f16, f7, f27, rtz # perform operation
fnmadd.h f9, f16, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f16, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f16, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f16, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f16, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f16, f7, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f1, 0(x2) # load 0x00000200 from memory into f1
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f16, 0(x2) # load 0x00008000 from memory into f16
la x2, scratch
li x3, 0xe17c3a74081ef8e4 # load x3 with value 0xe17c3a74081ef8e4
sw x3, 0(x2) # store 0xe17c3a74081ef8e4 in memory
flh f25, 0(x2) # load 0xe17c3a74081ef8e4 from memory into f25
fnmadd.h f5, f1, f16, f25, dyn # perform operation
fnmadd.h f5, f1, f16, f25, rdn # perform operation
fnmadd.h f5, f1, f16, f25, rmm # perform operation
fnmadd.h f5, f1, f16, f25, rne # perform operation
fnmadd.h f5, f1, f16, f25, rtz # perform operation
fnmadd.h f5, f1, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f1, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f1, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f1, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f1, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f1, f16, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f3, 0(x2) # load 0x00000200 from memory into f3
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f25, 0(x2) # load 0x00003c00 from memory into f25
la x2, scratch
li x3, 0x1cc2e618fbaf67ac # load x3 with value 0x1cc2e618fbaf67ac
sw x3, 0(x2) # store 0x1cc2e618fbaf67ac in memory
flh f14, 0(x2) # load 0x1cc2e618fbaf67ac from memory into f14
fnmadd.h f29, f3, f25, f14, dyn # perform operation
fnmadd.h f29, f3, f25, f14, rdn # perform operation
fnmadd.h f29, f3, f25, f14, rmm # perform operation
fnmadd.h f29, f3, f25, f14, rne # perform operation
fnmadd.h f29, f3, f25, f14, rtz # perform operation
fnmadd.h f29, f3, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f3, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f3, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f3, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f3, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f3, f25, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f9, 0(x2) # load 0x00000200 from memory into f9
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f15, 0(x2) # load 0x0000bc00 from memory into f15
la x2, scratch
li x3, 0x22b15fb12d0b157b # load x3 with value 0x22b15fb12d0b157b
sw x3, 0(x2) # store 0x22b15fb12d0b157b in memory
flh f28, 0(x2) # load 0x22b15fb12d0b157b from memory into f28
fnmadd.h f30, f9, f15, f28, dyn # perform operation
fnmadd.h f30, f9, f15, f28, rdn # perform operation
fnmadd.h f30, f9, f15, f28, rmm # perform operation
fnmadd.h f30, f9, f15, f28, rne # perform operation
fnmadd.h f30, f9, f15, f28, rtz # perform operation
fnmadd.h f30, f9, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f9, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f9, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f9, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f9, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f9, f15, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f30, 0(x2) # load 0x00000200 from memory into f30
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f9, 0(x2) # load 0x00003e00 from memory into f9
la x2, scratch
li x3, 0xaa4ca2e04cfbd235 # load x3 with value 0xaa4ca2e04cfbd235
sw x3, 0(x2) # store 0xaa4ca2e04cfbd235 in memory
flh f16, 0(x2) # load 0xaa4ca2e04cfbd235 from memory into f16
fnmadd.h f7, f30, f9, f16, dyn # perform operation
fnmadd.h f7, f30, f9, f16, rdn # perform operation
fnmadd.h f7, f30, f9, f16, rmm # perform operation
fnmadd.h f7, f30, f9, f16, rne # perform operation
fnmadd.h f7, f30, f9, f16, rtz # perform operation
fnmadd.h f7, f30, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f30, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f30, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f30, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f30, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f30, f9, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
la x2, scratch
li x3, 0x390ac2c148c0fe33 # load x3 with value 0x390ac2c148c0fe33
sw x3, 0(x2) # store 0x390ac2c148c0fe33 in memory
flh f15, 0(x2) # load 0x390ac2c148c0fe33 from memory into f15
fnmadd.h f10, f24, f14, f15, dyn # perform operation
fnmadd.h f10, f24, f14, f15, rdn # perform operation
fnmadd.h f10, f24, f14, f15, rmm # perform operation
fnmadd.h f10, f24, f14, f15, rne # perform operation
fnmadd.h f10, f24, f14, f15, rtz # perform operation
fnmadd.h f10, f24, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f24, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f24, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f24, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f24, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f24, f14, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f16, 0(x2) # load 0x00004000 from memory into f16
la x2, scratch
li x3, 0xa4154a61cf8a57a9 # load x3 with value 0xa4154a61cf8a57a9
sw x3, 0(x2) # store 0xa4154a61cf8a57a9 in memory
flh f21, 0(x2) # load 0xa4154a61cf8a57a9 from memory into f21
fnmadd.h f25, f24, f16, f21, dyn # perform operation
fnmadd.h f25, f24, f16, f21, rdn # perform operation
fnmadd.h f25, f24, f16, f21, rmm # perform operation
fnmadd.h f25, f24, f16, f21, rne # perform operation
fnmadd.h f25, f24, f16, f21, rtz # perform operation
fnmadd.h f25, f24, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f24, f16, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f5, 0(x2) # load 0x00000200 from memory into f5
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f23, 0(x2) # load 0x0000c000 from memory into f23
la x2, scratch
li x3, 0x497071a1373b6427 # load x3 with value 0x497071a1373b6427
sw x3, 0(x2) # store 0x497071a1373b6427 in memory
flh f10, 0(x2) # load 0x497071a1373b6427 from memory into f10
fnmadd.h f22, f5, f23, f10, dyn # perform operation
fnmadd.h f22, f5, f23, f10, rdn # perform operation
fnmadd.h f22, f5, f23, f10, rmm # perform operation
fnmadd.h f22, f5, f23, f10, rne # perform operation
fnmadd.h f22, f5, f23, f10, rtz # perform operation
fnmadd.h f22, f5, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f5, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f5, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f5, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f5, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f5, f23, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f30, 0(x2) # load 0x00000400 from memory into f30
la x2, scratch
li x3, 0x53b0e819107589ed # load x3 with value 0x53b0e819107589ed
sw x3, 0(x2) # store 0x53b0e819107589ed in memory
flh f3, 0(x2) # load 0x53b0e819107589ed from memory into f3
fnmadd.h f25, f24, f30, f3, dyn # perform operation
fnmadd.h f25, f24, f30, f3, rdn # perform operation
fnmadd.h f25, f24, f30, f3, rmm # perform operation
fnmadd.h f25, f24, f30, f3, rne # perform operation
fnmadd.h f25, f24, f30, f3, rtz # perform operation
fnmadd.h f25, f24, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f24, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f24, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f24, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f24, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f24, f30, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f20, 0(x2) # load 0x00000200 from memory into f20
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f19, 0(x2) # load 0x00008400 from memory into f19
la x2, scratch
li x3, 0x3da3348e9692ec30 # load x3 with value 0x3da3348e9692ec30
sw x3, 0(x2) # store 0x3da3348e9692ec30 in memory
flh f31, 0(x2) # load 0x3da3348e9692ec30 from memory into f31
fnmadd.h f25, f20, f19, f31, dyn # perform operation
fnmadd.h f25, f20, f19, f31, rdn # perform operation
fnmadd.h f25, f20, f19, f31, rmm # perform operation
fnmadd.h f25, f20, f19, f31, rne # perform operation
fnmadd.h f25, f20, f19, f31, rtz # perform operation
fnmadd.h f25, f20, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f20, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f20, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f20, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f20, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f20, f19, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f30, 0(x2) # load 0x00000200 from memory into f30
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f14, 0(x2) # load 0x00007bff from memory into f14
la x2, scratch
li x3, 0x8a4ea399f963f2cb # load x3 with value 0x8a4ea399f963f2cb
sw x3, 0(x2) # store 0x8a4ea399f963f2cb in memory
flh f25, 0(x2) # load 0x8a4ea399f963f2cb from memory into f25
fnmadd.h f31, f30, f14, f25, dyn # perform operation
fnmadd.h f31, f30, f14, f25, rdn # perform operation
fnmadd.h f31, f30, f14, f25, rmm # perform operation
fnmadd.h f31, f30, f14, f25, rne # perform operation
fnmadd.h f31, f30, f14, f25, rtz # perform operation
fnmadd.h f31, f30, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f30, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f30, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f30, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f30, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f30, f14, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f21, 0(x2) # load 0x00000200 from memory into f21
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f26, 0(x2) # load 0x0000fbff from memory into f26
la x2, scratch
li x3, 0x3c4ee9dfe5052878 # load x3 with value 0x3c4ee9dfe5052878
sw x3, 0(x2) # store 0x3c4ee9dfe5052878 in memory
flh f5, 0(x2) # load 0x3c4ee9dfe5052878 from memory into f5
fnmadd.h f11, f21, f26, f5, dyn # perform operation
fnmadd.h f11, f21, f26, f5, rdn # perform operation
fnmadd.h f11, f21, f26, f5, rmm # perform operation
fnmadd.h f11, f21, f26, f5, rne # perform operation
fnmadd.h f11, f21, f26, f5, rtz # perform operation
fnmadd.h f11, f21, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f21, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f21, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f21, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f21, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f21, f26, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f28, 0(x2) # load 0x00000200 from memory into f28
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f2, 0(x2) # load 0x000003ff from memory into f2
la x2, scratch
li x3, 0xab1dc5c54a6ca17a # load x3 with value 0xab1dc5c54a6ca17a
sw x3, 0(x2) # store 0xab1dc5c54a6ca17a in memory
flh f13, 0(x2) # load 0xab1dc5c54a6ca17a from memory into f13
fnmadd.h f29, f28, f2, f13, dyn # perform operation
fnmadd.h f29, f28, f2, f13, rdn # perform operation
fnmadd.h f29, f28, f2, f13, rmm # perform operation
fnmadd.h f29, f28, f2, f13, rne # perform operation
fnmadd.h f29, f28, f2, f13, rtz # perform operation
fnmadd.h f29, f28, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f28, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f28, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f28, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f28, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f28, f2, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f30, 0(x2) # load 0x00000200 from memory into f30
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f27, 0(x2) # load 0x000083ff from memory into f27
la x2, scratch
li x3, 0x273edba96ba529ba # load x3 with value 0x273edba96ba529ba
sw x3, 0(x2) # store 0x273edba96ba529ba in memory
flh f25, 0(x2) # load 0x273edba96ba529ba from memory into f25
fnmadd.h f13, f30, f27, f25, dyn # perform operation
fnmadd.h f13, f30, f27, f25, rdn # perform operation
fnmadd.h f13, f30, f27, f25, rmm # perform operation
fnmadd.h f13, f30, f27, f25, rne # perform operation
fnmadd.h f13, f30, f27, f25, rtz # perform operation
fnmadd.h f13, f30, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f30, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f30, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f30, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f30, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f30, f27, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f22, 0(x2) # load 0x00000200 from memory into f22
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f12, 0(x2) # load 0x00000200 from memory into f12
la x2, scratch
li x3, 0x893a894f85e3c0b5 # load x3 with value 0x893a894f85e3c0b5
sw x3, 0(x2) # store 0x893a894f85e3c0b5 in memory
flh f8, 0(x2) # load 0x893a894f85e3c0b5 from memory into f8
fnmadd.h f30, f22, f12, f8, dyn # perform operation
fnmadd.h f30, f22, f12, f8, rdn # perform operation
fnmadd.h f30, f22, f12, f8, rmm # perform operation
fnmadd.h f30, f22, f12, f8, rne # perform operation
fnmadd.h f30, f22, f12, f8, rtz # perform operation
fnmadd.h f30, f22, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f22, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f22, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f22, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f22, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f22, f12, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f9, 0(x2) # load 0x00000200 from memory into f9
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
la x2, scratch
li x3, 0x331e9278687ea6c4 # load x3 with value 0x331e9278687ea6c4
sw x3, 0(x2) # store 0x331e9278687ea6c4 in memory
flh f2, 0(x2) # load 0x331e9278687ea6c4 from memory into f2
fnmadd.h f7, f9, f17, f2, dyn # perform operation
fnmadd.h f7, f9, f17, f2, rdn # perform operation
fnmadd.h f7, f9, f17, f2, rmm # perform operation
fnmadd.h f7, f9, f17, f2, rne # perform operation
fnmadd.h f7, f9, f17, f2, rtz # perform operation
fnmadd.h f7, f9, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f9, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f9, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f9, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f9, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f9, f17, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f21, 0(x2) # load 0x00000200 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0xd930290e1a575ca3 # load x3 with value 0xd930290e1a575ca3
sw x3, 0(x2) # store 0xd930290e1a575ca3 in memory
flh f6, 0(x2) # load 0xd930290e1a575ca3 from memory into f6
fnmadd.h f22, f21, f31, f6, dyn # perform operation
fnmadd.h f22, f21, f31, f6, rdn # perform operation
fnmadd.h f22, f21, f31, f6, rmm # perform operation
fnmadd.h f22, f21, f31, f6, rne # perform operation
fnmadd.h f22, f21, f31, f6, rtz # perform operation
fnmadd.h f22, f21, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f21, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f21, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f21, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f21, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f21, f31, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f8, 0(x2) # load 0x00000200 from memory into f8
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f27, 0(x2) # load 0x00008001 from memory into f27
la x2, scratch
li x3, 0xb3043b9f84fb748f # load x3 with value 0xb3043b9f84fb748f
sw x3, 0(x2) # store 0xb3043b9f84fb748f in memory
flh f28, 0(x2) # load 0xb3043b9f84fb748f from memory into f28
fnmadd.h f22, f8, f27, f28, dyn # perform operation
fnmadd.h f22, f8, f27, f28, rdn # perform operation
fnmadd.h f22, f8, f27, f28, rmm # perform operation
fnmadd.h f22, f8, f27, f28, rne # perform operation
fnmadd.h f22, f8, f27, f28, rtz # perform operation
fnmadd.h f22, f8, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f8, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f8, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f8, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f8, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f8, f27, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f10, 0(x2) # load 0x00000200 from memory into f10
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f27, 0(x2) # load 0x00007c00 from memory into f27
la x2, scratch
li x3, 0xace91b24377d4343 # load x3 with value 0xace91b24377d4343
sw x3, 0(x2) # store 0xace91b24377d4343 in memory
flh f3, 0(x2) # load 0xace91b24377d4343 from memory into f3
fnmadd.h f23, f10, f27, f3, dyn # perform operation
fnmadd.h f23, f10, f27, f3, rdn # perform operation
fnmadd.h f23, f10, f27, f3, rmm # perform operation
fnmadd.h f23, f10, f27, f3, rne # perform operation
fnmadd.h f23, f10, f27, f3, rtz # perform operation
fnmadd.h f23, f10, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f10, f27, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f12, 0(x2) # load 0x0000fc00 from memory into f12
la x2, scratch
li x3, 0x8102661823dd783d # load x3 with value 0x8102661823dd783d
sw x3, 0(x2) # store 0x8102661823dd783d in memory
flh f1, 0(x2) # load 0x8102661823dd783d from memory into f1
fnmadd.h f22, f13, f12, f1, dyn # perform operation
fnmadd.h f22, f13, f12, f1, rdn # perform operation
fnmadd.h f22, f13, f12, f1, rmm # perform operation
fnmadd.h f22, f13, f12, f1, rne # perform operation
fnmadd.h f22, f13, f12, f1, rtz # perform operation
fnmadd.h f22, f13, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f13, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f13, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f13, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f13, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f13, f12, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f3, 0(x2) # load 0x00000200 from memory into f3
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f27, 0(x2) # load 0x00007e00 from memory into f27
la x2, scratch
li x3, 0x4bf5b28f6e674455 # load x3 with value 0x4bf5b28f6e674455
sw x3, 0(x2) # store 0x4bf5b28f6e674455 in memory
flh f31, 0(x2) # load 0x4bf5b28f6e674455 from memory into f31
fnmadd.h f22, f3, f27, f31, dyn # perform operation
fnmadd.h f22, f3, f27, f31, rdn # perform operation
fnmadd.h f22, f3, f27, f31, rmm # perform operation
fnmadd.h f22, f3, f27, f31, rne # perform operation
fnmadd.h f22, f3, f27, f31, rtz # perform operation
fnmadd.h f22, f3, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f3, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f3, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f3, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f3, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f3, f27, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f26, 0(x2) # load 0x00000200 from memory into f26
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f11, 0(x2) # load 0x00007fff from memory into f11
la x2, scratch
li x3, 0x972cadb12300951a # load x3 with value 0x972cadb12300951a
sw x3, 0(x2) # store 0x972cadb12300951a in memory
flh f5, 0(x2) # load 0x972cadb12300951a from memory into f5
fnmadd.h f14, f26, f11, f5, dyn # perform operation
fnmadd.h f14, f26, f11, f5, rdn # perform operation
fnmadd.h f14, f26, f11, f5, rmm # perform operation
fnmadd.h f14, f26, f11, f5, rne # perform operation
fnmadd.h f14, f26, f11, f5, rtz # perform operation
fnmadd.h f14, f26, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f26, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f26, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f26, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f26, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f26, f11, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f15, 0(x2) # load 0x0000fe00 from memory into f15
la x2, scratch
li x3, 0x68c66ee35d4b1ef4 # load x3 with value 0x68c66ee35d4b1ef4
sw x3, 0(x2) # store 0x68c66ee35d4b1ef4 in memory
flh f9, 0(x2) # load 0x68c66ee35d4b1ef4 from memory into f9
fnmadd.h f10, f19, f15, f9, dyn # perform operation
fnmadd.h f10, f19, f15, f9, rdn # perform operation
fnmadd.h f10, f19, f15, f9, rmm # perform operation
fnmadd.h f10, f19, f15, f9, rne # perform operation
fnmadd.h f10, f19, f15, f9, rtz # perform operation
fnmadd.h f10, f19, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f19, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f19, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f19, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f19, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f19, f15, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f1, 0(x2) # load 0x00000200 from memory into f1
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f19, 0(x2) # load 0x00007c01 from memory into f19
la x2, scratch
li x3, 0x748f3369ff9d2260 # load x3 with value 0x748f3369ff9d2260
sw x3, 0(x2) # store 0x748f3369ff9d2260 in memory
flh f15, 0(x2) # load 0x748f3369ff9d2260 from memory into f15
fnmadd.h f13, f1, f19, f15, dyn # perform operation
fnmadd.h f13, f1, f19, f15, rdn # perform operation
fnmadd.h f13, f1, f19, f15, rmm # perform operation
fnmadd.h f13, f1, f19, f15, rne # perform operation
fnmadd.h f13, f1, f19, f15, rtz # perform operation
fnmadd.h f13, f1, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f1, f19, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f10, 0(x2) # load 0x00000200 from memory into f10
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f20, 0(x2) # load 0x00007dff from memory into f20
la x2, scratch
li x3, 0x3a1dd044402e5224 # load x3 with value 0x3a1dd044402e5224
sw x3, 0(x2) # store 0x3a1dd044402e5224 in memory
flh f18, 0(x2) # load 0x3a1dd044402e5224 from memory into f18
fnmadd.h f13, f10, f20, f18, dyn # perform operation
fnmadd.h f13, f10, f20, f18, rdn # perform operation
fnmadd.h f13, f10, f20, f18, rmm # perform operation
fnmadd.h f13, f10, f20, f18, rne # perform operation
fnmadd.h f13, f10, f20, f18, rtz # perform operation
fnmadd.h f13, f10, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f10, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f10, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f10, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f10, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f10, f20, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f30, 0(x2) # load 0x00000200 from memory into f30
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f29, 0(x2) # load 0x0000fc01 from memory into f29
la x2, scratch
li x3, 0xa1ab43262b4e614c # load x3 with value 0xa1ab43262b4e614c
sw x3, 0(x2) # store 0xa1ab43262b4e614c in memory
flh f16, 0(x2) # load 0xa1ab43262b4e614c from memory into f16
fnmadd.h f27, f30, f29, f16, dyn # perform operation
fnmadd.h f27, f30, f29, f16, rdn # perform operation
fnmadd.h f27, f30, f29, f16, rmm # perform operation
fnmadd.h f27, f30, f29, f16, rne # perform operation
fnmadd.h f27, f30, f29, f16, rtz # perform operation
fnmadd.h f27, f30, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f30, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f30, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f30, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f30, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f30, f29, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f20, 0(x2) # load 0x00000200 from memory into f20
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f7, 0(x2) # load 0x000058b4 from memory into f7
la x2, scratch
li x3, 0xee30ba477ac599b0 # load x3 with value 0xee30ba477ac599b0
sw x3, 0(x2) # store 0xee30ba477ac599b0 in memory
flh f21, 0(x2) # load 0xee30ba477ac599b0 from memory into f21
fnmadd.h f6, f20, f7, f21, dyn # perform operation
fnmadd.h f6, f20, f7, f21, rdn # perform operation
fnmadd.h f6, f20, f7, f21, rmm # perform operation
fnmadd.h f6, f20, f7, f21, rne # perform operation
fnmadd.h f6, f20, f7, f21, rtz # perform operation
fnmadd.h f6, f20, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f20, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f20, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f20, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f20, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f20, f7, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f8, 0(x2) # load 0x0000c93a from memory into f8
la x2, scratch
li x3, 0x696e3b5348bced88 # load x3 with value 0x696e3b5348bced88
sw x3, 0(x2) # store 0x696e3b5348bced88 in memory
flh f25, 0(x2) # load 0x696e3b5348bced88 from memory into f25
fnmadd.h f14, f24, f8, f25, dyn # perform operation
fnmadd.h f14, f24, f8, f25, rdn # perform operation
fnmadd.h f14, f24, f8, f25, rmm # perform operation
fnmadd.h f14, f24, f8, f25, rne # perform operation
fnmadd.h f14, f24, f8, f25, rtz # perform operation
fnmadd.h f14, f24, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f24, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f24, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f24, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f24, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f24, f8, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0xfec64070f29ab328 # load x3 with value 0xfec64070f29ab328
sw x3, 0(x2) # store 0xfec64070f29ab328 in memory
flh f13, 0(x2) # load 0xfec64070f29ab328 from memory into f13
fnmadd.h f9, f6, f15, f13, dyn # perform operation
fnmadd.h f9, f6, f15, f13, rdn # perform operation
fnmadd.h f9, f6, f15, f13, rmm # perform operation
fnmadd.h f9, f6, f15, f13, rne # perform operation
fnmadd.h f9, f6, f15, f13, rtz # perform operation
fnmadd.h f9, f6, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f6, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f6, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f6, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f6, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f6, f15, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f23, 0(x2) # load 0x00008200 from memory into f23
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f3, 0(x2) # load 0x00008000 from memory into f3
la x2, scratch
li x3, 0x6820eedc425578bb # load x3 with value 0x6820eedc425578bb
sw x3, 0(x2) # store 0x6820eedc425578bb in memory
flh f9, 0(x2) # load 0x6820eedc425578bb from memory into f9
fnmadd.h f15, f23, f3, f9, dyn # perform operation
fnmadd.h f15, f23, f3, f9, rdn # perform operation
fnmadd.h f15, f23, f3, f9, rmm # perform operation
fnmadd.h f15, f23, f3, f9, rne # perform operation
fnmadd.h f15, f23, f3, f9, rtz # perform operation
fnmadd.h f15, f23, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f23, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f23, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f23, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f23, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f23, f3, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f16, 0(x2) # load 0x00008200 from memory into f16
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f19, 0(x2) # load 0x00003c00 from memory into f19
la x2, scratch
li x3, 0xdf68fd54f14ffd2e # load x3 with value 0xdf68fd54f14ffd2e
sw x3, 0(x2) # store 0xdf68fd54f14ffd2e in memory
flh f5, 0(x2) # load 0xdf68fd54f14ffd2e from memory into f5
fnmadd.h f9, f16, f19, f5, dyn # perform operation
fnmadd.h f9, f16, f19, f5, rdn # perform operation
fnmadd.h f9, f16, f19, f5, rmm # perform operation
fnmadd.h f9, f16, f19, f5, rne # perform operation
fnmadd.h f9, f16, f19, f5, rtz # perform operation
fnmadd.h f9, f16, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f16, f19, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f23, 0(x2) # load 0x00008200 from memory into f23
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f16, 0(x2) # load 0x0000bc00 from memory into f16
la x2, scratch
li x3, 0x82151f940d6adef3 # load x3 with value 0x82151f940d6adef3
sw x3, 0(x2) # store 0x82151f940d6adef3 in memory
flh f30, 0(x2) # load 0x82151f940d6adef3 from memory into f30
fnmadd.h f2, f23, f16, f30, dyn # perform operation
fnmadd.h f2, f23, f16, f30, rdn # perform operation
fnmadd.h f2, f23, f16, f30, rmm # perform operation
fnmadd.h f2, f23, f16, f30, rne # perform operation
fnmadd.h f2, f23, f16, f30, rtz # perform operation
fnmadd.h f2, f23, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f23, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f23, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f23, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f23, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f23, f16, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f25, 0(x2) # load 0x00008200 from memory into f25
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f23, 0(x2) # load 0x00003e00 from memory into f23
la x2, scratch
li x3, 0x24dd986000e12e9b # load x3 with value 0x24dd986000e12e9b
sw x3, 0(x2) # store 0x24dd986000e12e9b in memory
flh f11, 0(x2) # load 0x24dd986000e12e9b from memory into f11
fnmadd.h f18, f25, f23, f11, dyn # perform operation
fnmadd.h f18, f25, f23, f11, rdn # perform operation
fnmadd.h f18, f25, f23, f11, rmm # perform operation
fnmadd.h f18, f25, f23, f11, rne # perform operation
fnmadd.h f18, f25, f23, f11, rtz # perform operation
fnmadd.h f18, f25, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f25, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f25, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f25, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f25, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f25, f23, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f28, 0(x2) # load 0x00008200 from memory into f28
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f5, 0(x2) # load 0x0000be00 from memory into f5
la x2, scratch
li x3, 0x56b4922c11340b86 # load x3 with value 0x56b4922c11340b86
sw x3, 0(x2) # store 0x56b4922c11340b86 in memory
flh f22, 0(x2) # load 0x56b4922c11340b86 from memory into f22
fnmadd.h f27, f28, f5, f22, dyn # perform operation
fnmadd.h f27, f28, f5, f22, rdn # perform operation
fnmadd.h f27, f28, f5, f22, rmm # perform operation
fnmadd.h f27, f28, f5, f22, rne # perform operation
fnmadd.h f27, f28, f5, f22, rtz # perform operation
fnmadd.h f27, f28, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f28, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f28, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f28, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f28, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f28, f5, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f1, 0(x2) # load 0x00008200 from memory into f1
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
la x2, scratch
li x3, 0x2a53d2fd4d975ae7 # load x3 with value 0x2a53d2fd4d975ae7
sw x3, 0(x2) # store 0x2a53d2fd4d975ae7 in memory
flh f26, 0(x2) # load 0x2a53d2fd4d975ae7 from memory into f26
fnmadd.h f31, f1, f23, f26, dyn # perform operation
fnmadd.h f31, f1, f23, f26, rdn # perform operation
fnmadd.h f31, f1, f23, f26, rmm # perform operation
fnmadd.h f31, f1, f23, f26, rne # perform operation
fnmadd.h f31, f1, f23, f26, rtz # perform operation
fnmadd.h f31, f1, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f1, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f1, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f1, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f1, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f1, f23, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f5, 0(x2) # load 0x00008200 from memory into f5
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f10, 0(x2) # load 0x0000c000 from memory into f10
la x2, scratch
li x3, 0x6a9895d5d85ebf80 # load x3 with value 0x6a9895d5d85ebf80
sw x3, 0(x2) # store 0x6a9895d5d85ebf80 in memory
flh f22, 0(x2) # load 0x6a9895d5d85ebf80 from memory into f22
fnmadd.h f13, f5, f10, f22, dyn # perform operation
fnmadd.h f13, f5, f10, f22, rdn # perform operation
fnmadd.h f13, f5, f10, f22, rmm # perform operation
fnmadd.h f13, f5, f10, f22, rne # perform operation
fnmadd.h f13, f5, f10, f22, rtz # perform operation
fnmadd.h f13, f5, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f5, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f5, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f5, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f5, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f5, f10, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f9, 0(x2) # load 0x00008200 from memory into f9
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f24, 0(x2) # load 0x00000400 from memory into f24
la x2, scratch
li x3, 0x87b1da21c5802695 # load x3 with value 0x87b1da21c5802695
sw x3, 0(x2) # store 0x87b1da21c5802695 in memory
flh f2, 0(x2) # load 0x87b1da21c5802695 from memory into f2
fnmadd.h f16, f9, f24, f2, dyn # perform operation
fnmadd.h f16, f9, f24, f2, rdn # perform operation
fnmadd.h f16, f9, f24, f2, rmm # perform operation
fnmadd.h f16, f9, f24, f2, rne # perform operation
fnmadd.h f16, f9, f24, f2, rtz # perform operation
fnmadd.h f16, f9, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f9, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f9, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f9, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f9, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f9, f24, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f31, 0(x2) # load 0x00008200 from memory into f31
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f12, 0(x2) # load 0x00008400 from memory into f12
la x2, scratch
li x3, 0x30a13a232aab1c4e # load x3 with value 0x30a13a232aab1c4e
sw x3, 0(x2) # store 0x30a13a232aab1c4e in memory
flh f8, 0(x2) # load 0x30a13a232aab1c4e from memory into f8
fnmadd.h f25, f31, f12, f8, dyn # perform operation
fnmadd.h f25, f31, f12, f8, rdn # perform operation
fnmadd.h f25, f31, f12, f8, rmm # perform operation
fnmadd.h f25, f31, f12, f8, rne # perform operation
fnmadd.h f25, f31, f12, f8, rtz # perform operation
fnmadd.h f25, f31, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f31, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f31, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f31, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f31, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f31, f12, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f8, 0(x2) # load 0x00008200 from memory into f8
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f29, 0(x2) # load 0x00007bff from memory into f29
la x2, scratch
li x3, 0xedcb63a98afef5d2 # load x3 with value 0xedcb63a98afef5d2
sw x3, 0(x2) # store 0xedcb63a98afef5d2 in memory
flh f1, 0(x2) # load 0xedcb63a98afef5d2 from memory into f1
fnmadd.h f10, f8, f29, f1, dyn # perform operation
fnmadd.h f10, f8, f29, f1, rdn # perform operation
fnmadd.h f10, f8, f29, f1, rmm # perform operation
fnmadd.h f10, f8, f29, f1, rne # perform operation
fnmadd.h f10, f8, f29, f1, rtz # perform operation
fnmadd.h f10, f8, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f8, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f8, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f8, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f8, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f8, f29, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f9, 0(x2) # load 0x00008200 from memory into f9
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f2, 0(x2) # load 0x0000fbff from memory into f2
la x2, scratch
li x3, 0xa1edc890e5da423b # load x3 with value 0xa1edc890e5da423b
sw x3, 0(x2) # store 0xa1edc890e5da423b in memory
flh f6, 0(x2) # load 0xa1edc890e5da423b from memory into f6
fnmadd.h f13, f9, f2, f6, dyn # perform operation
fnmadd.h f13, f9, f2, f6, rdn # perform operation
fnmadd.h f13, f9, f2, f6, rmm # perform operation
fnmadd.h f13, f9, f2, f6, rne # perform operation
fnmadd.h f13, f9, f2, f6, rtz # perform operation
fnmadd.h f13, f9, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f9, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f9, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f9, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f9, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f9, f2, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f13, 0(x2) # load 0x00008200 from memory into f13
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f19, 0(x2) # load 0x000003ff from memory into f19
la x2, scratch
li x3, 0x6f2dd6f66b528d1d # load x3 with value 0x6f2dd6f66b528d1d
sw x3, 0(x2) # store 0x6f2dd6f66b528d1d in memory
flh f11, 0(x2) # load 0x6f2dd6f66b528d1d from memory into f11
fnmadd.h f24, f13, f19, f11, dyn # perform operation
fnmadd.h f24, f13, f19, f11, rdn # perform operation
fnmadd.h f24, f13, f19, f11, rmm # perform operation
fnmadd.h f24, f13, f19, f11, rne # perform operation
fnmadd.h f24, f13, f19, f11, rtz # perform operation
fnmadd.h f24, f13, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f13, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f13, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f13, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f13, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f13, f19, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f27, 0(x2) # load 0x00008200 from memory into f27
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
la x2, scratch
li x3, 0x6988bdfdbb037338 # load x3 with value 0x6988bdfdbb037338
sw x3, 0(x2) # store 0x6988bdfdbb037338 in memory
flh f14, 0(x2) # load 0x6988bdfdbb037338 from memory into f14
fnmadd.h f19, f27, f17, f14, dyn # perform operation
fnmadd.h f19, f27, f17, f14, rdn # perform operation
fnmadd.h f19, f27, f17, f14, rmm # perform operation
fnmadd.h f19, f27, f17, f14, rne # perform operation
fnmadd.h f19, f27, f17, f14, rtz # perform operation
fnmadd.h f19, f27, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f27, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f27, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f27, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f27, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f27, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f13, 0(x2) # load 0x00008200 from memory into f13
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f7, 0(x2) # load 0x00000200 from memory into f7
la x2, scratch
li x3, 0x8f90a79cbfab4774 # load x3 with value 0x8f90a79cbfab4774
sw x3, 0(x2) # store 0x8f90a79cbfab4774 in memory
flh f27, 0(x2) # load 0x8f90a79cbfab4774 from memory into f27
fnmadd.h f29, f13, f7, f27, dyn # perform operation
fnmadd.h f29, f13, f7, f27, rdn # perform operation
fnmadd.h f29, f13, f7, f27, rmm # perform operation
fnmadd.h f29, f13, f7, f27, rne # perform operation
fnmadd.h f29, f13, f7, f27, rtz # perform operation
fnmadd.h f29, f13, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f13, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f13, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f13, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f13, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f13, f7, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f26, 0(x2) # load 0x00008200 from memory into f26
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f27, 0(x2) # load 0x00008200 from memory into f27
la x2, scratch
li x3, 0x33e70ec02d0d59f0 # load x3 with value 0x33e70ec02d0d59f0
sw x3, 0(x2) # store 0x33e70ec02d0d59f0 in memory
flh f1, 0(x2) # load 0x33e70ec02d0d59f0 from memory into f1
fnmadd.h f16, f26, f27, f1, dyn # perform operation
fnmadd.h f16, f26, f27, f1, rdn # perform operation
fnmadd.h f16, f26, f27, f1, rmm # perform operation
fnmadd.h f16, f26, f27, f1, rne # perform operation
fnmadd.h f16, f26, f27, f1, rtz # perform operation
fnmadd.h f16, f26, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f26, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f26, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f26, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f26, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f26, f27, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f8, 0(x2) # load 0x00008200 from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x2fb7e52d6e0f5211 # load x3 with value 0x2fb7e52d6e0f5211
sw x3, 0(x2) # store 0x2fb7e52d6e0f5211 in memory
flh f2, 0(x2) # load 0x2fb7e52d6e0f5211 from memory into f2
fnmadd.h f3, f8, f17, f2, dyn # perform operation
fnmadd.h f3, f8, f17, f2, rdn # perform operation
fnmadd.h f3, f8, f17, f2, rmm # perform operation
fnmadd.h f3, f8, f17, f2, rne # perform operation
fnmadd.h f3, f8, f17, f2, rtz # perform operation
fnmadd.h f3, f8, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f8, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f8, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f8, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f8, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f8, f17, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f31, 0(x2) # load 0x00008200 from memory into f31
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f23, 0(x2) # load 0x00008001 from memory into f23
la x2, scratch
li x3, 0xb89934b4bb63c635 # load x3 with value 0xb89934b4bb63c635
sw x3, 0(x2) # store 0xb89934b4bb63c635 in memory
flh f9, 0(x2) # load 0xb89934b4bb63c635 from memory into f9
fnmadd.h f13, f31, f23, f9, dyn # perform operation
fnmadd.h f13, f31, f23, f9, rdn # perform operation
fnmadd.h f13, f31, f23, f9, rmm # perform operation
fnmadd.h f13, f31, f23, f9, rne # perform operation
fnmadd.h f13, f31, f23, f9, rtz # perform operation
fnmadd.h f13, f31, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f31, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f31, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f31, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f31, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f31, f23, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f31, 0(x2) # load 0x00008200 from memory into f31
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f24, 0(x2) # load 0x00007c00 from memory into f24
la x2, scratch
li x3, 0xef94445195438f2f # load x3 with value 0xef94445195438f2f
sw x3, 0(x2) # store 0xef94445195438f2f in memory
flh f25, 0(x2) # load 0xef94445195438f2f from memory into f25
fnmadd.h f10, f31, f24, f25, dyn # perform operation
fnmadd.h f10, f31, f24, f25, rdn # perform operation
fnmadd.h f10, f31, f24, f25, rmm # perform operation
fnmadd.h f10, f31, f24, f25, rne # perform operation
fnmadd.h f10, f31, f24, f25, rtz # perform operation
fnmadd.h f10, f31, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f31, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f31, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f31, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f31, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f31, f24, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f14, 0(x2) # load 0x00008200 from memory into f14
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f2, 0(x2) # load 0x0000fc00 from memory into f2
la x2, scratch
li x3, 0x43afc1001f62d8ae # load x3 with value 0x43afc1001f62d8ae
sw x3, 0(x2) # store 0x43afc1001f62d8ae in memory
flh f27, 0(x2) # load 0x43afc1001f62d8ae from memory into f27
fnmadd.h f6, f14, f2, f27, dyn # perform operation
fnmadd.h f6, f14, f2, f27, rdn # perform operation
fnmadd.h f6, f14, f2, f27, rmm # perform operation
fnmadd.h f6, f14, f2, f27, rne # perform operation
fnmadd.h f6, f14, f2, f27, rtz # perform operation
fnmadd.h f6, f14, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f14, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f14, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f14, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f14, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f14, f2, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f2, 0(x2) # load 0x00008200 from memory into f2
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
la x2, scratch
li x3, 0x2b97e8ca225dd33b # load x3 with value 0x2b97e8ca225dd33b
sw x3, 0(x2) # store 0x2b97e8ca225dd33b in memory
flh f28, 0(x2) # load 0x2b97e8ca225dd33b from memory into f28
fnmadd.h f31, f2, f18, f28, dyn # perform operation
fnmadd.h f31, f2, f18, f28, rdn # perform operation
fnmadd.h f31, f2, f18, f28, rmm # perform operation
fnmadd.h f31, f2, f18, f28, rne # perform operation
fnmadd.h f31, f2, f18, f28, rtz # perform operation
fnmadd.h f31, f2, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f2, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f2, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f2, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f2, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f2, f18, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f29, 0(x2) # load 0x00008200 from memory into f29
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f18, 0(x2) # load 0x00007fff from memory into f18
la x2, scratch
li x3, 0x872567ee3a915ff8 # load x3 with value 0x872567ee3a915ff8
sw x3, 0(x2) # store 0x872567ee3a915ff8 in memory
flh f8, 0(x2) # load 0x872567ee3a915ff8 from memory into f8
fnmadd.h f23, f29, f18, f8, dyn # perform operation
fnmadd.h f23, f29, f18, f8, rdn # perform operation
fnmadd.h f23, f29, f18, f8, rmm # perform operation
fnmadd.h f23, f29, f18, f8, rne # perform operation
fnmadd.h f23, f29, f18, f8, rtz # perform operation
fnmadd.h f23, f29, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f29, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f29, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f29, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f29, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f29, f18, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f22, 0(x2) # load 0x00008200 from memory into f22
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f3, 0(x2) # load 0x0000fe00 from memory into f3
la x2, scratch
li x3, 0xe0259a775da174a4 # load x3 with value 0xe0259a775da174a4
sw x3, 0(x2) # store 0xe0259a775da174a4 in memory
flh f11, 0(x2) # load 0xe0259a775da174a4 from memory into f11
fnmadd.h f20, f22, f3, f11, dyn # perform operation
fnmadd.h f20, f22, f3, f11, rdn # perform operation
fnmadd.h f20, f22, f3, f11, rmm # perform operation
fnmadd.h f20, f22, f3, f11, rne # perform operation
fnmadd.h f20, f22, f3, f11, rtz # perform operation
fnmadd.h f20, f22, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f22, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f22, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f22, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f22, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f22, f3, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f28, 0(x2) # load 0x00007c01 from memory into f28
la x2, scratch
li x3, 0x2201bc4c37983d3a # load x3 with value 0x2201bc4c37983d3a
sw x3, 0(x2) # store 0x2201bc4c37983d3a in memory
flh f23, 0(x2) # load 0x2201bc4c37983d3a from memory into f23
fnmadd.h f26, f6, f28, f23, dyn # perform operation
fnmadd.h f26, f6, f28, f23, rdn # perform operation
fnmadd.h f26, f6, f28, f23, rmm # perform operation
fnmadd.h f26, f6, f28, f23, rne # perform operation
fnmadd.h f26, f6, f28, f23, rtz # perform operation
fnmadd.h f26, f6, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f6, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f6, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f6, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f6, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f6, f28, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f14, 0(x2) # load 0x00008200 from memory into f14
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f22, 0(x2) # load 0x00007dff from memory into f22
la x2, scratch
li x3, 0xcd0ff23f3b79eea7 # load x3 with value 0xcd0ff23f3b79eea7
sw x3, 0(x2) # store 0xcd0ff23f3b79eea7 in memory
flh f21, 0(x2) # load 0xcd0ff23f3b79eea7 from memory into f21
fnmadd.h f29, f14, f22, f21, dyn # perform operation
fnmadd.h f29, f14, f22, f21, rdn # perform operation
fnmadd.h f29, f14, f22, f21, rmm # perform operation
fnmadd.h f29, f14, f22, f21, rne # perform operation
fnmadd.h f29, f14, f22, f21, rtz # perform operation
fnmadd.h f29, f14, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f14, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f14, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f14, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f14, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f14, f22, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f25, 0(x2) # load 0x00008200 from memory into f25
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f11, 0(x2) # load 0x0000fc01 from memory into f11
la x2, scratch
li x3, 0xfef738622b150d70 # load x3 with value 0xfef738622b150d70
sw x3, 0(x2) # store 0xfef738622b150d70 in memory
flh f18, 0(x2) # load 0xfef738622b150d70 from memory into f18
fnmadd.h f19, f25, f11, f18, dyn # perform operation
fnmadd.h f19, f25, f11, f18, rdn # perform operation
fnmadd.h f19, f25, f11, f18, rmm # perform operation
fnmadd.h f19, f25, f11, f18, rne # perform operation
fnmadd.h f19, f25, f11, f18, rtz # perform operation
fnmadd.h f19, f25, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f25, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f25, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f25, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f25, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f25, f11, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f11, 0(x2) # load 0x00008200 from memory into f11
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f3, 0(x2) # load 0x000058b4 from memory into f3
la x2, scratch
li x3, 0xf0af4bcf05561689 # load x3 with value 0xf0af4bcf05561689
sw x3, 0(x2) # store 0xf0af4bcf05561689 in memory
flh f8, 0(x2) # load 0xf0af4bcf05561689 from memory into f8
fnmadd.h f27, f11, f3, f8, dyn # perform operation
fnmadd.h f27, f11, f3, f8, rdn # perform operation
fnmadd.h f27, f11, f3, f8, rmm # perform operation
fnmadd.h f27, f11, f3, f8, rne # perform operation
fnmadd.h f27, f11, f3, f8, rtz # perform operation
fnmadd.h f27, f11, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f11, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f11, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f11, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f11, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f11, f3, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f30, 0(x2) # load 0x00008200 from memory into f30
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f10, 0(x2) # load 0x0000c93a from memory into f10
la x2, scratch
li x3, 0xef5db3a2eea58174 # load x3 with value 0xef5db3a2eea58174
sw x3, 0(x2) # store 0xef5db3a2eea58174 in memory
flh f18, 0(x2) # load 0xef5db3a2eea58174 from memory into f18
fnmadd.h f27, f30, f10, f18, dyn # perform operation
fnmadd.h f27, f30, f10, f18, rdn # perform operation
fnmadd.h f27, f30, f10, f18, rmm # perform operation
fnmadd.h f27, f30, f10, f18, rne # perform operation
fnmadd.h f27, f30, f10, f18, rtz # perform operation
fnmadd.h f27, f30, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f30, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f30, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f30, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f30, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f30, f10, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x488c538f7d9f218 # load x3 with value 0x488c538f7d9f218
sw x3, 0(x2) # store 0x488c538f7d9f218 in memory
flh f1, 0(x2) # load 0x488c538f7d9f218 from memory into f1
fnmadd.h f9, f27, f5, f1, dyn # perform operation
fnmadd.h f9, f27, f5, f1, rdn # perform operation
fnmadd.h f9, f27, f5, f1, rmm # perform operation
fnmadd.h f9, f27, f5, f1, rne # perform operation
fnmadd.h f9, f27, f5, f1, rtz # perform operation
fnmadd.h f9, f27, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f27, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f27, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f27, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f27, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f27, f5, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f30, 0(x2) # load 0x00008000 from memory into f30
la x2, scratch
li x3, 0xb93632dfc18510b5 # load x3 with value 0xb93632dfc18510b5
sw x3, 0(x2) # store 0xb93632dfc18510b5 in memory
flh f14, 0(x2) # load 0xb93632dfc18510b5 from memory into f14
fnmadd.h f5, f27, f30, f14, dyn # perform operation
fnmadd.h f5, f27, f30, f14, rdn # perform operation
fnmadd.h f5, f27, f30, f14, rmm # perform operation
fnmadd.h f5, f27, f30, f14, rne # perform operation
fnmadd.h f5, f27, f30, f14, rtz # perform operation
fnmadd.h f5, f27, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f27, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f27, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f27, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f27, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f27, f30, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
la x2, scratch
li x3, 0xe8ab6fc303a579ca # load x3 with value 0xe8ab6fc303a579ca
sw x3, 0(x2) # store 0xe8ab6fc303a579ca in memory
flh f22, 0(x2) # load 0xe8ab6fc303a579ca from memory into f22
fnmadd.h f29, f5, f8, f22, dyn # perform operation
fnmadd.h f29, f5, f8, f22, rdn # perform operation
fnmadd.h f29, f5, f8, f22, rmm # perform operation
fnmadd.h f29, f5, f8, f22, rne # perform operation
fnmadd.h f29, f5, f8, f22, rtz # perform operation
fnmadd.h f29, f5, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f5, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f5, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f5, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f5, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f5, f8, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f27, 0(x2) # load 0x0000bc00 from memory into f27
la x2, scratch
li x3, 0xc45b13333178189 # load x3 with value 0xc45b13333178189
sw x3, 0(x2) # store 0xc45b13333178189 in memory
flh f6, 0(x2) # load 0xc45b13333178189 from memory into f6
fnmadd.h f13, f22, f27, f6, dyn # perform operation
fnmadd.h f13, f22, f27, f6, rdn # perform operation
fnmadd.h f13, f22, f27, f6, rmm # perform operation
fnmadd.h f13, f22, f27, f6, rne # perform operation
fnmadd.h f13, f22, f27, f6, rtz # perform operation
fnmadd.h f13, f22, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f22, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f22, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f22, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f22, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f22, f27, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f1, 0(x2) # load 0x00003e00 from memory into f1
la x2, scratch
li x3, 0x1d46fb00bf9f5a7e # load x3 with value 0x1d46fb00bf9f5a7e
sw x3, 0(x2) # store 0x1d46fb00bf9f5a7e in memory
flh f14, 0(x2) # load 0x1d46fb00bf9f5a7e from memory into f14
fnmadd.h f18, f10, f1, f14, dyn # perform operation
fnmadd.h f18, f10, f1, f14, rdn # perform operation
fnmadd.h f18, f10, f1, f14, rmm # perform operation
fnmadd.h f18, f10, f1, f14, rne # perform operation
fnmadd.h f18, f10, f1, f14, rtz # perform operation
fnmadd.h f18, f10, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f10, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f10, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f10, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f10, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f10, f1, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f19, 0(x2) # load 0x0000be00 from memory into f19
la x2, scratch
li x3, 0x5e6e04ea30177391 # load x3 with value 0x5e6e04ea30177391
sw x3, 0(x2) # store 0x5e6e04ea30177391 in memory
flh f23, 0(x2) # load 0x5e6e04ea30177391 from memory into f23
fnmadd.h f12, f9, f19, f23, dyn # perform operation
fnmadd.h f12, f9, f19, f23, rdn # perform operation
fnmadd.h f12, f9, f19, f23, rmm # perform operation
fnmadd.h f12, f9, f19, f23, rne # perform operation
fnmadd.h f12, f9, f19, f23, rtz # perform operation
fnmadd.h f12, f9, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f9, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f9, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f9, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f9, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f9, f19, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f7, 0(x2) # load 0x00004000 from memory into f7
la x2, scratch
li x3, 0xbc67f062d8f637a1 # load x3 with value 0xbc67f062d8f637a1
sw x3, 0(x2) # store 0xbc67f062d8f637a1 in memory
flh f22, 0(x2) # load 0xbc67f062d8f637a1 from memory into f22
fnmadd.h f20, f3, f7, f22, dyn # perform operation
fnmadd.h f20, f3, f7, f22, rdn # perform operation
fnmadd.h f20, f3, f7, f22, rmm # perform operation
fnmadd.h f20, f3, f7, f22, rne # perform operation
fnmadd.h f20, f3, f7, f22, rtz # perform operation
fnmadd.h f20, f3, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f3, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f3, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f3, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f3, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f3, f7, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
la x2, scratch
li x3, 0x2728e64aa8e95704 # load x3 with value 0x2728e64aa8e95704
sw x3, 0(x2) # store 0x2728e64aa8e95704 in memory
flh f21, 0(x2) # load 0x2728e64aa8e95704 from memory into f21
fnmadd.h f3, f12, f30, f21, dyn # perform operation
fnmadd.h f3, f12, f30, f21, rdn # perform operation
fnmadd.h f3, f12, f30, f21, rmm # perform operation
fnmadd.h f3, f12, f30, f21, rne # perform operation
fnmadd.h f3, f12, f30, f21, rtz # perform operation
fnmadd.h f3, f12, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f12, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f12, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f12, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f12, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f12, f30, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f10, 0(x2) # load 0x00000400 from memory into f10
la x2, scratch
li x3, 0x305d62a6c849210 # load x3 with value 0x305d62a6c849210
sw x3, 0(x2) # store 0x305d62a6c849210 in memory
flh f11, 0(x2) # load 0x305d62a6c849210 from memory into f11
fnmadd.h f2, f19, f10, f11, dyn # perform operation
fnmadd.h f2, f19, f10, f11, rdn # perform operation
fnmadd.h f2, f19, f10, f11, rmm # perform operation
fnmadd.h f2, f19, f10, f11, rne # perform operation
fnmadd.h f2, f19, f10, f11, rtz # perform operation
fnmadd.h f2, f19, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f19, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f19, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f19, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f19, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f19, f10, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f12, 0(x2) # load 0x00008400 from memory into f12
la x2, scratch
li x3, 0x48bce42079b77ec3 # load x3 with value 0x48bce42079b77ec3
sw x3, 0(x2) # store 0x48bce42079b77ec3 in memory
flh f10, 0(x2) # load 0x48bce42079b77ec3 from memory into f10
fnmadd.h f5, f28, f12, f10, dyn # perform operation
fnmadd.h f5, f28, f12, f10, rdn # perform operation
fnmadd.h f5, f28, f12, f10, rmm # perform operation
fnmadd.h f5, f28, f12, f10, rne # perform operation
fnmadd.h f5, f28, f12, f10, rtz # perform operation
fnmadd.h f5, f28, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f28, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f28, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f28, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f28, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f28, f12, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f23, 0(x2) # load 0x00007bff from memory into f23
la x2, scratch
li x3, 0x371cf24fa96fb576 # load x3 with value 0x371cf24fa96fb576
sw x3, 0(x2) # store 0x371cf24fa96fb576 in memory
flh f31, 0(x2) # load 0x371cf24fa96fb576 from memory into f31
fnmadd.h f27, f21, f23, f31, dyn # perform operation
fnmadd.h f27, f21, f23, f31, rdn # perform operation
fnmadd.h f27, f21, f23, f31, rmm # perform operation
fnmadd.h f27, f21, f23, f31, rne # perform operation
fnmadd.h f27, f21, f23, f31, rtz # perform operation
fnmadd.h f27, f21, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f21, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f21, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f21, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f21, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f21, f23, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f28, 0(x2) # load 0x0000fbff from memory into f28
la x2, scratch
li x3, 0x7ab5f3eba46d6294 # load x3 with value 0x7ab5f3eba46d6294
sw x3, 0(x2) # store 0x7ab5f3eba46d6294 in memory
flh f5, 0(x2) # load 0x7ab5f3eba46d6294 from memory into f5
fnmadd.h f26, f10, f28, f5, dyn # perform operation
fnmadd.h f26, f10, f28, f5, rdn # perform operation
fnmadd.h f26, f10, f28, f5, rmm # perform operation
fnmadd.h f26, f10, f28, f5, rne # perform operation
fnmadd.h f26, f10, f28, f5, rtz # perform operation
fnmadd.h f26, f10, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f10, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f10, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f10, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f10, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f10, f28, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f9, 0(x2) # load 0x000003ff from memory into f9
la x2, scratch
li x3, 0xaaaf6792233ddf23 # load x3 with value 0xaaaf6792233ddf23
sw x3, 0(x2) # store 0xaaaf6792233ddf23 in memory
flh f8, 0(x2) # load 0xaaaf6792233ddf23 from memory into f8
fnmadd.h f15, f31, f9, f8, dyn # perform operation
fnmadd.h f15, f31, f9, f8, rdn # perform operation
fnmadd.h f15, f31, f9, f8, rmm # perform operation
fnmadd.h f15, f31, f9, f8, rne # perform operation
fnmadd.h f15, f31, f9, f8, rtz # perform operation
fnmadd.h f15, f31, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f31, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f31, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f31, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f31, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f31, f9, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f24, 0(x2) # load 0x000083ff from memory into f24
la x2, scratch
li x3, 0xb664a2f6c93886f9 # load x3 with value 0xb664a2f6c93886f9
sw x3, 0(x2) # store 0xb664a2f6c93886f9 in memory
flh f15, 0(x2) # load 0xb664a2f6c93886f9 from memory into f15
fnmadd.h f10, f26, f24, f15, dyn # perform operation
fnmadd.h f10, f26, f24, f15, rdn # perform operation
fnmadd.h f10, f26, f24, f15, rmm # perform operation
fnmadd.h f10, f26, f24, f15, rne # perform operation
fnmadd.h f10, f26, f24, f15, rtz # perform operation
fnmadd.h f10, f26, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f26, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f26, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f26, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f26, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f26, f24, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f22, 0(x2) # load 0x00000200 from memory into f22
la x2, scratch
li x3, 0x84606c4e70d5b197 # load x3 with value 0x84606c4e70d5b197
sw x3, 0(x2) # store 0x84606c4e70d5b197 in memory
flh f26, 0(x2) # load 0x84606c4e70d5b197 from memory into f26
fnmadd.h f1, f21, f22, f26, dyn # perform operation
fnmadd.h f1, f21, f22, f26, rdn # perform operation
fnmadd.h f1, f21, f22, f26, rmm # perform operation
fnmadd.h f1, f21, f22, f26, rne # perform operation
fnmadd.h f1, f21, f22, f26, rtz # perform operation
fnmadd.h f1, f21, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f21, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f21, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f21, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f21, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f21, f22, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
la x2, scratch
li x3, 0x44e1dea2439e1f6e # load x3 with value 0x44e1dea2439e1f6e
sw x3, 0(x2) # store 0x44e1dea2439e1f6e in memory
flh f2, 0(x2) # load 0x44e1dea2439e1f6e from memory into f2
fnmadd.h f6, f25, f17, f2, dyn # perform operation
fnmadd.h f6, f25, f17, f2, rdn # perform operation
fnmadd.h f6, f25, f17, f2, rmm # perform operation
fnmadd.h f6, f25, f17, f2, rne # perform operation
fnmadd.h f6, f25, f17, f2, rtz # perform operation
fnmadd.h f6, f25, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f25, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f25, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f25, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f25, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f25, f17, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x7cddea70746093db # load x3 with value 0x7cddea70746093db
sw x3, 0(x2) # store 0x7cddea70746093db in memory
flh f17, 0(x2) # load 0x7cddea70746093db from memory into f17
fnmadd.h f19, f5, f11, f17, dyn # perform operation
fnmadd.h f19, f5, f11, f17, rdn # perform operation
fnmadd.h f19, f5, f11, f17, rmm # perform operation
fnmadd.h f19, f5, f11, f17, rne # perform operation
fnmadd.h f19, f5, f11, f17, rtz # perform operation
fnmadd.h f19, f5, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f5, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f5, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f5, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f5, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f5, f11, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
la x2, scratch
li x3, 0xcd257aa1654a09fd # load x3 with value 0xcd257aa1654a09fd
sw x3, 0(x2) # store 0xcd257aa1654a09fd in memory
flh f3, 0(x2) # load 0xcd257aa1654a09fd from memory into f3
fnmadd.h f31, f12, f14, f3, dyn # perform operation
fnmadd.h f31, f12, f14, f3, rdn # perform operation
fnmadd.h f31, f12, f14, f3, rmm # perform operation
fnmadd.h f31, f12, f14, f3, rne # perform operation
fnmadd.h f31, f12, f14, f3, rtz # perform operation
fnmadd.h f31, f12, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f12, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f12, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f12, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f12, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f12, f14, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f26, 0(x2) # load 0x00007c00 from memory into f26
la x2, scratch
li x3, 0xe376eb8692a9823f # load x3 with value 0xe376eb8692a9823f
sw x3, 0(x2) # store 0xe376eb8692a9823f in memory
flh f29, 0(x2) # load 0xe376eb8692a9823f from memory into f29
fnmadd.h f19, f17, f26, f29, dyn # perform operation
fnmadd.h f19, f17, f26, f29, rdn # perform operation
fnmadd.h f19, f17, f26, f29, rmm # perform operation
fnmadd.h f19, f17, f26, f29, rne # perform operation
fnmadd.h f19, f17, f26, f29, rtz # perform operation
fnmadd.h f19, f17, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f17, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f17, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f17, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f17, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f17, f26, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f6, 0(x2) # load 0x0000fc00 from memory into f6
la x2, scratch
li x3, 0x9ef81b7f3e6ba57 # load x3 with value 0x9ef81b7f3e6ba57
sw x3, 0(x2) # store 0x9ef81b7f3e6ba57 in memory
flh f13, 0(x2) # load 0x9ef81b7f3e6ba57 from memory into f13
fnmadd.h f9, f15, f6, f13, dyn # perform operation
fnmadd.h f9, f15, f6, f13, rdn # perform operation
fnmadd.h f9, f15, f6, f13, rmm # perform operation
fnmadd.h f9, f15, f6, f13, rne # perform operation
fnmadd.h f9, f15, f6, f13, rtz # perform operation
fnmadd.h f9, f15, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f15, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f15, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f15, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f15, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f15, f6, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f1, 0(x2) # load 0x00007e00 from memory into f1
la x2, scratch
li x3, 0xda590e4568d46322 # load x3 with value 0xda590e4568d46322
sw x3, 0(x2) # store 0xda590e4568d46322 in memory
flh f23, 0(x2) # load 0xda590e4568d46322 from memory into f23
fnmadd.h f28, f8, f1, f23, dyn # perform operation
fnmadd.h f28, f8, f1, f23, rdn # perform operation
fnmadd.h f28, f8, f1, f23, rmm # perform operation
fnmadd.h f28, f8, f1, f23, rne # perform operation
fnmadd.h f28, f8, f1, f23, rtz # perform operation
fnmadd.h f28, f8, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f8, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f8, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f8, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f8, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f8, f1, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f1, 0(x2) # load 0x00000001 from memory into f1
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f11, 0(x2) # load 0x00007fff from memory into f11
la x2, scratch
li x3, 0xd8d210c20fde5224 # load x3 with value 0xd8d210c20fde5224
sw x3, 0(x2) # store 0xd8d210c20fde5224 in memory
flh f22, 0(x2) # load 0xd8d210c20fde5224 from memory into f22
fnmadd.h f16, f1, f11, f22, dyn # perform operation
fnmadd.h f16, f1, f11, f22, rdn # perform operation
fnmadd.h f16, f1, f11, f22, rmm # perform operation
fnmadd.h f16, f1, f11, f22, rne # perform operation
fnmadd.h f16, f1, f11, f22, rtz # perform operation
fnmadd.h f16, f1, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f1, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f1, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f1, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f1, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f1, f11, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f13, 0(x2) # load 0x0000fe00 from memory into f13
la x2, scratch
li x3, 0x369b74c3e86d0bd # load x3 with value 0x369b74c3e86d0bd
sw x3, 0(x2) # store 0x369b74c3e86d0bd in memory
flh f10, 0(x2) # load 0x369b74c3e86d0bd from memory into f10
fnmadd.h f17, f11, f13, f10, dyn # perform operation
fnmadd.h f17, f11, f13, f10, rdn # perform operation
fnmadd.h f17, f11, f13, f10, rmm # perform operation
fnmadd.h f17, f11, f13, f10, rne # perform operation
fnmadd.h f17, f11, f13, f10, rtz # perform operation
fnmadd.h f17, f11, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f11, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f11, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f11, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f11, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f11, f13, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f11, 0(x2) # load 0x00007c01 from memory into f11
la x2, scratch
li x3, 0x45463860700da642 # load x3 with value 0x45463860700da642
sw x3, 0(x2) # store 0x45463860700da642 in memory
flh f15, 0(x2) # load 0x45463860700da642 from memory into f15
fnmadd.h f21, f5, f11, f15, dyn # perform operation
fnmadd.h f21, f5, f11, f15, rdn # perform operation
fnmadd.h f21, f5, f11, f15, rmm # perform operation
fnmadd.h f21, f5, f11, f15, rne # perform operation
fnmadd.h f21, f5, f11, f15, rtz # perform operation
fnmadd.h f21, f5, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f5, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f5, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f5, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f5, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f5, f11, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f31, 0(x2) # load 0x00007dff from memory into f31
la x2, scratch
li x3, 0xb907446a4347e8e6 # load x3 with value 0xb907446a4347e8e6
sw x3, 0(x2) # store 0xb907446a4347e8e6 in memory
flh f12, 0(x2) # load 0xb907446a4347e8e6 from memory into f12
fnmadd.h f6, f24, f31, f12, dyn # perform operation
fnmadd.h f6, f24, f31, f12, rdn # perform operation
fnmadd.h f6, f24, f31, f12, rmm # perform operation
fnmadd.h f6, f24, f31, f12, rne # perform operation
fnmadd.h f6, f24, f31, f12, rtz # perform operation
fnmadd.h f6, f24, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f24, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f24, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f24, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f24, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f24, f31, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f24, 0(x2) # load 0x0000fc01 from memory into f24
la x2, scratch
li x3, 0xb1bb47f9f05cb992 # load x3 with value 0xb1bb47f9f05cb992
sw x3, 0(x2) # store 0xb1bb47f9f05cb992 in memory
flh f10, 0(x2) # load 0xb1bb47f9f05cb992 from memory into f10
fnmadd.h f15, f22, f24, f10, dyn # perform operation
fnmadd.h f15, f22, f24, f10, rdn # perform operation
fnmadd.h f15, f22, f24, f10, rmm # perform operation
fnmadd.h f15, f22, f24, f10, rne # perform operation
fnmadd.h f15, f22, f24, f10, rtz # perform operation
fnmadd.h f15, f22, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f22, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f22, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f22, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f22, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f22, f24, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f1, 0(x2) # load 0x000058b4 from memory into f1
la x2, scratch
li x3, 0xbf8da30130848d9b # load x3 with value 0xbf8da30130848d9b
sw x3, 0(x2) # store 0xbf8da30130848d9b in memory
flh f22, 0(x2) # load 0xbf8da30130848d9b from memory into f22
fnmadd.h f24, f19, f1, f22, dyn # perform operation
fnmadd.h f24, f19, f1, f22, rdn # perform operation
fnmadd.h f24, f19, f1, f22, rmm # perform operation
fnmadd.h f24, f19, f1, f22, rne # perform operation
fnmadd.h f24, f19, f1, f22, rtz # perform operation
fnmadd.h f24, f19, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f19, f1, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f25, 0(x2) # load 0x0000c93a from memory into f25
la x2, scratch
li x3, 0x4ab25c5c579e2a05 # load x3 with value 0x4ab25c5c579e2a05
sw x3, 0(x2) # store 0x4ab25c5c579e2a05 in memory
flh f18, 0(x2) # load 0x4ab25c5c579e2a05 from memory into f18
fnmadd.h f17, f12, f25, f18, dyn # perform operation
fnmadd.h f17, f12, f25, f18, rdn # perform operation
fnmadd.h f17, f12, f25, f18, rmm # perform operation
fnmadd.h f17, f12, f25, f18, rne # perform operation
fnmadd.h f17, f12, f25, f18, rtz # perform operation
fnmadd.h f17, f12, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f12, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f12, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f12, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f12, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f12, f25, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f19, 0(x2) # load 0x00008001 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0x5665e14215212c45 # load x3 with value 0x5665e14215212c45
sw x3, 0(x2) # store 0x5665e14215212c45 in memory
flh f10, 0(x2) # load 0x5665e14215212c45 from memory into f10
fnmadd.h f23, f19, f3, f10, dyn # perform operation
fnmadd.h f23, f19, f3, f10, rdn # perform operation
fnmadd.h f23, f19, f3, f10, rmm # perform operation
fnmadd.h f23, f19, f3, f10, rne # perform operation
fnmadd.h f23, f19, f3, f10, rtz # perform operation
fnmadd.h f23, f19, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f19, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f19, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f19, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f19, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f19, f3, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f3, 0(x2) # load 0x00008001 from memory into f3
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f21, 0(x2) # load 0x00008000 from memory into f21
la x2, scratch
li x3, 0xfe788e943bdfe1ce # load x3 with value 0xfe788e943bdfe1ce
sw x3, 0(x2) # store 0xfe788e943bdfe1ce in memory
flh f19, 0(x2) # load 0xfe788e943bdfe1ce from memory into f19
fnmadd.h f24, f3, f21, f19, dyn # perform operation
fnmadd.h f24, f3, f21, f19, rdn # perform operation
fnmadd.h f24, f3, f21, f19, rmm # perform operation
fnmadd.h f24, f3, f21, f19, rne # perform operation
fnmadd.h f24, f3, f21, f19, rtz # perform operation
fnmadd.h f24, f3, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f3, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f3, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f3, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f3, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f3, f21, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f3, 0(x2) # load 0x00008001 from memory into f3
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f24, 0(x2) # load 0x00003c00 from memory into f24
la x2, scratch
li x3, 0xbbb46d0df7ef0542 # load x3 with value 0xbbb46d0df7ef0542
sw x3, 0(x2) # store 0xbbb46d0df7ef0542 in memory
flh f14, 0(x2) # load 0xbbb46d0df7ef0542 from memory into f14
fnmadd.h f16, f3, f24, f14, dyn # perform operation
fnmadd.h f16, f3, f24, f14, rdn # perform operation
fnmadd.h f16, f3, f24, f14, rmm # perform operation
fnmadd.h f16, f3, f24, f14, rne # perform operation
fnmadd.h f16, f3, f24, f14, rtz # perform operation
fnmadd.h f16, f3, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f3, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f3, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f3, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f3, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f3, f24, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f6, 0(x2) # load 0x00008001 from memory into f6
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f2, 0(x2) # load 0x0000bc00 from memory into f2
la x2, scratch
li x3, 0xd898f38810ef2afc # load x3 with value 0xd898f38810ef2afc
sw x3, 0(x2) # store 0xd898f38810ef2afc in memory
flh f13, 0(x2) # load 0xd898f38810ef2afc from memory into f13
fnmadd.h f9, f6, f2, f13, dyn # perform operation
fnmadd.h f9, f6, f2, f13, rdn # perform operation
fnmadd.h f9, f6, f2, f13, rmm # perform operation
fnmadd.h f9, f6, f2, f13, rne # perform operation
fnmadd.h f9, f6, f2, f13, rtz # perform operation
fnmadd.h f9, f6, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f6, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f6, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f6, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f6, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f6, f2, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
la x2, scratch
li x3, 0xb452a4c8bd057c86 # load x3 with value 0xb452a4c8bd057c86
sw x3, 0(x2) # store 0xb452a4c8bd057c86 in memory
flh f9, 0(x2) # load 0xb452a4c8bd057c86 from memory into f9
fnmadd.h f18, f7, f21, f9, dyn # perform operation
fnmadd.h f18, f7, f21, f9, rdn # perform operation
fnmadd.h f18, f7, f21, f9, rmm # perform operation
fnmadd.h f18, f7, f21, f9, rne # perform operation
fnmadd.h f18, f7, f21, f9, rtz # perform operation
fnmadd.h f18, f7, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f7, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f7, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f7, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f7, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f7, f21, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f29, 0(x2) # load 0x00008001 from memory into f29
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f18, 0(x2) # load 0x0000be00 from memory into f18
la x2, scratch
li x3, 0x34ead78a339626c5 # load x3 with value 0x34ead78a339626c5
sw x3, 0(x2) # store 0x34ead78a339626c5 in memory
flh f22, 0(x2) # load 0x34ead78a339626c5 from memory into f22
fnmadd.h f10, f29, f18, f22, dyn # perform operation
fnmadd.h f10, f29, f18, f22, rdn # perform operation
fnmadd.h f10, f29, f18, f22, rmm # perform operation
fnmadd.h f10, f29, f18, f22, rne # perform operation
fnmadd.h f10, f29, f18, f22, rtz # perform operation
fnmadd.h f10, f29, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f29, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f29, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f29, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f29, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f29, f18, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f18, 0(x2) # load 0x00008001 from memory into f18
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f20, 0(x2) # load 0x00004000 from memory into f20
la x2, scratch
li x3, 0xd607ba2d82c37341 # load x3 with value 0xd607ba2d82c37341
sw x3, 0(x2) # store 0xd607ba2d82c37341 in memory
flh f28, 0(x2) # load 0xd607ba2d82c37341 from memory into f28
fnmadd.h f15, f18, f20, f28, dyn # perform operation
fnmadd.h f15, f18, f20, f28, rdn # perform operation
fnmadd.h f15, f18, f20, f28, rmm # perform operation
fnmadd.h f15, f18, f20, f28, rne # perform operation
fnmadd.h f15, f18, f20, f28, rtz # perform operation
fnmadd.h f15, f18, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f18, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f18, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f18, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f18, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f18, f20, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f31, 0(x2) # load 0x0000c000 from memory into f31
la x2, scratch
li x3, 0xe6d80c0e3cdf6795 # load x3 with value 0xe6d80c0e3cdf6795
sw x3, 0(x2) # store 0xe6d80c0e3cdf6795 in memory
flh f25, 0(x2) # load 0xe6d80c0e3cdf6795 from memory into f25
fnmadd.h f6, f22, f31, f25, dyn # perform operation
fnmadd.h f6, f22, f31, f25, rdn # perform operation
fnmadd.h f6, f22, f31, f25, rmm # perform operation
fnmadd.h f6, f22, f31, f25, rne # perform operation
fnmadd.h f6, f22, f31, f25, rtz # perform operation
fnmadd.h f6, f22, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f22, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f22, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f22, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f22, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f22, f31, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f21, 0(x2) # load 0x00008001 from memory into f21
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f3, 0(x2) # load 0x00000400 from memory into f3
la x2, scratch
li x3, 0x6ceabd31b65aee4f # load x3 with value 0x6ceabd31b65aee4f
sw x3, 0(x2) # store 0x6ceabd31b65aee4f in memory
flh f12, 0(x2) # load 0x6ceabd31b65aee4f from memory into f12
fnmadd.h f14, f21, f3, f12, dyn # perform operation
fnmadd.h f14, f21, f3, f12, rdn # perform operation
fnmadd.h f14, f21, f3, f12, rmm # perform operation
fnmadd.h f14, f21, f3, f12, rne # perform operation
fnmadd.h f14, f21, f3, f12, rtz # perform operation
fnmadd.h f14, f21, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f21, f3, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f25, 0(x2) # load 0x00008400 from memory into f25
la x2, scratch
li x3, 0xda2db0efe9876a66 # load x3 with value 0xda2db0efe9876a66
sw x3, 0(x2) # store 0xda2db0efe9876a66 in memory
flh f14, 0(x2) # load 0xda2db0efe9876a66 from memory into f14
fnmadd.h f6, f22, f25, f14, dyn # perform operation
fnmadd.h f6, f22, f25, f14, rdn # perform operation
fnmadd.h f6, f22, f25, f14, rmm # perform operation
fnmadd.h f6, f22, f25, f14, rne # perform operation
fnmadd.h f6, f22, f25, f14, rtz # perform operation
fnmadd.h f6, f22, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f22, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f22, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f22, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f22, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f22, f25, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f16, 0(x2) # load 0x00008001 from memory into f16
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f17, 0(x2) # load 0x00007bff from memory into f17
la x2, scratch
li x3, 0xb656be2e6bd85eba # load x3 with value 0xb656be2e6bd85eba
sw x3, 0(x2) # store 0xb656be2e6bd85eba in memory
flh f24, 0(x2) # load 0xb656be2e6bd85eba from memory into f24
fnmadd.h f13, f16, f17, f24, dyn # perform operation
fnmadd.h f13, f16, f17, f24, rdn # perform operation
fnmadd.h f13, f16, f17, f24, rmm # perform operation
fnmadd.h f13, f16, f17, f24, rne # perform operation
fnmadd.h f13, f16, f17, f24, rtz # perform operation
fnmadd.h f13, f16, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f16, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f16, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f16, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f16, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f16, f17, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f24, 0(x2) # load 0x00008001 from memory into f24
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f31, 0(x2) # load 0x0000fbff from memory into f31
la x2, scratch
li x3, 0xbe9d7ccb4f30b8d5 # load x3 with value 0xbe9d7ccb4f30b8d5
sw x3, 0(x2) # store 0xbe9d7ccb4f30b8d5 in memory
flh f5, 0(x2) # load 0xbe9d7ccb4f30b8d5 from memory into f5
fnmadd.h f9, f24, f31, f5, dyn # perform operation
fnmadd.h f9, f24, f31, f5, rdn # perform operation
fnmadd.h f9, f24, f31, f5, rmm # perform operation
fnmadd.h f9, f24, f31, f5, rne # perform operation
fnmadd.h f9, f24, f31, f5, rtz # perform operation
fnmadd.h f9, f24, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f24, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f24, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f24, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f24, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f24, f31, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f23, 0(x2) # load 0x00008001 from memory into f23
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f9, 0(x2) # load 0x000003ff from memory into f9
la x2, scratch
li x3, 0x5c8feb70969e210e # load x3 with value 0x5c8feb70969e210e
sw x3, 0(x2) # store 0x5c8feb70969e210e in memory
flh f7, 0(x2) # load 0x5c8feb70969e210e from memory into f7
fnmadd.h f24, f23, f9, f7, dyn # perform operation
fnmadd.h f24, f23, f9, f7, rdn # perform operation
fnmadd.h f24, f23, f9, f7, rmm # perform operation
fnmadd.h f24, f23, f9, f7, rne # perform operation
fnmadd.h f24, f23, f9, f7, rtz # perform operation
fnmadd.h f24, f23, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f23, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f23, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f23, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f23, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f23, f9, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f30, 0(x2) # load 0x00008001 from memory into f30
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f9, 0(x2) # load 0x000083ff from memory into f9
la x2, scratch
li x3, 0x167257a30b0c4837 # load x3 with value 0x167257a30b0c4837
sw x3, 0(x2) # store 0x167257a30b0c4837 in memory
flh f11, 0(x2) # load 0x167257a30b0c4837 from memory into f11
fnmadd.h f26, f30, f9, f11, dyn # perform operation
fnmadd.h f26, f30, f9, f11, rdn # perform operation
fnmadd.h f26, f30, f9, f11, rmm # perform operation
fnmadd.h f26, f30, f9, f11, rne # perform operation
fnmadd.h f26, f30, f9, f11, rtz # perform operation
fnmadd.h f26, f30, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f30, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f30, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f30, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f30, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f30, f9, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f10, 0(x2) # load 0x00000200 from memory into f10
la x2, scratch
li x3, 0xcbf16eb07bfb48d5 # load x3 with value 0xcbf16eb07bfb48d5
sw x3, 0(x2) # store 0xcbf16eb07bfb48d5 in memory
flh f8, 0(x2) # load 0xcbf16eb07bfb48d5 from memory into f8
fnmadd.h f21, f14, f10, f8, dyn # perform operation
fnmadd.h f21, f14, f10, f8, rdn # perform operation
fnmadd.h f21, f14, f10, f8, rmm # perform operation
fnmadd.h f21, f14, f10, f8, rne # perform operation
fnmadd.h f21, f14, f10, f8, rtz # perform operation
fnmadd.h f21, f14, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f14, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f14, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f14, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f14, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f14, f10, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f28, 0(x2) # load 0x00008001 from memory into f28
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f18, 0(x2) # load 0x00008200 from memory into f18
la x2, scratch
li x3, 0x376c1a2cfae6455b # load x3 with value 0x376c1a2cfae6455b
sw x3, 0(x2) # store 0x376c1a2cfae6455b in memory
flh f11, 0(x2) # load 0x376c1a2cfae6455b from memory into f11
fnmadd.h f6, f28, f18, f11, dyn # perform operation
fnmadd.h f6, f28, f18, f11, rdn # perform operation
fnmadd.h f6, f28, f18, f11, rmm # perform operation
fnmadd.h f6, f28, f18, f11, rne # perform operation
fnmadd.h f6, f28, f18, f11, rtz # perform operation
fnmadd.h f6, f28, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f28, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f28, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f28, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f28, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f28, f18, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f11, 0(x2) # load 0x00008001 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0x76136551033ffe69 # load x3 with value 0x76136551033ffe69
sw x3, 0(x2) # store 0x76136551033ffe69 in memory
flh f27, 0(x2) # load 0x76136551033ffe69 from memory into f27
fnmadd.h f21, f11, f29, f27, dyn # perform operation
fnmadd.h f21, f11, f29, f27, rdn # perform operation
fnmadd.h f21, f11, f29, f27, rmm # perform operation
fnmadd.h f21, f11, f29, f27, rne # perform operation
fnmadd.h f21, f11, f29, f27, rtz # perform operation
fnmadd.h f21, f11, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f11, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f11, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f11, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f11, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f11, f29, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f31, 0(x2) # load 0x00008001 from memory into f31
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f13, 0(x2) # load 0x00008001 from memory into f13
la x2, scratch
li x3, 0xf160c8b0b9eb59f # load x3 with value 0xf160c8b0b9eb59f
sw x3, 0(x2) # store 0xf160c8b0b9eb59f in memory
flh f19, 0(x2) # load 0xf160c8b0b9eb59f from memory into f19
fnmadd.h f25, f31, f13, f19, dyn # perform operation
fnmadd.h f25, f31, f13, f19, rdn # perform operation
fnmadd.h f25, f31, f13, f19, rmm # perform operation
fnmadd.h f25, f31, f13, f19, rne # perform operation
fnmadd.h f25, f31, f13, f19, rtz # perform operation
fnmadd.h f25, f31, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f31, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f31, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f31, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f31, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f31, f13, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f23, 0(x2) # load 0x00008001 from memory into f23
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f16, 0(x2) # load 0x00007c00 from memory into f16
la x2, scratch
li x3, 0xa7cc3a7efc24f643 # load x3 with value 0xa7cc3a7efc24f643
sw x3, 0(x2) # store 0xa7cc3a7efc24f643 in memory
flh f11, 0(x2) # load 0xa7cc3a7efc24f643 from memory into f11
fnmadd.h f15, f23, f16, f11, dyn # perform operation
fnmadd.h f15, f23, f16, f11, rdn # perform operation
fnmadd.h f15, f23, f16, f11, rmm # perform operation
fnmadd.h f15, f23, f16, f11, rne # perform operation
fnmadd.h f15, f23, f16, f11, rtz # perform operation
fnmadd.h f15, f23, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f23, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f23, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f23, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f23, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f23, f16, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f13, 0(x2) # load 0x00008001 from memory into f13
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f29, 0(x2) # load 0x0000fc00 from memory into f29
la x2, scratch
li x3, 0x575a1df580f4202 # load x3 with value 0x575a1df580f4202
sw x3, 0(x2) # store 0x575a1df580f4202 in memory
flh f18, 0(x2) # load 0x575a1df580f4202 from memory into f18
fnmadd.h f27, f13, f29, f18, dyn # perform operation
fnmadd.h f27, f13, f29, f18, rdn # perform operation
fnmadd.h f27, f13, f29, f18, rmm # perform operation
fnmadd.h f27, f13, f29, f18, rne # perform operation
fnmadd.h f27, f13, f29, f18, rtz # perform operation
fnmadd.h f27, f13, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f13, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f13, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f13, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f13, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f13, f29, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f26, 0(x2) # load 0x00007e00 from memory into f26
la x2, scratch
li x3, 0x7c74a3fa0046198a # load x3 with value 0x7c74a3fa0046198a
sw x3, 0(x2) # store 0x7c74a3fa0046198a in memory
flh f27, 0(x2) # load 0x7c74a3fa0046198a from memory into f27
fnmadd.h f8, f22, f26, f27, dyn # perform operation
fnmadd.h f8, f22, f26, f27, rdn # perform operation
fnmadd.h f8, f22, f26, f27, rmm # perform operation
fnmadd.h f8, f22, f26, f27, rne # perform operation
fnmadd.h f8, f22, f26, f27, rtz # perform operation
fnmadd.h f8, f22, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f22, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f22, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f22, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f22, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f22, f26, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f8, 0(x2) # load 0x00008001 from memory into f8
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f18, 0(x2) # load 0x00007fff from memory into f18
la x2, scratch
li x3, 0x3f03341b400e6535 # load x3 with value 0x3f03341b400e6535
sw x3, 0(x2) # store 0x3f03341b400e6535 in memory
flh f7, 0(x2) # load 0x3f03341b400e6535 from memory into f7
fnmadd.h f13, f8, f18, f7, dyn # perform operation
fnmadd.h f13, f8, f18, f7, rdn # perform operation
fnmadd.h f13, f8, f18, f7, rmm # perform operation
fnmadd.h f13, f8, f18, f7, rne # perform operation
fnmadd.h f13, f8, f18, f7, rtz # perform operation
fnmadd.h f13, f8, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f8, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f8, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f8, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f8, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f8, f18, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f15, 0(x2) # load 0x00008001 from memory into f15
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f17, 0(x2) # load 0x0000fe00 from memory into f17
la x2, scratch
li x3, 0x25224f85636c912 # load x3 with value 0x25224f85636c912
sw x3, 0(x2) # store 0x25224f85636c912 in memory
flh f13, 0(x2) # load 0x25224f85636c912 from memory into f13
fnmadd.h f7, f15, f17, f13, dyn # perform operation
fnmadd.h f7, f15, f17, f13, rdn # perform operation
fnmadd.h f7, f15, f17, f13, rmm # perform operation
fnmadd.h f7, f15, f17, f13, rne # perform operation
fnmadd.h f7, f15, f17, f13, rtz # perform operation
fnmadd.h f7, f15, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f15, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f15, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f15, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f15, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f15, f17, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f6, 0(x2) # load 0x00008001 from memory into f6
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f19, 0(x2) # load 0x00007c01 from memory into f19
la x2, scratch
li x3, 0x26ab15228259ae53 # load x3 with value 0x26ab15228259ae53
sw x3, 0(x2) # store 0x26ab15228259ae53 in memory
flh f25, 0(x2) # load 0x26ab15228259ae53 from memory into f25
fnmadd.h f7, f6, f19, f25, dyn # perform operation
fnmadd.h f7, f6, f19, f25, rdn # perform operation
fnmadd.h f7, f6, f19, f25, rmm # perform operation
fnmadd.h f7, f6, f19, f25, rne # perform operation
fnmadd.h f7, f6, f19, f25, rtz # perform operation
fnmadd.h f7, f6, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f6, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f6, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f6, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f6, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f6, f19, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f17, 0(x2) # load 0x00008001 from memory into f17
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f3, 0(x2) # load 0x00007dff from memory into f3
la x2, scratch
li x3, 0x52f088a3577f0128 # load x3 with value 0x52f088a3577f0128
sw x3, 0(x2) # store 0x52f088a3577f0128 in memory
flh f31, 0(x2) # load 0x52f088a3577f0128 from memory into f31
fnmadd.h f9, f17, f3, f31, dyn # perform operation
fnmadd.h f9, f17, f3, f31, rdn # perform operation
fnmadd.h f9, f17, f3, f31, rmm # perform operation
fnmadd.h f9, f17, f3, f31, rne # perform operation
fnmadd.h f9, f17, f3, f31, rtz # perform operation
fnmadd.h f9, f17, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f17, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f17, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f17, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f17, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f17, f3, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f2, 0(x2) # load 0x00008001 from memory into f2
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f13, 0(x2) # load 0x0000fc01 from memory into f13
la x2, scratch
li x3, 0x5613f9ab2be01297 # load x3 with value 0x5613f9ab2be01297
sw x3, 0(x2) # store 0x5613f9ab2be01297 in memory
flh f9, 0(x2) # load 0x5613f9ab2be01297 from memory into f9
fnmadd.h f1, f2, f13, f9, dyn # perform operation
fnmadd.h f1, f2, f13, f9, rdn # perform operation
fnmadd.h f1, f2, f13, f9, rmm # perform operation
fnmadd.h f1, f2, f13, f9, rne # perform operation
fnmadd.h f1, f2, f13, f9, rtz # perform operation
fnmadd.h f1, f2, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f2, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f2, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f2, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f2, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f2, f13, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f5, 0(x2) # load 0x00008001 from memory into f5
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f14, 0(x2) # load 0x000058b4 from memory into f14
la x2, scratch
li x3, 0x8168e5fb5e557e68 # load x3 with value 0x8168e5fb5e557e68
sw x3, 0(x2) # store 0x8168e5fb5e557e68 in memory
flh f29, 0(x2) # load 0x8168e5fb5e557e68 from memory into f29
fnmadd.h f17, f5, f14, f29, dyn # perform operation
fnmadd.h f17, f5, f14, f29, rdn # perform operation
fnmadd.h f17, f5, f14, f29, rmm # perform operation
fnmadd.h f17, f5, f14, f29, rne # perform operation
fnmadd.h f17, f5, f14, f29, rtz # perform operation
fnmadd.h f17, f5, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f5, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f5, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f5, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f5, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f5, f14, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f24, 0(x2) # load 0x00008001 from memory into f24
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f19, 0(x2) # load 0x0000c93a from memory into f19
la x2, scratch
li x3, 0x472a8f69c57aafbc # load x3 with value 0x472a8f69c57aafbc
sw x3, 0(x2) # store 0x472a8f69c57aafbc in memory
flh f5, 0(x2) # load 0x472a8f69c57aafbc from memory into f5
fnmadd.h f9, f24, f19, f5, dyn # perform operation
fnmadd.h f9, f24, f19, f5, rdn # perform operation
fnmadd.h f9, f24, f19, f5, rmm # perform operation
fnmadd.h f9, f24, f19, f5, rne # perform operation
fnmadd.h f9, f24, f19, f5, rtz # perform operation
fnmadd.h f9, f24, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f24, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f24, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f24, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f24, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f24, f19, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f20, 0(x2) # load 0x00007c00 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x7882ed854143e61e # load x3 with value 0x7882ed854143e61e
sw x3, 0(x2) # store 0x7882ed854143e61e in memory
flh f31, 0(x2) # load 0x7882ed854143e61e from memory into f31
fnmadd.h f17, f20, f28, f31, dyn # perform operation
fnmadd.h f17, f20, f28, f31, rdn # perform operation
fnmadd.h f17, f20, f28, f31, rmm # perform operation
fnmadd.h f17, f20, f28, f31, rne # perform operation
fnmadd.h f17, f20, f28, f31, rtz # perform operation
fnmadd.h f17, f20, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f20, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f20, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f20, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f20, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f20, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f7, 0(x2) # load 0x00007c00 from memory into f7
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f30, 0(x2) # load 0x00008000 from memory into f30
la x2, scratch
li x3, 0xa8c779cc5bd61ecd # load x3 with value 0xa8c779cc5bd61ecd
sw x3, 0(x2) # store 0xa8c779cc5bd61ecd in memory
flh f27, 0(x2) # load 0xa8c779cc5bd61ecd from memory into f27
fnmadd.h f26, f7, f30, f27, dyn # perform operation
fnmadd.h f26, f7, f30, f27, rdn # perform operation
fnmadd.h f26, f7, f30, f27, rmm # perform operation
fnmadd.h f26, f7, f30, f27, rne # perform operation
fnmadd.h f26, f7, f30, f27, rtz # perform operation
fnmadd.h f26, f7, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f7, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f7, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f7, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f7, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f7, f30, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f12, 0(x2) # load 0x00007c00 from memory into f12
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f23, 0(x2) # load 0x00003c00 from memory into f23
la x2, scratch
li x3, 0x3af3618ff17c5d95 # load x3 with value 0x3af3618ff17c5d95
sw x3, 0(x2) # store 0x3af3618ff17c5d95 in memory
flh f5, 0(x2) # load 0x3af3618ff17c5d95 from memory into f5
fnmadd.h f18, f12, f23, f5, dyn # perform operation
fnmadd.h f18, f12, f23, f5, rdn # perform operation
fnmadd.h f18, f12, f23, f5, rmm # perform operation
fnmadd.h f18, f12, f23, f5, rne # perform operation
fnmadd.h f18, f12, f23, f5, rtz # perform operation
fnmadd.h f18, f12, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f12, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f12, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f12, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f12, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f12, f23, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f3, 0(x2) # load 0x00007c00 from memory into f3
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f14, 0(x2) # load 0x0000bc00 from memory into f14
la x2, scratch
li x3, 0xc47c07c67ec512af # load x3 with value 0xc47c07c67ec512af
sw x3, 0(x2) # store 0xc47c07c67ec512af in memory
flh f25, 0(x2) # load 0xc47c07c67ec512af from memory into f25
fnmadd.h f17, f3, f14, f25, dyn # perform operation
fnmadd.h f17, f3, f14, f25, rdn # perform operation
fnmadd.h f17, f3, f14, f25, rmm # perform operation
fnmadd.h f17, f3, f14, f25, rne # perform operation
fnmadd.h f17, f3, f14, f25, rtz # perform operation
fnmadd.h f17, f3, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f3, f14, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f30, 0(x2) # load 0x00007c00 from memory into f30
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f11, 0(x2) # load 0x00003e00 from memory into f11
la x2, scratch
li x3, 0xd502da4f07750e6c # load x3 with value 0xd502da4f07750e6c
sw x3, 0(x2) # store 0xd502da4f07750e6c in memory
flh f9, 0(x2) # load 0xd502da4f07750e6c from memory into f9
fnmadd.h f26, f30, f11, f9, dyn # perform operation
fnmadd.h f26, f30, f11, f9, rdn # perform operation
fnmadd.h f26, f30, f11, f9, rmm # perform operation
fnmadd.h f26, f30, f11, f9, rne # perform operation
fnmadd.h f26, f30, f11, f9, rtz # perform operation
fnmadd.h f26, f30, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f30, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f30, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f30, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f30, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f30, f11, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f26, 0(x2) # load 0x00007c00 from memory into f26
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f16, 0(x2) # load 0x0000be00 from memory into f16
la x2, scratch
li x3, 0x7c26f603eea438d # load x3 with value 0x7c26f603eea438d
sw x3, 0(x2) # store 0x7c26f603eea438d in memory
flh f12, 0(x2) # load 0x7c26f603eea438d from memory into f12
fnmadd.h f15, f26, f16, f12, dyn # perform operation
fnmadd.h f15, f26, f16, f12, rdn # perform operation
fnmadd.h f15, f26, f16, f12, rmm # perform operation
fnmadd.h f15, f26, f16, f12, rne # perform operation
fnmadd.h f15, f26, f16, f12, rtz # perform operation
fnmadd.h f15, f26, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f26, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f26, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f26, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f26, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f26, f16, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f11, 0(x2) # load 0x00007c00 from memory into f11
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f25, 0(x2) # load 0x00004000 from memory into f25
la x2, scratch
li x3, 0xf5e4862a18ed09bf # load x3 with value 0xf5e4862a18ed09bf
sw x3, 0(x2) # store 0xf5e4862a18ed09bf in memory
flh f3, 0(x2) # load 0xf5e4862a18ed09bf from memory into f3
fnmadd.h f28, f11, f25, f3, dyn # perform operation
fnmadd.h f28, f11, f25, f3, rdn # perform operation
fnmadd.h f28, f11, f25, f3, rmm # perform operation
fnmadd.h f28, f11, f25, f3, rne # perform operation
fnmadd.h f28, f11, f25, f3, rtz # perform operation
fnmadd.h f28, f11, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f11, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f11, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f11, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f11, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f11, f25, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f5, 0(x2) # load 0x00007c00 from memory into f5
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
la x2, scratch
li x3, 0xe1f3eaac816ab36b # load x3 with value 0xe1f3eaac816ab36b
sw x3, 0(x2) # store 0xe1f3eaac816ab36b in memory
flh f29, 0(x2) # load 0xe1f3eaac816ab36b from memory into f29
fnmadd.h f24, f5, f2, f29, dyn # perform operation
fnmadd.h f24, f5, f2, f29, rdn # perform operation
fnmadd.h f24, f5, f2, f29, rmm # perform operation
fnmadd.h f24, f5, f2, f29, rne # perform operation
fnmadd.h f24, f5, f2, f29, rtz # perform operation
fnmadd.h f24, f5, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f5, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f5, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f5, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f5, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f5, f2, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f18, 0(x2) # load 0x00007c00 from memory into f18
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f9, 0(x2) # load 0x00000400 from memory into f9
la x2, scratch
li x3, 0x59c52e991878a5f4 # load x3 with value 0x59c52e991878a5f4
sw x3, 0(x2) # store 0x59c52e991878a5f4 in memory
flh f1, 0(x2) # load 0x59c52e991878a5f4 from memory into f1
fnmadd.h f17, f18, f9, f1, dyn # perform operation
fnmadd.h f17, f18, f9, f1, rdn # perform operation
fnmadd.h f17, f18, f9, f1, rmm # perform operation
fnmadd.h f17, f18, f9, f1, rne # perform operation
fnmadd.h f17, f18, f9, f1, rtz # perform operation
fnmadd.h f17, f18, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f18, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f18, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f18, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f18, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f18, f9, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f16, 0(x2) # load 0x00007c00 from memory into f16
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f21, 0(x2) # load 0x00008400 from memory into f21
la x2, scratch
li x3, 0x46a83eefc5112984 # load x3 with value 0x46a83eefc5112984
sw x3, 0(x2) # store 0x46a83eefc5112984 in memory
flh f24, 0(x2) # load 0x46a83eefc5112984 from memory into f24
fnmadd.h f25, f16, f21, f24, dyn # perform operation
fnmadd.h f25, f16, f21, f24, rdn # perform operation
fnmadd.h f25, f16, f21, f24, rmm # perform operation
fnmadd.h f25, f16, f21, f24, rne # perform operation
fnmadd.h f25, f16, f21, f24, rtz # perform operation
fnmadd.h f25, f16, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f16, f21, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f6, 0(x2) # load 0x00007c00 from memory into f6
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f26, 0(x2) # load 0x00007bff from memory into f26
la x2, scratch
li x3, 0x91822c65f4d8f315 # load x3 with value 0x91822c65f4d8f315
sw x3, 0(x2) # store 0x91822c65f4d8f315 in memory
flh f19, 0(x2) # load 0x91822c65f4d8f315 from memory into f19
fnmadd.h f18, f6, f26, f19, dyn # perform operation
fnmadd.h f18, f6, f26, f19, rdn # perform operation
fnmadd.h f18, f6, f26, f19, rmm # perform operation
fnmadd.h f18, f6, f26, f19, rne # perform operation
fnmadd.h f18, f6, f26, f19, rtz # perform operation
fnmadd.h f18, f6, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f6, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f6, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f6, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f6, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f6, f26, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f28, 0(x2) # load 0x0000fbff from memory into f28
la x2, scratch
li x3, 0xc1933b6577c17d01 # load x3 with value 0xc1933b6577c17d01
sw x3, 0(x2) # store 0xc1933b6577c17d01 in memory
flh f15, 0(x2) # load 0xc1933b6577c17d01 from memory into f15
fnmadd.h f3, f19, f28, f15, dyn # perform operation
fnmadd.h f3, f19, f28, f15, rdn # perform operation
fnmadd.h f3, f19, f28, f15, rmm # perform operation
fnmadd.h f3, f19, f28, f15, rne # perform operation
fnmadd.h f3, f19, f28, f15, rtz # perform operation
fnmadd.h f3, f19, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f19, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f19, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f19, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f19, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f19, f28, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f13, 0(x2) # load 0x00007c00 from memory into f13
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f23, 0(x2) # load 0x000003ff from memory into f23
la x2, scratch
li x3, 0xa217dc95429dd940 # load x3 with value 0xa217dc95429dd940
sw x3, 0(x2) # store 0xa217dc95429dd940 in memory
flh f8, 0(x2) # load 0xa217dc95429dd940 from memory into f8
fnmadd.h f18, f13, f23, f8, dyn # perform operation
fnmadd.h f18, f13, f23, f8, rdn # perform operation
fnmadd.h f18, f13, f23, f8, rmm # perform operation
fnmadd.h f18, f13, f23, f8, rne # perform operation
fnmadd.h f18, f13, f23, f8, rtz # perform operation
fnmadd.h f18, f13, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f13, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f13, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f13, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f13, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f13, f23, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f11, 0(x2) # load 0x00007c00 from memory into f11
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f28, 0(x2) # load 0x000083ff from memory into f28
la x2, scratch
li x3, 0x52775be7b9d5c972 # load x3 with value 0x52775be7b9d5c972
sw x3, 0(x2) # store 0x52775be7b9d5c972 in memory
flh f31, 0(x2) # load 0x52775be7b9d5c972 from memory into f31
fnmadd.h f15, f11, f28, f31, dyn # perform operation
fnmadd.h f15, f11, f28, f31, rdn # perform operation
fnmadd.h f15, f11, f28, f31, rmm # perform operation
fnmadd.h f15, f11, f28, f31, rne # perform operation
fnmadd.h f15, f11, f28, f31, rtz # perform operation
fnmadd.h f15, f11, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f11, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f11, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f11, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f11, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f11, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f11, 0(x2) # load 0x00007c00 from memory into f11
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
la x2, scratch
li x3, 0x770869c0c011e0b9 # load x3 with value 0x770869c0c011e0b9
sw x3, 0(x2) # store 0x770869c0c011e0b9 in memory
flh f31, 0(x2) # load 0x770869c0c011e0b9 from memory into f31
fnmadd.h f23, f11, f19, f31, dyn # perform operation
fnmadd.h f23, f11, f19, f31, rdn # perform operation
fnmadd.h f23, f11, f19, f31, rmm # perform operation
fnmadd.h f23, f11, f19, f31, rne # perform operation
fnmadd.h f23, f11, f19, f31, rtz # perform operation
fnmadd.h f23, f11, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f11, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f11, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f11, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f11, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f11, f19, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f11, 0(x2) # load 0x00008200 from memory into f11
la x2, scratch
li x3, 0xd3af9ddde1f549d6 # load x3 with value 0xd3af9ddde1f549d6
sw x3, 0(x2) # store 0xd3af9ddde1f549d6 in memory
flh f17, 0(x2) # load 0xd3af9ddde1f549d6 from memory into f17
fnmadd.h f14, f9, f11, f17, dyn # perform operation
fnmadd.h f14, f9, f11, f17, rdn # perform operation
fnmadd.h f14, f9, f11, f17, rmm # perform operation
fnmadd.h f14, f9, f11, f17, rne # perform operation
fnmadd.h f14, f9, f11, f17, rtz # perform operation
fnmadd.h f14, f9, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f9, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f9, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f9, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f9, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f9, f11, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f17, 0(x2) # load 0x00007c00 from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f2, 0(x2) # load 0x00000001 from memory into f2
la x2, scratch
li x3, 0x9cb872d9feb58b1b # load x3 with value 0x9cb872d9feb58b1b
sw x3, 0(x2) # store 0x9cb872d9feb58b1b in memory
flh f23, 0(x2) # load 0x9cb872d9feb58b1b from memory into f23
fnmadd.h f12, f17, f2, f23, dyn # perform operation
fnmadd.h f12, f17, f2, f23, rdn # perform operation
fnmadd.h f12, f17, f2, f23, rmm # perform operation
fnmadd.h f12, f17, f2, f23, rne # perform operation
fnmadd.h f12, f17, f2, f23, rtz # perform operation
fnmadd.h f12, f17, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f17, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f17, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f17, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f17, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f17, f2, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f3, 0(x2) # load 0x00007c00 from memory into f3
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f25, 0(x2) # load 0x00008001 from memory into f25
la x2, scratch
li x3, 0x4622cffb3a8be527 # load x3 with value 0x4622cffb3a8be527
sw x3, 0(x2) # store 0x4622cffb3a8be527 in memory
flh f21, 0(x2) # load 0x4622cffb3a8be527 from memory into f21
fnmadd.h f1, f3, f25, f21, dyn # perform operation
fnmadd.h f1, f3, f25, f21, rdn # perform operation
fnmadd.h f1, f3, f25, f21, rmm # perform operation
fnmadd.h f1, f3, f25, f21, rne # perform operation
fnmadd.h f1, f3, f25, f21, rtz # perform operation
fnmadd.h f1, f3, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f3, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f3, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f3, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f3, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f3, f25, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f8, 0(x2) # load 0x00007c00 from memory into f8
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f28, 0(x2) # load 0x00007c00 from memory into f28
la x2, scratch
li x3, 0xd95eeed9fdc67044 # load x3 with value 0xd95eeed9fdc67044
sw x3, 0(x2) # store 0xd95eeed9fdc67044 in memory
flh f11, 0(x2) # load 0xd95eeed9fdc67044 from memory into f11
fnmadd.h f3, f8, f28, f11, dyn # perform operation
fnmadd.h f3, f8, f28, f11, rdn # perform operation
fnmadd.h f3, f8, f28, f11, rmm # perform operation
fnmadd.h f3, f8, f28, f11, rne # perform operation
fnmadd.h f3, f8, f28, f11, rtz # perform operation
fnmadd.h f3, f8, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f8, f28, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f3, 0(x2) # load 0x0000fc00 from memory into f3
la x2, scratch
li x3, 0xb638b00c8c1c20a9 # load x3 with value 0xb638b00c8c1c20a9
sw x3, 0(x2) # store 0xb638b00c8c1c20a9 in memory
flh f14, 0(x2) # load 0xb638b00c8c1c20a9 from memory into f14
fnmadd.h f12, f9, f3, f14, dyn # perform operation
fnmadd.h f12, f9, f3, f14, rdn # perform operation
fnmadd.h f12, f9, f3, f14, rmm # perform operation
fnmadd.h f12, f9, f3, f14, rne # perform operation
fnmadd.h f12, f9, f3, f14, rtz # perform operation
fnmadd.h f12, f9, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f9, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f9, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f9, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f9, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f9, f3, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f18, 0(x2) # load 0x00007c00 from memory into f18
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f23, 0(x2) # load 0x00007e00 from memory into f23
la x2, scratch
li x3, 0xb8f770afcf4bbc45 # load x3 with value 0xb8f770afcf4bbc45
sw x3, 0(x2) # store 0xb8f770afcf4bbc45 in memory
flh f7, 0(x2) # load 0xb8f770afcf4bbc45 from memory into f7
fnmadd.h f5, f18, f23, f7, dyn # perform operation
fnmadd.h f5, f18, f23, f7, rdn # perform operation
fnmadd.h f5, f18, f23, f7, rmm # perform operation
fnmadd.h f5, f18, f23, f7, rne # perform operation
fnmadd.h f5, f18, f23, f7, rtz # perform operation
fnmadd.h f5, f18, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f18, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f18, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f18, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f18, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f18, f23, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f10, 0(x2) # load 0x00007c00 from memory into f10
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f11, 0(x2) # load 0x00007fff from memory into f11
la x2, scratch
li x3, 0x6e92a37198eca65d # load x3 with value 0x6e92a37198eca65d
sw x3, 0(x2) # store 0x6e92a37198eca65d in memory
flh f3, 0(x2) # load 0x6e92a37198eca65d from memory into f3
fnmadd.h f1, f10, f11, f3, dyn # perform operation
fnmadd.h f1, f10, f11, f3, rdn # perform operation
fnmadd.h f1, f10, f11, f3, rmm # perform operation
fnmadd.h f1, f10, f11, f3, rne # perform operation
fnmadd.h f1, f10, f11, f3, rtz # perform operation
fnmadd.h f1, f10, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f10, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f10, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f10, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f10, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f10, f11, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f31, 0(x2) # load 0x00007c00 from memory into f31
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f2, 0(x2) # load 0x0000fe00 from memory into f2
la x2, scratch
li x3, 0x165b5ac125fcdaa1 # load x3 with value 0x165b5ac125fcdaa1
sw x3, 0(x2) # store 0x165b5ac125fcdaa1 in memory
flh f10, 0(x2) # load 0x165b5ac125fcdaa1 from memory into f10
fnmadd.h f5, f31, f2, f10, dyn # perform operation
fnmadd.h f5, f31, f2, f10, rdn # perform operation
fnmadd.h f5, f31, f2, f10, rmm # perform operation
fnmadd.h f5, f31, f2, f10, rne # perform operation
fnmadd.h f5, f31, f2, f10, rtz # perform operation
fnmadd.h f5, f31, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f31, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f31, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f31, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f31, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f31, f2, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f10, 0(x2) # load 0x00007c00 from memory into f10
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
la x2, scratch
li x3, 0x43740a9d98f06334 # load x3 with value 0x43740a9d98f06334
sw x3, 0(x2) # store 0x43740a9d98f06334 in memory
flh f26, 0(x2) # load 0x43740a9d98f06334 from memory into f26
fnmadd.h f11, f10, f20, f26, dyn # perform operation
fnmadd.h f11, f10, f20, f26, rdn # perform operation
fnmadd.h f11, f10, f20, f26, rmm # perform operation
fnmadd.h f11, f10, f20, f26, rne # perform operation
fnmadd.h f11, f10, f20, f26, rtz # perform operation
fnmadd.h f11, f10, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f10, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f10, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f10, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f10, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f10, f20, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f13, 0(x2) # load 0x00007c00 from memory into f13
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f15, 0(x2) # load 0x00007dff from memory into f15
la x2, scratch
li x3, 0xa72bc4bbd851244 # load x3 with value 0xa72bc4bbd851244
sw x3, 0(x2) # store 0xa72bc4bbd851244 in memory
flh f3, 0(x2) # load 0xa72bc4bbd851244 from memory into f3
fnmadd.h f27, f13, f15, f3, dyn # perform operation
fnmadd.h f27, f13, f15, f3, rdn # perform operation
fnmadd.h f27, f13, f15, f3, rmm # perform operation
fnmadd.h f27, f13, f15, f3, rne # perform operation
fnmadd.h f27, f13, f15, f3, rtz # perform operation
fnmadd.h f27, f13, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f13, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f13, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f13, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f13, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f13, f15, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f25, 0(x2) # load 0x00007c00 from memory into f25
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f9, 0(x2) # load 0x0000fc01 from memory into f9
la x2, scratch
li x3, 0x479898decd65774 # load x3 with value 0x479898decd65774
sw x3, 0(x2) # store 0x479898decd65774 in memory
flh f23, 0(x2) # load 0x479898decd65774 from memory into f23
fnmadd.h f17, f25, f9, f23, dyn # perform operation
fnmadd.h f17, f25, f9, f23, rdn # perform operation
fnmadd.h f17, f25, f9, f23, rmm # perform operation
fnmadd.h f17, f25, f9, f23, rne # perform operation
fnmadd.h f17, f25, f9, f23, rtz # perform operation
fnmadd.h f17, f25, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f25, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f25, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f25, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f25, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f25, f9, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f12, 0(x2) # load 0x00007c00 from memory into f12
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f8, 0(x2) # load 0x000058b4 from memory into f8
la x2, scratch
li x3, 0xe19eb6bad1413fa9 # load x3 with value 0xe19eb6bad1413fa9
sw x3, 0(x2) # store 0xe19eb6bad1413fa9 in memory
flh f9, 0(x2) # load 0xe19eb6bad1413fa9 from memory into f9
fnmadd.h f25, f12, f8, f9, dyn # perform operation
fnmadd.h f25, f12, f8, f9, rdn # perform operation
fnmadd.h f25, f12, f8, f9, rmm # perform operation
fnmadd.h f25, f12, f8, f9, rne # perform operation
fnmadd.h f25, f12, f8, f9, rtz # perform operation
fnmadd.h f25, f12, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f12, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f12, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f12, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f12, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f12, f8, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f1, 0(x2) # load 0x00007c00 from memory into f1
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f31, 0(x2) # load 0x0000c93a from memory into f31
la x2, scratch
li x3, 0x2e8ed65f91011d3f # load x3 with value 0x2e8ed65f91011d3f
sw x3, 0(x2) # store 0x2e8ed65f91011d3f in memory
flh f20, 0(x2) # load 0x2e8ed65f91011d3f from memory into f20
fnmadd.h f25, f1, f31, f20, dyn # perform operation
fnmadd.h f25, f1, f31, f20, rdn # perform operation
fnmadd.h f25, f1, f31, f20, rmm # perform operation
fnmadd.h f25, f1, f31, f20, rne # perform operation
fnmadd.h f25, f1, f31, f20, rtz # perform operation
fnmadd.h f25, f1, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f1, f31, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f1, 0(x2) # load 0x0000fc00 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x73eab52f1291ab2c # load x3 with value 0x73eab52f1291ab2c
sw x3, 0(x2) # store 0x73eab52f1291ab2c in memory
flh f14, 0(x2) # load 0x73eab52f1291ab2c from memory into f14
fnmadd.h f7, f1, f22, f14, dyn # perform operation
fnmadd.h f7, f1, f22, f14, rdn # perform operation
fnmadd.h f7, f1, f22, f14, rmm # perform operation
fnmadd.h f7, f1, f22, f14, rne # perform operation
fnmadd.h f7, f1, f22, f14, rtz # perform operation
fnmadd.h f7, f1, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f1, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f1, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f1, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f1, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f1, f22, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f20, 0(x2) # load 0x0000fc00 from memory into f20
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
la x2, scratch
li x3, 0x382061a47e9381a7 # load x3 with value 0x382061a47e9381a7
sw x3, 0(x2) # store 0x382061a47e9381a7 in memory
flh f11, 0(x2) # load 0x382061a47e9381a7 from memory into f11
fnmadd.h f25, f20, f12, f11, dyn # perform operation
fnmadd.h f25, f20, f12, f11, rdn # perform operation
fnmadd.h f25, f20, f12, f11, rmm # perform operation
fnmadd.h f25, f20, f12, f11, rne # perform operation
fnmadd.h f25, f20, f12, f11, rtz # perform operation
fnmadd.h f25, f20, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f20, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f20, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f20, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f20, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f20, f12, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f17, 0(x2) # load 0x0000fc00 from memory into f17
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f19, 0(x2) # load 0x00003c00 from memory into f19
la x2, scratch
li x3, 0xce3213a0ec68a439 # load x3 with value 0xce3213a0ec68a439
sw x3, 0(x2) # store 0xce3213a0ec68a439 in memory
flh f11, 0(x2) # load 0xce3213a0ec68a439 from memory into f11
fnmadd.h f9, f17, f19, f11, dyn # perform operation
fnmadd.h f9, f17, f19, f11, rdn # perform operation
fnmadd.h f9, f17, f19, f11, rmm # perform operation
fnmadd.h f9, f17, f19, f11, rne # perform operation
fnmadd.h f9, f17, f19, f11, rtz # perform operation
fnmadd.h f9, f17, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f17, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f17, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f17, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f17, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f17, f19, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f27, 0(x2) # load 0x0000fc00 from memory into f27
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f26, 0(x2) # load 0x0000bc00 from memory into f26
la x2, scratch
li x3, 0x5b29f1c05dae0025 # load x3 with value 0x5b29f1c05dae0025
sw x3, 0(x2) # store 0x5b29f1c05dae0025 in memory
flh f18, 0(x2) # load 0x5b29f1c05dae0025 from memory into f18
fnmadd.h f14, f27, f26, f18, dyn # perform operation
fnmadd.h f14, f27, f26, f18, rdn # perform operation
fnmadd.h f14, f27, f26, f18, rmm # perform operation
fnmadd.h f14, f27, f26, f18, rne # perform operation
fnmadd.h f14, f27, f26, f18, rtz # perform operation
fnmadd.h f14, f27, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f27, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f27, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f27, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f27, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f27, f26, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f20, 0(x2) # load 0x0000fc00 from memory into f20
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f2, 0(x2) # load 0x00003e00 from memory into f2
la x2, scratch
li x3, 0x9b0940044488d5ed # load x3 with value 0x9b0940044488d5ed
sw x3, 0(x2) # store 0x9b0940044488d5ed in memory
flh f10, 0(x2) # load 0x9b0940044488d5ed from memory into f10
fnmadd.h f5, f20, f2, f10, dyn # perform operation
fnmadd.h f5, f20, f2, f10, rdn # perform operation
fnmadd.h f5, f20, f2, f10, rmm # perform operation
fnmadd.h f5, f20, f2, f10, rne # perform operation
fnmadd.h f5, f20, f2, f10, rtz # perform operation
fnmadd.h f5, f20, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f20, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f20, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f20, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f20, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f20, f2, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f22, 0(x2) # load 0x0000fc00 from memory into f22
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f3, 0(x2) # load 0x0000be00 from memory into f3
la x2, scratch
li x3, 0x23aeabd97cf2826b # load x3 with value 0x23aeabd97cf2826b
sw x3, 0(x2) # store 0x23aeabd97cf2826b in memory
flh f5, 0(x2) # load 0x23aeabd97cf2826b from memory into f5
fnmadd.h f28, f22, f3, f5, dyn # perform operation
fnmadd.h f28, f22, f3, f5, rdn # perform operation
fnmadd.h f28, f22, f3, f5, rmm # perform operation
fnmadd.h f28, f22, f3, f5, rne # perform operation
fnmadd.h f28, f22, f3, f5, rtz # perform operation
fnmadd.h f28, f22, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f22, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f22, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f22, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f22, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f22, f3, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f27, 0(x2) # load 0x0000fc00 from memory into f27
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f9, 0(x2) # load 0x00004000 from memory into f9
la x2, scratch
li x3, 0xdfc0806afbec5f45 # load x3 with value 0xdfc0806afbec5f45
sw x3, 0(x2) # store 0xdfc0806afbec5f45 in memory
flh f8, 0(x2) # load 0xdfc0806afbec5f45 from memory into f8
fnmadd.h f21, f27, f9, f8, dyn # perform operation
fnmadd.h f21, f27, f9, f8, rdn # perform operation
fnmadd.h f21, f27, f9, f8, rmm # perform operation
fnmadd.h f21, f27, f9, f8, rne # perform operation
fnmadd.h f21, f27, f9, f8, rtz # perform operation
fnmadd.h f21, f27, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f27, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f27, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f27, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f27, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f27, f9, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f19, 0(x2) # load 0x0000fc00 from memory into f19
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f1, 0(x2) # load 0x0000c000 from memory into f1
la x2, scratch
li x3, 0xa77f8bb0199f246c # load x3 with value 0xa77f8bb0199f246c
sw x3, 0(x2) # store 0xa77f8bb0199f246c in memory
flh f29, 0(x2) # load 0xa77f8bb0199f246c from memory into f29
fnmadd.h f11, f19, f1, f29, dyn # perform operation
fnmadd.h f11, f19, f1, f29, rdn # perform operation
fnmadd.h f11, f19, f1, f29, rmm # perform operation
fnmadd.h f11, f19, f1, f29, rne # perform operation
fnmadd.h f11, f19, f1, f29, rtz # perform operation
fnmadd.h f11, f19, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f19, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f19, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f19, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f19, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f19, f1, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f24, 0(x2) # load 0x0000fc00 from memory into f24
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f27, 0(x2) # load 0x00000400 from memory into f27
la x2, scratch
li x3, 0xdfd0d4dfd3afb661 # load x3 with value 0xdfd0d4dfd3afb661
sw x3, 0(x2) # store 0xdfd0d4dfd3afb661 in memory
flh f20, 0(x2) # load 0xdfd0d4dfd3afb661 from memory into f20
fnmadd.h f2, f24, f27, f20, dyn # perform operation
fnmadd.h f2, f24, f27, f20, rdn # perform operation
fnmadd.h f2, f24, f27, f20, rmm # perform operation
fnmadd.h f2, f24, f27, f20, rne # perform operation
fnmadd.h f2, f24, f27, f20, rtz # perform operation
fnmadd.h f2, f24, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f24, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f24, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f24, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f24, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f24, f27, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f21, 0(x2) # load 0x0000fc00 from memory into f21
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f14, 0(x2) # load 0x00008400 from memory into f14
la x2, scratch
li x3, 0x2603d939781eb85 # load x3 with value 0x2603d939781eb85
sw x3, 0(x2) # store 0x2603d939781eb85 in memory
flh f3, 0(x2) # load 0x2603d939781eb85 from memory into f3
fnmadd.h f9, f21, f14, f3, dyn # perform operation
fnmadd.h f9, f21, f14, f3, rdn # perform operation
fnmadd.h f9, f21, f14, f3, rmm # perform operation
fnmadd.h f9, f21, f14, f3, rne # perform operation
fnmadd.h f9, f21, f14, f3, rtz # perform operation
fnmadd.h f9, f21, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f21, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f21, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f21, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f21, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f21, f14, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f19, 0(x2) # load 0x0000fc00 from memory into f19
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f2, 0(x2) # load 0x00007bff from memory into f2
la x2, scratch
li x3, 0x35ef047ba2e5fc9a # load x3 with value 0x35ef047ba2e5fc9a
sw x3, 0(x2) # store 0x35ef047ba2e5fc9a in memory
flh f15, 0(x2) # load 0x35ef047ba2e5fc9a from memory into f15
fnmadd.h f21, f19, f2, f15, dyn # perform operation
fnmadd.h f21, f19, f2, f15, rdn # perform operation
fnmadd.h f21, f19, f2, f15, rmm # perform operation
fnmadd.h f21, f19, f2, f15, rne # perform operation
fnmadd.h f21, f19, f2, f15, rtz # perform operation
fnmadd.h f21, f19, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f19, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f19, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f19, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f19, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f19, f2, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f29, 0(x2) # load 0x0000fc00 from memory into f29
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f11, 0(x2) # load 0x0000fbff from memory into f11
la x2, scratch
li x3, 0x9493b89172af8d8d # load x3 with value 0x9493b89172af8d8d
sw x3, 0(x2) # store 0x9493b89172af8d8d in memory
flh f5, 0(x2) # load 0x9493b89172af8d8d from memory into f5
fnmadd.h f3, f29, f11, f5, dyn # perform operation
fnmadd.h f3, f29, f11, f5, rdn # perform operation
fnmadd.h f3, f29, f11, f5, rmm # perform operation
fnmadd.h f3, f29, f11, f5, rne # perform operation
fnmadd.h f3, f29, f11, f5, rtz # perform operation
fnmadd.h f3, f29, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f29, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f29, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f29, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f29, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f29, f11, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f11, 0(x2) # load 0x0000fc00 from memory into f11
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f24, 0(x2) # load 0x000003ff from memory into f24
la x2, scratch
li x3, 0x485ace462ea883a7 # load x3 with value 0x485ace462ea883a7
sw x3, 0(x2) # store 0x485ace462ea883a7 in memory
flh f14, 0(x2) # load 0x485ace462ea883a7 from memory into f14
fnmadd.h f16, f11, f24, f14, dyn # perform operation
fnmadd.h f16, f11, f24, f14, rdn # perform operation
fnmadd.h f16, f11, f24, f14, rmm # perform operation
fnmadd.h f16, f11, f24, f14, rne # perform operation
fnmadd.h f16, f11, f24, f14, rtz # perform operation
fnmadd.h f16, f11, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f11, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f11, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f11, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f11, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f11, f24, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f3, 0(x2) # load 0x0000fc00 from memory into f3
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f8, 0(x2) # load 0x000083ff from memory into f8
la x2, scratch
li x3, 0xb4da24e32bfd8966 # load x3 with value 0xb4da24e32bfd8966
sw x3, 0(x2) # store 0xb4da24e32bfd8966 in memory
flh f20, 0(x2) # load 0xb4da24e32bfd8966 from memory into f20
fnmadd.h f26, f3, f8, f20, dyn # perform operation
fnmadd.h f26, f3, f8, f20, rdn # perform operation
fnmadd.h f26, f3, f8, f20, rmm # perform operation
fnmadd.h f26, f3, f8, f20, rne # perform operation
fnmadd.h f26, f3, f8, f20, rtz # perform operation
fnmadd.h f26, f3, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f3, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f3, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f3, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f3, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f3, f8, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f9, 0(x2) # load 0x0000fc00 from memory into f9
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f22, 0(x2) # load 0x00000200 from memory into f22
la x2, scratch
li x3, 0xcbb462009f825c65 # load x3 with value 0xcbb462009f825c65
sw x3, 0(x2) # store 0xcbb462009f825c65 in memory
flh f12, 0(x2) # load 0xcbb462009f825c65 from memory into f12
fnmadd.h f15, f9, f22, f12, dyn # perform operation
fnmadd.h f15, f9, f22, f12, rdn # perform operation
fnmadd.h f15, f9, f22, f12, rmm # perform operation
fnmadd.h f15, f9, f22, f12, rne # perform operation
fnmadd.h f15, f9, f22, f12, rtz # perform operation
fnmadd.h f15, f9, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f9, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f9, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f9, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f9, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f9, f22, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f14, 0(x2) # load 0x0000fc00 from memory into f14
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f2, 0(x2) # load 0x00008200 from memory into f2
la x2, scratch
li x3, 0xcd6bfb46e30d319d # load x3 with value 0xcd6bfb46e30d319d
sw x3, 0(x2) # store 0xcd6bfb46e30d319d in memory
flh f18, 0(x2) # load 0xcd6bfb46e30d319d from memory into f18
fnmadd.h f27, f14, f2, f18, dyn # perform operation
fnmadd.h f27, f14, f2, f18, rdn # perform operation
fnmadd.h f27, f14, f2, f18, rmm # perform operation
fnmadd.h f27, f14, f2, f18, rne # perform operation
fnmadd.h f27, f14, f2, f18, rtz # perform operation
fnmadd.h f27, f14, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f14, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f14, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f14, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f14, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f14, f2, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f11, 0(x2) # load 0x0000fc00 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0x2732d9171e9e1521 # load x3 with value 0x2732d9171e9e1521
sw x3, 0(x2) # store 0x2732d9171e9e1521 in memory
flh f21, 0(x2) # load 0x2732d9171e9e1521 from memory into f21
fnmadd.h f15, f11, f30, f21, dyn # perform operation
fnmadd.h f15, f11, f30, f21, rdn # perform operation
fnmadd.h f15, f11, f30, f21, rmm # perform operation
fnmadd.h f15, f11, f30, f21, rne # perform operation
fnmadd.h f15, f11, f30, f21, rtz # perform operation
fnmadd.h f15, f11, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f11, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f11, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f11, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f11, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f11, f30, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f13, 0(x2) # load 0x0000fc00 from memory into f13
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f3, 0(x2) # load 0x00008001 from memory into f3
la x2, scratch
li x3, 0xc41ec507724e6c63 # load x3 with value 0xc41ec507724e6c63
sw x3, 0(x2) # store 0xc41ec507724e6c63 in memory
flh f9, 0(x2) # load 0xc41ec507724e6c63 from memory into f9
fnmadd.h f11, f13, f3, f9, dyn # perform operation
fnmadd.h f11, f13, f3, f9, rdn # perform operation
fnmadd.h f11, f13, f3, f9, rmm # perform operation
fnmadd.h f11, f13, f3, f9, rne # perform operation
fnmadd.h f11, f13, f3, f9, rtz # perform operation
fnmadd.h f11, f13, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f13, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f13, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f13, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f13, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f13, f3, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f26, 0(x2) # load 0x0000fc00 from memory into f26
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f1, 0(x2) # load 0x00007c00 from memory into f1
la x2, scratch
li x3, 0x60851716319c59c3 # load x3 with value 0x60851716319c59c3
sw x3, 0(x2) # store 0x60851716319c59c3 in memory
flh f17, 0(x2) # load 0x60851716319c59c3 from memory into f17
fnmadd.h f6, f26, f1, f17, dyn # perform operation
fnmadd.h f6, f26, f1, f17, rdn # perform operation
fnmadd.h f6, f26, f1, f17, rmm # perform operation
fnmadd.h f6, f26, f1, f17, rne # perform operation
fnmadd.h f6, f26, f1, f17, rtz # perform operation
fnmadd.h f6, f26, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f26, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f26, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f26, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f26, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f26, f1, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f23, 0(x2) # load 0x0000fc00 from memory into f23
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f5, 0(x2) # load 0x0000fc00 from memory into f5
la x2, scratch
li x3, 0x3a78dd43ba4d1fe1 # load x3 with value 0x3a78dd43ba4d1fe1
sw x3, 0(x2) # store 0x3a78dd43ba4d1fe1 in memory
flh f9, 0(x2) # load 0x3a78dd43ba4d1fe1 from memory into f9
fnmadd.h f19, f23, f5, f9, dyn # perform operation
fnmadd.h f19, f23, f5, f9, rdn # perform operation
fnmadd.h f19, f23, f5, f9, rmm # perform operation
fnmadd.h f19, f23, f5, f9, rne # perform operation
fnmadd.h f19, f23, f5, f9, rtz # perform operation
fnmadd.h f19, f23, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f23, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f23, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f23, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f23, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f23, f5, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f13, 0(x2) # load 0x0000fc00 from memory into f13
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f23, 0(x2) # load 0x00007e00 from memory into f23
la x2, scratch
li x3, 0x4dd144d2a697b295 # load x3 with value 0x4dd144d2a697b295
sw x3, 0(x2) # store 0x4dd144d2a697b295 in memory
flh f10, 0(x2) # load 0x4dd144d2a697b295 from memory into f10
fnmadd.h f8, f13, f23, f10, dyn # perform operation
fnmadd.h f8, f13, f23, f10, rdn # perform operation
fnmadd.h f8, f13, f23, f10, rmm # perform operation
fnmadd.h f8, f13, f23, f10, rne # perform operation
fnmadd.h f8, f13, f23, f10, rtz # perform operation
fnmadd.h f8, f13, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f13, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f13, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f13, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f13, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f13, f23, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f29, 0(x2) # load 0x0000fc00 from memory into f29
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f24, 0(x2) # load 0x00007fff from memory into f24
la x2, scratch
li x3, 0x3049c89e62ef4a7d # load x3 with value 0x3049c89e62ef4a7d
sw x3, 0(x2) # store 0x3049c89e62ef4a7d in memory
flh f26, 0(x2) # load 0x3049c89e62ef4a7d from memory into f26
fnmadd.h f19, f29, f24, f26, dyn # perform operation
fnmadd.h f19, f29, f24, f26, rdn # perform operation
fnmadd.h f19, f29, f24, f26, rmm # perform operation
fnmadd.h f19, f29, f24, f26, rne # perform operation
fnmadd.h f19, f29, f24, f26, rtz # perform operation
fnmadd.h f19, f29, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f29, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f29, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f29, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f29, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f29, f24, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f11, 0(x2) # load 0x0000fc00 from memory into f11
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f10, 0(x2) # load 0x0000fe00 from memory into f10
la x2, scratch
li x3, 0x2ca534b4e4f1ac70 # load x3 with value 0x2ca534b4e4f1ac70
sw x3, 0(x2) # store 0x2ca534b4e4f1ac70 in memory
flh f24, 0(x2) # load 0x2ca534b4e4f1ac70 from memory into f24
fnmadd.h f21, f11, f10, f24, dyn # perform operation
fnmadd.h f21, f11, f10, f24, rdn # perform operation
fnmadd.h f21, f11, f10, f24, rmm # perform operation
fnmadd.h f21, f11, f10, f24, rne # perform operation
fnmadd.h f21, f11, f10, f24, rtz # perform operation
fnmadd.h f21, f11, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f11, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f11, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f11, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f11, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f11, f10, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f16, 0(x2) # load 0x0000fc00 from memory into f16
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f28, 0(x2) # load 0x00007c01 from memory into f28
la x2, scratch
li x3, 0x88e8b4f89ddd013e # load x3 with value 0x88e8b4f89ddd013e
sw x3, 0(x2) # store 0x88e8b4f89ddd013e in memory
flh f19, 0(x2) # load 0x88e8b4f89ddd013e from memory into f19
fnmadd.h f5, f16, f28, f19, dyn # perform operation
fnmadd.h f5, f16, f28, f19, rdn # perform operation
fnmadd.h f5, f16, f28, f19, rmm # perform operation
fnmadd.h f5, f16, f28, f19, rne # perform operation
fnmadd.h f5, f16, f28, f19, rtz # perform operation
fnmadd.h f5, f16, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f16, f28, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f20, 0(x2) # load 0x0000fc00 from memory into f20
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f11, 0(x2) # load 0x00007dff from memory into f11
la x2, scratch
li x3, 0x87be32ed98270b8b # load x3 with value 0x87be32ed98270b8b
sw x3, 0(x2) # store 0x87be32ed98270b8b in memory
flh f23, 0(x2) # load 0x87be32ed98270b8b from memory into f23
fnmadd.h f3, f20, f11, f23, dyn # perform operation
fnmadd.h f3, f20, f11, f23, rdn # perform operation
fnmadd.h f3, f20, f11, f23, rmm # perform operation
fnmadd.h f3, f20, f11, f23, rne # perform operation
fnmadd.h f3, f20, f11, f23, rtz # perform operation
fnmadd.h f3, f20, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f20, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f20, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f20, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f20, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f20, f11, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f8, 0(x2) # load 0x0000fc00 from memory into f8
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f30, 0(x2) # load 0x0000fc01 from memory into f30
la x2, scratch
li x3, 0x30c231065d56ab99 # load x3 with value 0x30c231065d56ab99
sw x3, 0(x2) # store 0x30c231065d56ab99 in memory
flh f29, 0(x2) # load 0x30c231065d56ab99 from memory into f29
fnmadd.h f18, f8, f30, f29, dyn # perform operation
fnmadd.h f18, f8, f30, f29, rdn # perform operation
fnmadd.h f18, f8, f30, f29, rmm # perform operation
fnmadd.h f18, f8, f30, f29, rne # perform operation
fnmadd.h f18, f8, f30, f29, rtz # perform operation
fnmadd.h f18, f8, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f8, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f8, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f8, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f8, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f8, f30, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f9, 0(x2) # load 0x0000fc00 from memory into f9
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f3, 0(x2) # load 0x000058b4 from memory into f3
la x2, scratch
li x3, 0x881555cada4cf031 # load x3 with value 0x881555cada4cf031
sw x3, 0(x2) # store 0x881555cada4cf031 in memory
flh f2, 0(x2) # load 0x881555cada4cf031 from memory into f2
fnmadd.h f30, f9, f3, f2, dyn # perform operation
fnmadd.h f30, f9, f3, f2, rdn # perform operation
fnmadd.h f30, f9, f3, f2, rmm # perform operation
fnmadd.h f30, f9, f3, f2, rne # perform operation
fnmadd.h f30, f9, f3, f2, rtz # perform operation
fnmadd.h f30, f9, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f9, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f9, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f9, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f9, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f9, f3, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f12, 0(x2) # load 0x0000fc00 from memory into f12
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f9, 0(x2) # load 0x0000c93a from memory into f9
la x2, scratch
li x3, 0x42ebd094d81e9f99 # load x3 with value 0x42ebd094d81e9f99
sw x3, 0(x2) # store 0x42ebd094d81e9f99 in memory
flh f20, 0(x2) # load 0x42ebd094d81e9f99 from memory into f20
fnmadd.h f28, f12, f9, f20, dyn # perform operation
fnmadd.h f28, f12, f9, f20, rdn # perform operation
fnmadd.h f28, f12, f9, f20, rmm # perform operation
fnmadd.h f28, f12, f9, f20, rne # perform operation
fnmadd.h f28, f12, f9, f20, rtz # perform operation
fnmadd.h f28, f12, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f12, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f12, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f12, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f12, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f12, f9, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f27, 0(x2) # load 0x00007e00 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0xd9a72dfd1310cda # load x3 with value 0xd9a72dfd1310cda
sw x3, 0(x2) # store 0xd9a72dfd1310cda in memory
flh f17, 0(x2) # load 0xd9a72dfd1310cda from memory into f17
fnmadd.h f7, f27, f16, f17, dyn # perform operation
fnmadd.h f7, f27, f16, f17, rdn # perform operation
fnmadd.h f7, f27, f16, f17, rmm # perform operation
fnmadd.h f7, f27, f16, f17, rne # perform operation
fnmadd.h f7, f27, f16, f17, rtz # perform operation
fnmadd.h f7, f27, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f27, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f27, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f27, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f27, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f27, f16, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f28, 0(x2) # load 0x00007e00 from memory into f28
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f23, 0(x2) # load 0x00008000 from memory into f23
la x2, scratch
li x3, 0x682824d2416bee70 # load x3 with value 0x682824d2416bee70
sw x3, 0(x2) # store 0x682824d2416bee70 in memory
flh f13, 0(x2) # load 0x682824d2416bee70 from memory into f13
fnmadd.h f16, f28, f23, f13, dyn # perform operation
fnmadd.h f16, f28, f23, f13, rdn # perform operation
fnmadd.h f16, f28, f23, f13, rmm # perform operation
fnmadd.h f16, f28, f23, f13, rne # perform operation
fnmadd.h f16, f28, f23, f13, rtz # perform operation
fnmadd.h f16, f28, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f28, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f28, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f28, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f28, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f28, f23, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f31, 0(x2) # load 0x00007e00 from memory into f31
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f11, 0(x2) # load 0x00003c00 from memory into f11
la x2, scratch
li x3, 0x286cbf6a30c3adb4 # load x3 with value 0x286cbf6a30c3adb4
sw x3, 0(x2) # store 0x286cbf6a30c3adb4 in memory
flh f5, 0(x2) # load 0x286cbf6a30c3adb4 from memory into f5
fnmadd.h f28, f31, f11, f5, dyn # perform operation
fnmadd.h f28, f31, f11, f5, rdn # perform operation
fnmadd.h f28, f31, f11, f5, rmm # perform operation
fnmadd.h f28, f31, f11, f5, rne # perform operation
fnmadd.h f28, f31, f11, f5, rtz # perform operation
fnmadd.h f28, f31, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f31, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f31, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f31, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f31, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f31, f11, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f1, 0(x2) # load 0x0000bc00 from memory into f1
la x2, scratch
li x3, 0x8ee8e8e0747c0b4a # load x3 with value 0x8ee8e8e0747c0b4a
sw x3, 0(x2) # store 0x8ee8e8e0747c0b4a in memory
flh f13, 0(x2) # load 0x8ee8e8e0747c0b4a from memory into f13
fnmadd.h f25, f18, f1, f13, dyn # perform operation
fnmadd.h f25, f18, f1, f13, rdn # perform operation
fnmadd.h f25, f18, f1, f13, rmm # perform operation
fnmadd.h f25, f18, f1, f13, rne # perform operation
fnmadd.h f25, f18, f1, f13, rtz # perform operation
fnmadd.h f25, f18, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f18, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f18, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f18, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f18, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f18, f1, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f8, 0(x2) # load 0x00007e00 from memory into f8
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
la x2, scratch
li x3, 0xcb05e1f3c09c055a # load x3 with value 0xcb05e1f3c09c055a
sw x3, 0(x2) # store 0xcb05e1f3c09c055a in memory
flh f11, 0(x2) # load 0xcb05e1f3c09c055a from memory into f11
fnmadd.h f9, f8, f10, f11, dyn # perform operation
fnmadd.h f9, f8, f10, f11, rdn # perform operation
fnmadd.h f9, f8, f10, f11, rmm # perform operation
fnmadd.h f9, f8, f10, f11, rne # perform operation
fnmadd.h f9, f8, f10, f11, rtz # perform operation
fnmadd.h f9, f8, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f8, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f8, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f8, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f8, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f8, f10, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f7, 0(x2) # load 0x00007e00 from memory into f7
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f25, 0(x2) # load 0x0000be00 from memory into f25
la x2, scratch
li x3, 0x8fde6dacaa987c56 # load x3 with value 0x8fde6dacaa987c56
sw x3, 0(x2) # store 0x8fde6dacaa987c56 in memory
flh f11, 0(x2) # load 0x8fde6dacaa987c56 from memory into f11
fnmadd.h f27, f7, f25, f11, dyn # perform operation
fnmadd.h f27, f7, f25, f11, rdn # perform operation
fnmadd.h f27, f7, f25, f11, rmm # perform operation
fnmadd.h f27, f7, f25, f11, rne # perform operation
fnmadd.h f27, f7, f25, f11, rtz # perform operation
fnmadd.h f27, f7, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f7, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f7, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f7, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f7, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f7, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f12, 0(x2) # load 0x00007e00 from memory into f12
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f9, 0(x2) # load 0x00004000 from memory into f9
la x2, scratch
li x3, 0x7bf64970836a4316 # load x3 with value 0x7bf64970836a4316
sw x3, 0(x2) # store 0x7bf64970836a4316 in memory
flh f28, 0(x2) # load 0x7bf64970836a4316 from memory into f28
fnmadd.h f20, f12, f9, f28, dyn # perform operation
fnmadd.h f20, f12, f9, f28, rdn # perform operation
fnmadd.h f20, f12, f9, f28, rmm # perform operation
fnmadd.h f20, f12, f9, f28, rne # perform operation
fnmadd.h f20, f12, f9, f28, rtz # perform operation
fnmadd.h f20, f12, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f12, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f12, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f12, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f12, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f12, f9, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f13, 0(x2) # load 0x00007e00 from memory into f13
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f27, 0(x2) # load 0x0000c000 from memory into f27
la x2, scratch
li x3, 0x6ce06387a02ef621 # load x3 with value 0x6ce06387a02ef621
sw x3, 0(x2) # store 0x6ce06387a02ef621 in memory
flh f8, 0(x2) # load 0x6ce06387a02ef621 from memory into f8
fnmadd.h f26, f13, f27, f8, dyn # perform operation
fnmadd.h f26, f13, f27, f8, rdn # perform operation
fnmadd.h f26, f13, f27, f8, rmm # perform operation
fnmadd.h f26, f13, f27, f8, rne # perform operation
fnmadd.h f26, f13, f27, f8, rtz # perform operation
fnmadd.h f26, f13, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f13, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f13, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f13, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f13, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f13, f27, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f8, 0(x2) # load 0x00007e00 from memory into f8
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f23, 0(x2) # load 0x00000400 from memory into f23
la x2, scratch
li x3, 0xb646b2f94c5e5139 # load x3 with value 0xb646b2f94c5e5139
sw x3, 0(x2) # store 0xb646b2f94c5e5139 in memory
flh f22, 0(x2) # load 0xb646b2f94c5e5139 from memory into f22
fnmadd.h f1, f8, f23, f22, dyn # perform operation
fnmadd.h f1, f8, f23, f22, rdn # perform operation
fnmadd.h f1, f8, f23, f22, rmm # perform operation
fnmadd.h f1, f8, f23, f22, rne # perform operation
fnmadd.h f1, f8, f23, f22, rtz # perform operation
fnmadd.h f1, f8, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f8, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f8, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f8, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f8, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f8, f23, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f8, 0(x2) # load 0x00007e00 from memory into f8
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f28, 0(x2) # load 0x00008400 from memory into f28
la x2, scratch
li x3, 0x843f4f9593450ad3 # load x3 with value 0x843f4f9593450ad3
sw x3, 0(x2) # store 0x843f4f9593450ad3 in memory
flh f19, 0(x2) # load 0x843f4f9593450ad3 from memory into f19
fnmadd.h f31, f8, f28, f19, dyn # perform operation
fnmadd.h f31, f8, f28, f19, rdn # perform operation
fnmadd.h f31, f8, f28, f19, rmm # perform operation
fnmadd.h f31, f8, f28, f19, rne # perform operation
fnmadd.h f31, f8, f28, f19, rtz # perform operation
fnmadd.h f31, f8, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f8, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f8, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f8, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f8, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f8, f28, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f14, 0(x2) # load 0x00007e00 from memory into f14
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f8, 0(x2) # load 0x00007bff from memory into f8
la x2, scratch
li x3, 0x6d0e0d22691db3de # load x3 with value 0x6d0e0d22691db3de
sw x3, 0(x2) # store 0x6d0e0d22691db3de in memory
flh f20, 0(x2) # load 0x6d0e0d22691db3de from memory into f20
fnmadd.h f18, f14, f8, f20, dyn # perform operation
fnmadd.h f18, f14, f8, f20, rdn # perform operation
fnmadd.h f18, f14, f8, f20, rmm # perform operation
fnmadd.h f18, f14, f8, f20, rne # perform operation
fnmadd.h f18, f14, f8, f20, rtz # perform operation
fnmadd.h f18, f14, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f14, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f14, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f14, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f14, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f14, f8, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f8, 0(x2) # load 0x00007e00 from memory into f8
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f11, 0(x2) # load 0x0000fbff from memory into f11
la x2, scratch
li x3, 0x58f4832e2690ea0a # load x3 with value 0x58f4832e2690ea0a
sw x3, 0(x2) # store 0x58f4832e2690ea0a in memory
flh f2, 0(x2) # load 0x58f4832e2690ea0a from memory into f2
fnmadd.h f10, f8, f11, f2, dyn # perform operation
fnmadd.h f10, f8, f11, f2, rdn # perform operation
fnmadd.h f10, f8, f11, f2, rmm # perform operation
fnmadd.h f10, f8, f11, f2, rne # perform operation
fnmadd.h f10, f8, f11, f2, rtz # perform operation
fnmadd.h f10, f8, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f8, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f8, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f8, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f8, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f8, f11, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f27, 0(x2) # load 0x00007e00 from memory into f27
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f13, 0(x2) # load 0x000003ff from memory into f13
la x2, scratch
li x3, 0x93372e42d6c5ee34 # load x3 with value 0x93372e42d6c5ee34
sw x3, 0(x2) # store 0x93372e42d6c5ee34 in memory
flh f6, 0(x2) # load 0x93372e42d6c5ee34 from memory into f6
fnmadd.h f11, f27, f13, f6, dyn # perform operation
fnmadd.h f11, f27, f13, f6, rdn # perform operation
fnmadd.h f11, f27, f13, f6, rmm # perform operation
fnmadd.h f11, f27, f13, f6, rne # perform operation
fnmadd.h f11, f27, f13, f6, rtz # perform operation
fnmadd.h f11, f27, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f27, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f27, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f27, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f27, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f27, f13, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f6, 0(x2) # load 0x000083ff from memory into f6
la x2, scratch
li x3, 0x1ecfddc87b7b3c0 # load x3 with value 0x1ecfddc87b7b3c0
sw x3, 0(x2) # store 0x1ecfddc87b7b3c0 in memory
flh f16, 0(x2) # load 0x1ecfddc87b7b3c0 from memory into f16
fnmadd.h f14, f20, f6, f16, dyn # perform operation
fnmadd.h f14, f20, f6, f16, rdn # perform operation
fnmadd.h f14, f20, f6, f16, rmm # perform operation
fnmadd.h f14, f20, f6, f16, rne # perform operation
fnmadd.h f14, f20, f6, f16, rtz # perform operation
fnmadd.h f14, f20, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f20, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f20, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f20, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f20, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f20, f6, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f3, 0(x2) # load 0x00007e00 from memory into f3
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f5, 0(x2) # load 0x00000200 from memory into f5
la x2, scratch
li x3, 0xf4625e6afec98c78 # load x3 with value 0xf4625e6afec98c78
sw x3, 0(x2) # store 0xf4625e6afec98c78 in memory
flh f24, 0(x2) # load 0xf4625e6afec98c78 from memory into f24
fnmadd.h f2, f3, f5, f24, dyn # perform operation
fnmadd.h f2, f3, f5, f24, rdn # perform operation
fnmadd.h f2, f3, f5, f24, rmm # perform operation
fnmadd.h f2, f3, f5, f24, rne # perform operation
fnmadd.h f2, f3, f5, f24, rtz # perform operation
fnmadd.h f2, f3, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f3, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f3, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f3, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f3, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f3, f5, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f8, 0(x2) # load 0x00007e00 from memory into f8
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f28, 0(x2) # load 0x00008200 from memory into f28
la x2, scratch
li x3, 0x9cda3fbe74067e05 # load x3 with value 0x9cda3fbe74067e05
sw x3, 0(x2) # store 0x9cda3fbe74067e05 in memory
flh f6, 0(x2) # load 0x9cda3fbe74067e05 from memory into f6
fnmadd.h f21, f8, f28, f6, dyn # perform operation
fnmadd.h f21, f8, f28, f6, rdn # perform operation
fnmadd.h f21, f8, f28, f6, rmm # perform operation
fnmadd.h f21, f8, f28, f6, rne # perform operation
fnmadd.h f21, f8, f28, f6, rtz # perform operation
fnmadd.h f21, f8, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f8, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f8, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f8, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f8, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f8, f28, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0xe77ae5b64f69488f # load x3 with value 0xe77ae5b64f69488f
sw x3, 0(x2) # store 0xe77ae5b64f69488f in memory
flh f20, 0(x2) # load 0xe77ae5b64f69488f from memory into f20
fnmadd.h f31, f18, f14, f20, dyn # perform operation
fnmadd.h f31, f18, f14, f20, rdn # perform operation
fnmadd.h f31, f18, f14, f20, rmm # perform operation
fnmadd.h f31, f18, f14, f20, rne # perform operation
fnmadd.h f31, f18, f14, f20, rtz # perform operation
fnmadd.h f31, f18, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f18, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f18, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f18, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f18, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f18, f14, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f6, 0(x2) # load 0x00008001 from memory into f6
la x2, scratch
li x3, 0x5498c9b24190c4fc # load x3 with value 0x5498c9b24190c4fc
sw x3, 0(x2) # store 0x5498c9b24190c4fc in memory
flh f13, 0(x2) # load 0x5498c9b24190c4fc from memory into f13
fnmadd.h f16, f5, f6, f13, dyn # perform operation
fnmadd.h f16, f5, f6, f13, rdn # perform operation
fnmadd.h f16, f5, f6, f13, rmm # perform operation
fnmadd.h f16, f5, f6, f13, rne # perform operation
fnmadd.h f16, f5, f6, f13, rtz # perform operation
fnmadd.h f16, f5, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f5, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f5, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f5, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f5, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f5, f6, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f13, 0(x2) # load 0x00007c00 from memory into f13
la x2, scratch
li x3, 0x19096be8b0708135 # load x3 with value 0x19096be8b0708135
sw x3, 0(x2) # store 0x19096be8b0708135 in memory
flh f25, 0(x2) # load 0x19096be8b0708135 from memory into f25
fnmadd.h f2, f24, f13, f25, dyn # perform operation
fnmadd.h f2, f24, f13, f25, rdn # perform operation
fnmadd.h f2, f24, f13, f25, rmm # perform operation
fnmadd.h f2, f24, f13, f25, rne # perform operation
fnmadd.h f2, f24, f13, f25, rtz # perform operation
fnmadd.h f2, f24, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f24, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f24, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f24, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f24, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f24, f13, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f7, 0(x2) # load 0x00007e00 from memory into f7
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f1, 0(x2) # load 0x0000fc00 from memory into f1
la x2, scratch
li x3, 0xc82b4f4c9e7775af # load x3 with value 0xc82b4f4c9e7775af
sw x3, 0(x2) # store 0xc82b4f4c9e7775af in memory
flh f15, 0(x2) # load 0xc82b4f4c9e7775af from memory into f15
fnmadd.h f27, f7, f1, f15, dyn # perform operation
fnmadd.h f27, f7, f1, f15, rdn # perform operation
fnmadd.h f27, f7, f1, f15, rmm # perform operation
fnmadd.h f27, f7, f1, f15, rne # perform operation
fnmadd.h f27, f7, f1, f15, rtz # perform operation
fnmadd.h f27, f7, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f7, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f7, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f7, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f7, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f7, f1, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f1, 0(x2) # load 0x00007e00 from memory into f1
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f9, 0(x2) # load 0x00007e00 from memory into f9
la x2, scratch
li x3, 0x1ec535eef16faa69 # load x3 with value 0x1ec535eef16faa69
sw x3, 0(x2) # store 0x1ec535eef16faa69 in memory
flh f22, 0(x2) # load 0x1ec535eef16faa69 from memory into f22
fnmadd.h f15, f1, f9, f22, dyn # perform operation
fnmadd.h f15, f1, f9, f22, rdn # perform operation
fnmadd.h f15, f1, f9, f22, rmm # perform operation
fnmadd.h f15, f1, f9, f22, rne # perform operation
fnmadd.h f15, f1, f9, f22, rtz # perform operation
fnmadd.h f15, f1, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f1, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f1, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f1, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f1, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f1, f9, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f14, 0(x2) # load 0x00007fff from memory into f14
la x2, scratch
li x3, 0x4409ae89a5c0a7a3 # load x3 with value 0x4409ae89a5c0a7a3
sw x3, 0(x2) # store 0x4409ae89a5c0a7a3 in memory
flh f1, 0(x2) # load 0x4409ae89a5c0a7a3 from memory into f1
fnmadd.h f31, f20, f14, f1, dyn # perform operation
fnmadd.h f31, f20, f14, f1, rdn # perform operation
fnmadd.h f31, f20, f14, f1, rmm # perform operation
fnmadd.h f31, f20, f14, f1, rne # perform operation
fnmadd.h f31, f20, f14, f1, rtz # perform operation
fnmadd.h f31, f20, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f20, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f20, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f20, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f20, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f20, f14, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f26, 0(x2) # load 0x00007e00 from memory into f26
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f5, 0(x2) # load 0x0000fe00 from memory into f5
la x2, scratch
li x3, 0x6bd495b9a5b9dbe5 # load x3 with value 0x6bd495b9a5b9dbe5
sw x3, 0(x2) # store 0x6bd495b9a5b9dbe5 in memory
flh f28, 0(x2) # load 0x6bd495b9a5b9dbe5 from memory into f28
fnmadd.h f11, f26, f5, f28, dyn # perform operation
fnmadd.h f11, f26, f5, f28, rdn # perform operation
fnmadd.h f11, f26, f5, f28, rmm # perform operation
fnmadd.h f11, f26, f5, f28, rne # perform operation
fnmadd.h f11, f26, f5, f28, rtz # perform operation
fnmadd.h f11, f26, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f26, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f26, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f26, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f26, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f26, f5, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f7, 0(x2) # load 0x00007c01 from memory into f7
la x2, scratch
li x3, 0x759a3c3002bfbec5 # load x3 with value 0x759a3c3002bfbec5
sw x3, 0(x2) # store 0x759a3c3002bfbec5 in memory
flh f13, 0(x2) # load 0x759a3c3002bfbec5 from memory into f13
fnmadd.h f5, f24, f7, f13, dyn # perform operation
fnmadd.h f5, f24, f7, f13, rdn # perform operation
fnmadd.h f5, f24, f7, f13, rmm # perform operation
fnmadd.h f5, f24, f7, f13, rne # perform operation
fnmadd.h f5, f24, f7, f13, rtz # perform operation
fnmadd.h f5, f24, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f24, f7, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f2, 0(x2) # load 0x00007e00 from memory into f2
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f27, 0(x2) # load 0x00007dff from memory into f27
la x2, scratch
li x3, 0xce2d281eb7f2beab # load x3 with value 0xce2d281eb7f2beab
sw x3, 0(x2) # store 0xce2d281eb7f2beab in memory
flh f5, 0(x2) # load 0xce2d281eb7f2beab from memory into f5
fnmadd.h f17, f2, f27, f5, dyn # perform operation
fnmadd.h f17, f2, f27, f5, rdn # perform operation
fnmadd.h f17, f2, f27, f5, rmm # perform operation
fnmadd.h f17, f2, f27, f5, rne # perform operation
fnmadd.h f17, f2, f27, f5, rtz # perform operation
fnmadd.h f17, f2, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f2, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f2, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f2, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f2, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f2, f27, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f16, 0(x2) # load 0x00007e00 from memory into f16
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f7, 0(x2) # load 0x0000fc01 from memory into f7
la x2, scratch
li x3, 0x733533ecb4037ba6 # load x3 with value 0x733533ecb4037ba6
sw x3, 0(x2) # store 0x733533ecb4037ba6 in memory
flh f11, 0(x2) # load 0x733533ecb4037ba6 from memory into f11
fnmadd.h f29, f16, f7, f11, dyn # perform operation
fnmadd.h f29, f16, f7, f11, rdn # perform operation
fnmadd.h f29, f16, f7, f11, rmm # perform operation
fnmadd.h f29, f16, f7, f11, rne # perform operation
fnmadd.h f29, f16, f7, f11, rtz # perform operation
fnmadd.h f29, f16, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f16, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f16, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f16, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f16, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f16, f7, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f2, 0(x2) # load 0x00007e00 from memory into f2
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f16, 0(x2) # load 0x000058b4 from memory into f16
la x2, scratch
li x3, 0x644047df4af3bd47 # load x3 with value 0x644047df4af3bd47
sw x3, 0(x2) # store 0x644047df4af3bd47 in memory
flh f27, 0(x2) # load 0x644047df4af3bd47 from memory into f27
fnmadd.h f6, f2, f16, f27, dyn # perform operation
fnmadd.h f6, f2, f16, f27, rdn # perform operation
fnmadd.h f6, f2, f16, f27, rmm # perform operation
fnmadd.h f6, f2, f16, f27, rne # perform operation
fnmadd.h f6, f2, f16, f27, rtz # perform operation
fnmadd.h f6, f2, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f2, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f2, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f2, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f2, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f2, f16, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f14, 0(x2) # load 0x00007e00 from memory into f14
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
la x2, scratch
li x3, 0x8e51fa8048a52468 # load x3 with value 0x8e51fa8048a52468
sw x3, 0(x2) # store 0x8e51fa8048a52468 in memory
flh f15, 0(x2) # load 0x8e51fa8048a52468 from memory into f15
fnmadd.h f25, f14, f16, f15, dyn # perform operation
fnmadd.h f25, f14, f16, f15, rdn # perform operation
fnmadd.h f25, f14, f16, f15, rmm # perform operation
fnmadd.h f25, f14, f16, f15, rne # perform operation
fnmadd.h f25, f14, f16, f15, rtz # perform operation
fnmadd.h f25, f14, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f14, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f14, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f14, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f14, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f14, f16, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f21, 0(x2) # load 0x00007fff from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0x41023164b62b1ca0 # load x3 with value 0x41023164b62b1ca0
sw x3, 0(x2) # store 0x41023164b62b1ca0 in memory
flh f27, 0(x2) # load 0x41023164b62b1ca0 from memory into f27
fnmadd.h f12, f21, f24, f27, dyn # perform operation
fnmadd.h f12, f21, f24, f27, rdn # perform operation
fnmadd.h f12, f21, f24, f27, rmm # perform operation
fnmadd.h f12, f21, f24, f27, rne # perform operation
fnmadd.h f12, f21, f24, f27, rtz # perform operation
fnmadd.h f12, f21, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f21, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f21, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f21, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f21, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f21, f24, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f20, 0(x2) # load 0x00007fff from memory into f20
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
la x2, scratch
li x3, 0x78c971650a6dd15d # load x3 with value 0x78c971650a6dd15d
sw x3, 0(x2) # store 0x78c971650a6dd15d in memory
flh f15, 0(x2) # load 0x78c971650a6dd15d from memory into f15
fnmadd.h f1, f20, f12, f15, dyn # perform operation
fnmadd.h f1, f20, f12, f15, rdn # perform operation
fnmadd.h f1, f20, f12, f15, rmm # perform operation
fnmadd.h f1, f20, f12, f15, rne # perform operation
fnmadd.h f1, f20, f12, f15, rtz # perform operation
fnmadd.h f1, f20, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f20, f12, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f29, 0(x2) # load 0x00007fff from memory into f29
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f20, 0(x2) # load 0x00003c00 from memory into f20
la x2, scratch
li x3, 0xe94344764888b912 # load x3 with value 0xe94344764888b912
sw x3, 0(x2) # store 0xe94344764888b912 in memory
flh f8, 0(x2) # load 0xe94344764888b912 from memory into f8
fnmadd.h f27, f29, f20, f8, dyn # perform operation
fnmadd.h f27, f29, f20, f8, rdn # perform operation
fnmadd.h f27, f29, f20, f8, rmm # perform operation
fnmadd.h f27, f29, f20, f8, rne # perform operation
fnmadd.h f27, f29, f20, f8, rtz # perform operation
fnmadd.h f27, f29, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f29, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f29, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f29, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f29, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f29, f20, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f17, 0(x2) # load 0x00007fff from memory into f17
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f21, 0(x2) # load 0x0000bc00 from memory into f21
la x2, scratch
li x3, 0x510d1135f608478b # load x3 with value 0x510d1135f608478b
sw x3, 0(x2) # store 0x510d1135f608478b in memory
flh f26, 0(x2) # load 0x510d1135f608478b from memory into f26
fnmadd.h f15, f17, f21, f26, dyn # perform operation
fnmadd.h f15, f17, f21, f26, rdn # perform operation
fnmadd.h f15, f17, f21, f26, rmm # perform operation
fnmadd.h f15, f17, f21, f26, rne # perform operation
fnmadd.h f15, f17, f21, f26, rtz # perform operation
fnmadd.h f15, f17, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f17, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f17, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f17, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f17, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f17, f21, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f24, 0(x2) # load 0x00007fff from memory into f24
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f28, 0(x2) # load 0x00003e00 from memory into f28
la x2, scratch
li x3, 0xae5fafecb0e25651 # load x3 with value 0xae5fafecb0e25651
sw x3, 0(x2) # store 0xae5fafecb0e25651 in memory
flh f15, 0(x2) # load 0xae5fafecb0e25651 from memory into f15
fnmadd.h f27, f24, f28, f15, dyn # perform operation
fnmadd.h f27, f24, f28, f15, rdn # perform operation
fnmadd.h f27, f24, f28, f15, rmm # perform operation
fnmadd.h f27, f24, f28, f15, rne # perform operation
fnmadd.h f27, f24, f28, f15, rtz # perform operation
fnmadd.h f27, f24, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f24, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f24, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f24, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f24, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f24, f28, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f30, 0(x2) # load 0x00007fff from memory into f30
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f5, 0(x2) # load 0x0000be00 from memory into f5
la x2, scratch
li x3, 0xaa2f70c7f813ef09 # load x3 with value 0xaa2f70c7f813ef09
sw x3, 0(x2) # store 0xaa2f70c7f813ef09 in memory
flh f28, 0(x2) # load 0xaa2f70c7f813ef09 from memory into f28
fnmadd.h f8, f30, f5, f28, dyn # perform operation
fnmadd.h f8, f30, f5, f28, rdn # perform operation
fnmadd.h f8, f30, f5, f28, rmm # perform operation
fnmadd.h f8, f30, f5, f28, rne # perform operation
fnmadd.h f8, f30, f5, f28, rtz # perform operation
fnmadd.h f8, f30, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f30, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f30, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f30, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f30, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f30, f5, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f14, 0(x2) # load 0x00007fff from memory into f14
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f9, 0(x2) # load 0x00004000 from memory into f9
la x2, scratch
li x3, 0x44a3eb6399a4ab87 # load x3 with value 0x44a3eb6399a4ab87
sw x3, 0(x2) # store 0x44a3eb6399a4ab87 in memory
flh f16, 0(x2) # load 0x44a3eb6399a4ab87 from memory into f16
fnmadd.h f22, f14, f9, f16, dyn # perform operation
fnmadd.h f22, f14, f9, f16, rdn # perform operation
fnmadd.h f22, f14, f9, f16, rmm # perform operation
fnmadd.h f22, f14, f9, f16, rne # perform operation
fnmadd.h f22, f14, f9, f16, rtz # perform operation
fnmadd.h f22, f14, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f14, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f14, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f14, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f14, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f14, f9, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f20, 0(x2) # load 0x00007fff from memory into f20
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
la x2, scratch
li x3, 0x77573cf9a31a490 # load x3 with value 0x77573cf9a31a490
sw x3, 0(x2) # store 0x77573cf9a31a490 in memory
flh f18, 0(x2) # load 0x77573cf9a31a490 from memory into f18
fnmadd.h f3, f20, f30, f18, dyn # perform operation
fnmadd.h f3, f20, f30, f18, rdn # perform operation
fnmadd.h f3, f20, f30, f18, rmm # perform operation
fnmadd.h f3, f20, f30, f18, rne # perform operation
fnmadd.h f3, f20, f30, f18, rtz # perform operation
fnmadd.h f3, f20, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f20, f30, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f5, 0(x2) # load 0x00007fff from memory into f5
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f25, 0(x2) # load 0x00000400 from memory into f25
la x2, scratch
li x3, 0xe67088d86fabe394 # load x3 with value 0xe67088d86fabe394
sw x3, 0(x2) # store 0xe67088d86fabe394 in memory
flh f27, 0(x2) # load 0xe67088d86fabe394 from memory into f27
fnmadd.h f8, f5, f25, f27, dyn # perform operation
fnmadd.h f8, f5, f25, f27, rdn # perform operation
fnmadd.h f8, f5, f25, f27, rmm # perform operation
fnmadd.h f8, f5, f25, f27, rne # perform operation
fnmadd.h f8, f5, f25, f27, rtz # perform operation
fnmadd.h f8, f5, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f5, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f5, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f5, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f5, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f5, f25, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f25, 0(x2) # load 0x00007fff from memory into f25
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f22, 0(x2) # load 0x00008400 from memory into f22
la x2, scratch
li x3, 0x3e1209dec55b6f98 # load x3 with value 0x3e1209dec55b6f98
sw x3, 0(x2) # store 0x3e1209dec55b6f98 in memory
flh f17, 0(x2) # load 0x3e1209dec55b6f98 from memory into f17
fnmadd.h f29, f25, f22, f17, dyn # perform operation
fnmadd.h f29, f25, f22, f17, rdn # perform operation
fnmadd.h f29, f25, f22, f17, rmm # perform operation
fnmadd.h f29, f25, f22, f17, rne # perform operation
fnmadd.h f29, f25, f22, f17, rtz # perform operation
fnmadd.h f29, f25, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f25, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f25, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f25, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f25, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f25, f22, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f15, 0(x2) # load 0x00007fff from memory into f15
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f13, 0(x2) # load 0x00007bff from memory into f13
la x2, scratch
li x3, 0x7545f21bf2ee25fa # load x3 with value 0x7545f21bf2ee25fa
sw x3, 0(x2) # store 0x7545f21bf2ee25fa in memory
flh f12, 0(x2) # load 0x7545f21bf2ee25fa from memory into f12
fnmadd.h f5, f15, f13, f12, dyn # perform operation
fnmadd.h f5, f15, f13, f12, rdn # perform operation
fnmadd.h f5, f15, f13, f12, rmm # perform operation
fnmadd.h f5, f15, f13, f12, rne # perform operation
fnmadd.h f5, f15, f13, f12, rtz # perform operation
fnmadd.h f5, f15, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f15, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f15, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f15, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f15, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f15, f13, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f18, 0(x2) # load 0x00007fff from memory into f18
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f22, 0(x2) # load 0x0000fbff from memory into f22
la x2, scratch
li x3, 0x846d5bfb72d4e315 # load x3 with value 0x846d5bfb72d4e315
sw x3, 0(x2) # store 0x846d5bfb72d4e315 in memory
flh f16, 0(x2) # load 0x846d5bfb72d4e315 from memory into f16
fnmadd.h f21, f18, f22, f16, dyn # perform operation
fnmadd.h f21, f18, f22, f16, rdn # perform operation
fnmadd.h f21, f18, f22, f16, rmm # perform operation
fnmadd.h f21, f18, f22, f16, rne # perform operation
fnmadd.h f21, f18, f22, f16, rtz # perform operation
fnmadd.h f21, f18, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f18, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f18, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f18, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f18, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f18, f22, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f1, 0(x2) # load 0x00007fff from memory into f1
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f26, 0(x2) # load 0x000003ff from memory into f26
la x2, scratch
li x3, 0x6e220db2d38db12f # load x3 with value 0x6e220db2d38db12f
sw x3, 0(x2) # store 0x6e220db2d38db12f in memory
flh f21, 0(x2) # load 0x6e220db2d38db12f from memory into f21
fnmadd.h f17, f1, f26, f21, dyn # perform operation
fnmadd.h f17, f1, f26, f21, rdn # perform operation
fnmadd.h f17, f1, f26, f21, rmm # perform operation
fnmadd.h f17, f1, f26, f21, rne # perform operation
fnmadd.h f17, f1, f26, f21, rtz # perform operation
fnmadd.h f17, f1, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f1, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f1, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f1, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f1, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f1, f26, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f3, 0(x2) # load 0x00007fff from memory into f3
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f22, 0(x2) # load 0x000083ff from memory into f22
la x2, scratch
li x3, 0x17066440766c4fea # load x3 with value 0x17066440766c4fea
sw x3, 0(x2) # store 0x17066440766c4fea in memory
flh f23, 0(x2) # load 0x17066440766c4fea from memory into f23
fnmadd.h f31, f3, f22, f23, dyn # perform operation
fnmadd.h f31, f3, f22, f23, rdn # perform operation
fnmadd.h f31, f3, f22, f23, rmm # perform operation
fnmadd.h f31, f3, f22, f23, rne # perform operation
fnmadd.h f31, f3, f22, f23, rtz # perform operation
fnmadd.h f31, f3, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f3, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f3, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f3, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f3, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f3, f22, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f15, 0(x2) # load 0x00007fff from memory into f15
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f7, 0(x2) # load 0x00000200 from memory into f7
la x2, scratch
li x3, 0x80892a004e3ccd7f # load x3 with value 0x80892a004e3ccd7f
sw x3, 0(x2) # store 0x80892a004e3ccd7f in memory
flh f26, 0(x2) # load 0x80892a004e3ccd7f from memory into f26
fnmadd.h f24, f15, f7, f26, dyn # perform operation
fnmadd.h f24, f15, f7, f26, rdn # perform operation
fnmadd.h f24, f15, f7, f26, rmm # perform operation
fnmadd.h f24, f15, f7, f26, rne # perform operation
fnmadd.h f24, f15, f7, f26, rtz # perform operation
fnmadd.h f24, f15, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f15, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f15, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f15, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f15, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f15, f7, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f21, 0(x2) # load 0x00007fff from memory into f21
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f24, 0(x2) # load 0x00008200 from memory into f24
la x2, scratch
li x3, 0xe2870c9c021cd354 # load x3 with value 0xe2870c9c021cd354
sw x3, 0(x2) # store 0xe2870c9c021cd354 in memory
flh f9, 0(x2) # load 0xe2870c9c021cd354 from memory into f9
fnmadd.h f8, f21, f24, f9, dyn # perform operation
fnmadd.h f8, f21, f24, f9, rdn # perform operation
fnmadd.h f8, f21, f24, f9, rmm # perform operation
fnmadd.h f8, f21, f24, f9, rne # perform operation
fnmadd.h f8, f21, f24, f9, rtz # perform operation
fnmadd.h f8, f21, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f21, f24, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f5, 0(x2) # load 0x00007fff from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0xb30676ea423ee635 # load x3 with value 0xb30676ea423ee635
sw x3, 0(x2) # store 0xb30676ea423ee635 in memory
flh f15, 0(x2) # load 0xb30676ea423ee635 from memory into f15
fnmadd.h f2, f5, f16, f15, dyn # perform operation
fnmadd.h f2, f5, f16, f15, rdn # perform operation
fnmadd.h f2, f5, f16, f15, rmm # perform operation
fnmadd.h f2, f5, f16, f15, rne # perform operation
fnmadd.h f2, f5, f16, f15, rtz # perform operation
fnmadd.h f2, f5, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f5, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f5, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f5, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f5, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f5, f16, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f19, 0(x2) # load 0x00007fff from memory into f19
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f12, 0(x2) # load 0x00008001 from memory into f12
la x2, scratch
li x3, 0xbaba822a1ac18a20 # load x3 with value 0xbaba822a1ac18a20
sw x3, 0(x2) # store 0xbaba822a1ac18a20 in memory
flh f29, 0(x2) # load 0xbaba822a1ac18a20 from memory into f29
fnmadd.h f10, f19, f12, f29, dyn # perform operation
fnmadd.h f10, f19, f12, f29, rdn # perform operation
fnmadd.h f10, f19, f12, f29, rmm # perform operation
fnmadd.h f10, f19, f12, f29, rne # perform operation
fnmadd.h f10, f19, f12, f29, rtz # perform operation
fnmadd.h f10, f19, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f19, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f19, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f19, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f19, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f19, f12, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f6, 0(x2) # load 0x00007fff from memory into f6
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f18, 0(x2) # load 0x00007c00 from memory into f18
la x2, scratch
li x3, 0x466c15917d9157b5 # load x3 with value 0x466c15917d9157b5
sw x3, 0(x2) # store 0x466c15917d9157b5 in memory
flh f23, 0(x2) # load 0x466c15917d9157b5 from memory into f23
fnmadd.h f30, f6, f18, f23, dyn # perform operation
fnmadd.h f30, f6, f18, f23, rdn # perform operation
fnmadd.h f30, f6, f18, f23, rmm # perform operation
fnmadd.h f30, f6, f18, f23, rne # perform operation
fnmadd.h f30, f6, f18, f23, rtz # perform operation
fnmadd.h f30, f6, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f6, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f6, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f6, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f6, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f6, f18, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f26, 0(x2) # load 0x00007fff from memory into f26
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f10, 0(x2) # load 0x0000fc00 from memory into f10
la x2, scratch
li x3, 0xa17cde229ec2d8a9 # load x3 with value 0xa17cde229ec2d8a9
sw x3, 0(x2) # store 0xa17cde229ec2d8a9 in memory
flh f3, 0(x2) # load 0xa17cde229ec2d8a9 from memory into f3
fnmadd.h f6, f26, f10, f3, dyn # perform operation
fnmadd.h f6, f26, f10, f3, rdn # perform operation
fnmadd.h f6, f26, f10, f3, rmm # perform operation
fnmadd.h f6, f26, f10, f3, rne # perform operation
fnmadd.h f6, f26, f10, f3, rtz # perform operation
fnmadd.h f6, f26, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f26, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f26, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f26, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f26, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f26, f10, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f27, 0(x2) # load 0x00007fff from memory into f27
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
la x2, scratch
li x3, 0x7c4ca8f8a5f1933d # load x3 with value 0x7c4ca8f8a5f1933d
sw x3, 0(x2) # store 0x7c4ca8f8a5f1933d in memory
flh f15, 0(x2) # load 0x7c4ca8f8a5f1933d from memory into f15
fnmadd.h f20, f27, f18, f15, dyn # perform operation
fnmadd.h f20, f27, f18, f15, rdn # perform operation
fnmadd.h f20, f27, f18, f15, rmm # perform operation
fnmadd.h f20, f27, f18, f15, rne # perform operation
fnmadd.h f20, f27, f18, f15, rtz # perform operation
fnmadd.h f20, f27, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f27, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f27, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f27, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f27, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f27, f18, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f7, 0(x2) # load 0x00007fff from memory into f7
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f2, 0(x2) # load 0x00007fff from memory into f2
la x2, scratch
li x3, 0x737545a4fb0f0689 # load x3 with value 0x737545a4fb0f0689
sw x3, 0(x2) # store 0x737545a4fb0f0689 in memory
flh f27, 0(x2) # load 0x737545a4fb0f0689 from memory into f27
fnmadd.h f13, f7, f2, f27, dyn # perform operation
fnmadd.h f13, f7, f2, f27, rdn # perform operation
fnmadd.h f13, f7, f2, f27, rmm # perform operation
fnmadd.h f13, f7, f2, f27, rne # perform operation
fnmadd.h f13, f7, f2, f27, rtz # perform operation
fnmadd.h f13, f7, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f7, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f7, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f7, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f7, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f7, f2, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f29, 0(x2) # load 0x00007fff from memory into f29
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f27, 0(x2) # load 0x0000fe00 from memory into f27
la x2, scratch
li x3, 0xfe4be2dd44f97c47 # load x3 with value 0xfe4be2dd44f97c47
sw x3, 0(x2) # store 0xfe4be2dd44f97c47 in memory
flh f23, 0(x2) # load 0xfe4be2dd44f97c47 from memory into f23
fnmadd.h f1, f29, f27, f23, dyn # perform operation
fnmadd.h f1, f29, f27, f23, rdn # perform operation
fnmadd.h f1, f29, f27, f23, rmm # perform operation
fnmadd.h f1, f29, f27, f23, rne # perform operation
fnmadd.h f1, f29, f27, f23, rtz # perform operation
fnmadd.h f1, f29, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f29, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f29, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f29, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f29, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f29, f27, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f8, 0(x2) # load 0x00007fff from memory into f8
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
la x2, scratch
li x3, 0x62d4c0d60a45f8ff # load x3 with value 0x62d4c0d60a45f8ff
sw x3, 0(x2) # store 0x62d4c0d60a45f8ff in memory
flh f1, 0(x2) # load 0x62d4c0d60a45f8ff from memory into f1
fnmadd.h f28, f8, f26, f1, dyn # perform operation
fnmadd.h f28, f8, f26, f1, rdn # perform operation
fnmadd.h f28, f8, f26, f1, rmm # perform operation
fnmadd.h f28, f8, f26, f1, rne # perform operation
fnmadd.h f28, f8, f26, f1, rtz # perform operation
fnmadd.h f28, f8, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f8, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f8, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f8, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f8, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f8, f26, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f13, 0(x2) # load 0x00007fff from memory into f13
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f25, 0(x2) # load 0x00007dff from memory into f25
la x2, scratch
li x3, 0xa96ff5bdc3c57376 # load x3 with value 0xa96ff5bdc3c57376
sw x3, 0(x2) # store 0xa96ff5bdc3c57376 in memory
flh f28, 0(x2) # load 0xa96ff5bdc3c57376 from memory into f28
fnmadd.h f11, f13, f25, f28, dyn # perform operation
fnmadd.h f11, f13, f25, f28, rdn # perform operation
fnmadd.h f11, f13, f25, f28, rmm # perform operation
fnmadd.h f11, f13, f25, f28, rne # perform operation
fnmadd.h f11, f13, f25, f28, rtz # perform operation
fnmadd.h f11, f13, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f13, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f13, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f13, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f13, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f13, f25, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f10, 0(x2) # load 0x00007fff from memory into f10
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f29, 0(x2) # load 0x0000fc01 from memory into f29
la x2, scratch
li x3, 0x51890a0322229fdb # load x3 with value 0x51890a0322229fdb
sw x3, 0(x2) # store 0x51890a0322229fdb in memory
flh f30, 0(x2) # load 0x51890a0322229fdb from memory into f30
fnmadd.h f8, f10, f29, f30, dyn # perform operation
fnmadd.h f8, f10, f29, f30, rdn # perform operation
fnmadd.h f8, f10, f29, f30, rmm # perform operation
fnmadd.h f8, f10, f29, f30, rne # perform operation
fnmadd.h f8, f10, f29, f30, rtz # perform operation
fnmadd.h f8, f10, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f10, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f10, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f10, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f10, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f10, f29, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f7, 0(x2) # load 0x00007fff from memory into f7
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
la x2, scratch
li x3, 0xe073c5d924dd2b8e # load x3 with value 0xe073c5d924dd2b8e
sw x3, 0(x2) # store 0xe073c5d924dd2b8e in memory
flh f16, 0(x2) # load 0xe073c5d924dd2b8e from memory into f16
fnmadd.h f25, f7, f13, f16, dyn # perform operation
fnmadd.h f25, f7, f13, f16, rdn # perform operation
fnmadd.h f25, f7, f13, f16, rmm # perform operation
fnmadd.h f25, f7, f13, f16, rne # perform operation
fnmadd.h f25, f7, f13, f16, rtz # perform operation
fnmadd.h f25, f7, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f7, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f7, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f7, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f7, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f7, f13, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f13, 0(x2) # load 0x00007fff from memory into f13
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f30, 0(x2) # load 0x0000c93a from memory into f30
la x2, scratch
li x3, 0x8ce0345f7fc970c8 # load x3 with value 0x8ce0345f7fc970c8
sw x3, 0(x2) # store 0x8ce0345f7fc970c8 in memory
flh f15, 0(x2) # load 0x8ce0345f7fc970c8 from memory into f15
fnmadd.h f18, f13, f30, f15, dyn # perform operation
fnmadd.h f18, f13, f30, f15, rdn # perform operation
fnmadd.h f18, f13, f30, f15, rmm # perform operation
fnmadd.h f18, f13, f30, f15, rne # perform operation
fnmadd.h f18, f13, f30, f15, rtz # perform operation
fnmadd.h f18, f13, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f13, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f13, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f13, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f13, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f13, f30, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f22, 0(x2) # load 0x0000fe00 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0xec65d0ffe9249a00 # load x3 with value 0xec65d0ffe9249a00
sw x3, 0(x2) # store 0xec65d0ffe9249a00 in memory
flh f20, 0(x2) # load 0xec65d0ffe9249a00 from memory into f20
fnmadd.h f31, f22, f14, f20, dyn # perform operation
fnmadd.h f31, f22, f14, f20, rdn # perform operation
fnmadd.h f31, f22, f14, f20, rmm # perform operation
fnmadd.h f31, f22, f14, f20, rne # perform operation
fnmadd.h f31, f22, f14, f20, rtz # perform operation
fnmadd.h f31, f22, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f22, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f22, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f22, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f22, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f22, f14, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f6, 0(x2) # load 0x0000fe00 from memory into f6
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f20, 0(x2) # load 0x00008000 from memory into f20
la x2, scratch
li x3, 0xb68771a98b57f1c2 # load x3 with value 0xb68771a98b57f1c2
sw x3, 0(x2) # store 0xb68771a98b57f1c2 in memory
flh f23, 0(x2) # load 0xb68771a98b57f1c2 from memory into f23
fnmadd.h f17, f6, f20, f23, dyn # perform operation
fnmadd.h f17, f6, f20, f23, rdn # perform operation
fnmadd.h f17, f6, f20, f23, rmm # perform operation
fnmadd.h f17, f6, f20, f23, rne # perform operation
fnmadd.h f17, f6, f20, f23, rtz # perform operation
fnmadd.h f17, f6, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f6, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f6, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f6, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f6, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f6, f20, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f15, 0(x2) # load 0x0000fe00 from memory into f15
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f28, 0(x2) # load 0x00003c00 from memory into f28
la x2, scratch
li x3, 0x1452c0d6d15bd11e # load x3 with value 0x1452c0d6d15bd11e
sw x3, 0(x2) # store 0x1452c0d6d15bd11e in memory
flh f12, 0(x2) # load 0x1452c0d6d15bd11e from memory into f12
fnmadd.h f27, f15, f28, f12, dyn # perform operation
fnmadd.h f27, f15, f28, f12, rdn # perform operation
fnmadd.h f27, f15, f28, f12, rmm # perform operation
fnmadd.h f27, f15, f28, f12, rne # perform operation
fnmadd.h f27, f15, f28, f12, rtz # perform operation
fnmadd.h f27, f15, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f15, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f15, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f15, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f15, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f15, f28, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f13, 0(x2) # load 0x0000fe00 from memory into f13
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
la x2, scratch
li x3, 0xa16045246ab14d7c # load x3 with value 0xa16045246ab14d7c
sw x3, 0(x2) # store 0xa16045246ab14d7c in memory
flh f12, 0(x2) # load 0xa16045246ab14d7c from memory into f12
fnmadd.h f29, f13, f24, f12, dyn # perform operation
fnmadd.h f29, f13, f24, f12, rdn # perform operation
fnmadd.h f29, f13, f24, f12, rmm # perform operation
fnmadd.h f29, f13, f24, f12, rne # perform operation
fnmadd.h f29, f13, f24, f12, rtz # perform operation
fnmadd.h f29, f13, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f13, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f13, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f13, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f13, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f13, f24, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f31, 0(x2) # load 0x0000fe00 from memory into f31
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f27, 0(x2) # load 0x00003e00 from memory into f27
la x2, scratch
li x3, 0xde2ba7a46b2584b9 # load x3 with value 0xde2ba7a46b2584b9
sw x3, 0(x2) # store 0xde2ba7a46b2584b9 in memory
flh f29, 0(x2) # load 0xde2ba7a46b2584b9 from memory into f29
fnmadd.h f28, f31, f27, f29, dyn # perform operation
fnmadd.h f28, f31, f27, f29, rdn # perform operation
fnmadd.h f28, f31, f27, f29, rmm # perform operation
fnmadd.h f28, f31, f27, f29, rne # perform operation
fnmadd.h f28, f31, f27, f29, rtz # perform operation
fnmadd.h f28, f31, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f31, f27, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f16, 0(x2) # load 0x0000fe00 from memory into f16
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f7, 0(x2) # load 0x0000be00 from memory into f7
la x2, scratch
li x3, 0xa112515cecd90658 # load x3 with value 0xa112515cecd90658
sw x3, 0(x2) # store 0xa112515cecd90658 in memory
flh f30, 0(x2) # load 0xa112515cecd90658 from memory into f30
fnmadd.h f17, f16, f7, f30, dyn # perform operation
fnmadd.h f17, f16, f7, f30, rdn # perform operation
fnmadd.h f17, f16, f7, f30, rmm # perform operation
fnmadd.h f17, f16, f7, f30, rne # perform operation
fnmadd.h f17, f16, f7, f30, rtz # perform operation
fnmadd.h f17, f16, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f16, f7, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f20, 0(x2) # load 0x0000fe00 from memory into f20
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f2, 0(x2) # load 0x00004000 from memory into f2
la x2, scratch
li x3, 0xe69b5329b57ab415 # load x3 with value 0xe69b5329b57ab415
sw x3, 0(x2) # store 0xe69b5329b57ab415 in memory
flh f19, 0(x2) # load 0xe69b5329b57ab415 from memory into f19
fnmadd.h f15, f20, f2, f19, dyn # perform operation
fnmadd.h f15, f20, f2, f19, rdn # perform operation
fnmadd.h f15, f20, f2, f19, rmm # perform operation
fnmadd.h f15, f20, f2, f19, rne # perform operation
fnmadd.h f15, f20, f2, f19, rtz # perform operation
fnmadd.h f15, f20, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f20, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f20, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f20, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f20, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f20, f2, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f21, 0(x2) # load 0x0000fe00 from memory into f21
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f7, 0(x2) # load 0x0000c000 from memory into f7
la x2, scratch
li x3, 0x33a6ba86da7c8260 # load x3 with value 0x33a6ba86da7c8260
sw x3, 0(x2) # store 0x33a6ba86da7c8260 in memory
flh f25, 0(x2) # load 0x33a6ba86da7c8260 from memory into f25
fnmadd.h f1, f21, f7, f25, dyn # perform operation
fnmadd.h f1, f21, f7, f25, rdn # perform operation
fnmadd.h f1, f21, f7, f25, rmm # perform operation
fnmadd.h f1, f21, f7, f25, rne # perform operation
fnmadd.h f1, f21, f7, f25, rtz # perform operation
fnmadd.h f1, f21, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f21, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f21, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f21, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f21, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f21, f7, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f9, 0(x2) # load 0x0000fe00 from memory into f9
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f12, 0(x2) # load 0x00000400 from memory into f12
la x2, scratch
li x3, 0xec710026ff7296b2 # load x3 with value 0xec710026ff7296b2
sw x3, 0(x2) # store 0xec710026ff7296b2 in memory
flh f23, 0(x2) # load 0xec710026ff7296b2 from memory into f23
fnmadd.h f27, f9, f12, f23, dyn # perform operation
fnmadd.h f27, f9, f12, f23, rdn # perform operation
fnmadd.h f27, f9, f12, f23, rmm # perform operation
fnmadd.h f27, f9, f12, f23, rne # perform operation
fnmadd.h f27, f9, f12, f23, rtz # perform operation
fnmadd.h f27, f9, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f9, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f9, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f9, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f9, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f9, f12, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f2, 0(x2) # load 0x0000fe00 from memory into f2
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f25, 0(x2) # load 0x00008400 from memory into f25
la x2, scratch
li x3, 0x441c99ca995f1841 # load x3 with value 0x441c99ca995f1841
sw x3, 0(x2) # store 0x441c99ca995f1841 in memory
flh f16, 0(x2) # load 0x441c99ca995f1841 from memory into f16
fnmadd.h f5, f2, f25, f16, dyn # perform operation
fnmadd.h f5, f2, f25, f16, rdn # perform operation
fnmadd.h f5, f2, f25, f16, rmm # perform operation
fnmadd.h f5, f2, f25, f16, rne # perform operation
fnmadd.h f5, f2, f25, f16, rtz # perform operation
fnmadd.h f5, f2, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f2, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f2, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f2, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f2, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f2, f25, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f26, 0(x2) # load 0x0000fe00 from memory into f26
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
la x2, scratch
li x3, 0xbf536ce8ca88e5ff # load x3 with value 0xbf536ce8ca88e5ff
sw x3, 0(x2) # store 0xbf536ce8ca88e5ff in memory
flh f22, 0(x2) # load 0xbf536ce8ca88e5ff from memory into f22
fnmadd.h f18, f26, f15, f22, dyn # perform operation
fnmadd.h f18, f26, f15, f22, rdn # perform operation
fnmadd.h f18, f26, f15, f22, rmm # perform operation
fnmadd.h f18, f26, f15, f22, rne # perform operation
fnmadd.h f18, f26, f15, f22, rtz # perform operation
fnmadd.h f18, f26, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f26, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f26, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f26, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f26, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f26, f15, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f12, 0(x2) # load 0x0000fe00 from memory into f12
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f10, 0(x2) # load 0x0000fbff from memory into f10
la x2, scratch
li x3, 0x4c5dbb9f84d8df9e # load x3 with value 0x4c5dbb9f84d8df9e
sw x3, 0(x2) # store 0x4c5dbb9f84d8df9e in memory
flh f23, 0(x2) # load 0x4c5dbb9f84d8df9e from memory into f23
fnmadd.h f14, f12, f10, f23, dyn # perform operation
fnmadd.h f14, f12, f10, f23, rdn # perform operation
fnmadd.h f14, f12, f10, f23, rmm # perform operation
fnmadd.h f14, f12, f10, f23, rne # perform operation
fnmadd.h f14, f12, f10, f23, rtz # perform operation
fnmadd.h f14, f12, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f12, f10, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f1, 0(x2) # load 0x0000fe00 from memory into f1
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f30, 0(x2) # load 0x000003ff from memory into f30
la x2, scratch
li x3, 0xefb91ca8877ee3fd # load x3 with value 0xefb91ca8877ee3fd
sw x3, 0(x2) # store 0xefb91ca8877ee3fd in memory
flh f22, 0(x2) # load 0xefb91ca8877ee3fd from memory into f22
fnmadd.h f19, f1, f30, f22, dyn # perform operation
fnmadd.h f19, f1, f30, f22, rdn # perform operation
fnmadd.h f19, f1, f30, f22, rmm # perform operation
fnmadd.h f19, f1, f30, f22, rne # perform operation
fnmadd.h f19, f1, f30, f22, rtz # perform operation
fnmadd.h f19, f1, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f1, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f1, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f1, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f1, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f1, f30, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f10, 0(x2) # load 0x0000fe00 from memory into f10
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f9, 0(x2) # load 0x000083ff from memory into f9
la x2, scratch
li x3, 0x7412537eee6346b9 # load x3 with value 0x7412537eee6346b9
sw x3, 0(x2) # store 0x7412537eee6346b9 in memory
flh f18, 0(x2) # load 0x7412537eee6346b9 from memory into f18
fnmadd.h f12, f10, f9, f18, dyn # perform operation
fnmadd.h f12, f10, f9, f18, rdn # perform operation
fnmadd.h f12, f10, f9, f18, rmm # perform operation
fnmadd.h f12, f10, f9, f18, rne # perform operation
fnmadd.h f12, f10, f9, f18, rtz # perform operation
fnmadd.h f12, f10, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f10, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f10, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f10, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f10, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f10, f9, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f10, 0(x2) # load 0x0000fe00 from memory into f10
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f23, 0(x2) # load 0x00000200 from memory into f23
la x2, scratch
li x3, 0xa1ffeacb261dac8 # load x3 with value 0xa1ffeacb261dac8
sw x3, 0(x2) # store 0xa1ffeacb261dac8 in memory
flh f2, 0(x2) # load 0xa1ffeacb261dac8 from memory into f2
fnmadd.h f29, f10, f23, f2, dyn # perform operation
fnmadd.h f29, f10, f23, f2, rdn # perform operation
fnmadd.h f29, f10, f23, f2, rmm # perform operation
fnmadd.h f29, f10, f23, f2, rne # perform operation
fnmadd.h f29, f10, f23, f2, rtz # perform operation
fnmadd.h f29, f10, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f10, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f10, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f10, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f10, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f10, f23, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f13, 0(x2) # load 0x0000fe00 from memory into f13
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f20, 0(x2) # load 0x00008200 from memory into f20
la x2, scratch
li x3, 0xed77eab0cf7d9cce # load x3 with value 0xed77eab0cf7d9cce
sw x3, 0(x2) # store 0xed77eab0cf7d9cce in memory
flh f3, 0(x2) # load 0xed77eab0cf7d9cce from memory into f3
fnmadd.h f10, f13, f20, f3, dyn # perform operation
fnmadd.h f10, f13, f20, f3, rdn # perform operation
fnmadd.h f10, f13, f20, f3, rmm # perform operation
fnmadd.h f10, f13, f20, f3, rne # perform operation
fnmadd.h f10, f13, f20, f3, rtz # perform operation
fnmadd.h f10, f13, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f13, f20, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f16, 0(x2) # load 0x0000fe00 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0x7fe0c3b6c6ba5dc8 # load x3 with value 0x7fe0c3b6c6ba5dc8
sw x3, 0(x2) # store 0x7fe0c3b6c6ba5dc8 in memory
flh f22, 0(x2) # load 0x7fe0c3b6c6ba5dc8 from memory into f22
fnmadd.h f23, f16, f29, f22, dyn # perform operation
fnmadd.h f23, f16, f29, f22, rdn # perform operation
fnmadd.h f23, f16, f29, f22, rmm # perform operation
fnmadd.h f23, f16, f29, f22, rne # perform operation
fnmadd.h f23, f16, f29, f22, rtz # perform operation
fnmadd.h f23, f16, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f16, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f16, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f16, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f16, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f16, f29, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f18, 0(x2) # load 0x0000fe00 from memory into f18
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f3, 0(x2) # load 0x00008001 from memory into f3
la x2, scratch
li x3, 0xffc86485d1c72422 # load x3 with value 0xffc86485d1c72422
sw x3, 0(x2) # store 0xffc86485d1c72422 in memory
flh f21, 0(x2) # load 0xffc86485d1c72422 from memory into f21
fnmadd.h f19, f18, f3, f21, dyn # perform operation
fnmadd.h f19, f18, f3, f21, rdn # perform operation
fnmadd.h f19, f18, f3, f21, rmm # perform operation
fnmadd.h f19, f18, f3, f21, rne # perform operation
fnmadd.h f19, f18, f3, f21, rtz # perform operation
fnmadd.h f19, f18, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f18, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f18, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f18, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f18, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f18, f3, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f16, 0(x2) # load 0x0000fe00 from memory into f16
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f31, 0(x2) # load 0x00007c00 from memory into f31
la x2, scratch
li x3, 0x53e08cd29fe14340 # load x3 with value 0x53e08cd29fe14340
sw x3, 0(x2) # store 0x53e08cd29fe14340 in memory
flh f30, 0(x2) # load 0x53e08cd29fe14340 from memory into f30
fnmadd.h f23, f16, f31, f30, dyn # perform operation
fnmadd.h f23, f16, f31, f30, rdn # perform operation
fnmadd.h f23, f16, f31, f30, rmm # perform operation
fnmadd.h f23, f16, f31, f30, rne # perform operation
fnmadd.h f23, f16, f31, f30, rtz # perform operation
fnmadd.h f23, f16, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f16, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f16, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f16, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f16, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f16, f31, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f25, 0(x2) # load 0x0000fe00 from memory into f25
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f22, 0(x2) # load 0x0000fc00 from memory into f22
la x2, scratch
li x3, 0x4b03f50c02c06fb9 # load x3 with value 0x4b03f50c02c06fb9
sw x3, 0(x2) # store 0x4b03f50c02c06fb9 in memory
flh f8, 0(x2) # load 0x4b03f50c02c06fb9 from memory into f8
fnmadd.h f1, f25, f22, f8, dyn # perform operation
fnmadd.h f1, f25, f22, f8, rdn # perform operation
fnmadd.h f1, f25, f22, f8, rmm # perform operation
fnmadd.h f1, f25, f22, f8, rne # perform operation
fnmadd.h f1, f25, f22, f8, rtz # perform operation
fnmadd.h f1, f25, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f25, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f25, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f25, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f25, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f25, f22, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f14, 0(x2) # load 0x0000fe00 from memory into f14
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
la x2, scratch
li x3, 0x99017d83233124d7 # load x3 with value 0x99017d83233124d7
sw x3, 0(x2) # store 0x99017d83233124d7 in memory
flh f1, 0(x2) # load 0x99017d83233124d7 from memory into f1
fnmadd.h f2, f14, f24, f1, dyn # perform operation
fnmadd.h f2, f14, f24, f1, rdn # perform operation
fnmadd.h f2, f14, f24, f1, rmm # perform operation
fnmadd.h f2, f14, f24, f1, rne # perform operation
fnmadd.h f2, f14, f24, f1, rtz # perform operation
fnmadd.h f2, f14, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f14, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f14, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f14, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f14, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f14, f24, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f19, 0(x2) # load 0x0000fe00 from memory into f19
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f14, 0(x2) # load 0x00007fff from memory into f14
la x2, scratch
li x3, 0xb2af5d77970ead67 # load x3 with value 0xb2af5d77970ead67
sw x3, 0(x2) # store 0xb2af5d77970ead67 in memory
flh f30, 0(x2) # load 0xb2af5d77970ead67 from memory into f30
fnmadd.h f10, f19, f14, f30, dyn # perform operation
fnmadd.h f10, f19, f14, f30, rdn # perform operation
fnmadd.h f10, f19, f14, f30, rmm # perform operation
fnmadd.h f10, f19, f14, f30, rne # perform operation
fnmadd.h f10, f19, f14, f30, rtz # perform operation
fnmadd.h f10, f19, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f19, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f19, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f19, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f19, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f19, f14, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f21, 0(x2) # load 0x0000fe00 from memory into f21
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f25, 0(x2) # load 0x0000fe00 from memory into f25
la x2, scratch
li x3, 0x63774cc956af2048 # load x3 with value 0x63774cc956af2048
sw x3, 0(x2) # store 0x63774cc956af2048 in memory
flh f20, 0(x2) # load 0x63774cc956af2048 from memory into f20
fnmadd.h f29, f21, f25, f20, dyn # perform operation
fnmadd.h f29, f21, f25, f20, rdn # perform operation
fnmadd.h f29, f21, f25, f20, rmm # perform operation
fnmadd.h f29, f21, f25, f20, rne # perform operation
fnmadd.h f29, f21, f25, f20, rtz # perform operation
fnmadd.h f29, f21, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f21, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f21, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f21, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f21, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f21, f25, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f9, 0(x2) # load 0x0000fe00 from memory into f9
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f11, 0(x2) # load 0x00007c01 from memory into f11
la x2, scratch
li x3, 0x7054fab13d61aa36 # load x3 with value 0x7054fab13d61aa36
sw x3, 0(x2) # store 0x7054fab13d61aa36 in memory
flh f25, 0(x2) # load 0x7054fab13d61aa36 from memory into f25
fnmadd.h f10, f9, f11, f25, dyn # perform operation
fnmadd.h f10, f9, f11, f25, rdn # perform operation
fnmadd.h f10, f9, f11, f25, rmm # perform operation
fnmadd.h f10, f9, f11, f25, rne # perform operation
fnmadd.h f10, f9, f11, f25, rtz # perform operation
fnmadd.h f10, f9, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f9, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f9, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f9, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f9, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f9, f11, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f25, 0(x2) # load 0x0000fe00 from memory into f25
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f10, 0(x2) # load 0x00007dff from memory into f10
la x2, scratch
li x3, 0x75ff4cd2fba10c0 # load x3 with value 0x75ff4cd2fba10c0
sw x3, 0(x2) # store 0x75ff4cd2fba10c0 in memory
flh f29, 0(x2) # load 0x75ff4cd2fba10c0 from memory into f29
fnmadd.h f18, f25, f10, f29, dyn # perform operation
fnmadd.h f18, f25, f10, f29, rdn # perform operation
fnmadd.h f18, f25, f10, f29, rmm # perform operation
fnmadd.h f18, f25, f10, f29, rne # perform operation
fnmadd.h f18, f25, f10, f29, rtz # perform operation
fnmadd.h f18, f25, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f25, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f25, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f25, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f25, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f25, f10, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f1, 0(x2) # load 0x0000fe00 from memory into f1
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f24, 0(x2) # load 0x0000fc01 from memory into f24
la x2, scratch
li x3, 0x69a58ca6a1e73986 # load x3 with value 0x69a58ca6a1e73986
sw x3, 0(x2) # store 0x69a58ca6a1e73986 in memory
flh f30, 0(x2) # load 0x69a58ca6a1e73986 from memory into f30
fnmadd.h f11, f1, f24, f30, dyn # perform operation
fnmadd.h f11, f1, f24, f30, rdn # perform operation
fnmadd.h f11, f1, f24, f30, rmm # perform operation
fnmadd.h f11, f1, f24, f30, rne # perform operation
fnmadd.h f11, f1, f24, f30, rtz # perform operation
fnmadd.h f11, f1, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f1, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f1, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f1, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f1, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f1, f24, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f7, 0(x2) # load 0x0000fe00 from memory into f7
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
la x2, scratch
li x3, 0x9ca0bbd82b1ed0d8 # load x3 with value 0x9ca0bbd82b1ed0d8
sw x3, 0(x2) # store 0x9ca0bbd82b1ed0d8 in memory
flh f15, 0(x2) # load 0x9ca0bbd82b1ed0d8 from memory into f15
fnmadd.h f12, f7, f21, f15, dyn # perform operation
fnmadd.h f12, f7, f21, f15, rdn # perform operation
fnmadd.h f12, f7, f21, f15, rmm # perform operation
fnmadd.h f12, f7, f21, f15, rne # perform operation
fnmadd.h f12, f7, f21, f15, rtz # perform operation
fnmadd.h f12, f7, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f7, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f7, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f7, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f7, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f7, f21, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f25, 0(x2) # load 0x0000fe00 from memory into f25
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f22, 0(x2) # load 0x0000c93a from memory into f22
la x2, scratch
li x3, 0x1a5cfde49444ba4c # load x3 with value 0x1a5cfde49444ba4c
sw x3, 0(x2) # store 0x1a5cfde49444ba4c in memory
flh f9, 0(x2) # load 0x1a5cfde49444ba4c from memory into f9
fnmadd.h f5, f25, f22, f9, dyn # perform operation
fnmadd.h f5, f25, f22, f9, rdn # perform operation
fnmadd.h f5, f25, f22, f9, rmm # perform operation
fnmadd.h f5, f25, f22, f9, rne # perform operation
fnmadd.h f5, f25, f22, f9, rtz # perform operation
fnmadd.h f5, f25, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f25, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f25, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f25, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f25, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f25, f22, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f3, 0(x2) # load 0x00007c01 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0xc8ae4d11f16efde7 # load x3 with value 0xc8ae4d11f16efde7
sw x3, 0(x2) # store 0xc8ae4d11f16efde7 in memory
flh f31, 0(x2) # load 0xc8ae4d11f16efde7 from memory into f31
fnmadd.h f15, f3, f5, f31, dyn # perform operation
fnmadd.h f15, f3, f5, f31, rdn # perform operation
fnmadd.h f15, f3, f5, f31, rmm # perform operation
fnmadd.h f15, f3, f5, f31, rne # perform operation
fnmadd.h f15, f3, f5, f31, rtz # perform operation
fnmadd.h f15, f3, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f3, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f3, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f3, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f3, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f3, f5, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f7, 0(x2) # load 0x00008000 from memory into f7
la x2, scratch
li x3, 0xf4a87ebd4fa67324 # load x3 with value 0xf4a87ebd4fa67324
sw x3, 0(x2) # store 0xf4a87ebd4fa67324 in memory
flh f25, 0(x2) # load 0xf4a87ebd4fa67324 from memory into f25
fnmadd.h f27, f26, f7, f25, dyn # perform operation
fnmadd.h f27, f26, f7, f25, rdn # perform operation
fnmadd.h f27, f26, f7, f25, rmm # perform operation
fnmadd.h f27, f26, f7, f25, rne # perform operation
fnmadd.h f27, f26, f7, f25, rtz # perform operation
fnmadd.h f27, f26, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f26, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f26, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f26, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f26, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f26, f7, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f15, 0(x2) # load 0x00007c01 from memory into f15
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f21, 0(x2) # load 0x00003c00 from memory into f21
la x2, scratch
li x3, 0x3cd34a3d427aab2 # load x3 with value 0x3cd34a3d427aab2
sw x3, 0(x2) # store 0x3cd34a3d427aab2 in memory
flh f14, 0(x2) # load 0x3cd34a3d427aab2 from memory into f14
fnmadd.h f6, f15, f21, f14, dyn # perform operation
fnmadd.h f6, f15, f21, f14, rdn # perform operation
fnmadd.h f6, f15, f21, f14, rmm # perform operation
fnmadd.h f6, f15, f21, f14, rne # perform operation
fnmadd.h f6, f15, f21, f14, rtz # perform operation
fnmadd.h f6, f15, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f15, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f15, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f15, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f15, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f15, f21, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f1, 0(x2) # load 0x00007c01 from memory into f1
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f13, 0(x2) # load 0x0000bc00 from memory into f13
la x2, scratch
li x3, 0x9aba404f0f507c9d # load x3 with value 0x9aba404f0f507c9d
sw x3, 0(x2) # store 0x9aba404f0f507c9d in memory
flh f27, 0(x2) # load 0x9aba404f0f507c9d from memory into f27
fnmadd.h f24, f1, f13, f27, dyn # perform operation
fnmadd.h f24, f1, f13, f27, rdn # perform operation
fnmadd.h f24, f1, f13, f27, rmm # perform operation
fnmadd.h f24, f1, f13, f27, rne # perform operation
fnmadd.h f24, f1, f13, f27, rtz # perform operation
fnmadd.h f24, f1, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f1, f13, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f8, 0(x2) # load 0x00007c01 from memory into f8
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f16, 0(x2) # load 0x00003e00 from memory into f16
la x2, scratch
li x3, 0x6bd90fd0370a328 # load x3 with value 0x6bd90fd0370a328
sw x3, 0(x2) # store 0x6bd90fd0370a328 in memory
flh f30, 0(x2) # load 0x6bd90fd0370a328 from memory into f30
fnmadd.h f14, f8, f16, f30, dyn # perform operation
fnmadd.h f14, f8, f16, f30, rdn # perform operation
fnmadd.h f14, f8, f16, f30, rmm # perform operation
fnmadd.h f14, f8, f16, f30, rne # perform operation
fnmadd.h f14, f8, f16, f30, rtz # perform operation
fnmadd.h f14, f8, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f8, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f8, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f8, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f8, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f8, f16, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f15, 0(x2) # load 0x00007c01 from memory into f15
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f7, 0(x2) # load 0x0000be00 from memory into f7
la x2, scratch
li x3, 0xcbd9e967de5465f6 # load x3 with value 0xcbd9e967de5465f6
sw x3, 0(x2) # store 0xcbd9e967de5465f6 in memory
flh f22, 0(x2) # load 0xcbd9e967de5465f6 from memory into f22
fnmadd.h f26, f15, f7, f22, dyn # perform operation
fnmadd.h f26, f15, f7, f22, rdn # perform operation
fnmadd.h f26, f15, f7, f22, rmm # perform operation
fnmadd.h f26, f15, f7, f22, rne # perform operation
fnmadd.h f26, f15, f7, f22, rtz # perform operation
fnmadd.h f26, f15, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f15, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f15, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f15, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f15, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f15, f7, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f11, 0(x2) # load 0x00007c01 from memory into f11
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
la x2, scratch
li x3, 0x1829b553eb5a87b1 # load x3 with value 0x1829b553eb5a87b1
sw x3, 0(x2) # store 0x1829b553eb5a87b1 in memory
flh f20, 0(x2) # load 0x1829b553eb5a87b1 from memory into f20
fnmadd.h f21, f11, f23, f20, dyn # perform operation
fnmadd.h f21, f11, f23, f20, rdn # perform operation
fnmadd.h f21, f11, f23, f20, rmm # perform operation
fnmadd.h f21, f11, f23, f20, rne # perform operation
fnmadd.h f21, f11, f23, f20, rtz # perform operation
fnmadd.h f21, f11, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f11, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f11, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f11, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f11, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f11, f23, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f29, 0(x2) # load 0x00007c01 from memory into f29
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f13, 0(x2) # load 0x0000c000 from memory into f13
la x2, scratch
li x3, 0xb99a9ea12fcd4570 # load x3 with value 0xb99a9ea12fcd4570
sw x3, 0(x2) # store 0xb99a9ea12fcd4570 in memory
flh f10, 0(x2) # load 0xb99a9ea12fcd4570 from memory into f10
fnmadd.h f14, f29, f13, f10, dyn # perform operation
fnmadd.h f14, f29, f13, f10, rdn # perform operation
fnmadd.h f14, f29, f13, f10, rmm # perform operation
fnmadd.h f14, f29, f13, f10, rne # perform operation
fnmadd.h f14, f29, f13, f10, rtz # perform operation
fnmadd.h f14, f29, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f29, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f29, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f29, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f29, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f29, f13, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f16, 0(x2) # load 0x00007c01 from memory into f16
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f30, 0(x2) # load 0x00000400 from memory into f30
la x2, scratch
li x3, 0xf23b9273b6555645 # load x3 with value 0xf23b9273b6555645
sw x3, 0(x2) # store 0xf23b9273b6555645 in memory
flh f14, 0(x2) # load 0xf23b9273b6555645 from memory into f14
fnmadd.h f12, f16, f30, f14, dyn # perform operation
fnmadd.h f12, f16, f30, f14, rdn # perform operation
fnmadd.h f12, f16, f30, f14, rmm # perform operation
fnmadd.h f12, f16, f30, f14, rne # perform operation
fnmadd.h f12, f16, f30, f14, rtz # perform operation
fnmadd.h f12, f16, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f16, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f16, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f16, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f16, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f16, f30, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f21, 0(x2) # load 0x00007c01 from memory into f21
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f27, 0(x2) # load 0x00008400 from memory into f27
la x2, scratch
li x3, 0xb4ba5026b5e9579f # load x3 with value 0xb4ba5026b5e9579f
sw x3, 0(x2) # store 0xb4ba5026b5e9579f in memory
flh f13, 0(x2) # load 0xb4ba5026b5e9579f from memory into f13
fnmadd.h f25, f21, f27, f13, dyn # perform operation
fnmadd.h f25, f21, f27, f13, rdn # perform operation
fnmadd.h f25, f21, f27, f13, rmm # perform operation
fnmadd.h f25, f21, f27, f13, rne # perform operation
fnmadd.h f25, f21, f27, f13, rtz # perform operation
fnmadd.h f25, f21, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f21, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f21, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f21, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f21, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f21, f27, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f12, 0(x2) # load 0x00007c01 from memory into f12
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f5, 0(x2) # load 0x00007bff from memory into f5
la x2, scratch
li x3, 0xae27806fec3fd86a # load x3 with value 0xae27806fec3fd86a
sw x3, 0(x2) # store 0xae27806fec3fd86a in memory
flh f10, 0(x2) # load 0xae27806fec3fd86a from memory into f10
fnmadd.h f2, f12, f5, f10, dyn # perform operation
fnmadd.h f2, f12, f5, f10, rdn # perform operation
fnmadd.h f2, f12, f5, f10, rmm # perform operation
fnmadd.h f2, f12, f5, f10, rne # perform operation
fnmadd.h f2, f12, f5, f10, rtz # perform operation
fnmadd.h f2, f12, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f12, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f12, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f12, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f12, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f12, f5, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f18, 0(x2) # load 0x00007c01 from memory into f18
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f6, 0(x2) # load 0x0000fbff from memory into f6
la x2, scratch
li x3, 0x9774ae9efdf56fed # load x3 with value 0x9774ae9efdf56fed
sw x3, 0(x2) # store 0x9774ae9efdf56fed in memory
flh f5, 0(x2) # load 0x9774ae9efdf56fed from memory into f5
fnmadd.h f22, f18, f6, f5, dyn # perform operation
fnmadd.h f22, f18, f6, f5, rdn # perform operation
fnmadd.h f22, f18, f6, f5, rmm # perform operation
fnmadd.h f22, f18, f6, f5, rne # perform operation
fnmadd.h f22, f18, f6, f5, rtz # perform operation
fnmadd.h f22, f18, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f18, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f18, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f18, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f18, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f18, f6, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f21, 0(x2) # load 0x000003ff from memory into f21
la x2, scratch
li x3, 0xf564536aeab11ecb # load x3 with value 0xf564536aeab11ecb
sw x3, 0(x2) # store 0xf564536aeab11ecb in memory
flh f15, 0(x2) # load 0xf564536aeab11ecb from memory into f15
fnmadd.h f14, f26, f21, f15, dyn # perform operation
fnmadd.h f14, f26, f21, f15, rdn # perform operation
fnmadd.h f14, f26, f21, f15, rmm # perform operation
fnmadd.h f14, f26, f21, f15, rne # perform operation
fnmadd.h f14, f26, f21, f15, rtz # perform operation
fnmadd.h f14, f26, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f26, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f26, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f26, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f26, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f26, f21, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f9, 0(x2) # load 0x00007c01 from memory into f9
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f11, 0(x2) # load 0x000083ff from memory into f11
la x2, scratch
li x3, 0x8381115bd1606530 # load x3 with value 0x8381115bd1606530
sw x3, 0(x2) # store 0x8381115bd1606530 in memory
flh f21, 0(x2) # load 0x8381115bd1606530 from memory into f21
fnmadd.h f25, f9, f11, f21, dyn # perform operation
fnmadd.h f25, f9, f11, f21, rdn # perform operation
fnmadd.h f25, f9, f11, f21, rmm # perform operation
fnmadd.h f25, f9, f11, f21, rne # perform operation
fnmadd.h f25, f9, f11, f21, rtz # perform operation
fnmadd.h f25, f9, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f9, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f9, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f9, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f9, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f9, f11, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f19, 0(x2) # load 0x00007c01 from memory into f19
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
la x2, scratch
li x3, 0x63d5859fcb033e46 # load x3 with value 0x63d5859fcb033e46
sw x3, 0(x2) # store 0x63d5859fcb033e46 in memory
flh f23, 0(x2) # load 0x63d5859fcb033e46 from memory into f23
fnmadd.h f17, f19, f6, f23, dyn # perform operation
fnmadd.h f17, f19, f6, f23, rdn # perform operation
fnmadd.h f17, f19, f6, f23, rmm # perform operation
fnmadd.h f17, f19, f6, f23, rne # perform operation
fnmadd.h f17, f19, f6, f23, rtz # perform operation
fnmadd.h f17, f19, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f19, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f19, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f19, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f19, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f19, f6, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f12, 0(x2) # load 0x00007c01 from memory into f12
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
la x2, scratch
li x3, 0x83222711df81252c # load x3 with value 0x83222711df81252c
sw x3, 0(x2) # store 0x83222711df81252c in memory
flh f19, 0(x2) # load 0x83222711df81252c from memory into f19
fnmadd.h f23, f12, f6, f19, dyn # perform operation
fnmadd.h f23, f12, f6, f19, rdn # perform operation
fnmadd.h f23, f12, f6, f19, rmm # perform operation
fnmadd.h f23, f12, f6, f19, rne # perform operation
fnmadd.h f23, f12, f6, f19, rtz # perform operation
fnmadd.h f23, f12, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f12, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f12, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f12, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f12, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f12, f6, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f3, 0(x2) # load 0x00007c01 from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0xf1e6da1aac9a8c73 # load x3 with value 0xf1e6da1aac9a8c73
sw x3, 0(x2) # store 0xf1e6da1aac9a8c73 in memory
flh f9, 0(x2) # load 0xf1e6da1aac9a8c73 from memory into f9
fnmadd.h f11, f3, f29, f9, dyn # perform operation
fnmadd.h f11, f3, f29, f9, rdn # perform operation
fnmadd.h f11, f3, f29, f9, rmm # perform operation
fnmadd.h f11, f3, f29, f9, rne # perform operation
fnmadd.h f11, f3, f29, f9, rtz # perform operation
fnmadd.h f11, f3, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f3, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f3, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f3, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f3, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f3, f29, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f6, 0(x2) # load 0x00007c01 from memory into f6
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f25, 0(x2) # load 0x00008001 from memory into f25
la x2, scratch
li x3, 0x32f0e052fa45423b # load x3 with value 0x32f0e052fa45423b
sw x3, 0(x2) # store 0x32f0e052fa45423b in memory
flh f28, 0(x2) # load 0x32f0e052fa45423b from memory into f28
fnmadd.h f3, f6, f25, f28, dyn # perform operation
fnmadd.h f3, f6, f25, f28, rdn # perform operation
fnmadd.h f3, f6, f25, f28, rmm # perform operation
fnmadd.h f3, f6, f25, f28, rne # perform operation
fnmadd.h f3, f6, f25, f28, rtz # perform operation
fnmadd.h f3, f6, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f6, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f6, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f6, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f6, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f6, f25, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f22, 0(x2) # load 0x00007c01 from memory into f22
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f31, 0(x2) # load 0x00007c00 from memory into f31
la x2, scratch
li x3, 0xcdee41ce90b0b2e # load x3 with value 0xcdee41ce90b0b2e
sw x3, 0(x2) # store 0xcdee41ce90b0b2e in memory
flh f16, 0(x2) # load 0xcdee41ce90b0b2e from memory into f16
fnmadd.h f5, f22, f31, f16, dyn # perform operation
fnmadd.h f5, f22, f31, f16, rdn # perform operation
fnmadd.h f5, f22, f31, f16, rmm # perform operation
fnmadd.h f5, f22, f31, f16, rne # perform operation
fnmadd.h f5, f22, f31, f16, rtz # perform operation
fnmadd.h f5, f22, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f22, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f22, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f22, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f22, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f22, f31, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f14, 0(x2) # load 0x00007c01 from memory into f14
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f2, 0(x2) # load 0x0000fc00 from memory into f2
la x2, scratch
li x3, 0x1f6555c38aca8803 # load x3 with value 0x1f6555c38aca8803
sw x3, 0(x2) # store 0x1f6555c38aca8803 in memory
flh f16, 0(x2) # load 0x1f6555c38aca8803 from memory into f16
fnmadd.h f7, f14, f2, f16, dyn # perform operation
fnmadd.h f7, f14, f2, f16, rdn # perform operation
fnmadd.h f7, f14, f2, f16, rmm # perform operation
fnmadd.h f7, f14, f2, f16, rne # perform operation
fnmadd.h f7, f14, f2, f16, rtz # perform operation
fnmadd.h f7, f14, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f14, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f14, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f14, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f14, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f14, f2, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f29, 0(x2) # load 0x00007c01 from memory into f29
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f22, 0(x2) # load 0x00007e00 from memory into f22
la x2, scratch
li x3, 0x736fac3a10e8f978 # load x3 with value 0x736fac3a10e8f978
sw x3, 0(x2) # store 0x736fac3a10e8f978 in memory
flh f26, 0(x2) # load 0x736fac3a10e8f978 from memory into f26
fnmadd.h f31, f29, f22, f26, dyn # perform operation
fnmadd.h f31, f29, f22, f26, rdn # perform operation
fnmadd.h f31, f29, f22, f26, rmm # perform operation
fnmadd.h f31, f29, f22, f26, rne # perform operation
fnmadd.h f31, f29, f22, f26, rtz # perform operation
fnmadd.h f31, f29, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f29, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f29, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f29, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f29, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f29, f22, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f31, 0(x2) # load 0x00007c01 from memory into f31
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f2, 0(x2) # load 0x00007fff from memory into f2
la x2, scratch
li x3, 0xecd7f25acf6d0176 # load x3 with value 0xecd7f25acf6d0176
sw x3, 0(x2) # store 0xecd7f25acf6d0176 in memory
flh f14, 0(x2) # load 0xecd7f25acf6d0176 from memory into f14
fnmadd.h f17, f31, f2, f14, dyn # perform operation
fnmadd.h f17, f31, f2, f14, rdn # perform operation
fnmadd.h f17, f31, f2, f14, rmm # perform operation
fnmadd.h f17, f31, f2, f14, rne # perform operation
fnmadd.h f17, f31, f2, f14, rtz # perform operation
fnmadd.h f17, f31, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f31, f2, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f1, 0(x2) # load 0x00007c01 from memory into f1
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f3, 0(x2) # load 0x0000fe00 from memory into f3
la x2, scratch
li x3, 0x55d233ccf3ee107e # load x3 with value 0x55d233ccf3ee107e
sw x3, 0(x2) # store 0x55d233ccf3ee107e in memory
flh f16, 0(x2) # load 0x55d233ccf3ee107e from memory into f16
fnmadd.h f13, f1, f3, f16, dyn # perform operation
fnmadd.h f13, f1, f3, f16, rdn # perform operation
fnmadd.h f13, f1, f3, f16, rmm # perform operation
fnmadd.h f13, f1, f3, f16, rne # perform operation
fnmadd.h f13, f1, f3, f16, rtz # perform operation
fnmadd.h f13, f1, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f1, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f1, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f1, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f1, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f1, f3, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f1, 0(x2) # load 0x00007c01 from memory into f1
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f13, 0(x2) # load 0x00007c01 from memory into f13
la x2, scratch
li x3, 0xdd4056700954907a # load x3 with value 0xdd4056700954907a
sw x3, 0(x2) # store 0xdd4056700954907a in memory
flh f29, 0(x2) # load 0xdd4056700954907a from memory into f29
fnmadd.h f19, f1, f13, f29, dyn # perform operation
fnmadd.h f19, f1, f13, f29, rdn # perform operation
fnmadd.h f19, f1, f13, f29, rmm # perform operation
fnmadd.h f19, f1, f13, f29, rne # perform operation
fnmadd.h f19, f1, f13, f29, rtz # perform operation
fnmadd.h f19, f1, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f1, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f1, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f1, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f1, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f1, f13, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f3, 0(x2) # load 0x00007c01 from memory into f3
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f19, 0(x2) # load 0x00007dff from memory into f19
la x2, scratch
li x3, 0xf9cad7ac04a24bcf # load x3 with value 0xf9cad7ac04a24bcf
sw x3, 0(x2) # store 0xf9cad7ac04a24bcf in memory
flh f31, 0(x2) # load 0xf9cad7ac04a24bcf from memory into f31
fnmadd.h f10, f3, f19, f31, dyn # perform operation
fnmadd.h f10, f3, f19, f31, rdn # perform operation
fnmadd.h f10, f3, f19, f31, rmm # perform operation
fnmadd.h f10, f3, f19, f31, rne # perform operation
fnmadd.h f10, f3, f19, f31, rtz # perform operation
fnmadd.h f10, f3, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f3, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f3, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f3, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f3, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f3, f19, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f18, 0(x2) # load 0x00007c01 from memory into f18
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f27, 0(x2) # load 0x0000fc01 from memory into f27
la x2, scratch
li x3, 0xb593900a7232e85b # load x3 with value 0xb593900a7232e85b
sw x3, 0(x2) # store 0xb593900a7232e85b in memory
flh f8, 0(x2) # load 0xb593900a7232e85b from memory into f8
fnmadd.h f24, f18, f27, f8, dyn # perform operation
fnmadd.h f24, f18, f27, f8, rdn # perform operation
fnmadd.h f24, f18, f27, f8, rmm # perform operation
fnmadd.h f24, f18, f27, f8, rne # perform operation
fnmadd.h f24, f18, f27, f8, rtz # perform operation
fnmadd.h f24, f18, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f18, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f18, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f18, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f18, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f18, f27, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f14, 0(x2) # load 0x00007c01 from memory into f14
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f31, 0(x2) # load 0x000058b4 from memory into f31
la x2, scratch
li x3, 0xe0fa8726108068e3 # load x3 with value 0xe0fa8726108068e3
sw x3, 0(x2) # store 0xe0fa8726108068e3 in memory
flh f6, 0(x2) # load 0xe0fa8726108068e3 from memory into f6
fnmadd.h f8, f14, f31, f6, dyn # perform operation
fnmadd.h f8, f14, f31, f6, rdn # perform operation
fnmadd.h f8, f14, f31, f6, rmm # perform operation
fnmadd.h f8, f14, f31, f6, rne # perform operation
fnmadd.h f8, f14, f31, f6, rtz # perform operation
fnmadd.h f8, f14, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f14, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f14, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f14, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f14, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f14, f31, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f25, 0(x2) # load 0x00007c01 from memory into f25
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
la x2, scratch
li x3, 0xd056481d12058abe # load x3 with value 0xd056481d12058abe
sw x3, 0(x2) # store 0xd056481d12058abe in memory
flh f21, 0(x2) # load 0xd056481d12058abe from memory into f21
fnmadd.h f11, f25, f12, f21, dyn # perform operation
fnmadd.h f11, f25, f12, f21, rdn # perform operation
fnmadd.h f11, f25, f12, f21, rmm # perform operation
fnmadd.h f11, f25, f12, f21, rne # perform operation
fnmadd.h f11, f25, f12, f21, rtz # perform operation
fnmadd.h f11, f25, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f25, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f25, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f25, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f25, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f25, f12, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f1, 0(x2) # load 0x00007dff from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x13f103444c96f9b # load x3 with value 0x13f103444c96f9b
sw x3, 0(x2) # store 0x13f103444c96f9b in memory
flh f21, 0(x2) # load 0x13f103444c96f9b from memory into f21
fnmadd.h f8, f1, f31, f21, dyn # perform operation
fnmadd.h f8, f1, f31, f21, rdn # perform operation
fnmadd.h f8, f1, f31, f21, rmm # perform operation
fnmadd.h f8, f1, f31, f21, rne # perform operation
fnmadd.h f8, f1, f31, f21, rtz # perform operation
fnmadd.h f8, f1, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f1, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f1, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f1, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f1, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f1, f31, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f5, 0(x2) # load 0x00007dff from memory into f5
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f31, 0(x2) # load 0x00008000 from memory into f31
la x2, scratch
li x3, 0x63ff8ff7691bf622 # load x3 with value 0x63ff8ff7691bf622
sw x3, 0(x2) # store 0x63ff8ff7691bf622 in memory
flh f23, 0(x2) # load 0x63ff8ff7691bf622 from memory into f23
fnmadd.h f15, f5, f31, f23, dyn # perform operation
fnmadd.h f15, f5, f31, f23, rdn # perform operation
fnmadd.h f15, f5, f31, f23, rmm # perform operation
fnmadd.h f15, f5, f31, f23, rne # perform operation
fnmadd.h f15, f5, f31, f23, rtz # perform operation
fnmadd.h f15, f5, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f5, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f5, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f5, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f5, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f5, f31, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f25, 0(x2) # load 0x00007dff from memory into f25
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f26, 0(x2) # load 0x00003c00 from memory into f26
la x2, scratch
li x3, 0xaae40fa48acf3af8 # load x3 with value 0xaae40fa48acf3af8
sw x3, 0(x2) # store 0xaae40fa48acf3af8 in memory
flh f19, 0(x2) # load 0xaae40fa48acf3af8 from memory into f19
fnmadd.h f27, f25, f26, f19, dyn # perform operation
fnmadd.h f27, f25, f26, f19, rdn # perform operation
fnmadd.h f27, f25, f26, f19, rmm # perform operation
fnmadd.h f27, f25, f26, f19, rne # perform operation
fnmadd.h f27, f25, f26, f19, rtz # perform operation
fnmadd.h f27, f25, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f25, f26, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f22, 0(x2) # load 0x00007dff from memory into f22
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f14, 0(x2) # load 0x0000bc00 from memory into f14
la x2, scratch
li x3, 0xac536b39439070c9 # load x3 with value 0xac536b39439070c9
sw x3, 0(x2) # store 0xac536b39439070c9 in memory
flh f12, 0(x2) # load 0xac536b39439070c9 from memory into f12
fnmadd.h f15, f22, f14, f12, dyn # perform operation
fnmadd.h f15, f22, f14, f12, rdn # perform operation
fnmadd.h f15, f22, f14, f12, rmm # perform operation
fnmadd.h f15, f22, f14, f12, rne # perform operation
fnmadd.h f15, f22, f14, f12, rtz # perform operation
fnmadd.h f15, f22, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f22, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f22, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f22, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f22, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f22, f14, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f25, 0(x2) # load 0x00007dff from memory into f25
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f16, 0(x2) # load 0x00003e00 from memory into f16
la x2, scratch
li x3, 0x95594e68b9a7d402 # load x3 with value 0x95594e68b9a7d402
sw x3, 0(x2) # store 0x95594e68b9a7d402 in memory
flh f9, 0(x2) # load 0x95594e68b9a7d402 from memory into f9
fnmadd.h f27, f25, f16, f9, dyn # perform operation
fnmadd.h f27, f25, f16, f9, rdn # perform operation
fnmadd.h f27, f25, f16, f9, rmm # perform operation
fnmadd.h f27, f25, f16, f9, rne # perform operation
fnmadd.h f27, f25, f16, f9, rtz # perform operation
fnmadd.h f27, f25, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f25, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f25, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f25, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f25, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f25, f16, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f7, 0(x2) # load 0x00007dff from memory into f7
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
la x2, scratch
li x3, 0xe3ae4a47fbe39df8 # load x3 with value 0xe3ae4a47fbe39df8
sw x3, 0(x2) # store 0xe3ae4a47fbe39df8 in memory
flh f16, 0(x2) # load 0xe3ae4a47fbe39df8 from memory into f16
fnmadd.h f28, f7, f1, f16, dyn # perform operation
fnmadd.h f28, f7, f1, f16, rdn # perform operation
fnmadd.h f28, f7, f1, f16, rmm # perform operation
fnmadd.h f28, f7, f1, f16, rne # perform operation
fnmadd.h f28, f7, f1, f16, rtz # perform operation
fnmadd.h f28, f7, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f7, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f7, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f7, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f7, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f7, f1, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f23, 0(x2) # load 0x00007dff from memory into f23
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
la x2, scratch
li x3, 0x74f708eca4907f2b # load x3 with value 0x74f708eca4907f2b
sw x3, 0(x2) # store 0x74f708eca4907f2b in memory
flh f19, 0(x2) # load 0x74f708eca4907f2b from memory into f19
fnmadd.h f29, f23, f6, f19, dyn # perform operation
fnmadd.h f29, f23, f6, f19, rdn # perform operation
fnmadd.h f29, f23, f6, f19, rmm # perform operation
fnmadd.h f29, f23, f6, f19, rne # perform operation
fnmadd.h f29, f23, f6, f19, rtz # perform operation
fnmadd.h f29, f23, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f23, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f23, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f23, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f23, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f23, f6, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f1, 0(x2) # load 0x00007dff from memory into f1
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f13, 0(x2) # load 0x0000c000 from memory into f13
la x2, scratch
li x3, 0x65649f08ba0315dd # load x3 with value 0x65649f08ba0315dd
sw x3, 0(x2) # store 0x65649f08ba0315dd in memory
flh f11, 0(x2) # load 0x65649f08ba0315dd from memory into f11
fnmadd.h f14, f1, f13, f11, dyn # perform operation
fnmadd.h f14, f1, f13, f11, rdn # perform operation
fnmadd.h f14, f1, f13, f11, rmm # perform operation
fnmadd.h f14, f1, f13, f11, rne # perform operation
fnmadd.h f14, f1, f13, f11, rtz # perform operation
fnmadd.h f14, f1, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f1, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f1, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f1, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f1, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f1, f13, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f30, 0(x2) # load 0x00007dff from memory into f30
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f14, 0(x2) # load 0x00000400 from memory into f14
la x2, scratch
li x3, 0xbe6596a300a15842 # load x3 with value 0xbe6596a300a15842
sw x3, 0(x2) # store 0xbe6596a300a15842 in memory
flh f20, 0(x2) # load 0xbe6596a300a15842 from memory into f20
fnmadd.h f21, f30, f14, f20, dyn # perform operation
fnmadd.h f21, f30, f14, f20, rdn # perform operation
fnmadd.h f21, f30, f14, f20, rmm # perform operation
fnmadd.h f21, f30, f14, f20, rne # perform operation
fnmadd.h f21, f30, f14, f20, rtz # perform operation
fnmadd.h f21, f30, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f30, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f30, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f30, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f30, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f30, f14, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f25, 0(x2) # load 0x00007dff from memory into f25
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f2, 0(x2) # load 0x00008400 from memory into f2
la x2, scratch
li x3, 0x45d08c54224b7ff # load x3 with value 0x45d08c54224b7ff
sw x3, 0(x2) # store 0x45d08c54224b7ff in memory
flh f13, 0(x2) # load 0x45d08c54224b7ff from memory into f13
fnmadd.h f6, f25, f2, f13, dyn # perform operation
fnmadd.h f6, f25, f2, f13, rdn # perform operation
fnmadd.h f6, f25, f2, f13, rmm # perform operation
fnmadd.h f6, f25, f2, f13, rne # perform operation
fnmadd.h f6, f25, f2, f13, rtz # perform operation
fnmadd.h f6, f25, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f25, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f25, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f25, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f25, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f25, f2, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f16, 0(x2) # load 0x00007dff from memory into f16
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f12, 0(x2) # load 0x00007bff from memory into f12
la x2, scratch
li x3, 0x7c9e7bb8901d6fea # load x3 with value 0x7c9e7bb8901d6fea
sw x3, 0(x2) # store 0x7c9e7bb8901d6fea in memory
flh f26, 0(x2) # load 0x7c9e7bb8901d6fea from memory into f26
fnmadd.h f6, f16, f12, f26, dyn # perform operation
fnmadd.h f6, f16, f12, f26, rdn # perform operation
fnmadd.h f6, f16, f12, f26, rmm # perform operation
fnmadd.h f6, f16, f12, f26, rne # perform operation
fnmadd.h f6, f16, f12, f26, rtz # perform operation
fnmadd.h f6, f16, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f16, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f16, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f16, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f16, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f16, f12, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f22, 0(x2) # load 0x00007dff from memory into f22
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
la x2, scratch
li x3, 0x5f6363bc5310872c # load x3 with value 0x5f6363bc5310872c
sw x3, 0(x2) # store 0x5f6363bc5310872c in memory
flh f16, 0(x2) # load 0x5f6363bc5310872c from memory into f16
fnmadd.h f17, f22, f13, f16, dyn # perform operation
fnmadd.h f17, f22, f13, f16, rdn # perform operation
fnmadd.h f17, f22, f13, f16, rmm # perform operation
fnmadd.h f17, f22, f13, f16, rne # perform operation
fnmadd.h f17, f22, f13, f16, rtz # perform operation
fnmadd.h f17, f22, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f22, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f22, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f22, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f22, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f22, f13, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f2, 0(x2) # load 0x00007dff from memory into f2
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f14, 0(x2) # load 0x000003ff from memory into f14
la x2, scratch
li x3, 0xb2006f4e6170cbb5 # load x3 with value 0xb2006f4e6170cbb5
sw x3, 0(x2) # store 0xb2006f4e6170cbb5 in memory
flh f16, 0(x2) # load 0xb2006f4e6170cbb5 from memory into f16
fnmadd.h f24, f2, f14, f16, dyn # perform operation
fnmadd.h f24, f2, f14, f16, rdn # perform operation
fnmadd.h f24, f2, f14, f16, rmm # perform operation
fnmadd.h f24, f2, f14, f16, rne # perform operation
fnmadd.h f24, f2, f14, f16, rtz # perform operation
fnmadd.h f24, f2, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f2, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f2, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f2, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f2, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f2, f14, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f12, 0(x2) # load 0x00007dff from memory into f12
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
la x2, scratch
li x3, 0xe9e838620af780af # load x3 with value 0xe9e838620af780af
sw x3, 0(x2) # store 0xe9e838620af780af in memory
flh f13, 0(x2) # load 0xe9e838620af780af from memory into f13
fnmadd.h f24, f12, f17, f13, dyn # perform operation
fnmadd.h f24, f12, f17, f13, rdn # perform operation
fnmadd.h f24, f12, f17, f13, rmm # perform operation
fnmadd.h f24, f12, f17, f13, rne # perform operation
fnmadd.h f24, f12, f17, f13, rtz # perform operation
fnmadd.h f24, f12, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f12, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f12, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f12, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f12, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f12, f17, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f6, 0(x2) # load 0x00007dff from memory into f6
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f26, 0(x2) # load 0x00000200 from memory into f26
la x2, scratch
li x3, 0x6ae80319a498f11f # load x3 with value 0x6ae80319a498f11f
sw x3, 0(x2) # store 0x6ae80319a498f11f in memory
flh f18, 0(x2) # load 0x6ae80319a498f11f from memory into f18
fnmadd.h f10, f6, f26, f18, dyn # perform operation
fnmadd.h f10, f6, f26, f18, rdn # perform operation
fnmadd.h f10, f6, f26, f18, rmm # perform operation
fnmadd.h f10, f6, f26, f18, rne # perform operation
fnmadd.h f10, f6, f26, f18, rtz # perform operation
fnmadd.h f10, f6, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f6, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f6, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f6, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f6, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f6, f26, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f18, 0(x2) # load 0x00007dff from memory into f18
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f8, 0(x2) # load 0x00008200 from memory into f8
la x2, scratch
li x3, 0x5ce673bb7fcf03ff # load x3 with value 0x5ce673bb7fcf03ff
sw x3, 0(x2) # store 0x5ce673bb7fcf03ff in memory
flh f23, 0(x2) # load 0x5ce673bb7fcf03ff from memory into f23
fnmadd.h f14, f18, f8, f23, dyn # perform operation
fnmadd.h f14, f18, f8, f23, rdn # perform operation
fnmadd.h f14, f18, f8, f23, rmm # perform operation
fnmadd.h f14, f18, f8, f23, rne # perform operation
fnmadd.h f14, f18, f8, f23, rtz # perform operation
fnmadd.h f14, f18, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f18, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f18, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f18, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f18, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f18, f8, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f20, 0(x2) # load 0x00007dff from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0xb6f809eeade9729b # load x3 with value 0xb6f809eeade9729b
sw x3, 0(x2) # store 0xb6f809eeade9729b in memory
flh f17, 0(x2) # load 0xb6f809eeade9729b from memory into f17
fnmadd.h f16, f20, f29, f17, dyn # perform operation
fnmadd.h f16, f20, f29, f17, rdn # perform operation
fnmadd.h f16, f20, f29, f17, rmm # perform operation
fnmadd.h f16, f20, f29, f17, rne # perform operation
fnmadd.h f16, f20, f29, f17, rtz # perform operation
fnmadd.h f16, f20, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f20, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f20, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f20, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f20, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f20, f29, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f17, 0(x2) # load 0x00007dff from memory into f17
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f1, 0(x2) # load 0x00008001 from memory into f1
la x2, scratch
li x3, 0x7426b2772ebfc880 # load x3 with value 0x7426b2772ebfc880
sw x3, 0(x2) # store 0x7426b2772ebfc880 in memory
flh f6, 0(x2) # load 0x7426b2772ebfc880 from memory into f6
fnmadd.h f11, f17, f1, f6, dyn # perform operation
fnmadd.h f11, f17, f1, f6, rdn # perform operation
fnmadd.h f11, f17, f1, f6, rmm # perform operation
fnmadd.h f11, f17, f1, f6, rne # perform operation
fnmadd.h f11, f17, f1, f6, rtz # perform operation
fnmadd.h f11, f17, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f17, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f17, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f17, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f17, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f17, f1, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f8, 0(x2) # load 0x00007dff from memory into f8
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f24, 0(x2) # load 0x00007c00 from memory into f24
la x2, scratch
li x3, 0xc9e21a91e9c0851a # load x3 with value 0xc9e21a91e9c0851a
sw x3, 0(x2) # store 0xc9e21a91e9c0851a in memory
flh f17, 0(x2) # load 0xc9e21a91e9c0851a from memory into f17
fnmadd.h f19, f8, f24, f17, dyn # perform operation
fnmadd.h f19, f8, f24, f17, rdn # perform operation
fnmadd.h f19, f8, f24, f17, rmm # perform operation
fnmadd.h f19, f8, f24, f17, rne # perform operation
fnmadd.h f19, f8, f24, f17, rtz # perform operation
fnmadd.h f19, f8, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f8, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f8, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f8, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f8, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f8, f24, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f2, 0(x2) # load 0x00007dff from memory into f2
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f29, 0(x2) # load 0x0000fc00 from memory into f29
la x2, scratch
li x3, 0x453bde06543c2708 # load x3 with value 0x453bde06543c2708
sw x3, 0(x2) # store 0x453bde06543c2708 in memory
flh f3, 0(x2) # load 0x453bde06543c2708 from memory into f3
fnmadd.h f27, f2, f29, f3, dyn # perform operation
fnmadd.h f27, f2, f29, f3, rdn # perform operation
fnmadd.h f27, f2, f29, f3, rmm # perform operation
fnmadd.h f27, f2, f29, f3, rne # perform operation
fnmadd.h f27, f2, f29, f3, rtz # perform operation
fnmadd.h f27, f2, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f2, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f2, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f2, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f2, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f2, f29, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f20, 0(x2) # load 0x00007dff from memory into f20
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f9, 0(x2) # load 0x00007e00 from memory into f9
la x2, scratch
li x3, 0x54e36d53c92de23e # load x3 with value 0x54e36d53c92de23e
sw x3, 0(x2) # store 0x54e36d53c92de23e in memory
flh f14, 0(x2) # load 0x54e36d53c92de23e from memory into f14
fnmadd.h f2, f20, f9, f14, dyn # perform operation
fnmadd.h f2, f20, f9, f14, rdn # perform operation
fnmadd.h f2, f20, f9, f14, rmm # perform operation
fnmadd.h f2, f20, f9, f14, rne # perform operation
fnmadd.h f2, f20, f9, f14, rtz # perform operation
fnmadd.h f2, f20, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f20, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f20, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f20, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f20, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f20, f9, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f14, 0(x2) # load 0x00007dff from memory into f14
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f13, 0(x2) # load 0x00007fff from memory into f13
la x2, scratch
li x3, 0xbed849186bef4a55 # load x3 with value 0xbed849186bef4a55
sw x3, 0(x2) # store 0xbed849186bef4a55 in memory
flh f27, 0(x2) # load 0xbed849186bef4a55 from memory into f27
fnmadd.h f22, f14, f13, f27, dyn # perform operation
fnmadd.h f22, f14, f13, f27, rdn # perform operation
fnmadd.h f22, f14, f13, f27, rmm # perform operation
fnmadd.h f22, f14, f13, f27, rne # perform operation
fnmadd.h f22, f14, f13, f27, rtz # perform operation
fnmadd.h f22, f14, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f14, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f14, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f14, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f14, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f14, f13, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f5, 0(x2) # load 0x00007dff from memory into f5
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f8, 0(x2) # load 0x0000fe00 from memory into f8
la x2, scratch
li x3, 0xe3737dd97bc9ff57 # load x3 with value 0xe3737dd97bc9ff57
sw x3, 0(x2) # store 0xe3737dd97bc9ff57 in memory
flh f10, 0(x2) # load 0xe3737dd97bc9ff57 from memory into f10
fnmadd.h f22, f5, f8, f10, dyn # perform operation
fnmadd.h f22, f5, f8, f10, rdn # perform operation
fnmadd.h f22, f5, f8, f10, rmm # perform operation
fnmadd.h f22, f5, f8, f10, rne # perform operation
fnmadd.h f22, f5, f8, f10, rtz # perform operation
fnmadd.h f22, f5, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f5, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f5, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f5, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f5, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f5, f8, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f22, 0(x2) # load 0x00007dff from memory into f22
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f11, 0(x2) # load 0x00007c01 from memory into f11
la x2, scratch
li x3, 0x292549545e99130d # load x3 with value 0x292549545e99130d
sw x3, 0(x2) # store 0x292549545e99130d in memory
flh f12, 0(x2) # load 0x292549545e99130d from memory into f12
fnmadd.h f23, f22, f11, f12, dyn # perform operation
fnmadd.h f23, f22, f11, f12, rdn # perform operation
fnmadd.h f23, f22, f11, f12, rmm # perform operation
fnmadd.h f23, f22, f11, f12, rne # perform operation
fnmadd.h f23, f22, f11, f12, rtz # perform operation
fnmadd.h f23, f22, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f22, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f22, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f22, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f22, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f22, f11, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f27, 0(x2) # load 0x00007dff from memory into f27
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f20, 0(x2) # load 0x00007dff from memory into f20
la x2, scratch
li x3, 0xf0216a18b990ac3f # load x3 with value 0xf0216a18b990ac3f
sw x3, 0(x2) # store 0xf0216a18b990ac3f in memory
flh f1, 0(x2) # load 0xf0216a18b990ac3f from memory into f1
fnmadd.h f26, f27, f20, f1, dyn # perform operation
fnmadd.h f26, f27, f20, f1, rdn # perform operation
fnmadd.h f26, f27, f20, f1, rmm # perform operation
fnmadd.h f26, f27, f20, f1, rne # perform operation
fnmadd.h f26, f27, f20, f1, rtz # perform operation
fnmadd.h f26, f27, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f27, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f27, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f27, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f27, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f27, f20, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f16, 0(x2) # load 0x00007dff from memory into f16
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f1, 0(x2) # load 0x0000fc01 from memory into f1
la x2, scratch
li x3, 0x516baee714f18fca # load x3 with value 0x516baee714f18fca
sw x3, 0(x2) # store 0x516baee714f18fca in memory
flh f23, 0(x2) # load 0x516baee714f18fca from memory into f23
fnmadd.h f8, f16, f1, f23, dyn # perform operation
fnmadd.h f8, f16, f1, f23, rdn # perform operation
fnmadd.h f8, f16, f1, f23, rmm # perform operation
fnmadd.h f8, f16, f1, f23, rne # perform operation
fnmadd.h f8, f16, f1, f23, rtz # perform operation
fnmadd.h f8, f16, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f16, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f16, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f16, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f16, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f16, f1, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f27, 0(x2) # load 0x00007dff from memory into f27
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f20, 0(x2) # load 0x000058b4 from memory into f20
la x2, scratch
li x3, 0xd5678378c05803cf # load x3 with value 0xd5678378c05803cf
sw x3, 0(x2) # store 0xd5678378c05803cf in memory
flh f21, 0(x2) # load 0xd5678378c05803cf from memory into f21
fnmadd.h f7, f27, f20, f21, dyn # perform operation
fnmadd.h f7, f27, f20, f21, rdn # perform operation
fnmadd.h f7, f27, f20, f21, rmm # perform operation
fnmadd.h f7, f27, f20, f21, rne # perform operation
fnmadd.h f7, f27, f20, f21, rtz # perform operation
fnmadd.h f7, f27, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f27, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f27, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f27, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f27, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f27, f20, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f30, 0(x2) # load 0x00007dff from memory into f30
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
la x2, scratch
li x3, 0x65fc09cebba299b6 # load x3 with value 0x65fc09cebba299b6
sw x3, 0(x2) # store 0x65fc09cebba299b6 in memory
flh f20, 0(x2) # load 0x65fc09cebba299b6 from memory into f20
fnmadd.h f9, f30, f3, f20, dyn # perform operation
fnmadd.h f9, f30, f3, f20, rdn # perform operation
fnmadd.h f9, f30, f3, f20, rmm # perform operation
fnmadd.h f9, f30, f3, f20, rne # perform operation
fnmadd.h f9, f30, f3, f20, rtz # perform operation
fnmadd.h f9, f30, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f30, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f30, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f30, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f30, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f30, f3, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f19, 0(x2) # load 0x0000fc01 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x1b839ac37b04ddf4 # load x3 with value 0x1b839ac37b04ddf4
sw x3, 0(x2) # store 0x1b839ac37b04ddf4 in memory
flh f9, 0(x2) # load 0x1b839ac37b04ddf4 from memory into f9
fnmadd.h f16, f19, f2, f9, dyn # perform operation
fnmadd.h f16, f19, f2, f9, rdn # perform operation
fnmadd.h f16, f19, f2, f9, rmm # perform operation
fnmadd.h f16, f19, f2, f9, rne # perform operation
fnmadd.h f16, f19, f2, f9, rtz # perform operation
fnmadd.h f16, f19, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f19, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f19, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f19, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f19, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f19, f2, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f31, 0(x2) # load 0x0000fc01 from memory into f31
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
la x2, scratch
li x3, 0xc59295de0c0e69c # load x3 with value 0xc59295de0c0e69c
sw x3, 0(x2) # store 0xc59295de0c0e69c in memory
flh f7, 0(x2) # load 0xc59295de0c0e69c from memory into f7
fnmadd.h f22, f31, f12, f7, dyn # perform operation
fnmadd.h f22, f31, f12, f7, rdn # perform operation
fnmadd.h f22, f31, f12, f7, rmm # perform operation
fnmadd.h f22, f31, f12, f7, rne # perform operation
fnmadd.h f22, f31, f12, f7, rtz # perform operation
fnmadd.h f22, f31, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f31, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f31, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f31, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f31, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f31, f12, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f14, 0(x2) # load 0x0000fc01 from memory into f14
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f9, 0(x2) # load 0x00003c00 from memory into f9
la x2, scratch
li x3, 0x5db9add5b51e7fbb # load x3 with value 0x5db9add5b51e7fbb
sw x3, 0(x2) # store 0x5db9add5b51e7fbb in memory
flh f10, 0(x2) # load 0x5db9add5b51e7fbb from memory into f10
fnmadd.h f19, f14, f9, f10, dyn # perform operation
fnmadd.h f19, f14, f9, f10, rdn # perform operation
fnmadd.h f19, f14, f9, f10, rmm # perform operation
fnmadd.h f19, f14, f9, f10, rne # perform operation
fnmadd.h f19, f14, f9, f10, rtz # perform operation
fnmadd.h f19, f14, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f14, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f14, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f14, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f14, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f14, f9, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f11, 0(x2) # load 0x0000fc01 from memory into f11
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f18, 0(x2) # load 0x0000bc00 from memory into f18
la x2, scratch
li x3, 0xf77057cc73f3cb8c # load x3 with value 0xf77057cc73f3cb8c
sw x3, 0(x2) # store 0xf77057cc73f3cb8c in memory
flh f12, 0(x2) # load 0xf77057cc73f3cb8c from memory into f12
fnmadd.h f2, f11, f18, f12, dyn # perform operation
fnmadd.h f2, f11, f18, f12, rdn # perform operation
fnmadd.h f2, f11, f18, f12, rmm # perform operation
fnmadd.h f2, f11, f18, f12, rne # perform operation
fnmadd.h f2, f11, f18, f12, rtz # perform operation
fnmadd.h f2, f11, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f11, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f11, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f11, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f11, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f11, f18, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f17, 0(x2) # load 0x0000fc01 from memory into f17
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f30, 0(x2) # load 0x00003e00 from memory into f30
la x2, scratch
li x3, 0x4e72be092dcef378 # load x3 with value 0x4e72be092dcef378
sw x3, 0(x2) # store 0x4e72be092dcef378 in memory
flh f6, 0(x2) # load 0x4e72be092dcef378 from memory into f6
fnmadd.h f24, f17, f30, f6, dyn # perform operation
fnmadd.h f24, f17, f30, f6, rdn # perform operation
fnmadd.h f24, f17, f30, f6, rmm # perform operation
fnmadd.h f24, f17, f30, f6, rne # perform operation
fnmadd.h f24, f17, f30, f6, rtz # perform operation
fnmadd.h f24, f17, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f17, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f17, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f17, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f17, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f17, f30, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f11, 0(x2) # load 0x0000fc01 from memory into f11
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f21, 0(x2) # load 0x0000be00 from memory into f21
la x2, scratch
li x3, 0xb53e44d6e9a9a9fa # load x3 with value 0xb53e44d6e9a9a9fa
sw x3, 0(x2) # store 0xb53e44d6e9a9a9fa in memory
flh f5, 0(x2) # load 0xb53e44d6e9a9a9fa from memory into f5
fnmadd.h f1, f11, f21, f5, dyn # perform operation
fnmadd.h f1, f11, f21, f5, rdn # perform operation
fnmadd.h f1, f11, f21, f5, rmm # perform operation
fnmadd.h f1, f11, f21, f5, rne # perform operation
fnmadd.h f1, f11, f21, f5, rtz # perform operation
fnmadd.h f1, f11, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f11, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f11, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f11, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f11, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f11, f21, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f14, 0(x2) # load 0x0000fc01 from memory into f14
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f20, 0(x2) # load 0x00004000 from memory into f20
la x2, scratch
li x3, 0x4dd333b9676056a3 # load x3 with value 0x4dd333b9676056a3
sw x3, 0(x2) # store 0x4dd333b9676056a3 in memory
flh f10, 0(x2) # load 0x4dd333b9676056a3 from memory into f10
fnmadd.h f2, f14, f20, f10, dyn # perform operation
fnmadd.h f2, f14, f20, f10, rdn # perform operation
fnmadd.h f2, f14, f20, f10, rmm # perform operation
fnmadd.h f2, f14, f20, f10, rne # perform operation
fnmadd.h f2, f14, f20, f10, rtz # perform operation
fnmadd.h f2, f14, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f14, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f14, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f14, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f14, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f14, f20, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f23, 0(x2) # load 0x0000fc01 from memory into f23
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f21, 0(x2) # load 0x0000c000 from memory into f21
la x2, scratch
li x3, 0x884297dc782cb078 # load x3 with value 0x884297dc782cb078
sw x3, 0(x2) # store 0x884297dc782cb078 in memory
flh f20, 0(x2) # load 0x884297dc782cb078 from memory into f20
fnmadd.h f19, f23, f21, f20, dyn # perform operation
fnmadd.h f19, f23, f21, f20, rdn # perform operation
fnmadd.h f19, f23, f21, f20, rmm # perform operation
fnmadd.h f19, f23, f21, f20, rne # perform operation
fnmadd.h f19, f23, f21, f20, rtz # perform operation
fnmadd.h f19, f23, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f23, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f23, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f23, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f23, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f23, f21, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f18, 0(x2) # load 0x0000fc01 from memory into f18
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f23, 0(x2) # load 0x00000400 from memory into f23
la x2, scratch
li x3, 0x4502164d79d775a9 # load x3 with value 0x4502164d79d775a9
sw x3, 0(x2) # store 0x4502164d79d775a9 in memory
flh f5, 0(x2) # load 0x4502164d79d775a9 from memory into f5
fnmadd.h f30, f18, f23, f5, dyn # perform operation
fnmadd.h f30, f18, f23, f5, rdn # perform operation
fnmadd.h f30, f18, f23, f5, rmm # perform operation
fnmadd.h f30, f18, f23, f5, rne # perform operation
fnmadd.h f30, f18, f23, f5, rtz # perform operation
fnmadd.h f30, f18, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f18, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f18, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f18, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f18, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f18, f23, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f1, 0(x2) # load 0x0000fc01 from memory into f1
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f20, 0(x2) # load 0x00008400 from memory into f20
la x2, scratch
li x3, 0x5e9d98f26b33be7a # load x3 with value 0x5e9d98f26b33be7a
sw x3, 0(x2) # store 0x5e9d98f26b33be7a in memory
flh f9, 0(x2) # load 0x5e9d98f26b33be7a from memory into f9
fnmadd.h f11, f1, f20, f9, dyn # perform operation
fnmadd.h f11, f1, f20, f9, rdn # perform operation
fnmadd.h f11, f1, f20, f9, rmm # perform operation
fnmadd.h f11, f1, f20, f9, rne # perform operation
fnmadd.h f11, f1, f20, f9, rtz # perform operation
fnmadd.h f11, f1, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f1, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f1, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f1, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f1, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f1, f20, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f21, 0(x2) # load 0x0000fc01 from memory into f21
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f23, 0(x2) # load 0x00007bff from memory into f23
la x2, scratch
li x3, 0x94dd058070f8034f # load x3 with value 0x94dd058070f8034f
sw x3, 0(x2) # store 0x94dd058070f8034f in memory
flh f28, 0(x2) # load 0x94dd058070f8034f from memory into f28
fnmadd.h f12, f21, f23, f28, dyn # perform operation
fnmadd.h f12, f21, f23, f28, rdn # perform operation
fnmadd.h f12, f21, f23, f28, rmm # perform operation
fnmadd.h f12, f21, f23, f28, rne # perform operation
fnmadd.h f12, f21, f23, f28, rtz # perform operation
fnmadd.h f12, f21, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f21, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f21, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f21, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f21, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f21, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f17, 0(x2) # load 0x0000fc01 from memory into f17
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f22, 0(x2) # load 0x0000fbff from memory into f22
la x2, scratch
li x3, 0xb351c8c5d10ba9a9 # load x3 with value 0xb351c8c5d10ba9a9
sw x3, 0(x2) # store 0xb351c8c5d10ba9a9 in memory
flh f1, 0(x2) # load 0xb351c8c5d10ba9a9 from memory into f1
fnmadd.h f10, f17, f22, f1, dyn # perform operation
fnmadd.h f10, f17, f22, f1, rdn # perform operation
fnmadd.h f10, f17, f22, f1, rmm # perform operation
fnmadd.h f10, f17, f22, f1, rne # perform operation
fnmadd.h f10, f17, f22, f1, rtz # perform operation
fnmadd.h f10, f17, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f17, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f17, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f17, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f17, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f17, f22, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f9, 0(x2) # load 0x0000fc01 from memory into f9
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f11, 0(x2) # load 0x000003ff from memory into f11
la x2, scratch
li x3, 0x148d2ca97b1e8761 # load x3 with value 0x148d2ca97b1e8761
sw x3, 0(x2) # store 0x148d2ca97b1e8761 in memory
flh f6, 0(x2) # load 0x148d2ca97b1e8761 from memory into f6
fnmadd.h f1, f9, f11, f6, dyn # perform operation
fnmadd.h f1, f9, f11, f6, rdn # perform operation
fnmadd.h f1, f9, f11, f6, rmm # perform operation
fnmadd.h f1, f9, f11, f6, rne # perform operation
fnmadd.h f1, f9, f11, f6, rtz # perform operation
fnmadd.h f1, f9, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f9, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f9, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f9, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f9, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f9, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f10, 0(x2) # load 0x0000fc01 from memory into f10
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
la x2, scratch
li x3, 0xfedc42a4f3d4617d # load x3 with value 0xfedc42a4f3d4617d
sw x3, 0(x2) # store 0xfedc42a4f3d4617d in memory
flh f3, 0(x2) # load 0xfedc42a4f3d4617d from memory into f3
fnmadd.h f23, f10, f19, f3, dyn # perform operation
fnmadd.h f23, f10, f19, f3, rdn # perform operation
fnmadd.h f23, f10, f19, f3, rmm # perform operation
fnmadd.h f23, f10, f19, f3, rne # perform operation
fnmadd.h f23, f10, f19, f3, rtz # perform operation
fnmadd.h f23, f10, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f10, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f10, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f10, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f10, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f10, f19, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f23, 0(x2) # load 0x0000fc01 from memory into f23
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f7, 0(x2) # load 0x00000200 from memory into f7
la x2, scratch
li x3, 0x98fef123f574725c # load x3 with value 0x98fef123f574725c
sw x3, 0(x2) # store 0x98fef123f574725c in memory
flh f31, 0(x2) # load 0x98fef123f574725c from memory into f31
fnmadd.h f19, f23, f7, f31, dyn # perform operation
fnmadd.h f19, f23, f7, f31, rdn # perform operation
fnmadd.h f19, f23, f7, f31, rmm # perform operation
fnmadd.h f19, f23, f7, f31, rne # perform operation
fnmadd.h f19, f23, f7, f31, rtz # perform operation
fnmadd.h f19, f23, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f23, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f23, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f23, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f23, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f23, f7, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f11, 0(x2) # load 0x0000fc01 from memory into f11
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f1, 0(x2) # load 0x00008200 from memory into f1
la x2, scratch
li x3, 0xb5230910b890f5c0 # load x3 with value 0xb5230910b890f5c0
sw x3, 0(x2) # store 0xb5230910b890f5c0 in memory
flh f31, 0(x2) # load 0xb5230910b890f5c0 from memory into f31
fnmadd.h f16, f11, f1, f31, dyn # perform operation
fnmadd.h f16, f11, f1, f31, rdn # perform operation
fnmadd.h f16, f11, f1, f31, rmm # perform operation
fnmadd.h f16, f11, f1, f31, rne # perform operation
fnmadd.h f16, f11, f1, f31, rtz # perform operation
fnmadd.h f16, f11, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f11, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f11, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f11, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f11, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f11, f1, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f12, 0(x2) # load 0x0000fc01 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0x8fb41c7620230aeb # load x3 with value 0x8fb41c7620230aeb
sw x3, 0(x2) # store 0x8fb41c7620230aeb in memory
flh f26, 0(x2) # load 0x8fb41c7620230aeb from memory into f26
fnmadd.h f21, f12, f25, f26, dyn # perform operation
fnmadd.h f21, f12, f25, f26, rdn # perform operation
fnmadd.h f21, f12, f25, f26, rmm # perform operation
fnmadd.h f21, f12, f25, f26, rne # perform operation
fnmadd.h f21, f12, f25, f26, rtz # perform operation
fnmadd.h f21, f12, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f12, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f12, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f12, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f12, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f12, f25, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f18, 0(x2) # load 0x0000fc01 from memory into f18
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f24, 0(x2) # load 0x00008001 from memory into f24
la x2, scratch
li x3, 0x72bd012bc2521bff # load x3 with value 0x72bd012bc2521bff
sw x3, 0(x2) # store 0x72bd012bc2521bff in memory
flh f17, 0(x2) # load 0x72bd012bc2521bff from memory into f17
fnmadd.h f29, f18, f24, f17, dyn # perform operation
fnmadd.h f29, f18, f24, f17, rdn # perform operation
fnmadd.h f29, f18, f24, f17, rmm # perform operation
fnmadd.h f29, f18, f24, f17, rne # perform operation
fnmadd.h f29, f18, f24, f17, rtz # perform operation
fnmadd.h f29, f18, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f18, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f18, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f18, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f18, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f18, f24, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f7, 0(x2) # load 0x0000fc01 from memory into f7
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f26, 0(x2) # load 0x00007c00 from memory into f26
la x2, scratch
li x3, 0x8ec899e3e9a006cf # load x3 with value 0x8ec899e3e9a006cf
sw x3, 0(x2) # store 0x8ec899e3e9a006cf in memory
flh f25, 0(x2) # load 0x8ec899e3e9a006cf from memory into f25
fnmadd.h f17, f7, f26, f25, dyn # perform operation
fnmadd.h f17, f7, f26, f25, rdn # perform operation
fnmadd.h f17, f7, f26, f25, rmm # perform operation
fnmadd.h f17, f7, f26, f25, rne # perform operation
fnmadd.h f17, f7, f26, f25, rtz # perform operation
fnmadd.h f17, f7, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f7, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f7, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f7, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f7, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f7, f26, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f19, 0(x2) # load 0x0000fc01 from memory into f19
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f10, 0(x2) # load 0x0000fc00 from memory into f10
la x2, scratch
li x3, 0xc0eb681fcb1349f3 # load x3 with value 0xc0eb681fcb1349f3
sw x3, 0(x2) # store 0xc0eb681fcb1349f3 in memory
flh f7, 0(x2) # load 0xc0eb681fcb1349f3 from memory into f7
fnmadd.h f11, f19, f10, f7, dyn # perform operation
fnmadd.h f11, f19, f10, f7, rdn # perform operation
fnmadd.h f11, f19, f10, f7, rmm # perform operation
fnmadd.h f11, f19, f10, f7, rne # perform operation
fnmadd.h f11, f19, f10, f7, rtz # perform operation
fnmadd.h f11, f19, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f19, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f19, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f19, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f19, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f19, f10, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f19, 0(x2) # load 0x0000fc01 from memory into f19
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f2, 0(x2) # load 0x00007e00 from memory into f2
la x2, scratch
li x3, 0xe0a5993a03755fc4 # load x3 with value 0xe0a5993a03755fc4
sw x3, 0(x2) # store 0xe0a5993a03755fc4 in memory
flh f21, 0(x2) # load 0xe0a5993a03755fc4 from memory into f21
fnmadd.h f18, f19, f2, f21, dyn # perform operation
fnmadd.h f18, f19, f2, f21, rdn # perform operation
fnmadd.h f18, f19, f2, f21, rmm # perform operation
fnmadd.h f18, f19, f2, f21, rne # perform operation
fnmadd.h f18, f19, f2, f21, rtz # perform operation
fnmadd.h f18, f19, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f19, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f19, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f19, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f19, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f19, f2, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f8, 0(x2) # load 0x0000fc01 from memory into f8
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f29, 0(x2) # load 0x00007fff from memory into f29
la x2, scratch
li x3, 0xfe77895930431a3b # load x3 with value 0xfe77895930431a3b
sw x3, 0(x2) # store 0xfe77895930431a3b in memory
flh f6, 0(x2) # load 0xfe77895930431a3b from memory into f6
fnmadd.h f1, f8, f29, f6, dyn # perform operation
fnmadd.h f1, f8, f29, f6, rdn # perform operation
fnmadd.h f1, f8, f29, f6, rmm # perform operation
fnmadd.h f1, f8, f29, f6, rne # perform operation
fnmadd.h f1, f8, f29, f6, rtz # perform operation
fnmadd.h f1, f8, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f8, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f8, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f8, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f8, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f8, f29, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f5, 0(x2) # load 0x0000fc01 from memory into f5
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f15, 0(x2) # load 0x0000fe00 from memory into f15
la x2, scratch
li x3, 0x79afbde2c4f619d0 # load x3 with value 0x79afbde2c4f619d0
sw x3, 0(x2) # store 0x79afbde2c4f619d0 in memory
flh f13, 0(x2) # load 0x79afbde2c4f619d0 from memory into f13
fnmadd.h f31, f5, f15, f13, dyn # perform operation
fnmadd.h f31, f5, f15, f13, rdn # perform operation
fnmadd.h f31, f5, f15, f13, rmm # perform operation
fnmadd.h f31, f5, f15, f13, rne # perform operation
fnmadd.h f31, f5, f15, f13, rtz # perform operation
fnmadd.h f31, f5, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f5, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f5, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f5, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f5, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f5, f15, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f13, 0(x2) # load 0x0000fc01 from memory into f13
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f15, 0(x2) # load 0x00007c01 from memory into f15
la x2, scratch
li x3, 0xad109be3e2fcb100 # load x3 with value 0xad109be3e2fcb100
sw x3, 0(x2) # store 0xad109be3e2fcb100 in memory
flh f29, 0(x2) # load 0xad109be3e2fcb100 from memory into f29
fnmadd.h f31, f13, f15, f29, dyn # perform operation
fnmadd.h f31, f13, f15, f29, rdn # perform operation
fnmadd.h f31, f13, f15, f29, rmm # perform operation
fnmadd.h f31, f13, f15, f29, rne # perform operation
fnmadd.h f31, f13, f15, f29, rtz # perform operation
fnmadd.h f31, f13, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f13, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f13, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f13, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f13, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f13, f15, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f29, 0(x2) # load 0x0000fc01 from memory into f29
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f19, 0(x2) # load 0x00007dff from memory into f19
la x2, scratch
li x3, 0x54dd33b3a1351fed # load x3 with value 0x54dd33b3a1351fed
sw x3, 0(x2) # store 0x54dd33b3a1351fed in memory
flh f30, 0(x2) # load 0x54dd33b3a1351fed from memory into f30
fnmadd.h f31, f29, f19, f30, dyn # perform operation
fnmadd.h f31, f29, f19, f30, rdn # perform operation
fnmadd.h f31, f29, f19, f30, rmm # perform operation
fnmadd.h f31, f29, f19, f30, rne # perform operation
fnmadd.h f31, f29, f19, f30, rtz # perform operation
fnmadd.h f31, f29, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f29, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f29, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f29, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f29, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f29, f19, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f15, 0(x2) # load 0x0000fc01 from memory into f15
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f21, 0(x2) # load 0x0000fc01 from memory into f21
la x2, scratch
li x3, 0xc3842ab225163f01 # load x3 with value 0xc3842ab225163f01
sw x3, 0(x2) # store 0xc3842ab225163f01 in memory
flh f30, 0(x2) # load 0xc3842ab225163f01 from memory into f30
fnmadd.h f10, f15, f21, f30, dyn # perform operation
fnmadd.h f10, f15, f21, f30, rdn # perform operation
fnmadd.h f10, f15, f21, f30, rmm # perform operation
fnmadd.h f10, f15, f21, f30, rne # perform operation
fnmadd.h f10, f15, f21, f30, rtz # perform operation
fnmadd.h f10, f15, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f15, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f15, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f15, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f15, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f15, f21, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f22, 0(x2) # load 0x0000fc01 from memory into f22
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
la x2, scratch
li x3, 0x83465c0d4d497749 # load x3 with value 0x83465c0d4d497749
sw x3, 0(x2) # store 0x83465c0d4d497749 in memory
flh f24, 0(x2) # load 0x83465c0d4d497749 from memory into f24
fnmadd.h f17, f22, f21, f24, dyn # perform operation
fnmadd.h f17, f22, f21, f24, rdn # perform operation
fnmadd.h f17, f22, f21, f24, rmm # perform operation
fnmadd.h f17, f22, f21, f24, rne # perform operation
fnmadd.h f17, f22, f21, f24, rtz # perform operation
fnmadd.h f17, f22, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f22, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f22, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f22, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f22, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f22, f21, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f22, 0(x2) # load 0x0000fc01 from memory into f22
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f24, 0(x2) # load 0x0000c93a from memory into f24
la x2, scratch
li x3, 0x8b23eba884f13c4f # load x3 with value 0x8b23eba884f13c4f
sw x3, 0(x2) # store 0x8b23eba884f13c4f in memory
flh f12, 0(x2) # load 0x8b23eba884f13c4f from memory into f12
fnmadd.h f25, f22, f24, f12, dyn # perform operation
fnmadd.h f25, f22, f24, f12, rdn # perform operation
fnmadd.h f25, f22, f24, f12, rmm # perform operation
fnmadd.h f25, f22, f24, f12, rne # perform operation
fnmadd.h f25, f22, f24, f12, rtz # perform operation
fnmadd.h f25, f22, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f22, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f22, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f22, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f22, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f22, f24, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f24, 0(x2) # load 0x000058b4 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0xf87a8c13efb908d5 # load x3 with value 0xf87a8c13efb908d5
sw x3, 0(x2) # store 0xf87a8c13efb908d5 in memory
flh f15, 0(x2) # load 0xf87a8c13efb908d5 from memory into f15
fnmadd.h f11, f24, f26, f15, dyn # perform operation
fnmadd.h f11, f24, f26, f15, rdn # perform operation
fnmadd.h f11, f24, f26, f15, rmm # perform operation
fnmadd.h f11, f24, f26, f15, rne # perform operation
fnmadd.h f11, f24, f26, f15, rtz # perform operation
fnmadd.h f11, f24, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f24, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f24, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f24, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f24, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f24, f26, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f18, 0(x2) # load 0x00008000 from memory into f18
la x2, scratch
li x3, 0x531d06de09c4975e # load x3 with value 0x531d06de09c4975e
sw x3, 0(x2) # store 0x531d06de09c4975e in memory
flh f6, 0(x2) # load 0x531d06de09c4975e from memory into f6
fnmadd.h f3, f13, f18, f6, dyn # perform operation
fnmadd.h f3, f13, f18, f6, rdn # perform operation
fnmadd.h f3, f13, f18, f6, rmm # perform operation
fnmadd.h f3, f13, f18, f6, rne # perform operation
fnmadd.h f3, f13, f18, f6, rtz # perform operation
fnmadd.h f3, f13, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f13, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f13, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f13, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f13, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f13, f18, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f31, 0(x2) # load 0x000058b4 from memory into f31
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f11, 0(x2) # load 0x00003c00 from memory into f11
la x2, scratch
li x3, 0xf10effbc35567b3d # load x3 with value 0xf10effbc35567b3d
sw x3, 0(x2) # store 0xf10effbc35567b3d in memory
flh f29, 0(x2) # load 0xf10effbc35567b3d from memory into f29
fnmadd.h f23, f31, f11, f29, dyn # perform operation
fnmadd.h f23, f31, f11, f29, rdn # perform operation
fnmadd.h f23, f31, f11, f29, rmm # perform operation
fnmadd.h f23, f31, f11, f29, rne # perform operation
fnmadd.h f23, f31, f11, f29, rtz # perform operation
fnmadd.h f23, f31, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f31, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f31, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f31, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f31, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f31, f11, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f3, 0(x2) # load 0x000058b4 from memory into f3
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f8, 0(x2) # load 0x0000bc00 from memory into f8
la x2, scratch
li x3, 0xce14c3c0bb3dffc0 # load x3 with value 0xce14c3c0bb3dffc0
sw x3, 0(x2) # store 0xce14c3c0bb3dffc0 in memory
flh f11, 0(x2) # load 0xce14c3c0bb3dffc0 from memory into f11
fnmadd.h f22, f3, f8, f11, dyn # perform operation
fnmadd.h f22, f3, f8, f11, rdn # perform operation
fnmadd.h f22, f3, f8, f11, rmm # perform operation
fnmadd.h f22, f3, f8, f11, rne # perform operation
fnmadd.h f22, f3, f8, f11, rtz # perform operation
fnmadd.h f22, f3, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f3, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f3, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f3, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f3, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f3, f8, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f26, 0(x2) # load 0x000058b4 from memory into f26
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f6, 0(x2) # load 0x00003e00 from memory into f6
la x2, scratch
li x3, 0x3e01210193935942 # load x3 with value 0x3e01210193935942
sw x3, 0(x2) # store 0x3e01210193935942 in memory
flh f28, 0(x2) # load 0x3e01210193935942 from memory into f28
fnmadd.h f25, f26, f6, f28, dyn # perform operation
fnmadd.h f25, f26, f6, f28, rdn # perform operation
fnmadd.h f25, f26, f6, f28, rmm # perform operation
fnmadd.h f25, f26, f6, f28, rne # perform operation
fnmadd.h f25, f26, f6, f28, rtz # perform operation
fnmadd.h f25, f26, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f26, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f26, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f26, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f26, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f26, f6, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f17, 0(x2) # load 0x000058b4 from memory into f17
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f21, 0(x2) # load 0x0000be00 from memory into f21
la x2, scratch
li x3, 0xf41833b36035688c # load x3 with value 0xf41833b36035688c
sw x3, 0(x2) # store 0xf41833b36035688c in memory
flh f22, 0(x2) # load 0xf41833b36035688c from memory into f22
fnmadd.h f7, f17, f21, f22, dyn # perform operation
fnmadd.h f7, f17, f21, f22, rdn # perform operation
fnmadd.h f7, f17, f21, f22, rmm # perform operation
fnmadd.h f7, f17, f21, f22, rne # perform operation
fnmadd.h f7, f17, f21, f22, rtz # perform operation
fnmadd.h f7, f17, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f17, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f17, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f17, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f17, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f17, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
la x2, scratch
li x3, 0xa2eca8e236890f3b # load x3 with value 0xa2eca8e236890f3b
sw x3, 0(x2) # store 0xa2eca8e236890f3b in memory
flh f29, 0(x2) # load 0xa2eca8e236890f3b from memory into f29
fnmadd.h f19, f21, f6, f29, dyn # perform operation
fnmadd.h f19, f21, f6, f29, rdn # perform operation
fnmadd.h f19, f21, f6, f29, rmm # perform operation
fnmadd.h f19, f21, f6, f29, rne # perform operation
fnmadd.h f19, f21, f6, f29, rtz # perform operation
fnmadd.h f19, f21, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f21, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f21, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f21, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f21, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f21, f6, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f10, 0(x2) # load 0x000058b4 from memory into f10
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f1, 0(x2) # load 0x0000c000 from memory into f1
la x2, scratch
li x3, 0xb139b642277a69e6 # load x3 with value 0xb139b642277a69e6
sw x3, 0(x2) # store 0xb139b642277a69e6 in memory
flh f16, 0(x2) # load 0xb139b642277a69e6 from memory into f16
fnmadd.h f28, f10, f1, f16, dyn # perform operation
fnmadd.h f28, f10, f1, f16, rdn # perform operation
fnmadd.h f28, f10, f1, f16, rmm # perform operation
fnmadd.h f28, f10, f1, f16, rne # perform operation
fnmadd.h f28, f10, f1, f16, rtz # perform operation
fnmadd.h f28, f10, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f10, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f10, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f10, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f10, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f10, f1, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f10, 0(x2) # load 0x00000400 from memory into f10
la x2, scratch
li x3, 0x530cccfce8f44e5 # load x3 with value 0x530cccfce8f44e5
sw x3, 0(x2) # store 0x530cccfce8f44e5 in memory
flh f7, 0(x2) # load 0x530cccfce8f44e5 from memory into f7
fnmadd.h f16, f25, f10, f7, dyn # perform operation
fnmadd.h f16, f25, f10, f7, rdn # perform operation
fnmadd.h f16, f25, f10, f7, rmm # perform operation
fnmadd.h f16, f25, f10, f7, rne # perform operation
fnmadd.h f16, f25, f10, f7, rtz # perform operation
fnmadd.h f16, f25, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f25, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f25, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f25, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f25, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f25, f10, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f19, 0(x2) # load 0x00008400 from memory into f19
la x2, scratch
li x3, 0xe3f9f3b35437fbcd # load x3 with value 0xe3f9f3b35437fbcd
sw x3, 0(x2) # store 0xe3f9f3b35437fbcd in memory
flh f28, 0(x2) # load 0xe3f9f3b35437fbcd from memory into f28
fnmadd.h f25, f29, f19, f28, dyn # perform operation
fnmadd.h f25, f29, f19, f28, rdn # perform operation
fnmadd.h f25, f29, f19, f28, rmm # perform operation
fnmadd.h f25, f29, f19, f28, rne # perform operation
fnmadd.h f25, f29, f19, f28, rtz # perform operation
fnmadd.h f25, f29, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f29, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f29, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f29, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f29, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f29, f19, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f10, 0(x2) # load 0x000058b4 from memory into f10
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f17, 0(x2) # load 0x00007bff from memory into f17
la x2, scratch
li x3, 0xddb5301396756563 # load x3 with value 0xddb5301396756563
sw x3, 0(x2) # store 0xddb5301396756563 in memory
flh f30, 0(x2) # load 0xddb5301396756563 from memory into f30
fnmadd.h f16, f10, f17, f30, dyn # perform operation
fnmadd.h f16, f10, f17, f30, rdn # perform operation
fnmadd.h f16, f10, f17, f30, rmm # perform operation
fnmadd.h f16, f10, f17, f30, rne # perform operation
fnmadd.h f16, f10, f17, f30, rtz # perform operation
fnmadd.h f16, f10, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f10, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f10, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f10, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f10, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f10, f17, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f12, 0(x2) # load 0x000058b4 from memory into f12
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f28, 0(x2) # load 0x0000fbff from memory into f28
la x2, scratch
li x3, 0x9efd912aed29f7bc # load x3 with value 0x9efd912aed29f7bc
sw x3, 0(x2) # store 0x9efd912aed29f7bc in memory
flh f10, 0(x2) # load 0x9efd912aed29f7bc from memory into f10
fnmadd.h f19, f12, f28, f10, dyn # perform operation
fnmadd.h f19, f12, f28, f10, rdn # perform operation
fnmadd.h f19, f12, f28, f10, rmm # perform operation
fnmadd.h f19, f12, f28, f10, rne # perform operation
fnmadd.h f19, f12, f28, f10, rtz # perform operation
fnmadd.h f19, f12, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f12, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f12, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f12, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f12, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f12, f28, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f27, 0(x2) # load 0x000003ff from memory into f27
la x2, scratch
li x3, 0x9c01f0fced9c6a0 # load x3 with value 0x9c01f0fced9c6a0
sw x3, 0(x2) # store 0x9c01f0fced9c6a0 in memory
flh f18, 0(x2) # load 0x9c01f0fced9c6a0 from memory into f18
fnmadd.h f28, f13, f27, f18, dyn # perform operation
fnmadd.h f28, f13, f27, f18, rdn # perform operation
fnmadd.h f28, f13, f27, f18, rmm # perform operation
fnmadd.h f28, f13, f27, f18, rne # perform operation
fnmadd.h f28, f13, f27, f18, rtz # perform operation
fnmadd.h f28, f13, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f13, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f13, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f13, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f13, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f13, f27, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f20, 0(x2) # load 0x000083ff from memory into f20
la x2, scratch
li x3, 0x33ccf4110f5d224a # load x3 with value 0x33ccf4110f5d224a
sw x3, 0(x2) # store 0x33ccf4110f5d224a in memory
flh f15, 0(x2) # load 0x33ccf4110f5d224a from memory into f15
fnmadd.h f28, f25, f20, f15, dyn # perform operation
fnmadd.h f28, f25, f20, f15, rdn # perform operation
fnmadd.h f28, f25, f20, f15, rmm # perform operation
fnmadd.h f28, f25, f20, f15, rne # perform operation
fnmadd.h f28, f25, f20, f15, rtz # perform operation
fnmadd.h f28, f25, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f25, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f25, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f25, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f25, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f25, f20, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f14, 0(x2) # load 0x000058b4 from memory into f14
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
la x2, scratch
li x3, 0xcca91c8bde142efc # load x3 with value 0xcca91c8bde142efc
sw x3, 0(x2) # store 0xcca91c8bde142efc in memory
flh f5, 0(x2) # load 0xcca91c8bde142efc from memory into f5
fnmadd.h f13, f14, f6, f5, dyn # perform operation
fnmadd.h f13, f14, f6, f5, rdn # perform operation
fnmadd.h f13, f14, f6, f5, rmm # perform operation
fnmadd.h f13, f14, f6, f5, rne # perform operation
fnmadd.h f13, f14, f6, f5, rtz # perform operation
fnmadd.h f13, f14, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f14, f6, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f10, 0(x2) # load 0x000058b4 from memory into f10
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f30, 0(x2) # load 0x00008200 from memory into f30
la x2, scratch
li x3, 0x89ff86092e57e3f7 # load x3 with value 0x89ff86092e57e3f7
sw x3, 0(x2) # store 0x89ff86092e57e3f7 in memory
flh f15, 0(x2) # load 0x89ff86092e57e3f7 from memory into f15
fnmadd.h f3, f10, f30, f15, dyn # perform operation
fnmadd.h f3, f10, f30, f15, rdn # perform operation
fnmadd.h f3, f10, f30, f15, rmm # perform operation
fnmadd.h f3, f10, f30, f15, rne # perform operation
fnmadd.h f3, f10, f30, f15, rtz # perform operation
fnmadd.h f3, f10, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f10, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f10, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f10, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f10, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f10, f30, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f28, 0(x2) # load 0x000058b4 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0xda449a9516c7b891 # load x3 with value 0xda449a9516c7b891
sw x3, 0(x2) # store 0xda449a9516c7b891 in memory
flh f1, 0(x2) # load 0xda449a9516c7b891 from memory into f1
fnmadd.h f18, f28, f6, f1, dyn # perform operation
fnmadd.h f18, f28, f6, f1, rdn # perform operation
fnmadd.h f18, f28, f6, f1, rmm # perform operation
fnmadd.h f18, f28, f6, f1, rne # perform operation
fnmadd.h f18, f28, f6, f1, rtz # perform operation
fnmadd.h f18, f28, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f28, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f28, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f28, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f28, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f28, f6, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f11, 0(x2) # load 0x000058b4 from memory into f11
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f25, 0(x2) # load 0x00008001 from memory into f25
la x2, scratch
li x3, 0x9cb018cb1cb83ee8 # load x3 with value 0x9cb018cb1cb83ee8
sw x3, 0(x2) # store 0x9cb018cb1cb83ee8 in memory
flh f22, 0(x2) # load 0x9cb018cb1cb83ee8 from memory into f22
fnmadd.h f13, f11, f25, f22, dyn # perform operation
fnmadd.h f13, f11, f25, f22, rdn # perform operation
fnmadd.h f13, f11, f25, f22, rmm # perform operation
fnmadd.h f13, f11, f25, f22, rne # perform operation
fnmadd.h f13, f11, f25, f22, rtz # perform operation
fnmadd.h f13, f11, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f11, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f11, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f11, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f11, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f11, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f6, 0(x2) # load 0x000058b4 from memory into f6
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f5, 0(x2) # load 0x00007c00 from memory into f5
la x2, scratch
li x3, 0xef6c132df6fb7512 # load x3 with value 0xef6c132df6fb7512
sw x3, 0(x2) # store 0xef6c132df6fb7512 in memory
flh f18, 0(x2) # load 0xef6c132df6fb7512 from memory into f18
fnmadd.h f11, f6, f5, f18, dyn # perform operation
fnmadd.h f11, f6, f5, f18, rdn # perform operation
fnmadd.h f11, f6, f5, f18, rmm # perform operation
fnmadd.h f11, f6, f5, f18, rne # perform operation
fnmadd.h f11, f6, f5, f18, rtz # perform operation
fnmadd.h f11, f6, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f6, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f6, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f6, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f6, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f6, f5, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f10, 0(x2) # load 0x000058b4 from memory into f10
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f14, 0(x2) # load 0x0000fc00 from memory into f14
la x2, scratch
li x3, 0x26b40c3b281c602 # load x3 with value 0x26b40c3b281c602
sw x3, 0(x2) # store 0x26b40c3b281c602 in memory
flh f22, 0(x2) # load 0x26b40c3b281c602 from memory into f22
fnmadd.h f7, f10, f14, f22, dyn # perform operation
fnmadd.h f7, f10, f14, f22, rdn # perform operation
fnmadd.h f7, f10, f14, f22, rmm # perform operation
fnmadd.h f7, f10, f14, f22, rne # perform operation
fnmadd.h f7, f10, f14, f22, rtz # perform operation
fnmadd.h f7, f10, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f10, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f10, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f10, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f10, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f10, f14, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f22, 0(x2) # load 0x000058b4 from memory into f22
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f2, 0(x2) # load 0x00007e00 from memory into f2
la x2, scratch
li x3, 0xc9b589a8b6ebd82e # load x3 with value 0xc9b589a8b6ebd82e
sw x3, 0(x2) # store 0xc9b589a8b6ebd82e in memory
flh f8, 0(x2) # load 0xc9b589a8b6ebd82e from memory into f8
fnmadd.h f19, f22, f2, f8, dyn # perform operation
fnmadd.h f19, f22, f2, f8, rdn # perform operation
fnmadd.h f19, f22, f2, f8, rmm # perform operation
fnmadd.h f19, f22, f2, f8, rne # perform operation
fnmadd.h f19, f22, f2, f8, rtz # perform operation
fnmadd.h f19, f22, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f22, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f22, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f22, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f22, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f22, f2, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f24, 0(x2) # load 0x000058b4 from memory into f24
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f3, 0(x2) # load 0x00007fff from memory into f3
la x2, scratch
li x3, 0x971631b6d3f0b24f # load x3 with value 0x971631b6d3f0b24f
sw x3, 0(x2) # store 0x971631b6d3f0b24f in memory
flh f22, 0(x2) # load 0x971631b6d3f0b24f from memory into f22
fnmadd.h f26, f24, f3, f22, dyn # perform operation
fnmadd.h f26, f24, f3, f22, rdn # perform operation
fnmadd.h f26, f24, f3, f22, rmm # perform operation
fnmadd.h f26, f24, f3, f22, rne # perform operation
fnmadd.h f26, f24, f3, f22, rtz # perform operation
fnmadd.h f26, f24, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f24, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f24, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f24, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f24, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f24, f3, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f22, 0(x2) # load 0x000058b4 from memory into f22
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f3, 0(x2) # load 0x0000fe00 from memory into f3
la x2, scratch
li x3, 0x708e4d90b6886843 # load x3 with value 0x708e4d90b6886843
sw x3, 0(x2) # store 0x708e4d90b6886843 in memory
flh f11, 0(x2) # load 0x708e4d90b6886843 from memory into f11
fnmadd.h f29, f22, f3, f11, dyn # perform operation
fnmadd.h f29, f22, f3, f11, rdn # perform operation
fnmadd.h f29, f22, f3, f11, rmm # perform operation
fnmadd.h f29, f22, f3, f11, rne # perform operation
fnmadd.h f29, f22, f3, f11, rtz # perform operation
fnmadd.h f29, f22, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f22, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f22, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f22, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f22, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f22, f3, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f12, 0(x2) # load 0x000058b4 from memory into f12
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f6, 0(x2) # load 0x00007c01 from memory into f6
la x2, scratch
li x3, 0x7baa563881ccbff7 # load x3 with value 0x7baa563881ccbff7
sw x3, 0(x2) # store 0x7baa563881ccbff7 in memory
flh f21, 0(x2) # load 0x7baa563881ccbff7 from memory into f21
fnmadd.h f7, f12, f6, f21, dyn # perform operation
fnmadd.h f7, f12, f6, f21, rdn # perform operation
fnmadd.h f7, f12, f6, f21, rmm # perform operation
fnmadd.h f7, f12, f6, f21, rne # perform operation
fnmadd.h f7, f12, f6, f21, rtz # perform operation
fnmadd.h f7, f12, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f12, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f12, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f12, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f12, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f12, f6, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f19, 0(x2) # load 0x000058b4 from memory into f19
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f28, 0(x2) # load 0x00007dff from memory into f28
la x2, scratch
li x3, 0x95285b03e6c43f8 # load x3 with value 0x95285b03e6c43f8
sw x3, 0(x2) # store 0x95285b03e6c43f8 in memory
flh f12, 0(x2) # load 0x95285b03e6c43f8 from memory into f12
fnmadd.h f8, f19, f28, f12, dyn # perform operation
fnmadd.h f8, f19, f28, f12, rdn # perform operation
fnmadd.h f8, f19, f28, f12, rmm # perform operation
fnmadd.h f8, f19, f28, f12, rne # perform operation
fnmadd.h f8, f19, f28, f12, rtz # perform operation
fnmadd.h f8, f19, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f19, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f19, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f19, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f19, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f19, f28, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f20, 0(x2) # load 0x000058b4 from memory into f20
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f31, 0(x2) # load 0x0000fc01 from memory into f31
la x2, scratch
li x3, 0xc1603e63144c1481 # load x3 with value 0xc1603e63144c1481
sw x3, 0(x2) # store 0xc1603e63144c1481 in memory
flh f3, 0(x2) # load 0xc1603e63144c1481 from memory into f3
fnmadd.h f25, f20, f31, f3, dyn # perform operation
fnmadd.h f25, f20, f31, f3, rdn # perform operation
fnmadd.h f25, f20, f31, f3, rmm # perform operation
fnmadd.h f25, f20, f31, f3, rne # perform operation
fnmadd.h f25, f20, f31, f3, rtz # perform operation
fnmadd.h f25, f20, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f20, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f20, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f20, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f20, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f20, f31, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f14, 0(x2) # load 0x000058b4 from memory into f14
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f26, 0(x2) # load 0x000058b4 from memory into f26
la x2, scratch
li x3, 0x5a1b66ae4d880a2f # load x3 with value 0x5a1b66ae4d880a2f
sw x3, 0(x2) # store 0x5a1b66ae4d880a2f in memory
flh f24, 0(x2) # load 0x5a1b66ae4d880a2f from memory into f24
fnmadd.h f30, f14, f26, f24, dyn # perform operation
fnmadd.h f30, f14, f26, f24, rdn # perform operation
fnmadd.h f30, f14, f26, f24, rmm # perform operation
fnmadd.h f30, f14, f26, f24, rne # perform operation
fnmadd.h f30, f14, f26, f24, rtz # perform operation
fnmadd.h f30, f14, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f14, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f14, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f14, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f14, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f14, f26, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f31, 0(x2) # load 0x0000c93a from memory into f31
la x2, scratch
li x3, 0x2d4be5b95968be53 # load x3 with value 0x2d4be5b95968be53
sw x3, 0(x2) # store 0x2d4be5b95968be53 in memory
flh f10, 0(x2) # load 0x2d4be5b95968be53 from memory into f10
fnmadd.h f30, f25, f31, f10, dyn # perform operation
fnmadd.h f30, f25, f31, f10, rdn # perform operation
fnmadd.h f30, f25, f31, f10, rmm # perform operation
fnmadd.h f30, f25, f31, f10, rne # perform operation
fnmadd.h f30, f25, f31, f10, rtz # perform operation
fnmadd.h f30, f25, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f25, f31, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f22, 0(x2) # load 0x0000c93a from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x36f8edee4d9c6737 # load x3 with value 0x36f8edee4d9c6737
sw x3, 0(x2) # store 0x36f8edee4d9c6737 in memory
flh f15, 0(x2) # load 0x36f8edee4d9c6737 from memory into f15
fnmadd.h f28, f22, f31, f15, dyn # perform operation
fnmadd.h f28, f22, f31, f15, rdn # perform operation
fnmadd.h f28, f22, f31, f15, rmm # perform operation
fnmadd.h f28, f22, f31, f15, rne # perform operation
fnmadd.h f28, f22, f31, f15, rtz # perform operation
fnmadd.h f28, f22, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f22, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f22, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f22, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f22, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f22, f31, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f11, 0(x2) # load 0x0000c93a from memory into f11
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f23, 0(x2) # load 0x00008000 from memory into f23
la x2, scratch
li x3, 0x3a89dd9a73188872 # load x3 with value 0x3a89dd9a73188872
sw x3, 0(x2) # store 0x3a89dd9a73188872 in memory
flh f28, 0(x2) # load 0x3a89dd9a73188872 from memory into f28
fnmadd.h f9, f11, f23, f28, dyn # perform operation
fnmadd.h f9, f11, f23, f28, rdn # perform operation
fnmadd.h f9, f11, f23, f28, rmm # perform operation
fnmadd.h f9, f11, f23, f28, rne # perform operation
fnmadd.h f9, f11, f23, f28, rtz # perform operation
fnmadd.h f9, f11, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f11, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f21, 0(x2) # load 0x0000c93a from memory into f21
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
la x2, scratch
li x3, 0xca99bd222ef7d567 # load x3 with value 0xca99bd222ef7d567
sw x3, 0(x2) # store 0xca99bd222ef7d567 in memory
flh f2, 0(x2) # load 0xca99bd222ef7d567 from memory into f2
fnmadd.h f30, f21, f16, f2, dyn # perform operation
fnmadd.h f30, f21, f16, f2, rdn # perform operation
fnmadd.h f30, f21, f16, f2, rmm # perform operation
fnmadd.h f30, f21, f16, f2, rne # perform operation
fnmadd.h f30, f21, f16, f2, rtz # perform operation
fnmadd.h f30, f21, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f21, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f21, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f21, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f21, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f21, f16, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f21, 0(x2) # load 0x0000c93a from memory into f21
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f19, 0(x2) # load 0x0000bc00 from memory into f19
la x2, scratch
li x3, 0x6d94d100d4452a05 # load x3 with value 0x6d94d100d4452a05
sw x3, 0(x2) # store 0x6d94d100d4452a05 in memory
flh f12, 0(x2) # load 0x6d94d100d4452a05 from memory into f12
fnmadd.h f28, f21, f19, f12, dyn # perform operation
fnmadd.h f28, f21, f19, f12, rdn # perform operation
fnmadd.h f28, f21, f19, f12, rmm # perform operation
fnmadd.h f28, f21, f19, f12, rne # perform operation
fnmadd.h f28, f21, f19, f12, rtz # perform operation
fnmadd.h f28, f21, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f21, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f21, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f21, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f21, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f21, f19, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f8, 0(x2) # load 0x0000c93a from memory into f8
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f31, 0(x2) # load 0x00003e00 from memory into f31
la x2, scratch
li x3, 0xf28cee094b4580ae # load x3 with value 0xf28cee094b4580ae
sw x3, 0(x2) # store 0xf28cee094b4580ae in memory
flh f28, 0(x2) # load 0xf28cee094b4580ae from memory into f28
fnmadd.h f18, f8, f31, f28, dyn # perform operation
fnmadd.h f18, f8, f31, f28, rdn # perform operation
fnmadd.h f18, f8, f31, f28, rmm # perform operation
fnmadd.h f18, f8, f31, f28, rne # perform operation
fnmadd.h f18, f8, f31, f28, rtz # perform operation
fnmadd.h f18, f8, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f8, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f8, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f8, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f8, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f8, f31, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f22, 0(x2) # load 0x0000c93a from memory into f22
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
la x2, scratch
li x3, 0xa452a14585042975 # load x3 with value 0xa452a14585042975
sw x3, 0(x2) # store 0xa452a14585042975 in memory
flh f13, 0(x2) # load 0xa452a14585042975 from memory into f13
fnmadd.h f11, f22, f1, f13, dyn # perform operation
fnmadd.h f11, f22, f1, f13, rdn # perform operation
fnmadd.h f11, f22, f1, f13, rmm # perform operation
fnmadd.h f11, f22, f1, f13, rne # perform operation
fnmadd.h f11, f22, f1, f13, rtz # perform operation
fnmadd.h f11, f22, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f22, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f22, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f22, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f22, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f22, f1, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f18, 0(x2) # load 0x0000c93a from memory into f18
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f11, 0(x2) # load 0x00004000 from memory into f11
la x2, scratch
li x3, 0x849cd6fae97e515e # load x3 with value 0x849cd6fae97e515e
sw x3, 0(x2) # store 0x849cd6fae97e515e in memory
flh f25, 0(x2) # load 0x849cd6fae97e515e from memory into f25
fnmadd.h f28, f18, f11, f25, dyn # perform operation
fnmadd.h f28, f18, f11, f25, rdn # perform operation
fnmadd.h f28, f18, f11, f25, rmm # perform operation
fnmadd.h f28, f18, f11, f25, rne # perform operation
fnmadd.h f28, f18, f11, f25, rtz # perform operation
fnmadd.h f28, f18, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f18, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f18, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f18, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f18, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f18, f11, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f20, 0(x2) # load 0x0000c93a from memory into f20
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f19, 0(x2) # load 0x0000c000 from memory into f19
la x2, scratch
li x3, 0x74ba4079dc193632 # load x3 with value 0x74ba4079dc193632
sw x3, 0(x2) # store 0x74ba4079dc193632 in memory
flh f13, 0(x2) # load 0x74ba4079dc193632 from memory into f13
fnmadd.h f3, f20, f19, f13, dyn # perform operation
fnmadd.h f3, f20, f19, f13, rdn # perform operation
fnmadd.h f3, f20, f19, f13, rmm # perform operation
fnmadd.h f3, f20, f19, f13, rne # perform operation
fnmadd.h f3, f20, f19, f13, rtz # perform operation
fnmadd.h f3, f20, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f20, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f20, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f20, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f20, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f20, f19, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f17, 0(x2) # load 0x0000c93a from memory into f17
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
la x2, scratch
li x3, 0xc3ced1018bb2b25b # load x3 with value 0xc3ced1018bb2b25b
sw x3, 0(x2) # store 0xc3ced1018bb2b25b in memory
flh f21, 0(x2) # load 0xc3ced1018bb2b25b from memory into f21
fnmadd.h f29, f17, f1, f21, dyn # perform operation
fnmadd.h f29, f17, f1, f21, rdn # perform operation
fnmadd.h f29, f17, f1, f21, rmm # perform operation
fnmadd.h f29, f17, f1, f21, rne # perform operation
fnmadd.h f29, f17, f1, f21, rtz # perform operation
fnmadd.h f29, f17, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f17, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f17, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f17, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f17, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f17, f1, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f25, 0(x2) # load 0x0000c93a from memory into f25
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f21, 0(x2) # load 0x00008400 from memory into f21
la x2, scratch
li x3, 0x3d7697ffa78f74b0 # load x3 with value 0x3d7697ffa78f74b0
sw x3, 0(x2) # store 0x3d7697ffa78f74b0 in memory
flh f29, 0(x2) # load 0x3d7697ffa78f74b0 from memory into f29
fnmadd.h f20, f25, f21, f29, dyn # perform operation
fnmadd.h f20, f25, f21, f29, rdn # perform operation
fnmadd.h f20, f25, f21, f29, rmm # perform operation
fnmadd.h f20, f25, f21, f29, rne # perform operation
fnmadd.h f20, f25, f21, f29, rtz # perform operation
fnmadd.h f20, f25, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f25, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f25, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f25, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f25, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f25, f21, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f9, 0(x2) # load 0x0000c93a from memory into f9
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f3, 0(x2) # load 0x00007bff from memory into f3
la x2, scratch
li x3, 0x24d4b56f43328c3b # load x3 with value 0x24d4b56f43328c3b
sw x3, 0(x2) # store 0x24d4b56f43328c3b in memory
flh f5, 0(x2) # load 0x24d4b56f43328c3b from memory into f5
fnmadd.h f2, f9, f3, f5, dyn # perform operation
fnmadd.h f2, f9, f3, f5, rdn # perform operation
fnmadd.h f2, f9, f3, f5, rmm # perform operation
fnmadd.h f2, f9, f3, f5, rne # perform operation
fnmadd.h f2, f9, f3, f5, rtz # perform operation
fnmadd.h f2, f9, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f9, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f9, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f9, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f9, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f9, f3, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f28, 0(x2) # load 0x0000c93a from memory into f28
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f20, 0(x2) # load 0x0000fbff from memory into f20
la x2, scratch
li x3, 0xdb4122f6cfbb98f5 # load x3 with value 0xdb4122f6cfbb98f5
sw x3, 0(x2) # store 0xdb4122f6cfbb98f5 in memory
flh f15, 0(x2) # load 0xdb4122f6cfbb98f5 from memory into f15
fnmadd.h f3, f28, f20, f15, dyn # perform operation
fnmadd.h f3, f28, f20, f15, rdn # perform operation
fnmadd.h f3, f28, f20, f15, rmm # perform operation
fnmadd.h f3, f28, f20, f15, rne # perform operation
fnmadd.h f3, f28, f20, f15, rtz # perform operation
fnmadd.h f3, f28, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f28, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f28, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f28, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f28, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f28, f20, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f11, 0(x2) # load 0x0000c93a from memory into f11
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f5, 0(x2) # load 0x000003ff from memory into f5
la x2, scratch
li x3, 0x26b39bcde853e8d2 # load x3 with value 0x26b39bcde853e8d2
sw x3, 0(x2) # store 0x26b39bcde853e8d2 in memory
flh f1, 0(x2) # load 0x26b39bcde853e8d2 from memory into f1
fnmadd.h f12, f11, f5, f1, dyn # perform operation
fnmadd.h f12, f11, f5, f1, rdn # perform operation
fnmadd.h f12, f11, f5, f1, rmm # perform operation
fnmadd.h f12, f11, f5, f1, rne # perform operation
fnmadd.h f12, f11, f5, f1, rtz # perform operation
fnmadd.h f12, f11, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f11, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f11, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f11, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f11, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f11, f5, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f21, 0(x2) # load 0x0000c93a from memory into f21
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f12, 0(x2) # load 0x000083ff from memory into f12
la x2, scratch
li x3, 0x8c7165201ebe0622 # load x3 with value 0x8c7165201ebe0622
sw x3, 0(x2) # store 0x8c7165201ebe0622 in memory
flh f25, 0(x2) # load 0x8c7165201ebe0622 from memory into f25
fnmadd.h f18, f21, f12, f25, dyn # perform operation
fnmadd.h f18, f21, f12, f25, rdn # perform operation
fnmadd.h f18, f21, f12, f25, rmm # perform operation
fnmadd.h f18, f21, f12, f25, rne # perform operation
fnmadd.h f18, f21, f12, f25, rtz # perform operation
fnmadd.h f18, f21, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f21, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f21, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f21, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f21, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f21, f12, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f11, 0(x2) # load 0x0000c93a from memory into f11
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f8, 0(x2) # load 0x00000200 from memory into f8
la x2, scratch
li x3, 0xdf2b2a89a538f9a0 # load x3 with value 0xdf2b2a89a538f9a0
sw x3, 0(x2) # store 0xdf2b2a89a538f9a0 in memory
flh f5, 0(x2) # load 0xdf2b2a89a538f9a0 from memory into f5
fnmadd.h f22, f11, f8, f5, dyn # perform operation
fnmadd.h f22, f11, f8, f5, rdn # perform operation
fnmadd.h f22, f11, f8, f5, rmm # perform operation
fnmadd.h f22, f11, f8, f5, rne # perform operation
fnmadd.h f22, f11, f8, f5, rtz # perform operation
fnmadd.h f22, f11, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f11, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f11, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f11, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f11, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f11, f8, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f27, 0(x2) # load 0x0000c93a from memory into f27
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f5, 0(x2) # load 0x00008200 from memory into f5
la x2, scratch
li x3, 0xca13f329453a681a # load x3 with value 0xca13f329453a681a
sw x3, 0(x2) # store 0xca13f329453a681a in memory
flh f6, 0(x2) # load 0xca13f329453a681a from memory into f6
fnmadd.h f3, f27, f5, f6, dyn # perform operation
fnmadd.h f3, f27, f5, f6, rdn # perform operation
fnmadd.h f3, f27, f5, f6, rmm # perform operation
fnmadd.h f3, f27, f5, f6, rne # perform operation
fnmadd.h f3, f27, f5, f6, rtz # perform operation
fnmadd.h f3, f27, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f27, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f27, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f27, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f27, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f27, f5, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f18, 0(x2) # load 0x0000c93a from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0xd19799c1890b94b4 # load x3 with value 0xd19799c1890b94b4
sw x3, 0(x2) # store 0xd19799c1890b94b4 in memory
flh f8, 0(x2) # load 0xd19799c1890b94b4 from memory into f8
fnmadd.h f7, f18, f26, f8, dyn # perform operation
fnmadd.h f7, f18, f26, f8, rdn # perform operation
fnmadd.h f7, f18, f26, f8, rmm # perform operation
fnmadd.h f7, f18, f26, f8, rne # perform operation
fnmadd.h f7, f18, f26, f8, rtz # perform operation
fnmadd.h f7, f18, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f18, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f18, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f18, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f18, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f18, f26, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f19, 0(x2) # load 0x0000c93a from memory into f19
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f8, 0(x2) # load 0x00008001 from memory into f8
la x2, scratch
li x3, 0xc152c5f0b7a7d485 # load x3 with value 0xc152c5f0b7a7d485
sw x3, 0(x2) # store 0xc152c5f0b7a7d485 in memory
flh f5, 0(x2) # load 0xc152c5f0b7a7d485 from memory into f5
fnmadd.h f7, f19, f8, f5, dyn # perform operation
fnmadd.h f7, f19, f8, f5, rdn # perform operation
fnmadd.h f7, f19, f8, f5, rmm # perform operation
fnmadd.h f7, f19, f8, f5, rne # perform operation
fnmadd.h f7, f19, f8, f5, rtz # perform operation
fnmadd.h f7, f19, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f19, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f19, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f19, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f19, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f19, f8, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f28, 0(x2) # load 0x00007c00 from memory into f28
la x2, scratch
li x3, 0x154ea22a3c108f0c # load x3 with value 0x154ea22a3c108f0c
sw x3, 0(x2) # store 0x154ea22a3c108f0c in memory
flh f22, 0(x2) # load 0x154ea22a3c108f0c from memory into f22
fnmadd.h f29, f16, f28, f22, dyn # perform operation
fnmadd.h f29, f16, f28, f22, rdn # perform operation
fnmadd.h f29, f16, f28, f22, rmm # perform operation
fnmadd.h f29, f16, f28, f22, rne # perform operation
fnmadd.h f29, f16, f28, f22, rtz # perform operation
fnmadd.h f29, f16, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f16, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f16, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f16, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f16, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f16, f28, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f21, 0(x2) # load 0x0000c93a from memory into f21
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f28, 0(x2) # load 0x0000fc00 from memory into f28
la x2, scratch
li x3, 0x3200ac9083081e6 # load x3 with value 0x3200ac9083081e6
sw x3, 0(x2) # store 0x3200ac9083081e6 in memory
flh f8, 0(x2) # load 0x3200ac9083081e6 from memory into f8
fnmadd.h f22, f21, f28, f8, dyn # perform operation
fnmadd.h f22, f21, f28, f8, rdn # perform operation
fnmadd.h f22, f21, f28, f8, rmm # perform operation
fnmadd.h f22, f21, f28, f8, rne # perform operation
fnmadd.h f22, f21, f28, f8, rtz # perform operation
fnmadd.h f22, f21, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f21, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f21, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f21, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f21, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f21, f28, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f20, 0(x2) # load 0x0000c93a from memory into f20
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f23, 0(x2) # load 0x00007e00 from memory into f23
la x2, scratch
li x3, 0x4bfca3e6429b51b7 # load x3 with value 0x4bfca3e6429b51b7
sw x3, 0(x2) # store 0x4bfca3e6429b51b7 in memory
flh f29, 0(x2) # load 0x4bfca3e6429b51b7 from memory into f29
fnmadd.h f6, f20, f23, f29, dyn # perform operation
fnmadd.h f6, f20, f23, f29, rdn # perform operation
fnmadd.h f6, f20, f23, f29, rmm # perform operation
fnmadd.h f6, f20, f23, f29, rne # perform operation
fnmadd.h f6, f20, f23, f29, rtz # perform operation
fnmadd.h f6, f20, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f20, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f20, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f20, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f20, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f20, f23, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f10, 0(x2) # load 0x0000c93a from memory into f10
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f26, 0(x2) # load 0x00007fff from memory into f26
la x2, scratch
li x3, 0xc1597ca217fb2ebc # load x3 with value 0xc1597ca217fb2ebc
sw x3, 0(x2) # store 0xc1597ca217fb2ebc in memory
flh f30, 0(x2) # load 0xc1597ca217fb2ebc from memory into f30
fnmadd.h f28, f10, f26, f30, dyn # perform operation
fnmadd.h f28, f10, f26, f30, rdn # perform operation
fnmadd.h f28, f10, f26, f30, rmm # perform operation
fnmadd.h f28, f10, f26, f30, rne # perform operation
fnmadd.h f28, f10, f26, f30, rtz # perform operation
fnmadd.h f28, f10, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f10, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f10, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f10, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f10, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f10, f26, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f5, 0(x2) # load 0x0000c93a from memory into f5
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f10, 0(x2) # load 0x0000fe00 from memory into f10
la x2, scratch
li x3, 0x497caf15f99724f7 # load x3 with value 0x497caf15f99724f7
sw x3, 0(x2) # store 0x497caf15f99724f7 in memory
flh f8, 0(x2) # load 0x497caf15f99724f7 from memory into f8
fnmadd.h f22, f5, f10, f8, dyn # perform operation
fnmadd.h f22, f5, f10, f8, rdn # perform operation
fnmadd.h f22, f5, f10, f8, rmm # perform operation
fnmadd.h f22, f5, f10, f8, rne # perform operation
fnmadd.h f22, f5, f10, f8, rtz # perform operation
fnmadd.h f22, f5, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f5, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f5, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f5, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f5, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f5, f10, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f20, 0(x2) # load 0x0000c93a from memory into f20
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f9, 0(x2) # load 0x00007c01 from memory into f9
la x2, scratch
li x3, 0xa4f8bf62b5c9ccef # load x3 with value 0xa4f8bf62b5c9ccef
sw x3, 0(x2) # store 0xa4f8bf62b5c9ccef in memory
flh f28, 0(x2) # load 0xa4f8bf62b5c9ccef from memory into f28
fnmadd.h f12, f20, f9, f28, dyn # perform operation
fnmadd.h f12, f20, f9, f28, rdn # perform operation
fnmadd.h f12, f20, f9, f28, rmm # perform operation
fnmadd.h f12, f20, f9, f28, rne # perform operation
fnmadd.h f12, f20, f9, f28, rtz # perform operation
fnmadd.h f12, f20, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f20, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f20, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f20, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f20, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f20, f9, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f17, 0(x2) # load 0x0000c93a from memory into f17
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f5, 0(x2) # load 0x00007dff from memory into f5
la x2, scratch
li x3, 0x59c1bbfdaa3b3a0c # load x3 with value 0x59c1bbfdaa3b3a0c
sw x3, 0(x2) # store 0x59c1bbfdaa3b3a0c in memory
flh f24, 0(x2) # load 0x59c1bbfdaa3b3a0c from memory into f24
fnmadd.h f3, f17, f5, f24, dyn # perform operation
fnmadd.h f3, f17, f5, f24, rdn # perform operation
fnmadd.h f3, f17, f5, f24, rmm # perform operation
fnmadd.h f3, f17, f5, f24, rne # perform operation
fnmadd.h f3, f17, f5, f24, rtz # perform operation
fnmadd.h f3, f17, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f17, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f17, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f17, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f17, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f17, f5, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f2, 0(x2) # load 0x0000c93a from memory into f2
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f26, 0(x2) # load 0x0000fc01 from memory into f26
la x2, scratch
li x3, 0x731b5a38d7769523 # load x3 with value 0x731b5a38d7769523
sw x3, 0(x2) # store 0x731b5a38d7769523 in memory
flh f10, 0(x2) # load 0x731b5a38d7769523 from memory into f10
fnmadd.h f28, f2, f26, f10, dyn # perform operation
fnmadd.h f28, f2, f26, f10, rdn # perform operation
fnmadd.h f28, f2, f26, f10, rmm # perform operation
fnmadd.h f28, f2, f26, f10, rne # perform operation
fnmadd.h f28, f2, f26, f10, rtz # perform operation
fnmadd.h f28, f2, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f2, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f2, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f2, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f2, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f2, f26, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f11, 0(x2) # load 0x0000c93a from memory into f11
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f17, 0(x2) # load 0x000058b4 from memory into f17
la x2, scratch
li x3, 0xbd429835a60487d3 # load x3 with value 0xbd429835a60487d3
sw x3, 0(x2) # store 0xbd429835a60487d3 in memory
flh f1, 0(x2) # load 0xbd429835a60487d3 from memory into f1
fnmadd.h f7, f11, f17, f1, dyn # perform operation
fnmadd.h f7, f11, f17, f1, rdn # perform operation
fnmadd.h f7, f11, f17, f1, rmm # perform operation
fnmadd.h f7, f11, f17, f1, rne # perform operation
fnmadd.h f7, f11, f17, f1, rtz # perform operation
fnmadd.h f7, f11, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f11, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f11, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f11, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f11, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f11, f17, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f31, 0(x2) # load 0x0000c93a from memory into f31
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f7, 0(x2) # load 0x0000c93a from memory into f7
la x2, scratch
li x3, 0x8d2905a8aa4945ab # load x3 with value 0x8d2905a8aa4945ab
sw x3, 0(x2) # store 0x8d2905a8aa4945ab in memory
flh f2, 0(x2) # load 0x8d2905a8aa4945ab from memory into f2
fnmadd.h f29, f31, f7, f2, dyn # perform operation
fnmadd.h f29, f31, f7, f2, rdn # perform operation
fnmadd.h f29, f31, f7, f2, rmm # perform operation
fnmadd.h f29, f31, f7, f2, rne # perform operation
fnmadd.h f29, f31, f7, f2, rtz # perform operation
fnmadd.h f29, f31, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f31, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f31, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f31, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f31, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f31, f7, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0xc551533114ba1f2d # load x3 with value 0xc551533114ba1f2d
sw x3, 0(x2) # store 0xc551533114ba1f2d in memory
flh f13, 0(x2) # load 0xc551533114ba1f2d from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f28, 0(x2) # load 0x00000000 from memory into f28
fnmadd.h f16, f21, f13, f28, dyn # perform operation
fnmadd.h f16, f21, f13, f28, rdn # perform operation
fnmadd.h f16, f21, f13, f28, rmm # perform operation
fnmadd.h f16, f21, f13, f28, rne # perform operation
fnmadd.h f16, f21, f13, f28, rtz # perform operation
fnmadd.h f16, f21, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f21, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f21, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f21, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f21, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f21, f13, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x3c9b1cc9d739d6f2 # load x3 with value 0x3c9b1cc9d739d6f2
sw x3, 0(x2) # store 0x3c9b1cc9d739d6f2 in memory
flh f16, 0(x2) # load 0x3c9b1cc9d739d6f2 from memory into f16
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f26, 0(x2) # load 0x00008000 from memory into f26
fnmadd.h f5, f12, f16, f26, dyn # perform operation
fnmadd.h f5, f12, f16, f26, rdn # perform operation
fnmadd.h f5, f12, f16, f26, rmm # perform operation
fnmadd.h f5, f12, f16, f26, rne # perform operation
fnmadd.h f5, f12, f16, f26, rtz # perform operation
fnmadd.h f5, f12, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f12, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f12, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f12, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f12, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f12, f16, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x83364e1722a939ea # load x3 with value 0x83364e1722a939ea
sw x3, 0(x2) # store 0x83364e1722a939ea in memory
flh f6, 0(x2) # load 0x83364e1722a939ea from memory into f6
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f22, 0(x2) # load 0x00003c00 from memory into f22
fnmadd.h f30, f12, f6, f22, dyn # perform operation
fnmadd.h f30, f12, f6, f22, rdn # perform operation
fnmadd.h f30, f12, f6, f22, rmm # perform operation
fnmadd.h f30, f12, f6, f22, rne # perform operation
fnmadd.h f30, f12, f6, f22, rtz # perform operation
fnmadd.h f30, f12, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f12, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f12, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f12, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f12, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f12, f6, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x3b5b4ab1a0dc03b9 # load x3 with value 0x3b5b4ab1a0dc03b9
sw x3, 0(x2) # store 0x3b5b4ab1a0dc03b9 in memory
flh f25, 0(x2) # load 0x3b5b4ab1a0dc03b9 from memory into f25
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f18, 0(x2) # load 0x0000bc00 from memory into f18
fnmadd.h f27, f31, f25, f18, dyn # perform operation
fnmadd.h f27, f31, f25, f18, rdn # perform operation
fnmadd.h f27, f31, f25, f18, rmm # perform operation
fnmadd.h f27, f31, f25, f18, rne # perform operation
fnmadd.h f27, f31, f25, f18, rtz # perform operation
fnmadd.h f27, f31, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f31, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f31, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f31, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f31, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f31, f25, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x703284a509a7414 # load x3 with value 0x703284a509a7414
sw x3, 0(x2) # store 0x703284a509a7414 in memory
flh f26, 0(x2) # load 0x703284a509a7414 from memory into f26
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f3, 0(x2) # load 0x00003e00 from memory into f3
fnmadd.h f23, f16, f26, f3, dyn # perform operation
fnmadd.h f23, f16, f26, f3, rdn # perform operation
fnmadd.h f23, f16, f26, f3, rmm # perform operation
fnmadd.h f23, f16, f26, f3, rne # perform operation
fnmadd.h f23, f16, f26, f3, rtz # perform operation
fnmadd.h f23, f16, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f16, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f16, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f16, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f16, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f16, f26, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x62ace0077a2f11c6 # load x3 with value 0x62ace0077a2f11c6
sw x3, 0(x2) # store 0x62ace0077a2f11c6 in memory
flh f20, 0(x2) # load 0x62ace0077a2f11c6 from memory into f20
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f28, 0(x2) # load 0x0000be00 from memory into f28
fnmadd.h f18, f22, f20, f28, dyn # perform operation
fnmadd.h f18, f22, f20, f28, rdn # perform operation
fnmadd.h f18, f22, f20, f28, rmm # perform operation
fnmadd.h f18, f22, f20, f28, rne # perform operation
fnmadd.h f18, f22, f20, f28, rtz # perform operation
fnmadd.h f18, f22, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f22, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f22, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f22, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f22, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f22, f20, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x4000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0x4de5594a64da9044 # load x3 with value 0x4de5594a64da9044
sw x3, 0(x2) # store 0x4de5594a64da9044 in memory
flh f12, 0(x2) # load 0x4de5594a64da9044 from memory into f12
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f1, 0(x2) # load 0x00004000 from memory into f1
fnmadd.h f13, f19, f12, f1, dyn # perform operation
fnmadd.h f13, f19, f12, f1, rdn # perform operation
fnmadd.h f13, f19, f12, f1, rmm # perform operation
fnmadd.h f13, f19, f12, f1, rne # perform operation
fnmadd.h f13, f19, f12, f1, rtz # perform operation
fnmadd.h f13, f19, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f19, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f19, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f19, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f19, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f19, f12, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x5c5ea1e677077765 # load x3 with value 0x5c5ea1e677077765
sw x3, 0(x2) # store 0x5c5ea1e677077765 in memory
flh f10, 0(x2) # load 0x5c5ea1e677077765 from memory into f10
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f23, 0(x2) # load 0x0000c000 from memory into f23
fnmadd.h f11, f5, f10, f23, dyn # perform operation
fnmadd.h f11, f5, f10, f23, rdn # perform operation
fnmadd.h f11, f5, f10, f23, rmm # perform operation
fnmadd.h f11, f5, f10, f23, rne # perform operation
fnmadd.h f11, f5, f10, f23, rtz # perform operation
fnmadd.h f11, f5, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f5, f10, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0xe6843601a0d135b # load x3 with value 0xe6843601a0d135b
sw x3, 0(x2) # store 0xe6843601a0d135b in memory
flh f9, 0(x2) # load 0xe6843601a0d135b from memory into f9
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f13, 0(x2) # load 0x00000400 from memory into f13
fnmadd.h f15, f25, f9, f13, dyn # perform operation
fnmadd.h f15, f25, f9, f13, rdn # perform operation
fnmadd.h f15, f25, f9, f13, rmm # perform operation
fnmadd.h f15, f25, f9, f13, rne # perform operation
fnmadd.h f15, f25, f9, f13, rtz # perform operation
fnmadd.h f15, f25, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f25, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f25, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f25, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f25, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f25, f9, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8400)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0xe91dca4243c5ba47 # load x3 with value 0xe91dca4243c5ba47
sw x3, 0(x2) # store 0xe91dca4243c5ba47 in memory
flh f14, 0(x2) # load 0xe91dca4243c5ba47 from memory into f14
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f6, 0(x2) # load 0x00008400 from memory into f6
fnmadd.h f22, f10, f14, f6, dyn # perform operation
fnmadd.h f22, f10, f14, f6, rdn # perform operation
fnmadd.h f22, f10, f14, f6, rmm # perform operation
fnmadd.h f22, f10, f14, f6, rne # perform operation
fnmadd.h f22, f10, f14, f6, rtz # perform operation
fnmadd.h f22, f10, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f10, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f10, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f10, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f10, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f10, f14, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0x945d04becee56a27 # load x3 with value 0x945d04becee56a27
sw x3, 0(x2) # store 0x945d04becee56a27 in memory
flh f7, 0(x2) # load 0x945d04becee56a27 from memory into f7
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f12, 0(x2) # load 0x00007bff from memory into f12
fnmadd.h f1, f24, f7, f12, dyn # perform operation
fnmadd.h f1, f24, f7, f12, rdn # perform operation
fnmadd.h f1, f24, f7, f12, rmm # perform operation
fnmadd.h f1, f24, f7, f12, rne # perform operation
fnmadd.h f1, f24, f7, f12, rtz # perform operation
fnmadd.h f1, f24, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f24, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f24, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f24, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f24, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f24, f7, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0x6b574ac3308b430d # load x3 with value 0x6b574ac3308b430d
sw x3, 0(x2) # store 0x6b574ac3308b430d in memory
flh f5, 0(x2) # load 0x6b574ac3308b430d from memory into f5
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f12, 0(x2) # load 0x0000fbff from memory into f12
fnmadd.h f11, f14, f5, f12, dyn # perform operation
fnmadd.h f11, f14, f5, f12, rdn # perform operation
fnmadd.h f11, f14, f5, f12, rmm # perform operation
fnmadd.h f11, f14, f5, f12, rne # perform operation
fnmadd.h f11, f14, f5, f12, rtz # perform operation
fnmadd.h f11, f14, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f14, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f14, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f14, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f14, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f14, f5, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x1443a13b4dd39e63 # load x3 with value 0x1443a13b4dd39e63
sw x3, 0(x2) # store 0x1443a13b4dd39e63 in memory
flh f22, 0(x2) # load 0x1443a13b4dd39e63 from memory into f22
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f5, 0(x2) # load 0x000003ff from memory into f5
fnmadd.h f9, f8, f22, f5, dyn # perform operation
fnmadd.h f9, f8, f22, f5, rdn # perform operation
fnmadd.h f9, f8, f22, f5, rmm # perform operation
fnmadd.h f9, f8, f22, f5, rne # perform operation
fnmadd.h f9, f8, f22, f5, rtz # perform operation
fnmadd.h f9, f8, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f8, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f8, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f8, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f8, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f8, f22, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0x3c0845208a8e1965 # load x3 with value 0x3c0845208a8e1965
sw x3, 0(x2) # store 0x3c0845208a8e1965 in memory
flh f21, 0(x2) # load 0x3c0845208a8e1965 from memory into f21
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f22, 0(x2) # load 0x000083ff from memory into f22
fnmadd.h f3, f13, f21, f22, dyn # perform operation
fnmadd.h f3, f13, f21, f22, rdn # perform operation
fnmadd.h f3, f13, f21, f22, rmm # perform operation
fnmadd.h f3, f13, f21, f22, rne # perform operation
fnmadd.h f3, f13, f21, f22, rtz # perform operation
fnmadd.h f3, f13, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f13, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f13, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f13, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f13, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f13, f21, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x200)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x9b106fd900e670f1 # load x3 with value 0x9b106fd900e670f1
sw x3, 0(x2) # store 0x9b106fd900e670f1 in memory
flh f16, 0(x2) # load 0x9b106fd900e670f1 from memory into f16
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f28, 0(x2) # load 0x00000200 from memory into f28
fnmadd.h f29, f5, f16, f28, dyn # perform operation
fnmadd.h f29, f5, f16, f28, rdn # perform operation
fnmadd.h f29, f5, f16, f28, rmm # perform operation
fnmadd.h f29, f5, f16, f28, rne # perform operation
fnmadd.h f29, f5, f16, f28, rtz # perform operation
fnmadd.h f29, f5, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f5, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f5, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f5, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f5, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f5, f16, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8200)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0xd80e0bffe5ba769d # load x3 with value 0xd80e0bffe5ba769d
sw x3, 0(x2) # store 0xd80e0bffe5ba769d in memory
flh f2, 0(x2) # load 0xd80e0bffe5ba769d from memory into f2
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f30, 0(x2) # load 0x00008200 from memory into f30
fnmadd.h f28, f17, f2, f30, dyn # perform operation
fnmadd.h f28, f17, f2, f30, rdn # perform operation
fnmadd.h f28, f17, f2, f30, rmm # perform operation
fnmadd.h f28, f17, f2, f30, rne # perform operation
fnmadd.h f28, f17, f2, f30, rtz # perform operation
fnmadd.h f28, f17, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f17, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f17, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f17, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f17, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f17, f2, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0x695354ac419ce43b # load x3 with value 0x695354ac419ce43b
sw x3, 0(x2) # store 0x695354ac419ce43b in memory
flh f12, 0(x2) # load 0x695354ac419ce43b from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
fnmadd.h f23, f20, f12, f15, dyn # perform operation
fnmadd.h f23, f20, f12, f15, rdn # perform operation
fnmadd.h f23, f20, f12, f15, rmm # perform operation
fnmadd.h f23, f20, f12, f15, rne # perform operation
fnmadd.h f23, f20, f12, f15, rtz # perform operation
fnmadd.h f23, f20, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f20, f12, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8001)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0xeb388848544290ac # load x3 with value 0xeb388848544290ac
sw x3, 0(x2) # store 0xeb388848544290ac in memory
flh f25, 0(x2) # load 0xeb388848544290ac from memory into f25
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f28, 0(x2) # load 0x00008001 from memory into f28
fnmadd.h f6, f11, f25, f28, dyn # perform operation
fnmadd.h f6, f11, f25, f28, rdn # perform operation
fnmadd.h f6, f11, f25, f28, rmm # perform operation
fnmadd.h f6, f11, f25, f28, rne # perform operation
fnmadd.h f6, f11, f25, f28, rtz # perform operation
fnmadd.h f6, f11, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f11, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f11, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f11, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f11, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f11, f25, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x7b6927d6cbce849c # load x3 with value 0x7b6927d6cbce849c
sw x3, 0(x2) # store 0x7b6927d6cbce849c in memory
flh f14, 0(x2) # load 0x7b6927d6cbce849c from memory into f14
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f21, 0(x2) # load 0x00007c00 from memory into f21
fnmadd.h f22, f17, f14, f21, dyn # perform operation
fnmadd.h f22, f17, f14, f21, rdn # perform operation
fnmadd.h f22, f17, f14, f21, rmm # perform operation
fnmadd.h f22, f17, f14, f21, rne # perform operation
fnmadd.h f22, f17, f14, f21, rtz # perform operation
fnmadd.h f22, f17, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f17, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f17, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f17, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f17, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f17, f14, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0xea290f97edaad18e # load x3 with value 0xea290f97edaad18e
sw x3, 0(x2) # store 0xea290f97edaad18e in memory
flh f29, 0(x2) # load 0xea290f97edaad18e from memory into f29
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f12, 0(x2) # load 0x0000fc00 from memory into f12
fnmadd.h f2, f10, f29, f12, dyn # perform operation
fnmadd.h f2, f10, f29, f12, rdn # perform operation
fnmadd.h f2, f10, f29, f12, rmm # perform operation
fnmadd.h f2, f10, f29, f12, rne # perform operation
fnmadd.h f2, f10, f29, f12, rtz # perform operation
fnmadd.h f2, f10, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f10, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f10, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f10, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f10, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f10, f29, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0x13d60a3e5b53ec3f # load x3 with value 0x13d60a3e5b53ec3f
sw x3, 0(x2) # store 0x13d60a3e5b53ec3f in memory
flh f25, 0(x2) # load 0x13d60a3e5b53ec3f from memory into f25
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f27, 0(x2) # load 0x00007e00 from memory into f27
fnmadd.h f21, f19, f25, f27, dyn # perform operation
fnmadd.h f21, f19, f25, f27, rdn # perform operation
fnmadd.h f21, f19, f25, f27, rmm # perform operation
fnmadd.h f21, f19, f25, f27, rne # perform operation
fnmadd.h f21, f19, f25, f27, rtz # perform operation
fnmadd.h f21, f19, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f19, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f19, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f19, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f19, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f19, f25, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0x3aea2a3c7ce2d5cc # load x3 with value 0x3aea2a3c7ce2d5cc
sw x3, 0(x2) # store 0x3aea2a3c7ce2d5cc in memory
flh f7, 0(x2) # load 0x3aea2a3c7ce2d5cc from memory into f7
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
fnmadd.h f29, f18, f7, f23, dyn # perform operation
fnmadd.h f29, f18, f7, f23, rdn # perform operation
fnmadd.h f29, f18, f7, f23, rmm # perform operation
fnmadd.h f29, f18, f7, f23, rne # perform operation
fnmadd.h f29, f18, f7, f23, rtz # perform operation
fnmadd.h f29, f18, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f18, f7, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0xdb85fcf8a0d2e6b # load x3 with value 0xdb85fcf8a0d2e6b
sw x3, 0(x2) # store 0xdb85fcf8a0d2e6b in memory
flh f21, 0(x2) # load 0xdb85fcf8a0d2e6b from memory into f21
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f17, 0(x2) # load 0x0000fe00 from memory into f17
fnmadd.h f16, f23, f21, f17, dyn # perform operation
fnmadd.h f16, f23, f21, f17, rdn # perform operation
fnmadd.h f16, f23, f21, f17, rmm # perform operation
fnmadd.h f16, f23, f21, f17, rne # perform operation
fnmadd.h f16, f23, f21, f17, rtz # perform operation
fnmadd.h f16, f23, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f23, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f23, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f23, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f23, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f23, f21, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0xc74e0174028249d0 # load x3 with value 0xc74e0174028249d0
sw x3, 0(x2) # store 0xc74e0174028249d0 in memory
flh f20, 0(x2) # load 0xc74e0174028249d0 from memory into f20
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f5, 0(x2) # load 0x00007c01 from memory into f5
fnmadd.h f12, f3, f20, f5, dyn # perform operation
fnmadd.h f12, f3, f20, f5, rdn # perform operation
fnmadd.h f12, f3, f20, f5, rmm # perform operation
fnmadd.h f12, f3, f20, f5, rne # perform operation
fnmadd.h f12, f3, f20, f5, rtz # perform operation
fnmadd.h f12, f3, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f3, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f3, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f3, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f3, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f3, f20, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0xcde90277aa70090b # load x3 with value 0xcde90277aa70090b
sw x3, 0(x2) # store 0xcde90277aa70090b in memory
flh f14, 0(x2) # load 0xcde90277aa70090b from memory into f14
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f19, 0(x2) # load 0x00007dff from memory into f19
fnmadd.h f15, f3, f14, f19, dyn # perform operation
fnmadd.h f15, f3, f14, f19, rdn # perform operation
fnmadd.h f15, f3, f14, f19, rmm # perform operation
fnmadd.h f15, f3, f14, f19, rne # perform operation
fnmadd.h f15, f3, f14, f19, rtz # perform operation
fnmadd.h f15, f3, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f3, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f3, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f3, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f3, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f3, f14, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x28aa2d9e9481bf4e # load x3 with value 0x28aa2d9e9481bf4e
sw x3, 0(x2) # store 0x28aa2d9e9481bf4e in memory
flh f28, 0(x2) # load 0x28aa2d9e9481bf4e from memory into f28
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f13, 0(x2) # load 0x0000fc01 from memory into f13
fnmadd.h f17, f26, f28, f13, dyn # perform operation
fnmadd.h f17, f26, f28, f13, rdn # perform operation
fnmadd.h f17, f26, f28, f13, rmm # perform operation
fnmadd.h f17, f26, f28, f13, rne # perform operation
fnmadd.h f17, f26, f28, f13, rtz # perform operation
fnmadd.h f17, f26, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f26, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f26, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f26, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f26, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f26, f28, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0xad74469e47f00c3e # load x3 with value 0xad74469e47f00c3e
sw x3, 0(x2) # store 0xad74469e47f00c3e in memory
flh f30, 0(x2) # load 0xad74469e47f00c3e from memory into f30
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f2, 0(x2) # load 0x000058b4 from memory into f2
fnmadd.h f25, f31, f30, f2, dyn # perform operation
fnmadd.h f25, f31, f30, f2, rdn # perform operation
fnmadd.h f25, f31, f30, f2, rmm # perform operation
fnmadd.h f25, f31, f30, f2, rne # perform operation
fnmadd.h f25, f31, f30, f2, rtz # perform operation
fnmadd.h f25, f31, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f31, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f31, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f31, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f31, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f31, f30, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0xf86b6a3bfc1105bd # load x3 with value 0xf86b6a3bfc1105bd
sw x3, 0(x2) # store 0xf86b6a3bfc1105bd in memory
flh f29, 0(x2) # load 0xf86b6a3bfc1105bd from memory into f29
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f18, 0(x2) # load 0x0000c93a from memory into f18
fnmadd.h f26, f23, f29, f18, dyn # perform operation
fnmadd.h f26, f23, f29, f18, rdn # perform operation
fnmadd.h f26, f23, f29, f18, rmm # perform operation
fnmadd.h f26, f23, f29, f18, rne # perform operation
fnmadd.h f26, f23, f29, f18, rtz # perform operation
fnmadd.h f26, f23, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f23, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f23, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f23, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f23, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f23, f29, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x0)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f28, 0(x2) # load 0x00008000 from memory into f28
la x2, scratch
li x3, 0xca733c90cc537903 # load x3 with value 0xca733c90cc537903
sw x3, 0(x2) # store 0xca733c90cc537903 in memory
flh f20, 0(x2) # load 0xca733c90cc537903 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f3, 0(x2) # load 0x00000000 from memory into f3
fnmadd.h f30, f28, f20, f3, dyn # perform operation
fnmadd.h f30, f28, f20, f3, rdn # perform operation
fnmadd.h f30, f28, f20, f3, rmm # perform operation
fnmadd.h f30, f28, f20, f3, rne # perform operation
fnmadd.h f30, f28, f20, f3, rtz # perform operation
fnmadd.h f30, f28, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f28, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f28, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f28, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f28, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f28, f20, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x8000)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f23, 0(x2) # load 0x00008000 from memory into f23
la x2, scratch
li x3, 0x48281ff761e08f28 # load x3 with value 0x48281ff761e08f28
sw x3, 0(x2) # store 0x48281ff761e08f28 in memory
flh f1, 0(x2) # load 0x48281ff761e08f28 from memory into f1
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f17, 0(x2) # load 0x00008000 from memory into f17
fnmadd.h f16, f23, f1, f17, dyn # perform operation
fnmadd.h f16, f23, f1, f17, rdn # perform operation
fnmadd.h f16, f23, f1, f17, rmm # perform operation
fnmadd.h f16, f23, f1, f17, rne # perform operation
fnmadd.h f16, f23, f1, f17, rtz # perform operation
fnmadd.h f16, f23, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f23, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f23, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f23, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f23, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f23, f1, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f31, 0(x2) # load 0x00008000 from memory into f31
la x2, scratch
li x3, 0x674faaf3f4c77790 # load x3 with value 0x674faaf3f4c77790
sw x3, 0(x2) # store 0x674faaf3f4c77790 in memory
flh f14, 0(x2) # load 0x674faaf3f4c77790 from memory into f14
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f13, 0(x2) # load 0x00003c00 from memory into f13
fnmadd.h f30, f31, f14, f13, dyn # perform operation
fnmadd.h f30, f31, f14, f13, rdn # perform operation
fnmadd.h f30, f31, f14, f13, rmm # perform operation
fnmadd.h f30, f31, f14, f13, rne # perform operation
fnmadd.h f30, f31, f14, f13, rtz # perform operation
fnmadd.h f30, f31, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f31, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f31, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f31, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f31, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f31, f14, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f25, 0(x2) # load 0x00008000 from memory into f25
la x2, scratch
li x3, 0x25a8c1f66683a56f # load x3 with value 0x25a8c1f66683a56f
sw x3, 0(x2) # store 0x25a8c1f66683a56f in memory
flh f12, 0(x2) # load 0x25a8c1f66683a56f from memory into f12
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f26, 0(x2) # load 0x0000bc00 from memory into f26
fnmadd.h f13, f25, f12, f26, dyn # perform operation
fnmadd.h f13, f25, f12, f26, rdn # perform operation
fnmadd.h f13, f25, f12, f26, rmm # perform operation
fnmadd.h f13, f25, f12, f26, rne # perform operation
fnmadd.h f13, f25, f12, f26, rtz # perform operation
fnmadd.h f13, f25, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f25, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f25, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f25, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f25, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f25, f12, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f9, 0(x2) # load 0x00008000 from memory into f9
la x2, scratch
li x3, 0xc093f6ceda203bd3 # load x3 with value 0xc093f6ceda203bd3
sw x3, 0(x2) # store 0xc093f6ceda203bd3 in memory
flh f2, 0(x2) # load 0xc093f6ceda203bd3 from memory into f2
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f26, 0(x2) # load 0x00003e00 from memory into f26
fnmadd.h f30, f9, f2, f26, dyn # perform operation
fnmadd.h f30, f9, f2, f26, rdn # perform operation
fnmadd.h f30, f9, f2, f26, rmm # perform operation
fnmadd.h f30, f9, f2, f26, rne # perform operation
fnmadd.h f30, f9, f2, f26, rtz # perform operation
fnmadd.h f30, f9, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f9, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f9, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f9, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f9, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f9, f2, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f16, 0(x2) # load 0x00008000 from memory into f16
la x2, scratch
li x3, 0xabd4925ccaca0a94 # load x3 with value 0xabd4925ccaca0a94
sw x3, 0(x2) # store 0xabd4925ccaca0a94 in memory
flh f21, 0(x2) # load 0xabd4925ccaca0a94 from memory into f21
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
fnmadd.h f31, f16, f21, f23, dyn # perform operation
fnmadd.h f31, f16, f21, f23, rdn # perform operation
fnmadd.h f31, f16, f21, f23, rmm # perform operation
fnmadd.h f31, f16, f21, f23, rne # perform operation
fnmadd.h f31, f16, f21, f23, rtz # perform operation
fnmadd.h f31, f16, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f16, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f16, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f16, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f16, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f16, f21, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x4000)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f30, 0(x2) # load 0x00008000 from memory into f30
la x2, scratch
li x3, 0x90eec6992c288cf6 # load x3 with value 0x90eec6992c288cf6
sw x3, 0(x2) # store 0x90eec6992c288cf6 in memory
flh f25, 0(x2) # load 0x90eec6992c288cf6 from memory into f25
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f1, 0(x2) # load 0x00004000 from memory into f1
fnmadd.h f13, f30, f25, f1, dyn # perform operation
fnmadd.h f13, f30, f25, f1, rdn # perform operation
fnmadd.h f13, f30, f25, f1, rmm # perform operation
fnmadd.h f13, f30, f25, f1, rne # perform operation
fnmadd.h f13, f30, f25, f1, rtz # perform operation
fnmadd.h f13, f30, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f30, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f30, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f30, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f30, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f30, f25, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xc000)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f24, 0(x2) # load 0x00008000 from memory into f24
la x2, scratch
li x3, 0xf1aa10de2188b7ae # load x3 with value 0xf1aa10de2188b7ae
sw x3, 0(x2) # store 0xf1aa10de2188b7ae in memory
flh f13, 0(x2) # load 0xf1aa10de2188b7ae from memory into f13
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f25, 0(x2) # load 0x0000c000 from memory into f25
fnmadd.h f9, f24, f13, f25, dyn # perform operation
fnmadd.h f9, f24, f13, f25, rdn # perform operation
fnmadd.h f9, f24, f13, f25, rmm # perform operation
fnmadd.h f9, f24, f13, f25, rne # perform operation
fnmadd.h f9, f24, f13, f25, rtz # perform operation
fnmadd.h f9, f24, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f24, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f24, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f24, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f24, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f24, f13, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x400)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f8, 0(x2) # load 0x00008000 from memory into f8
la x2, scratch
li x3, 0xdf96b3bb0088bf54 # load x3 with value 0xdf96b3bb0088bf54
sw x3, 0(x2) # store 0xdf96b3bb0088bf54 in memory
flh f25, 0(x2) # load 0xdf96b3bb0088bf54 from memory into f25
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
fnmadd.h f10, f8, f25, f18, dyn # perform operation
fnmadd.h f10, f8, f25, f18, rdn # perform operation
fnmadd.h f10, f8, f25, f18, rmm # perform operation
fnmadd.h f10, f8, f25, f18, rne # perform operation
fnmadd.h f10, f8, f25, f18, rtz # perform operation
fnmadd.h f10, f8, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f8, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f8, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f8, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f8, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f8, f25, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x8400)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f14, 0(x2) # load 0x00008000 from memory into f14
la x2, scratch
li x3, 0x378af41a0fb9ef5b # load x3 with value 0x378af41a0fb9ef5b
sw x3, 0(x2) # store 0x378af41a0fb9ef5b in memory
flh f20, 0(x2) # load 0x378af41a0fb9ef5b from memory into f20
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f23, 0(x2) # load 0x00008400 from memory into f23
fnmadd.h f9, f14, f20, f23, dyn # perform operation
fnmadd.h f9, f14, f20, f23, rdn # perform operation
fnmadd.h f9, f14, f20, f23, rmm # perform operation
fnmadd.h f9, f14, f20, f23, rne # perform operation
fnmadd.h f9, f14, f20, f23, rtz # perform operation
fnmadd.h f9, f14, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f14, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f14, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f14, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f14, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f14, f20, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f5, 0(x2) # load 0x00008000 from memory into f5
la x2, scratch
li x3, 0x60dc7ec083d0262e # load x3 with value 0x60dc7ec083d0262e
sw x3, 0(x2) # store 0x60dc7ec083d0262e in memory
flh f9, 0(x2) # load 0x60dc7ec083d0262e from memory into f9
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f8, 0(x2) # load 0x00007bff from memory into f8
fnmadd.h f14, f5, f9, f8, dyn # perform operation
fnmadd.h f14, f5, f9, f8, rdn # perform operation
fnmadd.h f14, f5, f9, f8, rmm # perform operation
fnmadd.h f14, f5, f9, f8, rne # perform operation
fnmadd.h f14, f5, f9, f8, rtz # perform operation
fnmadd.h f14, f5, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f5, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f5, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f5, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f5, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f5, f9, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f29, 0(x2) # load 0x00008000 from memory into f29
la x2, scratch
li x3, 0xd7cf07db84628146 # load x3 with value 0xd7cf07db84628146
sw x3, 0(x2) # store 0xd7cf07db84628146 in memory
flh f14, 0(x2) # load 0xd7cf07db84628146 from memory into f14
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f7, 0(x2) # load 0x0000fbff from memory into f7
fnmadd.h f31, f29, f14, f7, dyn # perform operation
fnmadd.h f31, f29, f14, f7, rdn # perform operation
fnmadd.h f31, f29, f14, f7, rmm # perform operation
fnmadd.h f31, f29, f14, f7, rne # perform operation
fnmadd.h f31, f29, f14, f7, rtz # perform operation
fnmadd.h f31, f29, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f29, f14, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f6, 0(x2) # load 0x00008000 from memory into f6
la x2, scratch
li x3, 0x78900b32144cbc30 # load x3 with value 0x78900b32144cbc30
sw x3, 0(x2) # store 0x78900b32144cbc30 in memory
flh f16, 0(x2) # load 0x78900b32144cbc30 from memory into f16
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
fnmadd.h f25, f6, f16, f20, dyn # perform operation
fnmadd.h f25, f6, f16, f20, rdn # perform operation
fnmadd.h f25, f6, f16, f20, rmm # perform operation
fnmadd.h f25, f6, f16, f20, rne # perform operation
fnmadd.h f25, f6, f16, f20, rtz # perform operation
fnmadd.h f25, f6, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f6, f16, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f5, 0(x2) # load 0x00008000 from memory into f5
la x2, scratch
li x3, 0x31949656d7e34323 # load x3 with value 0x31949656d7e34323
sw x3, 0(x2) # store 0x31949656d7e34323 in memory
flh f31, 0(x2) # load 0x31949656d7e34323 from memory into f31
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
fnmadd.h f20, f5, f31, f19, dyn # perform operation
fnmadd.h f20, f5, f31, f19, rdn # perform operation
fnmadd.h f20, f5, f31, f19, rmm # perform operation
fnmadd.h f20, f5, f31, f19, rne # perform operation
fnmadd.h f20, f5, f31, f19, rtz # perform operation
fnmadd.h f20, f5, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f5, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f5, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f5, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f5, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f5, f31, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x200)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f9, 0(x2) # load 0x00008000 from memory into f9
la x2, scratch
li x3, 0xa637faaa645040aa # load x3 with value 0xa637faaa645040aa
sw x3, 0(x2) # store 0xa637faaa645040aa in memory
flh f3, 0(x2) # load 0xa637faaa645040aa from memory into f3
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f10, 0(x2) # load 0x00000200 from memory into f10
fnmadd.h f26, f9, f3, f10, dyn # perform operation
fnmadd.h f26, f9, f3, f10, rdn # perform operation
fnmadd.h f26, f9, f3, f10, rmm # perform operation
fnmadd.h f26, f9, f3, f10, rne # perform operation
fnmadd.h f26, f9, f3, f10, rtz # perform operation
fnmadd.h f26, f9, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f9, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f9, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f9, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f9, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f9, f3, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x8200)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f25, 0(x2) # load 0x00008000 from memory into f25
la x2, scratch
li x3, 0xd020fa9433be0eaf # load x3 with value 0xd020fa9433be0eaf
sw x3, 0(x2) # store 0xd020fa9433be0eaf in memory
flh f22, 0(x2) # load 0xd020fa9433be0eaf from memory into f22
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f16, 0(x2) # load 0x00008200 from memory into f16
fnmadd.h f21, f25, f22, f16, dyn # perform operation
fnmadd.h f21, f25, f22, f16, rdn # perform operation
fnmadd.h f21, f25, f22, f16, rmm # perform operation
fnmadd.h f21, f25, f22, f16, rne # perform operation
fnmadd.h f21, f25, f22, f16, rtz # perform operation
fnmadd.h f21, f25, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f25, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f25, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f25, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f25, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f25, f22, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x1)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f17, 0(x2) # load 0x00008000 from memory into f17
la x2, scratch
li x3, 0x43c1e74e1b7224a9 # load x3 with value 0x43c1e74e1b7224a9
sw x3, 0(x2) # store 0x43c1e74e1b7224a9 in memory
flh f20, 0(x2) # load 0x43c1e74e1b7224a9 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f7, 0(x2) # load 0x00000001 from memory into f7
fnmadd.h f14, f17, f20, f7, dyn # perform operation
fnmadd.h f14, f17, f20, f7, rdn # perform operation
fnmadd.h f14, f17, f20, f7, rmm # perform operation
fnmadd.h f14, f17, f20, f7, rne # perform operation
fnmadd.h f14, f17, f20, f7, rtz # perform operation
fnmadd.h f14, f17, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f17, f20, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x8001)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f21, 0(x2) # load 0x00008000 from memory into f21
la x2, scratch
li x3, 0xd4dd8fd22e71ce9d # load x3 with value 0xd4dd8fd22e71ce9d
sw x3, 0(x2) # store 0xd4dd8fd22e71ce9d in memory
flh f31, 0(x2) # load 0xd4dd8fd22e71ce9d from memory into f31
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f23, 0(x2) # load 0x00008001 from memory into f23
fnmadd.h f27, f21, f31, f23, dyn # perform operation
fnmadd.h f27, f21, f31, f23, rdn # perform operation
fnmadd.h f27, f21, f31, f23, rmm # perform operation
fnmadd.h f27, f21, f31, f23, rne # perform operation
fnmadd.h f27, f21, f31, f23, rtz # perform operation
fnmadd.h f27, f21, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f21, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f21, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f21, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f21, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f21, f31, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f26, 0(x2) # load 0x00008000 from memory into f26
la x2, scratch
li x3, 0xdda878beceeb9673 # load x3 with value 0xdda878beceeb9673
sw x3, 0(x2) # store 0xdda878beceeb9673 in memory
flh f19, 0(x2) # load 0xdda878beceeb9673 from memory into f19
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f15, 0(x2) # load 0x00007c00 from memory into f15
fnmadd.h f12, f26, f19, f15, dyn # perform operation
fnmadd.h f12, f26, f19, f15, rdn # perform operation
fnmadd.h f12, f26, f19, f15, rmm # perform operation
fnmadd.h f12, f26, f19, f15, rne # perform operation
fnmadd.h f12, f26, f19, f15, rtz # perform operation
fnmadd.h f12, f26, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f26, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f26, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f26, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f26, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f26, f19, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f28, 0(x2) # load 0x00008000 from memory into f28
la x2, scratch
li x3, 0x570bfcac38787b6d # load x3 with value 0x570bfcac38787b6d
sw x3, 0(x2) # store 0x570bfcac38787b6d in memory
flh f11, 0(x2) # load 0x570bfcac38787b6d from memory into f11
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f17, 0(x2) # load 0x0000fc00 from memory into f17
fnmadd.h f26, f28, f11, f17, dyn # perform operation
fnmadd.h f26, f28, f11, f17, rdn # perform operation
fnmadd.h f26, f28, f11, f17, rmm # perform operation
fnmadd.h f26, f28, f11, f17, rne # perform operation
fnmadd.h f26, f28, f11, f17, rtz # perform operation
fnmadd.h f26, f28, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f28, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f28, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f28, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f28, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f28, f11, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f25, 0(x2) # load 0x00008000 from memory into f25
la x2, scratch
li x3, 0x218d89efe4bd893d # load x3 with value 0x218d89efe4bd893d
sw x3, 0(x2) # store 0x218d89efe4bd893d in memory
flh f27, 0(x2) # load 0x218d89efe4bd893d from memory into f27
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
fnmadd.h f22, f25, f27, f18, dyn # perform operation
fnmadd.h f22, f25, f27, f18, rdn # perform operation
fnmadd.h f22, f25, f27, f18, rmm # perform operation
fnmadd.h f22, f25, f27, f18, rne # perform operation
fnmadd.h f22, f25, f27, f18, rtz # perform operation
fnmadd.h f22, f25, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f25, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f25, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f25, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f25, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f25, f27, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f30, 0(x2) # load 0x00008000 from memory into f30
la x2, scratch
li x3, 0xf4ca25720beb25b # load x3 with value 0xf4ca25720beb25b
sw x3, 0(x2) # store 0xf4ca25720beb25b in memory
flh f1, 0(x2) # load 0xf4ca25720beb25b from memory into f1
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f21, 0(x2) # load 0x00007fff from memory into f21
fnmadd.h f17, f30, f1, f21, dyn # perform operation
fnmadd.h f17, f30, f1, f21, rdn # perform operation
fnmadd.h f17, f30, f1, f21, rmm # perform operation
fnmadd.h f17, f30, f1, f21, rne # perform operation
fnmadd.h f17, f30, f1, f21, rtz # perform operation
fnmadd.h f17, f30, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f30, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f30, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f30, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f30, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f30, f1, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f8, 0(x2) # load 0x00008000 from memory into f8
la x2, scratch
li x3, 0x37ac85339c9b19cd # load x3 with value 0x37ac85339c9b19cd
sw x3, 0(x2) # store 0x37ac85339c9b19cd in memory
flh f30, 0(x2) # load 0x37ac85339c9b19cd from memory into f30
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f7, 0(x2) # load 0x0000fe00 from memory into f7
fnmadd.h f20, f8, f30, f7, dyn # perform operation
fnmadd.h f20, f8, f30, f7, rdn # perform operation
fnmadd.h f20, f8, f30, f7, rmm # perform operation
fnmadd.h f20, f8, f30, f7, rne # perform operation
fnmadd.h f20, f8, f30, f7, rtz # perform operation
fnmadd.h f20, f8, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f8, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f8, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f8, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f8, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f8, f30, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f25, 0(x2) # load 0x00008000 from memory into f25
la x2, scratch
li x3, 0x3ed3130f535d47d7 # load x3 with value 0x3ed3130f535d47d7
sw x3, 0(x2) # store 0x3ed3130f535d47d7 in memory
flh f16, 0(x2) # load 0x3ed3130f535d47d7 from memory into f16
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f6, 0(x2) # load 0x00007c01 from memory into f6
fnmadd.h f8, f25, f16, f6, dyn # perform operation
fnmadd.h f8, f25, f16, f6, rdn # perform operation
fnmadd.h f8, f25, f16, f6, rmm # perform operation
fnmadd.h f8, f25, f16, f6, rne # perform operation
fnmadd.h f8, f25, f16, f6, rtz # perform operation
fnmadd.h f8, f25, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f25, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f25, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f25, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f25, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f25, f16, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f1, 0(x2) # load 0x00008000 from memory into f1
la x2, scratch
li x3, 0x260a07bcea216628 # load x3 with value 0x260a07bcea216628
sw x3, 0(x2) # store 0x260a07bcea216628 in memory
flh f2, 0(x2) # load 0x260a07bcea216628 from memory into f2
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f29, 0(x2) # load 0x00007dff from memory into f29
fnmadd.h f18, f1, f2, f29, dyn # perform operation
fnmadd.h f18, f1, f2, f29, rdn # perform operation
fnmadd.h f18, f1, f2, f29, rmm # perform operation
fnmadd.h f18, f1, f2, f29, rne # perform operation
fnmadd.h f18, f1, f2, f29, rtz # perform operation
fnmadd.h f18, f1, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f1, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f1, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f1, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f1, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f1, f2, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f26, 0(x2) # load 0x00008000 from memory into f26
la x2, scratch
li x3, 0x8ff6ff14ad8d8e69 # load x3 with value 0x8ff6ff14ad8d8e69
sw x3, 0(x2) # store 0x8ff6ff14ad8d8e69 in memory
flh f22, 0(x2) # load 0x8ff6ff14ad8d8e69 from memory into f22
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f10, 0(x2) # load 0x0000fc01 from memory into f10
fnmadd.h f7, f26, f22, f10, dyn # perform operation
fnmadd.h f7, f26, f22, f10, rdn # perform operation
fnmadd.h f7, f26, f22, f10, rmm # perform operation
fnmadd.h f7, f26, f22, f10, rne # perform operation
fnmadd.h f7, f26, f22, f10, rtz # perform operation
fnmadd.h f7, f26, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f26, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f26, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f26, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f26, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f26, f22, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f11, 0(x2) # load 0x00008000 from memory into f11
la x2, scratch
li x3, 0x1886867e413a0bf1 # load x3 with value 0x1886867e413a0bf1
sw x3, 0(x2) # store 0x1886867e413a0bf1 in memory
flh f13, 0(x2) # load 0x1886867e413a0bf1 from memory into f13
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f28, 0(x2) # load 0x000058b4 from memory into f28
fnmadd.h f7, f11, f13, f28, dyn # perform operation
fnmadd.h f7, f11, f13, f28, rdn # perform operation
fnmadd.h f7, f11, f13, f28, rmm # perform operation
fnmadd.h f7, f11, f13, f28, rne # perform operation
fnmadd.h f7, f11, f13, f28, rtz # perform operation
fnmadd.h f7, f11, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f11, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f11, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f11, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f11, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f11, f13, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f17, 0(x2) # load 0x00008000 from memory into f17
la x2, scratch
li x3, 0x8adf96b0c0f75986 # load x3 with value 0x8adf96b0c0f75986
sw x3, 0(x2) # store 0x8adf96b0c0f75986 in memory
flh f18, 0(x2) # load 0x8adf96b0c0f75986 from memory into f18
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f8, 0(x2) # load 0x0000c93a from memory into f8
fnmadd.h f2, f17, f18, f8, dyn # perform operation
fnmadd.h f2, f17, f18, f8, rdn # perform operation
fnmadd.h f2, f17, f18, f8, rmm # perform operation
fnmadd.h f2, f17, f18, f8, rne # perform operation
fnmadd.h f2, f17, f18, f8, rtz # perform operation
fnmadd.h f2, f17, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f17, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f17, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f17, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f17, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f17, f18, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x0)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f26, 0(x2) # load 0x00003c00 from memory into f26
la x2, scratch
li x3, 0x51d51948ec83ff58 # load x3 with value 0x51d51948ec83ff58
sw x3, 0(x2) # store 0x51d51948ec83ff58 in memory
flh f12, 0(x2) # load 0x51d51948ec83ff58 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f20, 0(x2) # load 0x00000000 from memory into f20
fnmadd.h f31, f26, f12, f20, dyn # perform operation
fnmadd.h f31, f26, f12, f20, rdn # perform operation
fnmadd.h f31, f26, f12, f20, rmm # perform operation
fnmadd.h f31, f26, f12, f20, rne # perform operation
fnmadd.h f31, f26, f12, f20, rtz # perform operation
fnmadd.h f31, f26, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f26, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f26, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f26, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f26, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f26, f12, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x8000)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f28, 0(x2) # load 0x00003c00 from memory into f28
la x2, scratch
li x3, 0x744d256712fb16f8 # load x3 with value 0x744d256712fb16f8
sw x3, 0(x2) # store 0x744d256712fb16f8 in memory
flh f2, 0(x2) # load 0x744d256712fb16f8 from memory into f2
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f1, 0(x2) # load 0x00008000 from memory into f1
fnmadd.h f17, f28, f2, f1, dyn # perform operation
fnmadd.h f17, f28, f2, f1, rdn # perform operation
fnmadd.h f17, f28, f2, f1, rmm # perform operation
fnmadd.h f17, f28, f2, f1, rne # perform operation
fnmadd.h f17, f28, f2, f1, rtz # perform operation
fnmadd.h f17, f28, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f28, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f28, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f28, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f28, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f28, f2, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f20, 0(x2) # load 0x00003c00 from memory into f20
la x2, scratch
li x3, 0x808353fcb706b7ef # load x3 with value 0x808353fcb706b7ef
sw x3, 0(x2) # store 0x808353fcb706b7ef in memory
flh f17, 0(x2) # load 0x808353fcb706b7ef from memory into f17
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f31, 0(x2) # load 0x00003c00 from memory into f31
fnmadd.h f18, f20, f17, f31, dyn # perform operation
fnmadd.h f18, f20, f17, f31, rdn # perform operation
fnmadd.h f18, f20, f17, f31, rmm # perform operation
fnmadd.h f18, f20, f17, f31, rne # perform operation
fnmadd.h f18, f20, f17, f31, rtz # perform operation
fnmadd.h f18, f20, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f20, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f20, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f20, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f20, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f20, f17, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f30, 0(x2) # load 0x00003c00 from memory into f30
la x2, scratch
li x3, 0x59d591c9256715d4 # load x3 with value 0x59d591c9256715d4
sw x3, 0(x2) # store 0x59d591c9256715d4 in memory
flh f14, 0(x2) # load 0x59d591c9256715d4 from memory into f14
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f15, 0(x2) # load 0x0000bc00 from memory into f15
fnmadd.h f10, f30, f14, f15, dyn # perform operation
fnmadd.h f10, f30, f14, f15, rdn # perform operation
fnmadd.h f10, f30, f14, f15, rmm # perform operation
fnmadd.h f10, f30, f14, f15, rne # perform operation
fnmadd.h f10, f30, f14, f15, rtz # perform operation
fnmadd.h f10, f30, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f30, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f30, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f30, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f30, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f30, f14, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f30, 0(x2) # load 0x00003c00 from memory into f30
la x2, scratch
li x3, 0xbbcdbfcc3c0cf202 # load x3 with value 0xbbcdbfcc3c0cf202
sw x3, 0(x2) # store 0xbbcdbfcc3c0cf202 in memory
flh f23, 0(x2) # load 0xbbcdbfcc3c0cf202 from memory into f23
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
fnmadd.h f20, f30, f23, f10, dyn # perform operation
fnmadd.h f20, f30, f23, f10, rdn # perform operation
fnmadd.h f20, f30, f23, f10, rmm # perform operation
fnmadd.h f20, f30, f23, f10, rne # perform operation
fnmadd.h f20, f30, f23, f10, rtz # perform operation
fnmadd.h f20, f30, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f30, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f30, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f30, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f30, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f30, f23, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f22, 0(x2) # load 0x00003c00 from memory into f22
la x2, scratch
li x3, 0x798cc7cb9afeaa1b # load x3 with value 0x798cc7cb9afeaa1b
sw x3, 0(x2) # store 0x798cc7cb9afeaa1b in memory
flh f7, 0(x2) # load 0x798cc7cb9afeaa1b from memory into f7
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f11, 0(x2) # load 0x0000be00 from memory into f11
fnmadd.h f1, f22, f7, f11, dyn # perform operation
fnmadd.h f1, f22, f7, f11, rdn # perform operation
fnmadd.h f1, f22, f7, f11, rmm # perform operation
fnmadd.h f1, f22, f7, f11, rne # perform operation
fnmadd.h f1, f22, f7, f11, rtz # perform operation
fnmadd.h f1, f22, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f22, f7, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x4000)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f21, 0(x2) # load 0x00003c00 from memory into f21
la x2, scratch
li x3, 0xaae0c0287070dffe # load x3 with value 0xaae0c0287070dffe
sw x3, 0(x2) # store 0xaae0c0287070dffe in memory
flh f18, 0(x2) # load 0xaae0c0287070dffe from memory into f18
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f14, 0(x2) # load 0x00004000 from memory into f14
fnmadd.h f17, f21, f18, f14, dyn # perform operation
fnmadd.h f17, f21, f18, f14, rdn # perform operation
fnmadd.h f17, f21, f18, f14, rmm # perform operation
fnmadd.h f17, f21, f18, f14, rne # perform operation
fnmadd.h f17, f21, f18, f14, rtz # perform operation
fnmadd.h f17, f21, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f21, f18, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xc000)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
la x2, scratch
li x3, 0x38e96bb9fc109d # load x3 with value 0x38e96bb9fc109d
sw x3, 0(x2) # store 0x38e96bb9fc109d in memory
flh f11, 0(x2) # load 0x38e96bb9fc109d from memory into f11
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
fnmadd.h f25, f16, f11, f2, dyn # perform operation
fnmadd.h f25, f16, f11, f2, rdn # perform operation
fnmadd.h f25, f16, f11, f2, rmm # perform operation
fnmadd.h f25, f16, f11, f2, rne # perform operation
fnmadd.h f25, f16, f11, f2, rtz # perform operation
fnmadd.h f25, f16, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f16, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f16, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f16, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f16, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f16, f11, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x400)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
la x2, scratch
li x3, 0x9cd71d4daa06913e # load x3 with value 0x9cd71d4daa06913e
sw x3, 0(x2) # store 0x9cd71d4daa06913e in memory
flh f12, 0(x2) # load 0x9cd71d4daa06913e from memory into f12
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f23, 0(x2) # load 0x00000400 from memory into f23
fnmadd.h f6, f8, f12, f23, dyn # perform operation
fnmadd.h f6, f8, f12, f23, rdn # perform operation
fnmadd.h f6, f8, f12, f23, rmm # perform operation
fnmadd.h f6, f8, f12, f23, rne # perform operation
fnmadd.h f6, f8, f12, f23, rtz # perform operation
fnmadd.h f6, f8, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f8, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f8, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f8, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f8, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f8, f12, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x8400)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f12, 0(x2) # load 0x00003c00 from memory into f12
la x2, scratch
li x3, 0x1a63dc2805e379a3 # load x3 with value 0x1a63dc2805e379a3
sw x3, 0(x2) # store 0x1a63dc2805e379a3 in memory
flh f11, 0(x2) # load 0x1a63dc2805e379a3 from memory into f11
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f10, 0(x2) # load 0x00008400 from memory into f10
fnmadd.h f30, f12, f11, f10, dyn # perform operation
fnmadd.h f30, f12, f11, f10, rdn # perform operation
fnmadd.h f30, f12, f11, f10, rmm # perform operation
fnmadd.h f30, f12, f11, f10, rne # perform operation
fnmadd.h f30, f12, f11, f10, rtz # perform operation
fnmadd.h f30, f12, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f12, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f12, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f12, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f12, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f12, f11, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f20, 0(x2) # load 0x00003c00 from memory into f20
la x2, scratch
li x3, 0x72b5159cb6634b94 # load x3 with value 0x72b5159cb6634b94
sw x3, 0(x2) # store 0x72b5159cb6634b94 in memory
flh f3, 0(x2) # load 0x72b5159cb6634b94 from memory into f3
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f7, 0(x2) # load 0x00007bff from memory into f7
fnmadd.h f29, f20, f3, f7, dyn # perform operation
fnmadd.h f29, f20, f3, f7, rdn # perform operation
fnmadd.h f29, f20, f3, f7, rmm # perform operation
fnmadd.h f29, f20, f3, f7, rne # perform operation
fnmadd.h f29, f20, f3, f7, rtz # perform operation
fnmadd.h f29, f20, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f20, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f20, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f20, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f20, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f20, f3, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f7, 0(x2) # load 0x00003c00 from memory into f7
la x2, scratch
li x3, 0x6a9fdb8317b46037 # load x3 with value 0x6a9fdb8317b46037
sw x3, 0(x2) # store 0x6a9fdb8317b46037 in memory
flh f8, 0(x2) # load 0x6a9fdb8317b46037 from memory into f8
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f31, 0(x2) # load 0x0000fbff from memory into f31
fnmadd.h f2, f7, f8, f31, dyn # perform operation
fnmadd.h f2, f7, f8, f31, rdn # perform operation
fnmadd.h f2, f7, f8, f31, rmm # perform operation
fnmadd.h f2, f7, f8, f31, rne # perform operation
fnmadd.h f2, f7, f8, f31, rtz # perform operation
fnmadd.h f2, f7, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f7, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f7, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f7, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f7, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f7, f8, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f7, 0(x2) # load 0x00003c00 from memory into f7
la x2, scratch
li x3, 0xda22defb087bcd69 # load x3 with value 0xda22defb087bcd69
sw x3, 0(x2) # store 0xda22defb087bcd69 in memory
flh f27, 0(x2) # load 0xda22defb087bcd69 from memory into f27
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f5, 0(x2) # load 0x000003ff from memory into f5
fnmadd.h f2, f7, f27, f5, dyn # perform operation
fnmadd.h f2, f7, f27, f5, rdn # perform operation
fnmadd.h f2, f7, f27, f5, rmm # perform operation
fnmadd.h f2, f7, f27, f5, rne # perform operation
fnmadd.h f2, f7, f27, f5, rtz # perform operation
fnmadd.h f2, f7, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f7, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f7, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f7, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f7, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f7, f27, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f24, 0(x2) # load 0x00003c00 from memory into f24
la x2, scratch
li x3, 0xe371e3ab632a5236 # load x3 with value 0xe371e3ab632a5236
sw x3, 0(x2) # store 0xe371e3ab632a5236 in memory
flh f7, 0(x2) # load 0xe371e3ab632a5236 from memory into f7
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f2, 0(x2) # load 0x000083ff from memory into f2
fnmadd.h f12, f24, f7, f2, dyn # perform operation
fnmadd.h f12, f24, f7, f2, rdn # perform operation
fnmadd.h f12, f24, f7, f2, rmm # perform operation
fnmadd.h f12, f24, f7, f2, rne # perform operation
fnmadd.h f12, f24, f7, f2, rtz # perform operation
fnmadd.h f12, f24, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f24, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f24, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f24, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f24, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f24, f7, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x200)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
la x2, scratch
li x3, 0x30113af883fd353c # load x3 with value 0x30113af883fd353c
sw x3, 0(x2) # store 0x30113af883fd353c in memory
flh f31, 0(x2) # load 0x30113af883fd353c from memory into f31
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f23, 0(x2) # load 0x00000200 from memory into f23
fnmadd.h f12, f8, f31, f23, dyn # perform operation
fnmadd.h f12, f8, f31, f23, rdn # perform operation
fnmadd.h f12, f8, f31, f23, rmm # perform operation
fnmadd.h f12, f8, f31, f23, rne # perform operation
fnmadd.h f12, f8, f31, f23, rtz # perform operation
fnmadd.h f12, f8, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f8, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f8, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f8, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f8, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f8, f31, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x8200)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f24, 0(x2) # load 0x00003c00 from memory into f24
la x2, scratch
li x3, 0xc7f3d8a34ad45b8e # load x3 with value 0xc7f3d8a34ad45b8e
sw x3, 0(x2) # store 0xc7f3d8a34ad45b8e in memory
flh f14, 0(x2) # load 0xc7f3d8a34ad45b8e from memory into f14
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f22, 0(x2) # load 0x00008200 from memory into f22
fnmadd.h f1, f24, f14, f22, dyn # perform operation
fnmadd.h f1, f24, f14, f22, rdn # perform operation
fnmadd.h f1, f24, f14, f22, rmm # perform operation
fnmadd.h f1, f24, f14, f22, rne # perform operation
fnmadd.h f1, f24, f14, f22, rtz # perform operation
fnmadd.h f1, f24, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f24, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f24, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f24, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f24, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f24, f14, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x1)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f17, 0(x2) # load 0x00003c00 from memory into f17
la x2, scratch
li x3, 0x33589cb0a47595a7 # load x3 with value 0x33589cb0a47595a7
sw x3, 0(x2) # store 0x33589cb0a47595a7 in memory
flh f1, 0(x2) # load 0x33589cb0a47595a7 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
fnmadd.h f28, f17, f1, f15, dyn # perform operation
fnmadd.h f28, f17, f1, f15, rdn # perform operation
fnmadd.h f28, f17, f1, f15, rmm # perform operation
fnmadd.h f28, f17, f1, f15, rne # perform operation
fnmadd.h f28, f17, f1, f15, rtz # perform operation
fnmadd.h f28, f17, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f17, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f17, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f17, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f17, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f17, f1, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x8001)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
la x2, scratch
li x3, 0x1f138b249fe30085 # load x3 with value 0x1f138b249fe30085
sw x3, 0(x2) # store 0x1f138b249fe30085 in memory
flh f1, 0(x2) # load 0x1f138b249fe30085 from memory into f1
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f23, 0(x2) # load 0x00008001 from memory into f23
fnmadd.h f28, f16, f1, f23, dyn # perform operation
fnmadd.h f28, f16, f1, f23, rdn # perform operation
fnmadd.h f28, f16, f1, f23, rmm # perform operation
fnmadd.h f28, f16, f1, f23, rne # perform operation
fnmadd.h f28, f16, f1, f23, rtz # perform operation
fnmadd.h f28, f16, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f16, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f16, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f16, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f16, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f16, f1, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f15, 0(x2) # load 0x00003c00 from memory into f15
la x2, scratch
li x3, 0x7abde1cb18ba3a1c # load x3 with value 0x7abde1cb18ba3a1c
sw x3, 0(x2) # store 0x7abde1cb18ba3a1c in memory
flh f27, 0(x2) # load 0x7abde1cb18ba3a1c from memory into f27
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f12, 0(x2) # load 0x00007c00 from memory into f12
fnmadd.h f28, f15, f27, f12, dyn # perform operation
fnmadd.h f28, f15, f27, f12, rdn # perform operation
fnmadd.h f28, f15, f27, f12, rmm # perform operation
fnmadd.h f28, f15, f27, f12, rne # perform operation
fnmadd.h f28, f15, f27, f12, rtz # perform operation
fnmadd.h f28, f15, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f15, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f15, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f15, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f15, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f15, f27, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f10, 0(x2) # load 0x00003c00 from memory into f10
la x2, scratch
li x3, 0x6eb6f55682c9e96 # load x3 with value 0x6eb6f55682c9e96
sw x3, 0(x2) # store 0x6eb6f55682c9e96 in memory
flh f30, 0(x2) # load 0x6eb6f55682c9e96 from memory into f30
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f27, 0(x2) # load 0x0000fc00 from memory into f27
fnmadd.h f23, f10, f30, f27, dyn # perform operation
fnmadd.h f23, f10, f30, f27, rdn # perform operation
fnmadd.h f23, f10, f30, f27, rmm # perform operation
fnmadd.h f23, f10, f30, f27, rne # perform operation
fnmadd.h f23, f10, f30, f27, rtz # perform operation
fnmadd.h f23, f10, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f10, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f10, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f10, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f10, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f10, f30, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f28, 0(x2) # load 0x00003c00 from memory into f28
la x2, scratch
li x3, 0x5afd8125b8f14338 # load x3 with value 0x5afd8125b8f14338
sw x3, 0(x2) # store 0x5afd8125b8f14338 in memory
flh f13, 0(x2) # load 0x5afd8125b8f14338 from memory into f13
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f27, 0(x2) # load 0x00007e00 from memory into f27
fnmadd.h f17, f28, f13, f27, dyn # perform operation
fnmadd.h f17, f28, f13, f27, rdn # perform operation
fnmadd.h f17, f28, f13, f27, rmm # perform operation
fnmadd.h f17, f28, f13, f27, rne # perform operation
fnmadd.h f17, f28, f13, f27, rtz # perform operation
fnmadd.h f17, f28, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f28, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f28, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f28, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f28, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f28, f13, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f1, 0(x2) # load 0x00003c00 from memory into f1
la x2, scratch
li x3, 0x6f30c5b98e640620 # load x3 with value 0x6f30c5b98e640620
sw x3, 0(x2) # store 0x6f30c5b98e640620 in memory
flh f20, 0(x2) # load 0x6f30c5b98e640620 from memory into f20
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f3, 0(x2) # load 0x00007fff from memory into f3
fnmadd.h f15, f1, f20, f3, dyn # perform operation
fnmadd.h f15, f1, f20, f3, rdn # perform operation
fnmadd.h f15, f1, f20, f3, rmm # perform operation
fnmadd.h f15, f1, f20, f3, rne # perform operation
fnmadd.h f15, f1, f20, f3, rtz # perform operation
fnmadd.h f15, f1, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f1, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f1, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f1, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f1, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f1, f20, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f3, 0(x2) # load 0x00003c00 from memory into f3
la x2, scratch
li x3, 0x18d7b48c3bddd0f6 # load x3 with value 0x18d7b48c3bddd0f6
sw x3, 0(x2) # store 0x18d7b48c3bddd0f6 in memory
flh f29, 0(x2) # load 0x18d7b48c3bddd0f6 from memory into f29
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f14, 0(x2) # load 0x0000fe00 from memory into f14
fnmadd.h f24, f3, f29, f14, dyn # perform operation
fnmadd.h f24, f3, f29, f14, rdn # perform operation
fnmadd.h f24, f3, f29, f14, rmm # perform operation
fnmadd.h f24, f3, f29, f14, rne # perform operation
fnmadd.h f24, f3, f29, f14, rtz # perform operation
fnmadd.h f24, f3, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f3, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f3, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f3, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f3, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f3, f29, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f9, 0(x2) # load 0x00003c00 from memory into f9
la x2, scratch
li x3, 0x1c73a29fe9611cfe # load x3 with value 0x1c73a29fe9611cfe
sw x3, 0(x2) # store 0x1c73a29fe9611cfe in memory
flh f3, 0(x2) # load 0x1c73a29fe9611cfe from memory into f3
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f7, 0(x2) # load 0x00007c01 from memory into f7
fnmadd.h f17, f9, f3, f7, dyn # perform operation
fnmadd.h f17, f9, f3, f7, rdn # perform operation
fnmadd.h f17, f9, f3, f7, rmm # perform operation
fnmadd.h f17, f9, f3, f7, rne # perform operation
fnmadd.h f17, f9, f3, f7, rtz # perform operation
fnmadd.h f17, f9, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f9, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f9, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f9, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f9, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f9, f3, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f10, 0(x2) # load 0x00003c00 from memory into f10
la x2, scratch
li x3, 0x9877534f1429fb4c # load x3 with value 0x9877534f1429fb4c
sw x3, 0(x2) # store 0x9877534f1429fb4c in memory
flh f15, 0(x2) # load 0x9877534f1429fb4c from memory into f15
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f5, 0(x2) # load 0x00007dff from memory into f5
fnmadd.h f27, f10, f15, f5, dyn # perform operation
fnmadd.h f27, f10, f15, f5, rdn # perform operation
fnmadd.h f27, f10, f15, f5, rmm # perform operation
fnmadd.h f27, f10, f15, f5, rne # perform operation
fnmadd.h f27, f10, f15, f5, rtz # perform operation
fnmadd.h f27, f10, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f10, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f10, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f10, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f10, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f10, f15, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f29, 0(x2) # load 0x00003c00 from memory into f29
la x2, scratch
li x3, 0xa5af202c34419852 # load x3 with value 0xa5af202c34419852
sw x3, 0(x2) # store 0xa5af202c34419852 in memory
flh f23, 0(x2) # load 0xa5af202c34419852 from memory into f23
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f6, 0(x2) # load 0x0000fc01 from memory into f6
fnmadd.h f3, f29, f23, f6, dyn # perform operation
fnmadd.h f3, f29, f23, f6, rdn # perform operation
fnmadd.h f3, f29, f23, f6, rmm # perform operation
fnmadd.h f3, f29, f23, f6, rne # perform operation
fnmadd.h f3, f29, f23, f6, rtz # perform operation
fnmadd.h f3, f29, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f29, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f29, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f29, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f29, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f29, f23, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f7, 0(x2) # load 0x00003c00 from memory into f7
la x2, scratch
li x3, 0xb36d166cb4623c3c # load x3 with value 0xb36d166cb4623c3c
sw x3, 0(x2) # store 0xb36d166cb4623c3c in memory
flh f11, 0(x2) # load 0xb36d166cb4623c3c from memory into f11
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f5, 0(x2) # load 0x000058b4 from memory into f5
fnmadd.h f25, f7, f11, f5, dyn # perform operation
fnmadd.h f25, f7, f11, f5, rdn # perform operation
fnmadd.h f25, f7, f11, f5, rmm # perform operation
fnmadd.h f25, f7, f11, f5, rne # perform operation
fnmadd.h f25, f7, f11, f5, rtz # perform operation
fnmadd.h f25, f7, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f7, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f7, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f7, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f7, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f7, f11, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f29, 0(x2) # load 0x00003c00 from memory into f29
la x2, scratch
li x3, 0x77e2070209badcbc # load x3 with value 0x77e2070209badcbc
sw x3, 0(x2) # store 0x77e2070209badcbc in memory
flh f17, 0(x2) # load 0x77e2070209badcbc from memory into f17
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f22, 0(x2) # load 0x0000c93a from memory into f22
fnmadd.h f23, f29, f17, f22, dyn # perform operation
fnmadd.h f23, f29, f17, f22, rdn # perform operation
fnmadd.h f23, f29, f17, f22, rmm # perform operation
fnmadd.h f23, f29, f17, f22, rne # perform operation
fnmadd.h f23, f29, f17, f22, rtz # perform operation
fnmadd.h f23, f29, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f29, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f29, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f29, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f29, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f29, f17, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x0)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f5, 0(x2) # load 0x0000bc00 from memory into f5
la x2, scratch
li x3, 0xbdb29a93e03eccc # load x3 with value 0xbdb29a93e03eccc
sw x3, 0(x2) # store 0xbdb29a93e03eccc in memory
flh f20, 0(x2) # load 0xbdb29a93e03eccc from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f7, 0(x2) # load 0x00000000 from memory into f7
fnmadd.h f15, f5, f20, f7, dyn # perform operation
fnmadd.h f15, f5, f20, f7, rdn # perform operation
fnmadd.h f15, f5, f20, f7, rmm # perform operation
fnmadd.h f15, f5, f20, f7, rne # perform operation
fnmadd.h f15, f5, f20, f7, rtz # perform operation
fnmadd.h f15, f5, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f5, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f5, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f5, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f5, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f5, f20, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x8000)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f16, 0(x2) # load 0x0000bc00 from memory into f16
la x2, scratch
li x3, 0x2c309ffb14c0a11c # load x3 with value 0x2c309ffb14c0a11c
sw x3, 0(x2) # store 0x2c309ffb14c0a11c in memory
flh f1, 0(x2) # load 0x2c309ffb14c0a11c from memory into f1
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f14, 0(x2) # load 0x00008000 from memory into f14
fnmadd.h f28, f16, f1, f14, dyn # perform operation
fnmadd.h f28, f16, f1, f14, rdn # perform operation
fnmadd.h f28, f16, f1, f14, rmm # perform operation
fnmadd.h f28, f16, f1, f14, rne # perform operation
fnmadd.h f28, f16, f1, f14, rtz # perform operation
fnmadd.h f28, f16, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f16, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f16, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f16, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f16, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f16, f1, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x3c00)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f19, 0(x2) # load 0x0000bc00 from memory into f19
la x2, scratch
li x3, 0x4b172388ad8b2f2b # load x3 with value 0x4b172388ad8b2f2b
sw x3, 0(x2) # store 0x4b172388ad8b2f2b in memory
flh f25, 0(x2) # load 0x4b172388ad8b2f2b from memory into f25
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
fnmadd.h f26, f19, f25, f8, dyn # perform operation
fnmadd.h f26, f19, f25, f8, rdn # perform operation
fnmadd.h f26, f19, f25, f8, rmm # perform operation
fnmadd.h f26, f19, f25, f8, rne # perform operation
fnmadd.h f26, f19, f25, f8, rtz # perform operation
fnmadd.h f26, f19, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f19, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f19, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f19, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f19, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f19, f25, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xbc00)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f10, 0(x2) # load 0x0000bc00 from memory into f10
la x2, scratch
li x3, 0x572b93094a12466b # load x3 with value 0x572b93094a12466b
sw x3, 0(x2) # store 0x572b93094a12466b in memory
flh f22, 0(x2) # load 0x572b93094a12466b from memory into f22
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f16, 0(x2) # load 0x0000bc00 from memory into f16
fnmadd.h f29, f10, f22, f16, dyn # perform operation
fnmadd.h f29, f10, f22, f16, rdn # perform operation
fnmadd.h f29, f10, f22, f16, rmm # perform operation
fnmadd.h f29, f10, f22, f16, rne # perform operation
fnmadd.h f29, f10, f22, f16, rtz # perform operation
fnmadd.h f29, f10, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f10, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f10, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f10, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f10, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f10, f22, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x3e00)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f5, 0(x2) # load 0x0000bc00 from memory into f5
la x2, scratch
li x3, 0x469e2194829fc314 # load x3 with value 0x469e2194829fc314
sw x3, 0(x2) # store 0x469e2194829fc314 in memory
flh f28, 0(x2) # load 0x469e2194829fc314 from memory into f28
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f17, 0(x2) # load 0x00003e00 from memory into f17
fnmadd.h f2, f5, f28, f17, dyn # perform operation
fnmadd.h f2, f5, f28, f17, rdn # perform operation
fnmadd.h f2, f5, f28, f17, rmm # perform operation
fnmadd.h f2, f5, f28, f17, rne # perform operation
fnmadd.h f2, f5, f28, f17, rtz # perform operation
fnmadd.h f2, f5, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f5, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f5, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f5, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f5, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f5, f28, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xbe00)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f2, 0(x2) # load 0x0000bc00 from memory into f2
la x2, scratch
li x3, 0xa852c3ec113f308c # load x3 with value 0xa852c3ec113f308c
sw x3, 0(x2) # store 0xa852c3ec113f308c in memory
flh f13, 0(x2) # load 0xa852c3ec113f308c from memory into f13
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f28, 0(x2) # load 0x0000be00 from memory into f28
fnmadd.h f10, f2, f13, f28, dyn # perform operation
fnmadd.h f10, f2, f13, f28, rdn # perform operation
fnmadd.h f10, f2, f13, f28, rmm # perform operation
fnmadd.h f10, f2, f13, f28, rne # perform operation
fnmadd.h f10, f2, f13, f28, rtz # perform operation
fnmadd.h f10, f2, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f2, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f2, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f2, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f2, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f2, f13, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x4000)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f10, 0(x2) # load 0x0000bc00 from memory into f10
la x2, scratch
li x3, 0x49230f7ddb94456d # load x3 with value 0x49230f7ddb94456d
sw x3, 0(x2) # store 0x49230f7ddb94456d in memory
flh f13, 0(x2) # load 0x49230f7ddb94456d from memory into f13
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f31, 0(x2) # load 0x00004000 from memory into f31
fnmadd.h f25, f10, f13, f31, dyn # perform operation
fnmadd.h f25, f10, f13, f31, rdn # perform operation
fnmadd.h f25, f10, f13, f31, rmm # perform operation
fnmadd.h f25, f10, f13, f31, rne # perform operation
fnmadd.h f25, f10, f13, f31, rtz # perform operation
fnmadd.h f25, f10, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f10, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f10, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f10, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f10, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f10, f13, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xc000)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f13, 0(x2) # load 0x0000bc00 from memory into f13
la x2, scratch
li x3, 0x4bbb0781a957187d # load x3 with value 0x4bbb0781a957187d
sw x3, 0(x2) # store 0x4bbb0781a957187d in memory
flh f23, 0(x2) # load 0x4bbb0781a957187d from memory into f23
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f1, 0(x2) # load 0x0000c000 from memory into f1
fnmadd.h f17, f13, f23, f1, dyn # perform operation
fnmadd.h f17, f13, f23, f1, rdn # perform operation
fnmadd.h f17, f13, f23, f1, rmm # perform operation
fnmadd.h f17, f13, f23, f1, rne # perform operation
fnmadd.h f17, f13, f23, f1, rtz # perform operation
fnmadd.h f17, f13, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f13, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f13, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f13, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f13, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f13, f23, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x400)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f15, 0(x2) # load 0x0000bc00 from memory into f15
la x2, scratch
li x3, 0xdd13dc3d337b1ee8 # load x3 with value 0xdd13dc3d337b1ee8
sw x3, 0(x2) # store 0xdd13dc3d337b1ee8 in memory
flh f12, 0(x2) # load 0xdd13dc3d337b1ee8 from memory into f12
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f24, 0(x2) # load 0x00000400 from memory into f24
fnmadd.h f19, f15, f12, f24, dyn # perform operation
fnmadd.h f19, f15, f12, f24, rdn # perform operation
fnmadd.h f19, f15, f12, f24, rmm # perform operation
fnmadd.h f19, f15, f12, f24, rne # perform operation
fnmadd.h f19, f15, f12, f24, rtz # perform operation
fnmadd.h f19, f15, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f15, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f15, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f15, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f15, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f15, f12, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x8400)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f1, 0(x2) # load 0x0000bc00 from memory into f1
la x2, scratch
li x3, 0x830e8467d9958253 # load x3 with value 0x830e8467d9958253
sw x3, 0(x2) # store 0x830e8467d9958253 in memory
flh f27, 0(x2) # load 0x830e8467d9958253 from memory into f27
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f16, 0(x2) # load 0x00008400 from memory into f16
fnmadd.h f10, f1, f27, f16, dyn # perform operation
fnmadd.h f10, f1, f27, f16, rdn # perform operation
fnmadd.h f10, f1, f27, f16, rmm # perform operation
fnmadd.h f10, f1, f27, f16, rne # perform operation
fnmadd.h f10, f1, f27, f16, rtz # perform operation
fnmadd.h f10, f1, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f1, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f1, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f1, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f1, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f1, f27, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7bff)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f9, 0(x2) # load 0x0000bc00 from memory into f9
la x2, scratch
li x3, 0xa953d20667ccf0dd # load x3 with value 0xa953d20667ccf0dd
sw x3, 0(x2) # store 0xa953d20667ccf0dd in memory
flh f8, 0(x2) # load 0xa953d20667ccf0dd from memory into f8
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f20, 0(x2) # load 0x00007bff from memory into f20
fnmadd.h f10, f9, f8, f20, dyn # perform operation
fnmadd.h f10, f9, f8, f20, rdn # perform operation
fnmadd.h f10, f9, f8, f20, rmm # perform operation
fnmadd.h f10, f9, f8, f20, rne # perform operation
fnmadd.h f10, f9, f8, f20, rtz # perform operation
fnmadd.h f10, f9, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f9, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f9, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f9, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f9, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f9, f8, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xfbff)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f20, 0(x2) # load 0x0000bc00 from memory into f20
la x2, scratch
li x3, 0xa59749ea1d754a5e # load x3 with value 0xa59749ea1d754a5e
sw x3, 0(x2) # store 0xa59749ea1d754a5e in memory
flh f3, 0(x2) # load 0xa59749ea1d754a5e from memory into f3
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f26, 0(x2) # load 0x0000fbff from memory into f26
fnmadd.h f21, f20, f3, f26, dyn # perform operation
fnmadd.h f21, f20, f3, f26, rdn # perform operation
fnmadd.h f21, f20, f3, f26, rmm # perform operation
fnmadd.h f21, f20, f3, f26, rne # perform operation
fnmadd.h f21, f20, f3, f26, rtz # perform operation
fnmadd.h f21, f20, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f20, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f20, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f20, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f20, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f20, f3, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x3ff)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f23, 0(x2) # load 0x0000bc00 from memory into f23
la x2, scratch
li x3, 0x4b394898b2d335f5 # load x3 with value 0x4b394898b2d335f5
sw x3, 0(x2) # store 0x4b394898b2d335f5 in memory
flh f22, 0(x2) # load 0x4b394898b2d335f5 from memory into f22
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f5, 0(x2) # load 0x000003ff from memory into f5
fnmadd.h f31, f23, f22, f5, dyn # perform operation
fnmadd.h f31, f23, f22, f5, rdn # perform operation
fnmadd.h f31, f23, f22, f5, rmm # perform operation
fnmadd.h f31, f23, f22, f5, rne # perform operation
fnmadd.h f31, f23, f22, f5, rtz # perform operation
fnmadd.h f31, f23, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f23, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f23, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f23, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f23, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f23, f22, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x83ff)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f8, 0(x2) # load 0x0000bc00 from memory into f8
la x2, scratch
li x3, 0x50358b82cafecd81 # load x3 with value 0x50358b82cafecd81
sw x3, 0(x2) # store 0x50358b82cafecd81 in memory
flh f26, 0(x2) # load 0x50358b82cafecd81 from memory into f26
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
fnmadd.h f19, f8, f26, f18, dyn # perform operation
fnmadd.h f19, f8, f26, f18, rdn # perform operation
fnmadd.h f19, f8, f26, f18, rmm # perform operation
fnmadd.h f19, f8, f26, f18, rne # perform operation
fnmadd.h f19, f8, f26, f18, rtz # perform operation
fnmadd.h f19, f8, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f8, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f8, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f8, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f8, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f8, f26, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x200)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f21, 0(x2) # load 0x0000bc00 from memory into f21
la x2, scratch
li x3, 0x3efcfd0caceaa0f # load x3 with value 0x3efcfd0caceaa0f
sw x3, 0(x2) # store 0x3efcfd0caceaa0f in memory
flh f6, 0(x2) # load 0x3efcfd0caceaa0f from memory into f6
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f17, 0(x2) # load 0x00000200 from memory into f17
fnmadd.h f11, f21, f6, f17, dyn # perform operation
fnmadd.h f11, f21, f6, f17, rdn # perform operation
fnmadd.h f11, f21, f6, f17, rmm # perform operation
fnmadd.h f11, f21, f6, f17, rne # perform operation
fnmadd.h f11, f21, f6, f17, rtz # perform operation
fnmadd.h f11, f21, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f21, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f21, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f21, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f21, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f21, f6, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x8200)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f17, 0(x2) # load 0x0000bc00 from memory into f17
la x2, scratch
li x3, 0xd089bae0dfbbb797 # load x3 with value 0xd089bae0dfbbb797
sw x3, 0(x2) # store 0xd089bae0dfbbb797 in memory
flh f15, 0(x2) # load 0xd089bae0dfbbb797 from memory into f15
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f28, 0(x2) # load 0x00008200 from memory into f28
fnmadd.h f14, f17, f15, f28, dyn # perform operation
fnmadd.h f14, f17, f15, f28, rdn # perform operation
fnmadd.h f14, f17, f15, f28, rmm # perform operation
fnmadd.h f14, f17, f15, f28, rne # perform operation
fnmadd.h f14, f17, f15, f28, rtz # perform operation
fnmadd.h f14, f17, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f17, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f17, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f17, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f17, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f17, f15, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x1)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f2, 0(x2) # load 0x0000bc00 from memory into f2
la x2, scratch
li x3, 0xabd79b09dbb383e3 # load x3 with value 0xabd79b09dbb383e3
sw x3, 0(x2) # store 0xabd79b09dbb383e3 in memory
flh f26, 0(x2) # load 0xabd79b09dbb383e3 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f13, 0(x2) # load 0x00000001 from memory into f13
fnmadd.h f27, f2, f26, f13, dyn # perform operation
fnmadd.h f27, f2, f26, f13, rdn # perform operation
fnmadd.h f27, f2, f26, f13, rmm # perform operation
fnmadd.h f27, f2, f26, f13, rne # perform operation
fnmadd.h f27, f2, f26, f13, rtz # perform operation
fnmadd.h f27, f2, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f2, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f2, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f2, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f2, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f2, f26, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x8001)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f9, 0(x2) # load 0x0000bc00 from memory into f9
la x2, scratch
li x3, 0x41ee6ca2e021f0a4 # load x3 with value 0x41ee6ca2e021f0a4
sw x3, 0(x2) # store 0x41ee6ca2e021f0a4 in memory
flh f3, 0(x2) # load 0x41ee6ca2e021f0a4 from memory into f3
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f21, 0(x2) # load 0x00008001 from memory into f21
fnmadd.h f7, f9, f3, f21, dyn # perform operation
fnmadd.h f7, f9, f3, f21, rdn # perform operation
fnmadd.h f7, f9, f3, f21, rmm # perform operation
fnmadd.h f7, f9, f3, f21, rne # perform operation
fnmadd.h f7, f9, f3, f21, rtz # perform operation
fnmadd.h f7, f9, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f9, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f9, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f9, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f9, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f9, f3, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7c00)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f14, 0(x2) # load 0x0000bc00 from memory into f14
la x2, scratch
li x3, 0x6c15620b18a29a4a # load x3 with value 0x6c15620b18a29a4a
sw x3, 0(x2) # store 0x6c15620b18a29a4a in memory
flh f24, 0(x2) # load 0x6c15620b18a29a4a from memory into f24
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f11, 0(x2) # load 0x00007c00 from memory into f11
fnmadd.h f21, f14, f24, f11, dyn # perform operation
fnmadd.h f21, f14, f24, f11, rdn # perform operation
fnmadd.h f21, f14, f24, f11, rmm # perform operation
fnmadd.h f21, f14, f24, f11, rne # perform operation
fnmadd.h f21, f14, f24, f11, rtz # perform operation
fnmadd.h f21, f14, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f14, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f14, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f14, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f14, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f14, f24, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xfc00)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f28, 0(x2) # load 0x0000bc00 from memory into f28
la x2, scratch
li x3, 0x70dcf3ba199d9610 # load x3 with value 0x70dcf3ba199d9610
sw x3, 0(x2) # store 0x70dcf3ba199d9610 in memory
flh f12, 0(x2) # load 0x70dcf3ba199d9610 from memory into f12
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f2, 0(x2) # load 0x0000fc00 from memory into f2
fnmadd.h f25, f28, f12, f2, dyn # perform operation
fnmadd.h f25, f28, f12, f2, rdn # perform operation
fnmadd.h f25, f28, f12, f2, rmm # perform operation
fnmadd.h f25, f28, f12, f2, rne # perform operation
fnmadd.h f25, f28, f12, f2, rtz # perform operation
fnmadd.h f25, f28, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f28, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f28, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f28, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f28, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f28, f12, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7e00)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f5, 0(x2) # load 0x0000bc00 from memory into f5
la x2, scratch
li x3, 0x5f8b5d10fadd2b7b # load x3 with value 0x5f8b5d10fadd2b7b
sw x3, 0(x2) # store 0x5f8b5d10fadd2b7b in memory
flh f25, 0(x2) # load 0x5f8b5d10fadd2b7b from memory into f25
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f22, 0(x2) # load 0x00007e00 from memory into f22
fnmadd.h f27, f5, f25, f22, dyn # perform operation
fnmadd.h f27, f5, f25, f22, rdn # perform operation
fnmadd.h f27, f5, f25, f22, rmm # perform operation
fnmadd.h f27, f5, f25, f22, rne # perform operation
fnmadd.h f27, f5, f25, f22, rtz # perform operation
fnmadd.h f27, f5, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f5, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f5, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f5, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f5, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f5, f25, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7fff)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f17, 0(x2) # load 0x0000bc00 from memory into f17
la x2, scratch
li x3, 0x144e50843c269400 # load x3 with value 0x144e50843c269400
sw x3, 0(x2) # store 0x144e50843c269400 in memory
flh f28, 0(x2) # load 0x144e50843c269400 from memory into f28
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f19, 0(x2) # load 0x00007fff from memory into f19
fnmadd.h f18, f17, f28, f19, dyn # perform operation
fnmadd.h f18, f17, f28, f19, rdn # perform operation
fnmadd.h f18, f17, f28, f19, rmm # perform operation
fnmadd.h f18, f17, f28, f19, rne # perform operation
fnmadd.h f18, f17, f28, f19, rtz # perform operation
fnmadd.h f18, f17, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f17, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f17, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f17, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f17, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f17, f28, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xfe00)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f1, 0(x2) # load 0x0000bc00 from memory into f1
la x2, scratch
li x3, 0xa01faddbfe99fa27 # load x3 with value 0xa01faddbfe99fa27
sw x3, 0(x2) # store 0xa01faddbfe99fa27 in memory
flh f14, 0(x2) # load 0xa01faddbfe99fa27 from memory into f14
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f29, 0(x2) # load 0x0000fe00 from memory into f29
fnmadd.h f7, f1, f14, f29, dyn # perform operation
fnmadd.h f7, f1, f14, f29, rdn # perform operation
fnmadd.h f7, f1, f14, f29, rmm # perform operation
fnmadd.h f7, f1, f14, f29, rne # perform operation
fnmadd.h f7, f1, f14, f29, rtz # perform operation
fnmadd.h f7, f1, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f1, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f1, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f1, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f1, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f1, f14, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7c01)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f14, 0(x2) # load 0x0000bc00 from memory into f14
la x2, scratch
li x3, 0x1ea5f0f803f127f6 # load x3 with value 0x1ea5f0f803f127f6
sw x3, 0(x2) # store 0x1ea5f0f803f127f6 in memory
flh f8, 0(x2) # load 0x1ea5f0f803f127f6 from memory into f8
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f17, 0(x2) # load 0x00007c01 from memory into f17
fnmadd.h f5, f14, f8, f17, dyn # perform operation
fnmadd.h f5, f14, f8, f17, rdn # perform operation
fnmadd.h f5, f14, f8, f17, rmm # perform operation
fnmadd.h f5, f14, f8, f17, rne # perform operation
fnmadd.h f5, f14, f8, f17, rtz # perform operation
fnmadd.h f5, f14, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f14, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f14, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f14, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f14, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f14, f8, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7dff)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
la x2, scratch
li x3, 0x8ff8e0e23c360f86 # load x3 with value 0x8ff8e0e23c360f86
sw x3, 0(x2) # store 0x8ff8e0e23c360f86 in memory
flh f27, 0(x2) # load 0x8ff8e0e23c360f86 from memory into f27
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f20, 0(x2) # load 0x00007dff from memory into f20
fnmadd.h f1, f11, f27, f20, dyn # perform operation
fnmadd.h f1, f11, f27, f20, rdn # perform operation
fnmadd.h f1, f11, f27, f20, rmm # perform operation
fnmadd.h f1, f11, f27, f20, rne # perform operation
fnmadd.h f1, f11, f27, f20, rtz # perform operation
fnmadd.h f1, f11, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f11, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f11, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f11, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f11, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f11, f27, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xfc01)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f8, 0(x2) # load 0x0000bc00 from memory into f8
la x2, scratch
li x3, 0x8e96ee17a9aed2d0 # load x3 with value 0x8e96ee17a9aed2d0
sw x3, 0(x2) # store 0x8e96ee17a9aed2d0 in memory
flh f11, 0(x2) # load 0x8e96ee17a9aed2d0 from memory into f11
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f14, 0(x2) # load 0x0000fc01 from memory into f14
fnmadd.h f2, f8, f11, f14, dyn # perform operation
fnmadd.h f2, f8, f11, f14, rdn # perform operation
fnmadd.h f2, f8, f11, f14, rmm # perform operation
fnmadd.h f2, f8, f11, f14, rne # perform operation
fnmadd.h f2, f8, f11, f14, rtz # perform operation
fnmadd.h f2, f8, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f8, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f8, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f8, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f8, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f8, f11, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x58b4)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f28, 0(x2) # load 0x0000bc00 from memory into f28
la x2, scratch
li x3, 0x5fedbe600e3fba01 # load x3 with value 0x5fedbe600e3fba01
sw x3, 0(x2) # store 0x5fedbe600e3fba01 in memory
flh f29, 0(x2) # load 0x5fedbe600e3fba01 from memory into f29
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f12, 0(x2) # load 0x000058b4 from memory into f12
fnmadd.h f22, f28, f29, f12, dyn # perform operation
fnmadd.h f22, f28, f29, f12, rdn # perform operation
fnmadd.h f22, f28, f29, f12, rmm # perform operation
fnmadd.h f22, f28, f29, f12, rne # perform operation
fnmadd.h f22, f28, f29, f12, rtz # perform operation
fnmadd.h f22, f28, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f28, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f28, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f28, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f28, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f28, f29, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xc93a)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f23, 0(x2) # load 0x0000bc00 from memory into f23
la x2, scratch
li x3, 0xed2517bd65b44c05 # load x3 with value 0xed2517bd65b44c05
sw x3, 0(x2) # store 0xed2517bd65b44c05 in memory
flh f18, 0(x2) # load 0xed2517bd65b44c05 from memory into f18
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
fnmadd.h f16, f23, f18, f12, dyn # perform operation
fnmadd.h f16, f23, f18, f12, rdn # perform operation
fnmadd.h f16, f23, f18, f12, rmm # perform operation
fnmadd.h f16, f23, f18, f12, rne # perform operation
fnmadd.h f16, f23, f18, f12, rtz # perform operation
fnmadd.h f16, f23, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f23, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f23, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f23, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f23, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f23, f18, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x0)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f26, 0(x2) # load 0x00003e00 from memory into f26
la x2, scratch
li x3, 0xcb733e9269efd479 # load x3 with value 0xcb733e9269efd479
sw x3, 0(x2) # store 0xcb733e9269efd479 in memory
flh f28, 0(x2) # load 0xcb733e9269efd479 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f24, 0(x2) # load 0x00000000 from memory into f24
fnmadd.h f15, f26, f28, f24, dyn # perform operation
fnmadd.h f15, f26, f28, f24, rdn # perform operation
fnmadd.h f15, f26, f28, f24, rmm # perform operation
fnmadd.h f15, f26, f28, f24, rne # perform operation
fnmadd.h f15, f26, f28, f24, rtz # perform operation
fnmadd.h f15, f26, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f26, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f26, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f26, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f26, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f26, f28, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x8000)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f23, 0(x2) # load 0x00003e00 from memory into f23
la x2, scratch
li x3, 0x9559af56279b1c21 # load x3 with value 0x9559af56279b1c21
sw x3, 0(x2) # store 0x9559af56279b1c21 in memory
flh f30, 0(x2) # load 0x9559af56279b1c21 from memory into f30
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f21, 0(x2) # load 0x00008000 from memory into f21
fnmadd.h f11, f23, f30, f21, dyn # perform operation
fnmadd.h f11, f23, f30, f21, rdn # perform operation
fnmadd.h f11, f23, f30, f21, rmm # perform operation
fnmadd.h f11, f23, f30, f21, rne # perform operation
fnmadd.h f11, f23, f30, f21, rtz # perform operation
fnmadd.h f11, f23, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f23, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f23, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f23, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f23, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f23, f30, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f16, 0(x2) # load 0x00003e00 from memory into f16
la x2, scratch
li x3, 0x45bd5177448e7690 # load x3 with value 0x45bd5177448e7690
sw x3, 0(x2) # store 0x45bd5177448e7690 in memory
flh f30, 0(x2) # load 0x45bd5177448e7690 from memory into f30
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f12, 0(x2) # load 0x00003c00 from memory into f12
fnmadd.h f26, f16, f30, f12, dyn # perform operation
fnmadd.h f26, f16, f30, f12, rdn # perform operation
fnmadd.h f26, f16, f30, f12, rmm # perform operation
fnmadd.h f26, f16, f30, f12, rne # perform operation
fnmadd.h f26, f16, f30, f12, rtz # perform operation
fnmadd.h f26, f16, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f16, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f16, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f16, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f16, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f16, f30, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f14, 0(x2) # load 0x00003e00 from memory into f14
la x2, scratch
li x3, 0x41b8ddd6bd27b59d # load x3 with value 0x41b8ddd6bd27b59d
sw x3, 0(x2) # store 0x41b8ddd6bd27b59d in memory
flh f20, 0(x2) # load 0x41b8ddd6bd27b59d from memory into f20
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
fnmadd.h f6, f14, f20, f24, dyn # perform operation
fnmadd.h f6, f14, f20, f24, rdn # perform operation
fnmadd.h f6, f14, f20, f24, rmm # perform operation
fnmadd.h f6, f14, f20, f24, rne # perform operation
fnmadd.h f6, f14, f20, f24, rtz # perform operation
fnmadd.h f6, f14, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f14, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f14, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f14, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f14, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f14, f20, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
la x2, scratch
li x3, 0x5fd8b9eb764fd227 # load x3 with value 0x5fd8b9eb764fd227
sw x3, 0(x2) # store 0x5fd8b9eb764fd227 in memory
flh f3, 0(x2) # load 0x5fd8b9eb764fd227 from memory into f3
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f26, 0(x2) # load 0x00003e00 from memory into f26
fnmadd.h f17, f7, f3, f26, dyn # perform operation
fnmadd.h f17, f7, f3, f26, rdn # perform operation
fnmadd.h f17, f7, f3, f26, rmm # perform operation
fnmadd.h f17, f7, f3, f26, rne # perform operation
fnmadd.h f17, f7, f3, f26, rtz # perform operation
fnmadd.h f17, f7, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f7, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f7, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f7, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f7, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f7, f3, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f19, 0(x2) # load 0x00003e00 from memory into f19
la x2, scratch
li x3, 0xfc0eb8785d785e70 # load x3 with value 0xfc0eb8785d785e70
sw x3, 0(x2) # store 0xfc0eb8785d785e70 in memory
flh f18, 0(x2) # load 0xfc0eb8785d785e70 from memory into f18
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
fnmadd.h f7, f19, f18, f23, dyn # perform operation
fnmadd.h f7, f19, f18, f23, rdn # perform operation
fnmadd.h f7, f19, f18, f23, rmm # perform operation
fnmadd.h f7, f19, f18, f23, rne # perform operation
fnmadd.h f7, f19, f18, f23, rtz # perform operation
fnmadd.h f7, f19, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f19, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f19, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f19, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f19, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f19, f18, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x4000)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f31, 0(x2) # load 0x00003e00 from memory into f31
la x2, scratch
li x3, 0x62ed60dc7a400ad7 # load x3 with value 0x62ed60dc7a400ad7
sw x3, 0(x2) # store 0x62ed60dc7a400ad7 in memory
flh f27, 0(x2) # load 0x62ed60dc7a400ad7 from memory into f27
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f19, 0(x2) # load 0x00004000 from memory into f19
fnmadd.h f30, f31, f27, f19, dyn # perform operation
fnmadd.h f30, f31, f27, f19, rdn # perform operation
fnmadd.h f30, f31, f27, f19, rmm # perform operation
fnmadd.h f30, f31, f27, f19, rne # perform operation
fnmadd.h f30, f31, f27, f19, rtz # perform operation
fnmadd.h f30, f31, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f31, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f31, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f31, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f31, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f31, f27, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xc000)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
la x2, scratch
li x3, 0x28fa2f496544a599 # load x3 with value 0x28fa2f496544a599
sw x3, 0(x2) # store 0x28fa2f496544a599 in memory
flh f1, 0(x2) # load 0x28fa2f496544a599 from memory into f1
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f15, 0(x2) # load 0x0000c000 from memory into f15
fnmadd.h f27, f10, f1, f15, dyn # perform operation
fnmadd.h f27, f10, f1, f15, rdn # perform operation
fnmadd.h f27, f10, f1, f15, rmm # perform operation
fnmadd.h f27, f10, f1, f15, rne # perform operation
fnmadd.h f27, f10, f1, f15, rtz # perform operation
fnmadd.h f27, f10, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f10, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f10, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f10, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f10, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f10, f1, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x400)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f30, 0(x2) # load 0x00003e00 from memory into f30
la x2, scratch
li x3, 0xc42953f6ee6f0e84 # load x3 with value 0xc42953f6ee6f0e84
sw x3, 0(x2) # store 0xc42953f6ee6f0e84 in memory
flh f15, 0(x2) # load 0xc42953f6ee6f0e84 from memory into f15
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f24, 0(x2) # load 0x00000400 from memory into f24
fnmadd.h f23, f30, f15, f24, dyn # perform operation
fnmadd.h f23, f30, f15, f24, rdn # perform operation
fnmadd.h f23, f30, f15, f24, rmm # perform operation
fnmadd.h f23, f30, f15, f24, rne # perform operation
fnmadd.h f23, f30, f15, f24, rtz # perform operation
fnmadd.h f23, f30, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f30, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f30, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f30, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f30, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f30, f15, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x8400)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f11, 0(x2) # load 0x00003e00 from memory into f11
la x2, scratch
li x3, 0xaa095389726aef8c # load x3 with value 0xaa095389726aef8c
sw x3, 0(x2) # store 0xaa095389726aef8c in memory
flh f7, 0(x2) # load 0xaa095389726aef8c from memory into f7
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f29, 0(x2) # load 0x00008400 from memory into f29
fnmadd.h f22, f11, f7, f29, dyn # perform operation
fnmadd.h f22, f11, f7, f29, rdn # perform operation
fnmadd.h f22, f11, f7, f29, rmm # perform operation
fnmadd.h f22, f11, f7, f29, rne # perform operation
fnmadd.h f22, f11, f7, f29, rtz # perform operation
fnmadd.h f22, f11, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f11, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f11, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f11, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f11, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f11, f7, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
la x2, scratch
li x3, 0x4bde0ae9b77582b9 # load x3 with value 0x4bde0ae9b77582b9
sw x3, 0(x2) # store 0x4bde0ae9b77582b9 in memory
flh f25, 0(x2) # load 0x4bde0ae9b77582b9 from memory into f25
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f20, 0(x2) # load 0x00007bff from memory into f20
fnmadd.h f21, f10, f25, f20, dyn # perform operation
fnmadd.h f21, f10, f25, f20, rdn # perform operation
fnmadd.h f21, f10, f25, f20, rmm # perform operation
fnmadd.h f21, f10, f25, f20, rne # perform operation
fnmadd.h f21, f10, f25, f20, rtz # perform operation
fnmadd.h f21, f10, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f10, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f10, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f10, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f10, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f10, f25, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
la x2, scratch
li x3, 0x7c3df61d4f01e7dd # load x3 with value 0x7c3df61d4f01e7dd
sw x3, 0(x2) # store 0x7c3df61d4f01e7dd in memory
flh f15, 0(x2) # load 0x7c3df61d4f01e7dd from memory into f15
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f26, 0(x2) # load 0x0000fbff from memory into f26
fnmadd.h f12, f21, f15, f26, dyn # perform operation
fnmadd.h f12, f21, f15, f26, rdn # perform operation
fnmadd.h f12, f21, f15, f26, rmm # perform operation
fnmadd.h f12, f21, f15, f26, rne # perform operation
fnmadd.h f12, f21, f15, f26, rtz # perform operation
fnmadd.h f12, f21, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f21, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f21, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f21, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f21, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f21, f15, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
la x2, scratch
li x3, 0x3910ec185a5a7bd5 # load x3 with value 0x3910ec185a5a7bd5
sw x3, 0(x2) # store 0x3910ec185a5a7bd5 in memory
flh f28, 0(x2) # load 0x3910ec185a5a7bd5 from memory into f28
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f31, 0(x2) # load 0x000003ff from memory into f31
fnmadd.h f30, f21, f28, f31, dyn # perform operation
fnmadd.h f30, f21, f28, f31, rdn # perform operation
fnmadd.h f30, f21, f28, f31, rmm # perform operation
fnmadd.h f30, f21, f28, f31, rne # perform operation
fnmadd.h f30, f21, f28, f31, rtz # perform operation
fnmadd.h f30, f21, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f21, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f21, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f21, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f21, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f21, f28, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f12, 0(x2) # load 0x00003e00 from memory into f12
la x2, scratch
li x3, 0x3d6378b9f0f35e78 # load x3 with value 0x3d6378b9f0f35e78
sw x3, 0(x2) # store 0x3d6378b9f0f35e78 in memory
flh f22, 0(x2) # load 0x3d6378b9f0f35e78 from memory into f22
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f8, 0(x2) # load 0x000083ff from memory into f8
fnmadd.h f9, f12, f22, f8, dyn # perform operation
fnmadd.h f9, f12, f22, f8, rdn # perform operation
fnmadd.h f9, f12, f22, f8, rmm # perform operation
fnmadd.h f9, f12, f22, f8, rne # perform operation
fnmadd.h f9, f12, f22, f8, rtz # perform operation
fnmadd.h f9, f12, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f12, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f12, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f12, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f12, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f12, f22, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x200)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f8, 0(x2) # load 0x00003e00 from memory into f8
la x2, scratch
li x3, 0x1b5b207f2255fb69 # load x3 with value 0x1b5b207f2255fb69
sw x3, 0(x2) # store 0x1b5b207f2255fb69 in memory
flh f15, 0(x2) # load 0x1b5b207f2255fb69 from memory into f15
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f14, 0(x2) # load 0x00000200 from memory into f14
fnmadd.h f1, f8, f15, f14, dyn # perform operation
fnmadd.h f1, f8, f15, f14, rdn # perform operation
fnmadd.h f1, f8, f15, f14, rmm # perform operation
fnmadd.h f1, f8, f15, f14, rne # perform operation
fnmadd.h f1, f8, f15, f14, rtz # perform operation
fnmadd.h f1, f8, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f8, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f8, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f8, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f8, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f8, f15, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x8200)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f8, 0(x2) # load 0x00003e00 from memory into f8
la x2, scratch
li x3, 0x37989869bac5de5c # load x3 with value 0x37989869bac5de5c
sw x3, 0(x2) # store 0x37989869bac5de5c in memory
flh f23, 0(x2) # load 0x37989869bac5de5c from memory into f23
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f31, 0(x2) # load 0x00008200 from memory into f31
fnmadd.h f7, f8, f23, f31, dyn # perform operation
fnmadd.h f7, f8, f23, f31, rdn # perform operation
fnmadd.h f7, f8, f23, f31, rmm # perform operation
fnmadd.h f7, f8, f23, f31, rne # perform operation
fnmadd.h f7, f8, f23, f31, rtz # perform operation
fnmadd.h f7, f8, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f8, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f8, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f8, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f8, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f8, f23, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x1)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f26, 0(x2) # load 0x00003e00 from memory into f26
la x2, scratch
li x3, 0xfed4b11ed8bc9ab6 # load x3 with value 0xfed4b11ed8bc9ab6
sw x3, 0(x2) # store 0xfed4b11ed8bc9ab6 in memory
flh f1, 0(x2) # load 0xfed4b11ed8bc9ab6 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
fnmadd.h f11, f26, f1, f10, dyn # perform operation
fnmadd.h f11, f26, f1, f10, rdn # perform operation
fnmadd.h f11, f26, f1, f10, rmm # perform operation
fnmadd.h f11, f26, f1, f10, rne # perform operation
fnmadd.h f11, f26, f1, f10, rtz # perform operation
fnmadd.h f11, f26, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f26, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f26, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f26, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f26, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f26, f1, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x8001)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f3, 0(x2) # load 0x00003e00 from memory into f3
la x2, scratch
li x3, 0x294d55292ff87f20 # load x3 with value 0x294d55292ff87f20
sw x3, 0(x2) # store 0x294d55292ff87f20 in memory
flh f22, 0(x2) # load 0x294d55292ff87f20 from memory into f22
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f20, 0(x2) # load 0x00008001 from memory into f20
fnmadd.h f11, f3, f22, f20, dyn # perform operation
fnmadd.h f11, f3, f22, f20, rdn # perform operation
fnmadd.h f11, f3, f22, f20, rmm # perform operation
fnmadd.h f11, f3, f22, f20, rne # perform operation
fnmadd.h f11, f3, f22, f20, rtz # perform operation
fnmadd.h f11, f3, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f3, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f3, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f3, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f3, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f3, f22, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f15, 0(x2) # load 0x00003e00 from memory into f15
la x2, scratch
li x3, 0x3fe36122f4b4b2f5 # load x3 with value 0x3fe36122f4b4b2f5
sw x3, 0(x2) # store 0x3fe36122f4b4b2f5 in memory
flh f25, 0(x2) # load 0x3fe36122f4b4b2f5 from memory into f25
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f11, 0(x2) # load 0x00007c00 from memory into f11
fnmadd.h f20, f15, f25, f11, dyn # perform operation
fnmadd.h f20, f15, f25, f11, rdn # perform operation
fnmadd.h f20, f15, f25, f11, rmm # perform operation
fnmadd.h f20, f15, f25, f11, rne # perform operation
fnmadd.h f20, f15, f25, f11, rtz # perform operation
fnmadd.h f20, f15, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f15, f25, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f31, 0(x2) # load 0x00003e00 from memory into f31
la x2, scratch
li x3, 0xe83c74c4ca3f0e8b # load x3 with value 0xe83c74c4ca3f0e8b
sw x3, 0(x2) # store 0xe83c74c4ca3f0e8b in memory
flh f29, 0(x2) # load 0xe83c74c4ca3f0e8b from memory into f29
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f13, 0(x2) # load 0x0000fc00 from memory into f13
fnmadd.h f6, f31, f29, f13, dyn # perform operation
fnmadd.h f6, f31, f29, f13, rdn # perform operation
fnmadd.h f6, f31, f29, f13, rmm # perform operation
fnmadd.h f6, f31, f29, f13, rne # perform operation
fnmadd.h f6, f31, f29, f13, rtz # perform operation
fnmadd.h f6, f31, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f31, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f31, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f31, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f31, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f31, f29, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f15, 0(x2) # load 0x00003e00 from memory into f15
la x2, scratch
li x3, 0xffbda6313aacceea # load x3 with value 0xffbda6313aacceea
sw x3, 0(x2) # store 0xffbda6313aacceea in memory
flh f25, 0(x2) # load 0xffbda6313aacceea from memory into f25
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f22, 0(x2) # load 0x00007e00 from memory into f22
fnmadd.h f2, f15, f25, f22, dyn # perform operation
fnmadd.h f2, f15, f25, f22, rdn # perform operation
fnmadd.h f2, f15, f25, f22, rmm # perform operation
fnmadd.h f2, f15, f25, f22, rne # perform operation
fnmadd.h f2, f15, f25, f22, rtz # perform operation
fnmadd.h f2, f15, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f15, f25, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f30, 0(x2) # load 0x00003e00 from memory into f30
la x2, scratch
li x3, 0x2b6d07594ab0c73f # load x3 with value 0x2b6d07594ab0c73f
sw x3, 0(x2) # store 0x2b6d07594ab0c73f in memory
flh f13, 0(x2) # load 0x2b6d07594ab0c73f from memory into f13
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f25, 0(x2) # load 0x00007fff from memory into f25
fnmadd.h f9, f30, f13, f25, dyn # perform operation
fnmadd.h f9, f30, f13, f25, rdn # perform operation
fnmadd.h f9, f30, f13, f25, rmm # perform operation
fnmadd.h f9, f30, f13, f25, rne # perform operation
fnmadd.h f9, f30, f13, f25, rtz # perform operation
fnmadd.h f9, f30, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f30, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f30, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f30, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f30, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f30, f13, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f11, 0(x2) # load 0x00003e00 from memory into f11
la x2, scratch
li x3, 0x4c52adf610f7056c # load x3 with value 0x4c52adf610f7056c
sw x3, 0(x2) # store 0x4c52adf610f7056c in memory
flh f29, 0(x2) # load 0x4c52adf610f7056c from memory into f29
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f30, 0(x2) # load 0x0000fe00 from memory into f30
fnmadd.h f3, f11, f29, f30, dyn # perform operation
fnmadd.h f3, f11, f29, f30, rdn # perform operation
fnmadd.h f3, f11, f29, f30, rmm # perform operation
fnmadd.h f3, f11, f29, f30, rne # perform operation
fnmadd.h f3, f11, f29, f30, rtz # perform operation
fnmadd.h f3, f11, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f11, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f11, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f11, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f11, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f11, f29, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
la x2, scratch
li x3, 0x1a5f2558a367f26d # load x3 with value 0x1a5f2558a367f26d
sw x3, 0(x2) # store 0x1a5f2558a367f26d in memory
flh f5, 0(x2) # load 0x1a5f2558a367f26d from memory into f5
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f23, 0(x2) # load 0x00007c01 from memory into f23
fnmadd.h f25, f10, f5, f23, dyn # perform operation
fnmadd.h f25, f10, f5, f23, rdn # perform operation
fnmadd.h f25, f10, f5, f23, rmm # perform operation
fnmadd.h f25, f10, f5, f23, rne # perform operation
fnmadd.h f25, f10, f5, f23, rtz # perform operation
fnmadd.h f25, f10, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f10, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f10, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f10, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f10, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f10, f5, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f6, 0(x2) # load 0x00003e00 from memory into f6
la x2, scratch
li x3, 0xd1826d608604925d # load x3 with value 0xd1826d608604925d
sw x3, 0(x2) # store 0xd1826d608604925d in memory
flh f19, 0(x2) # load 0xd1826d608604925d from memory into f19
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f2, 0(x2) # load 0x00007dff from memory into f2
fnmadd.h f5, f6, f19, f2, dyn # perform operation
fnmadd.h f5, f6, f19, f2, rdn # perform operation
fnmadd.h f5, f6, f19, f2, rmm # perform operation
fnmadd.h f5, f6, f19, f2, rne # perform operation
fnmadd.h f5, f6, f19, f2, rtz # perform operation
fnmadd.h f5, f6, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f6, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f6, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f6, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f6, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f6, f19, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f31, 0(x2) # load 0x00003e00 from memory into f31
la x2, scratch
li x3, 0xb6832a3d7c0b6b7 # load x3 with value 0xb6832a3d7c0b6b7
sw x3, 0(x2) # store 0xb6832a3d7c0b6b7 in memory
flh f21, 0(x2) # load 0xb6832a3d7c0b6b7 from memory into f21
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f29, 0(x2) # load 0x0000fc01 from memory into f29
fnmadd.h f14, f31, f21, f29, dyn # perform operation
fnmadd.h f14, f31, f21, f29, rdn # perform operation
fnmadd.h f14, f31, f21, f29, rmm # perform operation
fnmadd.h f14, f31, f21, f29, rne # perform operation
fnmadd.h f14, f31, f21, f29, rtz # perform operation
fnmadd.h f14, f31, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f31, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f31, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f31, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f31, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f31, f21, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f12, 0(x2) # load 0x00003e00 from memory into f12
la x2, scratch
li x3, 0x613e8ee19c0ec936 # load x3 with value 0x613e8ee19c0ec936
sw x3, 0(x2) # store 0x613e8ee19c0ec936 in memory
flh f31, 0(x2) # load 0x613e8ee19c0ec936 from memory into f31
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f5, 0(x2) # load 0x000058b4 from memory into f5
fnmadd.h f21, f12, f31, f5, dyn # perform operation
fnmadd.h f21, f12, f31, f5, rdn # perform operation
fnmadd.h f21, f12, f31, f5, rmm # perform operation
fnmadd.h f21, f12, f31, f5, rne # perform operation
fnmadd.h f21, f12, f31, f5, rtz # perform operation
fnmadd.h f21, f12, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f12, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f12, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f12, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f12, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f12, f31, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
la x2, scratch
li x3, 0xc0518f89bccf4a0a # load x3 with value 0xc0518f89bccf4a0a
sw x3, 0(x2) # store 0xc0518f89bccf4a0a in memory
flh f22, 0(x2) # load 0xc0518f89bccf4a0a from memory into f22
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f2, 0(x2) # load 0x0000c93a from memory into f2
fnmadd.h f28, f21, f22, f2, dyn # perform operation
fnmadd.h f28, f21, f22, f2, rdn # perform operation
fnmadd.h f28, f21, f22, f2, rmm # perform operation
fnmadd.h f28, f21, f22, f2, rne # perform operation
fnmadd.h f28, f21, f22, f2, rtz # perform operation
fnmadd.h f28, f21, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f21, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f21, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f21, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f21, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f21, f22, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x0)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f21, 0(x2) # load 0x0000be00 from memory into f21
la x2, scratch
li x3, 0xf347c80d3345ea81 # load x3 with value 0xf347c80d3345ea81
sw x3, 0(x2) # store 0xf347c80d3345ea81 in memory
flh f8, 0(x2) # load 0xf347c80d3345ea81 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f12, 0(x2) # load 0x00000000 from memory into f12
fnmadd.h f20, f21, f8, f12, dyn # perform operation
fnmadd.h f20, f21, f8, f12, rdn # perform operation
fnmadd.h f20, f21, f8, f12, rmm # perform operation
fnmadd.h f20, f21, f8, f12, rne # perform operation
fnmadd.h f20, f21, f8, f12, rtz # perform operation
fnmadd.h f20, f21, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f21, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f21, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f21, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f21, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f21, f8, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x8000)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f7, 0(x2) # load 0x0000be00 from memory into f7
la x2, scratch
li x3, 0xb4d8b24f49611637 # load x3 with value 0xb4d8b24f49611637
sw x3, 0(x2) # store 0xb4d8b24f49611637 in memory
flh f5, 0(x2) # load 0xb4d8b24f49611637 from memory into f5
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f30, 0(x2) # load 0x00008000 from memory into f30
fnmadd.h f21, f7, f5, f30, dyn # perform operation
fnmadd.h f21, f7, f5, f30, rdn # perform operation
fnmadd.h f21, f7, f5, f30, rmm # perform operation
fnmadd.h f21, f7, f5, f30, rne # perform operation
fnmadd.h f21, f7, f5, f30, rtz # perform operation
fnmadd.h f21, f7, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f7, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f7, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f7, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f7, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f7, f5, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x3c00)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f22, 0(x2) # load 0x0000be00 from memory into f22
la x2, scratch
li x3, 0x7aa607a60ee2e3b8 # load x3 with value 0x7aa607a60ee2e3b8
sw x3, 0(x2) # store 0x7aa607a60ee2e3b8 in memory
flh f26, 0(x2) # load 0x7aa607a60ee2e3b8 from memory into f26
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
fnmadd.h f15, f22, f26, f18, dyn # perform operation
fnmadd.h f15, f22, f26, f18, rdn # perform operation
fnmadd.h f15, f22, f26, f18, rmm # perform operation
fnmadd.h f15, f22, f26, f18, rne # perform operation
fnmadd.h f15, f22, f26, f18, rtz # perform operation
fnmadd.h f15, f22, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f22, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f22, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f22, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f22, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f22, f26, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xbc00)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f8, 0(x2) # load 0x0000be00 from memory into f8
la x2, scratch
li x3, 0x14b636723e033b7c # load x3 with value 0x14b636723e033b7c
sw x3, 0(x2) # store 0x14b636723e033b7c in memory
flh f26, 0(x2) # load 0x14b636723e033b7c from memory into f26
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f5, 0(x2) # load 0x0000bc00 from memory into f5
fnmadd.h f12, f8, f26, f5, dyn # perform operation
fnmadd.h f12, f8, f26, f5, rdn # perform operation
fnmadd.h f12, f8, f26, f5, rmm # perform operation
fnmadd.h f12, f8, f26, f5, rne # perform operation
fnmadd.h f12, f8, f26, f5, rtz # perform operation
fnmadd.h f12, f8, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f8, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f8, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f8, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f8, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f8, f26, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x3e00)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
la x2, scratch
li x3, 0xb10aecfd36420685 # load x3 with value 0xb10aecfd36420685
sw x3, 0(x2) # store 0xb10aecfd36420685 in memory
flh f17, 0(x2) # load 0xb10aecfd36420685 from memory into f17
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f30, 0(x2) # load 0x00003e00 from memory into f30
fnmadd.h f24, f14, f17, f30, dyn # perform operation
fnmadd.h f24, f14, f17, f30, rdn # perform operation
fnmadd.h f24, f14, f17, f30, rmm # perform operation
fnmadd.h f24, f14, f17, f30, rne # perform operation
fnmadd.h f24, f14, f17, f30, rtz # perform operation
fnmadd.h f24, f14, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f14, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f14, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f14, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f14, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f14, f17, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xbe00)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f16, 0(x2) # load 0x0000be00 from memory into f16
la x2, scratch
li x3, 0x645c95db44ddfa7a # load x3 with value 0x645c95db44ddfa7a
sw x3, 0(x2) # store 0x645c95db44ddfa7a in memory
flh f20, 0(x2) # load 0x645c95db44ddfa7a from memory into f20
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f22, 0(x2) # load 0x0000be00 from memory into f22
fnmadd.h f13, f16, f20, f22, dyn # perform operation
fnmadd.h f13, f16, f20, f22, rdn # perform operation
fnmadd.h f13, f16, f20, f22, rmm # perform operation
fnmadd.h f13, f16, f20, f22, rne # perform operation
fnmadd.h f13, f16, f20, f22, rtz # perform operation
fnmadd.h f13, f16, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f16, f20, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x4000)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f6, 0(x2) # load 0x0000be00 from memory into f6
la x2, scratch
li x3, 0xf47ebd7e61f4a0e8 # load x3 with value 0xf47ebd7e61f4a0e8
sw x3, 0(x2) # store 0xf47ebd7e61f4a0e8 in memory
flh f29, 0(x2) # load 0xf47ebd7e61f4a0e8 from memory into f29
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f31, 0(x2) # load 0x00004000 from memory into f31
fnmadd.h f16, f6, f29, f31, dyn # perform operation
fnmadd.h f16, f6, f29, f31, rdn # perform operation
fnmadd.h f16, f6, f29, f31, rmm # perform operation
fnmadd.h f16, f6, f29, f31, rne # perform operation
fnmadd.h f16, f6, f29, f31, rtz # perform operation
fnmadd.h f16, f6, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f6, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f6, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f6, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f6, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f6, f29, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xc000)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f7, 0(x2) # load 0x0000be00 from memory into f7
la x2, scratch
li x3, 0x94f7ef22ea172c01 # load x3 with value 0x94f7ef22ea172c01
sw x3, 0(x2) # store 0x94f7ef22ea172c01 in memory
flh f14, 0(x2) # load 0x94f7ef22ea172c01 from memory into f14
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f19, 0(x2) # load 0x0000c000 from memory into f19
fnmadd.h f10, f7, f14, f19, dyn # perform operation
fnmadd.h f10, f7, f14, f19, rdn # perform operation
fnmadd.h f10, f7, f14, f19, rmm # perform operation
fnmadd.h f10, f7, f14, f19, rne # perform operation
fnmadd.h f10, f7, f14, f19, rtz # perform operation
fnmadd.h f10, f7, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f7, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f7, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f7, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f7, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f7, f14, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x400)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f17, 0(x2) # load 0x0000be00 from memory into f17
la x2, scratch
li x3, 0x62b72df598e131d2 # load x3 with value 0x62b72df598e131d2
sw x3, 0(x2) # store 0x62b72df598e131d2 in memory
flh f1, 0(x2) # load 0x62b72df598e131d2 from memory into f1
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f15, 0(x2) # load 0x00000400 from memory into f15
fnmadd.h f16, f17, f1, f15, dyn # perform operation
fnmadd.h f16, f17, f1, f15, rdn # perform operation
fnmadd.h f16, f17, f1, f15, rmm # perform operation
fnmadd.h f16, f17, f1, f15, rne # perform operation
fnmadd.h f16, f17, f1, f15, rtz # perform operation
fnmadd.h f16, f17, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f17, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f17, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f17, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f17, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f17, f1, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x8400)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f26, 0(x2) # load 0x0000be00 from memory into f26
la x2, scratch
li x3, 0x3c178205662a5b05 # load x3 with value 0x3c178205662a5b05
sw x3, 0(x2) # store 0x3c178205662a5b05 in memory
flh f5, 0(x2) # load 0x3c178205662a5b05 from memory into f5
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f14, 0(x2) # load 0x00008400 from memory into f14
fnmadd.h f18, f26, f5, f14, dyn # perform operation
fnmadd.h f18, f26, f5, f14, rdn # perform operation
fnmadd.h f18, f26, f5, f14, rmm # perform operation
fnmadd.h f18, f26, f5, f14, rne # perform operation
fnmadd.h f18, f26, f5, f14, rtz # perform operation
fnmadd.h f18, f26, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f26, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f26, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f26, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f26, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f26, f5, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7bff)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
la x2, scratch
li x3, 0x76bd1e573ed753ef # load x3 with value 0x76bd1e573ed753ef
sw x3, 0(x2) # store 0x76bd1e573ed753ef in memory
flh f13, 0(x2) # load 0x76bd1e573ed753ef from memory into f13
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
fnmadd.h f8, f23, f13, f15, dyn # perform operation
fnmadd.h f8, f23, f13, f15, rdn # perform operation
fnmadd.h f8, f23, f13, f15, rmm # perform operation
fnmadd.h f8, f23, f13, f15, rne # perform operation
fnmadd.h f8, f23, f13, f15, rtz # perform operation
fnmadd.h f8, f23, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f23, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f23, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f23, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f23, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f23, f13, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xfbff)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f20, 0(x2) # load 0x0000be00 from memory into f20
la x2, scratch
li x3, 0x9ad328e4369a4ab7 # load x3 with value 0x9ad328e4369a4ab7
sw x3, 0(x2) # store 0x9ad328e4369a4ab7 in memory
flh f7, 0(x2) # load 0x9ad328e4369a4ab7 from memory into f7
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f24, 0(x2) # load 0x0000fbff from memory into f24
fnmadd.h f19, f20, f7, f24, dyn # perform operation
fnmadd.h f19, f20, f7, f24, rdn # perform operation
fnmadd.h f19, f20, f7, f24, rmm # perform operation
fnmadd.h f19, f20, f7, f24, rne # perform operation
fnmadd.h f19, f20, f7, f24, rtz # perform operation
fnmadd.h f19, f20, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f20, f7, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x3ff)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f18, 0(x2) # load 0x0000be00 from memory into f18
la x2, scratch
li x3, 0x3c16603efe2143e8 # load x3 with value 0x3c16603efe2143e8
sw x3, 0(x2) # store 0x3c16603efe2143e8 in memory
flh f31, 0(x2) # load 0x3c16603efe2143e8 from memory into f31
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
fnmadd.h f2, f18, f31, f20, dyn # perform operation
fnmadd.h f2, f18, f31, f20, rdn # perform operation
fnmadd.h f2, f18, f31, f20, rmm # perform operation
fnmadd.h f2, f18, f31, f20, rne # perform operation
fnmadd.h f2, f18, f31, f20, rtz # perform operation
fnmadd.h f2, f18, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f18, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f18, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f18, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f18, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f18, f31, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x83ff)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f29, 0(x2) # load 0x0000be00 from memory into f29
la x2, scratch
li x3, 0x44bacae49f4ed5af # load x3 with value 0x44bacae49f4ed5af
sw x3, 0(x2) # store 0x44bacae49f4ed5af in memory
flh f12, 0(x2) # load 0x44bacae49f4ed5af from memory into f12
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f11, 0(x2) # load 0x000083ff from memory into f11
fnmadd.h f1, f29, f12, f11, dyn # perform operation
fnmadd.h f1, f29, f12, f11, rdn # perform operation
fnmadd.h f1, f29, f12, f11, rmm # perform operation
fnmadd.h f1, f29, f12, f11, rne # perform operation
fnmadd.h f1, f29, f12, f11, rtz # perform operation
fnmadd.h f1, f29, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f29, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f29, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f29, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f29, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f29, f12, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x200)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f8, 0(x2) # load 0x0000be00 from memory into f8
la x2, scratch
li x3, 0xf994243f6e24ceb7 # load x3 with value 0xf994243f6e24ceb7
sw x3, 0(x2) # store 0xf994243f6e24ceb7 in memory
flh f17, 0(x2) # load 0xf994243f6e24ceb7 from memory into f17
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f12, 0(x2) # load 0x00000200 from memory into f12
fnmadd.h f3, f8, f17, f12, dyn # perform operation
fnmadd.h f3, f8, f17, f12, rdn # perform operation
fnmadd.h f3, f8, f17, f12, rmm # perform operation
fnmadd.h f3, f8, f17, f12, rne # perform operation
fnmadd.h f3, f8, f17, f12, rtz # perform operation
fnmadd.h f3, f8, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f8, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f8, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f8, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f8, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f8, f17, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x8200)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f13, 0(x2) # load 0x0000be00 from memory into f13
la x2, scratch
li x3, 0xd8e34974eae88002 # load x3 with value 0xd8e34974eae88002
sw x3, 0(x2) # store 0xd8e34974eae88002 in memory
flh f5, 0(x2) # load 0xd8e34974eae88002 from memory into f5
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f2, 0(x2) # load 0x00008200 from memory into f2
fnmadd.h f30, f13, f5, f2, dyn # perform operation
fnmadd.h f30, f13, f5, f2, rdn # perform operation
fnmadd.h f30, f13, f5, f2, rmm # perform operation
fnmadd.h f30, f13, f5, f2, rne # perform operation
fnmadd.h f30, f13, f5, f2, rtz # perform operation
fnmadd.h f30, f13, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f13, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f13, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f13, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f13, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f13, f5, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x1)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f28, 0(x2) # load 0x0000be00 from memory into f28
la x2, scratch
li x3, 0x206957988b006583 # load x3 with value 0x206957988b006583
sw x3, 0(x2) # store 0x206957988b006583 in memory
flh f16, 0(x2) # load 0x206957988b006583 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
fnmadd.h f25, f28, f16, f15, dyn # perform operation
fnmadd.h f25, f28, f16, f15, rdn # perform operation
fnmadd.h f25, f28, f16, f15, rmm # perform operation
fnmadd.h f25, f28, f16, f15, rne # perform operation
fnmadd.h f25, f28, f16, f15, rtz # perform operation
fnmadd.h f25, f28, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f28, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f28, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f28, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f28, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f28, f16, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x8001)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f11, 0(x2) # load 0x0000be00 from memory into f11
la x2, scratch
li x3, 0x40ec51758f4bd10b # load x3 with value 0x40ec51758f4bd10b
sw x3, 0(x2) # store 0x40ec51758f4bd10b in memory
flh f21, 0(x2) # load 0x40ec51758f4bd10b from memory into f21
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f3, 0(x2) # load 0x00008001 from memory into f3
fnmadd.h f16, f11, f21, f3, dyn # perform operation
fnmadd.h f16, f11, f21, f3, rdn # perform operation
fnmadd.h f16, f11, f21, f3, rmm # perform operation
fnmadd.h f16, f11, f21, f3, rne # perform operation
fnmadd.h f16, f11, f21, f3, rtz # perform operation
fnmadd.h f16, f11, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f11, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f11, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f11, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f11, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f11, f21, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7c00)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f22, 0(x2) # load 0x0000be00 from memory into f22
la x2, scratch
li x3, 0x1e14842ba56a32cf # load x3 with value 0x1e14842ba56a32cf
sw x3, 0(x2) # store 0x1e14842ba56a32cf in memory
flh f6, 0(x2) # load 0x1e14842ba56a32cf from memory into f6
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f29, 0(x2) # load 0x00007c00 from memory into f29
fnmadd.h f31, f22, f6, f29, dyn # perform operation
fnmadd.h f31, f22, f6, f29, rdn # perform operation
fnmadd.h f31, f22, f6, f29, rmm # perform operation
fnmadd.h f31, f22, f6, f29, rne # perform operation
fnmadd.h f31, f22, f6, f29, rtz # perform operation
fnmadd.h f31, f22, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f22, f6, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xfc00)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f18, 0(x2) # load 0x0000be00 from memory into f18
la x2, scratch
li x3, 0x3b913cacf5aea08b # load x3 with value 0x3b913cacf5aea08b
sw x3, 0(x2) # store 0x3b913cacf5aea08b in memory
flh f28, 0(x2) # load 0x3b913cacf5aea08b from memory into f28
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f14, 0(x2) # load 0x0000fc00 from memory into f14
fnmadd.h f13, f18, f28, f14, dyn # perform operation
fnmadd.h f13, f18, f28, f14, rdn # perform operation
fnmadd.h f13, f18, f28, f14, rmm # perform operation
fnmadd.h f13, f18, f28, f14, rne # perform operation
fnmadd.h f13, f18, f28, f14, rtz # perform operation
fnmadd.h f13, f18, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f18, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f18, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f18, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f18, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f18, f28, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7e00)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f19, 0(x2) # load 0x0000be00 from memory into f19
la x2, scratch
li x3, 0x613c53dcc3d61704 # load x3 with value 0x613c53dcc3d61704
sw x3, 0(x2) # store 0x613c53dcc3d61704 in memory
flh f11, 0(x2) # load 0x613c53dcc3d61704 from memory into f11
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f31, 0(x2) # load 0x00007e00 from memory into f31
fnmadd.h f12, f19, f11, f31, dyn # perform operation
fnmadd.h f12, f19, f11, f31, rdn # perform operation
fnmadd.h f12, f19, f11, f31, rmm # perform operation
fnmadd.h f12, f19, f11, f31, rne # perform operation
fnmadd.h f12, f19, f11, f31, rtz # perform operation
fnmadd.h f12, f19, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f19, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f19, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f19, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f19, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f19, f11, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7fff)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f17, 0(x2) # load 0x0000be00 from memory into f17
la x2, scratch
li x3, 0xaa4015901e4eb6fe # load x3 with value 0xaa4015901e4eb6fe
sw x3, 0(x2) # store 0xaa4015901e4eb6fe in memory
flh f18, 0(x2) # load 0xaa4015901e4eb6fe from memory into f18
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f3, 0(x2) # load 0x00007fff from memory into f3
fnmadd.h f2, f17, f18, f3, dyn # perform operation
fnmadd.h f2, f17, f18, f3, rdn # perform operation
fnmadd.h f2, f17, f18, f3, rmm # perform operation
fnmadd.h f2, f17, f18, f3, rne # perform operation
fnmadd.h f2, f17, f18, f3, rtz # perform operation
fnmadd.h f2, f17, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f17, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f17, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f17, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f17, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f17, f18, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xfe00)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f26, 0(x2) # load 0x0000be00 from memory into f26
la x2, scratch
li x3, 0xca40258a1c77a55c # load x3 with value 0xca40258a1c77a55c
sw x3, 0(x2) # store 0xca40258a1c77a55c in memory
flh f12, 0(x2) # load 0xca40258a1c77a55c from memory into f12
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f27, 0(x2) # load 0x0000fe00 from memory into f27
fnmadd.h f19, f26, f12, f27, dyn # perform operation
fnmadd.h f19, f26, f12, f27, rdn # perform operation
fnmadd.h f19, f26, f12, f27, rmm # perform operation
fnmadd.h f19, f26, f12, f27, rne # perform operation
fnmadd.h f19, f26, f12, f27, rtz # perform operation
fnmadd.h f19, f26, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f26, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f26, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f26, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f26, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f26, f12, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7c01)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f11, 0(x2) # load 0x0000be00 from memory into f11
la x2, scratch
li x3, 0x8f8132cac875b9a0 # load x3 with value 0x8f8132cac875b9a0
sw x3, 0(x2) # store 0x8f8132cac875b9a0 in memory
flh f30, 0(x2) # load 0x8f8132cac875b9a0 from memory into f30
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f18, 0(x2) # load 0x00007c01 from memory into f18
fnmadd.h f27, f11, f30, f18, dyn # perform operation
fnmadd.h f27, f11, f30, f18, rdn # perform operation
fnmadd.h f27, f11, f30, f18, rmm # perform operation
fnmadd.h f27, f11, f30, f18, rne # perform operation
fnmadd.h f27, f11, f30, f18, rtz # perform operation
fnmadd.h f27, f11, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f11, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f11, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f11, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f11, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f11, f30, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7dff)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f30, 0(x2) # load 0x0000be00 from memory into f30
la x2, scratch
li x3, 0xfa50e0909fad67f6 # load x3 with value 0xfa50e0909fad67f6
sw x3, 0(x2) # store 0xfa50e0909fad67f6 in memory
flh f6, 0(x2) # load 0xfa50e0909fad67f6 from memory into f6
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f12, 0(x2) # load 0x00007dff from memory into f12
fnmadd.h f19, f30, f6, f12, dyn # perform operation
fnmadd.h f19, f30, f6, f12, rdn # perform operation
fnmadd.h f19, f30, f6, f12, rmm # perform operation
fnmadd.h f19, f30, f6, f12, rne # perform operation
fnmadd.h f19, f30, f6, f12, rtz # perform operation
fnmadd.h f19, f30, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f30, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f30, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f30, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f30, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f30, f6, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xfc01)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
la x2, scratch
li x3, 0x3bc73540b5f6318 # load x3 with value 0x3bc73540b5f6318
sw x3, 0(x2) # store 0x3bc73540b5f6318 in memory
flh f20, 0(x2) # load 0x3bc73540b5f6318 from memory into f20
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f18, 0(x2) # load 0x0000fc01 from memory into f18
fnmadd.h f27, f1, f20, f18, dyn # perform operation
fnmadd.h f27, f1, f20, f18, rdn # perform operation
fnmadd.h f27, f1, f20, f18, rmm # perform operation
fnmadd.h f27, f1, f20, f18, rne # perform operation
fnmadd.h f27, f1, f20, f18, rtz # perform operation
fnmadd.h f27, f1, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f1, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f1, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f1, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f1, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f1, f20, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x58b4)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f9, 0(x2) # load 0x0000be00 from memory into f9
la x2, scratch
li x3, 0x7828e00f9352402c # load x3 with value 0x7828e00f9352402c
sw x3, 0(x2) # store 0x7828e00f9352402c in memory
flh f3, 0(x2) # load 0x7828e00f9352402c from memory into f3
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f27, 0(x2) # load 0x000058b4 from memory into f27
fnmadd.h f1, f9, f3, f27, dyn # perform operation
fnmadd.h f1, f9, f3, f27, rdn # perform operation
fnmadd.h f1, f9, f3, f27, rmm # perform operation
fnmadd.h f1, f9, f3, f27, rne # perform operation
fnmadd.h f1, f9, f3, f27, rtz # perform operation
fnmadd.h f1, f9, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f9, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f9, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f9, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f9, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f9, f3, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xc93a)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f30, 0(x2) # load 0x0000be00 from memory into f30
la x2, scratch
li x3, 0x66ff2f54cee0b2fb # load x3 with value 0x66ff2f54cee0b2fb
sw x3, 0(x2) # store 0x66ff2f54cee0b2fb in memory
flh f15, 0(x2) # load 0x66ff2f54cee0b2fb from memory into f15
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f1, 0(x2) # load 0x0000c93a from memory into f1
fnmadd.h f24, f30, f15, f1, dyn # perform operation
fnmadd.h f24, f30, f15, f1, rdn # perform operation
fnmadd.h f24, f30, f15, f1, rmm # perform operation
fnmadd.h f24, f30, f15, f1, rne # perform operation
fnmadd.h f24, f30, f15, f1, rtz # perform operation
fnmadd.h f24, f30, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f30, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f30, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f30, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f30, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f30, f15, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x0)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f15, 0(x2) # load 0x00004000 from memory into f15
la x2, scratch
li x3, 0x5da301d5997968db # load x3 with value 0x5da301d5997968db
sw x3, 0(x2) # store 0x5da301d5997968db in memory
flh f5, 0(x2) # load 0x5da301d5997968db from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f18, 0(x2) # load 0x00000000 from memory into f18
fnmadd.h f25, f15, f5, f18, dyn # perform operation
fnmadd.h f25, f15, f5, f18, rdn # perform operation
fnmadd.h f25, f15, f5, f18, rmm # perform operation
fnmadd.h f25, f15, f5, f18, rne # perform operation
fnmadd.h f25, f15, f5, f18, rtz # perform operation
fnmadd.h f25, f15, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f15, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f15, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f15, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f15, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f15, f5, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x8000)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f9, 0(x2) # load 0x00004000 from memory into f9
la x2, scratch
li x3, 0xb2c6938a6456d4bb # load x3 with value 0xb2c6938a6456d4bb
sw x3, 0(x2) # store 0xb2c6938a6456d4bb in memory
flh f10, 0(x2) # load 0xb2c6938a6456d4bb from memory into f10
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f15, 0(x2) # load 0x00008000 from memory into f15
fnmadd.h f2, f9, f10, f15, dyn # perform operation
fnmadd.h f2, f9, f10, f15, rdn # perform operation
fnmadd.h f2, f9, f10, f15, rmm # perform operation
fnmadd.h f2, f9, f10, f15, rne # perform operation
fnmadd.h f2, f9, f10, f15, rtz # perform operation
fnmadd.h f2, f9, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f9, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f9, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f9, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f9, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f9, f10, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f30, 0(x2) # load 0x00004000 from memory into f30
la x2, scratch
li x3, 0x60e1a81a5cb16675 # load x3 with value 0x60e1a81a5cb16675
sw x3, 0(x2) # store 0x60e1a81a5cb16675 in memory
flh f21, 0(x2) # load 0x60e1a81a5cb16675 from memory into f21
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f1, 0(x2) # load 0x00003c00 from memory into f1
fnmadd.h f17, f30, f21, f1, dyn # perform operation
fnmadd.h f17, f30, f21, f1, rdn # perform operation
fnmadd.h f17, f30, f21, f1, rmm # perform operation
fnmadd.h f17, f30, f21, f1, rne # perform operation
fnmadd.h f17, f30, f21, f1, rtz # perform operation
fnmadd.h f17, f30, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f30, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f30, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f30, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f30, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f30, f21, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f19, 0(x2) # load 0x00004000 from memory into f19
la x2, scratch
li x3, 0xc706917998249d1b # load x3 with value 0xc706917998249d1b
sw x3, 0(x2) # store 0xc706917998249d1b in memory
flh f2, 0(x2) # load 0xc706917998249d1b from memory into f2
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f7, 0(x2) # load 0x0000bc00 from memory into f7
fnmadd.h f15, f19, f2, f7, dyn # perform operation
fnmadd.h f15, f19, f2, f7, rdn # perform operation
fnmadd.h f15, f19, f2, f7, rmm # perform operation
fnmadd.h f15, f19, f2, f7, rne # perform operation
fnmadd.h f15, f19, f2, f7, rtz # perform operation
fnmadd.h f15, f19, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f19, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f19, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f19, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f19, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f19, f2, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f19, 0(x2) # load 0x00004000 from memory into f19
la x2, scratch
li x3, 0x4a211d880112d91b # load x3 with value 0x4a211d880112d91b
sw x3, 0(x2) # store 0x4a211d880112d91b in memory
flh f7, 0(x2) # load 0x4a211d880112d91b from memory into f7
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f22, 0(x2) # load 0x00003e00 from memory into f22
fnmadd.h f20, f19, f7, f22, dyn # perform operation
fnmadd.h f20, f19, f7, f22, rdn # perform operation
fnmadd.h f20, f19, f7, f22, rmm # perform operation
fnmadd.h f20, f19, f7, f22, rne # perform operation
fnmadd.h f20, f19, f7, f22, rtz # perform operation
fnmadd.h f20, f19, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f19, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f19, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f19, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f19, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f19, f7, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f3, 0(x2) # load 0x00004000 from memory into f3
la x2, scratch
li x3, 0x62cb5ad0be8676d6 # load x3 with value 0x62cb5ad0be8676d6
sw x3, 0(x2) # store 0x62cb5ad0be8676d6 in memory
flh f14, 0(x2) # load 0x62cb5ad0be8676d6 from memory into f14
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f17, 0(x2) # load 0x0000be00 from memory into f17
fnmadd.h f27, f3, f14, f17, dyn # perform operation
fnmadd.h f27, f3, f14, f17, rdn # perform operation
fnmadd.h f27, f3, f14, f17, rmm # perform operation
fnmadd.h f27, f3, f14, f17, rne # perform operation
fnmadd.h f27, f3, f14, f17, rtz # perform operation
fnmadd.h f27, f3, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f3, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f3, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f3, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f3, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f3, f14, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x4000)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f29, 0(x2) # load 0x00004000 from memory into f29
la x2, scratch
li x3, 0xbbd7788a4d4fed3f # load x3 with value 0xbbd7788a4d4fed3f
sw x3, 0(x2) # store 0xbbd7788a4d4fed3f in memory
flh f19, 0(x2) # load 0xbbd7788a4d4fed3f from memory into f19
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f5, 0(x2) # load 0x00004000 from memory into f5
fnmadd.h f24, f29, f19, f5, dyn # perform operation
fnmadd.h f24, f29, f19, f5, rdn # perform operation
fnmadd.h f24, f29, f19, f5, rmm # perform operation
fnmadd.h f24, f29, f19, f5, rne # perform operation
fnmadd.h f24, f29, f19, f5, rtz # perform operation
fnmadd.h f24, f29, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f29, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f29, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f29, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f29, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f29, f19, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xc000)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f16, 0(x2) # load 0x00004000 from memory into f16
la x2, scratch
li x3, 0x3b1b503b906a089b # load x3 with value 0x3b1b503b906a089b
sw x3, 0(x2) # store 0x3b1b503b906a089b in memory
flh f31, 0(x2) # load 0x3b1b503b906a089b from memory into f31
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f23, 0(x2) # load 0x0000c000 from memory into f23
fnmadd.h f5, f16, f31, f23, dyn # perform operation
fnmadd.h f5, f16, f31, f23, rdn # perform operation
fnmadd.h f5, f16, f31, f23, rmm # perform operation
fnmadd.h f5, f16, f31, f23, rne # perform operation
fnmadd.h f5, f16, f31, f23, rtz # perform operation
fnmadd.h f5, f16, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f16, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f16, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f16, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f16, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f16, f31, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x400)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f31, 0(x2) # load 0x00004000 from memory into f31
la x2, scratch
li x3, 0x81730b833a20496f # load x3 with value 0x81730b833a20496f
sw x3, 0(x2) # store 0x81730b833a20496f in memory
flh f30, 0(x2) # load 0x81730b833a20496f from memory into f30
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f14, 0(x2) # load 0x00000400 from memory into f14
fnmadd.h f28, f31, f30, f14, dyn # perform operation
fnmadd.h f28, f31, f30, f14, rdn # perform operation
fnmadd.h f28, f31, f30, f14, rmm # perform operation
fnmadd.h f28, f31, f30, f14, rne # perform operation
fnmadd.h f28, f31, f30, f14, rtz # perform operation
fnmadd.h f28, f31, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f31, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f31, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f31, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f31, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f31, f30, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x8400)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f13, 0(x2) # load 0x00004000 from memory into f13
la x2, scratch
li x3, 0x526d3813347627cb # load x3 with value 0x526d3813347627cb
sw x3, 0(x2) # store 0x526d3813347627cb in memory
flh f14, 0(x2) # load 0x526d3813347627cb from memory into f14
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f27, 0(x2) # load 0x00008400 from memory into f27
fnmadd.h f26, f13, f14, f27, dyn # perform operation
fnmadd.h f26, f13, f14, f27, rdn # perform operation
fnmadd.h f26, f13, f14, f27, rmm # perform operation
fnmadd.h f26, f13, f14, f27, rne # perform operation
fnmadd.h f26, f13, f14, f27, rtz # perform operation
fnmadd.h f26, f13, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f13, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f13, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f13, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f13, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f13, f14, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f22, 0(x2) # load 0x00004000 from memory into f22
la x2, scratch
li x3, 0xe8ba36011b5fa069 # load x3 with value 0xe8ba36011b5fa069
sw x3, 0(x2) # store 0xe8ba36011b5fa069 in memory
flh f19, 0(x2) # load 0xe8ba36011b5fa069 from memory into f19
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f7, 0(x2) # load 0x00007bff from memory into f7
fnmadd.h f17, f22, f19, f7, dyn # perform operation
fnmadd.h f17, f22, f19, f7, rdn # perform operation
fnmadd.h f17, f22, f19, f7, rmm # perform operation
fnmadd.h f17, f22, f19, f7, rne # perform operation
fnmadd.h f17, f22, f19, f7, rtz # perform operation
fnmadd.h f17, f22, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f22, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f22, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f22, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f22, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f22, f19, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f11, 0(x2) # load 0x00004000 from memory into f11
la x2, scratch
li x3, 0xb2adb21176c25ad2 # load x3 with value 0xb2adb21176c25ad2
sw x3, 0(x2) # store 0xb2adb21176c25ad2 in memory
flh f2, 0(x2) # load 0xb2adb21176c25ad2 from memory into f2
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f30, 0(x2) # load 0x0000fbff from memory into f30
fnmadd.h f12, f11, f2, f30, dyn # perform operation
fnmadd.h f12, f11, f2, f30, rdn # perform operation
fnmadd.h f12, f11, f2, f30, rmm # perform operation
fnmadd.h f12, f11, f2, f30, rne # perform operation
fnmadd.h f12, f11, f2, f30, rtz # perform operation
fnmadd.h f12, f11, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f11, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f11, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f11, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f11, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f11, f2, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f16, 0(x2) # load 0x00004000 from memory into f16
la x2, scratch
li x3, 0xad36cdc09c994713 # load x3 with value 0xad36cdc09c994713
sw x3, 0(x2) # store 0xad36cdc09c994713 in memory
flh f20, 0(x2) # load 0xad36cdc09c994713 from memory into f20
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f24, 0(x2) # load 0x000003ff from memory into f24
fnmadd.h f21, f16, f20, f24, dyn # perform operation
fnmadd.h f21, f16, f20, f24, rdn # perform operation
fnmadd.h f21, f16, f20, f24, rmm # perform operation
fnmadd.h f21, f16, f20, f24, rne # perform operation
fnmadd.h f21, f16, f20, f24, rtz # perform operation
fnmadd.h f21, f16, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f16, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f16, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f16, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f16, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f16, f20, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f18, 0(x2) # load 0x00004000 from memory into f18
la x2, scratch
li x3, 0x77319a8ec95261bb # load x3 with value 0x77319a8ec95261bb
sw x3, 0(x2) # store 0x77319a8ec95261bb in memory
flh f27, 0(x2) # load 0x77319a8ec95261bb from memory into f27
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f14, 0(x2) # load 0x000083ff from memory into f14
fnmadd.h f31, f18, f27, f14, dyn # perform operation
fnmadd.h f31, f18, f27, f14, rdn # perform operation
fnmadd.h f31, f18, f27, f14, rmm # perform operation
fnmadd.h f31, f18, f27, f14, rne # perform operation
fnmadd.h f31, f18, f27, f14, rtz # perform operation
fnmadd.h f31, f18, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f18, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f18, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f18, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f18, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f18, f27, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x200)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f8, 0(x2) # load 0x00004000 from memory into f8
la x2, scratch
li x3, 0x7452d5826975f1ff # load x3 with value 0x7452d5826975f1ff
sw x3, 0(x2) # store 0x7452d5826975f1ff in memory
flh f5, 0(x2) # load 0x7452d5826975f1ff from memory into f5
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f26, 0(x2) # load 0x00000200 from memory into f26
fnmadd.h f18, f8, f5, f26, dyn # perform operation
fnmadd.h f18, f8, f5, f26, rdn # perform operation
fnmadd.h f18, f8, f5, f26, rmm # perform operation
fnmadd.h f18, f8, f5, f26, rne # perform operation
fnmadd.h f18, f8, f5, f26, rtz # perform operation
fnmadd.h f18, f8, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f8, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f8, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f8, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f8, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f8, f5, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x8200)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f15, 0(x2) # load 0x00004000 from memory into f15
la x2, scratch
li x3, 0x49f9481600125a55 # load x3 with value 0x49f9481600125a55
sw x3, 0(x2) # store 0x49f9481600125a55 in memory
flh f6, 0(x2) # load 0x49f9481600125a55 from memory into f6
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f7, 0(x2) # load 0x00008200 from memory into f7
fnmadd.h f2, f15, f6, f7, dyn # perform operation
fnmadd.h f2, f15, f6, f7, rdn # perform operation
fnmadd.h f2, f15, f6, f7, rmm # perform operation
fnmadd.h f2, f15, f6, f7, rne # perform operation
fnmadd.h f2, f15, f6, f7, rtz # perform operation
fnmadd.h f2, f15, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f15, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f15, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f15, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f15, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f15, f6, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x1)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f10, 0(x2) # load 0x00004000 from memory into f10
la x2, scratch
li x3, 0xe0e04174c3ec3a51 # load x3 with value 0xe0e04174c3ec3a51
sw x3, 0(x2) # store 0xe0e04174c3ec3a51 in memory
flh f3, 0(x2) # load 0xe0e04174c3ec3a51 from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
fnmadd.h f13, f10, f3, f5, dyn # perform operation
fnmadd.h f13, f10, f3, f5, rdn # perform operation
fnmadd.h f13, f10, f3, f5, rmm # perform operation
fnmadd.h f13, f10, f3, f5, rne # perform operation
fnmadd.h f13, f10, f3, f5, rtz # perform operation
fnmadd.h f13, f10, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f10, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f10, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f10, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f10, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f10, f3, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x8001)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f20, 0(x2) # load 0x00004000 from memory into f20
la x2, scratch
li x3, 0xb50138b847788e65 # load x3 with value 0xb50138b847788e65
sw x3, 0(x2) # store 0xb50138b847788e65 in memory
flh f5, 0(x2) # load 0xb50138b847788e65 from memory into f5
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f8, 0(x2) # load 0x00008001 from memory into f8
fnmadd.h f14, f20, f5, f8, dyn # perform operation
fnmadd.h f14, f20, f5, f8, rdn # perform operation
fnmadd.h f14, f20, f5, f8, rmm # perform operation
fnmadd.h f14, f20, f5, f8, rne # perform operation
fnmadd.h f14, f20, f5, f8, rtz # perform operation
fnmadd.h f14, f20, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f20, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f20, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f20, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f20, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f20, f5, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f7, 0(x2) # load 0x00004000 from memory into f7
la x2, scratch
li x3, 0xf308dd6958dda3bb # load x3 with value 0xf308dd6958dda3bb
sw x3, 0(x2) # store 0xf308dd6958dda3bb in memory
flh f9, 0(x2) # load 0xf308dd6958dda3bb from memory into f9
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f29, 0(x2) # load 0x00007c00 from memory into f29
fnmadd.h f23, f7, f9, f29, dyn # perform operation
fnmadd.h f23, f7, f9, f29, rdn # perform operation
fnmadd.h f23, f7, f9, f29, rmm # perform operation
fnmadd.h f23, f7, f9, f29, rne # perform operation
fnmadd.h f23, f7, f9, f29, rtz # perform operation
fnmadd.h f23, f7, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f7, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f7, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f7, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f7, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f7, f9, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f30, 0(x2) # load 0x00004000 from memory into f30
la x2, scratch
li x3, 0x8cb75b8141df28ee # load x3 with value 0x8cb75b8141df28ee
sw x3, 0(x2) # store 0x8cb75b8141df28ee in memory
flh f15, 0(x2) # load 0x8cb75b8141df28ee from memory into f15
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f7, 0(x2) # load 0x0000fc00 from memory into f7
fnmadd.h f12, f30, f15, f7, dyn # perform operation
fnmadd.h f12, f30, f15, f7, rdn # perform operation
fnmadd.h f12, f30, f15, f7, rmm # perform operation
fnmadd.h f12, f30, f15, f7, rne # perform operation
fnmadd.h f12, f30, f15, f7, rtz # perform operation
fnmadd.h f12, f30, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f30, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f30, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f30, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f30, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f30, f15, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f17, 0(x2) # load 0x00004000 from memory into f17
la x2, scratch
li x3, 0x39d34455d116cb07 # load x3 with value 0x39d34455d116cb07
sw x3, 0(x2) # store 0x39d34455d116cb07 in memory
flh f18, 0(x2) # load 0x39d34455d116cb07 from memory into f18
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f26, 0(x2) # load 0x00007e00 from memory into f26
fnmadd.h f25, f17, f18, f26, dyn # perform operation
fnmadd.h f25, f17, f18, f26, rdn # perform operation
fnmadd.h f25, f17, f18, f26, rmm # perform operation
fnmadd.h f25, f17, f18, f26, rne # perform operation
fnmadd.h f25, f17, f18, f26, rtz # perform operation
fnmadd.h f25, f17, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f17, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f17, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f17, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f17, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f17, f18, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f8, 0(x2) # load 0x00004000 from memory into f8
la x2, scratch
li x3, 0x695c1d2fe4e1ee26 # load x3 with value 0x695c1d2fe4e1ee26
sw x3, 0(x2) # store 0x695c1d2fe4e1ee26 in memory
flh f24, 0(x2) # load 0x695c1d2fe4e1ee26 from memory into f24
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f16, 0(x2) # load 0x00007fff from memory into f16
fnmadd.h f30, f8, f24, f16, dyn # perform operation
fnmadd.h f30, f8, f24, f16, rdn # perform operation
fnmadd.h f30, f8, f24, f16, rmm # perform operation
fnmadd.h f30, f8, f24, f16, rne # perform operation
fnmadd.h f30, f8, f24, f16, rtz # perform operation
fnmadd.h f30, f8, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f8, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f8, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f8, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f8, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f8, f24, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f11, 0(x2) # load 0x00004000 from memory into f11
la x2, scratch
li x3, 0xfcf8fd470f9c7751 # load x3 with value 0xfcf8fd470f9c7751
sw x3, 0(x2) # store 0xfcf8fd470f9c7751 in memory
flh f13, 0(x2) # load 0xfcf8fd470f9c7751 from memory into f13
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f20, 0(x2) # load 0x0000fe00 from memory into f20
fnmadd.h f3, f11, f13, f20, dyn # perform operation
fnmadd.h f3, f11, f13, f20, rdn # perform operation
fnmadd.h f3, f11, f13, f20, rmm # perform operation
fnmadd.h f3, f11, f13, f20, rne # perform operation
fnmadd.h f3, f11, f13, f20, rtz # perform operation
fnmadd.h f3, f11, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f11, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f11, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f11, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f11, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f11, f13, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f12, 0(x2) # load 0x00004000 from memory into f12
la x2, scratch
li x3, 0x8f49c2b877fdd510 # load x3 with value 0x8f49c2b877fdd510
sw x3, 0(x2) # store 0x8f49c2b877fdd510 in memory
flh f16, 0(x2) # load 0x8f49c2b877fdd510 from memory into f16
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f17, 0(x2) # load 0x00007c01 from memory into f17
fnmadd.h f31, f12, f16, f17, dyn # perform operation
fnmadd.h f31, f12, f16, f17, rdn # perform operation
fnmadd.h f31, f12, f16, f17, rmm # perform operation
fnmadd.h f31, f12, f16, f17, rne # perform operation
fnmadd.h f31, f12, f16, f17, rtz # perform operation
fnmadd.h f31, f12, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f12, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f12, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f12, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f12, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f12, f16, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f15, 0(x2) # load 0x00004000 from memory into f15
la x2, scratch
li x3, 0xa618751133f885d # load x3 with value 0xa618751133f885d
sw x3, 0(x2) # store 0xa618751133f885d in memory
flh f16, 0(x2) # load 0xa618751133f885d from memory into f16
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f29, 0(x2) # load 0x00007dff from memory into f29
fnmadd.h f21, f15, f16, f29, dyn # perform operation
fnmadd.h f21, f15, f16, f29, rdn # perform operation
fnmadd.h f21, f15, f16, f29, rmm # perform operation
fnmadd.h f21, f15, f16, f29, rne # perform operation
fnmadd.h f21, f15, f16, f29, rtz # perform operation
fnmadd.h f21, f15, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f15, f16, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f29, 0(x2) # load 0x00004000 from memory into f29
la x2, scratch
li x3, 0x7220232857999a53 # load x3 with value 0x7220232857999a53
sw x3, 0(x2) # store 0x7220232857999a53 in memory
flh f9, 0(x2) # load 0x7220232857999a53 from memory into f9
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f30, 0(x2) # load 0x0000fc01 from memory into f30
fnmadd.h f31, f29, f9, f30, dyn # perform operation
fnmadd.h f31, f29, f9, f30, rdn # perform operation
fnmadd.h f31, f29, f9, f30, rmm # perform operation
fnmadd.h f31, f29, f9, f30, rne # perform operation
fnmadd.h f31, f29, f9, f30, rtz # perform operation
fnmadd.h f31, f29, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f29, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f29, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f29, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f29, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f29, f9, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f31, 0(x2) # load 0x00004000 from memory into f31
la x2, scratch
li x3, 0x928c6b56cf7ebea3 # load x3 with value 0x928c6b56cf7ebea3
sw x3, 0(x2) # store 0x928c6b56cf7ebea3 in memory
flh f26, 0(x2) # load 0x928c6b56cf7ebea3 from memory into f26
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f10, 0(x2) # load 0x000058b4 from memory into f10
fnmadd.h f2, f31, f26, f10, dyn # perform operation
fnmadd.h f2, f31, f26, f10, rdn # perform operation
fnmadd.h f2, f31, f26, f10, rmm # perform operation
fnmadd.h f2, f31, f26, f10, rne # perform operation
fnmadd.h f2, f31, f26, f10, rtz # perform operation
fnmadd.h f2, f31, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f31, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f31, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f31, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f31, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f31, f26, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f11, 0(x2) # load 0x00004000 from memory into f11
la x2, scratch
li x3, 0x97d6d01a83288a4b # load x3 with value 0x97d6d01a83288a4b
sw x3, 0(x2) # store 0x97d6d01a83288a4b in memory
flh f18, 0(x2) # load 0x97d6d01a83288a4b from memory into f18
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f30, 0(x2) # load 0x0000c93a from memory into f30
fnmadd.h f27, f11, f18, f30, dyn # perform operation
fnmadd.h f27, f11, f18, f30, rdn # perform operation
fnmadd.h f27, f11, f18, f30, rmm # perform operation
fnmadd.h f27, f11, f18, f30, rne # perform operation
fnmadd.h f27, f11, f18, f30, rtz # perform operation
fnmadd.h f27, f11, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f11, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f11, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f11, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f11, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f11, f18, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x0)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f14, 0(x2) # load 0x0000c000 from memory into f14
la x2, scratch
li x3, 0xa34e048ab0b414be # load x3 with value 0xa34e048ab0b414be
sw x3, 0(x2) # store 0xa34e048ab0b414be in memory
flh f18, 0(x2) # load 0xa34e048ab0b414be from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f2, 0(x2) # load 0x00000000 from memory into f2
fnmadd.h f15, f14, f18, f2, dyn # perform operation
fnmadd.h f15, f14, f18, f2, rdn # perform operation
fnmadd.h f15, f14, f18, f2, rmm # perform operation
fnmadd.h f15, f14, f18, f2, rne # perform operation
fnmadd.h f15, f14, f18, f2, rtz # perform operation
fnmadd.h f15, f14, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f14, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f14, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f14, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f14, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f14, f18, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x8000)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f17, 0(x2) # load 0x0000c000 from memory into f17
la x2, scratch
li x3, 0x5292f1ed324b7b6a # load x3 with value 0x5292f1ed324b7b6a
sw x3, 0(x2) # store 0x5292f1ed324b7b6a in memory
flh f16, 0(x2) # load 0x5292f1ed324b7b6a from memory into f16
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f29, 0(x2) # load 0x00008000 from memory into f29
fnmadd.h f22, f17, f16, f29, dyn # perform operation
fnmadd.h f22, f17, f16, f29, rdn # perform operation
fnmadd.h f22, f17, f16, f29, rmm # perform operation
fnmadd.h f22, f17, f16, f29, rne # perform operation
fnmadd.h f22, f17, f16, f29, rtz # perform operation
fnmadd.h f22, f17, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f17, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f17, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f17, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f17, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f17, f16, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x3c00)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f27, 0(x2) # load 0x0000c000 from memory into f27
la x2, scratch
li x3, 0xac60bb40b36229a6 # load x3 with value 0xac60bb40b36229a6
sw x3, 0(x2) # store 0xac60bb40b36229a6 in memory
flh f8, 0(x2) # load 0xac60bb40b36229a6 from memory into f8
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
fnmadd.h f26, f27, f8, f6, dyn # perform operation
fnmadd.h f26, f27, f8, f6, rdn # perform operation
fnmadd.h f26, f27, f8, f6, rmm # perform operation
fnmadd.h f26, f27, f8, f6, rne # perform operation
fnmadd.h f26, f27, f8, f6, rtz # perform operation
fnmadd.h f26, f27, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f27, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f27, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f27, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f27, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f27, f8, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xbc00)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f9, 0(x2) # load 0x0000c000 from memory into f9
la x2, scratch
li x3, 0x348be351bf7ed530 # load x3 with value 0x348be351bf7ed530
sw x3, 0(x2) # store 0x348be351bf7ed530 in memory
flh f3, 0(x2) # load 0x348be351bf7ed530 from memory into f3
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f25, 0(x2) # load 0x0000bc00 from memory into f25
fnmadd.h f22, f9, f3, f25, dyn # perform operation
fnmadd.h f22, f9, f3, f25, rdn # perform operation
fnmadd.h f22, f9, f3, f25, rmm # perform operation
fnmadd.h f22, f9, f3, f25, rne # perform operation
fnmadd.h f22, f9, f3, f25, rtz # perform operation
fnmadd.h f22, f9, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f9, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f9, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f9, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f9, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f9, f3, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x3e00)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f25, 0(x2) # load 0x0000c000 from memory into f25
la x2, scratch
li x3, 0x7f28751932d3a2d9 # load x3 with value 0x7f28751932d3a2d9
sw x3, 0(x2) # store 0x7f28751932d3a2d9 in memory
flh f5, 0(x2) # load 0x7f28751932d3a2d9 from memory into f5
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f22, 0(x2) # load 0x00003e00 from memory into f22
fnmadd.h f11, f25, f5, f22, dyn # perform operation
fnmadd.h f11, f25, f5, f22, rdn # perform operation
fnmadd.h f11, f25, f5, f22, rmm # perform operation
fnmadd.h f11, f25, f5, f22, rne # perform operation
fnmadd.h f11, f25, f5, f22, rtz # perform operation
fnmadd.h f11, f25, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f25, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f25, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f25, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f25, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f25, f5, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xbe00)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f26, 0(x2) # load 0x0000c000 from memory into f26
la x2, scratch
li x3, 0x125725686b8ed39 # load x3 with value 0x125725686b8ed39
sw x3, 0(x2) # store 0x125725686b8ed39 in memory
flh f20, 0(x2) # load 0x125725686b8ed39 from memory into f20
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f29, 0(x2) # load 0x0000be00 from memory into f29
fnmadd.h f13, f26, f20, f29, dyn # perform operation
fnmadd.h f13, f26, f20, f29, rdn # perform operation
fnmadd.h f13, f26, f20, f29, rmm # perform operation
fnmadd.h f13, f26, f20, f29, rne # perform operation
fnmadd.h f13, f26, f20, f29, rtz # perform operation
fnmadd.h f13, f26, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f26, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f26, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f26, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f26, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f26, f20, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x4000)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f19, 0(x2) # load 0x0000c000 from memory into f19
la x2, scratch
li x3, 0xfa2165d874d03e07 # load x3 with value 0xfa2165d874d03e07
sw x3, 0(x2) # store 0xfa2165d874d03e07 in memory
flh f26, 0(x2) # load 0xfa2165d874d03e07 from memory into f26
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f29, 0(x2) # load 0x00004000 from memory into f29
fnmadd.h f10, f19, f26, f29, dyn # perform operation
fnmadd.h f10, f19, f26, f29, rdn # perform operation
fnmadd.h f10, f19, f26, f29, rmm # perform operation
fnmadd.h f10, f19, f26, f29, rne # perform operation
fnmadd.h f10, f19, f26, f29, rtz # perform operation
fnmadd.h f10, f19, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f19, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f19, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f19, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f19, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f19, f26, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xc000)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
la x2, scratch
li x3, 0x2d23d0e3a3f8fbb1 # load x3 with value 0x2d23d0e3a3f8fbb1
sw x3, 0(x2) # store 0x2d23d0e3a3f8fbb1 in memory
flh f28, 0(x2) # load 0x2d23d0e3a3f8fbb1 from memory into f28
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f19, 0(x2) # load 0x0000c000 from memory into f19
fnmadd.h f20, f30, f28, f19, dyn # perform operation
fnmadd.h f20, f30, f28, f19, rdn # perform operation
fnmadd.h f20, f30, f28, f19, rmm # perform operation
fnmadd.h f20, f30, f28, f19, rne # perform operation
fnmadd.h f20, f30, f28, f19, rtz # perform operation
fnmadd.h f20, f30, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f30, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f30, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f30, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f30, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f30, f28, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x400)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f27, 0(x2) # load 0x0000c000 from memory into f27
la x2, scratch
li x3, 0x4926cc4d420b4631 # load x3 with value 0x4926cc4d420b4631
sw x3, 0(x2) # store 0x4926cc4d420b4631 in memory
flh f8, 0(x2) # load 0x4926cc4d420b4631 from memory into f8
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f25, 0(x2) # load 0x00000400 from memory into f25
fnmadd.h f21, f27, f8, f25, dyn # perform operation
fnmadd.h f21, f27, f8, f25, rdn # perform operation
fnmadd.h f21, f27, f8, f25, rmm # perform operation
fnmadd.h f21, f27, f8, f25, rne # perform operation
fnmadd.h f21, f27, f8, f25, rtz # perform operation
fnmadd.h f21, f27, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f27, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f27, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f27, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f27, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f27, f8, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x8400)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
la x2, scratch
li x3, 0x9806cb1bde904059 # load x3 with value 0x9806cb1bde904059
sw x3, 0(x2) # store 0x9806cb1bde904059 in memory
flh f30, 0(x2) # load 0x9806cb1bde904059 from memory into f30
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f8, 0(x2) # load 0x00008400 from memory into f8
fnmadd.h f17, f12, f30, f8, dyn # perform operation
fnmadd.h f17, f12, f30, f8, rdn # perform operation
fnmadd.h f17, f12, f30, f8, rmm # perform operation
fnmadd.h f17, f12, f30, f8, rne # perform operation
fnmadd.h f17, f12, f30, f8, rtz # perform operation
fnmadd.h f17, f12, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f12, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f12, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f12, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f12, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f12, f30, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7bff)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
la x2, scratch
li x3, 0x1cd55f493da43701 # load x3 with value 0x1cd55f493da43701
sw x3, 0(x2) # store 0x1cd55f493da43701 in memory
flh f9, 0(x2) # load 0x1cd55f493da43701 from memory into f9
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f25, 0(x2) # load 0x00007bff from memory into f25
fnmadd.h f31, f2, f9, f25, dyn # perform operation
fnmadd.h f31, f2, f9, f25, rdn # perform operation
fnmadd.h f31, f2, f9, f25, rmm # perform operation
fnmadd.h f31, f2, f9, f25, rne # perform operation
fnmadd.h f31, f2, f9, f25, rtz # perform operation
fnmadd.h f31, f2, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f2, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f2, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f2, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f2, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f2, f9, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xfbff)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f17, 0(x2) # load 0x0000c000 from memory into f17
la x2, scratch
li x3, 0x4d3a9aea3ee92ceb # load x3 with value 0x4d3a9aea3ee92ceb
sw x3, 0(x2) # store 0x4d3a9aea3ee92ceb in memory
flh f12, 0(x2) # load 0x4d3a9aea3ee92ceb from memory into f12
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f25, 0(x2) # load 0x0000fbff from memory into f25
fnmadd.h f28, f17, f12, f25, dyn # perform operation
fnmadd.h f28, f17, f12, f25, rdn # perform operation
fnmadd.h f28, f17, f12, f25, rmm # perform operation
fnmadd.h f28, f17, f12, f25, rne # perform operation
fnmadd.h f28, f17, f12, f25, rtz # perform operation
fnmadd.h f28, f17, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f17, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f17, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f17, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f17, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f17, f12, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x3ff)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
la x2, scratch
li x3, 0xb87a99b0fdcdfca8 # load x3 with value 0xb87a99b0fdcdfca8
sw x3, 0(x2) # store 0xb87a99b0fdcdfca8 in memory
flh f5, 0(x2) # load 0xb87a99b0fdcdfca8 from memory into f5
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f2, 0(x2) # load 0x000003ff from memory into f2
fnmadd.h f15, f12, f5, f2, dyn # perform operation
fnmadd.h f15, f12, f5, f2, rdn # perform operation
fnmadd.h f15, f12, f5, f2, rmm # perform operation
fnmadd.h f15, f12, f5, f2, rne # perform operation
fnmadd.h f15, f12, f5, f2, rtz # perform operation
fnmadd.h f15, f12, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f12, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f12, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f12, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f12, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f12, f5, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x83ff)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
la x2, scratch
li x3, 0x53cff4c75375d654 # load x3 with value 0x53cff4c75375d654
sw x3, 0(x2) # store 0x53cff4c75375d654 in memory
flh f19, 0(x2) # load 0x53cff4c75375d654 from memory into f19
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f26, 0(x2) # load 0x000083ff from memory into f26
fnmadd.h f7, f12, f19, f26, dyn # perform operation
fnmadd.h f7, f12, f19, f26, rdn # perform operation
fnmadd.h f7, f12, f19, f26, rmm # perform operation
fnmadd.h f7, f12, f19, f26, rne # perform operation
fnmadd.h f7, f12, f19, f26, rtz # perform operation
fnmadd.h f7, f12, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f12, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f12, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f12, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f12, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f12, f19, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x200)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f6, 0(x2) # load 0x0000c000 from memory into f6
la x2, scratch
li x3, 0xd7b39d3557150761 # load x3 with value 0xd7b39d3557150761
sw x3, 0(x2) # store 0xd7b39d3557150761 in memory
flh f10, 0(x2) # load 0xd7b39d3557150761 from memory into f10
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f25, 0(x2) # load 0x00000200 from memory into f25
fnmadd.h f28, f6, f10, f25, dyn # perform operation
fnmadd.h f28, f6, f10, f25, rdn # perform operation
fnmadd.h f28, f6, f10, f25, rmm # perform operation
fnmadd.h f28, f6, f10, f25, rne # perform operation
fnmadd.h f28, f6, f10, f25, rtz # perform operation
fnmadd.h f28, f6, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f6, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f6, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f6, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f6, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f6, f10, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x8200)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
la x2, scratch
li x3, 0xa7a2ed767188c4c9 # load x3 with value 0xa7a2ed767188c4c9
sw x3, 0(x2) # store 0xa7a2ed767188c4c9 in memory
flh f6, 0(x2) # load 0xa7a2ed767188c4c9 from memory into f6
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f8, 0(x2) # load 0x00008200 from memory into f8
fnmadd.h f9, f12, f6, f8, dyn # perform operation
fnmadd.h f9, f12, f6, f8, rdn # perform operation
fnmadd.h f9, f12, f6, f8, rmm # perform operation
fnmadd.h f9, f12, f6, f8, rne # perform operation
fnmadd.h f9, f12, f6, f8, rtz # perform operation
fnmadd.h f9, f12, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f12, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f12, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f12, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f12, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f12, f6, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x1)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f10, 0(x2) # load 0x0000c000 from memory into f10
la x2, scratch
li x3, 0x7aed07a17a02c752 # load x3 with value 0x7aed07a17a02c752
sw x3, 0(x2) # store 0x7aed07a17a02c752 in memory
flh f3, 0(x2) # load 0x7aed07a17a02c752 from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f22, 0(x2) # load 0x00000001 from memory into f22
fnmadd.h f28, f10, f3, f22, dyn # perform operation
fnmadd.h f28, f10, f3, f22, rdn # perform operation
fnmadd.h f28, f10, f3, f22, rmm # perform operation
fnmadd.h f28, f10, f3, f22, rne # perform operation
fnmadd.h f28, f10, f3, f22, rtz # perform operation
fnmadd.h f28, f10, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f10, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f10, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f10, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f10, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f10, f3, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x8001)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
la x2, scratch
li x3, 0x755bb0b2b7b469aa # load x3 with value 0x755bb0b2b7b469aa
sw x3, 0(x2) # store 0x755bb0b2b7b469aa in memory
flh f28, 0(x2) # load 0x755bb0b2b7b469aa from memory into f28
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
fnmadd.h f21, f2, f28, f7, dyn # perform operation
fnmadd.h f21, f2, f28, f7, rdn # perform operation
fnmadd.h f21, f2, f28, f7, rmm # perform operation
fnmadd.h f21, f2, f28, f7, rne # perform operation
fnmadd.h f21, f2, f28, f7, rtz # perform operation
fnmadd.h f21, f2, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f2, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f2, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f2, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f2, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f2, f28, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7c00)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f10, 0(x2) # load 0x0000c000 from memory into f10
la x2, scratch
li x3, 0xab42afd8a37081f0 # load x3 with value 0xab42afd8a37081f0
sw x3, 0(x2) # store 0xab42afd8a37081f0 in memory
flh f14, 0(x2) # load 0xab42afd8a37081f0 from memory into f14
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
fnmadd.h f1, f10, f14, f9, dyn # perform operation
fnmadd.h f1, f10, f14, f9, rdn # perform operation
fnmadd.h f1, f10, f14, f9, rmm # perform operation
fnmadd.h f1, f10, f14, f9, rne # perform operation
fnmadd.h f1, f10, f14, f9, rtz # perform operation
fnmadd.h f1, f10, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f10, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f10, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f10, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f10, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f10, f14, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xfc00)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f31, 0(x2) # load 0x0000c000 from memory into f31
la x2, scratch
li x3, 0x10f9fe59960518b4 # load x3 with value 0x10f9fe59960518b4
sw x3, 0(x2) # store 0x10f9fe59960518b4 in memory
flh f10, 0(x2) # load 0x10f9fe59960518b4 from memory into f10
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f20, 0(x2) # load 0x0000fc00 from memory into f20
fnmadd.h f11, f31, f10, f20, dyn # perform operation
fnmadd.h f11, f31, f10, f20, rdn # perform operation
fnmadd.h f11, f31, f10, f20, rmm # perform operation
fnmadd.h f11, f31, f10, f20, rne # perform operation
fnmadd.h f11, f31, f10, f20, rtz # perform operation
fnmadd.h f11, f31, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f31, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f31, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f31, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f31, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f31, f10, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7e00)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f25, 0(x2) # load 0x0000c000 from memory into f25
la x2, scratch
li x3, 0x18c35410954974ba # load x3 with value 0x18c35410954974ba
sw x3, 0(x2) # store 0x18c35410954974ba in memory
flh f6, 0(x2) # load 0x18c35410954974ba from memory into f6
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
fnmadd.h f21, f25, f6, f20, dyn # perform operation
fnmadd.h f21, f25, f6, f20, rdn # perform operation
fnmadd.h f21, f25, f6, f20, rmm # perform operation
fnmadd.h f21, f25, f6, f20, rne # perform operation
fnmadd.h f21, f25, f6, f20, rtz # perform operation
fnmadd.h f21, f25, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f25, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f25, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f25, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f25, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f25, f6, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7fff)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f7, 0(x2) # load 0x0000c000 from memory into f7
la x2, scratch
li x3, 0x46291369d9de1e6 # load x3 with value 0x46291369d9de1e6
sw x3, 0(x2) # store 0x46291369d9de1e6 in memory
flh f18, 0(x2) # load 0x46291369d9de1e6 from memory into f18
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f21, 0(x2) # load 0x00007fff from memory into f21
fnmadd.h f5, f7, f18, f21, dyn # perform operation
fnmadd.h f5, f7, f18, f21, rdn # perform operation
fnmadd.h f5, f7, f18, f21, rmm # perform operation
fnmadd.h f5, f7, f18, f21, rne # perform operation
fnmadd.h f5, f7, f18, f21, rtz # perform operation
fnmadd.h f5, f7, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f7, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f7, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f7, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f7, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f7, f18, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xfe00)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
la x2, scratch
li x3, 0x20314798a32857dd # load x3 with value 0x20314798a32857dd
sw x3, 0(x2) # store 0x20314798a32857dd in memory
flh f19, 0(x2) # load 0x20314798a32857dd from memory into f19
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f10, 0(x2) # load 0x0000fe00 from memory into f10
fnmadd.h f16, f12, f19, f10, dyn # perform operation
fnmadd.h f16, f12, f19, f10, rdn # perform operation
fnmadd.h f16, f12, f19, f10, rmm # perform operation
fnmadd.h f16, f12, f19, f10, rne # perform operation
fnmadd.h f16, f12, f19, f10, rtz # perform operation
fnmadd.h f16, f12, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f12, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f12, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f12, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f12, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f12, f19, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7c01)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f23, 0(x2) # load 0x0000c000 from memory into f23
la x2, scratch
li x3, 0xc4a2edfd35e34075 # load x3 with value 0xc4a2edfd35e34075
sw x3, 0(x2) # store 0xc4a2edfd35e34075 in memory
flh f22, 0(x2) # load 0xc4a2edfd35e34075 from memory into f22
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f8, 0(x2) # load 0x00007c01 from memory into f8
fnmadd.h f31, f23, f22, f8, dyn # perform operation
fnmadd.h f31, f23, f22, f8, rdn # perform operation
fnmadd.h f31, f23, f22, f8, rmm # perform operation
fnmadd.h f31, f23, f22, f8, rne # perform operation
fnmadd.h f31, f23, f22, f8, rtz # perform operation
fnmadd.h f31, f23, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f23, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f23, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f23, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f23, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f23, f22, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7dff)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f28, 0(x2) # load 0x0000c000 from memory into f28
la x2, scratch
li x3, 0xb15f9572fcbe8cbc # load x3 with value 0xb15f9572fcbe8cbc
sw x3, 0(x2) # store 0xb15f9572fcbe8cbc in memory
flh f15, 0(x2) # load 0xb15f9572fcbe8cbc from memory into f15
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f29, 0(x2) # load 0x00007dff from memory into f29
fnmadd.h f8, f28, f15, f29, dyn # perform operation
fnmadd.h f8, f28, f15, f29, rdn # perform operation
fnmadd.h f8, f28, f15, f29, rmm # perform operation
fnmadd.h f8, f28, f15, f29, rne # perform operation
fnmadd.h f8, f28, f15, f29, rtz # perform operation
fnmadd.h f8, f28, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f28, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f28, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f28, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f28, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f28, f15, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xfc01)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
la x2, scratch
li x3, 0x786d1d6c386b6ab9 # load x3 with value 0x786d1d6c386b6ab9
sw x3, 0(x2) # store 0x786d1d6c386b6ab9 in memory
flh f24, 0(x2) # load 0x786d1d6c386b6ab9 from memory into f24
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f5, 0(x2) # load 0x0000fc01 from memory into f5
fnmadd.h f10, f20, f24, f5, dyn # perform operation
fnmadd.h f10, f20, f24, f5, rdn # perform operation
fnmadd.h f10, f20, f24, f5, rmm # perform operation
fnmadd.h f10, f20, f24, f5, rne # perform operation
fnmadd.h f10, f20, f24, f5, rtz # perform operation
fnmadd.h f10, f20, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f20, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f20, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f20, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f20, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f20, f24, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x58b4)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f26, 0(x2) # load 0x0000c000 from memory into f26
la x2, scratch
li x3, 0x722ea9f6a10b72ce # load x3 with value 0x722ea9f6a10b72ce
sw x3, 0(x2) # store 0x722ea9f6a10b72ce in memory
flh f10, 0(x2) # load 0x722ea9f6a10b72ce from memory into f10
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f31, 0(x2) # load 0x000058b4 from memory into f31
fnmadd.h f23, f26, f10, f31, dyn # perform operation
fnmadd.h f23, f26, f10, f31, rdn # perform operation
fnmadd.h f23, f26, f10, f31, rmm # perform operation
fnmadd.h f23, f26, f10, f31, rne # perform operation
fnmadd.h f23, f26, f10, f31, rtz # perform operation
fnmadd.h f23, f26, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f26, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f26, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f26, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f26, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f26, f10, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xc93a)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
la x2, scratch
li x3, 0x990a1ba7dee73217 # load x3 with value 0x990a1ba7dee73217
sw x3, 0(x2) # store 0x990a1ba7dee73217 in memory
flh f26, 0(x2) # load 0x990a1ba7dee73217 from memory into f26
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f22, 0(x2) # load 0x0000c93a from memory into f22
fnmadd.h f17, f12, f26, f22, dyn # perform operation
fnmadd.h f17, f12, f26, f22, rdn # perform operation
fnmadd.h f17, f12, f26, f22, rmm # perform operation
fnmadd.h f17, f12, f26, f22, rne # perform operation
fnmadd.h f17, f12, f26, f22, rtz # perform operation
fnmadd.h f17, f12, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f12, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f12, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f12, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f12, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f12, f26, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x0)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f15, 0(x2) # load 0x00000400 from memory into f15
la x2, scratch
li x3, 0x7c2b52cb622f12ae # load x3 with value 0x7c2b52cb622f12ae
sw x3, 0(x2) # store 0x7c2b52cb622f12ae in memory
flh f6, 0(x2) # load 0x7c2b52cb622f12ae from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
fnmadd.h f20, f15, f6, f31, dyn # perform operation
fnmadd.h f20, f15, f6, f31, rdn # perform operation
fnmadd.h f20, f15, f6, f31, rmm # perform operation
fnmadd.h f20, f15, f6, f31, rne # perform operation
fnmadd.h f20, f15, f6, f31, rtz # perform operation
fnmadd.h f20, f15, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f15, f6, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x8000)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f10, 0(x2) # load 0x00000400 from memory into f10
la x2, scratch
li x3, 0xbc600485056193a9 # load x3 with value 0xbc600485056193a9
sw x3, 0(x2) # store 0xbc600485056193a9 in memory
flh f29, 0(x2) # load 0xbc600485056193a9 from memory into f29
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f27, 0(x2) # load 0x00008000 from memory into f27
fnmadd.h f28, f10, f29, f27, dyn # perform operation
fnmadd.h f28, f10, f29, f27, rdn # perform operation
fnmadd.h f28, f10, f29, f27, rmm # perform operation
fnmadd.h f28, f10, f29, f27, rne # perform operation
fnmadd.h f28, f10, f29, f27, rtz # perform operation
fnmadd.h f28, f10, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f10, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f10, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f10, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f10, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f10, f29, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
la x2, scratch
li x3, 0x84043401dcf30caf # load x3 with value 0x84043401dcf30caf
sw x3, 0(x2) # store 0x84043401dcf30caf in memory
flh f24, 0(x2) # load 0x84043401dcf30caf from memory into f24
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f26, 0(x2) # load 0x00003c00 from memory into f26
fnmadd.h f25, f1, f24, f26, dyn # perform operation
fnmadd.h f25, f1, f24, f26, rdn # perform operation
fnmadd.h f25, f1, f24, f26, rmm # perform operation
fnmadd.h f25, f1, f24, f26, rne # perform operation
fnmadd.h f25, f1, f24, f26, rtz # perform operation
fnmadd.h f25, f1, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f1, f24, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
la x2, scratch
li x3, 0x878ba5d7c9a27499 # load x3 with value 0x878ba5d7c9a27499
sw x3, 0(x2) # store 0x878ba5d7c9a27499 in memory
flh f13, 0(x2) # load 0x878ba5d7c9a27499 from memory into f13
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f12, 0(x2) # load 0x0000bc00 from memory into f12
fnmadd.h f19, f18, f13, f12, dyn # perform operation
fnmadd.h f19, f18, f13, f12, rdn # perform operation
fnmadd.h f19, f18, f13, f12, rmm # perform operation
fnmadd.h f19, f18, f13, f12, rne # perform operation
fnmadd.h f19, f18, f13, f12, rtz # perform operation
fnmadd.h f19, f18, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f18, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f18, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f18, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f18, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f18, f13, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f11, 0(x2) # load 0x00000400 from memory into f11
la x2, scratch
li x3, 0xca7e08c321459c46 # load x3 with value 0xca7e08c321459c46
sw x3, 0(x2) # store 0xca7e08c321459c46 in memory
flh f6, 0(x2) # load 0xca7e08c321459c46 from memory into f6
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f8, 0(x2) # load 0x00003e00 from memory into f8
fnmadd.h f30, f11, f6, f8, dyn # perform operation
fnmadd.h f30, f11, f6, f8, rdn # perform operation
fnmadd.h f30, f11, f6, f8, rmm # perform operation
fnmadd.h f30, f11, f6, f8, rne # perform operation
fnmadd.h f30, f11, f6, f8, rtz # perform operation
fnmadd.h f30, f11, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f11, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f11, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f11, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f11, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f11, f6, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f31, 0(x2) # load 0x00000400 from memory into f31
la x2, scratch
li x3, 0x85fe9939f7fffebd # load x3 with value 0x85fe9939f7fffebd
sw x3, 0(x2) # store 0x85fe9939f7fffebd in memory
flh f24, 0(x2) # load 0x85fe9939f7fffebd from memory into f24
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f25, 0(x2) # load 0x0000be00 from memory into f25
fnmadd.h f27, f31, f24, f25, dyn # perform operation
fnmadd.h f27, f31, f24, f25, rdn # perform operation
fnmadd.h f27, f31, f24, f25, rmm # perform operation
fnmadd.h f27, f31, f24, f25, rne # perform operation
fnmadd.h f27, f31, f24, f25, rtz # perform operation
fnmadd.h f27, f31, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f31, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f31, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f31, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f31, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f31, f24, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x4000)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f14, 0(x2) # load 0x00000400 from memory into f14
la x2, scratch
li x3, 0x67d209cbaa363d13 # load x3 with value 0x67d209cbaa363d13
sw x3, 0(x2) # store 0x67d209cbaa363d13 in memory
flh f11, 0(x2) # load 0x67d209cbaa363d13 from memory into f11
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f29, 0(x2) # load 0x00004000 from memory into f29
fnmadd.h f12, f14, f11, f29, dyn # perform operation
fnmadd.h f12, f14, f11, f29, rdn # perform operation
fnmadd.h f12, f14, f11, f29, rmm # perform operation
fnmadd.h f12, f14, f11, f29, rne # perform operation
fnmadd.h f12, f14, f11, f29, rtz # perform operation
fnmadd.h f12, f14, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f14, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f14, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f14, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f14, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f14, f11, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xc000)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f16, 0(x2) # load 0x00000400 from memory into f16
la x2, scratch
li x3, 0xfa805baf62e25f8e # load x3 with value 0xfa805baf62e25f8e
sw x3, 0(x2) # store 0xfa805baf62e25f8e in memory
flh f10, 0(x2) # load 0xfa805baf62e25f8e from memory into f10
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
fnmadd.h f25, f16, f10, f20, dyn # perform operation
fnmadd.h f25, f16, f10, f20, rdn # perform operation
fnmadd.h f25, f16, f10, f20, rmm # perform operation
fnmadd.h f25, f16, f10, f20, rne # perform operation
fnmadd.h f25, f16, f10, f20, rtz # perform operation
fnmadd.h f25, f16, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f16, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f16, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f16, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f16, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f16, f10, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x400)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f21, 0(x2) # load 0x00000400 from memory into f21
la x2, scratch
li x3, 0x4d49118694e380f4 # load x3 with value 0x4d49118694e380f4
sw x3, 0(x2) # store 0x4d49118694e380f4 in memory
flh f15, 0(x2) # load 0x4d49118694e380f4 from memory into f15
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f11, 0(x2) # load 0x00000400 from memory into f11
fnmadd.h f1, f21, f15, f11, dyn # perform operation
fnmadd.h f1, f21, f15, f11, rdn # perform operation
fnmadd.h f1, f21, f15, f11, rmm # perform operation
fnmadd.h f1, f21, f15, f11, rne # perform operation
fnmadd.h f1, f21, f15, f11, rtz # perform operation
fnmadd.h f1, f21, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f21, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f21, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f21, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f21, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f21, f15, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x8400)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f13, 0(x2) # load 0x00000400 from memory into f13
la x2, scratch
li x3, 0x5e31f755bcdfab6d # load x3 with value 0x5e31f755bcdfab6d
sw x3, 0(x2) # store 0x5e31f755bcdfab6d in memory
flh f8, 0(x2) # load 0x5e31f755bcdfab6d from memory into f8
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f6, 0(x2) # load 0x00008400 from memory into f6
fnmadd.h f24, f13, f8, f6, dyn # perform operation
fnmadd.h f24, f13, f8, f6, rdn # perform operation
fnmadd.h f24, f13, f8, f6, rmm # perform operation
fnmadd.h f24, f13, f8, f6, rne # perform operation
fnmadd.h f24, f13, f8, f6, rtz # perform operation
fnmadd.h f24, f13, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f13, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f13, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f13, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f13, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f13, f8, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f14, 0(x2) # load 0x00000400 from memory into f14
la x2, scratch
li x3, 0x764536e265f39356 # load x3 with value 0x764536e265f39356
sw x3, 0(x2) # store 0x764536e265f39356 in memory
flh f1, 0(x2) # load 0x764536e265f39356 from memory into f1
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
fnmadd.h f30, f14, f1, f15, dyn # perform operation
fnmadd.h f30, f14, f1, f15, rdn # perform operation
fnmadd.h f30, f14, f1, f15, rmm # perform operation
fnmadd.h f30, f14, f1, f15, rne # perform operation
fnmadd.h f30, f14, f1, f15, rtz # perform operation
fnmadd.h f30, f14, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f14, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f14, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f14, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f14, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f14, f1, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f25, 0(x2) # load 0x00000400 from memory into f25
la x2, scratch
li x3, 0xe457de5f9a563ca9 # load x3 with value 0xe457de5f9a563ca9
sw x3, 0(x2) # store 0xe457de5f9a563ca9 in memory
flh f24, 0(x2) # load 0xe457de5f9a563ca9 from memory into f24
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f3, 0(x2) # load 0x0000fbff from memory into f3
fnmadd.h f12, f25, f24, f3, dyn # perform operation
fnmadd.h f12, f25, f24, f3, rdn # perform operation
fnmadd.h f12, f25, f24, f3, rmm # perform operation
fnmadd.h f12, f25, f24, f3, rne # perform operation
fnmadd.h f12, f25, f24, f3, rtz # perform operation
fnmadd.h f12, f25, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f25, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f25, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f25, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f25, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f25, f24, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f28, 0(x2) # load 0x00000400 from memory into f28
la x2, scratch
li x3, 0xb3bb81d9f46a438 # load x3 with value 0xb3bb81d9f46a438
sw x3, 0(x2) # store 0xb3bb81d9f46a438 in memory
flh f30, 0(x2) # load 0xb3bb81d9f46a438 from memory into f30
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f8, 0(x2) # load 0x000003ff from memory into f8
fnmadd.h f24, f28, f30, f8, dyn # perform operation
fnmadd.h f24, f28, f30, f8, rdn # perform operation
fnmadd.h f24, f28, f30, f8, rmm # perform operation
fnmadd.h f24, f28, f30, f8, rne # perform operation
fnmadd.h f24, f28, f30, f8, rtz # perform operation
fnmadd.h f24, f28, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f28, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f28, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f28, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f28, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f28, f30, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f20, 0(x2) # load 0x00000400 from memory into f20
la x2, scratch
li x3, 0x8f89466f262459de # load x3 with value 0x8f89466f262459de
sw x3, 0(x2) # store 0x8f89466f262459de in memory
flh f25, 0(x2) # load 0x8f89466f262459de from memory into f25
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f11, 0(x2) # load 0x000083ff from memory into f11
fnmadd.h f5, f20, f25, f11, dyn # perform operation
fnmadd.h f5, f20, f25, f11, rdn # perform operation
fnmadd.h f5, f20, f25, f11, rmm # perform operation
fnmadd.h f5, f20, f25, f11, rne # perform operation
fnmadd.h f5, f20, f25, f11, rtz # perform operation
fnmadd.h f5, f20, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f20, f25, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x200)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f11, 0(x2) # load 0x00000400 from memory into f11
la x2, scratch
li x3, 0x322ec693d6cee4f5 # load x3 with value 0x322ec693d6cee4f5
sw x3, 0(x2) # store 0x322ec693d6cee4f5 in memory
flh f21, 0(x2) # load 0x322ec693d6cee4f5 from memory into f21
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f20, 0(x2) # load 0x00000200 from memory into f20
fnmadd.h f3, f11, f21, f20, dyn # perform operation
fnmadd.h f3, f11, f21, f20, rdn # perform operation
fnmadd.h f3, f11, f21, f20, rmm # perform operation
fnmadd.h f3, f11, f21, f20, rne # perform operation
fnmadd.h f3, f11, f21, f20, rtz # perform operation
fnmadd.h f3, f11, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f11, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f11, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f11, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f11, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f11, f21, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x8200)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f17, 0(x2) # load 0x00000400 from memory into f17
la x2, scratch
li x3, 0x891a11c4ee65c932 # load x3 with value 0x891a11c4ee65c932
sw x3, 0(x2) # store 0x891a11c4ee65c932 in memory
flh f14, 0(x2) # load 0x891a11c4ee65c932 from memory into f14
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f15, 0(x2) # load 0x00008200 from memory into f15
fnmadd.h f3, f17, f14, f15, dyn # perform operation
fnmadd.h f3, f17, f14, f15, rdn # perform operation
fnmadd.h f3, f17, f14, f15, rmm # perform operation
fnmadd.h f3, f17, f14, f15, rne # perform operation
fnmadd.h f3, f17, f14, f15, rtz # perform operation
fnmadd.h f3, f17, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f17, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f17, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f17, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f17, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f17, f14, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x1)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f24, 0(x2) # load 0x00000400 from memory into f24
la x2, scratch
li x3, 0xdd637d820f6f7f18 # load x3 with value 0xdd637d820f6f7f18
sw x3, 0(x2) # store 0xdd637d820f6f7f18 in memory
flh f29, 0(x2) # load 0xdd637d820f6f7f18 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f1, 0(x2) # load 0x00000001 from memory into f1
fnmadd.h f19, f24, f29, f1, dyn # perform operation
fnmadd.h f19, f24, f29, f1, rdn # perform operation
fnmadd.h f19, f24, f29, f1, rmm # perform operation
fnmadd.h f19, f24, f29, f1, rne # perform operation
fnmadd.h f19, f24, f29, f1, rtz # perform operation
fnmadd.h f19, f24, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f24, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f24, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f24, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f24, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f24, f29, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x8001)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f7, 0(x2) # load 0x00000400 from memory into f7
la x2, scratch
li x3, 0x54bd71ea262ab93a # load x3 with value 0x54bd71ea262ab93a
sw x3, 0(x2) # store 0x54bd71ea262ab93a in memory
flh f27, 0(x2) # load 0x54bd71ea262ab93a from memory into f27
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f3, 0(x2) # load 0x00008001 from memory into f3
fnmadd.h f9, f7, f27, f3, dyn # perform operation
fnmadd.h f9, f7, f27, f3, rdn # perform operation
fnmadd.h f9, f7, f27, f3, rmm # perform operation
fnmadd.h f9, f7, f27, f3, rne # perform operation
fnmadd.h f9, f7, f27, f3, rtz # perform operation
fnmadd.h f9, f7, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f7, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f7, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f7, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f7, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f7, f27, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
la x2, scratch
li x3, 0x455301eb9610a0bc # load x3 with value 0x455301eb9610a0bc
sw x3, 0(x2) # store 0x455301eb9610a0bc in memory
flh f5, 0(x2) # load 0x455301eb9610a0bc from memory into f5
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f14, 0(x2) # load 0x00007c00 from memory into f14
fnmadd.h f8, f18, f5, f14, dyn # perform operation
fnmadd.h f8, f18, f5, f14, rdn # perform operation
fnmadd.h f8, f18, f5, f14, rmm # perform operation
fnmadd.h f8, f18, f5, f14, rne # perform operation
fnmadd.h f8, f18, f5, f14, rtz # perform operation
fnmadd.h f8, f18, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f18, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f18, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f18, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f18, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f18, f5, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f30, 0(x2) # load 0x00000400 from memory into f30
la x2, scratch
li x3, 0x18a2139c40ee46ae # load x3 with value 0x18a2139c40ee46ae
sw x3, 0(x2) # store 0x18a2139c40ee46ae in memory
flh f7, 0(x2) # load 0x18a2139c40ee46ae from memory into f7
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f22, 0(x2) # load 0x0000fc00 from memory into f22
fnmadd.h f10, f30, f7, f22, dyn # perform operation
fnmadd.h f10, f30, f7, f22, rdn # perform operation
fnmadd.h f10, f30, f7, f22, rmm # perform operation
fnmadd.h f10, f30, f7, f22, rne # perform operation
fnmadd.h f10, f30, f7, f22, rtz # perform operation
fnmadd.h f10, f30, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f30, f7, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f6, 0(x2) # load 0x00000400 from memory into f6
la x2, scratch
li x3, 0x1ae45a99954d3d18 # load x3 with value 0x1ae45a99954d3d18
sw x3, 0(x2) # store 0x1ae45a99954d3d18 in memory
flh f22, 0(x2) # load 0x1ae45a99954d3d18 from memory into f22
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
fnmadd.h f9, f6, f22, f18, dyn # perform operation
fnmadd.h f9, f6, f22, f18, rdn # perform operation
fnmadd.h f9, f6, f22, f18, rmm # perform operation
fnmadd.h f9, f6, f22, f18, rne # perform operation
fnmadd.h f9, f6, f22, f18, rtz # perform operation
fnmadd.h f9, f6, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f6, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f6, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f6, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f6, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f6, f22, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f28, 0(x2) # load 0x00000400 from memory into f28
la x2, scratch
li x3, 0xa8e72ead65743176 # load x3 with value 0xa8e72ead65743176
sw x3, 0(x2) # store 0xa8e72ead65743176 in memory
flh f22, 0(x2) # load 0xa8e72ead65743176 from memory into f22
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f29, 0(x2) # load 0x00007fff from memory into f29
fnmadd.h f9, f28, f22, f29, dyn # perform operation
fnmadd.h f9, f28, f22, f29, rdn # perform operation
fnmadd.h f9, f28, f22, f29, rmm # perform operation
fnmadd.h f9, f28, f22, f29, rne # perform operation
fnmadd.h f9, f28, f22, f29, rtz # perform operation
fnmadd.h f9, f28, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f28, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f28, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f28, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f28, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f28, f22, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f5, 0(x2) # load 0x00000400 from memory into f5
la x2, scratch
li x3, 0x9c19bed1cd14e0d7 # load x3 with value 0x9c19bed1cd14e0d7
sw x3, 0(x2) # store 0x9c19bed1cd14e0d7 in memory
flh f22, 0(x2) # load 0x9c19bed1cd14e0d7 from memory into f22
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f9, 0(x2) # load 0x0000fe00 from memory into f9
fnmadd.h f26, f5, f22, f9, dyn # perform operation
fnmadd.h f26, f5, f22, f9, rdn # perform operation
fnmadd.h f26, f5, f22, f9, rmm # perform operation
fnmadd.h f26, f5, f22, f9, rne # perform operation
fnmadd.h f26, f5, f22, f9, rtz # perform operation
fnmadd.h f26, f5, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f5, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f5, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f5, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f5, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f5, f22, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f5, 0(x2) # load 0x00000400 from memory into f5
la x2, scratch
li x3, 0xf87ccefa16c73342 # load x3 with value 0xf87ccefa16c73342
sw x3, 0(x2) # store 0xf87ccefa16c73342 in memory
flh f24, 0(x2) # load 0xf87ccefa16c73342 from memory into f24
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f2, 0(x2) # load 0x00007c01 from memory into f2
fnmadd.h f7, f5, f24, f2, dyn # perform operation
fnmadd.h f7, f5, f24, f2, rdn # perform operation
fnmadd.h f7, f5, f24, f2, rmm # perform operation
fnmadd.h f7, f5, f24, f2, rne # perform operation
fnmadd.h f7, f5, f24, f2, rtz # perform operation
fnmadd.h f7, f5, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f5, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f5, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f5, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f5, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f5, f24, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f22, 0(x2) # load 0x00000400 from memory into f22
la x2, scratch
li x3, 0xb245e9237aa2ff4 # load x3 with value 0xb245e9237aa2ff4
sw x3, 0(x2) # store 0xb245e9237aa2ff4 in memory
flh f26, 0(x2) # load 0xb245e9237aa2ff4 from memory into f26
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f6, 0(x2) # load 0x00007dff from memory into f6
fnmadd.h f18, f22, f26, f6, dyn # perform operation
fnmadd.h f18, f22, f26, f6, rdn # perform operation
fnmadd.h f18, f22, f26, f6, rmm # perform operation
fnmadd.h f18, f22, f26, f6, rne # perform operation
fnmadd.h f18, f22, f26, f6, rtz # perform operation
fnmadd.h f18, f22, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f22, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f22, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f22, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f22, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f22, f26, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f8, 0(x2) # load 0x00000400 from memory into f8
la x2, scratch
li x3, 0xcb4081f66d8567f3 # load x3 with value 0xcb4081f66d8567f3
sw x3, 0(x2) # store 0xcb4081f66d8567f3 in memory
flh f10, 0(x2) # load 0xcb4081f66d8567f3 from memory into f10
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f18, 0(x2) # load 0x0000fc01 from memory into f18
fnmadd.h f20, f8, f10, f18, dyn # perform operation
fnmadd.h f20, f8, f10, f18, rdn # perform operation
fnmadd.h f20, f8, f10, f18, rmm # perform operation
fnmadd.h f20, f8, f10, f18, rne # perform operation
fnmadd.h f20, f8, f10, f18, rtz # perform operation
fnmadd.h f20, f8, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f8, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f8, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f8, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f8, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f8, f10, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f20, 0(x2) # load 0x00000400 from memory into f20
la x2, scratch
li x3, 0x3becd21ec93149bb # load x3 with value 0x3becd21ec93149bb
sw x3, 0(x2) # store 0x3becd21ec93149bb in memory
flh f2, 0(x2) # load 0x3becd21ec93149bb from memory into f2
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f27, 0(x2) # load 0x000058b4 from memory into f27
fnmadd.h f30, f20, f2, f27, dyn # perform operation
fnmadd.h f30, f20, f2, f27, rdn # perform operation
fnmadd.h f30, f20, f2, f27, rmm # perform operation
fnmadd.h f30, f20, f2, f27, rne # perform operation
fnmadd.h f30, f20, f2, f27, rtz # perform operation
fnmadd.h f30, f20, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f20, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f20, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f20, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f20, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f20, f2, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f6, 0(x2) # load 0x00000400 from memory into f6
la x2, scratch
li x3, 0x3b632acf8e93eeb7 # load x3 with value 0x3b632acf8e93eeb7
sw x3, 0(x2) # store 0x3b632acf8e93eeb7 in memory
flh f12, 0(x2) # load 0x3b632acf8e93eeb7 from memory into f12
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f31, 0(x2) # load 0x0000c93a from memory into f31
fnmadd.h f9, f6, f12, f31, dyn # perform operation
fnmadd.h f9, f6, f12, f31, rdn # perform operation
fnmadd.h f9, f6, f12, f31, rmm # perform operation
fnmadd.h f9, f6, f12, f31, rne # perform operation
fnmadd.h f9, f6, f12, f31, rtz # perform operation
fnmadd.h f9, f6, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f6, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f6, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f6, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f6, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f6, f12, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x0)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f30, 0(x2) # load 0x00008400 from memory into f30
la x2, scratch
li x3, 0xef6bc14803f738d2 # load x3 with value 0xef6bc14803f738d2
sw x3, 0(x2) # store 0xef6bc14803f738d2 in memory
flh f5, 0(x2) # load 0xef6bc14803f738d2 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f16, 0(x2) # load 0x00000000 from memory into f16
fnmadd.h f23, f30, f5, f16, dyn # perform operation
fnmadd.h f23, f30, f5, f16, rdn # perform operation
fnmadd.h f23, f30, f5, f16, rmm # perform operation
fnmadd.h f23, f30, f5, f16, rne # perform operation
fnmadd.h f23, f30, f5, f16, rtz # perform operation
fnmadd.h f23, f30, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f30, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f30, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f30, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f30, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f30, f5, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x8000)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f23, 0(x2) # load 0x00008400 from memory into f23
la x2, scratch
li x3, 0xba39bc52c172a0d4 # load x3 with value 0xba39bc52c172a0d4
sw x3, 0(x2) # store 0xba39bc52c172a0d4 in memory
flh f16, 0(x2) # load 0xba39bc52c172a0d4 from memory into f16
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f8, 0(x2) # load 0x00008000 from memory into f8
fnmadd.h f5, f23, f16, f8, dyn # perform operation
fnmadd.h f5, f23, f16, f8, rdn # perform operation
fnmadd.h f5, f23, f16, f8, rmm # perform operation
fnmadd.h f5, f23, f16, f8, rne # perform operation
fnmadd.h f5, f23, f16, f8, rtz # perform operation
fnmadd.h f5, f23, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f23, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f23, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f23, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f23, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f23, f16, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f29, 0(x2) # load 0x00008400 from memory into f29
la x2, scratch
li x3, 0x1e9f28ade3afb1c4 # load x3 with value 0x1e9f28ade3afb1c4
sw x3, 0(x2) # store 0x1e9f28ade3afb1c4 in memory
flh f12, 0(x2) # load 0x1e9f28ade3afb1c4 from memory into f12
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f13, 0(x2) # load 0x00003c00 from memory into f13
fnmadd.h f20, f29, f12, f13, dyn # perform operation
fnmadd.h f20, f29, f12, f13, rdn # perform operation
fnmadd.h f20, f29, f12, f13, rmm # perform operation
fnmadd.h f20, f29, f12, f13, rne # perform operation
fnmadd.h f20, f29, f12, f13, rtz # perform operation
fnmadd.h f20, f29, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f29, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f29, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f29, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f29, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f29, f12, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f27, 0(x2) # load 0x00008400 from memory into f27
la x2, scratch
li x3, 0x278531d4f420d8e1 # load x3 with value 0x278531d4f420d8e1
sw x3, 0(x2) # store 0x278531d4f420d8e1 in memory
flh f18, 0(x2) # load 0x278531d4f420d8e1 from memory into f18
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f31, 0(x2) # load 0x0000bc00 from memory into f31
fnmadd.h f11, f27, f18, f31, dyn # perform operation
fnmadd.h f11, f27, f18, f31, rdn # perform operation
fnmadd.h f11, f27, f18, f31, rmm # perform operation
fnmadd.h f11, f27, f18, f31, rne # perform operation
fnmadd.h f11, f27, f18, f31, rtz # perform operation
fnmadd.h f11, f27, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f27, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f27, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f27, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f27, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f27, f18, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f10, 0(x2) # load 0x00008400 from memory into f10
la x2, scratch
li x3, 0x484d53575d261688 # load x3 with value 0x484d53575d261688
sw x3, 0(x2) # store 0x484d53575d261688 in memory
flh f9, 0(x2) # load 0x484d53575d261688 from memory into f9
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f28, 0(x2) # load 0x00003e00 from memory into f28
fnmadd.h f17, f10, f9, f28, dyn # perform operation
fnmadd.h f17, f10, f9, f28, rdn # perform operation
fnmadd.h f17, f10, f9, f28, rmm # perform operation
fnmadd.h f17, f10, f9, f28, rne # perform operation
fnmadd.h f17, f10, f9, f28, rtz # perform operation
fnmadd.h f17, f10, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f10, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f10, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f10, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f10, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f10, f9, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f3, 0(x2) # load 0x00008400 from memory into f3
la x2, scratch
li x3, 0xd496387b0cd1e79e # load x3 with value 0xd496387b0cd1e79e
sw x3, 0(x2) # store 0xd496387b0cd1e79e in memory
flh f30, 0(x2) # load 0xd496387b0cd1e79e from memory into f30
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f11, 0(x2) # load 0x0000be00 from memory into f11
fnmadd.h f13, f3, f30, f11, dyn # perform operation
fnmadd.h f13, f3, f30, f11, rdn # perform operation
fnmadd.h f13, f3, f30, f11, rmm # perform operation
fnmadd.h f13, f3, f30, f11, rne # perform operation
fnmadd.h f13, f3, f30, f11, rtz # perform operation
fnmadd.h f13, f3, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f3, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f3, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f3, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f3, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f3, f30, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x4000)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f1, 0(x2) # load 0x00008400 from memory into f1
la x2, scratch
li x3, 0x1a73ea14b466f844 # load x3 with value 0x1a73ea14b466f844
sw x3, 0(x2) # store 0x1a73ea14b466f844 in memory
flh f25, 0(x2) # load 0x1a73ea14b466f844 from memory into f25
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f3, 0(x2) # load 0x00004000 from memory into f3
fnmadd.h f7, f1, f25, f3, dyn # perform operation
fnmadd.h f7, f1, f25, f3, rdn # perform operation
fnmadd.h f7, f1, f25, f3, rmm # perform operation
fnmadd.h f7, f1, f25, f3, rne # perform operation
fnmadd.h f7, f1, f25, f3, rtz # perform operation
fnmadd.h f7, f1, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f1, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f1, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f1, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f1, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f1, f25, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xc000)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f3, 0(x2) # load 0x00008400 from memory into f3
la x2, scratch
li x3, 0xa4dec8cb2ef2952b # load x3 with value 0xa4dec8cb2ef2952b
sw x3, 0(x2) # store 0xa4dec8cb2ef2952b in memory
flh f8, 0(x2) # load 0xa4dec8cb2ef2952b from memory into f8
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f22, 0(x2) # load 0x0000c000 from memory into f22
fnmadd.h f11, f3, f8, f22, dyn # perform operation
fnmadd.h f11, f3, f8, f22, rdn # perform operation
fnmadd.h f11, f3, f8, f22, rmm # perform operation
fnmadd.h f11, f3, f8, f22, rne # perform operation
fnmadd.h f11, f3, f8, f22, rtz # perform operation
fnmadd.h f11, f3, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f3, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f3, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f3, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f3, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f3, f8, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x400)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
la x2, scratch
li x3, 0x69275b4021a2e057 # load x3 with value 0x69275b4021a2e057
sw x3, 0(x2) # store 0x69275b4021a2e057 in memory
flh f23, 0(x2) # load 0x69275b4021a2e057 from memory into f23
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f6, 0(x2) # load 0x00000400 from memory into f6
fnmadd.h f31, f15, f23, f6, dyn # perform operation
fnmadd.h f31, f15, f23, f6, rdn # perform operation
fnmadd.h f31, f15, f23, f6, rmm # perform operation
fnmadd.h f31, f15, f23, f6, rne # perform operation
fnmadd.h f31, f15, f23, f6, rtz # perform operation
fnmadd.h f31, f15, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f15, f23, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x8400)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f17, 0(x2) # load 0x00008400 from memory into f17
la x2, scratch
li x3, 0xef5bd4b8203dded1 # load x3 with value 0xef5bd4b8203dded1
sw x3, 0(x2) # store 0xef5bd4b8203dded1 in memory
flh f25, 0(x2) # load 0xef5bd4b8203dded1 from memory into f25
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f8, 0(x2) # load 0x00008400 from memory into f8
fnmadd.h f29, f17, f25, f8, dyn # perform operation
fnmadd.h f29, f17, f25, f8, rdn # perform operation
fnmadd.h f29, f17, f25, f8, rmm # perform operation
fnmadd.h f29, f17, f25, f8, rne # perform operation
fnmadd.h f29, f17, f25, f8, rtz # perform operation
fnmadd.h f29, f17, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f17, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f17, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f17, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f17, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f17, f25, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f1, 0(x2) # load 0x00008400 from memory into f1
la x2, scratch
li x3, 0xdec32e2f588d3d32 # load x3 with value 0xdec32e2f588d3d32
sw x3, 0(x2) # store 0xdec32e2f588d3d32 in memory
flh f30, 0(x2) # load 0xdec32e2f588d3d32 from memory into f30
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f26, 0(x2) # load 0x00007bff from memory into f26
fnmadd.h f19, f1, f30, f26, dyn # perform operation
fnmadd.h f19, f1, f30, f26, rdn # perform operation
fnmadd.h f19, f1, f30, f26, rmm # perform operation
fnmadd.h f19, f1, f30, f26, rne # perform operation
fnmadd.h f19, f1, f30, f26, rtz # perform operation
fnmadd.h f19, f1, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f1, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f1, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f1, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f1, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f1, f30, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f11, 0(x2) # load 0x00008400 from memory into f11
la x2, scratch
li x3, 0xb92c6366cf0d531f # load x3 with value 0xb92c6366cf0d531f
sw x3, 0(x2) # store 0xb92c6366cf0d531f in memory
flh f6, 0(x2) # load 0xb92c6366cf0d531f from memory into f6
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f18, 0(x2) # load 0x0000fbff from memory into f18
fnmadd.h f30, f11, f6, f18, dyn # perform operation
fnmadd.h f30, f11, f6, f18, rdn # perform operation
fnmadd.h f30, f11, f6, f18, rmm # perform operation
fnmadd.h f30, f11, f6, f18, rne # perform operation
fnmadd.h f30, f11, f6, f18, rtz # perform operation
fnmadd.h f30, f11, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f11, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f11, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f11, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f11, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f11, f6, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f9, 0(x2) # load 0x00008400 from memory into f9
la x2, scratch
li x3, 0xb663eae5827c2c34 # load x3 with value 0xb663eae5827c2c34
sw x3, 0(x2) # store 0xb663eae5827c2c34 in memory
flh f15, 0(x2) # load 0xb663eae5827c2c34 from memory into f15
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f14, 0(x2) # load 0x000003ff from memory into f14
fnmadd.h f2, f9, f15, f14, dyn # perform operation
fnmadd.h f2, f9, f15, f14, rdn # perform operation
fnmadd.h f2, f9, f15, f14, rmm # perform operation
fnmadd.h f2, f9, f15, f14, rne # perform operation
fnmadd.h f2, f9, f15, f14, rtz # perform operation
fnmadd.h f2, f9, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f9, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f9, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f9, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f9, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f9, f15, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f8, 0(x2) # load 0x00008400 from memory into f8
la x2, scratch
li x3, 0x6266462874007517 # load x3 with value 0x6266462874007517
sw x3, 0(x2) # store 0x6266462874007517 in memory
flh f23, 0(x2) # load 0x6266462874007517 from memory into f23
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
fnmadd.h f10, f8, f23, f19, dyn # perform operation
fnmadd.h f10, f8, f23, f19, rdn # perform operation
fnmadd.h f10, f8, f23, f19, rmm # perform operation
fnmadd.h f10, f8, f23, f19, rne # perform operation
fnmadd.h f10, f8, f23, f19, rtz # perform operation
fnmadd.h f10, f8, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f8, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f8, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f8, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f8, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f8, f23, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x200)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f8, 0(x2) # load 0x00008400 from memory into f8
la x2, scratch
li x3, 0x7b92dc6e406f6df2 # load x3 with value 0x7b92dc6e406f6df2
sw x3, 0(x2) # store 0x7b92dc6e406f6df2 in memory
flh f29, 0(x2) # load 0x7b92dc6e406f6df2 from memory into f29
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f31, 0(x2) # load 0x00000200 from memory into f31
fnmadd.h f15, f8, f29, f31, dyn # perform operation
fnmadd.h f15, f8, f29, f31, rdn # perform operation
fnmadd.h f15, f8, f29, f31, rmm # perform operation
fnmadd.h f15, f8, f29, f31, rne # perform operation
fnmadd.h f15, f8, f29, f31, rtz # perform operation
fnmadd.h f15, f8, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f8, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f8, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f8, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f8, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f8, f29, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x8200)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f22, 0(x2) # load 0x00008400 from memory into f22
la x2, scratch
li x3, 0x31fed5386d5ebfa3 # load x3 with value 0x31fed5386d5ebfa3
sw x3, 0(x2) # store 0x31fed5386d5ebfa3 in memory
flh f21, 0(x2) # load 0x31fed5386d5ebfa3 from memory into f21
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f23, 0(x2) # load 0x00008200 from memory into f23
fnmadd.h f26, f22, f21, f23, dyn # perform operation
fnmadd.h f26, f22, f21, f23, rdn # perform operation
fnmadd.h f26, f22, f21, f23, rmm # perform operation
fnmadd.h f26, f22, f21, f23, rne # perform operation
fnmadd.h f26, f22, f21, f23, rtz # perform operation
fnmadd.h f26, f22, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f22, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f22, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f22, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f22, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f22, f21, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x1)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f18, 0(x2) # load 0x00008400 from memory into f18
la x2, scratch
li x3, 0xa97a122f5e7e12f3 # load x3 with value 0xa97a122f5e7e12f3
sw x3, 0(x2) # store 0xa97a122f5e7e12f3 in memory
flh f31, 0(x2) # load 0xa97a122f5e7e12f3 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f22, 0(x2) # load 0x00000001 from memory into f22
fnmadd.h f9, f18, f31, f22, dyn # perform operation
fnmadd.h f9, f18, f31, f22, rdn # perform operation
fnmadd.h f9, f18, f31, f22, rmm # perform operation
fnmadd.h f9, f18, f31, f22, rne # perform operation
fnmadd.h f9, f18, f31, f22, rtz # perform operation
fnmadd.h f9, f18, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f18, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f18, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f18, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f18, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f18, f31, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x8001)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
la x2, scratch
li x3, 0x9784a42b535ce43b # load x3 with value 0x9784a42b535ce43b
sw x3, 0(x2) # store 0x9784a42b535ce43b in memory
flh f14, 0(x2) # load 0x9784a42b535ce43b from memory into f14
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f6, 0(x2) # load 0x00008001 from memory into f6
fnmadd.h f25, f15, f14, f6, dyn # perform operation
fnmadd.h f25, f15, f14, f6, rdn # perform operation
fnmadd.h f25, f15, f14, f6, rmm # perform operation
fnmadd.h f25, f15, f14, f6, rne # perform operation
fnmadd.h f25, f15, f14, f6, rtz # perform operation
fnmadd.h f25, f15, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f15, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f15, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f15, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f15, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f15, f14, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
la x2, scratch
li x3, 0x223eb804848234cd # load x3 with value 0x223eb804848234cd
sw x3, 0(x2) # store 0x223eb804848234cd in memory
flh f28, 0(x2) # load 0x223eb804848234cd from memory into f28
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
fnmadd.h f1, f13, f28, f9, dyn # perform operation
fnmadd.h f1, f13, f28, f9, rdn # perform operation
fnmadd.h f1, f13, f28, f9, rmm # perform operation
fnmadd.h f1, f13, f28, f9, rne # perform operation
fnmadd.h f1, f13, f28, f9, rtz # perform operation
fnmadd.h f1, f13, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f13, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f13, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f13, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f13, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f13, f28, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f22, 0(x2) # load 0x00008400 from memory into f22
la x2, scratch
li x3, 0xf743b6e5933cd2cb # load x3 with value 0xf743b6e5933cd2cb
sw x3, 0(x2) # store 0xf743b6e5933cd2cb in memory
flh f11, 0(x2) # load 0xf743b6e5933cd2cb from memory into f11
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f16, 0(x2) # load 0x0000fc00 from memory into f16
fnmadd.h f6, f22, f11, f16, dyn # perform operation
fnmadd.h f6, f22, f11, f16, rdn # perform operation
fnmadd.h f6, f22, f11, f16, rmm # perform operation
fnmadd.h f6, f22, f11, f16, rne # perform operation
fnmadd.h f6, f22, f11, f16, rtz # perform operation
fnmadd.h f6, f22, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f22, f11, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f1, 0(x2) # load 0x00008400 from memory into f1
la x2, scratch
li x3, 0x2b8968518cfb7801 # load x3 with value 0x2b8968518cfb7801
sw x3, 0(x2) # store 0x2b8968518cfb7801 in memory
flh f30, 0(x2) # load 0x2b8968518cfb7801 from memory into f30
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
fnmadd.h f19, f1, f30, f5, dyn # perform operation
fnmadd.h f19, f1, f30, f5, rdn # perform operation
fnmadd.h f19, f1, f30, f5, rmm # perform operation
fnmadd.h f19, f1, f30, f5, rne # perform operation
fnmadd.h f19, f1, f30, f5, rtz # perform operation
fnmadd.h f19, f1, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f1, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f1, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f1, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f1, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f1, f30, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f18, 0(x2) # load 0x00008400 from memory into f18
la x2, scratch
li x3, 0x1e3b50d13355ed66 # load x3 with value 0x1e3b50d13355ed66
sw x3, 0(x2) # store 0x1e3b50d13355ed66 in memory
flh f31, 0(x2) # load 0x1e3b50d13355ed66 from memory into f31
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f16, 0(x2) # load 0x00007fff from memory into f16
fnmadd.h f7, f18, f31, f16, dyn # perform operation
fnmadd.h f7, f18, f31, f16, rdn # perform operation
fnmadd.h f7, f18, f31, f16, rmm # perform operation
fnmadd.h f7, f18, f31, f16, rne # perform operation
fnmadd.h f7, f18, f31, f16, rtz # perform operation
fnmadd.h f7, f18, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f18, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f18, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f18, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f18, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f18, f31, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f6, 0(x2) # load 0x00008400 from memory into f6
la x2, scratch
li x3, 0xdfcb652428390f8f # load x3 with value 0xdfcb652428390f8f
sw x3, 0(x2) # store 0xdfcb652428390f8f in memory
flh f29, 0(x2) # load 0xdfcb652428390f8f from memory into f29
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f25, 0(x2) # load 0x0000fe00 from memory into f25
fnmadd.h f13, f6, f29, f25, dyn # perform operation
fnmadd.h f13, f6, f29, f25, rdn # perform operation
fnmadd.h f13, f6, f29, f25, rmm # perform operation
fnmadd.h f13, f6, f29, f25, rne # perform operation
fnmadd.h f13, f6, f29, f25, rtz # perform operation
fnmadd.h f13, f6, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f6, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f6, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f6, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f6, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f6, f29, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f31, 0(x2) # load 0x00008400 from memory into f31
la x2, scratch
li x3, 0xfe5e5e3626fa9793 # load x3 with value 0xfe5e5e3626fa9793
sw x3, 0(x2) # store 0xfe5e5e3626fa9793 in memory
flh f5, 0(x2) # load 0xfe5e5e3626fa9793 from memory into f5
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f3, 0(x2) # load 0x00007c01 from memory into f3
fnmadd.h f7, f31, f5, f3, dyn # perform operation
fnmadd.h f7, f31, f5, f3, rdn # perform operation
fnmadd.h f7, f31, f5, f3, rmm # perform operation
fnmadd.h f7, f31, f5, f3, rne # perform operation
fnmadd.h f7, f31, f5, f3, rtz # perform operation
fnmadd.h f7, f31, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f31, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f31, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f31, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f31, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f31, f5, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f25, 0(x2) # load 0x00008400 from memory into f25
la x2, scratch
li x3, 0xd9fb8052ebf5fb00 # load x3 with value 0xd9fb8052ebf5fb00
sw x3, 0(x2) # store 0xd9fb8052ebf5fb00 in memory
flh f19, 0(x2) # load 0xd9fb8052ebf5fb00 from memory into f19
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f20, 0(x2) # load 0x00007dff from memory into f20
fnmadd.h f15, f25, f19, f20, dyn # perform operation
fnmadd.h f15, f25, f19, f20, rdn # perform operation
fnmadd.h f15, f25, f19, f20, rmm # perform operation
fnmadd.h f15, f25, f19, f20, rne # perform operation
fnmadd.h f15, f25, f19, f20, rtz # perform operation
fnmadd.h f15, f25, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f25, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f25, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f25, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f25, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f25, f19, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f21, 0(x2) # load 0x00008400 from memory into f21
la x2, scratch
li x3, 0x11d64f4ff2c8f334 # load x3 with value 0x11d64f4ff2c8f334
sw x3, 0(x2) # store 0x11d64f4ff2c8f334 in memory
flh f14, 0(x2) # load 0x11d64f4ff2c8f334 from memory into f14
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f23, 0(x2) # load 0x0000fc01 from memory into f23
fnmadd.h f20, f21, f14, f23, dyn # perform operation
fnmadd.h f20, f21, f14, f23, rdn # perform operation
fnmadd.h f20, f21, f14, f23, rmm # perform operation
fnmadd.h f20, f21, f14, f23, rne # perform operation
fnmadd.h f20, f21, f14, f23, rtz # perform operation
fnmadd.h f20, f21, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f21, f14, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
la x2, scratch
li x3, 0x903238d1052d33bd # load x3 with value 0x903238d1052d33bd
sw x3, 0(x2) # store 0x903238d1052d33bd in memory
flh f22, 0(x2) # load 0x903238d1052d33bd from memory into f22
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
fnmadd.h f1, f15, f22, f21, dyn # perform operation
fnmadd.h f1, f15, f22, f21, rdn # perform operation
fnmadd.h f1, f15, f22, f21, rmm # perform operation
fnmadd.h f1, f15, f22, f21, rne # perform operation
fnmadd.h f1, f15, f22, f21, rtz # perform operation
fnmadd.h f1, f15, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f15, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f15, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f15, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f15, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f15, f22, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f7, 0(x2) # load 0x00008400 from memory into f7
la x2, scratch
li x3, 0x51aaef8c2271bb41 # load x3 with value 0x51aaef8c2271bb41
sw x3, 0(x2) # store 0x51aaef8c2271bb41 in memory
flh f31, 0(x2) # load 0x51aaef8c2271bb41 from memory into f31
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
fnmadd.h f13, f7, f31, f23, dyn # perform operation
fnmadd.h f13, f7, f31, f23, rdn # perform operation
fnmadd.h f13, f7, f31, f23, rmm # perform operation
fnmadd.h f13, f7, f31, f23, rne # perform operation
fnmadd.h f13, f7, f31, f23, rtz # perform operation
fnmadd.h f13, f7, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f7, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f7, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f7, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f7, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f7, f31, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x0)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f9, 0(x2) # load 0x00007bff from memory into f9
la x2, scratch
li x3, 0x4598c0e1970dd91f # load x3 with value 0x4598c0e1970dd91f
sw x3, 0(x2) # store 0x4598c0e1970dd91f in memory
flh f20, 0(x2) # load 0x4598c0e1970dd91f from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f19, 0(x2) # load 0x00000000 from memory into f19
fnmadd.h f30, f9, f20, f19, dyn # perform operation
fnmadd.h f30, f9, f20, f19, rdn # perform operation
fnmadd.h f30, f9, f20, f19, rmm # perform operation
fnmadd.h f30, f9, f20, f19, rne # perform operation
fnmadd.h f30, f9, f20, f19, rtz # perform operation
fnmadd.h f30, f9, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f9, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f9, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f9, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f9, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f9, f20, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x8000)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f5, 0(x2) # load 0x00007bff from memory into f5
la x2, scratch
li x3, 0x1355a408e4c4355b # load x3 with value 0x1355a408e4c4355b
sw x3, 0(x2) # store 0x1355a408e4c4355b in memory
flh f18, 0(x2) # load 0x1355a408e4c4355b from memory into f18
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f2, 0(x2) # load 0x00008000 from memory into f2
fnmadd.h f29, f5, f18, f2, dyn # perform operation
fnmadd.h f29, f5, f18, f2, rdn # perform operation
fnmadd.h f29, f5, f18, f2, rmm # perform operation
fnmadd.h f29, f5, f18, f2, rne # perform operation
fnmadd.h f29, f5, f18, f2, rtz # perform operation
fnmadd.h f29, f5, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f5, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f5, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f5, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f5, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f5, f18, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x3c00)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f31, 0(x2) # load 0x00007bff from memory into f31
la x2, scratch
li x3, 0x95523080c3402f2d # load x3 with value 0x95523080c3402f2d
sw x3, 0(x2) # store 0x95523080c3402f2d in memory
flh f12, 0(x2) # load 0x95523080c3402f2d from memory into f12
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f19, 0(x2) # load 0x00003c00 from memory into f19
fnmadd.h f5, f31, f12, f19, dyn # perform operation
fnmadd.h f5, f31, f12, f19, rdn # perform operation
fnmadd.h f5, f31, f12, f19, rmm # perform operation
fnmadd.h f5, f31, f12, f19, rne # perform operation
fnmadd.h f5, f31, f12, f19, rtz # perform operation
fnmadd.h f5, f31, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f31, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f31, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f31, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f31, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f31, f12, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xbc00)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f28, 0(x2) # load 0x00007bff from memory into f28
la x2, scratch
li x3, 0xd355f0150b0b57f # load x3 with value 0xd355f0150b0b57f
sw x3, 0(x2) # store 0xd355f0150b0b57f in memory
flh f14, 0(x2) # load 0xd355f0150b0b57f from memory into f14
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f9, 0(x2) # load 0x0000bc00 from memory into f9
fnmadd.h f5, f28, f14, f9, dyn # perform operation
fnmadd.h f5, f28, f14, f9, rdn # perform operation
fnmadd.h f5, f28, f14, f9, rmm # perform operation
fnmadd.h f5, f28, f14, f9, rne # perform operation
fnmadd.h f5, f28, f14, f9, rtz # perform operation
fnmadd.h f5, f28, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f28, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f28, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f28, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f28, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f28, f14, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x3e00)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f8, 0(x2) # load 0x00007bff from memory into f8
la x2, scratch
li x3, 0x1884c4da366b8b00 # load x3 with value 0x1884c4da366b8b00
sw x3, 0(x2) # store 0x1884c4da366b8b00 in memory
flh f29, 0(x2) # load 0x1884c4da366b8b00 from memory into f29
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f28, 0(x2) # load 0x00003e00 from memory into f28
fnmadd.h f18, f8, f29, f28, dyn # perform operation
fnmadd.h f18, f8, f29, f28, rdn # perform operation
fnmadd.h f18, f8, f29, f28, rmm # perform operation
fnmadd.h f18, f8, f29, f28, rne # perform operation
fnmadd.h f18, f8, f29, f28, rtz # perform operation
fnmadd.h f18, f8, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f8, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f8, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f8, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f8, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f8, f29, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xbe00)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f18, 0(x2) # load 0x00007bff from memory into f18
la x2, scratch
li x3, 0x19132ec35a11a909 # load x3 with value 0x19132ec35a11a909
sw x3, 0(x2) # store 0x19132ec35a11a909 in memory
flh f30, 0(x2) # load 0x19132ec35a11a909 from memory into f30
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
fnmadd.h f20, f18, f30, f23, dyn # perform operation
fnmadd.h f20, f18, f30, f23, rdn # perform operation
fnmadd.h f20, f18, f30, f23, rmm # perform operation
fnmadd.h f20, f18, f30, f23, rne # perform operation
fnmadd.h f20, f18, f30, f23, rtz # perform operation
fnmadd.h f20, f18, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f18, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f18, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f18, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f18, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f18, f30, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x4000)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f11, 0(x2) # load 0x00007bff from memory into f11
la x2, scratch
li x3, 0x48ba568d75f36df2 # load x3 with value 0x48ba568d75f36df2
sw x3, 0(x2) # store 0x48ba568d75f36df2 in memory
flh f18, 0(x2) # load 0x48ba568d75f36df2 from memory into f18
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f9, 0(x2) # load 0x00004000 from memory into f9
fnmadd.h f5, f11, f18, f9, dyn # perform operation
fnmadd.h f5, f11, f18, f9, rdn # perform operation
fnmadd.h f5, f11, f18, f9, rmm # perform operation
fnmadd.h f5, f11, f18, f9, rne # perform operation
fnmadd.h f5, f11, f18, f9, rtz # perform operation
fnmadd.h f5, f11, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f11, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f11, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f11, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f11, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f11, f18, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xc000)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f16, 0(x2) # load 0x00007bff from memory into f16
la x2, scratch
li x3, 0xf29646cc4e0e54c4 # load x3 with value 0xf29646cc4e0e54c4
sw x3, 0(x2) # store 0xf29646cc4e0e54c4 in memory
flh f28, 0(x2) # load 0xf29646cc4e0e54c4 from memory into f28
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f14, 0(x2) # load 0x0000c000 from memory into f14
fnmadd.h f7, f16, f28, f14, dyn # perform operation
fnmadd.h f7, f16, f28, f14, rdn # perform operation
fnmadd.h f7, f16, f28, f14, rmm # perform operation
fnmadd.h f7, f16, f28, f14, rne # perform operation
fnmadd.h f7, f16, f28, f14, rtz # perform operation
fnmadd.h f7, f16, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f16, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f16, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f16, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f16, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f16, f28, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x400)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f9, 0(x2) # load 0x00007bff from memory into f9
la x2, scratch
li x3, 0xf149825c395b78df # load x3 with value 0xf149825c395b78df
sw x3, 0(x2) # store 0xf149825c395b78df in memory
flh f27, 0(x2) # load 0xf149825c395b78df from memory into f27
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f6, 0(x2) # load 0x00000400 from memory into f6
fnmadd.h f31, f9, f27, f6, dyn # perform operation
fnmadd.h f31, f9, f27, f6, rdn # perform operation
fnmadd.h f31, f9, f27, f6, rmm # perform operation
fnmadd.h f31, f9, f27, f6, rne # perform operation
fnmadd.h f31, f9, f27, f6, rtz # perform operation
fnmadd.h f31, f9, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f9, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f9, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f9, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f9, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f9, f27, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x8400)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f16, 0(x2) # load 0x00007bff from memory into f16
la x2, scratch
li x3, 0xfd07c70132a40de2 # load x3 with value 0xfd07c70132a40de2
sw x3, 0(x2) # store 0xfd07c70132a40de2 in memory
flh f11, 0(x2) # load 0xfd07c70132a40de2 from memory into f11
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f26, 0(x2) # load 0x00008400 from memory into f26
fnmadd.h f7, f16, f11, f26, dyn # perform operation
fnmadd.h f7, f16, f11, f26, rdn # perform operation
fnmadd.h f7, f16, f11, f26, rmm # perform operation
fnmadd.h f7, f16, f11, f26, rne # perform operation
fnmadd.h f7, f16, f11, f26, rtz # perform operation
fnmadd.h f7, f16, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f16, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f16, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f16, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f16, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f16, f11, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7bff)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f25, 0(x2) # load 0x00007bff from memory into f25
la x2, scratch
li x3, 0xc36963e4a5e6e5a8 # load x3 with value 0xc36963e4a5e6e5a8
sw x3, 0(x2) # store 0xc36963e4a5e6e5a8 in memory
flh f11, 0(x2) # load 0xc36963e4a5e6e5a8 from memory into f11
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f3, 0(x2) # load 0x00007bff from memory into f3
fnmadd.h f1, f25, f11, f3, dyn # perform operation
fnmadd.h f1, f25, f11, f3, rdn # perform operation
fnmadd.h f1, f25, f11, f3, rmm # perform operation
fnmadd.h f1, f25, f11, f3, rne # perform operation
fnmadd.h f1, f25, f11, f3, rtz # perform operation
fnmadd.h f1, f25, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f25, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f25, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f25, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f25, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f25, f11, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xfbff)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f11, 0(x2) # load 0x00007bff from memory into f11
la x2, scratch
li x3, 0xb69126b885ea27e4 # load x3 with value 0xb69126b885ea27e4
sw x3, 0(x2) # store 0xb69126b885ea27e4 in memory
flh f31, 0(x2) # load 0xb69126b885ea27e4 from memory into f31
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
fnmadd.h f2, f11, f31, f13, dyn # perform operation
fnmadd.h f2, f11, f31, f13, rdn # perform operation
fnmadd.h f2, f11, f31, f13, rmm # perform operation
fnmadd.h f2, f11, f31, f13, rne # perform operation
fnmadd.h f2, f11, f31, f13, rtz # perform operation
fnmadd.h f2, f11, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f11, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f11, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f11, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f11, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f11, f31, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x3ff)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f5, 0(x2) # load 0x00007bff from memory into f5
la x2, scratch
li x3, 0x85d631f7da5b84a3 # load x3 with value 0x85d631f7da5b84a3
sw x3, 0(x2) # store 0x85d631f7da5b84a3 in memory
flh f9, 0(x2) # load 0x85d631f7da5b84a3 from memory into f9
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f14, 0(x2) # load 0x000003ff from memory into f14
fnmadd.h f25, f5, f9, f14, dyn # perform operation
fnmadd.h f25, f5, f9, f14, rdn # perform operation
fnmadd.h f25, f5, f9, f14, rmm # perform operation
fnmadd.h f25, f5, f9, f14, rne # perform operation
fnmadd.h f25, f5, f9, f14, rtz # perform operation
fnmadd.h f25, f5, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f5, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x83ff)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f13, 0(x2) # load 0x00007bff from memory into f13
la x2, scratch
li x3, 0xd5818628ffe24ff8 # load x3 with value 0xd5818628ffe24ff8
sw x3, 0(x2) # store 0xd5818628ffe24ff8 in memory
flh f7, 0(x2) # load 0xd5818628ffe24ff8 from memory into f7
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f1, 0(x2) # load 0x000083ff from memory into f1
fnmadd.h f31, f13, f7, f1, dyn # perform operation
fnmadd.h f31, f13, f7, f1, rdn # perform operation
fnmadd.h f31, f13, f7, f1, rmm # perform operation
fnmadd.h f31, f13, f7, f1, rne # perform operation
fnmadd.h f31, f13, f7, f1, rtz # perform operation
fnmadd.h f31, f13, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f13, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f13, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f13, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f13, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f13, f7, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x200)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f21, 0(x2) # load 0x00007bff from memory into f21
la x2, scratch
li x3, 0xa8e6ef802671fecb # load x3 with value 0xa8e6ef802671fecb
sw x3, 0(x2) # store 0xa8e6ef802671fecb in memory
flh f8, 0(x2) # load 0xa8e6ef802671fecb from memory into f8
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f25, 0(x2) # load 0x00000200 from memory into f25
fnmadd.h f31, f21, f8, f25, dyn # perform operation
fnmadd.h f31, f21, f8, f25, rdn # perform operation
fnmadd.h f31, f21, f8, f25, rmm # perform operation
fnmadd.h f31, f21, f8, f25, rne # perform operation
fnmadd.h f31, f21, f8, f25, rtz # perform operation
fnmadd.h f31, f21, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f21, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f21, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f21, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f21, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f21, f8, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x8200)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f10, 0(x2) # load 0x00007bff from memory into f10
la x2, scratch
li x3, 0x9c9e14f078234400 # load x3 with value 0x9c9e14f078234400
sw x3, 0(x2) # store 0x9c9e14f078234400 in memory
flh f9, 0(x2) # load 0x9c9e14f078234400 from memory into f9
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f27, 0(x2) # load 0x00008200 from memory into f27
fnmadd.h f1, f10, f9, f27, dyn # perform operation
fnmadd.h f1, f10, f9, f27, rdn # perform operation
fnmadd.h f1, f10, f9, f27, rmm # perform operation
fnmadd.h f1, f10, f9, f27, rne # perform operation
fnmadd.h f1, f10, f9, f27, rtz # perform operation
fnmadd.h f1, f10, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f10, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f10, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f10, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f10, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f10, f9, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x1)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f13, 0(x2) # load 0x00007bff from memory into f13
la x2, scratch
li x3, 0xafdbc31b8b751573 # load x3 with value 0xafdbc31b8b751573
sw x3, 0(x2) # store 0xafdbc31b8b751573 in memory
flh f26, 0(x2) # load 0xafdbc31b8b751573 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f21, 0(x2) # load 0x00000001 from memory into f21
fnmadd.h f19, f13, f26, f21, dyn # perform operation
fnmadd.h f19, f13, f26, f21, rdn # perform operation
fnmadd.h f19, f13, f26, f21, rmm # perform operation
fnmadd.h f19, f13, f26, f21, rne # perform operation
fnmadd.h f19, f13, f26, f21, rtz # perform operation
fnmadd.h f19, f13, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f13, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f13, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f13, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f13, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f13, f26, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x8001)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f31, 0(x2) # load 0x00007bff from memory into f31
la x2, scratch
li x3, 0x85eb7baa48641895 # load x3 with value 0x85eb7baa48641895
sw x3, 0(x2) # store 0x85eb7baa48641895 in memory
flh f10, 0(x2) # load 0x85eb7baa48641895 from memory into f10
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
fnmadd.h f20, f31, f10, f22, dyn # perform operation
fnmadd.h f20, f31, f10, f22, rdn # perform operation
fnmadd.h f20, f31, f10, f22, rmm # perform operation
fnmadd.h f20, f31, f10, f22, rne # perform operation
fnmadd.h f20, f31, f10, f22, rtz # perform operation
fnmadd.h f20, f31, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f31, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f31, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f31, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f31, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f31, f10, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7c00)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f21, 0(x2) # load 0x00007bff from memory into f21
la x2, scratch
li x3, 0x9d87c9342120168a # load x3 with value 0x9d87c9342120168a
sw x3, 0(x2) # store 0x9d87c9342120168a in memory
flh f1, 0(x2) # load 0x9d87c9342120168a from memory into f1
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f3, 0(x2) # load 0x00007c00 from memory into f3
fnmadd.h f26, f21, f1, f3, dyn # perform operation
fnmadd.h f26, f21, f1, f3, rdn # perform operation
fnmadd.h f26, f21, f1, f3, rmm # perform operation
fnmadd.h f26, f21, f1, f3, rne # perform operation
fnmadd.h f26, f21, f1, f3, rtz # perform operation
fnmadd.h f26, f21, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f21, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f21, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f21, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f21, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f21, f1, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xfc00)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f25, 0(x2) # load 0x00007bff from memory into f25
la x2, scratch
li x3, 0x87c655a4b449c683 # load x3 with value 0x87c655a4b449c683
sw x3, 0(x2) # store 0x87c655a4b449c683 in memory
flh f21, 0(x2) # load 0x87c655a4b449c683 from memory into f21
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f9, 0(x2) # load 0x0000fc00 from memory into f9
fnmadd.h f31, f25, f21, f9, dyn # perform operation
fnmadd.h f31, f25, f21, f9, rdn # perform operation
fnmadd.h f31, f25, f21, f9, rmm # perform operation
fnmadd.h f31, f25, f21, f9, rne # perform operation
fnmadd.h f31, f25, f21, f9, rtz # perform operation
fnmadd.h f31, f25, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f25, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f25, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f25, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f25, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f25, f21, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7e00)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f1, 0(x2) # load 0x00007bff from memory into f1
la x2, scratch
li x3, 0x3d7f29623d4ceaf8 # load x3 with value 0x3d7f29623d4ceaf8
sw x3, 0(x2) # store 0x3d7f29623d4ceaf8 in memory
flh f27, 0(x2) # load 0x3d7f29623d4ceaf8 from memory into f27
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f3, 0(x2) # load 0x00007e00 from memory into f3
fnmadd.h f24, f1, f27, f3, dyn # perform operation
fnmadd.h f24, f1, f27, f3, rdn # perform operation
fnmadd.h f24, f1, f27, f3, rmm # perform operation
fnmadd.h f24, f1, f27, f3, rne # perform operation
fnmadd.h f24, f1, f27, f3, rtz # perform operation
fnmadd.h f24, f1, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f1, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f1, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f1, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f1, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f1, f27, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7fff)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f7, 0(x2) # load 0x00007bff from memory into f7
la x2, scratch
li x3, 0x2ce1d1a5f480c77f # load x3 with value 0x2ce1d1a5f480c77f
sw x3, 0(x2) # store 0x2ce1d1a5f480c77f in memory
flh f8, 0(x2) # load 0x2ce1d1a5f480c77f from memory into f8
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f16, 0(x2) # load 0x00007fff from memory into f16
fnmadd.h f26, f7, f8, f16, dyn # perform operation
fnmadd.h f26, f7, f8, f16, rdn # perform operation
fnmadd.h f26, f7, f8, f16, rmm # perform operation
fnmadd.h f26, f7, f8, f16, rne # perform operation
fnmadd.h f26, f7, f8, f16, rtz # perform operation
fnmadd.h f26, f7, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f7, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f7, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f7, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f7, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f7, f8, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xfe00)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
la x2, scratch
li x3, 0xec6f8381aa54fd5 # load x3 with value 0xec6f8381aa54fd5
sw x3, 0(x2) # store 0xec6f8381aa54fd5 in memory
flh f11, 0(x2) # load 0xec6f8381aa54fd5 from memory into f11
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f31, 0(x2) # load 0x0000fe00 from memory into f31
fnmadd.h f2, f24, f11, f31, dyn # perform operation
fnmadd.h f2, f24, f11, f31, rdn # perform operation
fnmadd.h f2, f24, f11, f31, rmm # perform operation
fnmadd.h f2, f24, f11, f31, rne # perform operation
fnmadd.h f2, f24, f11, f31, rtz # perform operation
fnmadd.h f2, f24, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f24, f11, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7c01)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f8, 0(x2) # load 0x00007bff from memory into f8
la x2, scratch
li x3, 0x4ca0318c200c513f # load x3 with value 0x4ca0318c200c513f
sw x3, 0(x2) # store 0x4ca0318c200c513f in memory
flh f12, 0(x2) # load 0x4ca0318c200c513f from memory into f12
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f17, 0(x2) # load 0x00007c01 from memory into f17
fnmadd.h f28, f8, f12, f17, dyn # perform operation
fnmadd.h f28, f8, f12, f17, rdn # perform operation
fnmadd.h f28, f8, f12, f17, rmm # perform operation
fnmadd.h f28, f8, f12, f17, rne # perform operation
fnmadd.h f28, f8, f12, f17, rtz # perform operation
fnmadd.h f28, f8, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f8, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f8, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f8, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f8, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f8, f12, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7dff)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f21, 0(x2) # load 0x00007bff from memory into f21
la x2, scratch
li x3, 0xbfb9d8a9783eb0b5 # load x3 with value 0xbfb9d8a9783eb0b5
sw x3, 0(x2) # store 0xbfb9d8a9783eb0b5 in memory
flh f7, 0(x2) # load 0xbfb9d8a9783eb0b5 from memory into f7
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f10, 0(x2) # load 0x00007dff from memory into f10
fnmadd.h f8, f21, f7, f10, dyn # perform operation
fnmadd.h f8, f21, f7, f10, rdn # perform operation
fnmadd.h f8, f21, f7, f10, rmm # perform operation
fnmadd.h f8, f21, f7, f10, rne # perform operation
fnmadd.h f8, f21, f7, f10, rtz # perform operation
fnmadd.h f8, f21, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f21, f7, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xfc01)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
la x2, scratch
li x3, 0x736813fd83d2d113 # load x3 with value 0x736813fd83d2d113
sw x3, 0(x2) # store 0x736813fd83d2d113 in memory
flh f7, 0(x2) # load 0x736813fd83d2d113 from memory into f7
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f8, 0(x2) # load 0x0000fc01 from memory into f8
fnmadd.h f28, f15, f7, f8, dyn # perform operation
fnmadd.h f28, f15, f7, f8, rdn # perform operation
fnmadd.h f28, f15, f7, f8, rmm # perform operation
fnmadd.h f28, f15, f7, f8, rne # perform operation
fnmadd.h f28, f15, f7, f8, rtz # perform operation
fnmadd.h f28, f15, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f15, f7, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x58b4)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f23, 0(x2) # load 0x00007bff from memory into f23
la x2, scratch
li x3, 0x51e38b57ff6084da # load x3 with value 0x51e38b57ff6084da
sw x3, 0(x2) # store 0x51e38b57ff6084da in memory
flh f14, 0(x2) # load 0x51e38b57ff6084da from memory into f14
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f11, 0(x2) # load 0x000058b4 from memory into f11
fnmadd.h f10, f23, f14, f11, dyn # perform operation
fnmadd.h f10, f23, f14, f11, rdn # perform operation
fnmadd.h f10, f23, f14, f11, rmm # perform operation
fnmadd.h f10, f23, f14, f11, rne # perform operation
fnmadd.h f10, f23, f14, f11, rtz # perform operation
fnmadd.h f10, f23, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f23, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f23, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f23, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f23, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f23, f14, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xc93a)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f17, 0(x2) # load 0x00007bff from memory into f17
la x2, scratch
li x3, 0xb7d9a0fcf6bf3d30 # load x3 with value 0xb7d9a0fcf6bf3d30
sw x3, 0(x2) # store 0xb7d9a0fcf6bf3d30 in memory
flh f22, 0(x2) # load 0xb7d9a0fcf6bf3d30 from memory into f22
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f13, 0(x2) # load 0x0000c93a from memory into f13
fnmadd.h f1, f17, f22, f13, dyn # perform operation
fnmadd.h f1, f17, f22, f13, rdn # perform operation
fnmadd.h f1, f17, f22, f13, rmm # perform operation
fnmadd.h f1, f17, f22, f13, rne # perform operation
fnmadd.h f1, f17, f22, f13, rtz # perform operation
fnmadd.h f1, f17, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f17, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f17, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f17, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f17, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f17, f22, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x0)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f29, 0(x2) # load 0x0000fbff from memory into f29
la x2, scratch
li x3, 0x5cd1a1e217b9921 # load x3 with value 0x5cd1a1e217b9921
sw x3, 0(x2) # store 0x5cd1a1e217b9921 in memory
flh f2, 0(x2) # load 0x5cd1a1e217b9921 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f15, 0(x2) # load 0x00000000 from memory into f15
fnmadd.h f26, f29, f2, f15, dyn # perform operation
fnmadd.h f26, f29, f2, f15, rdn # perform operation
fnmadd.h f26, f29, f2, f15, rmm # perform operation
fnmadd.h f26, f29, f2, f15, rne # perform operation
fnmadd.h f26, f29, f2, f15, rtz # perform operation
fnmadd.h f26, f29, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f29, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f29, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f29, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f29, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f29, f2, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x8000)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f17, 0(x2) # load 0x0000fbff from memory into f17
la x2, scratch
li x3, 0x9a4055b2863a6692 # load x3 with value 0x9a4055b2863a6692
sw x3, 0(x2) # store 0x9a4055b2863a6692 in memory
flh f26, 0(x2) # load 0x9a4055b2863a6692 from memory into f26
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f5, 0(x2) # load 0x00008000 from memory into f5
fnmadd.h f21, f17, f26, f5, dyn # perform operation
fnmadd.h f21, f17, f26, f5, rdn # perform operation
fnmadd.h f21, f17, f26, f5, rmm # perform operation
fnmadd.h f21, f17, f26, f5, rne # perform operation
fnmadd.h f21, f17, f26, f5, rtz # perform operation
fnmadd.h f21, f17, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f17, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f17, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f17, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f17, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f17, f26, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x3c00)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f26, 0(x2) # load 0x0000fbff from memory into f26
la x2, scratch
li x3, 0x725d121abd518d12 # load x3 with value 0x725d121abd518d12
sw x3, 0(x2) # store 0x725d121abd518d12 in memory
flh f22, 0(x2) # load 0x725d121abd518d12 from memory into f22
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f20, 0(x2) # load 0x00003c00 from memory into f20
fnmadd.h f29, f26, f22, f20, dyn # perform operation
fnmadd.h f29, f26, f22, f20, rdn # perform operation
fnmadd.h f29, f26, f22, f20, rmm # perform operation
fnmadd.h f29, f26, f22, f20, rne # perform operation
fnmadd.h f29, f26, f22, f20, rtz # perform operation
fnmadd.h f29, f26, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f26, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f26, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f26, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f26, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f26, f22, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xbc00)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f8, 0(x2) # load 0x0000fbff from memory into f8
la x2, scratch
li x3, 0x3d9d6188b8ba7112 # load x3 with value 0x3d9d6188b8ba7112
sw x3, 0(x2) # store 0x3d9d6188b8ba7112 in memory
flh f25, 0(x2) # load 0x3d9d6188b8ba7112 from memory into f25
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
fnmadd.h f17, f8, f25, f24, dyn # perform operation
fnmadd.h f17, f8, f25, f24, rdn # perform operation
fnmadd.h f17, f8, f25, f24, rmm # perform operation
fnmadd.h f17, f8, f25, f24, rne # perform operation
fnmadd.h f17, f8, f25, f24, rtz # perform operation
fnmadd.h f17, f8, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f8, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f8, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f8, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f8, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f8, f25, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x3e00)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f23, 0(x2) # load 0x0000fbff from memory into f23
la x2, scratch
li x3, 0x96054f95fb83d96c # load x3 with value 0x96054f95fb83d96c
sw x3, 0(x2) # store 0x96054f95fb83d96c in memory
flh f26, 0(x2) # load 0x96054f95fb83d96c from memory into f26
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f12, 0(x2) # load 0x00003e00 from memory into f12
fnmadd.h f28, f23, f26, f12, dyn # perform operation
fnmadd.h f28, f23, f26, f12, rdn # perform operation
fnmadd.h f28, f23, f26, f12, rmm # perform operation
fnmadd.h f28, f23, f26, f12, rne # perform operation
fnmadd.h f28, f23, f26, f12, rtz # perform operation
fnmadd.h f28, f23, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f23, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f23, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f23, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f23, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f23, f26, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xbe00)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f30, 0(x2) # load 0x0000fbff from memory into f30
la x2, scratch
li x3, 0x41d3cf57fe92c561 # load x3 with value 0x41d3cf57fe92c561
sw x3, 0(x2) # store 0x41d3cf57fe92c561 in memory
flh f27, 0(x2) # load 0x41d3cf57fe92c561 from memory into f27
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f13, 0(x2) # load 0x0000be00 from memory into f13
fnmadd.h f26, f30, f27, f13, dyn # perform operation
fnmadd.h f26, f30, f27, f13, rdn # perform operation
fnmadd.h f26, f30, f27, f13, rmm # perform operation
fnmadd.h f26, f30, f27, f13, rne # perform operation
fnmadd.h f26, f30, f27, f13, rtz # perform operation
fnmadd.h f26, f30, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f30, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f30, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f30, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f30, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f30, f27, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x4000)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f6, 0(x2) # load 0x0000fbff from memory into f6
la x2, scratch
li x3, 0x5491f436ee33cbda # load x3 with value 0x5491f436ee33cbda
sw x3, 0(x2) # store 0x5491f436ee33cbda in memory
flh f23, 0(x2) # load 0x5491f436ee33cbda from memory into f23
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f24, 0(x2) # load 0x00004000 from memory into f24
fnmadd.h f21, f6, f23, f24, dyn # perform operation
fnmadd.h f21, f6, f23, f24, rdn # perform operation
fnmadd.h f21, f6, f23, f24, rmm # perform operation
fnmadd.h f21, f6, f23, f24, rne # perform operation
fnmadd.h f21, f6, f23, f24, rtz # perform operation
fnmadd.h f21, f6, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f6, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f6, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f6, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f6, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f6, f23, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xc000)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f10, 0(x2) # load 0x0000fbff from memory into f10
la x2, scratch
li x3, 0x4461921686ba4f68 # load x3 with value 0x4461921686ba4f68
sw x3, 0(x2) # store 0x4461921686ba4f68 in memory
flh f21, 0(x2) # load 0x4461921686ba4f68 from memory into f21
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f27, 0(x2) # load 0x0000c000 from memory into f27
fnmadd.h f24, f10, f21, f27, dyn # perform operation
fnmadd.h f24, f10, f21, f27, rdn # perform operation
fnmadd.h f24, f10, f21, f27, rmm # perform operation
fnmadd.h f24, f10, f21, f27, rne # perform operation
fnmadd.h f24, f10, f21, f27, rtz # perform operation
fnmadd.h f24, f10, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f10, f21, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x400)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f18, 0(x2) # load 0x0000fbff from memory into f18
la x2, scratch
li x3, 0x1559d95e4b59904 # load x3 with value 0x1559d95e4b59904
sw x3, 0(x2) # store 0x1559d95e4b59904 in memory
flh f21, 0(x2) # load 0x1559d95e4b59904 from memory into f21
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f3, 0(x2) # load 0x00000400 from memory into f3
fnmadd.h f9, f18, f21, f3, dyn # perform operation
fnmadd.h f9, f18, f21, f3, rdn # perform operation
fnmadd.h f9, f18, f21, f3, rmm # perform operation
fnmadd.h f9, f18, f21, f3, rne # perform operation
fnmadd.h f9, f18, f21, f3, rtz # perform operation
fnmadd.h f9, f18, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f18, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f18, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f18, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f18, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f18, f21, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x8400)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f26, 0(x2) # load 0x0000fbff from memory into f26
la x2, scratch
li x3, 0xde8322cd31c8a497 # load x3 with value 0xde8322cd31c8a497
sw x3, 0(x2) # store 0xde8322cd31c8a497 in memory
flh f15, 0(x2) # load 0xde8322cd31c8a497 from memory into f15
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f12, 0(x2) # load 0x00008400 from memory into f12
fnmadd.h f22, f26, f15, f12, dyn # perform operation
fnmadd.h f22, f26, f15, f12, rdn # perform operation
fnmadd.h f22, f26, f15, f12, rmm # perform operation
fnmadd.h f22, f26, f15, f12, rne # perform operation
fnmadd.h f22, f26, f15, f12, rtz # perform operation
fnmadd.h f22, f26, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f26, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f26, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f26, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f26, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f26, f15, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7bff)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f26, 0(x2) # load 0x0000fbff from memory into f26
la x2, scratch
li x3, 0x580e0ce718edc37 # load x3 with value 0x580e0ce718edc37
sw x3, 0(x2) # store 0x580e0ce718edc37 in memory
flh f24, 0(x2) # load 0x580e0ce718edc37 from memory into f24
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f25, 0(x2) # load 0x00007bff from memory into f25
fnmadd.h f8, f26, f24, f25, dyn # perform operation
fnmadd.h f8, f26, f24, f25, rdn # perform operation
fnmadd.h f8, f26, f24, f25, rmm # perform operation
fnmadd.h f8, f26, f24, f25, rne # perform operation
fnmadd.h f8, f26, f24, f25, rtz # perform operation
fnmadd.h f8, f26, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f26, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f26, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f26, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f26, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f26, f24, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xfbff)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f25, 0(x2) # load 0x0000fbff from memory into f25
la x2, scratch
li x3, 0xbf222740dc7e9549 # load x3 with value 0xbf222740dc7e9549
sw x3, 0(x2) # store 0xbf222740dc7e9549 in memory
flh f29, 0(x2) # load 0xbf222740dc7e9549 from memory into f29
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f10, 0(x2) # load 0x0000fbff from memory into f10
fnmadd.h f9, f25, f29, f10, dyn # perform operation
fnmadd.h f9, f25, f29, f10, rdn # perform operation
fnmadd.h f9, f25, f29, f10, rmm # perform operation
fnmadd.h f9, f25, f29, f10, rne # perform operation
fnmadd.h f9, f25, f29, f10, rtz # perform operation
fnmadd.h f9, f25, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f25, f29, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x3ff)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f9, 0(x2) # load 0x0000fbff from memory into f9
la x2, scratch
li x3, 0x217bcf3cb8e1083a # load x3 with value 0x217bcf3cb8e1083a
sw x3, 0(x2) # store 0x217bcf3cb8e1083a in memory
flh f6, 0(x2) # load 0x217bcf3cb8e1083a from memory into f6
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f5, 0(x2) # load 0x000003ff from memory into f5
fnmadd.h f13, f9, f6, f5, dyn # perform operation
fnmadd.h f13, f9, f6, f5, rdn # perform operation
fnmadd.h f13, f9, f6, f5, rmm # perform operation
fnmadd.h f13, f9, f6, f5, rne # perform operation
fnmadd.h f13, f9, f6, f5, rtz # perform operation
fnmadd.h f13, f9, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f9, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f9, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f9, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f9, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f9, f6, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x83ff)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f23, 0(x2) # load 0x0000fbff from memory into f23
la x2, scratch
li x3, 0x2b317e6478519cf4 # load x3 with value 0x2b317e6478519cf4
sw x3, 0(x2) # store 0x2b317e6478519cf4 in memory
flh f1, 0(x2) # load 0x2b317e6478519cf4 from memory into f1
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f27, 0(x2) # load 0x000083ff from memory into f27
fnmadd.h f20, f23, f1, f27, dyn # perform operation
fnmadd.h f20, f23, f1, f27, rdn # perform operation
fnmadd.h f20, f23, f1, f27, rmm # perform operation
fnmadd.h f20, f23, f1, f27, rne # perform operation
fnmadd.h f20, f23, f1, f27, rtz # perform operation
fnmadd.h f20, f23, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f23, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f23, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f23, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f23, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f23, f1, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x200)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f28, 0(x2) # load 0x0000fbff from memory into f28
la x2, scratch
li x3, 0x4befc71077fdf475 # load x3 with value 0x4befc71077fdf475
sw x3, 0(x2) # store 0x4befc71077fdf475 in memory
flh f3, 0(x2) # load 0x4befc71077fdf475 from memory into f3
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f8, 0(x2) # load 0x00000200 from memory into f8
fnmadd.h f7, f28, f3, f8, dyn # perform operation
fnmadd.h f7, f28, f3, f8, rdn # perform operation
fnmadd.h f7, f28, f3, f8, rmm # perform operation
fnmadd.h f7, f28, f3, f8, rne # perform operation
fnmadd.h f7, f28, f3, f8, rtz # perform operation
fnmadd.h f7, f28, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f28, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f28, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f28, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f28, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f28, f3, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x8200)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f25, 0(x2) # load 0x0000fbff from memory into f25
la x2, scratch
li x3, 0x11560e9a437bcc5a # load x3 with value 0x11560e9a437bcc5a
sw x3, 0(x2) # store 0x11560e9a437bcc5a in memory
flh f26, 0(x2) # load 0x11560e9a437bcc5a from memory into f26
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f13, 0(x2) # load 0x00008200 from memory into f13
fnmadd.h f11, f25, f26, f13, dyn # perform operation
fnmadd.h f11, f25, f26, f13, rdn # perform operation
fnmadd.h f11, f25, f26, f13, rmm # perform operation
fnmadd.h f11, f25, f26, f13, rne # perform operation
fnmadd.h f11, f25, f26, f13, rtz # perform operation
fnmadd.h f11, f25, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f25, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f25, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f25, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f25, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f25, f26, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x1)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f11, 0(x2) # load 0x0000fbff from memory into f11
la x2, scratch
li x3, 0xb472ea498a402222 # load x3 with value 0xb472ea498a402222
sw x3, 0(x2) # store 0xb472ea498a402222 in memory
flh f26, 0(x2) # load 0xb472ea498a402222 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
fnmadd.h f25, f11, f26, f5, dyn # perform operation
fnmadd.h f25, f11, f26, f5, rdn # perform operation
fnmadd.h f25, f11, f26, f5, rmm # perform operation
fnmadd.h f25, f11, f26, f5, rne # perform operation
fnmadd.h f25, f11, f26, f5, rtz # perform operation
fnmadd.h f25, f11, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f11, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f11, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f11, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f11, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f11, f26, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x8001)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
la x2, scratch
li x3, 0x71e7cb624c6f4f3e # load x3 with value 0x71e7cb624c6f4f3e
sw x3, 0(x2) # store 0x71e7cb624c6f4f3e in memory
flh f22, 0(x2) # load 0x71e7cb624c6f4f3e from memory into f22
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f1, 0(x2) # load 0x00008001 from memory into f1
fnmadd.h f24, f15, f22, f1, dyn # perform operation
fnmadd.h f24, f15, f22, f1, rdn # perform operation
fnmadd.h f24, f15, f22, f1, rmm # perform operation
fnmadd.h f24, f15, f22, f1, rne # perform operation
fnmadd.h f24, f15, f22, f1, rtz # perform operation
fnmadd.h f24, f15, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f15, f22, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7c00)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f9, 0(x2) # load 0x0000fbff from memory into f9
la x2, scratch
li x3, 0x3e3ed3d4591e28a8 # load x3 with value 0x3e3ed3d4591e28a8
sw x3, 0(x2) # store 0x3e3ed3d4591e28a8 in memory
flh f24, 0(x2) # load 0x3e3ed3d4591e28a8 from memory into f24
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f6, 0(x2) # load 0x00007c00 from memory into f6
fnmadd.h f10, f9, f24, f6, dyn # perform operation
fnmadd.h f10, f9, f24, f6, rdn # perform operation
fnmadd.h f10, f9, f24, f6, rmm # perform operation
fnmadd.h f10, f9, f24, f6, rne # perform operation
fnmadd.h f10, f9, f24, f6, rtz # perform operation
fnmadd.h f10, f9, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f9, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f9, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f9, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f9, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f9, f24, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xfc00)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f8, 0(x2) # load 0x0000fbff from memory into f8
la x2, scratch
li x3, 0x37a6d8dda480e697 # load x3 with value 0x37a6d8dda480e697
sw x3, 0(x2) # store 0x37a6d8dda480e697 in memory
flh f17, 0(x2) # load 0x37a6d8dda480e697 from memory into f17
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f25, 0(x2) # load 0x0000fc00 from memory into f25
fnmadd.h f30, f8, f17, f25, dyn # perform operation
fnmadd.h f30, f8, f17, f25, rdn # perform operation
fnmadd.h f30, f8, f17, f25, rmm # perform operation
fnmadd.h f30, f8, f17, f25, rne # perform operation
fnmadd.h f30, f8, f17, f25, rtz # perform operation
fnmadd.h f30, f8, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f8, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f8, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f8, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f8, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f8, f17, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7e00)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f21, 0(x2) # load 0x0000fbff from memory into f21
la x2, scratch
li x3, 0x4c31d1e662cde4e3 # load x3 with value 0x4c31d1e662cde4e3
sw x3, 0(x2) # store 0x4c31d1e662cde4e3 in memory
flh f19, 0(x2) # load 0x4c31d1e662cde4e3 from memory into f19
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f16, 0(x2) # load 0x00007e00 from memory into f16
fnmadd.h f2, f21, f19, f16, dyn # perform operation
fnmadd.h f2, f21, f19, f16, rdn # perform operation
fnmadd.h f2, f21, f19, f16, rmm # perform operation
fnmadd.h f2, f21, f19, f16, rne # perform operation
fnmadd.h f2, f21, f19, f16, rtz # perform operation
fnmadd.h f2, f21, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f21, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f21, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f21, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f21, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f21, f19, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7fff)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f23, 0(x2) # load 0x0000fbff from memory into f23
la x2, scratch
li x3, 0xed78c8d0975d77ed # load x3 with value 0xed78c8d0975d77ed
sw x3, 0(x2) # store 0xed78c8d0975d77ed in memory
flh f10, 0(x2) # load 0xed78c8d0975d77ed from memory into f10
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f29, 0(x2) # load 0x00007fff from memory into f29
fnmadd.h f1, f23, f10, f29, dyn # perform operation
fnmadd.h f1, f23, f10, f29, rdn # perform operation
fnmadd.h f1, f23, f10, f29, rmm # perform operation
fnmadd.h f1, f23, f10, f29, rne # perform operation
fnmadd.h f1, f23, f10, f29, rtz # perform operation
fnmadd.h f1, f23, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f23, f10, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xfe00)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f27, 0(x2) # load 0x0000fbff from memory into f27
la x2, scratch
li x3, 0x711b74f62b15a5a8 # load x3 with value 0x711b74f62b15a5a8
sw x3, 0(x2) # store 0x711b74f62b15a5a8 in memory
flh f3, 0(x2) # load 0x711b74f62b15a5a8 from memory into f3
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f13, 0(x2) # load 0x0000fe00 from memory into f13
fnmadd.h f9, f27, f3, f13, dyn # perform operation
fnmadd.h f9, f27, f3, f13, rdn # perform operation
fnmadd.h f9, f27, f3, f13, rmm # perform operation
fnmadd.h f9, f27, f3, f13, rne # perform operation
fnmadd.h f9, f27, f3, f13, rtz # perform operation
fnmadd.h f9, f27, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f27, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f27, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f27, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f27, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f27, f3, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7c01)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f11, 0(x2) # load 0x0000fbff from memory into f11
la x2, scratch
li x3, 0x602097be2380f120 # load x3 with value 0x602097be2380f120
sw x3, 0(x2) # store 0x602097be2380f120 in memory
flh f16, 0(x2) # load 0x602097be2380f120 from memory into f16
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
fnmadd.h f17, f11, f16, f30, dyn # perform operation
fnmadd.h f17, f11, f16, f30, rdn # perform operation
fnmadd.h f17, f11, f16, f30, rmm # perform operation
fnmadd.h f17, f11, f16, f30, rne # perform operation
fnmadd.h f17, f11, f16, f30, rtz # perform operation
fnmadd.h f17, f11, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f11, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f11, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f11, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f11, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f11, f16, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7dff)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f31, 0(x2) # load 0x0000fbff from memory into f31
la x2, scratch
li x3, 0x38e299c9b542b4ca # load x3 with value 0x38e299c9b542b4ca
sw x3, 0(x2) # store 0x38e299c9b542b4ca in memory
flh f12, 0(x2) # load 0x38e299c9b542b4ca from memory into f12
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f5, 0(x2) # load 0x00007dff from memory into f5
fnmadd.h f27, f31, f12, f5, dyn # perform operation
fnmadd.h f27, f31, f12, f5, rdn # perform operation
fnmadd.h f27, f31, f12, f5, rmm # perform operation
fnmadd.h f27, f31, f12, f5, rne # perform operation
fnmadd.h f27, f31, f12, f5, rtz # perform operation
fnmadd.h f27, f31, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f31, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f31, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f31, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f31, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f31, f12, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xfc01)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
la x2, scratch
li x3, 0x3a4f71fc088c80d2 # load x3 with value 0x3a4f71fc088c80d2
sw x3, 0(x2) # store 0x3a4f71fc088c80d2 in memory
flh f1, 0(x2) # load 0x3a4f71fc088c80d2 from memory into f1
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f20, 0(x2) # load 0x0000fc01 from memory into f20
fnmadd.h f29, f15, f1, f20, dyn # perform operation
fnmadd.h f29, f15, f1, f20, rdn # perform operation
fnmadd.h f29, f15, f1, f20, rmm # perform operation
fnmadd.h f29, f15, f1, f20, rne # perform operation
fnmadd.h f29, f15, f1, f20, rtz # perform operation
fnmadd.h f29, f15, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f15, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f15, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f15, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f15, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f15, f1, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x58b4)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f9, 0(x2) # load 0x0000fbff from memory into f9
la x2, scratch
li x3, 0xe3a1155128590514 # load x3 with value 0xe3a1155128590514
sw x3, 0(x2) # store 0xe3a1155128590514 in memory
flh f24, 0(x2) # load 0xe3a1155128590514 from memory into f24
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f11, 0(x2) # load 0x000058b4 from memory into f11
fnmadd.h f25, f9, f24, f11, dyn # perform operation
fnmadd.h f25, f9, f24, f11, rdn # perform operation
fnmadd.h f25, f9, f24, f11, rmm # perform operation
fnmadd.h f25, f9, f24, f11, rne # perform operation
fnmadd.h f25, f9, f24, f11, rtz # perform operation
fnmadd.h f25, f9, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f9, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f9, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f9, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f9, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f9, f24, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xc93a)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f28, 0(x2) # load 0x0000fbff from memory into f28
la x2, scratch
li x3, 0x5a58e318b3d278b1 # load x3 with value 0x5a58e318b3d278b1
sw x3, 0(x2) # store 0x5a58e318b3d278b1 in memory
flh f29, 0(x2) # load 0x5a58e318b3d278b1 from memory into f29
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
fnmadd.h f9, f28, f29, f23, dyn # perform operation
fnmadd.h f9, f28, f29, f23, rdn # perform operation
fnmadd.h f9, f28, f29, f23, rmm # perform operation
fnmadd.h f9, f28, f29, f23, rne # perform operation
fnmadd.h f9, f28, f29, f23, rtz # perform operation
fnmadd.h f9, f28, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f28, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f28, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f28, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f28, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f28, f29, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x0)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f3, 0(x2) # load 0x000003ff from memory into f3
la x2, scratch
li x3, 0x7046bc54c570fb56 # load x3 with value 0x7046bc54c570fb56
sw x3, 0(x2) # store 0x7046bc54c570fb56 in memory
flh f22, 0(x2) # load 0x7046bc54c570fb56 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f24, 0(x2) # load 0x00000000 from memory into f24
fnmadd.h f16, f3, f22, f24, dyn # perform operation
fnmadd.h f16, f3, f22, f24, rdn # perform operation
fnmadd.h f16, f3, f22, f24, rmm # perform operation
fnmadd.h f16, f3, f22, f24, rne # perform operation
fnmadd.h f16, f3, f22, f24, rtz # perform operation
fnmadd.h f16, f3, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f3, f22, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x8000)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f31, 0(x2) # load 0x000003ff from memory into f31
la x2, scratch
li x3, 0x8425e8dad5a1a8ef # load x3 with value 0x8425e8dad5a1a8ef
sw x3, 0(x2) # store 0x8425e8dad5a1a8ef in memory
flh f12, 0(x2) # load 0x8425e8dad5a1a8ef from memory into f12
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f11, 0(x2) # load 0x00008000 from memory into f11
fnmadd.h f8, f31, f12, f11, dyn # perform operation
fnmadd.h f8, f31, f12, f11, rdn # perform operation
fnmadd.h f8, f31, f12, f11, rmm # perform operation
fnmadd.h f8, f31, f12, f11, rne # perform operation
fnmadd.h f8, f31, f12, f11, rtz # perform operation
fnmadd.h f8, f31, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f31, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f31, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f31, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f31, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f31, f12, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x3c00)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
la x2, scratch
li x3, 0xcfa3a1443a022fe2 # load x3 with value 0xcfa3a1443a022fe2
sw x3, 0(x2) # store 0xcfa3a1443a022fe2 in memory
flh f7, 0(x2) # load 0xcfa3a1443a022fe2 from memory into f7
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f23, 0(x2) # load 0x00003c00 from memory into f23
fnmadd.h f24, f15, f7, f23, dyn # perform operation
fnmadd.h f24, f15, f7, f23, rdn # perform operation
fnmadd.h f24, f15, f7, f23, rmm # perform operation
fnmadd.h f24, f15, f7, f23, rne # perform operation
fnmadd.h f24, f15, f7, f23, rtz # perform operation
fnmadd.h f24, f15, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f15, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f15, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f15, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f15, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f15, f7, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xbc00)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f10, 0(x2) # load 0x000003ff from memory into f10
la x2, scratch
li x3, 0x1ce6bb027e6f6a8b # load x3 with value 0x1ce6bb027e6f6a8b
sw x3, 0(x2) # store 0x1ce6bb027e6f6a8b in memory
flh f21, 0(x2) # load 0x1ce6bb027e6f6a8b from memory into f21
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f12, 0(x2) # load 0x0000bc00 from memory into f12
fnmadd.h f13, f10, f21, f12, dyn # perform operation
fnmadd.h f13, f10, f21, f12, rdn # perform operation
fnmadd.h f13, f10, f21, f12, rmm # perform operation
fnmadd.h f13, f10, f21, f12, rne # perform operation
fnmadd.h f13, f10, f21, f12, rtz # perform operation
fnmadd.h f13, f10, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f10, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f10, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f10, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f10, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f10, f21, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x3e00)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f3, 0(x2) # load 0x000003ff from memory into f3
la x2, scratch
li x3, 0xdfdabbe5ec22581c # load x3 with value 0xdfdabbe5ec22581c
sw x3, 0(x2) # store 0xdfdabbe5ec22581c in memory
flh f11, 0(x2) # load 0xdfdabbe5ec22581c from memory into f11
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f12, 0(x2) # load 0x00003e00 from memory into f12
fnmadd.h f10, f3, f11, f12, dyn # perform operation
fnmadd.h f10, f3, f11, f12, rdn # perform operation
fnmadd.h f10, f3, f11, f12, rmm # perform operation
fnmadd.h f10, f3, f11, f12, rne # perform operation
fnmadd.h f10, f3, f11, f12, rtz # perform operation
fnmadd.h f10, f3, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f3, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f3, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f3, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f3, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f3, f11, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xbe00)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f17, 0(x2) # load 0x000003ff from memory into f17
la x2, scratch
li x3, 0x4778c1f1e9dc913e # load x3 with value 0x4778c1f1e9dc913e
sw x3, 0(x2) # store 0x4778c1f1e9dc913e in memory
flh f6, 0(x2) # load 0x4778c1f1e9dc913e from memory into f6
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f26, 0(x2) # load 0x0000be00 from memory into f26
fnmadd.h f14, f17, f6, f26, dyn # perform operation
fnmadd.h f14, f17, f6, f26, rdn # perform operation
fnmadd.h f14, f17, f6, f26, rmm # perform operation
fnmadd.h f14, f17, f6, f26, rne # perform operation
fnmadd.h f14, f17, f6, f26, rtz # perform operation
fnmadd.h f14, f17, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f17, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f17, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f17, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f17, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f17, f6, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x4000)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f8, 0(x2) # load 0x000003ff from memory into f8
la x2, scratch
li x3, 0x744d332f2366b000 # load x3 with value 0x744d332f2366b000
sw x3, 0(x2) # store 0x744d332f2366b000 in memory
flh f16, 0(x2) # load 0x744d332f2366b000 from memory into f16
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f28, 0(x2) # load 0x00004000 from memory into f28
fnmadd.h f3, f8, f16, f28, dyn # perform operation
fnmadd.h f3, f8, f16, f28, rdn # perform operation
fnmadd.h f3, f8, f16, f28, rmm # perform operation
fnmadd.h f3, f8, f16, f28, rne # perform operation
fnmadd.h f3, f8, f16, f28, rtz # perform operation
fnmadd.h f3, f8, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f8, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f8, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f8, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f8, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f8, f16, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xc000)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f6, 0(x2) # load 0x000003ff from memory into f6
la x2, scratch
li x3, 0x91db50337efbb49f # load x3 with value 0x91db50337efbb49f
sw x3, 0(x2) # store 0x91db50337efbb49f in memory
flh f12, 0(x2) # load 0x91db50337efbb49f from memory into f12
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f1, 0(x2) # load 0x0000c000 from memory into f1
fnmadd.h f7, f6, f12, f1, dyn # perform operation
fnmadd.h f7, f6, f12, f1, rdn # perform operation
fnmadd.h f7, f6, f12, f1, rmm # perform operation
fnmadd.h f7, f6, f12, f1, rne # perform operation
fnmadd.h f7, f6, f12, f1, rtz # perform operation
fnmadd.h f7, f6, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f6, f12, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x400)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f6, 0(x2) # load 0x000003ff from memory into f6
la x2, scratch
li x3, 0x66739a3909c73b2a # load x3 with value 0x66739a3909c73b2a
sw x3, 0(x2) # store 0x66739a3909c73b2a in memory
flh f1, 0(x2) # load 0x66739a3909c73b2a from memory into f1
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f17, 0(x2) # load 0x00000400 from memory into f17
fnmadd.h f15, f6, f1, f17, dyn # perform operation
fnmadd.h f15, f6, f1, f17, rdn # perform operation
fnmadd.h f15, f6, f1, f17, rmm # perform operation
fnmadd.h f15, f6, f1, f17, rne # perform operation
fnmadd.h f15, f6, f1, f17, rtz # perform operation
fnmadd.h f15, f6, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f6, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f6, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f6, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f6, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f6, f1, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x8400)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f26, 0(x2) # load 0x000003ff from memory into f26
la x2, scratch
li x3, 0xfb0a609575972e4f # load x3 with value 0xfb0a609575972e4f
sw x3, 0(x2) # store 0xfb0a609575972e4f in memory
flh f8, 0(x2) # load 0xfb0a609575972e4f from memory into f8
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f21, 0(x2) # load 0x00008400 from memory into f21
fnmadd.h f17, f26, f8, f21, dyn # perform operation
fnmadd.h f17, f26, f8, f21, rdn # perform operation
fnmadd.h f17, f26, f8, f21, rmm # perform operation
fnmadd.h f17, f26, f8, f21, rne # perform operation
fnmadd.h f17, f26, f8, f21, rtz # perform operation
fnmadd.h f17, f26, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f26, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f26, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f26, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f26, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f26, f8, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7bff)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f30, 0(x2) # load 0x000003ff from memory into f30
la x2, scratch
li x3, 0x6bd48a8cbcb7a323 # load x3 with value 0x6bd48a8cbcb7a323
sw x3, 0(x2) # store 0x6bd48a8cbcb7a323 in memory
flh f8, 0(x2) # load 0x6bd48a8cbcb7a323 from memory into f8
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f5, 0(x2) # load 0x00007bff from memory into f5
fnmadd.h f20, f30, f8, f5, dyn # perform operation
fnmadd.h f20, f30, f8, f5, rdn # perform operation
fnmadd.h f20, f30, f8, f5, rmm # perform operation
fnmadd.h f20, f30, f8, f5, rne # perform operation
fnmadd.h f20, f30, f8, f5, rtz # perform operation
fnmadd.h f20, f30, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f30, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f30, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f30, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f30, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f30, f8, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xfbff)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f28, 0(x2) # load 0x000003ff from memory into f28
la x2, scratch
li x3, 0xa5948084a334978 # load x3 with value 0xa5948084a334978
sw x3, 0(x2) # store 0xa5948084a334978 in memory
flh f29, 0(x2) # load 0xa5948084a334978 from memory into f29
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f8, 0(x2) # load 0x0000fbff from memory into f8
fnmadd.h f16, f28, f29, f8, dyn # perform operation
fnmadd.h f16, f28, f29, f8, rdn # perform operation
fnmadd.h f16, f28, f29, f8, rmm # perform operation
fnmadd.h f16, f28, f29, f8, rne # perform operation
fnmadd.h f16, f28, f29, f8, rtz # perform operation
fnmadd.h f16, f28, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f28, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f28, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f28, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f28, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f28, f29, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x3ff)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f9, 0(x2) # load 0x000003ff from memory into f9
la x2, scratch
li x3, 0x8552142f0af92218 # load x3 with value 0x8552142f0af92218
sw x3, 0(x2) # store 0x8552142f0af92218 in memory
flh f2, 0(x2) # load 0x8552142f0af92218 from memory into f2
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f3, 0(x2) # load 0x000003ff from memory into f3
fnmadd.h f17, f9, f2, f3, dyn # perform operation
fnmadd.h f17, f9, f2, f3, rdn # perform operation
fnmadd.h f17, f9, f2, f3, rmm # perform operation
fnmadd.h f17, f9, f2, f3, rne # perform operation
fnmadd.h f17, f9, f2, f3, rtz # perform operation
fnmadd.h f17, f9, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f9, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f9, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f9, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f9, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f9, f2, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x83ff)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
la x2, scratch
li x3, 0x79fc40732bbd764c # load x3 with value 0x79fc40732bbd764c
sw x3, 0(x2) # store 0x79fc40732bbd764c in memory
flh f16, 0(x2) # load 0x79fc40732bbd764c from memory into f16
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f27, 0(x2) # load 0x000083ff from memory into f27
fnmadd.h f5, f20, f16, f27, dyn # perform operation
fnmadd.h f5, f20, f16, f27, rdn # perform operation
fnmadd.h f5, f20, f16, f27, rmm # perform operation
fnmadd.h f5, f20, f16, f27, rne # perform operation
fnmadd.h f5, f20, f16, f27, rtz # perform operation
fnmadd.h f5, f20, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f20, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f20, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f20, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f20, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f20, f16, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x200)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f5, 0(x2) # load 0x000003ff from memory into f5
la x2, scratch
li x3, 0x77aa8766844667 # load x3 with value 0x77aa8766844667
sw x3, 0(x2) # store 0x77aa8766844667 in memory
flh f14, 0(x2) # load 0x77aa8766844667 from memory into f14
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f15, 0(x2) # load 0x00000200 from memory into f15
fnmadd.h f25, f5, f14, f15, dyn # perform operation
fnmadd.h f25, f5, f14, f15, rdn # perform operation
fnmadd.h f25, f5, f14, f15, rmm # perform operation
fnmadd.h f25, f5, f14, f15, rne # perform operation
fnmadd.h f25, f5, f14, f15, rtz # perform operation
fnmadd.h f25, f5, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f5, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f5, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f5, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f5, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f5, f14, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x8200)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f24, 0(x2) # load 0x000003ff from memory into f24
la x2, scratch
li x3, 0xa140fd80e3e9f49d # load x3 with value 0xa140fd80e3e9f49d
sw x3, 0(x2) # store 0xa140fd80e3e9f49d in memory
flh f25, 0(x2) # load 0xa140fd80e3e9f49d from memory into f25
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f23, 0(x2) # load 0x00008200 from memory into f23
fnmadd.h f3, f24, f25, f23, dyn # perform operation
fnmadd.h f3, f24, f25, f23, rdn # perform operation
fnmadd.h f3, f24, f25, f23, rmm # perform operation
fnmadd.h f3, f24, f25, f23, rne # perform operation
fnmadd.h f3, f24, f25, f23, rtz # perform operation
fnmadd.h f3, f24, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f24, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f24, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f24, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f24, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f24, f25, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x1)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f19, 0(x2) # load 0x000003ff from memory into f19
la x2, scratch
li x3, 0x6d879e6cba75f9e9 # load x3 with value 0x6d879e6cba75f9e9
sw x3, 0(x2) # store 0x6d879e6cba75f9e9 in memory
flh f9, 0(x2) # load 0x6d879e6cba75f9e9 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
fnmadd.h f16, f19, f9, f5, dyn # perform operation
fnmadd.h f16, f19, f9, f5, rdn # perform operation
fnmadd.h f16, f19, f9, f5, rmm # perform operation
fnmadd.h f16, f19, f9, f5, rne # perform operation
fnmadd.h f16, f19, f9, f5, rtz # perform operation
fnmadd.h f16, f19, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f19, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f19, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f19, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f19, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f19, f9, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x8001)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f5, 0(x2) # load 0x000003ff from memory into f5
la x2, scratch
li x3, 0xe51491b46b5ddb43 # load x3 with value 0xe51491b46b5ddb43
sw x3, 0(x2) # store 0xe51491b46b5ddb43 in memory
flh f26, 0(x2) # load 0xe51491b46b5ddb43 from memory into f26
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f21, 0(x2) # load 0x00008001 from memory into f21
fnmadd.h f10, f5, f26, f21, dyn # perform operation
fnmadd.h f10, f5, f26, f21, rdn # perform operation
fnmadd.h f10, f5, f26, f21, rmm # perform operation
fnmadd.h f10, f5, f26, f21, rne # perform operation
fnmadd.h f10, f5, f26, f21, rtz # perform operation
fnmadd.h f10, f5, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f5, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f5, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f5, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f5, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f5, f26, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7c00)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
la x2, scratch
li x3, 0xcb3aa87c5efcc271 # load x3 with value 0xcb3aa87c5efcc271
sw x3, 0(x2) # store 0xcb3aa87c5efcc271 in memory
flh f6, 0(x2) # load 0xcb3aa87c5efcc271 from memory into f6
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
fnmadd.h f14, f15, f6, f19, dyn # perform operation
fnmadd.h f14, f15, f6, f19, rdn # perform operation
fnmadd.h f14, f15, f6, f19, rmm # perform operation
fnmadd.h f14, f15, f6, f19, rne # perform operation
fnmadd.h f14, f15, f6, f19, rtz # perform operation
fnmadd.h f14, f15, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f15, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f15, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f15, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f15, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f15, f6, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xfc00)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f9, 0(x2) # load 0x000003ff from memory into f9
la x2, scratch
li x3, 0xc6f0264415e162b6 # load x3 with value 0xc6f0264415e162b6
sw x3, 0(x2) # store 0xc6f0264415e162b6 in memory
flh f10, 0(x2) # load 0xc6f0264415e162b6 from memory into f10
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f7, 0(x2) # load 0x0000fc00 from memory into f7
fnmadd.h f21, f9, f10, f7, dyn # perform operation
fnmadd.h f21, f9, f10, f7, rdn # perform operation
fnmadd.h f21, f9, f10, f7, rmm # perform operation
fnmadd.h f21, f9, f10, f7, rne # perform operation
fnmadd.h f21, f9, f10, f7, rtz # perform operation
fnmadd.h f21, f9, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f9, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f9, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f9, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f9, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f9, f10, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7e00)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f28, 0(x2) # load 0x000003ff from memory into f28
la x2, scratch
li x3, 0xf99b711dd31a43d6 # load x3 with value 0xf99b711dd31a43d6
sw x3, 0(x2) # store 0xf99b711dd31a43d6 in memory
flh f11, 0(x2) # load 0xf99b711dd31a43d6 from memory into f11
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f25, 0(x2) # load 0x00007e00 from memory into f25
fnmadd.h f5, f28, f11, f25, dyn # perform operation
fnmadd.h f5, f28, f11, f25, rdn # perform operation
fnmadd.h f5, f28, f11, f25, rmm # perform operation
fnmadd.h f5, f28, f11, f25, rne # perform operation
fnmadd.h f5, f28, f11, f25, rtz # perform operation
fnmadd.h f5, f28, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f28, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f28, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f28, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f28, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f28, f11, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7fff)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f30, 0(x2) # load 0x000003ff from memory into f30
la x2, scratch
li x3, 0xd8b55bcd0c01ac1c # load x3 with value 0xd8b55bcd0c01ac1c
sw x3, 0(x2) # store 0xd8b55bcd0c01ac1c in memory
flh f23, 0(x2) # load 0xd8b55bcd0c01ac1c from memory into f23
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f31, 0(x2) # load 0x00007fff from memory into f31
fnmadd.h f27, f30, f23, f31, dyn # perform operation
fnmadd.h f27, f30, f23, f31, rdn # perform operation
fnmadd.h f27, f30, f23, f31, rmm # perform operation
fnmadd.h f27, f30, f23, f31, rne # perform operation
fnmadd.h f27, f30, f23, f31, rtz # perform operation
fnmadd.h f27, f30, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f30, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f30, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f30, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f30, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f30, f23, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xfe00)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f2, 0(x2) # load 0x000003ff from memory into f2
la x2, scratch
li x3, 0x589111d31e0f9a60 # load x3 with value 0x589111d31e0f9a60
sw x3, 0(x2) # store 0x589111d31e0f9a60 in memory
flh f31, 0(x2) # load 0x589111d31e0f9a60 from memory into f31
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f20, 0(x2) # load 0x0000fe00 from memory into f20
fnmadd.h f29, f2, f31, f20, dyn # perform operation
fnmadd.h f29, f2, f31, f20, rdn # perform operation
fnmadd.h f29, f2, f31, f20, rmm # perform operation
fnmadd.h f29, f2, f31, f20, rne # perform operation
fnmadd.h f29, f2, f31, f20, rtz # perform operation
fnmadd.h f29, f2, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f2, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f2, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f2, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f2, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f2, f31, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7c01)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f2, 0(x2) # load 0x000003ff from memory into f2
la x2, scratch
li x3, 0x188125b7646966c6 # load x3 with value 0x188125b7646966c6
sw x3, 0(x2) # store 0x188125b7646966c6 in memory
flh f21, 0(x2) # load 0x188125b7646966c6 from memory into f21
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f5, 0(x2) # load 0x00007c01 from memory into f5
fnmadd.h f15, f2, f21, f5, dyn # perform operation
fnmadd.h f15, f2, f21, f5, rdn # perform operation
fnmadd.h f15, f2, f21, f5, rmm # perform operation
fnmadd.h f15, f2, f21, f5, rne # perform operation
fnmadd.h f15, f2, f21, f5, rtz # perform operation
fnmadd.h f15, f2, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f2, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f2, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f2, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f2, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f2, f21, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7dff)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
la x2, scratch
li x3, 0xbf6e30f8602aa7bd # load x3 with value 0xbf6e30f8602aa7bd
sw x3, 0(x2) # store 0xbf6e30f8602aa7bd in memory
flh f8, 0(x2) # load 0xbf6e30f8602aa7bd from memory into f8
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f25, 0(x2) # load 0x00007dff from memory into f25
fnmadd.h f24, f15, f8, f25, dyn # perform operation
fnmadd.h f24, f15, f8, f25, rdn # perform operation
fnmadd.h f24, f15, f8, f25, rmm # perform operation
fnmadd.h f24, f15, f8, f25, rne # perform operation
fnmadd.h f24, f15, f8, f25, rtz # perform operation
fnmadd.h f24, f15, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f15, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f15, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f15, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f15, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f15, f8, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xfc01)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f6, 0(x2) # load 0x000003ff from memory into f6
la x2, scratch
li x3, 0xdc40bec60ad4eff # load x3 with value 0xdc40bec60ad4eff
sw x3, 0(x2) # store 0xdc40bec60ad4eff in memory
flh f21, 0(x2) # load 0xdc40bec60ad4eff from memory into f21
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f30, 0(x2) # load 0x0000fc01 from memory into f30
fnmadd.h f10, f6, f21, f30, dyn # perform operation
fnmadd.h f10, f6, f21, f30, rdn # perform operation
fnmadd.h f10, f6, f21, f30, rmm # perform operation
fnmadd.h f10, f6, f21, f30, rne # perform operation
fnmadd.h f10, f6, f21, f30, rtz # perform operation
fnmadd.h f10, f6, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f6, f21, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x58b4)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f13, 0(x2) # load 0x000003ff from memory into f13
la x2, scratch
li x3, 0x66a57b88f2f28bda # load x3 with value 0x66a57b88f2f28bda
sw x3, 0(x2) # store 0x66a57b88f2f28bda in memory
flh f1, 0(x2) # load 0x66a57b88f2f28bda from memory into f1
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
fnmadd.h f24, f13, f1, f25, dyn # perform operation
fnmadd.h f24, f13, f1, f25, rdn # perform operation
fnmadd.h f24, f13, f1, f25, rmm # perform operation
fnmadd.h f24, f13, f1, f25, rne # perform operation
fnmadd.h f24, f13, f1, f25, rtz # perform operation
fnmadd.h f24, f13, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f13, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f13, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f13, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f13, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f13, f1, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xc93a)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f8, 0(x2) # load 0x000003ff from memory into f8
la x2, scratch
li x3, 0x30c469b049198005 # load x3 with value 0x30c469b049198005
sw x3, 0(x2) # store 0x30c469b049198005 in memory
flh f25, 0(x2) # load 0x30c469b049198005 from memory into f25
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f10, 0(x2) # load 0x0000c93a from memory into f10
fnmadd.h f11, f8, f25, f10, dyn # perform operation
fnmadd.h f11, f8, f25, f10, rdn # perform operation
fnmadd.h f11, f8, f25, f10, rmm # perform operation
fnmadd.h f11, f8, f25, f10, rne # perform operation
fnmadd.h f11, f8, f25, f10, rtz # perform operation
fnmadd.h f11, f8, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f8, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f8, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f8, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f8, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f8, f25, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x0)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
la x2, scratch
li x3, 0x83b224be24857a8e # load x3 with value 0x83b224be24857a8e
sw x3, 0(x2) # store 0x83b224be24857a8e in memory
flh f27, 0(x2) # load 0x83b224be24857a8e from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f2, 0(x2) # load 0x00000000 from memory into f2
fnmadd.h f25, f18, f27, f2, dyn # perform operation
fnmadd.h f25, f18, f27, f2, rdn # perform operation
fnmadd.h f25, f18, f27, f2, rmm # perform operation
fnmadd.h f25, f18, f27, f2, rne # perform operation
fnmadd.h f25, f18, f27, f2, rtz # perform operation
fnmadd.h f25, f18, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f18, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f18, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f18, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f18, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f18, f27, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x8000)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f29, 0(x2) # load 0x000083ff from memory into f29
la x2, scratch
li x3, 0x936bd454824c44ab # load x3 with value 0x936bd454824c44ab
sw x3, 0(x2) # store 0x936bd454824c44ab in memory
flh f19, 0(x2) # load 0x936bd454824c44ab from memory into f19
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f21, 0(x2) # load 0x00008000 from memory into f21
fnmadd.h f27, f29, f19, f21, dyn # perform operation
fnmadd.h f27, f29, f19, f21, rdn # perform operation
fnmadd.h f27, f29, f19, f21, rmm # perform operation
fnmadd.h f27, f29, f19, f21, rne # perform operation
fnmadd.h f27, f29, f19, f21, rtz # perform operation
fnmadd.h f27, f29, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f29, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f29, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f29, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f29, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f29, f19, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x3c00)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
la x2, scratch
li x3, 0x9089d5ead09684ed # load x3 with value 0x9089d5ead09684ed
sw x3, 0(x2) # store 0x9089d5ead09684ed in memory
flh f27, 0(x2) # load 0x9089d5ead09684ed from memory into f27
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f31, 0(x2) # load 0x00003c00 from memory into f31
fnmadd.h f26, f19, f27, f31, dyn # perform operation
fnmadd.h f26, f19, f27, f31, rdn # perform operation
fnmadd.h f26, f19, f27, f31, rmm # perform operation
fnmadd.h f26, f19, f27, f31, rne # perform operation
fnmadd.h f26, f19, f27, f31, rtz # perform operation
fnmadd.h f26, f19, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f19, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f19, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f19, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f19, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f19, f27, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xbc00)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f30, 0(x2) # load 0x000083ff from memory into f30
la x2, scratch
li x3, 0x5785395cf9ee5788 # load x3 with value 0x5785395cf9ee5788
sw x3, 0(x2) # store 0x5785395cf9ee5788 in memory
flh f5, 0(x2) # load 0x5785395cf9ee5788 from memory into f5
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f20, 0(x2) # load 0x0000bc00 from memory into f20
fnmadd.h f8, f30, f5, f20, dyn # perform operation
fnmadd.h f8, f30, f5, f20, rdn # perform operation
fnmadd.h f8, f30, f5, f20, rmm # perform operation
fnmadd.h f8, f30, f5, f20, rne # perform operation
fnmadd.h f8, f30, f5, f20, rtz # perform operation
fnmadd.h f8, f30, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f30, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f30, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f30, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f30, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f30, f5, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x3e00)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f27, 0(x2) # load 0x000083ff from memory into f27
la x2, scratch
li x3, 0xc52d62a4a4a789b6 # load x3 with value 0xc52d62a4a4a789b6
sw x3, 0(x2) # store 0xc52d62a4a4a789b6 in memory
flh f5, 0(x2) # load 0xc52d62a4a4a789b6 from memory into f5
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
fnmadd.h f14, f27, f5, f21, dyn # perform operation
fnmadd.h f14, f27, f5, f21, rdn # perform operation
fnmadd.h f14, f27, f5, f21, rmm # perform operation
fnmadd.h f14, f27, f5, f21, rne # perform operation
fnmadd.h f14, f27, f5, f21, rtz # perform operation
fnmadd.h f14, f27, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f27, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f27, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f27, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f27, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f27, f5, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xbe00)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f26, 0(x2) # load 0x000083ff from memory into f26
la x2, scratch
li x3, 0x5207369193904cf5 # load x3 with value 0x5207369193904cf5
sw x3, 0(x2) # store 0x5207369193904cf5 in memory
flh f28, 0(x2) # load 0x5207369193904cf5 from memory into f28
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f7, 0(x2) # load 0x0000be00 from memory into f7
fnmadd.h f18, f26, f28, f7, dyn # perform operation
fnmadd.h f18, f26, f28, f7, rdn # perform operation
fnmadd.h f18, f26, f28, f7, rmm # perform operation
fnmadd.h f18, f26, f28, f7, rne # perform operation
fnmadd.h f18, f26, f28, f7, rtz # perform operation
fnmadd.h f18, f26, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f26, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f26, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f26, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f26, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f26, f28, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x4000)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f28, 0(x2) # load 0x000083ff from memory into f28
la x2, scratch
li x3, 0x4557245b5234fc59 # load x3 with value 0x4557245b5234fc59
sw x3, 0(x2) # store 0x4557245b5234fc59 in memory
flh f24, 0(x2) # load 0x4557245b5234fc59 from memory into f24
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f25, 0(x2) # load 0x00004000 from memory into f25
fnmadd.h f12, f28, f24, f25, dyn # perform operation
fnmadd.h f12, f28, f24, f25, rdn # perform operation
fnmadd.h f12, f28, f24, f25, rmm # perform operation
fnmadd.h f12, f28, f24, f25, rne # perform operation
fnmadd.h f12, f28, f24, f25, rtz # perform operation
fnmadd.h f12, f28, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f28, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f28, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f28, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f28, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f28, f24, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xc000)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f23, 0(x2) # load 0x000083ff from memory into f23
la x2, scratch
li x3, 0x9d9751701035eba7 # load x3 with value 0x9d9751701035eba7
sw x3, 0(x2) # store 0x9d9751701035eba7 in memory
flh f26, 0(x2) # load 0x9d9751701035eba7 from memory into f26
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f24, 0(x2) # load 0x0000c000 from memory into f24
fnmadd.h f9, f23, f26, f24, dyn # perform operation
fnmadd.h f9, f23, f26, f24, rdn # perform operation
fnmadd.h f9, f23, f26, f24, rmm # perform operation
fnmadd.h f9, f23, f26, f24, rne # perform operation
fnmadd.h f9, f23, f26, f24, rtz # perform operation
fnmadd.h f9, f23, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f23, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f23, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f23, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f23, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f23, f26, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x400)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
la x2, scratch
li x3, 0xe6e933b3f43d8978 # load x3 with value 0xe6e933b3f43d8978
sw x3, 0(x2) # store 0xe6e933b3f43d8978 in memory
flh f9, 0(x2) # load 0xe6e933b3f43d8978 from memory into f9
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
fnmadd.h f22, f19, f9, f18, dyn # perform operation
fnmadd.h f22, f19, f9, f18, rdn # perform operation
fnmadd.h f22, f19, f9, f18, rmm # perform operation
fnmadd.h f22, f19, f9, f18, rne # perform operation
fnmadd.h f22, f19, f9, f18, rtz # perform operation
fnmadd.h f22, f19, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f19, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f19, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f19, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f19, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f19, f9, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x8400)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f25, 0(x2) # load 0x000083ff from memory into f25
la x2, scratch
li x3, 0xc90de2adca49aef5 # load x3 with value 0xc90de2adca49aef5
sw x3, 0(x2) # store 0xc90de2adca49aef5 in memory
flh f9, 0(x2) # load 0xc90de2adca49aef5 from memory into f9
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f23, 0(x2) # load 0x00008400 from memory into f23
fnmadd.h f13, f25, f9, f23, dyn # perform operation
fnmadd.h f13, f25, f9, f23, rdn # perform operation
fnmadd.h f13, f25, f9, f23, rmm # perform operation
fnmadd.h f13, f25, f9, f23, rne # perform operation
fnmadd.h f13, f25, f9, f23, rtz # perform operation
fnmadd.h f13, f25, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f25, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f25, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f25, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f25, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f25, f9, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7bff)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f28, 0(x2) # load 0x000083ff from memory into f28
la x2, scratch
li x3, 0x8a93ff1dc635596d # load x3 with value 0x8a93ff1dc635596d
sw x3, 0(x2) # store 0x8a93ff1dc635596d in memory
flh f17, 0(x2) # load 0x8a93ff1dc635596d from memory into f17
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f1, 0(x2) # load 0x00007bff from memory into f1
fnmadd.h f15, f28, f17, f1, dyn # perform operation
fnmadd.h f15, f28, f17, f1, rdn # perform operation
fnmadd.h f15, f28, f17, f1, rmm # perform operation
fnmadd.h f15, f28, f17, f1, rne # perform operation
fnmadd.h f15, f28, f17, f1, rtz # perform operation
fnmadd.h f15, f28, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f28, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f28, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f28, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f28, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f28, f17, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xfbff)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f26, 0(x2) # load 0x000083ff from memory into f26
la x2, scratch
li x3, 0x44e1eab8cc4f5752 # load x3 with value 0x44e1eab8cc4f5752
sw x3, 0(x2) # store 0x44e1eab8cc4f5752 in memory
flh f2, 0(x2) # load 0x44e1eab8cc4f5752 from memory into f2
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f29, 0(x2) # load 0x0000fbff from memory into f29
fnmadd.h f25, f26, f2, f29, dyn # perform operation
fnmadd.h f25, f26, f2, f29, rdn # perform operation
fnmadd.h f25, f26, f2, f29, rmm # perform operation
fnmadd.h f25, f26, f2, f29, rne # perform operation
fnmadd.h f25, f26, f2, f29, rtz # perform operation
fnmadd.h f25, f26, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f26, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f26, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f26, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f26, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f26, f2, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x3ff)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
la x2, scratch
li x3, 0xf3eff022c8e91750 # load x3 with value 0xf3eff022c8e91750
sw x3, 0(x2) # store 0xf3eff022c8e91750 in memory
flh f23, 0(x2) # load 0xf3eff022c8e91750 from memory into f23
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f12, 0(x2) # load 0x000003ff from memory into f12
fnmadd.h f31, f18, f23, f12, dyn # perform operation
fnmadd.h f31, f18, f23, f12, rdn # perform operation
fnmadd.h f31, f18, f23, f12, rmm # perform operation
fnmadd.h f31, f18, f23, f12, rne # perform operation
fnmadd.h f31, f18, f23, f12, rtz # perform operation
fnmadd.h f31, f18, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f18, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f18, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f18, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f18, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f18, f23, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x83ff)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f10, 0(x2) # load 0x000083ff from memory into f10
la x2, scratch
li x3, 0xbf19d04cf394f804 # load x3 with value 0xbf19d04cf394f804
sw x3, 0(x2) # store 0xbf19d04cf394f804 in memory
flh f27, 0(x2) # load 0xbf19d04cf394f804 from memory into f27
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f14, 0(x2) # load 0x000083ff from memory into f14
fnmadd.h f31, f10, f27, f14, dyn # perform operation
fnmadd.h f31, f10, f27, f14, rdn # perform operation
fnmadd.h f31, f10, f27, f14, rmm # perform operation
fnmadd.h f31, f10, f27, f14, rne # perform operation
fnmadd.h f31, f10, f27, f14, rtz # perform operation
fnmadd.h f31, f10, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f10, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f10, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f10, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f10, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f10, f27, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x200)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
la x2, scratch
li x3, 0xf999c473b99c4571 # load x3 with value 0xf999c473b99c4571
sw x3, 0(x2) # store 0xf999c473b99c4571 in memory
flh f22, 0(x2) # load 0xf999c473b99c4571 from memory into f22
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f14, 0(x2) # load 0x00000200 from memory into f14
fnmadd.h f30, f19, f22, f14, dyn # perform operation
fnmadd.h f30, f19, f22, f14, rdn # perform operation
fnmadd.h f30, f19, f22, f14, rmm # perform operation
fnmadd.h f30, f19, f22, f14, rne # perform operation
fnmadd.h f30, f19, f22, f14, rtz # perform operation
fnmadd.h f30, f19, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f19, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f19, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f19, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f19, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f19, f22, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x8200)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f10, 0(x2) # load 0x000083ff from memory into f10
la x2, scratch
li x3, 0x50c8f4dd2ae0a38d # load x3 with value 0x50c8f4dd2ae0a38d
sw x3, 0(x2) # store 0x50c8f4dd2ae0a38d in memory
flh f3, 0(x2) # load 0x50c8f4dd2ae0a38d from memory into f3
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f20, 0(x2) # load 0x00008200 from memory into f20
fnmadd.h f17, f10, f3, f20, dyn # perform operation
fnmadd.h f17, f10, f3, f20, rdn # perform operation
fnmadd.h f17, f10, f3, f20, rmm # perform operation
fnmadd.h f17, f10, f3, f20, rne # perform operation
fnmadd.h f17, f10, f3, f20, rtz # perform operation
fnmadd.h f17, f10, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f10, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f10, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f10, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f10, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f10, f3, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x1)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f2, 0(x2) # load 0x000083ff from memory into f2
la x2, scratch
li x3, 0x4dbcd323f28c71e2 # load x3 with value 0x4dbcd323f28c71e2
sw x3, 0(x2) # store 0x4dbcd323f28c71e2 in memory
flh f22, 0(x2) # load 0x4dbcd323f28c71e2 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f30, 0(x2) # load 0x00000001 from memory into f30
fnmadd.h f27, f2, f22, f30, dyn # perform operation
fnmadd.h f27, f2, f22, f30, rdn # perform operation
fnmadd.h f27, f2, f22, f30, rmm # perform operation
fnmadd.h f27, f2, f22, f30, rne # perform operation
fnmadd.h f27, f2, f22, f30, rtz # perform operation
fnmadd.h f27, f2, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f2, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f2, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f2, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f2, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f2, f22, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x8001)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
la x2, scratch
li x3, 0xd3db3d522d9a4c8d # load x3 with value 0xd3db3d522d9a4c8d
sw x3, 0(x2) # store 0xd3db3d522d9a4c8d in memory
flh f26, 0(x2) # load 0xd3db3d522d9a4c8d from memory into f26
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
fnmadd.h f28, f17, f26, f14, dyn # perform operation
fnmadd.h f28, f17, f26, f14, rdn # perform operation
fnmadd.h f28, f17, f26, f14, rmm # perform operation
fnmadd.h f28, f17, f26, f14, rne # perform operation
fnmadd.h f28, f17, f26, f14, rtz # perform operation
fnmadd.h f28, f17, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f17, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f17, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f17, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f17, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f17, f26, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7c00)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
la x2, scratch
li x3, 0xda48367ca3da636c # load x3 with value 0xda48367ca3da636c
sw x3, 0(x2) # store 0xda48367ca3da636c in memory
flh f18, 0(x2) # load 0xda48367ca3da636c from memory into f18
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f12, 0(x2) # load 0x00007c00 from memory into f12
fnmadd.h f10, f17, f18, f12, dyn # perform operation
fnmadd.h f10, f17, f18, f12, rdn # perform operation
fnmadd.h f10, f17, f18, f12, rmm # perform operation
fnmadd.h f10, f17, f18, f12, rne # perform operation
fnmadd.h f10, f17, f18, f12, rtz # perform operation
fnmadd.h f10, f17, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f17, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f17, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f17, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f17, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f17, f18, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xfc00)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f28, 0(x2) # load 0x000083ff from memory into f28
la x2, scratch
li x3, 0x7993b683a8ec5cba # load x3 with value 0x7993b683a8ec5cba
sw x3, 0(x2) # store 0x7993b683a8ec5cba in memory
flh f10, 0(x2) # load 0x7993b683a8ec5cba from memory into f10
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f24, 0(x2) # load 0x0000fc00 from memory into f24
fnmadd.h f9, f28, f10, f24, dyn # perform operation
fnmadd.h f9, f28, f10, f24, rdn # perform operation
fnmadd.h f9, f28, f10, f24, rmm # perform operation
fnmadd.h f9, f28, f10, f24, rne # perform operation
fnmadd.h f9, f28, f10, f24, rtz # perform operation
fnmadd.h f9, f28, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f28, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f28, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f28, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f28, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f28, f10, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7e00)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f1, 0(x2) # load 0x000083ff from memory into f1
la x2, scratch
li x3, 0xe479fe537d8235e3 # load x3 with value 0xe479fe537d8235e3
sw x3, 0(x2) # store 0xe479fe537d8235e3 in memory
flh f6, 0(x2) # load 0xe479fe537d8235e3 from memory into f6
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
fnmadd.h f27, f1, f6, f20, dyn # perform operation
fnmadd.h f27, f1, f6, f20, rdn # perform operation
fnmadd.h f27, f1, f6, f20, rmm # perform operation
fnmadd.h f27, f1, f6, f20, rne # perform operation
fnmadd.h f27, f1, f6, f20, rtz # perform operation
fnmadd.h f27, f1, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f1, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f1, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f1, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f1, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f1, f6, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7fff)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
la x2, scratch
li x3, 0x42eb5f4310b823c4 # load x3 with value 0x42eb5f4310b823c4
sw x3, 0(x2) # store 0x42eb5f4310b823c4 in memory
flh f9, 0(x2) # load 0x42eb5f4310b823c4 from memory into f9
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f3, 0(x2) # load 0x00007fff from memory into f3
fnmadd.h f5, f19, f9, f3, dyn # perform operation
fnmadd.h f5, f19, f9, f3, rdn # perform operation
fnmadd.h f5, f19, f9, f3, rmm # perform operation
fnmadd.h f5, f19, f9, f3, rne # perform operation
fnmadd.h f5, f19, f9, f3, rtz # perform operation
fnmadd.h f5, f19, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f19, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f19, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f19, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f19, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f19, f9, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xfe00)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f26, 0(x2) # load 0x000083ff from memory into f26
la x2, scratch
li x3, 0x5600a20775d0021a # load x3 with value 0x5600a20775d0021a
sw x3, 0(x2) # store 0x5600a20775d0021a in memory
flh f16, 0(x2) # load 0x5600a20775d0021a from memory into f16
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f30, 0(x2) # load 0x0000fe00 from memory into f30
fnmadd.h f24, f26, f16, f30, dyn # perform operation
fnmadd.h f24, f26, f16, f30, rdn # perform operation
fnmadd.h f24, f26, f16, f30, rmm # perform operation
fnmadd.h f24, f26, f16, f30, rne # perform operation
fnmadd.h f24, f26, f16, f30, rtz # perform operation
fnmadd.h f24, f26, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f26, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f26, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f26, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f26, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f26, f16, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7c01)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f10, 0(x2) # load 0x000083ff from memory into f10
la x2, scratch
li x3, 0xe559206a73ee407d # load x3 with value 0xe559206a73ee407d
sw x3, 0(x2) # store 0xe559206a73ee407d in memory
flh f11, 0(x2) # load 0xe559206a73ee407d from memory into f11
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f2, 0(x2) # load 0x00007c01 from memory into f2
fnmadd.h f7, f10, f11, f2, dyn # perform operation
fnmadd.h f7, f10, f11, f2, rdn # perform operation
fnmadd.h f7, f10, f11, f2, rmm # perform operation
fnmadd.h f7, f10, f11, f2, rne # perform operation
fnmadd.h f7, f10, f11, f2, rtz # perform operation
fnmadd.h f7, f10, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f10, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f10, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f10, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f10, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f10, f11, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7dff)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
la x2, scratch
li x3, 0x9f7c5412cc7409ea # load x3 with value 0x9f7c5412cc7409ea
sw x3, 0(x2) # store 0x9f7c5412cc7409ea in memory
flh f14, 0(x2) # load 0x9f7c5412cc7409ea from memory into f14
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f20, 0(x2) # load 0x00007dff from memory into f20
fnmadd.h f30, f17, f14, f20, dyn # perform operation
fnmadd.h f30, f17, f14, f20, rdn # perform operation
fnmadd.h f30, f17, f14, f20, rmm # perform operation
fnmadd.h f30, f17, f14, f20, rne # perform operation
fnmadd.h f30, f17, f14, f20, rtz # perform operation
fnmadd.h f30, f17, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f17, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f17, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f17, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f17, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f17, f14, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xfc01)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
la x2, scratch
li x3, 0x50a7da1453e16cb1 # load x3 with value 0x50a7da1453e16cb1
sw x3, 0(x2) # store 0x50a7da1453e16cb1 in memory
flh f14, 0(x2) # load 0x50a7da1453e16cb1 from memory into f14
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f10, 0(x2) # load 0x0000fc01 from memory into f10
fnmadd.h f12, f18, f14, f10, dyn # perform operation
fnmadd.h f12, f18, f14, f10, rdn # perform operation
fnmadd.h f12, f18, f14, f10, rmm # perform operation
fnmadd.h f12, f18, f14, f10, rne # perform operation
fnmadd.h f12, f18, f14, f10, rtz # perform operation
fnmadd.h f12, f18, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f18, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f18, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f18, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f18, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f18, f14, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x58b4)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f12, 0(x2) # load 0x000083ff from memory into f12
la x2, scratch
li x3, 0x4069bdaba2212990 # load x3 with value 0x4069bdaba2212990
sw x3, 0(x2) # store 0x4069bdaba2212990 in memory
flh f11, 0(x2) # load 0x4069bdaba2212990 from memory into f11
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f15, 0(x2) # load 0x000058b4 from memory into f15
fnmadd.h f30, f12, f11, f15, dyn # perform operation
fnmadd.h f30, f12, f11, f15, rdn # perform operation
fnmadd.h f30, f12, f11, f15, rmm # perform operation
fnmadd.h f30, f12, f11, f15, rne # perform operation
fnmadd.h f30, f12, f11, f15, rtz # perform operation
fnmadd.h f30, f12, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f12, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f12, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f12, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f12, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f12, f11, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xc93a)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f12, 0(x2) # load 0x000083ff from memory into f12
la x2, scratch
li x3, 0x62bae157a9a8b42 # load x3 with value 0x62bae157a9a8b42
sw x3, 0(x2) # store 0x62bae157a9a8b42 in memory
flh f21, 0(x2) # load 0x62bae157a9a8b42 from memory into f21
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f8, 0(x2) # load 0x0000c93a from memory into f8
fnmadd.h f26, f12, f21, f8, dyn # perform operation
fnmadd.h f26, f12, f21, f8, rdn # perform operation
fnmadd.h f26, f12, f21, f8, rmm # perform operation
fnmadd.h f26, f12, f21, f8, rne # perform operation
fnmadd.h f26, f12, f21, f8, rtz # perform operation
fnmadd.h f26, f12, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f12, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f12, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f12, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f12, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f12, f21, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x0)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f11, 0(x2) # load 0x00000200 from memory into f11
la x2, scratch
li x3, 0xb71dc6f4d3da84ad # load x3 with value 0xb71dc6f4d3da84ad
sw x3, 0(x2) # store 0xb71dc6f4d3da84ad in memory
flh f1, 0(x2) # load 0xb71dc6f4d3da84ad from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f15, 0(x2) # load 0x00000000 from memory into f15
fnmadd.h f30, f11, f1, f15, dyn # perform operation
fnmadd.h f30, f11, f1, f15, rdn # perform operation
fnmadd.h f30, f11, f1, f15, rmm # perform operation
fnmadd.h f30, f11, f1, f15, rne # perform operation
fnmadd.h f30, f11, f1, f15, rtz # perform operation
fnmadd.h f30, f11, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f11, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f11, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f11, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f11, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f11, f1, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x8000)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f14, 0(x2) # load 0x00000200 from memory into f14
la x2, scratch
li x3, 0x1249da7466699385 # load x3 with value 0x1249da7466699385
sw x3, 0(x2) # store 0x1249da7466699385 in memory
flh f9, 0(x2) # load 0x1249da7466699385 from memory into f9
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f19, 0(x2) # load 0x00008000 from memory into f19
fnmadd.h f11, f14, f9, f19, dyn # perform operation
fnmadd.h f11, f14, f9, f19, rdn # perform operation
fnmadd.h f11, f14, f9, f19, rmm # perform operation
fnmadd.h f11, f14, f9, f19, rne # perform operation
fnmadd.h f11, f14, f9, f19, rtz # perform operation
fnmadd.h f11, f14, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f14, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f14, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f14, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f14, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f14, f9, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f28, 0(x2) # load 0x00000200 from memory into f28
la x2, scratch
li x3, 0x9b8fdddd2f3a060d # load x3 with value 0x9b8fdddd2f3a060d
sw x3, 0(x2) # store 0x9b8fdddd2f3a060d in memory
flh f18, 0(x2) # load 0x9b8fdddd2f3a060d from memory into f18
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
fnmadd.h f25, f28, f18, f8, dyn # perform operation
fnmadd.h f25, f28, f18, f8, rdn # perform operation
fnmadd.h f25, f28, f18, f8, rmm # perform operation
fnmadd.h f25, f28, f18, f8, rne # perform operation
fnmadd.h f25, f28, f18, f8, rtz # perform operation
fnmadd.h f25, f28, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f28, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f28, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f28, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f28, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f28, f18, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f25, 0(x2) # load 0x00000200 from memory into f25
la x2, scratch
li x3, 0x76ee18f35586c1ea # load x3 with value 0x76ee18f35586c1ea
sw x3, 0(x2) # store 0x76ee18f35586c1ea in memory
flh f17, 0(x2) # load 0x76ee18f35586c1ea from memory into f17
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f21, 0(x2) # load 0x0000bc00 from memory into f21
fnmadd.h f14, f25, f17, f21, dyn # perform operation
fnmadd.h f14, f25, f17, f21, rdn # perform operation
fnmadd.h f14, f25, f17, f21, rmm # perform operation
fnmadd.h f14, f25, f17, f21, rne # perform operation
fnmadd.h f14, f25, f17, f21, rtz # perform operation
fnmadd.h f14, f25, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f25, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f25, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f25, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f25, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f25, f17, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f29, 0(x2) # load 0x00000200 from memory into f29
la x2, scratch
li x3, 0x4411279cdecd368a # load x3 with value 0x4411279cdecd368a
sw x3, 0(x2) # store 0x4411279cdecd368a in memory
flh f16, 0(x2) # load 0x4411279cdecd368a from memory into f16
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f17, 0(x2) # load 0x00003e00 from memory into f17
fnmadd.h f5, f29, f16, f17, dyn # perform operation
fnmadd.h f5, f29, f16, f17, rdn # perform operation
fnmadd.h f5, f29, f16, f17, rmm # perform operation
fnmadd.h f5, f29, f16, f17, rne # perform operation
fnmadd.h f5, f29, f16, f17, rtz # perform operation
fnmadd.h f5, f29, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f29, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f29, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f29, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f29, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f29, f16, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f30, 0(x2) # load 0x00000200 from memory into f30
la x2, scratch
li x3, 0x945232422ec430a9 # load x3 with value 0x945232422ec430a9
sw x3, 0(x2) # store 0x945232422ec430a9 in memory
flh f27, 0(x2) # load 0x945232422ec430a9 from memory into f27
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f31, 0(x2) # load 0x0000be00 from memory into f31
fnmadd.h f3, f30, f27, f31, dyn # perform operation
fnmadd.h f3, f30, f27, f31, rdn # perform operation
fnmadd.h f3, f30, f27, f31, rmm # perform operation
fnmadd.h f3, f30, f27, f31, rne # perform operation
fnmadd.h f3, f30, f27, f31, rtz # perform operation
fnmadd.h f3, f30, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f30, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f30, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f30, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f30, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f30, f27, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x4000)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
la x2, scratch
li x3, 0x2bf1575837d38a38 # load x3 with value 0x2bf1575837d38a38
sw x3, 0(x2) # store 0x2bf1575837d38a38 in memory
flh f9, 0(x2) # load 0x2bf1575837d38a38 from memory into f9
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f14, 0(x2) # load 0x00004000 from memory into f14
fnmadd.h f20, f6, f9, f14, dyn # perform operation
fnmadd.h f20, f6, f9, f14, rdn # perform operation
fnmadd.h f20, f6, f9, f14, rmm # perform operation
fnmadd.h f20, f6, f9, f14, rne # perform operation
fnmadd.h f20, f6, f9, f14, rtz # perform operation
fnmadd.h f20, f6, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f6, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xc000)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
la x2, scratch
li x3, 0x190f4396cbe37546 # load x3 with value 0x190f4396cbe37546
sw x3, 0(x2) # store 0x190f4396cbe37546 in memory
flh f12, 0(x2) # load 0x190f4396cbe37546 from memory into f12
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
fnmadd.h f25, f24, f12, f30, dyn # perform operation
fnmadd.h f25, f24, f12, f30, rdn # perform operation
fnmadd.h f25, f24, f12, f30, rmm # perform operation
fnmadd.h f25, f24, f12, f30, rne # perform operation
fnmadd.h f25, f24, f12, f30, rtz # perform operation
fnmadd.h f25, f24, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f24, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f24, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f24, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f24, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f24, f12, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x400)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
la x2, scratch
li x3, 0x16097a2d05304942 # load x3 with value 0x16097a2d05304942
sw x3, 0(x2) # store 0x16097a2d05304942 in memory
flh f27, 0(x2) # load 0x16097a2d05304942 from memory into f27
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
fnmadd.h f13, f19, f27, f1, dyn # perform operation
fnmadd.h f13, f19, f27, f1, rdn # perform operation
fnmadd.h f13, f19, f27, f1, rmm # perform operation
fnmadd.h f13, f19, f27, f1, rne # perform operation
fnmadd.h f13, f19, f27, f1, rtz # perform operation
fnmadd.h f13, f19, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f19, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f19, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f19, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f19, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f19, f27, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x8400)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
la x2, scratch
li x3, 0xb658c0a46c62b976 # load x3 with value 0xb658c0a46c62b976
sw x3, 0(x2) # store 0xb658c0a46c62b976 in memory
flh f19, 0(x2) # load 0xb658c0a46c62b976 from memory into f19
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f21, 0(x2) # load 0x00008400 from memory into f21
fnmadd.h f5, f6, f19, f21, dyn # perform operation
fnmadd.h f5, f6, f19, f21, rdn # perform operation
fnmadd.h f5, f6, f19, f21, rmm # perform operation
fnmadd.h f5, f6, f19, f21, rne # perform operation
fnmadd.h f5, f6, f19, f21, rtz # perform operation
fnmadd.h f5, f6, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f6, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f6, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f6, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f6, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f6, f19, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f16, 0(x2) # load 0x00000200 from memory into f16
la x2, scratch
li x3, 0xc08a9c1f415f5df9 # load x3 with value 0xc08a9c1f415f5df9
sw x3, 0(x2) # store 0xc08a9c1f415f5df9 in memory
flh f21, 0(x2) # load 0xc08a9c1f415f5df9 from memory into f21
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
fnmadd.h f8, f16, f21, f24, dyn # perform operation
fnmadd.h f8, f16, f21, f24, rdn # perform operation
fnmadd.h f8, f16, f21, f24, rmm # perform operation
fnmadd.h f8, f16, f21, f24, rne # perform operation
fnmadd.h f8, f16, f21, f24, rtz # perform operation
fnmadd.h f8, f16, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f16, f21, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f21, 0(x2) # load 0x00000200 from memory into f21
la x2, scratch
li x3, 0x81c7b9a88e3bee33 # load x3 with value 0x81c7b9a88e3bee33
sw x3, 0(x2) # store 0x81c7b9a88e3bee33 in memory
flh f15, 0(x2) # load 0x81c7b9a88e3bee33 from memory into f15
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f10, 0(x2) # load 0x0000fbff from memory into f10
fnmadd.h f11, f21, f15, f10, dyn # perform operation
fnmadd.h f11, f21, f15, f10, rdn # perform operation
fnmadd.h f11, f21, f15, f10, rmm # perform operation
fnmadd.h f11, f21, f15, f10, rne # perform operation
fnmadd.h f11, f21, f15, f10, rtz # perform operation
fnmadd.h f11, f21, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f21, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f21, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f21, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f21, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f21, f15, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f20, 0(x2) # load 0x00000200 from memory into f20
la x2, scratch
li x3, 0xcc759466c6c410ff # load x3 with value 0xcc759466c6c410ff
sw x3, 0(x2) # store 0xcc759466c6c410ff in memory
flh f31, 0(x2) # load 0xcc759466c6c410ff from memory into f31
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f7, 0(x2) # load 0x000003ff from memory into f7
fnmadd.h f10, f20, f31, f7, dyn # perform operation
fnmadd.h f10, f20, f31, f7, rdn # perform operation
fnmadd.h f10, f20, f31, f7, rmm # perform operation
fnmadd.h f10, f20, f31, f7, rne # perform operation
fnmadd.h f10, f20, f31, f7, rtz # perform operation
fnmadd.h f10, f20, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f20, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f20, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f20, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f20, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f20, f31, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f31, 0(x2) # load 0x00000200 from memory into f31
la x2, scratch
li x3, 0x5c2ef13a1b33e3cc # load x3 with value 0x5c2ef13a1b33e3cc
sw x3, 0(x2) # store 0x5c2ef13a1b33e3cc in memory
flh f12, 0(x2) # load 0x5c2ef13a1b33e3cc from memory into f12
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f9, 0(x2) # load 0x000083ff from memory into f9
fnmadd.h f20, f31, f12, f9, dyn # perform operation
fnmadd.h f20, f31, f12, f9, rdn # perform operation
fnmadd.h f20, f31, f12, f9, rmm # perform operation
fnmadd.h f20, f31, f12, f9, rne # perform operation
fnmadd.h f20, f31, f12, f9, rtz # perform operation
fnmadd.h f20, f31, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f31, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f31, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f31, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f31, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f31, f12, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x200)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
la x2, scratch
li x3, 0x2c45a3cbdbd3714e # load x3 with value 0x2c45a3cbdbd3714e
sw x3, 0(x2) # store 0x2c45a3cbdbd3714e in memory
flh f10, 0(x2) # load 0x2c45a3cbdbd3714e from memory into f10
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f5, 0(x2) # load 0x00000200 from memory into f5
fnmadd.h f26, f6, f10, f5, dyn # perform operation
fnmadd.h f26, f6, f10, f5, rdn # perform operation
fnmadd.h f26, f6, f10, f5, rmm # perform operation
fnmadd.h f26, f6, f10, f5, rne # perform operation
fnmadd.h f26, f6, f10, f5, rtz # perform operation
fnmadd.h f26, f6, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f6, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f6, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f6, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f6, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f6, f10, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x8200)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f31, 0(x2) # load 0x00000200 from memory into f31
la x2, scratch
li x3, 0x83612070998383c2 # load x3 with value 0x83612070998383c2
sw x3, 0(x2) # store 0x83612070998383c2 in memory
flh f20, 0(x2) # load 0x83612070998383c2 from memory into f20
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f23, 0(x2) # load 0x00008200 from memory into f23
fnmadd.h f29, f31, f20, f23, dyn # perform operation
fnmadd.h f29, f31, f20, f23, rdn # perform operation
fnmadd.h f29, f31, f20, f23, rmm # perform operation
fnmadd.h f29, f31, f20, f23, rne # perform operation
fnmadd.h f29, f31, f20, f23, rtz # perform operation
fnmadd.h f29, f31, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f31, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f31, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f31, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f31, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f31, f20, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x1)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f8, 0(x2) # load 0x00000200 from memory into f8
la x2, scratch
li x3, 0x14f110897c502560 # load x3 with value 0x14f110897c502560
sw x3, 0(x2) # store 0x14f110897c502560 in memory
flh f6, 0(x2) # load 0x14f110897c502560 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f18, 0(x2) # load 0x00000001 from memory into f18
fnmadd.h f5, f8, f6, f18, dyn # perform operation
fnmadd.h f5, f8, f6, f18, rdn # perform operation
fnmadd.h f5, f8, f6, f18, rmm # perform operation
fnmadd.h f5, f8, f6, f18, rne # perform operation
fnmadd.h f5, f8, f6, f18, rtz # perform operation
fnmadd.h f5, f8, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f8, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f8, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f8, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f8, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f8, f6, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x8001)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f3, 0(x2) # load 0x00000200 from memory into f3
la x2, scratch
li x3, 0x2dc2776fa7188f4d # load x3 with value 0x2dc2776fa7188f4d
sw x3, 0(x2) # store 0x2dc2776fa7188f4d in memory
flh f17, 0(x2) # load 0x2dc2776fa7188f4d from memory into f17
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
fnmadd.h f23, f3, f17, f14, dyn # perform operation
fnmadd.h f23, f3, f17, f14, rdn # perform operation
fnmadd.h f23, f3, f17, f14, rmm # perform operation
fnmadd.h f23, f3, f17, f14, rne # perform operation
fnmadd.h f23, f3, f17, f14, rtz # perform operation
fnmadd.h f23, f3, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f3, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f3, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f3, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f3, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f3, f17, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
la x2, scratch
li x3, 0xa4712514e42fd0e2 # load x3 with value 0xa4712514e42fd0e2
sw x3, 0(x2) # store 0xa4712514e42fd0e2 in memory
flh f26, 0(x2) # load 0xa4712514e42fd0e2 from memory into f26
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f6, 0(x2) # load 0x00007c00 from memory into f6
fnmadd.h f19, f24, f26, f6, dyn # perform operation
fnmadd.h f19, f24, f26, f6, rdn # perform operation
fnmadd.h f19, f24, f26, f6, rmm # perform operation
fnmadd.h f19, f24, f26, f6, rne # perform operation
fnmadd.h f19, f24, f26, f6, rtz # perform operation
fnmadd.h f19, f24, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f24, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f24, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f24, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f24, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f24, f26, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f9, 0(x2) # load 0x00000200 from memory into f9
la x2, scratch
li x3, 0xd4d5d1638694750b # load x3 with value 0xd4d5d1638694750b
sw x3, 0(x2) # store 0xd4d5d1638694750b in memory
flh f14, 0(x2) # load 0xd4d5d1638694750b from memory into f14
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f18, 0(x2) # load 0x0000fc00 from memory into f18
fnmadd.h f19, f9, f14, f18, dyn # perform operation
fnmadd.h f19, f9, f14, f18, rdn # perform operation
fnmadd.h f19, f9, f14, f18, rmm # perform operation
fnmadd.h f19, f9, f14, f18, rne # perform operation
fnmadd.h f19, f9, f14, f18, rtz # perform operation
fnmadd.h f19, f9, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f9, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f9, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f9, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f9, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f9, f14, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f28, 0(x2) # load 0x00000200 from memory into f28
la x2, scratch
li x3, 0x1850655fd3ce2125 # load x3 with value 0x1850655fd3ce2125
sw x3, 0(x2) # store 0x1850655fd3ce2125 in memory
flh f1, 0(x2) # load 0x1850655fd3ce2125 from memory into f1
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f16, 0(x2) # load 0x00007e00 from memory into f16
fnmadd.h f9, f28, f1, f16, dyn # perform operation
fnmadd.h f9, f28, f1, f16, rdn # perform operation
fnmadd.h f9, f28, f1, f16, rmm # perform operation
fnmadd.h f9, f28, f1, f16, rne # perform operation
fnmadd.h f9, f28, f1, f16, rtz # perform operation
fnmadd.h f9, f28, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f28, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f28, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f28, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f28, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f28, f1, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f12, 0(x2) # load 0x00000200 from memory into f12
la x2, scratch
li x3, 0xebf5402a7e48b4c2 # load x3 with value 0xebf5402a7e48b4c2
sw x3, 0(x2) # store 0xebf5402a7e48b4c2 in memory
flh f13, 0(x2) # load 0xebf5402a7e48b4c2 from memory into f13
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f7, 0(x2) # load 0x00007fff from memory into f7
fnmadd.h f23, f12, f13, f7, dyn # perform operation
fnmadd.h f23, f12, f13, f7, rdn # perform operation
fnmadd.h f23, f12, f13, f7, rmm # perform operation
fnmadd.h f23, f12, f13, f7, rne # perform operation
fnmadd.h f23, f12, f13, f7, rtz # perform operation
fnmadd.h f23, f12, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f12, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f12, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f12, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f12, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f12, f13, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f12, 0(x2) # load 0x00000200 from memory into f12
la x2, scratch
li x3, 0xc3af36e7a8cfa0e4 # load x3 with value 0xc3af36e7a8cfa0e4
sw x3, 0(x2) # store 0xc3af36e7a8cfa0e4 in memory
flh f20, 0(x2) # load 0xc3af36e7a8cfa0e4 from memory into f20
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f22, 0(x2) # load 0x0000fe00 from memory into f22
fnmadd.h f26, f12, f20, f22, dyn # perform operation
fnmadd.h f26, f12, f20, f22, rdn # perform operation
fnmadd.h f26, f12, f20, f22, rmm # perform operation
fnmadd.h f26, f12, f20, f22, rne # perform operation
fnmadd.h f26, f12, f20, f22, rtz # perform operation
fnmadd.h f26, f12, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f12, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f12, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f12, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f12, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f12, f20, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f15, 0(x2) # load 0x00000200 from memory into f15
la x2, scratch
li x3, 0xea832dba09ad19fc # load x3 with value 0xea832dba09ad19fc
sw x3, 0(x2) # store 0xea832dba09ad19fc in memory
flh f11, 0(x2) # load 0xea832dba09ad19fc from memory into f11
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f27, 0(x2) # load 0x00007c01 from memory into f27
fnmadd.h f24, f15, f11, f27, dyn # perform operation
fnmadd.h f24, f15, f11, f27, rdn # perform operation
fnmadd.h f24, f15, f11, f27, rmm # perform operation
fnmadd.h f24, f15, f11, f27, rne # perform operation
fnmadd.h f24, f15, f11, f27, rtz # perform operation
fnmadd.h f24, f15, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f15, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f15, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f15, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f15, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f15, f11, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
la x2, scratch
li x3, 0xd85e95b48d2e6a04 # load x3 with value 0xd85e95b48d2e6a04
sw x3, 0(x2) # store 0xd85e95b48d2e6a04 in memory
flh f12, 0(x2) # load 0xd85e95b48d2e6a04 from memory into f12
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f25, 0(x2) # load 0x00007dff from memory into f25
fnmadd.h f3, f13, f12, f25, dyn # perform operation
fnmadd.h f3, f13, f12, f25, rdn # perform operation
fnmadd.h f3, f13, f12, f25, rmm # perform operation
fnmadd.h f3, f13, f12, f25, rne # perform operation
fnmadd.h f3, f13, f12, f25, rtz # perform operation
fnmadd.h f3, f13, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f13, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f13, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f13, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f13, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f13, f12, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f2, 0(x2) # load 0x00000200 from memory into f2
la x2, scratch
li x3, 0x6df4877cee3c726e # load x3 with value 0x6df4877cee3c726e
sw x3, 0(x2) # store 0x6df4877cee3c726e in memory
flh f21, 0(x2) # load 0x6df4877cee3c726e from memory into f21
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f5, 0(x2) # load 0x0000fc01 from memory into f5
fnmadd.h f28, f2, f21, f5, dyn # perform operation
fnmadd.h f28, f2, f21, f5, rdn # perform operation
fnmadd.h f28, f2, f21, f5, rmm # perform operation
fnmadd.h f28, f2, f21, f5, rne # perform operation
fnmadd.h f28, f2, f21, f5, rtz # perform operation
fnmadd.h f28, f2, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f2, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f2, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f2, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f2, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f2, f21, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f18, 0(x2) # load 0x00000200 from memory into f18
la x2, scratch
li x3, 0x348f3d19ee93ce87 # load x3 with value 0x348f3d19ee93ce87
sw x3, 0(x2) # store 0x348f3d19ee93ce87 in memory
flh f6, 0(x2) # load 0x348f3d19ee93ce87 from memory into f6
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f8, 0(x2) # load 0x000058b4 from memory into f8
fnmadd.h f26, f18, f6, f8, dyn # perform operation
fnmadd.h f26, f18, f6, f8, rdn # perform operation
fnmadd.h f26, f18, f6, f8, rmm # perform operation
fnmadd.h f26, f18, f6, f8, rne # perform operation
fnmadd.h f26, f18, f6, f8, rtz # perform operation
fnmadd.h f26, f18, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f18, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f18, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f18, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f18, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f18, f6, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f21, 0(x2) # load 0x00000200 from memory into f21
la x2, scratch
li x3, 0xe687e4a9321def6 # load x3 with value 0xe687e4a9321def6
sw x3, 0(x2) # store 0xe687e4a9321def6 in memory
flh f19, 0(x2) # load 0xe687e4a9321def6 from memory into f19
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
fnmadd.h f9, f21, f19, f3, dyn # perform operation
fnmadd.h f9, f21, f19, f3, rdn # perform operation
fnmadd.h f9, f21, f19, f3, rmm # perform operation
fnmadd.h f9, f21, f19, f3, rne # perform operation
fnmadd.h f9, f21, f19, f3, rtz # perform operation
fnmadd.h f9, f21, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f21, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f21, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f21, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f21, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f21, f19, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x0)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f8, 0(x2) # load 0x00008200 from memory into f8
la x2, scratch
li x3, 0x9fe3c29d6865356e # load x3 with value 0x9fe3c29d6865356e
sw x3, 0(x2) # store 0x9fe3c29d6865356e in memory
flh f28, 0(x2) # load 0x9fe3c29d6865356e from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f13, 0(x2) # load 0x00000000 from memory into f13
fnmadd.h f2, f8, f28, f13, dyn # perform operation
fnmadd.h f2, f8, f28, f13, rdn # perform operation
fnmadd.h f2, f8, f28, f13, rmm # perform operation
fnmadd.h f2, f8, f28, f13, rne # perform operation
fnmadd.h f2, f8, f28, f13, rtz # perform operation
fnmadd.h f2, f8, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f8, f28, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x8000)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f11, 0(x2) # load 0x00008200 from memory into f11
la x2, scratch
li x3, 0xecd9b244cb1d28fd # load x3 with value 0xecd9b244cb1d28fd
sw x3, 0(x2) # store 0xecd9b244cb1d28fd in memory
flh f25, 0(x2) # load 0xecd9b244cb1d28fd from memory into f25
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f29, 0(x2) # load 0x00008000 from memory into f29
fnmadd.h f27, f11, f25, f29, dyn # perform operation
fnmadd.h f27, f11, f25, f29, rdn # perform operation
fnmadd.h f27, f11, f25, f29, rmm # perform operation
fnmadd.h f27, f11, f25, f29, rne # perform operation
fnmadd.h f27, f11, f25, f29, rtz # perform operation
fnmadd.h f27, f11, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f11, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f11, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f11, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f11, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f11, f25, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f15, 0(x2) # load 0x00008200 from memory into f15
la x2, scratch
li x3, 0xdf464a649c4fe1f5 # load x3 with value 0xdf464a649c4fe1f5
sw x3, 0(x2) # store 0xdf464a649c4fe1f5 in memory
flh f22, 0(x2) # load 0xdf464a649c4fe1f5 from memory into f22
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f23, 0(x2) # load 0x00003c00 from memory into f23
fnmadd.h f21, f15, f22, f23, dyn # perform operation
fnmadd.h f21, f15, f22, f23, rdn # perform operation
fnmadd.h f21, f15, f22, f23, rmm # perform operation
fnmadd.h f21, f15, f22, f23, rne # perform operation
fnmadd.h f21, f15, f22, f23, rtz # perform operation
fnmadd.h f21, f15, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f15, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f15, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f15, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f15, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f15, f22, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
la x2, scratch
li x3, 0xde7598855338e707 # load x3 with value 0xde7598855338e707
sw x3, 0(x2) # store 0xde7598855338e707 in memory
flh f3, 0(x2) # load 0xde7598855338e707 from memory into f3
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
fnmadd.h f7, f6, f3, f24, dyn # perform operation
fnmadd.h f7, f6, f3, f24, rdn # perform operation
fnmadd.h f7, f6, f3, f24, rmm # perform operation
fnmadd.h f7, f6, f3, f24, rne # perform operation
fnmadd.h f7, f6, f3, f24, rtz # perform operation
fnmadd.h f7, f6, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f6, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f6, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f6, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f6, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f6, f3, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f12, 0(x2) # load 0x00008200 from memory into f12
la x2, scratch
li x3, 0x54d9585dffb736b9 # load x3 with value 0x54d9585dffb736b9
sw x3, 0(x2) # store 0x54d9585dffb736b9 in memory
flh f1, 0(x2) # load 0x54d9585dffb736b9 from memory into f1
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f3, 0(x2) # load 0x00003e00 from memory into f3
fnmadd.h f24, f12, f1, f3, dyn # perform operation
fnmadd.h f24, f12, f1, f3, rdn # perform operation
fnmadd.h f24, f12, f1, f3, rmm # perform operation
fnmadd.h f24, f12, f1, f3, rne # perform operation
fnmadd.h f24, f12, f1, f3, rtz # perform operation
fnmadd.h f24, f12, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f12, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f12, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f12, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f12, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f12, f1, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f26, 0(x2) # load 0x00008200 from memory into f26
la x2, scratch
li x3, 0x5b7f440be651a946 # load x3 with value 0x5b7f440be651a946
sw x3, 0(x2) # store 0x5b7f440be651a946 in memory
flh f24, 0(x2) # load 0x5b7f440be651a946 from memory into f24
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f28, 0(x2) # load 0x0000be00 from memory into f28
fnmadd.h f23, f26, f24, f28, dyn # perform operation
fnmadd.h f23, f26, f24, f28, rdn # perform operation
fnmadd.h f23, f26, f24, f28, rmm # perform operation
fnmadd.h f23, f26, f24, f28, rne # perform operation
fnmadd.h f23, f26, f24, f28, rtz # perform operation
fnmadd.h f23, f26, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f26, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f26, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f26, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f26, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f26, f24, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x4000)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
la x2, scratch
li x3, 0x6c287c4f06ebd549 # load x3 with value 0x6c287c4f06ebd549
sw x3, 0(x2) # store 0x6c287c4f06ebd549 in memory
flh f21, 0(x2) # load 0x6c287c4f06ebd549 from memory into f21
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f10, 0(x2) # load 0x00004000 from memory into f10
fnmadd.h f16, f17, f21, f10, dyn # perform operation
fnmadd.h f16, f17, f21, f10, rdn # perform operation
fnmadd.h f16, f17, f21, f10, rmm # perform operation
fnmadd.h f16, f17, f21, f10, rne # perform operation
fnmadd.h f16, f17, f21, f10, rtz # perform operation
fnmadd.h f16, f17, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f17, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f17, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f17, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f17, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f17, f21, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xc000)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f3, 0(x2) # load 0x00008200 from memory into f3
la x2, scratch
li x3, 0x51569d4e63500ed8 # load x3 with value 0x51569d4e63500ed8
sw x3, 0(x2) # store 0x51569d4e63500ed8 in memory
flh f1, 0(x2) # load 0x51569d4e63500ed8 from memory into f1
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
fnmadd.h f10, f3, f1, f2, dyn # perform operation
fnmadd.h f10, f3, f1, f2, rdn # perform operation
fnmadd.h f10, f3, f1, f2, rmm # perform operation
fnmadd.h f10, f3, f1, f2, rne # perform operation
fnmadd.h f10, f3, f1, f2, rtz # perform operation
fnmadd.h f10, f3, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f3, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f3, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f3, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f3, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f3, f1, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x400)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f1, 0(x2) # load 0x00008200 from memory into f1
la x2, scratch
li x3, 0x811e3268835545d # load x3 with value 0x811e3268835545d
sw x3, 0(x2) # store 0x811e3268835545d in memory
flh f5, 0(x2) # load 0x811e3268835545d from memory into f5
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f13, 0(x2) # load 0x00000400 from memory into f13
fnmadd.h f18, f1, f5, f13, dyn # perform operation
fnmadd.h f18, f1, f5, f13, rdn # perform operation
fnmadd.h f18, f1, f5, f13, rmm # perform operation
fnmadd.h f18, f1, f5, f13, rne # perform operation
fnmadd.h f18, f1, f5, f13, rtz # perform operation
fnmadd.h f18, f1, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f1, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f1, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f1, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f1, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f1, f5, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x8400)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f24, 0(x2) # load 0x00008200 from memory into f24
la x2, scratch
li x3, 0x8baa41b21c23720c # load x3 with value 0x8baa41b21c23720c
sw x3, 0(x2) # store 0x8baa41b21c23720c in memory
flh f30, 0(x2) # load 0x8baa41b21c23720c from memory into f30
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f1, 0(x2) # load 0x00008400 from memory into f1
fnmadd.h f29, f24, f30, f1, dyn # perform operation
fnmadd.h f29, f24, f30, f1, rdn # perform operation
fnmadd.h f29, f24, f30, f1, rmm # perform operation
fnmadd.h f29, f24, f30, f1, rne # perform operation
fnmadd.h f29, f24, f30, f1, rtz # perform operation
fnmadd.h f29, f24, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f24, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f24, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f24, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f24, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f24, f30, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
la x2, scratch
li x3, 0xdfe2a4d42592fd70 # load x3 with value 0xdfe2a4d42592fd70
sw x3, 0(x2) # store 0xdfe2a4d42592fd70 in memory
flh f12, 0(x2) # load 0xdfe2a4d42592fd70 from memory into f12
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f3, 0(x2) # load 0x00007bff from memory into f3
fnmadd.h f24, f17, f12, f3, dyn # perform operation
fnmadd.h f24, f17, f12, f3, rdn # perform operation
fnmadd.h f24, f17, f12, f3, rmm # perform operation
fnmadd.h f24, f17, f12, f3, rne # perform operation
fnmadd.h f24, f17, f12, f3, rtz # perform operation
fnmadd.h f24, f17, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f17, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f17, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f17, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f17, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f17, f12, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f19, 0(x2) # load 0x00008200 from memory into f19
la x2, scratch
li x3, 0x7f1b450759c609e4 # load x3 with value 0x7f1b450759c609e4
sw x3, 0(x2) # store 0x7f1b450759c609e4 in memory
flh f7, 0(x2) # load 0x7f1b450759c609e4 from memory into f7
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f6, 0(x2) # load 0x0000fbff from memory into f6
fnmadd.h f13, f19, f7, f6, dyn # perform operation
fnmadd.h f13, f19, f7, f6, rdn # perform operation
fnmadd.h f13, f19, f7, f6, rmm # perform operation
fnmadd.h f13, f19, f7, f6, rne # perform operation
fnmadd.h f13, f19, f7, f6, rtz # perform operation
fnmadd.h f13, f19, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f19, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f19, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f19, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f19, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f19, f7, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f31, 0(x2) # load 0x00008200 from memory into f31
la x2, scratch
li x3, 0x481678c99811cbab # load x3 with value 0x481678c99811cbab
sw x3, 0(x2) # store 0x481678c99811cbab in memory
flh f25, 0(x2) # load 0x481678c99811cbab from memory into f25
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f17, 0(x2) # load 0x000003ff from memory into f17
fnmadd.h f5, f31, f25, f17, dyn # perform operation
fnmadd.h f5, f31, f25, f17, rdn # perform operation
fnmadd.h f5, f31, f25, f17, rmm # perform operation
fnmadd.h f5, f31, f25, f17, rne # perform operation
fnmadd.h f5, f31, f25, f17, rtz # perform operation
fnmadd.h f5, f31, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f31, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f31, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f31, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f31, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f31, f25, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f26, 0(x2) # load 0x00008200 from memory into f26
la x2, scratch
li x3, 0x24ea8d8d62b5b546 # load x3 with value 0x24ea8d8d62b5b546
sw x3, 0(x2) # store 0x24ea8d8d62b5b546 in memory
flh f21, 0(x2) # load 0x24ea8d8d62b5b546 from memory into f21
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f29, 0(x2) # load 0x000083ff from memory into f29
fnmadd.h f10, f26, f21, f29, dyn # perform operation
fnmadd.h f10, f26, f21, f29, rdn # perform operation
fnmadd.h f10, f26, f21, f29, rmm # perform operation
fnmadd.h f10, f26, f21, f29, rne # perform operation
fnmadd.h f10, f26, f21, f29, rtz # perform operation
fnmadd.h f10, f26, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f26, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f26, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f26, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f26, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f26, f21, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x200)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f12, 0(x2) # load 0x00008200 from memory into f12
la x2, scratch
li x3, 0xadd97579ed434f0f # load x3 with value 0xadd97579ed434f0f
sw x3, 0(x2) # store 0xadd97579ed434f0f in memory
flh f31, 0(x2) # load 0xadd97579ed434f0f from memory into f31
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f8, 0(x2) # load 0x00000200 from memory into f8
fnmadd.h f17, f12, f31, f8, dyn # perform operation
fnmadd.h f17, f12, f31, f8, rdn # perform operation
fnmadd.h f17, f12, f31, f8, rmm # perform operation
fnmadd.h f17, f12, f31, f8, rne # perform operation
fnmadd.h f17, f12, f31, f8, rtz # perform operation
fnmadd.h f17, f12, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f12, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f12, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f12, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f12, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f12, f31, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x8200)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f31, 0(x2) # load 0x00008200 from memory into f31
la x2, scratch
li x3, 0x3bff938d2cf609fe # load x3 with value 0x3bff938d2cf609fe
sw x3, 0(x2) # store 0x3bff938d2cf609fe in memory
flh f16, 0(x2) # load 0x3bff938d2cf609fe from memory into f16
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f12, 0(x2) # load 0x00008200 from memory into f12
fnmadd.h f13, f31, f16, f12, dyn # perform operation
fnmadd.h f13, f31, f16, f12, rdn # perform operation
fnmadd.h f13, f31, f16, f12, rmm # perform operation
fnmadd.h f13, f31, f16, f12, rne # perform operation
fnmadd.h f13, f31, f16, f12, rtz # perform operation
fnmadd.h f13, f31, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f31, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f31, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f31, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f31, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f31, f16, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x1)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f16, 0(x2) # load 0x00008200 from memory into f16
la x2, scratch
li x3, 0xafdcf8b29b1ceae1 # load x3 with value 0xafdcf8b29b1ceae1
sw x3, 0(x2) # store 0xafdcf8b29b1ceae1 in memory
flh f24, 0(x2) # load 0xafdcf8b29b1ceae1 from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f6, 0(x2) # load 0x00000001 from memory into f6
fnmadd.h f9, f16, f24, f6, dyn # perform operation
fnmadd.h f9, f16, f24, f6, rdn # perform operation
fnmadd.h f9, f16, f24, f6, rmm # perform operation
fnmadd.h f9, f16, f24, f6, rne # perform operation
fnmadd.h f9, f16, f24, f6, rtz # perform operation
fnmadd.h f9, f16, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f16, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f16, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f16, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f16, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f16, f24, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x8001)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f21, 0(x2) # load 0x00008200 from memory into f21
la x2, scratch
li x3, 0x18b411336e1baddf # load x3 with value 0x18b411336e1baddf
sw x3, 0(x2) # store 0x18b411336e1baddf in memory
flh f20, 0(x2) # load 0x18b411336e1baddf from memory into f20
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f3, 0(x2) # load 0x00008001 from memory into f3
fnmadd.h f28, f21, f20, f3, dyn # perform operation
fnmadd.h f28, f21, f20, f3, rdn # perform operation
fnmadd.h f28, f21, f20, f3, rmm # perform operation
fnmadd.h f28, f21, f20, f3, rne # perform operation
fnmadd.h f28, f21, f20, f3, rtz # perform operation
fnmadd.h f28, f21, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f21, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f21, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f21, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f21, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f21, f20, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f5, 0(x2) # load 0x00008200 from memory into f5
la x2, scratch
li x3, 0x6d5be55f8d6904a5 # load x3 with value 0x6d5be55f8d6904a5
sw x3, 0(x2) # store 0x6d5be55f8d6904a5 in memory
flh f30, 0(x2) # load 0x6d5be55f8d6904a5 from memory into f30
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f2, 0(x2) # load 0x00007c00 from memory into f2
fnmadd.h f3, f5, f30, f2, dyn # perform operation
fnmadd.h f3, f5, f30, f2, rdn # perform operation
fnmadd.h f3, f5, f30, f2, rmm # perform operation
fnmadd.h f3, f5, f30, f2, rne # perform operation
fnmadd.h f3, f5, f30, f2, rtz # perform operation
fnmadd.h f3, f5, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f5, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f5, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f5, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f5, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f5, f30, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f25, 0(x2) # load 0x00008200 from memory into f25
la x2, scratch
li x3, 0xf9902dc22a74b549 # load x3 with value 0xf9902dc22a74b549
sw x3, 0(x2) # store 0xf9902dc22a74b549 in memory
flh f2, 0(x2) # load 0xf9902dc22a74b549 from memory into f2
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f10, 0(x2) # load 0x0000fc00 from memory into f10
fnmadd.h f17, f25, f2, f10, dyn # perform operation
fnmadd.h f17, f25, f2, f10, rdn # perform operation
fnmadd.h f17, f25, f2, f10, rmm # perform operation
fnmadd.h f17, f25, f2, f10, rne # perform operation
fnmadd.h f17, f25, f2, f10, rtz # perform operation
fnmadd.h f17, f25, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f25, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f25, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f25, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f25, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f25, f2, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
la x2, scratch
li x3, 0x7ad984aba14422c9 # load x3 with value 0x7ad984aba14422c9
sw x3, 0(x2) # store 0x7ad984aba14422c9 in memory
flh f19, 0(x2) # load 0x7ad984aba14422c9 from memory into f19
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f10, 0(x2) # load 0x00007e00 from memory into f10
fnmadd.h f9, f17, f19, f10, dyn # perform operation
fnmadd.h f9, f17, f19, f10, rdn # perform operation
fnmadd.h f9, f17, f19, f10, rmm # perform operation
fnmadd.h f9, f17, f19, f10, rne # perform operation
fnmadd.h f9, f17, f19, f10, rtz # perform operation
fnmadd.h f9, f17, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f17, f19, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f22, 0(x2) # load 0x00008200 from memory into f22
la x2, scratch
li x3, 0x981257be63f820da # load x3 with value 0x981257be63f820da
sw x3, 0(x2) # store 0x981257be63f820da in memory
flh f3, 0(x2) # load 0x981257be63f820da from memory into f3
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f21, 0(x2) # load 0x00007fff from memory into f21
fnmadd.h f29, f22, f3, f21, dyn # perform operation
fnmadd.h f29, f22, f3, f21, rdn # perform operation
fnmadd.h f29, f22, f3, f21, rmm # perform operation
fnmadd.h f29, f22, f3, f21, rne # perform operation
fnmadd.h f29, f22, f3, f21, rtz # perform operation
fnmadd.h f29, f22, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f22, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f22, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f22, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f22, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f22, f3, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f28, 0(x2) # load 0x00008200 from memory into f28
la x2, scratch
li x3, 0x445d896cec6b471c # load x3 with value 0x445d896cec6b471c
sw x3, 0(x2) # store 0x445d896cec6b471c in memory
flh f22, 0(x2) # load 0x445d896cec6b471c from memory into f22
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f29, 0(x2) # load 0x0000fe00 from memory into f29
fnmadd.h f21, f28, f22, f29, dyn # perform operation
fnmadd.h f21, f28, f22, f29, rdn # perform operation
fnmadd.h f21, f28, f22, f29, rmm # perform operation
fnmadd.h f21, f28, f22, f29, rne # perform operation
fnmadd.h f21, f28, f22, f29, rtz # perform operation
fnmadd.h f21, f28, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f28, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f28, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f28, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f28, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f28, f22, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f27, 0(x2) # load 0x00008200 from memory into f27
la x2, scratch
li x3, 0x4788dcab780453f2 # load x3 with value 0x4788dcab780453f2
sw x3, 0(x2) # store 0x4788dcab780453f2 in memory
flh f7, 0(x2) # load 0x4788dcab780453f2 from memory into f7
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f28, 0(x2) # load 0x00007c01 from memory into f28
fnmadd.h f9, f27, f7, f28, dyn # perform operation
fnmadd.h f9, f27, f7, f28, rdn # perform operation
fnmadd.h f9, f27, f7, f28, rmm # perform operation
fnmadd.h f9, f27, f7, f28, rne # perform operation
fnmadd.h f9, f27, f7, f28, rtz # perform operation
fnmadd.h f9, f27, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f27, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f27, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f27, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f27, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f27, f7, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f8, 0(x2) # load 0x00008200 from memory into f8
la x2, scratch
li x3, 0xfd53815ad84ff792 # load x3 with value 0xfd53815ad84ff792
sw x3, 0(x2) # store 0xfd53815ad84ff792 in memory
flh f19, 0(x2) # load 0xfd53815ad84ff792 from memory into f19
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f20, 0(x2) # load 0x00007dff from memory into f20
fnmadd.h f5, f8, f19, f20, dyn # perform operation
fnmadd.h f5, f8, f19, f20, rdn # perform operation
fnmadd.h f5, f8, f19, f20, rmm # perform operation
fnmadd.h f5, f8, f19, f20, rne # perform operation
fnmadd.h f5, f8, f19, f20, rtz # perform operation
fnmadd.h f5, f8, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f8, f19, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f20, 0(x2) # load 0x00008200 from memory into f20
la x2, scratch
li x3, 0x286e39d2f7c7ebee # load x3 with value 0x286e39d2f7c7ebee
sw x3, 0(x2) # store 0x286e39d2f7c7ebee in memory
flh f14, 0(x2) # load 0x286e39d2f7c7ebee from memory into f14
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f15, 0(x2) # load 0x0000fc01 from memory into f15
fnmadd.h f27, f20, f14, f15, dyn # perform operation
fnmadd.h f27, f20, f14, f15, rdn # perform operation
fnmadd.h f27, f20, f14, f15, rmm # perform operation
fnmadd.h f27, f20, f14, f15, rne # perform operation
fnmadd.h f27, f20, f14, f15, rtz # perform operation
fnmadd.h f27, f20, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f20, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f20, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f20, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f20, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f20, f14, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f11, 0(x2) # load 0x00008200 from memory into f11
la x2, scratch
li x3, 0xa523a52354cd85f1 # load x3 with value 0xa523a52354cd85f1
sw x3, 0(x2) # store 0xa523a52354cd85f1 in memory
flh f30, 0(x2) # load 0xa523a52354cd85f1 from memory into f30
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f9, 0(x2) # load 0x000058b4 from memory into f9
fnmadd.h f17, f11, f30, f9, dyn # perform operation
fnmadd.h f17, f11, f30, f9, rdn # perform operation
fnmadd.h f17, f11, f30, f9, rmm # perform operation
fnmadd.h f17, f11, f30, f9, rne # perform operation
fnmadd.h f17, f11, f30, f9, rtz # perform operation
fnmadd.h f17, f11, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f11, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f11, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f11, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f11, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f11, f30, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
la x2, scratch
li x3, 0xd908b5a20f0eb199 # load x3 with value 0xd908b5a20f0eb199
sw x3, 0(x2) # store 0xd908b5a20f0eb199 in memory
flh f6, 0(x2) # load 0xd908b5a20f0eb199 from memory into f6
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f25, 0(x2) # load 0x0000c93a from memory into f25
fnmadd.h f7, f17, f6, f25, dyn # perform operation
fnmadd.h f7, f17, f6, f25, rdn # perform operation
fnmadd.h f7, f17, f6, f25, rmm # perform operation
fnmadd.h f7, f17, f6, f25, rne # perform operation
fnmadd.h f7, f17, f6, f25, rtz # perform operation
fnmadd.h f7, f17, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f17, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f17, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f17, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f17, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f17, f6, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x5e43575a3229bfc0 # load x3 with value 0x5e43575a3229bfc0
sw x3, 0(x2) # store 0x5e43575a3229bfc0 in memory
flh f18, 0(x2) # load 0x5e43575a3229bfc0 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f6, 0(x2) # load 0x00000000 from memory into f6
fnmadd.h f27, f10, f18, f6, dyn # perform operation
fnmadd.h f27, f10, f18, f6, rdn # perform operation
fnmadd.h f27, f10, f18, f6, rmm # perform operation
fnmadd.h f27, f10, f18, f6, rne # perform operation
fnmadd.h f27, f10, f18, f6, rtz # perform operation
fnmadd.h f27, f10, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f10, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f10, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f10, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f10, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f10, f18, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x183c636da232032 # load x3 with value 0x183c636da232032
sw x3, 0(x2) # store 0x183c636da232032 in memory
flh f14, 0(x2) # load 0x183c636da232032 from memory into f14
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f22, 0(x2) # load 0x00008000 from memory into f22
fnmadd.h f8, f27, f14, f22, dyn # perform operation
fnmadd.h f8, f27, f14, f22, rdn # perform operation
fnmadd.h f8, f27, f14, f22, rmm # perform operation
fnmadd.h f8, f27, f14, f22, rne # perform operation
fnmadd.h f8, f27, f14, f22, rtz # perform operation
fnmadd.h f8, f27, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f27, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f27, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f27, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f27, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f27, f14, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0xbf733115a383b431 # load x3 with value 0xbf733115a383b431
sw x3, 0(x2) # store 0xbf733115a383b431 in memory
flh f1, 0(x2) # load 0xbf733115a383b431 from memory into f1
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f23, 0(x2) # load 0x00003c00 from memory into f23
fnmadd.h f16, f27, f1, f23, dyn # perform operation
fnmadd.h f16, f27, f1, f23, rdn # perform operation
fnmadd.h f16, f27, f1, f23, rmm # perform operation
fnmadd.h f16, f27, f1, f23, rne # perform operation
fnmadd.h f16, f27, f1, f23, rtz # perform operation
fnmadd.h f16, f27, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f27, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f27, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f27, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f27, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f27, f1, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0xe53d9a1cc5e69cd6 # load x3 with value 0xe53d9a1cc5e69cd6
sw x3, 0(x2) # store 0xe53d9a1cc5e69cd6 in memory
flh f24, 0(x2) # load 0xe53d9a1cc5e69cd6 from memory into f24
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f1, 0(x2) # load 0x0000bc00 from memory into f1
fnmadd.h f2, f18, f24, f1, dyn # perform operation
fnmadd.h f2, f18, f24, f1, rdn # perform operation
fnmadd.h f2, f18, f24, f1, rmm # perform operation
fnmadd.h f2, f18, f24, f1, rne # perform operation
fnmadd.h f2, f18, f24, f1, rtz # perform operation
fnmadd.h f2, f18, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f18, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f18, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f18, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f18, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f18, f24, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0xf261de34ba36864b # load x3 with value 0xf261de34ba36864b
sw x3, 0(x2) # store 0xf261de34ba36864b in memory
flh f31, 0(x2) # load 0xf261de34ba36864b from memory into f31
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f27, 0(x2) # load 0x00003e00 from memory into f27
fnmadd.h f11, f23, f31, f27, dyn # perform operation
fnmadd.h f11, f23, f31, f27, rdn # perform operation
fnmadd.h f11, f23, f31, f27, rmm # perform operation
fnmadd.h f11, f23, f31, f27, rne # perform operation
fnmadd.h f11, f23, f31, f27, rtz # perform operation
fnmadd.h f11, f23, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f23, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f23, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f23, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f23, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f23, f31, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x763c3ea7166c8f02 # load x3 with value 0x763c3ea7166c8f02
sw x3, 0(x2) # store 0x763c3ea7166c8f02 in memory
flh f31, 0(x2) # load 0x763c3ea7166c8f02 from memory into f31
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f10, 0(x2) # load 0x0000be00 from memory into f10
fnmadd.h f21, f28, f31, f10, dyn # perform operation
fnmadd.h f21, f28, f31, f10, rdn # perform operation
fnmadd.h f21, f28, f31, f10, rmm # perform operation
fnmadd.h f21, f28, f31, f10, rne # perform operation
fnmadd.h f21, f28, f31, f10, rtz # perform operation
fnmadd.h f21, f28, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f28, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f28, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f28, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f28, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f28, f31, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x4000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x24bfdb865cf86df4 # load x3 with value 0x24bfdb865cf86df4
sw x3, 0(x2) # store 0x24bfdb865cf86df4 in memory
flh f15, 0(x2) # load 0x24bfdb865cf86df4 from memory into f15
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f3, 0(x2) # load 0x00004000 from memory into f3
fnmadd.h f20, f9, f15, f3, dyn # perform operation
fnmadd.h f20, f9, f15, f3, rdn # perform operation
fnmadd.h f20, f9, f15, f3, rmm # perform operation
fnmadd.h f20, f9, f15, f3, rne # perform operation
fnmadd.h f20, f9, f15, f3, rtz # perform operation
fnmadd.h f20, f9, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f9, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f9, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f9, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f9, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f9, f15, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0x2cb93dfabee0c2bc # load x3 with value 0x2cb93dfabee0c2bc
sw x3, 0(x2) # store 0x2cb93dfabee0c2bc in memory
flh f13, 0(x2) # load 0x2cb93dfabee0c2bc from memory into f13
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f23, 0(x2) # load 0x0000c000 from memory into f23
fnmadd.h f29, f6, f13, f23, dyn # perform operation
fnmadd.h f29, f6, f13, f23, rdn # perform operation
fnmadd.h f29, f6, f13, f23, rmm # perform operation
fnmadd.h f29, f6, f13, f23, rne # perform operation
fnmadd.h f29, f6, f13, f23, rtz # perform operation
fnmadd.h f29, f6, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f6, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f6, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f6, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f6, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f6, f13, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x96dd07ff050a0af1 # load x3 with value 0x96dd07ff050a0af1
sw x3, 0(x2) # store 0x96dd07ff050a0af1 in memory
flh f13, 0(x2) # load 0x96dd07ff050a0af1 from memory into f13
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f26, 0(x2) # load 0x00000400 from memory into f26
fnmadd.h f23, f31, f13, f26, dyn # perform operation
fnmadd.h f23, f31, f13, f26, rdn # perform operation
fnmadd.h f23, f31, f13, f26, rmm # perform operation
fnmadd.h f23, f31, f13, f26, rne # perform operation
fnmadd.h f23, f31, f13, f26, rtz # perform operation
fnmadd.h f23, f31, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f31, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f31, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f31, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f31, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f31, f13, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8400)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x915dcb0aebc58ac9 # load x3 with value 0x915dcb0aebc58ac9
sw x3, 0(x2) # store 0x915dcb0aebc58ac9 in memory
flh f18, 0(x2) # load 0x915dcb0aebc58ac9 from memory into f18
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f30, 0(x2) # load 0x00008400 from memory into f30
fnmadd.h f13, f10, f18, f30, dyn # perform operation
fnmadd.h f13, f10, f18, f30, rdn # perform operation
fnmadd.h f13, f10, f18, f30, rmm # perform operation
fnmadd.h f13, f10, f18, f30, rne # perform operation
fnmadd.h f13, f10, f18, f30, rtz # perform operation
fnmadd.h f13, f10, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f10, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f10, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f10, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f10, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f10, f18, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f2, 0(x2) # load 0x00000001 from memory into f2
la x2, scratch
li x3, 0x9593c8cc745d8e55 # load x3 with value 0x9593c8cc745d8e55
sw x3, 0(x2) # store 0x9593c8cc745d8e55 in memory
flh f27, 0(x2) # load 0x9593c8cc745d8e55 from memory into f27
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f18, 0(x2) # load 0x00007bff from memory into f18
fnmadd.h f17, f2, f27, f18, dyn # perform operation
fnmadd.h f17, f2, f27, f18, rdn # perform operation
fnmadd.h f17, f2, f27, f18, rmm # perform operation
fnmadd.h f17, f2, f27, f18, rne # perform operation
fnmadd.h f17, f2, f27, f18, rtz # perform operation
fnmadd.h f17, f2, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f2, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f2, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f2, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f2, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f2, f27, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0xbc05579aef8bc234 # load x3 with value 0xbc05579aef8bc234
sw x3, 0(x2) # store 0xbc05579aef8bc234 in memory
flh f3, 0(x2) # load 0xbc05579aef8bc234 from memory into f3
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f21, 0(x2) # load 0x0000fbff from memory into f21
fnmadd.h f9, f29, f3, f21, dyn # perform operation
fnmadd.h f9, f29, f3, f21, rdn # perform operation
fnmadd.h f9, f29, f3, f21, rmm # perform operation
fnmadd.h f9, f29, f3, f21, rne # perform operation
fnmadd.h f9, f29, f3, f21, rtz # perform operation
fnmadd.h f9, f29, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f29, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f29, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f29, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f29, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f29, f3, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0xdf717d12c4f0cacf # load x3 with value 0xdf717d12c4f0cacf
sw x3, 0(x2) # store 0xdf717d12c4f0cacf in memory
flh f2, 0(x2) # load 0xdf717d12c4f0cacf from memory into f2
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f25, 0(x2) # load 0x000003ff from memory into f25
fnmadd.h f27, f17, f2, f25, dyn # perform operation
fnmadd.h f27, f17, f2, f25, rdn # perform operation
fnmadd.h f27, f17, f2, f25, rmm # perform operation
fnmadd.h f27, f17, f2, f25, rne # perform operation
fnmadd.h f27, f17, f2, f25, rtz # perform operation
fnmadd.h f27, f17, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f17, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f17, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f17, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f17, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f17, f2, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0xdf35c32f5ea3d627 # load x3 with value 0xdf35c32f5ea3d627
sw x3, 0(x2) # store 0xdf35c32f5ea3d627 in memory
flh f27, 0(x2) # load 0xdf35c32f5ea3d627 from memory into f27
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f6, 0(x2) # load 0x000083ff from memory into f6
fnmadd.h f16, f9, f27, f6, dyn # perform operation
fnmadd.h f16, f9, f27, f6, rdn # perform operation
fnmadd.h f16, f9, f27, f6, rmm # perform operation
fnmadd.h f16, f9, f27, f6, rne # perform operation
fnmadd.h f16, f9, f27, f6, rtz # perform operation
fnmadd.h f16, f9, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f9, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f9, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f9, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f9, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f9, f27, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x200)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0x1e29b22dc0a91275 # load x3 with value 0x1e29b22dc0a91275
sw x3, 0(x2) # store 0x1e29b22dc0a91275 in memory
flh f26, 0(x2) # load 0x1e29b22dc0a91275 from memory into f26
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f1, 0(x2) # load 0x00000200 from memory into f1
fnmadd.h f29, f18, f26, f1, dyn # perform operation
fnmadd.h f29, f18, f26, f1, rdn # perform operation
fnmadd.h f29, f18, f26, f1, rmm # perform operation
fnmadd.h f29, f18, f26, f1, rne # perform operation
fnmadd.h f29, f18, f26, f1, rtz # perform operation
fnmadd.h f29, f18, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f18, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f18, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f18, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f18, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f18, f26, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8200)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f1, 0(x2) # load 0x00000001 from memory into f1
la x2, scratch
li x3, 0xb0ded28ec13d6d7d # load x3 with value 0xb0ded28ec13d6d7d
sw x3, 0(x2) # store 0xb0ded28ec13d6d7d in memory
flh f7, 0(x2) # load 0xb0ded28ec13d6d7d from memory into f7
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f22, 0(x2) # load 0x00008200 from memory into f22
fnmadd.h f12, f1, f7, f22, dyn # perform operation
fnmadd.h f12, f1, f7, f22, rdn # perform operation
fnmadd.h f12, f1, f7, f22, rmm # perform operation
fnmadd.h f12, f1, f7, f22, rne # perform operation
fnmadd.h f12, f1, f7, f22, rtz # perform operation
fnmadd.h f12, f1, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f1, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f1, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f1, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f1, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f1, f7, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0x874c633938e10b23 # load x3 with value 0x874c633938e10b23
sw x3, 0(x2) # store 0x874c633938e10b23 in memory
flh f20, 0(x2) # load 0x874c633938e10b23 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f31, 0(x2) # load 0x00000001 from memory into f31
fnmadd.h f5, f30, f20, f31, dyn # perform operation
fnmadd.h f5, f30, f20, f31, rdn # perform operation
fnmadd.h f5, f30, f20, f31, rmm # perform operation
fnmadd.h f5, f30, f20, f31, rne # perform operation
fnmadd.h f5, f30, f20, f31, rtz # perform operation
fnmadd.h f5, f30, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f30, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f30, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f30, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f30, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f30, f20, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8001)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x2dda58b8ab68024 # load x3 with value 0x2dda58b8ab68024
sw x3, 0(x2) # store 0x2dda58b8ab68024 in memory
flh f2, 0(x2) # load 0x2dda58b8ab68024 from memory into f2
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f23, 0(x2) # load 0x00008001 from memory into f23
fnmadd.h f5, f15, f2, f23, dyn # perform operation
fnmadd.h f5, f15, f2, f23, rdn # perform operation
fnmadd.h f5, f15, f2, f23, rmm # perform operation
fnmadd.h f5, f15, f2, f23, rne # perform operation
fnmadd.h f5, f15, f2, f23, rtz # perform operation
fnmadd.h f5, f15, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f15, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f15, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f15, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f15, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f15, f2, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x5aaeb2f0edbf34 # load x3 with value 0x5aaeb2f0edbf34
sw x3, 0(x2) # store 0x5aaeb2f0edbf34 in memory
flh f16, 0(x2) # load 0x5aaeb2f0edbf34 from memory into f16
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f10, 0(x2) # load 0x00007c00 from memory into f10
fnmadd.h f14, f19, f16, f10, dyn # perform operation
fnmadd.h f14, f19, f16, f10, rdn # perform operation
fnmadd.h f14, f19, f16, f10, rmm # perform operation
fnmadd.h f14, f19, f16, f10, rne # perform operation
fnmadd.h f14, f19, f16, f10, rtz # perform operation
fnmadd.h f14, f19, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f19, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f19, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f19, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f19, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f19, f16, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0xad0a93a3cd0cbe78 # load x3 with value 0xad0a93a3cd0cbe78
sw x3, 0(x2) # store 0xad0a93a3cd0cbe78 in memory
flh f23, 0(x2) # load 0xad0a93a3cd0cbe78 from memory into f23
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f16, 0(x2) # load 0x0000fc00 from memory into f16
fnmadd.h f12, f22, f23, f16, dyn # perform operation
fnmadd.h f12, f22, f23, f16, rdn # perform operation
fnmadd.h f12, f22, f23, f16, rmm # perform operation
fnmadd.h f12, f22, f23, f16, rne # perform operation
fnmadd.h f12, f22, f23, f16, rtz # perform operation
fnmadd.h f12, f22, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f22, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f22, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f22, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f22, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f22, f23, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x6c965fd5d29b3217 # load x3 with value 0x6c965fd5d29b3217
sw x3, 0(x2) # store 0x6c965fd5d29b3217 in memory
flh f16, 0(x2) # load 0x6c965fd5d29b3217 from memory into f16
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f30, 0(x2) # load 0x00007e00 from memory into f30
fnmadd.h f7, f9, f16, f30, dyn # perform operation
fnmadd.h f7, f9, f16, f30, rdn # perform operation
fnmadd.h f7, f9, f16, f30, rmm # perform operation
fnmadd.h f7, f9, f16, f30, rne # perform operation
fnmadd.h f7, f9, f16, f30, rtz # perform operation
fnmadd.h f7, f9, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f9, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f9, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f9, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f9, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f9, f16, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0xec95210864f055b3 # load x3 with value 0xec95210864f055b3
sw x3, 0(x2) # store 0xec95210864f055b3 in memory
flh f24, 0(x2) # load 0xec95210864f055b3 from memory into f24
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f31, 0(x2) # load 0x00007fff from memory into f31
fnmadd.h f12, f21, f24, f31, dyn # perform operation
fnmadd.h f12, f21, f24, f31, rdn # perform operation
fnmadd.h f12, f21, f24, f31, rmm # perform operation
fnmadd.h f12, f21, f24, f31, rne # perform operation
fnmadd.h f12, f21, f24, f31, rtz # perform operation
fnmadd.h f12, f21, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f21, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f21, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f21, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f21, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f21, f24, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0x539968444fbc2b7d # load x3 with value 0x539968444fbc2b7d
sw x3, 0(x2) # store 0x539968444fbc2b7d in memory
flh f2, 0(x2) # load 0x539968444fbc2b7d from memory into f2
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f12, 0(x2) # load 0x0000fe00 from memory into f12
fnmadd.h f28, f21, f2, f12, dyn # perform operation
fnmadd.h f28, f21, f2, f12, rdn # perform operation
fnmadd.h f28, f21, f2, f12, rmm # perform operation
fnmadd.h f28, f21, f2, f12, rne # perform operation
fnmadd.h f28, f21, f2, f12, rtz # perform operation
fnmadd.h f28, f21, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f21, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f21, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f21, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f21, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f21, f2, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0x797f5a5e9314caa6 # load x3 with value 0x797f5a5e9314caa6
sw x3, 0(x2) # store 0x797f5a5e9314caa6 in memory
flh f20, 0(x2) # load 0x797f5a5e9314caa6 from memory into f20
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f18, 0(x2) # load 0x00007c01 from memory into f18
fnmadd.h f29, f3, f20, f18, dyn # perform operation
fnmadd.h f29, f3, f20, f18, rdn # perform operation
fnmadd.h f29, f3, f20, f18, rmm # perform operation
fnmadd.h f29, f3, f20, f18, rne # perform operation
fnmadd.h f29, f3, f20, f18, rtz # perform operation
fnmadd.h f29, f3, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f3, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f3, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f3, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f3, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f3, f20, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0xa583d617d5da683f # load x3 with value 0xa583d617d5da683f
sw x3, 0(x2) # store 0xa583d617d5da683f in memory
flh f20, 0(x2) # load 0xa583d617d5da683f from memory into f20
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f17, 0(x2) # load 0x00007dff from memory into f17
fnmadd.h f9, f5, f20, f17, dyn # perform operation
fnmadd.h f9, f5, f20, f17, rdn # perform operation
fnmadd.h f9, f5, f20, f17, rmm # perform operation
fnmadd.h f9, f5, f20, f17, rne # perform operation
fnmadd.h f9, f5, f20, f17, rtz # perform operation
fnmadd.h f9, f5, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f5, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f5, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f5, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f5, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f5, f20, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x22e44705f042472a # load x3 with value 0x22e44705f042472a
sw x3, 0(x2) # store 0x22e44705f042472a in memory
flh f19, 0(x2) # load 0x22e44705f042472a from memory into f19
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f16, 0(x2) # load 0x0000fc01 from memory into f16
fnmadd.h f8, f15, f19, f16, dyn # perform operation
fnmadd.h f8, f15, f19, f16, rdn # perform operation
fnmadd.h f8, f15, f19, f16, rmm # perform operation
fnmadd.h f8, f15, f19, f16, rne # perform operation
fnmadd.h f8, f15, f19, f16, rtz # perform operation
fnmadd.h f8, f15, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f15, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f15, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f15, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f15, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f15, f19, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0xe02784648a05fbc6 # load x3 with value 0xe02784648a05fbc6
sw x3, 0(x2) # store 0xe02784648a05fbc6 in memory
flh f22, 0(x2) # load 0xe02784648a05fbc6 from memory into f22
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f26, 0(x2) # load 0x000058b4 from memory into f26
fnmadd.h f10, f17, f22, f26, dyn # perform operation
fnmadd.h f10, f17, f22, f26, rdn # perform operation
fnmadd.h f10, f17, f22, f26, rmm # perform operation
fnmadd.h f10, f17, f22, f26, rne # perform operation
fnmadd.h f10, f17, f22, f26, rtz # perform operation
fnmadd.h f10, f17, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f17, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f17, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f17, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f17, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f17, f22, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0xad144ee7b9c6cc6d # load x3 with value 0xad144ee7b9c6cc6d
sw x3, 0(x2) # store 0xad144ee7b9c6cc6d in memory
flh f1, 0(x2) # load 0xad144ee7b9c6cc6d from memory into f1
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f18, 0(x2) # load 0x0000c93a from memory into f18
fnmadd.h f5, f27, f1, f18, dyn # perform operation
fnmadd.h f5, f27, f1, f18, rdn # perform operation
fnmadd.h f5, f27, f1, f18, rmm # perform operation
fnmadd.h f5, f27, f1, f18, rne # perform operation
fnmadd.h f5, f27, f1, f18, rtz # perform operation
fnmadd.h f5, f27, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f27, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f27, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f27, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f27, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f27, f1, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x0)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f28, 0(x2) # load 0x00008001 from memory into f28
la x2, scratch
li x3, 0x850eedf4e9934f58 # load x3 with value 0x850eedf4e9934f58
sw x3, 0(x2) # store 0x850eedf4e9934f58 in memory
flh f31, 0(x2) # load 0x850eedf4e9934f58 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f13, 0(x2) # load 0x00000000 from memory into f13
fnmadd.h f3, f28, f31, f13, dyn # perform operation
fnmadd.h f3, f28, f31, f13, rdn # perform operation
fnmadd.h f3, f28, f31, f13, rmm # perform operation
fnmadd.h f3, f28, f31, f13, rne # perform operation
fnmadd.h f3, f28, f31, f13, rtz # perform operation
fnmadd.h f3, f28, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f28, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f28, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f28, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f28, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f28, f31, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x8000)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
la x2, scratch
li x3, 0x43fe4452bdd233fb # load x3 with value 0x43fe4452bdd233fb
sw x3, 0(x2) # store 0x43fe4452bdd233fb in memory
flh f5, 0(x2) # load 0x43fe4452bdd233fb from memory into f5
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f13, 0(x2) # load 0x00008000 from memory into f13
fnmadd.h f30, f14, f5, f13, dyn # perform operation
fnmadd.h f30, f14, f5, f13, rdn # perform operation
fnmadd.h f30, f14, f5, f13, rmm # perform operation
fnmadd.h f30, f14, f5, f13, rne # perform operation
fnmadd.h f30, f14, f5, f13, rtz # perform operation
fnmadd.h f30, f14, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f14, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f14, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f14, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f14, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f14, f5, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
la x2, scratch
li x3, 0xc99dcb3f9bd6a5ee # load x3 with value 0xc99dcb3f9bd6a5ee
sw x3, 0(x2) # store 0xc99dcb3f9bd6a5ee in memory
flh f14, 0(x2) # load 0xc99dcb3f9bd6a5ee from memory into f14
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f9, 0(x2) # load 0x00003c00 from memory into f9
fnmadd.h f26, f7, f14, f9, dyn # perform operation
fnmadd.h f26, f7, f14, f9, rdn # perform operation
fnmadd.h f26, f7, f14, f9, rmm # perform operation
fnmadd.h f26, f7, f14, f9, rne # perform operation
fnmadd.h f26, f7, f14, f9, rtz # perform operation
fnmadd.h f26, f7, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f7, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f7, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f7, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f7, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f7, f14, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f21, 0(x2) # load 0x00008001 from memory into f21
la x2, scratch
li x3, 0x878e4a66516f7e79 # load x3 with value 0x878e4a66516f7e79
sw x3, 0(x2) # store 0x878e4a66516f7e79 in memory
flh f9, 0(x2) # load 0x878e4a66516f7e79 from memory into f9
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f13, 0(x2) # load 0x0000bc00 from memory into f13
fnmadd.h f19, f21, f9, f13, dyn # perform operation
fnmadd.h f19, f21, f9, f13, rdn # perform operation
fnmadd.h f19, f21, f9, f13, rmm # perform operation
fnmadd.h f19, f21, f9, f13, rne # perform operation
fnmadd.h f19, f21, f9, f13, rtz # perform operation
fnmadd.h f19, f21, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f21, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f21, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f21, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f21, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f21, f9, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f23, 0(x2) # load 0x00008001 from memory into f23
la x2, scratch
li x3, 0x536724b8a0db214 # load x3 with value 0x536724b8a0db214
sw x3, 0(x2) # store 0x536724b8a0db214 in memory
flh f18, 0(x2) # load 0x536724b8a0db214 from memory into f18
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f24, 0(x2) # load 0x00003e00 from memory into f24
fnmadd.h f6, f23, f18, f24, dyn # perform operation
fnmadd.h f6, f23, f18, f24, rdn # perform operation
fnmadd.h f6, f23, f18, f24, rmm # perform operation
fnmadd.h f6, f23, f18, f24, rne # perform operation
fnmadd.h f6, f23, f18, f24, rtz # perform operation
fnmadd.h f6, f23, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f23, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f23, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f23, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f23, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f23, f18, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f11, 0(x2) # load 0x00008001 from memory into f11
la x2, scratch
li x3, 0x278b82374f33309e # load x3 with value 0x278b82374f33309e
sw x3, 0(x2) # store 0x278b82374f33309e in memory
flh f2, 0(x2) # load 0x278b82374f33309e from memory into f2
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f22, 0(x2) # load 0x0000be00 from memory into f22
fnmadd.h f6, f11, f2, f22, dyn # perform operation
fnmadd.h f6, f11, f2, f22, rdn # perform operation
fnmadd.h f6, f11, f2, f22, rmm # perform operation
fnmadd.h f6, f11, f2, f22, rne # perform operation
fnmadd.h f6, f11, f2, f22, rtz # perform operation
fnmadd.h f6, f11, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f11, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f11, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f11, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f11, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f11, f2, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x4000)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f26, 0(x2) # load 0x00008001 from memory into f26
la x2, scratch
li x3, 0x83c19771f4353e7d # load x3 with value 0x83c19771f4353e7d
sw x3, 0(x2) # store 0x83c19771f4353e7d in memory
flh f7, 0(x2) # load 0x83c19771f4353e7d from memory into f7
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f9, 0(x2) # load 0x00004000 from memory into f9
fnmadd.h f12, f26, f7, f9, dyn # perform operation
fnmadd.h f12, f26, f7, f9, rdn # perform operation
fnmadd.h f12, f26, f7, f9, rmm # perform operation
fnmadd.h f12, f26, f7, f9, rne # perform operation
fnmadd.h f12, f26, f7, f9, rtz # perform operation
fnmadd.h f12, f26, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f26, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f26, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f26, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f26, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f26, f7, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xc000)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f1, 0(x2) # load 0x00008001 from memory into f1
la x2, scratch
li x3, 0xd243d8ddd48ec68b # load x3 with value 0xd243d8ddd48ec68b
sw x3, 0(x2) # store 0xd243d8ddd48ec68b in memory
flh f12, 0(x2) # load 0xd243d8ddd48ec68b from memory into f12
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f19, 0(x2) # load 0x0000c000 from memory into f19
fnmadd.h f6, f1, f12, f19, dyn # perform operation
fnmadd.h f6, f1, f12, f19, rdn # perform operation
fnmadd.h f6, f1, f12, f19, rmm # perform operation
fnmadd.h f6, f1, f12, f19, rne # perform operation
fnmadd.h f6, f1, f12, f19, rtz # perform operation
fnmadd.h f6, f1, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f1, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f1, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f1, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f1, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f1, f12, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x400)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f17, 0(x2) # load 0x00008001 from memory into f17
la x2, scratch
li x3, 0xe2f1b999c51c495e # load x3 with value 0xe2f1b999c51c495e
sw x3, 0(x2) # store 0xe2f1b999c51c495e in memory
flh f18, 0(x2) # load 0xe2f1b999c51c495e from memory into f18
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f30, 0(x2) # load 0x00000400 from memory into f30
fnmadd.h f23, f17, f18, f30, dyn # perform operation
fnmadd.h f23, f17, f18, f30, rdn # perform operation
fnmadd.h f23, f17, f18, f30, rmm # perform operation
fnmadd.h f23, f17, f18, f30, rne # perform operation
fnmadd.h f23, f17, f18, f30, rtz # perform operation
fnmadd.h f23, f17, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f17, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f17, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f17, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f17, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f17, f18, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x8400)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f26, 0(x2) # load 0x00008001 from memory into f26
la x2, scratch
li x3, 0x1eef7c3348538bd # load x3 with value 0x1eef7c3348538bd
sw x3, 0(x2) # store 0x1eef7c3348538bd in memory
flh f16, 0(x2) # load 0x1eef7c3348538bd from memory into f16
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f31, 0(x2) # load 0x00008400 from memory into f31
fnmadd.h f19, f26, f16, f31, dyn # perform operation
fnmadd.h f19, f26, f16, f31, rdn # perform operation
fnmadd.h f19, f26, f16, f31, rmm # perform operation
fnmadd.h f19, f26, f16, f31, rne # perform operation
fnmadd.h f19, f26, f16, f31, rtz # perform operation
fnmadd.h f19, f26, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f26, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f26, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f26, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f26, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f26, f16, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f30, 0(x2) # load 0x00008001 from memory into f30
la x2, scratch
li x3, 0xa0d8bf15bfee1544 # load x3 with value 0xa0d8bf15bfee1544
sw x3, 0(x2) # store 0xa0d8bf15bfee1544 in memory
flh f22, 0(x2) # load 0xa0d8bf15bfee1544 from memory into f22
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f31, 0(x2) # load 0x00007bff from memory into f31
fnmadd.h f15, f30, f22, f31, dyn # perform operation
fnmadd.h f15, f30, f22, f31, rdn # perform operation
fnmadd.h f15, f30, f22, f31, rmm # perform operation
fnmadd.h f15, f30, f22, f31, rne # perform operation
fnmadd.h f15, f30, f22, f31, rtz # perform operation
fnmadd.h f15, f30, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f30, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f30, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f30, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f30, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f30, f22, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f29, 0(x2) # load 0x00008001 from memory into f29
la x2, scratch
li x3, 0x73f64509af968e3 # load x3 with value 0x73f64509af968e3
sw x3, 0(x2) # store 0x73f64509af968e3 in memory
flh f25, 0(x2) # load 0x73f64509af968e3 from memory into f25
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f10, 0(x2) # load 0x0000fbff from memory into f10
fnmadd.h f18, f29, f25, f10, dyn # perform operation
fnmadd.h f18, f29, f25, f10, rdn # perform operation
fnmadd.h f18, f29, f25, f10, rmm # perform operation
fnmadd.h f18, f29, f25, f10, rne # perform operation
fnmadd.h f18, f29, f25, f10, rtz # perform operation
fnmadd.h f18, f29, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f29, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f29, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f29, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f29, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f29, f25, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f19, 0(x2) # load 0x00008001 from memory into f19
la x2, scratch
li x3, 0x61a6e902327f7850 # load x3 with value 0x61a6e902327f7850
sw x3, 0(x2) # store 0x61a6e902327f7850 in memory
flh f24, 0(x2) # load 0x61a6e902327f7850 from memory into f24
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f3, 0(x2) # load 0x000003ff from memory into f3
fnmadd.h f13, f19, f24, f3, dyn # perform operation
fnmadd.h f13, f19, f24, f3, rdn # perform operation
fnmadd.h f13, f19, f24, f3, rmm # perform operation
fnmadd.h f13, f19, f24, f3, rne # perform operation
fnmadd.h f13, f19, f24, f3, rtz # perform operation
fnmadd.h f13, f19, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f19, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f19, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f19, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f19, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f19, f24, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f26, 0(x2) # load 0x00008001 from memory into f26
la x2, scratch
li x3, 0xbd59089d64902780 # load x3 with value 0xbd59089d64902780
sw x3, 0(x2) # store 0xbd59089d64902780 in memory
flh f8, 0(x2) # load 0xbd59089d64902780 from memory into f8
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
fnmadd.h f9, f26, f8, f19, dyn # perform operation
fnmadd.h f9, f26, f8, f19, rdn # perform operation
fnmadd.h f9, f26, f8, f19, rmm # perform operation
fnmadd.h f9, f26, f8, f19, rne # perform operation
fnmadd.h f9, f26, f8, f19, rtz # perform operation
fnmadd.h f9, f26, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f26, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f26, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f26, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f26, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f26, f8, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x200)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
la x2, scratch
li x3, 0x1dcc5ddeced9eaf9 # load x3 with value 0x1dcc5ddeced9eaf9
sw x3, 0(x2) # store 0x1dcc5ddeced9eaf9 in memory
flh f9, 0(x2) # load 0x1dcc5ddeced9eaf9 from memory into f9
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
fnmadd.h f28, f22, f9, f24, dyn # perform operation
fnmadd.h f28, f22, f9, f24, rdn # perform operation
fnmadd.h f28, f22, f9, f24, rmm # perform operation
fnmadd.h f28, f22, f9, f24, rne # perform operation
fnmadd.h f28, f22, f9, f24, rtz # perform operation
fnmadd.h f28, f22, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f22, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f22, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f22, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f22, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f22, f9, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x8200)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f25, 0(x2) # load 0x00008001 from memory into f25
la x2, scratch
li x3, 0x77be982ba828f211 # load x3 with value 0x77be982ba828f211
sw x3, 0(x2) # store 0x77be982ba828f211 in memory
flh f29, 0(x2) # load 0x77be982ba828f211 from memory into f29
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f15, 0(x2) # load 0x00008200 from memory into f15
fnmadd.h f30, f25, f29, f15, dyn # perform operation
fnmadd.h f30, f25, f29, f15, rdn # perform operation
fnmadd.h f30, f25, f29, f15, rmm # perform operation
fnmadd.h f30, f25, f29, f15, rne # perform operation
fnmadd.h f30, f25, f29, f15, rtz # perform operation
fnmadd.h f30, f25, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f25, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f25, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f25, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f25, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f25, f29, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x1)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f18, 0(x2) # load 0x00008001 from memory into f18
la x2, scratch
li x3, 0x5ae9a5b9f41a7662 # load x3 with value 0x5ae9a5b9f41a7662
sw x3, 0(x2) # store 0x5ae9a5b9f41a7662 in memory
flh f20, 0(x2) # load 0x5ae9a5b9f41a7662 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f12, 0(x2) # load 0x00000001 from memory into f12
fnmadd.h f2, f18, f20, f12, dyn # perform operation
fnmadd.h f2, f18, f20, f12, rdn # perform operation
fnmadd.h f2, f18, f20, f12, rmm # perform operation
fnmadd.h f2, f18, f20, f12, rne # perform operation
fnmadd.h f2, f18, f20, f12, rtz # perform operation
fnmadd.h f2, f18, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f18, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f18, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f18, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f18, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f18, f20, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x8001)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
la x2, scratch
li x3, 0x5473c1dea04ebdc9 # load x3 with value 0x5473c1dea04ebdc9
sw x3, 0(x2) # store 0x5473c1dea04ebdc9 in memory
flh f2, 0(x2) # load 0x5473c1dea04ebdc9 from memory into f2
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f18, 0(x2) # load 0x00008001 from memory into f18
fnmadd.h f17, f14, f2, f18, dyn # perform operation
fnmadd.h f17, f14, f2, f18, rdn # perform operation
fnmadd.h f17, f14, f2, f18, rmm # perform operation
fnmadd.h f17, f14, f2, f18, rne # perform operation
fnmadd.h f17, f14, f2, f18, rtz # perform operation
fnmadd.h f17, f14, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f14, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f14, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f14, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f14, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f14, f2, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f17, 0(x2) # load 0x00008001 from memory into f17
la x2, scratch
li x3, 0xc242de1e1d2a6c3b # load x3 with value 0xc242de1e1d2a6c3b
sw x3, 0(x2) # store 0xc242de1e1d2a6c3b in memory
flh f1, 0(x2) # load 0xc242de1e1d2a6c3b from memory into f1
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
fnmadd.h f21, f17, f1, f19, dyn # perform operation
fnmadd.h f21, f17, f1, f19, rdn # perform operation
fnmadd.h f21, f17, f1, f19, rmm # perform operation
fnmadd.h f21, f17, f1, f19, rne # perform operation
fnmadd.h f21, f17, f1, f19, rtz # perform operation
fnmadd.h f21, f17, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f17, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f17, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f17, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f17, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f17, f1, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f18, 0(x2) # load 0x00008001 from memory into f18
la x2, scratch
li x3, 0x9a7466371fa721c8 # load x3 with value 0x9a7466371fa721c8
sw x3, 0(x2) # store 0x9a7466371fa721c8 in memory
flh f7, 0(x2) # load 0x9a7466371fa721c8 from memory into f7
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f8, 0(x2) # load 0x0000fc00 from memory into f8
fnmadd.h f2, f18, f7, f8, dyn # perform operation
fnmadd.h f2, f18, f7, f8, rdn # perform operation
fnmadd.h f2, f18, f7, f8, rmm # perform operation
fnmadd.h f2, f18, f7, f8, rne # perform operation
fnmadd.h f2, f18, f7, f8, rtz # perform operation
fnmadd.h f2, f18, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f18, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f18, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f18, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f18, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f18, f7, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f20, 0(x2) # load 0x00008001 from memory into f20
la x2, scratch
li x3, 0xe542298399cf350b # load x3 with value 0xe542298399cf350b
sw x3, 0(x2) # store 0xe542298399cf350b in memory
flh f13, 0(x2) # load 0xe542298399cf350b from memory into f13
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f14, 0(x2) # load 0x00007e00 from memory into f14
fnmadd.h f3, f20, f13, f14, dyn # perform operation
fnmadd.h f3, f20, f13, f14, rdn # perform operation
fnmadd.h f3, f20, f13, f14, rmm # perform operation
fnmadd.h f3, f20, f13, f14, rne # perform operation
fnmadd.h f3, f20, f13, f14, rtz # perform operation
fnmadd.h f3, f20, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f20, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f20, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f20, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f20, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f20, f13, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f1, 0(x2) # load 0x00008001 from memory into f1
la x2, scratch
li x3, 0xb88855f84056333d # load x3 with value 0xb88855f84056333d
sw x3, 0(x2) # store 0xb88855f84056333d in memory
flh f24, 0(x2) # load 0xb88855f84056333d from memory into f24
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f11, 0(x2) # load 0x00007fff from memory into f11
fnmadd.h f14, f1, f24, f11, dyn # perform operation
fnmadd.h f14, f1, f24, f11, rdn # perform operation
fnmadd.h f14, f1, f24, f11, rmm # perform operation
fnmadd.h f14, f1, f24, f11, rne # perform operation
fnmadd.h f14, f1, f24, f11, rtz # perform operation
fnmadd.h f14, f1, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f1, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f1, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f1, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f1, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f1, f24, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f11, 0(x2) # load 0x00008001 from memory into f11
la x2, scratch
li x3, 0xafb0e07ab261c52d # load x3 with value 0xafb0e07ab261c52d
sw x3, 0(x2) # store 0xafb0e07ab261c52d in memory
flh f19, 0(x2) # load 0xafb0e07ab261c52d from memory into f19
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f14, 0(x2) # load 0x0000fe00 from memory into f14
fnmadd.h f2, f11, f19, f14, dyn # perform operation
fnmadd.h f2, f11, f19, f14, rdn # perform operation
fnmadd.h f2, f11, f19, f14, rmm # perform operation
fnmadd.h f2, f11, f19, f14, rne # perform operation
fnmadd.h f2, f11, f19, f14, rtz # perform operation
fnmadd.h f2, f11, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f11, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f11, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f11, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f11, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f11, f19, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f13, 0(x2) # load 0x00008001 from memory into f13
la x2, scratch
li x3, 0xe11c277b42709276 # load x3 with value 0xe11c277b42709276
sw x3, 0(x2) # store 0xe11c277b42709276 in memory
flh f23, 0(x2) # load 0xe11c277b42709276 from memory into f23
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
fnmadd.h f27, f13, f23, f20, dyn # perform operation
fnmadd.h f27, f13, f23, f20, rdn # perform operation
fnmadd.h f27, f13, f23, f20, rmm # perform operation
fnmadd.h f27, f13, f23, f20, rne # perform operation
fnmadd.h f27, f13, f23, f20, rtz # perform operation
fnmadd.h f27, f13, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f13, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f13, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f13, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f13, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f13, f23, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
la x2, scratch
li x3, 0xc899de8f033440c3 # load x3 with value 0xc899de8f033440c3
sw x3, 0(x2) # store 0xc899de8f033440c3 in memory
flh f1, 0(x2) # load 0xc899de8f033440c3 from memory into f1
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f13, 0(x2) # load 0x00007dff from memory into f13
fnmadd.h f23, f14, f1, f13, dyn # perform operation
fnmadd.h f23, f14, f1, f13, rdn # perform operation
fnmadd.h f23, f14, f1, f13, rmm # perform operation
fnmadd.h f23, f14, f1, f13, rne # perform operation
fnmadd.h f23, f14, f1, f13, rtz # perform operation
fnmadd.h f23, f14, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f14, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f14, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f14, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f14, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f14, f1, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f5, 0(x2) # load 0x00008001 from memory into f5
la x2, scratch
li x3, 0x87d16693f7d5ab7f # load x3 with value 0x87d16693f7d5ab7f
sw x3, 0(x2) # store 0x87d16693f7d5ab7f in memory
flh f27, 0(x2) # load 0x87d16693f7d5ab7f from memory into f27
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f3, 0(x2) # load 0x0000fc01 from memory into f3
fnmadd.h f16, f5, f27, f3, dyn # perform operation
fnmadd.h f16, f5, f27, f3, rdn # perform operation
fnmadd.h f16, f5, f27, f3, rmm # perform operation
fnmadd.h f16, f5, f27, f3, rne # perform operation
fnmadd.h f16, f5, f27, f3, rtz # perform operation
fnmadd.h f16, f5, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f5, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f5, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f5, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f5, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f5, f27, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f6, 0(x2) # load 0x00008001 from memory into f6
la x2, scratch
li x3, 0x8059baa59a85580b # load x3 with value 0x8059baa59a85580b
sw x3, 0(x2) # store 0x8059baa59a85580b in memory
flh f3, 0(x2) # load 0x8059baa59a85580b from memory into f3
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
fnmadd.h f17, f6, f3, f29, dyn # perform operation
fnmadd.h f17, f6, f3, f29, rdn # perform operation
fnmadd.h f17, f6, f3, f29, rmm # perform operation
fnmadd.h f17, f6, f3, f29, rne # perform operation
fnmadd.h f17, f6, f3, f29, rtz # perform operation
fnmadd.h f17, f6, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f6, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f6, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f6, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f6, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f6, f3, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f21, 0(x2) # load 0x00008001 from memory into f21
la x2, scratch
li x3, 0xae1ca45d690947fa # load x3 with value 0xae1ca45d690947fa
sw x3, 0(x2) # store 0xae1ca45d690947fa in memory
flh f24, 0(x2) # load 0xae1ca45d690947fa from memory into f24
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f26, 0(x2) # load 0x0000c93a from memory into f26
fnmadd.h f18, f21, f24, f26, dyn # perform operation
fnmadd.h f18, f21, f24, f26, rdn # perform operation
fnmadd.h f18, f21, f24, f26, rmm # perform operation
fnmadd.h f18, f21, f24, f26, rne # perform operation
fnmadd.h f18, f21, f24, f26, rtz # perform operation
fnmadd.h f18, f21, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f21, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f21, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f21, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f21, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f21, f24, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x0)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f8, 0(x2) # load 0x00007c00 from memory into f8
la x2, scratch
li x3, 0x9bab095883d10a1d # load x3 with value 0x9bab095883d10a1d
sw x3, 0(x2) # store 0x9bab095883d10a1d in memory
flh f5, 0(x2) # load 0x9bab095883d10a1d from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f7, 0(x2) # load 0x00000000 from memory into f7
fnmadd.h f18, f8, f5, f7, dyn # perform operation
fnmadd.h f18, f8, f5, f7, rdn # perform operation
fnmadd.h f18, f8, f5, f7, rmm # perform operation
fnmadd.h f18, f8, f5, f7, rne # perform operation
fnmadd.h f18, f8, f5, f7, rtz # perform operation
fnmadd.h f18, f8, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f8, f5, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x8000)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f6, 0(x2) # load 0x00007c00 from memory into f6
la x2, scratch
li x3, 0xc3bd41d7aec5739e # load x3 with value 0xc3bd41d7aec5739e
sw x3, 0(x2) # store 0xc3bd41d7aec5739e in memory
flh f27, 0(x2) # load 0xc3bd41d7aec5739e from memory into f27
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f2, 0(x2) # load 0x00008000 from memory into f2
fnmadd.h f22, f6, f27, f2, dyn # perform operation
fnmadd.h f22, f6, f27, f2, rdn # perform operation
fnmadd.h f22, f6, f27, f2, rmm # perform operation
fnmadd.h f22, f6, f27, f2, rne # perform operation
fnmadd.h f22, f6, f27, f2, rtz # perform operation
fnmadd.h f22, f6, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f6, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f6, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f6, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f6, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f6, f27, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f22, 0(x2) # load 0x00007c00 from memory into f22
la x2, scratch
li x3, 0x97f601d42a8550d6 # load x3 with value 0x97f601d42a8550d6
sw x3, 0(x2) # store 0x97f601d42a8550d6 in memory
flh f26, 0(x2) # load 0x97f601d42a8550d6 from memory into f26
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
fnmadd.h f21, f22, f26, f18, dyn # perform operation
fnmadd.h f21, f22, f26, f18, rdn # perform operation
fnmadd.h f21, f22, f26, f18, rmm # perform operation
fnmadd.h f21, f22, f26, f18, rne # perform operation
fnmadd.h f21, f22, f26, f18, rtz # perform operation
fnmadd.h f21, f22, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f22, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f22, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f22, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f22, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f22, f26, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f14, 0(x2) # load 0x00007c00 from memory into f14
la x2, scratch
li x3, 0x760831fde0c61057 # load x3 with value 0x760831fde0c61057
sw x3, 0(x2) # store 0x760831fde0c61057 in memory
flh f20, 0(x2) # load 0x760831fde0c61057 from memory into f20
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f7, 0(x2) # load 0x0000bc00 from memory into f7
fnmadd.h f23, f14, f20, f7, dyn # perform operation
fnmadd.h f23, f14, f20, f7, rdn # perform operation
fnmadd.h f23, f14, f20, f7, rmm # perform operation
fnmadd.h f23, f14, f20, f7, rne # perform operation
fnmadd.h f23, f14, f20, f7, rtz # perform operation
fnmadd.h f23, f14, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f14, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f14, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f14, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f14, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f14, f20, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f29, 0(x2) # load 0x00007c00 from memory into f29
la x2, scratch
li x3, 0xfe66d78ba8c54f0c # load x3 with value 0xfe66d78ba8c54f0c
sw x3, 0(x2) # store 0xfe66d78ba8c54f0c in memory
flh f31, 0(x2) # load 0xfe66d78ba8c54f0c from memory into f31
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
fnmadd.h f11, f29, f31, f7, dyn # perform operation
fnmadd.h f11, f29, f31, f7, rdn # perform operation
fnmadd.h f11, f29, f31, f7, rmm # perform operation
fnmadd.h f11, f29, f31, f7, rne # perform operation
fnmadd.h f11, f29, f31, f7, rtz # perform operation
fnmadd.h f11, f29, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f29, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f29, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f29, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f29, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f29, f31, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f25, 0(x2) # load 0x00007c00 from memory into f25
la x2, scratch
li x3, 0xeca19776dd8562ce # load x3 with value 0xeca19776dd8562ce
sw x3, 0(x2) # store 0xeca19776dd8562ce in memory
flh f2, 0(x2) # load 0xeca19776dd8562ce from memory into f2
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
fnmadd.h f19, f25, f2, f14, dyn # perform operation
fnmadd.h f19, f25, f2, f14, rdn # perform operation
fnmadd.h f19, f25, f2, f14, rmm # perform operation
fnmadd.h f19, f25, f2, f14, rne # perform operation
fnmadd.h f19, f25, f2, f14, rtz # perform operation
fnmadd.h f19, f25, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f25, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f25, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f25, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f25, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f25, f2, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x4000)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f25, 0(x2) # load 0x00007c00 from memory into f25
la x2, scratch
li x3, 0x8579ca33c84458ed # load x3 with value 0x8579ca33c84458ed
sw x3, 0(x2) # store 0x8579ca33c84458ed in memory
flh f9, 0(x2) # load 0x8579ca33c84458ed from memory into f9
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f19, 0(x2) # load 0x00004000 from memory into f19
fnmadd.h f17, f25, f9, f19, dyn # perform operation
fnmadd.h f17, f25, f9, f19, rdn # perform operation
fnmadd.h f17, f25, f9, f19, rmm # perform operation
fnmadd.h f17, f25, f9, f19, rne # perform operation
fnmadd.h f17, f25, f9, f19, rtz # perform operation
fnmadd.h f17, f25, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f25, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f25, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f25, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f25, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f25, f9, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xc000)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f5, 0(x2) # load 0x00007c00 from memory into f5
la x2, scratch
li x3, 0x8f78207721efa242 # load x3 with value 0x8f78207721efa242
sw x3, 0(x2) # store 0x8f78207721efa242 in memory
flh f28, 0(x2) # load 0x8f78207721efa242 from memory into f28
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f27, 0(x2) # load 0x0000c000 from memory into f27
fnmadd.h f22, f5, f28, f27, dyn # perform operation
fnmadd.h f22, f5, f28, f27, rdn # perform operation
fnmadd.h f22, f5, f28, f27, rmm # perform operation
fnmadd.h f22, f5, f28, f27, rne # perform operation
fnmadd.h f22, f5, f28, f27, rtz # perform operation
fnmadd.h f22, f5, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f5, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f5, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f5, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f5, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f5, f28, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x400)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f29, 0(x2) # load 0x00007c00 from memory into f29
la x2, scratch
li x3, 0x393379f4d18b0eb5 # load x3 with value 0x393379f4d18b0eb5
sw x3, 0(x2) # store 0x393379f4d18b0eb5 in memory
flh f26, 0(x2) # load 0x393379f4d18b0eb5 from memory into f26
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f30, 0(x2) # load 0x00000400 from memory into f30
fnmadd.h f9, f29, f26, f30, dyn # perform operation
fnmadd.h f9, f29, f26, f30, rdn # perform operation
fnmadd.h f9, f29, f26, f30, rmm # perform operation
fnmadd.h f9, f29, f26, f30, rne # perform operation
fnmadd.h f9, f29, f26, f30, rtz # perform operation
fnmadd.h f9, f29, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f29, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f29, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f29, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f29, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f29, f26, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x8400)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f29, 0(x2) # load 0x00007c00 from memory into f29
la x2, scratch
li x3, 0x3ad8266346c05a3f # load x3 with value 0x3ad8266346c05a3f
sw x3, 0(x2) # store 0x3ad8266346c05a3f in memory
flh f15, 0(x2) # load 0x3ad8266346c05a3f from memory into f15
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f22, 0(x2) # load 0x00008400 from memory into f22
fnmadd.h f26, f29, f15, f22, dyn # perform operation
fnmadd.h f26, f29, f15, f22, rdn # perform operation
fnmadd.h f26, f29, f15, f22, rmm # perform operation
fnmadd.h f26, f29, f15, f22, rne # perform operation
fnmadd.h f26, f29, f15, f22, rtz # perform operation
fnmadd.h f26, f29, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f29, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f29, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f29, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f29, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f29, f15, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f14, 0(x2) # load 0x00007c00 from memory into f14
la x2, scratch
li x3, 0xb532db11b28eded4 # load x3 with value 0xb532db11b28eded4
sw x3, 0(x2) # store 0xb532db11b28eded4 in memory
flh f10, 0(x2) # load 0xb532db11b28eded4 from memory into f10
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
fnmadd.h f15, f14, f10, f24, dyn # perform operation
fnmadd.h f15, f14, f10, f24, rdn # perform operation
fnmadd.h f15, f14, f10, f24, rmm # perform operation
fnmadd.h f15, f14, f10, f24, rne # perform operation
fnmadd.h f15, f14, f10, f24, rtz # perform operation
fnmadd.h f15, f14, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f14, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f14, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f14, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f14, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f14, f10, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f2, 0(x2) # load 0x00007c00 from memory into f2
la x2, scratch
li x3, 0xb3db9a56a10833ff # load x3 with value 0xb3db9a56a10833ff
sw x3, 0(x2) # store 0xb3db9a56a10833ff in memory
flh f24, 0(x2) # load 0xb3db9a56a10833ff from memory into f24
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f6, 0(x2) # load 0x0000fbff from memory into f6
fnmadd.h f1, f2, f24, f6, dyn # perform operation
fnmadd.h f1, f2, f24, f6, rdn # perform operation
fnmadd.h f1, f2, f24, f6, rmm # perform operation
fnmadd.h f1, f2, f24, f6, rne # perform operation
fnmadd.h f1, f2, f24, f6, rtz # perform operation
fnmadd.h f1, f2, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f2, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f2, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f2, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f2, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f2, f24, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f7, 0(x2) # load 0x00007c00 from memory into f7
la x2, scratch
li x3, 0x30c4256a7ab5093b # load x3 with value 0x30c4256a7ab5093b
sw x3, 0(x2) # store 0x30c4256a7ab5093b in memory
flh f27, 0(x2) # load 0x30c4256a7ab5093b from memory into f27
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f2, 0(x2) # load 0x000003ff from memory into f2
fnmadd.h f31, f7, f27, f2, dyn # perform operation
fnmadd.h f31, f7, f27, f2, rdn # perform operation
fnmadd.h f31, f7, f27, f2, rmm # perform operation
fnmadd.h f31, f7, f27, f2, rne # perform operation
fnmadd.h f31, f7, f27, f2, rtz # perform operation
fnmadd.h f31, f7, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f7, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f7, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f7, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f7, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f7, f27, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f6, 0(x2) # load 0x00007c00 from memory into f6
la x2, scratch
li x3, 0x5356c9af7f942488 # load x3 with value 0x5356c9af7f942488
sw x3, 0(x2) # store 0x5356c9af7f942488 in memory
flh f27, 0(x2) # load 0x5356c9af7f942488 from memory into f27
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f7, 0(x2) # load 0x000083ff from memory into f7
fnmadd.h f14, f6, f27, f7, dyn # perform operation
fnmadd.h f14, f6, f27, f7, rdn # perform operation
fnmadd.h f14, f6, f27, f7, rmm # perform operation
fnmadd.h f14, f6, f27, f7, rne # perform operation
fnmadd.h f14, f6, f27, f7, rtz # perform operation
fnmadd.h f14, f6, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f6, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f6, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f6, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f6, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f6, f27, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x200)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f1, 0(x2) # load 0x00007c00 from memory into f1
la x2, scratch
li x3, 0x80e8f3258a35e157 # load x3 with value 0x80e8f3258a35e157
sw x3, 0(x2) # store 0x80e8f3258a35e157 in memory
flh f23, 0(x2) # load 0x80e8f3258a35e157 from memory into f23
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
fnmadd.h f10, f1, f23, f6, dyn # perform operation
fnmadd.h f10, f1, f23, f6, rdn # perform operation
fnmadd.h f10, f1, f23, f6, rmm # perform operation
fnmadd.h f10, f1, f23, f6, rne # perform operation
fnmadd.h f10, f1, f23, f6, rtz # perform operation
fnmadd.h f10, f1, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f1, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f1, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f1, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f1, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f1, f23, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x8200)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f17, 0(x2) # load 0x00007c00 from memory into f17
la x2, scratch
li x3, 0x713032f07375b218 # load x3 with value 0x713032f07375b218
sw x3, 0(x2) # store 0x713032f07375b218 in memory
flh f25, 0(x2) # load 0x713032f07375b218 from memory into f25
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f9, 0(x2) # load 0x00008200 from memory into f9
fnmadd.h f13, f17, f25, f9, dyn # perform operation
fnmadd.h f13, f17, f25, f9, rdn # perform operation
fnmadd.h f13, f17, f25, f9, rmm # perform operation
fnmadd.h f13, f17, f25, f9, rne # perform operation
fnmadd.h f13, f17, f25, f9, rtz # perform operation
fnmadd.h f13, f17, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f17, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f17, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f17, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f17, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f17, f25, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x1)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f16, 0(x2) # load 0x00007c00 from memory into f16
la x2, scratch
li x3, 0x2f2518c1fdcc993d # load x3 with value 0x2f2518c1fdcc993d
sw x3, 0(x2) # store 0x2f2518c1fdcc993d in memory
flh f18, 0(x2) # load 0x2f2518c1fdcc993d from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f27, 0(x2) # load 0x00000001 from memory into f27
fnmadd.h f30, f16, f18, f27, dyn # perform operation
fnmadd.h f30, f16, f18, f27, rdn # perform operation
fnmadd.h f30, f16, f18, f27, rmm # perform operation
fnmadd.h f30, f16, f18, f27, rne # perform operation
fnmadd.h f30, f16, f18, f27, rtz # perform operation
fnmadd.h f30, f16, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f16, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f16, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f16, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f16, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f16, f18, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x8001)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f21, 0(x2) # load 0x00007c00 from memory into f21
la x2, scratch
li x3, 0x1b74ad84ada3dc60 # load x3 with value 0x1b74ad84ada3dc60
sw x3, 0(x2) # store 0x1b74ad84ada3dc60 in memory
flh f9, 0(x2) # load 0x1b74ad84ada3dc60 from memory into f9
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f5, 0(x2) # load 0x00008001 from memory into f5
fnmadd.h f18, f21, f9, f5, dyn # perform operation
fnmadd.h f18, f21, f9, f5, rdn # perform operation
fnmadd.h f18, f21, f9, f5, rmm # perform operation
fnmadd.h f18, f21, f9, f5, rne # perform operation
fnmadd.h f18, f21, f9, f5, rtz # perform operation
fnmadd.h f18, f21, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f21, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f21, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f21, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f21, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f21, f9, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
la x2, scratch
li x3, 0xd1228f3f7b75340f # load x3 with value 0xd1228f3f7b75340f
sw x3, 0(x2) # store 0xd1228f3f7b75340f in memory
flh f14, 0(x2) # load 0xd1228f3f7b75340f from memory into f14
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f22, 0(x2) # load 0x00007c00 from memory into f22
fnmadd.h f11, f19, f14, f22, dyn # perform operation
fnmadd.h f11, f19, f14, f22, rdn # perform operation
fnmadd.h f11, f19, f14, f22, rmm # perform operation
fnmadd.h f11, f19, f14, f22, rne # perform operation
fnmadd.h f11, f19, f14, f22, rtz # perform operation
fnmadd.h f11, f19, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f19, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f19, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f19, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f19, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f19, f14, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f25, 0(x2) # load 0x00007c00 from memory into f25
la x2, scratch
li x3, 0xbaa606ebb5590f7e # load x3 with value 0xbaa606ebb5590f7e
sw x3, 0(x2) # store 0xbaa606ebb5590f7e in memory
flh f29, 0(x2) # load 0xbaa606ebb5590f7e from memory into f29
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f19, 0(x2) # load 0x0000fc00 from memory into f19
fnmadd.h f18, f25, f29, f19, dyn # perform operation
fnmadd.h f18, f25, f29, f19, rdn # perform operation
fnmadd.h f18, f25, f29, f19, rmm # perform operation
fnmadd.h f18, f25, f29, f19, rne # perform operation
fnmadd.h f18, f25, f29, f19, rtz # perform operation
fnmadd.h f18, f25, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f25, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f25, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f25, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f25, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f25, f29, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
la x2, scratch
li x3, 0x93ba453d662c4abb # load x3 with value 0x93ba453d662c4abb
sw x3, 0(x2) # store 0x93ba453d662c4abb in memory
flh f16, 0(x2) # load 0x93ba453d662c4abb from memory into f16
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f22, 0(x2) # load 0x00007e00 from memory into f22
fnmadd.h f10, f9, f16, f22, dyn # perform operation
fnmadd.h f10, f9, f16, f22, rdn # perform operation
fnmadd.h f10, f9, f16, f22, rmm # perform operation
fnmadd.h f10, f9, f16, f22, rne # perform operation
fnmadd.h f10, f9, f16, f22, rtz # perform operation
fnmadd.h f10, f9, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f9, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f9, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f9, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f9, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f9, f16, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
la x2, scratch
li x3, 0x86a7de1f85cf1454 # load x3 with value 0x86a7de1f85cf1454
sw x3, 0(x2) # store 0x86a7de1f85cf1454 in memory
flh f12, 0(x2) # load 0x86a7de1f85cf1454 from memory into f12
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f10, 0(x2) # load 0x00007fff from memory into f10
fnmadd.h f18, f19, f12, f10, dyn # perform operation
fnmadd.h f18, f19, f12, f10, rdn # perform operation
fnmadd.h f18, f19, f12, f10, rmm # perform operation
fnmadd.h f18, f19, f12, f10, rne # perform operation
fnmadd.h f18, f19, f12, f10, rtz # perform operation
fnmadd.h f18, f19, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f19, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f19, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f19, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f19, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f19, f12, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f6, 0(x2) # load 0x00007c00 from memory into f6
la x2, scratch
li x3, 0x98088be57123edb4 # load x3 with value 0x98088be57123edb4
sw x3, 0(x2) # store 0x98088be57123edb4 in memory
flh f19, 0(x2) # load 0x98088be57123edb4 from memory into f19
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f22, 0(x2) # load 0x0000fe00 from memory into f22
fnmadd.h f29, f6, f19, f22, dyn # perform operation
fnmadd.h f29, f6, f19, f22, rdn # perform operation
fnmadd.h f29, f6, f19, f22, rmm # perform operation
fnmadd.h f29, f6, f19, f22, rne # perform operation
fnmadd.h f29, f6, f19, f22, rtz # perform operation
fnmadd.h f29, f6, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f6, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f6, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f6, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f6, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f6, f19, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f26, 0(x2) # load 0x00007c00 from memory into f26
la x2, scratch
li x3, 0x3238e29660659d07 # load x3 with value 0x3238e29660659d07
sw x3, 0(x2) # store 0x3238e29660659d07 in memory
flh f12, 0(x2) # load 0x3238e29660659d07 from memory into f12
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f25, 0(x2) # load 0x00007c01 from memory into f25
fnmadd.h f22, f26, f12, f25, dyn # perform operation
fnmadd.h f22, f26, f12, f25, rdn # perform operation
fnmadd.h f22, f26, f12, f25, rmm # perform operation
fnmadd.h f22, f26, f12, f25, rne # perform operation
fnmadd.h f22, f26, f12, f25, rtz # perform operation
fnmadd.h f22, f26, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f26, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f26, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f26, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f26, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f26, f12, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f31, 0(x2) # load 0x00007c00 from memory into f31
la x2, scratch
li x3, 0xb52debe70ae2e3fd # load x3 with value 0xb52debe70ae2e3fd
sw x3, 0(x2) # store 0xb52debe70ae2e3fd in memory
flh f21, 0(x2) # load 0xb52debe70ae2e3fd from memory into f21
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f11, 0(x2) # load 0x00007dff from memory into f11
fnmadd.h f17, f31, f21, f11, dyn # perform operation
fnmadd.h f17, f31, f21, f11, rdn # perform operation
fnmadd.h f17, f31, f21, f11, rmm # perform operation
fnmadd.h f17, f31, f21, f11, rne # perform operation
fnmadd.h f17, f31, f21, f11, rtz # perform operation
fnmadd.h f17, f31, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f31, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f31, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f31, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f31, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f31, f21, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f30, 0(x2) # load 0x00007c00 from memory into f30
la x2, scratch
li x3, 0x333f4619cda7baf6 # load x3 with value 0x333f4619cda7baf6
sw x3, 0(x2) # store 0x333f4619cda7baf6 in memory
flh f29, 0(x2) # load 0x333f4619cda7baf6 from memory into f29
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f3, 0(x2) # load 0x0000fc01 from memory into f3
fnmadd.h f27, f30, f29, f3, dyn # perform operation
fnmadd.h f27, f30, f29, f3, rdn # perform operation
fnmadd.h f27, f30, f29, f3, rmm # perform operation
fnmadd.h f27, f30, f29, f3, rne # perform operation
fnmadd.h f27, f30, f29, f3, rtz # perform operation
fnmadd.h f27, f30, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f30, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f30, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f30, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f30, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f30, f29, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f2, 0(x2) # load 0x00007c00 from memory into f2
la x2, scratch
li x3, 0xa51a6df543368ddf # load x3 with value 0xa51a6df543368ddf
sw x3, 0(x2) # store 0xa51a6df543368ddf in memory
flh f28, 0(x2) # load 0xa51a6df543368ddf from memory into f28
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
fnmadd.h f31, f2, f28, f13, dyn # perform operation
fnmadd.h f31, f2, f28, f13, rdn # perform operation
fnmadd.h f31, f2, f28, f13, rmm # perform operation
fnmadd.h f31, f2, f28, f13, rne # perform operation
fnmadd.h f31, f2, f28, f13, rtz # perform operation
fnmadd.h f31, f2, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f2, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f2, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f2, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f2, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f2, f28, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f29, 0(x2) # load 0x00007c00 from memory into f29
la x2, scratch
li x3, 0x2aa8458f3fac8d02 # load x3 with value 0x2aa8458f3fac8d02
sw x3, 0(x2) # store 0x2aa8458f3fac8d02 in memory
flh f8, 0(x2) # load 0x2aa8458f3fac8d02 from memory into f8
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f6, 0(x2) # load 0x0000c93a from memory into f6
fnmadd.h f15, f29, f8, f6, dyn # perform operation
fnmadd.h f15, f29, f8, f6, rdn # perform operation
fnmadd.h f15, f29, f8, f6, rmm # perform operation
fnmadd.h f15, f29, f8, f6, rne # perform operation
fnmadd.h f15, f29, f8, f6, rtz # perform operation
fnmadd.h f15, f29, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f29, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f29, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f29, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f29, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f29, f8, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x0)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f13, 0(x2) # load 0x0000fc00 from memory into f13
la x2, scratch
li x3, 0x9e4fe3b5c2fe6e9c # load x3 with value 0x9e4fe3b5c2fe6e9c
sw x3, 0(x2) # store 0x9e4fe3b5c2fe6e9c in memory
flh f29, 0(x2) # load 0x9e4fe3b5c2fe6e9c from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f11, 0(x2) # load 0x00000000 from memory into f11
fnmadd.h f31, f13, f29, f11, dyn # perform operation
fnmadd.h f31, f13, f29, f11, rdn # perform operation
fnmadd.h f31, f13, f29, f11, rmm # perform operation
fnmadd.h f31, f13, f29, f11, rne # perform operation
fnmadd.h f31, f13, f29, f11, rtz # perform operation
fnmadd.h f31, f13, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f13, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f13, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f13, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f13, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f13, f29, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x8000)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f10, 0(x2) # load 0x0000fc00 from memory into f10
la x2, scratch
li x3, 0x24aac353b55c0274 # load x3 with value 0x24aac353b55c0274
sw x3, 0(x2) # store 0x24aac353b55c0274 in memory
flh f17, 0(x2) # load 0x24aac353b55c0274 from memory into f17
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f7, 0(x2) # load 0x00008000 from memory into f7
fnmadd.h f11, f10, f17, f7, dyn # perform operation
fnmadd.h f11, f10, f17, f7, rdn # perform operation
fnmadd.h f11, f10, f17, f7, rmm # perform operation
fnmadd.h f11, f10, f17, f7, rne # perform operation
fnmadd.h f11, f10, f17, f7, rtz # perform operation
fnmadd.h f11, f10, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f10, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f10, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f10, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f10, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f10, f17, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x3c00)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f23, 0(x2) # load 0x0000fc00 from memory into f23
la x2, scratch
li x3, 0x1286fc367ce665c2 # load x3 with value 0x1286fc367ce665c2
sw x3, 0(x2) # store 0x1286fc367ce665c2 in memory
flh f29, 0(x2) # load 0x1286fc367ce665c2 from memory into f29
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
fnmadd.h f31, f23, f29, f8, dyn # perform operation
fnmadd.h f31, f23, f29, f8, rdn # perform operation
fnmadd.h f31, f23, f29, f8, rmm # perform operation
fnmadd.h f31, f23, f29, f8, rne # perform operation
fnmadd.h f31, f23, f29, f8, rtz # perform operation
fnmadd.h f31, f23, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f23, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f23, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f23, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f23, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f23, f29, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xbc00)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f28, 0(x2) # load 0x0000fc00 from memory into f28
la x2, scratch
li x3, 0x8daaa751d058cde2 # load x3 with value 0x8daaa751d058cde2
sw x3, 0(x2) # store 0x8daaa751d058cde2 in memory
flh f1, 0(x2) # load 0x8daaa751d058cde2 from memory into f1
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f13, 0(x2) # load 0x0000bc00 from memory into f13
fnmadd.h f25, f28, f1, f13, dyn # perform operation
fnmadd.h f25, f28, f1, f13, rdn # perform operation
fnmadd.h f25, f28, f1, f13, rmm # perform operation
fnmadd.h f25, f28, f1, f13, rne # perform operation
fnmadd.h f25, f28, f1, f13, rtz # perform operation
fnmadd.h f25, f28, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f28, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f28, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f28, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f28, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f28, f1, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x3e00)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f23, 0(x2) # load 0x0000fc00 from memory into f23
la x2, scratch
li x3, 0x560eab8616e72859 # load x3 with value 0x560eab8616e72859
sw x3, 0(x2) # store 0x560eab8616e72859 in memory
flh f27, 0(x2) # load 0x560eab8616e72859 from memory into f27
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f9, 0(x2) # load 0x00003e00 from memory into f9
fnmadd.h f22, f23, f27, f9, dyn # perform operation
fnmadd.h f22, f23, f27, f9, rdn # perform operation
fnmadd.h f22, f23, f27, f9, rmm # perform operation
fnmadd.h f22, f23, f27, f9, rne # perform operation
fnmadd.h f22, f23, f27, f9, rtz # perform operation
fnmadd.h f22, f23, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f23, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f23, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f23, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f23, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f23, f27, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xbe00)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f26, 0(x2) # load 0x0000fc00 from memory into f26
la x2, scratch
li x3, 0x5f04a91c7f282803 # load x3 with value 0x5f04a91c7f282803
sw x3, 0(x2) # store 0x5f04a91c7f282803 in memory
flh f9, 0(x2) # load 0x5f04a91c7f282803 from memory into f9
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f27, 0(x2) # load 0x0000be00 from memory into f27
fnmadd.h f30, f26, f9, f27, dyn # perform operation
fnmadd.h f30, f26, f9, f27, rdn # perform operation
fnmadd.h f30, f26, f9, f27, rmm # perform operation
fnmadd.h f30, f26, f9, f27, rne # perform operation
fnmadd.h f30, f26, f9, f27, rtz # perform operation
fnmadd.h f30, f26, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f26, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f26, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f26, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f26, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f26, f9, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x4000)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f9, 0(x2) # load 0x0000fc00 from memory into f9
la x2, scratch
li x3, 0x795eff976adcc9c4 # load x3 with value 0x795eff976adcc9c4
sw x3, 0(x2) # store 0x795eff976adcc9c4 in memory
flh f30, 0(x2) # load 0x795eff976adcc9c4 from memory into f30
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f28, 0(x2) # load 0x00004000 from memory into f28
fnmadd.h f13, f9, f30, f28, dyn # perform operation
fnmadd.h f13, f9, f30, f28, rdn # perform operation
fnmadd.h f13, f9, f30, f28, rmm # perform operation
fnmadd.h f13, f9, f30, f28, rne # perform operation
fnmadd.h f13, f9, f30, f28, rtz # perform operation
fnmadd.h f13, f9, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f9, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f9, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f9, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f9, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f9, f30, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xc000)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f7, 0(x2) # load 0x0000fc00 from memory into f7
la x2, scratch
li x3, 0xc074092c9d25cea7 # load x3 with value 0xc074092c9d25cea7
sw x3, 0(x2) # store 0xc074092c9d25cea7 in memory
flh f15, 0(x2) # load 0xc074092c9d25cea7 from memory into f15
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
fnmadd.h f29, f7, f15, f12, dyn # perform operation
fnmadd.h f29, f7, f15, f12, rdn # perform operation
fnmadd.h f29, f7, f15, f12, rmm # perform operation
fnmadd.h f29, f7, f15, f12, rne # perform operation
fnmadd.h f29, f7, f15, f12, rtz # perform operation
fnmadd.h f29, f7, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f7, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f7, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f7, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f7, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f7, f15, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x400)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f30, 0(x2) # load 0x0000fc00 from memory into f30
la x2, scratch
li x3, 0xe1eb12c52796a729 # load x3 with value 0xe1eb12c52796a729
sw x3, 0(x2) # store 0xe1eb12c52796a729 in memory
flh f15, 0(x2) # load 0xe1eb12c52796a729 from memory into f15
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f22, 0(x2) # load 0x00000400 from memory into f22
fnmadd.h f16, f30, f15, f22, dyn # perform operation
fnmadd.h f16, f30, f15, f22, rdn # perform operation
fnmadd.h f16, f30, f15, f22, rmm # perform operation
fnmadd.h f16, f30, f15, f22, rne # perform operation
fnmadd.h f16, f30, f15, f22, rtz # perform operation
fnmadd.h f16, f30, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f30, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f30, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f30, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f30, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f30, f15, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x8400)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f3, 0(x2) # load 0x0000fc00 from memory into f3
la x2, scratch
li x3, 0x608fcb1823dfdb79 # load x3 with value 0x608fcb1823dfdb79
sw x3, 0(x2) # store 0x608fcb1823dfdb79 in memory
flh f5, 0(x2) # load 0x608fcb1823dfdb79 from memory into f5
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f25, 0(x2) # load 0x00008400 from memory into f25
fnmadd.h f9, f3, f5, f25, dyn # perform operation
fnmadd.h f9, f3, f5, f25, rdn # perform operation
fnmadd.h f9, f3, f5, f25, rmm # perform operation
fnmadd.h f9, f3, f5, f25, rne # perform operation
fnmadd.h f9, f3, f5, f25, rtz # perform operation
fnmadd.h f9, f3, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f3, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f3, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f3, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f3, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f3, f5, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7bff)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f31, 0(x2) # load 0x0000fc00 from memory into f31
la x2, scratch
li x3, 0x9338bd6c752efb54 # load x3 with value 0x9338bd6c752efb54
sw x3, 0(x2) # store 0x9338bd6c752efb54 in memory
flh f20, 0(x2) # load 0x9338bd6c752efb54 from memory into f20
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f18, 0(x2) # load 0x00007bff from memory into f18
fnmadd.h f22, f31, f20, f18, dyn # perform operation
fnmadd.h f22, f31, f20, f18, rdn # perform operation
fnmadd.h f22, f31, f20, f18, rmm # perform operation
fnmadd.h f22, f31, f20, f18, rne # perform operation
fnmadd.h f22, f31, f20, f18, rtz # perform operation
fnmadd.h f22, f31, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f31, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f31, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f31, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f31, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f31, f20, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xfbff)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f28, 0(x2) # load 0x0000fc00 from memory into f28
la x2, scratch
li x3, 0xe8e3bd9abc3cb2e1 # load x3 with value 0xe8e3bd9abc3cb2e1
sw x3, 0(x2) # store 0xe8e3bd9abc3cb2e1 in memory
flh f30, 0(x2) # load 0xe8e3bd9abc3cb2e1 from memory into f30
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f17, 0(x2) # load 0x0000fbff from memory into f17
fnmadd.h f16, f28, f30, f17, dyn # perform operation
fnmadd.h f16, f28, f30, f17, rdn # perform operation
fnmadd.h f16, f28, f30, f17, rmm # perform operation
fnmadd.h f16, f28, f30, f17, rne # perform operation
fnmadd.h f16, f28, f30, f17, rtz # perform operation
fnmadd.h f16, f28, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f28, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f28, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f28, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f28, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f28, f30, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x3ff)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f22, 0(x2) # load 0x0000fc00 from memory into f22
la x2, scratch
li x3, 0xebcf5650c258c0e8 # load x3 with value 0xebcf5650c258c0e8
sw x3, 0(x2) # store 0xebcf5650c258c0e8 in memory
flh f25, 0(x2) # load 0xebcf5650c258c0e8 from memory into f25
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f6, 0(x2) # load 0x000003ff from memory into f6
fnmadd.h f15, f22, f25, f6, dyn # perform operation
fnmadd.h f15, f22, f25, f6, rdn # perform operation
fnmadd.h f15, f22, f25, f6, rmm # perform operation
fnmadd.h f15, f22, f25, f6, rne # perform operation
fnmadd.h f15, f22, f25, f6, rtz # perform operation
fnmadd.h f15, f22, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f22, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f22, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f22, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f22, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f22, f25, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x83ff)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f13, 0(x2) # load 0x0000fc00 from memory into f13
la x2, scratch
li x3, 0x8c8bd37d1d253d9a # load x3 with value 0x8c8bd37d1d253d9a
sw x3, 0(x2) # store 0x8c8bd37d1d253d9a in memory
flh f15, 0(x2) # load 0x8c8bd37d1d253d9a from memory into f15
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f22, 0(x2) # load 0x000083ff from memory into f22
fnmadd.h f2, f13, f15, f22, dyn # perform operation
fnmadd.h f2, f13, f15, f22, rdn # perform operation
fnmadd.h f2, f13, f15, f22, rmm # perform operation
fnmadd.h f2, f13, f15, f22, rne # perform operation
fnmadd.h f2, f13, f15, f22, rtz # perform operation
fnmadd.h f2, f13, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f13, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f13, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f13, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f13, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f13, f15, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x200)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f22, 0(x2) # load 0x0000fc00 from memory into f22
la x2, scratch
li x3, 0x9feac66bb2f7526e # load x3 with value 0x9feac66bb2f7526e
sw x3, 0(x2) # store 0x9feac66bb2f7526e in memory
flh f25, 0(x2) # load 0x9feac66bb2f7526e from memory into f25
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
fnmadd.h f17, f22, f25, f13, dyn # perform operation
fnmadd.h f17, f22, f25, f13, rdn # perform operation
fnmadd.h f17, f22, f25, f13, rmm # perform operation
fnmadd.h f17, f22, f25, f13, rne # perform operation
fnmadd.h f17, f22, f25, f13, rtz # perform operation
fnmadd.h f17, f22, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f22, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f22, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f22, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f22, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f22, f25, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x8200)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f19, 0(x2) # load 0x0000fc00 from memory into f19
la x2, scratch
li x3, 0xce67262a743525a6 # load x3 with value 0xce67262a743525a6
sw x3, 0(x2) # store 0xce67262a743525a6 in memory
flh f18, 0(x2) # load 0xce67262a743525a6 from memory into f18
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f5, 0(x2) # load 0x00008200 from memory into f5
fnmadd.h f21, f19, f18, f5, dyn # perform operation
fnmadd.h f21, f19, f18, f5, rdn # perform operation
fnmadd.h f21, f19, f18, f5, rmm # perform operation
fnmadd.h f21, f19, f18, f5, rne # perform operation
fnmadd.h f21, f19, f18, f5, rtz # perform operation
fnmadd.h f21, f19, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f19, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f19, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f19, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f19, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f19, f18, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x1)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f8, 0(x2) # load 0x0000fc00 from memory into f8
la x2, scratch
li x3, 0x825a9c58560d0ba9 # load x3 with value 0x825a9c58560d0ba9
sw x3, 0(x2) # store 0x825a9c58560d0ba9 in memory
flh f18, 0(x2) # load 0x825a9c58560d0ba9 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f28, 0(x2) # load 0x00000001 from memory into f28
fnmadd.h f2, f8, f18, f28, dyn # perform operation
fnmadd.h f2, f8, f18, f28, rdn # perform operation
fnmadd.h f2, f8, f18, f28, rmm # perform operation
fnmadd.h f2, f8, f18, f28, rne # perform operation
fnmadd.h f2, f8, f18, f28, rtz # perform operation
fnmadd.h f2, f8, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f8, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f8, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f8, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f8, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f8, f18, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x8001)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f17, 0(x2) # load 0x0000fc00 from memory into f17
la x2, scratch
li x3, 0x7c1c2e27f76b905f # load x3 with value 0x7c1c2e27f76b905f
sw x3, 0(x2) # store 0x7c1c2e27f76b905f in memory
flh f12, 0(x2) # load 0x7c1c2e27f76b905f from memory into f12
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f28, 0(x2) # load 0x00008001 from memory into f28
fnmadd.h f23, f17, f12, f28, dyn # perform operation
fnmadd.h f23, f17, f12, f28, rdn # perform operation
fnmadd.h f23, f17, f12, f28, rmm # perform operation
fnmadd.h f23, f17, f12, f28, rne # perform operation
fnmadd.h f23, f17, f12, f28, rtz # perform operation
fnmadd.h f23, f17, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f17, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f17, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f17, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f17, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f17, f12, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7c00)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f3, 0(x2) # load 0x0000fc00 from memory into f3
la x2, scratch
li x3, 0x14d56cce66fa4cbf # load x3 with value 0x14d56cce66fa4cbf
sw x3, 0(x2) # store 0x14d56cce66fa4cbf in memory
flh f10, 0(x2) # load 0x14d56cce66fa4cbf from memory into f10
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f31, 0(x2) # load 0x00007c00 from memory into f31
fnmadd.h f20, f3, f10, f31, dyn # perform operation
fnmadd.h f20, f3, f10, f31, rdn # perform operation
fnmadd.h f20, f3, f10, f31, rmm # perform operation
fnmadd.h f20, f3, f10, f31, rne # perform operation
fnmadd.h f20, f3, f10, f31, rtz # perform operation
fnmadd.h f20, f3, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f3, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f3, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f3, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f3, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f3, f10, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xfc00)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f28, 0(x2) # load 0x0000fc00 from memory into f28
la x2, scratch
li x3, 0x77d26fbf4b9c29f0 # load x3 with value 0x77d26fbf4b9c29f0
sw x3, 0(x2) # store 0x77d26fbf4b9c29f0 in memory
flh f6, 0(x2) # load 0x77d26fbf4b9c29f0 from memory into f6
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f23, 0(x2) # load 0x0000fc00 from memory into f23
fnmadd.h f10, f28, f6, f23, dyn # perform operation
fnmadd.h f10, f28, f6, f23, rdn # perform operation
fnmadd.h f10, f28, f6, f23, rmm # perform operation
fnmadd.h f10, f28, f6, f23, rne # perform operation
fnmadd.h f10, f28, f6, f23, rtz # perform operation
fnmadd.h f10, f28, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f28, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f28, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f28, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f28, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f28, f6, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7e00)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f26, 0(x2) # load 0x0000fc00 from memory into f26
la x2, scratch
li x3, 0x43a56b6e913e6238 # load x3 with value 0x43a56b6e913e6238
sw x3, 0(x2) # store 0x43a56b6e913e6238 in memory
flh f28, 0(x2) # load 0x43a56b6e913e6238 from memory into f28
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f1, 0(x2) # load 0x00007e00 from memory into f1
fnmadd.h f30, f26, f28, f1, dyn # perform operation
fnmadd.h f30, f26, f28, f1, rdn # perform operation
fnmadd.h f30, f26, f28, f1, rmm # perform operation
fnmadd.h f30, f26, f28, f1, rne # perform operation
fnmadd.h f30, f26, f28, f1, rtz # perform operation
fnmadd.h f30, f26, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f26, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f26, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f26, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f26, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f26, f28, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7fff)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f31, 0(x2) # load 0x0000fc00 from memory into f31
la x2, scratch
li x3, 0xb3abf739d4660e00 # load x3 with value 0xb3abf739d4660e00
sw x3, 0(x2) # store 0xb3abf739d4660e00 in memory
flh f2, 0(x2) # load 0xb3abf739d4660e00 from memory into f2
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f9, 0(x2) # load 0x00007fff from memory into f9
fnmadd.h f17, f31, f2, f9, dyn # perform operation
fnmadd.h f17, f31, f2, f9, rdn # perform operation
fnmadd.h f17, f31, f2, f9, rmm # perform operation
fnmadd.h f17, f31, f2, f9, rne # perform operation
fnmadd.h f17, f31, f2, f9, rtz # perform operation
fnmadd.h f17, f31, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f31, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f31, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f31, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f31, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f31, f2, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xfe00)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f15, 0(x2) # load 0x0000fc00 from memory into f15
la x2, scratch
li x3, 0x81f58c86eedff0ad # load x3 with value 0x81f58c86eedff0ad
sw x3, 0(x2) # store 0x81f58c86eedff0ad in memory
flh f27, 0(x2) # load 0x81f58c86eedff0ad from memory into f27
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f7, 0(x2) # load 0x0000fe00 from memory into f7
fnmadd.h f25, f15, f27, f7, dyn # perform operation
fnmadd.h f25, f15, f27, f7, rdn # perform operation
fnmadd.h f25, f15, f27, f7, rmm # perform operation
fnmadd.h f25, f15, f27, f7, rne # perform operation
fnmadd.h f25, f15, f27, f7, rtz # perform operation
fnmadd.h f25, f15, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f15, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f15, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f15, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f15, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f15, f27, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7c01)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f28, 0(x2) # load 0x0000fc00 from memory into f28
la x2, scratch
li x3, 0xe7aeb117037c2f5f # load x3 with value 0xe7aeb117037c2f5f
sw x3, 0(x2) # store 0xe7aeb117037c2f5f in memory
flh f9, 0(x2) # load 0xe7aeb117037c2f5f from memory into f9
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f17, 0(x2) # load 0x00007c01 from memory into f17
fnmadd.h f15, f28, f9, f17, dyn # perform operation
fnmadd.h f15, f28, f9, f17, rdn # perform operation
fnmadd.h f15, f28, f9, f17, rmm # perform operation
fnmadd.h f15, f28, f9, f17, rne # perform operation
fnmadd.h f15, f28, f9, f17, rtz # perform operation
fnmadd.h f15, f28, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f28, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f28, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f28, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f28, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f28, f9, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7dff)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f27, 0(x2) # load 0x0000fc00 from memory into f27
la x2, scratch
li x3, 0xe0f17e1e36b97fdf # load x3 with value 0xe0f17e1e36b97fdf
sw x3, 0(x2) # store 0xe0f17e1e36b97fdf in memory
flh f1, 0(x2) # load 0xe0f17e1e36b97fdf from memory into f1
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f14, 0(x2) # load 0x00007dff from memory into f14
fnmadd.h f10, f27, f1, f14, dyn # perform operation
fnmadd.h f10, f27, f1, f14, rdn # perform operation
fnmadd.h f10, f27, f1, f14, rmm # perform operation
fnmadd.h f10, f27, f1, f14, rne # perform operation
fnmadd.h f10, f27, f1, f14, rtz # perform operation
fnmadd.h f10, f27, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f27, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f27, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f27, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f27, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f27, f1, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xfc01)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f31, 0(x2) # load 0x0000fc00 from memory into f31
la x2, scratch
li x3, 0x25376c50ae862a74 # load x3 with value 0x25376c50ae862a74
sw x3, 0(x2) # store 0x25376c50ae862a74 in memory
flh f30, 0(x2) # load 0x25376c50ae862a74 from memory into f30
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f1, 0(x2) # load 0x0000fc01 from memory into f1
fnmadd.h f26, f31, f30, f1, dyn # perform operation
fnmadd.h f26, f31, f30, f1, rdn # perform operation
fnmadd.h f26, f31, f30, f1, rmm # perform operation
fnmadd.h f26, f31, f30, f1, rne # perform operation
fnmadd.h f26, f31, f30, f1, rtz # perform operation
fnmadd.h f26, f31, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f31, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f31, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f31, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f31, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f31, f30, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x58b4)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f12, 0(x2) # load 0x0000fc00 from memory into f12
la x2, scratch
li x3, 0x92f417268e0051cf # load x3 with value 0x92f417268e0051cf
sw x3, 0(x2) # store 0x92f417268e0051cf in memory
flh f22, 0(x2) # load 0x92f417268e0051cf from memory into f22
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f26, 0(x2) # load 0x000058b4 from memory into f26
fnmadd.h f6, f12, f22, f26, dyn # perform operation
fnmadd.h f6, f12, f22, f26, rdn # perform operation
fnmadd.h f6, f12, f22, f26, rmm # perform operation
fnmadd.h f6, f12, f22, f26, rne # perform operation
fnmadd.h f6, f12, f22, f26, rtz # perform operation
fnmadd.h f6, f12, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f12, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f12, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f12, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f12, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f12, f22, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xc93a)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f17, 0(x2) # load 0x0000fc00 from memory into f17
la x2, scratch
li x3, 0x84ded18e73cf1aed # load x3 with value 0x84ded18e73cf1aed
sw x3, 0(x2) # store 0x84ded18e73cf1aed in memory
flh f2, 0(x2) # load 0x84ded18e73cf1aed from memory into f2
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f19, 0(x2) # load 0x0000c93a from memory into f19
fnmadd.h f20, f17, f2, f19, dyn # perform operation
fnmadd.h f20, f17, f2, f19, rdn # perform operation
fnmadd.h f20, f17, f2, f19, rmm # perform operation
fnmadd.h f20, f17, f2, f19, rne # perform operation
fnmadd.h f20, f17, f2, f19, rtz # perform operation
fnmadd.h f20, f17, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f17, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f17, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f17, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f17, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f17, f2, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x0)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
la x2, scratch
li x3, 0x40849585a17f1fe7 # load x3 with value 0x40849585a17f1fe7
sw x3, 0(x2) # store 0x40849585a17f1fe7 in memory
flh f1, 0(x2) # load 0x40849585a17f1fe7 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f9, 0(x2) # load 0x00000000 from memory into f9
fnmadd.h f12, f24, f1, f9, dyn # perform operation
fnmadd.h f12, f24, f1, f9, rdn # perform operation
fnmadd.h f12, f24, f1, f9, rmm # perform operation
fnmadd.h f12, f24, f1, f9, rne # perform operation
fnmadd.h f12, f24, f1, f9, rtz # perform operation
fnmadd.h f12, f24, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f24, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f24, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f24, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f24, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f24, f1, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x8000)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
la x2, scratch
li x3, 0x212861ec5fb519b0 # load x3 with value 0x212861ec5fb519b0
sw x3, 0(x2) # store 0x212861ec5fb519b0 in memory
flh f15, 0(x2) # load 0x212861ec5fb519b0 from memory into f15
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f5, 0(x2) # load 0x00008000 from memory into f5
fnmadd.h f25, f20, f15, f5, dyn # perform operation
fnmadd.h f25, f20, f15, f5, rdn # perform operation
fnmadd.h f25, f20, f15, f5, rmm # perform operation
fnmadd.h f25, f20, f15, f5, rne # perform operation
fnmadd.h f25, f20, f15, f5, rtz # perform operation
fnmadd.h f25, f20, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f20, f15, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f6, 0(x2) # load 0x00007e00 from memory into f6
la x2, scratch
li x3, 0xbcf117b317b8dd07 # load x3 with value 0xbcf117b317b8dd07
sw x3, 0(x2) # store 0xbcf117b317b8dd07 in memory
flh f25, 0(x2) # load 0xbcf117b317b8dd07 from memory into f25
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f24, 0(x2) # load 0x00003c00 from memory into f24
fnmadd.h f21, f6, f25, f24, dyn # perform operation
fnmadd.h f21, f6, f25, f24, rdn # perform operation
fnmadd.h f21, f6, f25, f24, rmm # perform operation
fnmadd.h f21, f6, f25, f24, rne # perform operation
fnmadd.h f21, f6, f25, f24, rtz # perform operation
fnmadd.h f21, f6, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f6, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f6, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f6, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f6, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f6, f25, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f28, 0(x2) # load 0x00007e00 from memory into f28
la x2, scratch
li x3, 0xc93dee696f7ccafc # load x3 with value 0xc93dee696f7ccafc
sw x3, 0(x2) # store 0xc93dee696f7ccafc in memory
flh f1, 0(x2) # load 0xc93dee696f7ccafc from memory into f1
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
fnmadd.h f18, f28, f1, f11, dyn # perform operation
fnmadd.h f18, f28, f1, f11, rdn # perform operation
fnmadd.h f18, f28, f1, f11, rmm # perform operation
fnmadd.h f18, f28, f1, f11, rne # perform operation
fnmadd.h f18, f28, f1, f11, rtz # perform operation
fnmadd.h f18, f28, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f28, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f28, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f28, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f28, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f28, f1, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f31, 0(x2) # load 0x00007e00 from memory into f31
la x2, scratch
li x3, 0xeb8950e3db86179e # load x3 with value 0xeb8950e3db86179e
sw x3, 0(x2) # store 0xeb8950e3db86179e in memory
flh f6, 0(x2) # load 0xeb8950e3db86179e from memory into f6
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f2, 0(x2) # load 0x00003e00 from memory into f2
fnmadd.h f11, f31, f6, f2, dyn # perform operation
fnmadd.h f11, f31, f6, f2, rdn # perform operation
fnmadd.h f11, f31, f6, f2, rmm # perform operation
fnmadd.h f11, f31, f6, f2, rne # perform operation
fnmadd.h f11, f31, f6, f2, rtz # perform operation
fnmadd.h f11, f31, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f31, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f31, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f31, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f31, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f31, f6, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f8, 0(x2) # load 0x00007e00 from memory into f8
la x2, scratch
li x3, 0xd6aca4dcc8bb48d5 # load x3 with value 0xd6aca4dcc8bb48d5
sw x3, 0(x2) # store 0xd6aca4dcc8bb48d5 in memory
flh f9, 0(x2) # load 0xd6aca4dcc8bb48d5 from memory into f9
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
fnmadd.h f17, f8, f9, f1, dyn # perform operation
fnmadd.h f17, f8, f9, f1, rdn # perform operation
fnmadd.h f17, f8, f9, f1, rmm # perform operation
fnmadd.h f17, f8, f9, f1, rne # perform operation
fnmadd.h f17, f8, f9, f1, rtz # perform operation
fnmadd.h f17, f8, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f8, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f8, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f8, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f8, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f8, f9, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x4000)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f7, 0(x2) # load 0x00007e00 from memory into f7
la x2, scratch
li x3, 0x35c7d069d9b1ec66 # load x3 with value 0x35c7d069d9b1ec66
sw x3, 0(x2) # store 0x35c7d069d9b1ec66 in memory
flh f20, 0(x2) # load 0x35c7d069d9b1ec66 from memory into f20
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f12, 0(x2) # load 0x00004000 from memory into f12
fnmadd.h f17, f7, f20, f12, dyn # perform operation
fnmadd.h f17, f7, f20, f12, rdn # perform operation
fnmadd.h f17, f7, f20, f12, rmm # perform operation
fnmadd.h f17, f7, f20, f12, rne # perform operation
fnmadd.h f17, f7, f20, f12, rtz # perform operation
fnmadd.h f17, f7, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f7, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f7, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f7, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f7, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f7, f20, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xc000)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
la x2, scratch
li x3, 0x6e4e352418f6a6bc # load x3 with value 0x6e4e352418f6a6bc
sw x3, 0(x2) # store 0x6e4e352418f6a6bc in memory
flh f3, 0(x2) # load 0x6e4e352418f6a6bc from memory into f3
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f29, 0(x2) # load 0x0000c000 from memory into f29
fnmadd.h f11, f5, f3, f29, dyn # perform operation
fnmadd.h f11, f5, f3, f29, rdn # perform operation
fnmadd.h f11, f5, f3, f29, rmm # perform operation
fnmadd.h f11, f5, f3, f29, rne # perform operation
fnmadd.h f11, f5, f3, f29, rtz # perform operation
fnmadd.h f11, f5, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f5, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f5, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f5, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f5, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f5, f3, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x400)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f1, 0(x2) # load 0x00007e00 from memory into f1
la x2, scratch
li x3, 0x4a0a28d5ad913e89 # load x3 with value 0x4a0a28d5ad913e89
sw x3, 0(x2) # store 0x4a0a28d5ad913e89 in memory
flh f27, 0(x2) # load 0x4a0a28d5ad913e89 from memory into f27
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f5, 0(x2) # load 0x00000400 from memory into f5
fnmadd.h f10, f1, f27, f5, dyn # perform operation
fnmadd.h f10, f1, f27, f5, rdn # perform operation
fnmadd.h f10, f1, f27, f5, rmm # perform operation
fnmadd.h f10, f1, f27, f5, rne # perform operation
fnmadd.h f10, f1, f27, f5, rtz # perform operation
fnmadd.h f10, f1, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f1, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f1, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f1, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f1, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f1, f27, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x8400)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f26, 0(x2) # load 0x00007e00 from memory into f26
la x2, scratch
li x3, 0x936e7eefc1edfd4e # load x3 with value 0x936e7eefc1edfd4e
sw x3, 0(x2) # store 0x936e7eefc1edfd4e in memory
flh f1, 0(x2) # load 0x936e7eefc1edfd4e from memory into f1
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f19, 0(x2) # load 0x00008400 from memory into f19
fnmadd.h f17, f26, f1, f19, dyn # perform operation
fnmadd.h f17, f26, f1, f19, rdn # perform operation
fnmadd.h f17, f26, f1, f19, rmm # perform operation
fnmadd.h f17, f26, f1, f19, rne # perform operation
fnmadd.h f17, f26, f1, f19, rtz # perform operation
fnmadd.h f17, f26, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f26, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f26, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f26, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f26, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f26, f1, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
la x2, scratch
li x3, 0xbac3a740579370b5 # load x3 with value 0xbac3a740579370b5
sw x3, 0(x2) # store 0xbac3a740579370b5 in memory
flh f3, 0(x2) # load 0xbac3a740579370b5 from memory into f3
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f12, 0(x2) # load 0x00007bff from memory into f12
fnmadd.h f10, f24, f3, f12, dyn # perform operation
fnmadd.h f10, f24, f3, f12, rdn # perform operation
fnmadd.h f10, f24, f3, f12, rmm # perform operation
fnmadd.h f10, f24, f3, f12, rne # perform operation
fnmadd.h f10, f24, f3, f12, rtz # perform operation
fnmadd.h f10, f24, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f24, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f24, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f24, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f24, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f24, f3, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f26, 0(x2) # load 0x00007e00 from memory into f26
la x2, scratch
li x3, 0xed1792bfd0b795ae # load x3 with value 0xed1792bfd0b795ae
sw x3, 0(x2) # store 0xed1792bfd0b795ae in memory
flh f2, 0(x2) # load 0xed1792bfd0b795ae from memory into f2
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f11, 0(x2) # load 0x0000fbff from memory into f11
fnmadd.h f27, f26, f2, f11, dyn # perform operation
fnmadd.h f27, f26, f2, f11, rdn # perform operation
fnmadd.h f27, f26, f2, f11, rmm # perform operation
fnmadd.h f27, f26, f2, f11, rne # perform operation
fnmadd.h f27, f26, f2, f11, rtz # perform operation
fnmadd.h f27, f26, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f26, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f26, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f26, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f26, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f26, f2, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f13, 0(x2) # load 0x00007e00 from memory into f13
la x2, scratch
li x3, 0xea430ed8b3396d5a # load x3 with value 0xea430ed8b3396d5a
sw x3, 0(x2) # store 0xea430ed8b3396d5a in memory
flh f20, 0(x2) # load 0xea430ed8b3396d5a from memory into f20
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f7, 0(x2) # load 0x000003ff from memory into f7
fnmadd.h f24, f13, f20, f7, dyn # perform operation
fnmadd.h f24, f13, f20, f7, rdn # perform operation
fnmadd.h f24, f13, f20, f7, rmm # perform operation
fnmadd.h f24, f13, f20, f7, rne # perform operation
fnmadd.h f24, f13, f20, f7, rtz # perform operation
fnmadd.h f24, f13, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f13, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f13, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f13, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f13, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f13, f20, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f7, 0(x2) # load 0x00007e00 from memory into f7
la x2, scratch
li x3, 0x98d7441f142ed64f # load x3 with value 0x98d7441f142ed64f
sw x3, 0(x2) # store 0x98d7441f142ed64f in memory
flh f20, 0(x2) # load 0x98d7441f142ed64f from memory into f20
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f12, 0(x2) # load 0x000083ff from memory into f12
fnmadd.h f16, f7, f20, f12, dyn # perform operation
fnmadd.h f16, f7, f20, f12, rdn # perform operation
fnmadd.h f16, f7, f20, f12, rmm # perform operation
fnmadd.h f16, f7, f20, f12, rne # perform operation
fnmadd.h f16, f7, f20, f12, rtz # perform operation
fnmadd.h f16, f7, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f7, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f7, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f7, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f7, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f7, f20, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x200)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
la x2, scratch
li x3, 0x3698597c640a1f5 # load x3 with value 0x3698597c640a1f5
sw x3, 0(x2) # store 0x3698597c640a1f5 in memory
flh f2, 0(x2) # load 0x3698597c640a1f5 from memory into f2
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f26, 0(x2) # load 0x00000200 from memory into f26
fnmadd.h f5, f20, f2, f26, dyn # perform operation
fnmadd.h f5, f20, f2, f26, rdn # perform operation
fnmadd.h f5, f20, f2, f26, rmm # perform operation
fnmadd.h f5, f20, f2, f26, rne # perform operation
fnmadd.h f5, f20, f2, f26, rtz # perform operation
fnmadd.h f5, f20, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f20, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f20, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f20, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f20, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f20, f2, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x8200)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
la x2, scratch
li x3, 0xc07dbe52d73e4525 # load x3 with value 0xc07dbe52d73e4525
sw x3, 0(x2) # store 0xc07dbe52d73e4525 in memory
flh f27, 0(x2) # load 0xc07dbe52d73e4525 from memory into f27
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f11, 0(x2) # load 0x00008200 from memory into f11
fnmadd.h f16, f24, f27, f11, dyn # perform operation
fnmadd.h f16, f24, f27, f11, rdn # perform operation
fnmadd.h f16, f24, f27, f11, rmm # perform operation
fnmadd.h f16, f24, f27, f11, rne # perform operation
fnmadd.h f16, f24, f27, f11, rtz # perform operation
fnmadd.h f16, f24, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f24, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f24, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f24, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f24, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f24, f27, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x1)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f23, 0(x2) # load 0x00007e00 from memory into f23
la x2, scratch
li x3, 0xc0227fa7ddbdb1fb # load x3 with value 0xc0227fa7ddbdb1fb
sw x3, 0(x2) # store 0xc0227fa7ddbdb1fb in memory
flh f1, 0(x2) # load 0xc0227fa7ddbdb1fb from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f31, 0(x2) # load 0x00000001 from memory into f31
fnmadd.h f16, f23, f1, f31, dyn # perform operation
fnmadd.h f16, f23, f1, f31, rdn # perform operation
fnmadd.h f16, f23, f1, f31, rmm # perform operation
fnmadd.h f16, f23, f1, f31, rne # perform operation
fnmadd.h f16, f23, f1, f31, rtz # perform operation
fnmadd.h f16, f23, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f23, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f23, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f23, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f23, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f23, f1, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x8001)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f25, 0(x2) # load 0x00007e00 from memory into f25
la x2, scratch
li x3, 0x73a69194cd61868a # load x3 with value 0x73a69194cd61868a
sw x3, 0(x2) # store 0x73a69194cd61868a in memory
flh f20, 0(x2) # load 0x73a69194cd61868a from memory into f20
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f31, 0(x2) # load 0x00008001 from memory into f31
fnmadd.h f18, f25, f20, f31, dyn # perform operation
fnmadd.h f18, f25, f20, f31, rdn # perform operation
fnmadd.h f18, f25, f20, f31, rmm # perform operation
fnmadd.h f18, f25, f20, f31, rne # perform operation
fnmadd.h f18, f25, f20, f31, rtz # perform operation
fnmadd.h f18, f25, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f25, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f25, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f25, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f25, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f25, f20, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f7, 0(x2) # load 0x00007e00 from memory into f7
la x2, scratch
li x3, 0x2018bda8ce70beb5 # load x3 with value 0x2018bda8ce70beb5
sw x3, 0(x2) # store 0x2018bda8ce70beb5 in memory
flh f5, 0(x2) # load 0x2018bda8ce70beb5 from memory into f5
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f29, 0(x2) # load 0x00007c00 from memory into f29
fnmadd.h f3, f7, f5, f29, dyn # perform operation
fnmadd.h f3, f7, f5, f29, rdn # perform operation
fnmadd.h f3, f7, f5, f29, rmm # perform operation
fnmadd.h f3, f7, f5, f29, rne # perform operation
fnmadd.h f3, f7, f5, f29, rtz # perform operation
fnmadd.h f3, f7, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f7, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f7, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f7, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f7, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f7, f5, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f7, 0(x2) # load 0x00007e00 from memory into f7
la x2, scratch
li x3, 0x9fbf2e60f3bbd06a # load x3 with value 0x9fbf2e60f3bbd06a
sw x3, 0(x2) # store 0x9fbf2e60f3bbd06a in memory
flh f5, 0(x2) # load 0x9fbf2e60f3bbd06a from memory into f5
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f23, 0(x2) # load 0x0000fc00 from memory into f23
fnmadd.h f14, f7, f5, f23, dyn # perform operation
fnmadd.h f14, f7, f5, f23, rdn # perform operation
fnmadd.h f14, f7, f5, f23, rmm # perform operation
fnmadd.h f14, f7, f5, f23, rne # perform operation
fnmadd.h f14, f7, f5, f23, rtz # perform operation
fnmadd.h f14, f7, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f7, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f7, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f7, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f7, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f7, f5, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
la x2, scratch
li x3, 0x7b8b862fda8b600e # load x3 with value 0x7b8b862fda8b600e
sw x3, 0(x2) # store 0x7b8b862fda8b600e in memory
flh f7, 0(x2) # load 0x7b8b862fda8b600e from memory into f7
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f27, 0(x2) # load 0x00007e00 from memory into f27
fnmadd.h f13, f5, f7, f27, dyn # perform operation
fnmadd.h f13, f5, f7, f27, rdn # perform operation
fnmadd.h f13, f5, f7, f27, rmm # perform operation
fnmadd.h f13, f5, f7, f27, rne # perform operation
fnmadd.h f13, f5, f7, f27, rtz # perform operation
fnmadd.h f13, f5, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f5, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f5, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f5, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f5, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f5, f7, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f13, 0(x2) # load 0x00007e00 from memory into f13
la x2, scratch
li x3, 0xd7d7b95cb3fe0776 # load x3 with value 0xd7d7b95cb3fe0776
sw x3, 0(x2) # store 0xd7d7b95cb3fe0776 in memory
flh f11, 0(x2) # load 0xd7d7b95cb3fe0776 from memory into f11
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f15, 0(x2) # load 0x00007fff from memory into f15
fnmadd.h f5, f13, f11, f15, dyn # perform operation
fnmadd.h f5, f13, f11, f15, rdn # perform operation
fnmadd.h f5, f13, f11, f15, rmm # perform operation
fnmadd.h f5, f13, f11, f15, rne # perform operation
fnmadd.h f5, f13, f11, f15, rtz # perform operation
fnmadd.h f5, f13, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f13, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f13, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f13, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f13, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f13, f11, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f19, 0(x2) # load 0x00007e00 from memory into f19
la x2, scratch
li x3, 0xc0bbe7ce4b4ada05 # load x3 with value 0xc0bbe7ce4b4ada05
sw x3, 0(x2) # store 0xc0bbe7ce4b4ada05 in memory
flh f21, 0(x2) # load 0xc0bbe7ce4b4ada05 from memory into f21
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f25, 0(x2) # load 0x0000fe00 from memory into f25
fnmadd.h f20, f19, f21, f25, dyn # perform operation
fnmadd.h f20, f19, f21, f25, rdn # perform operation
fnmadd.h f20, f19, f21, f25, rmm # perform operation
fnmadd.h f20, f19, f21, f25, rne # perform operation
fnmadd.h f20, f19, f21, f25, rtz # perform operation
fnmadd.h f20, f19, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f19, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f19, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f19, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f19, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f19, f21, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f29, 0(x2) # load 0x00007e00 from memory into f29
la x2, scratch
li x3, 0xbace4f9632011f34 # load x3 with value 0xbace4f9632011f34
sw x3, 0(x2) # store 0xbace4f9632011f34 in memory
flh f3, 0(x2) # load 0xbace4f9632011f34 from memory into f3
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
fnmadd.h f27, f29, f3, f20, dyn # perform operation
fnmadd.h f27, f29, f3, f20, rdn # perform operation
fnmadd.h f27, f29, f3, f20, rmm # perform operation
fnmadd.h f27, f29, f3, f20, rne # perform operation
fnmadd.h f27, f29, f3, f20, rtz # perform operation
fnmadd.h f27, f29, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f29, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f29, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f29, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f29, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f29, f3, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
la x2, scratch
li x3, 0xd4cb8681dcb8c7af # load x3 with value 0xd4cb8681dcb8c7af
sw x3, 0(x2) # store 0xd4cb8681dcb8c7af in memory
flh f23, 0(x2) # load 0xd4cb8681dcb8c7af from memory into f23
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f9, 0(x2) # load 0x00007dff from memory into f9
fnmadd.h f20, f24, f23, f9, dyn # perform operation
fnmadd.h f20, f24, f23, f9, rdn # perform operation
fnmadd.h f20, f24, f23, f9, rmm # perform operation
fnmadd.h f20, f24, f23, f9, rne # perform operation
fnmadd.h f20, f24, f23, f9, rtz # perform operation
fnmadd.h f20, f24, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f24, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f24, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f24, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f24, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f24, f23, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f27, 0(x2) # load 0x00007e00 from memory into f27
la x2, scratch
li x3, 0x5e7ec94970b8c9b2 # load x3 with value 0x5e7ec94970b8c9b2
sw x3, 0(x2) # store 0x5e7ec94970b8c9b2 in memory
flh f14, 0(x2) # load 0x5e7ec94970b8c9b2 from memory into f14
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f6, 0(x2) # load 0x0000fc01 from memory into f6
fnmadd.h f19, f27, f14, f6, dyn # perform operation
fnmadd.h f19, f27, f14, f6, rdn # perform operation
fnmadd.h f19, f27, f14, f6, rmm # perform operation
fnmadd.h f19, f27, f14, f6, rne # perform operation
fnmadd.h f19, f27, f14, f6, rtz # perform operation
fnmadd.h f19, f27, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f27, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f27, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f27, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f27, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f27, f14, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f28, 0(x2) # load 0x00007e00 from memory into f28
la x2, scratch
li x3, 0xf55cb5d844084984 # load x3 with value 0xf55cb5d844084984
sw x3, 0(x2) # store 0xf55cb5d844084984 in memory
flh f29, 0(x2) # load 0xf55cb5d844084984 from memory into f29
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f18, 0(x2) # load 0x000058b4 from memory into f18
fnmadd.h f2, f28, f29, f18, dyn # perform operation
fnmadd.h f2, f28, f29, f18, rdn # perform operation
fnmadd.h f2, f28, f29, f18, rmm # perform operation
fnmadd.h f2, f28, f29, f18, rne # perform operation
fnmadd.h f2, f28, f29, f18, rtz # perform operation
fnmadd.h f2, f28, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f28, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f28, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f28, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f28, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f28, f29, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
la x2, scratch
li x3, 0xf9184c96dc7f822f # load x3 with value 0xf9184c96dc7f822f
sw x3, 0(x2) # store 0xf9184c96dc7f822f in memory
flh f16, 0(x2) # load 0xf9184c96dc7f822f from memory into f16
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
fnmadd.h f20, f5, f16, f12, dyn # perform operation
fnmadd.h f20, f5, f16, f12, rdn # perform operation
fnmadd.h f20, f5, f16, f12, rmm # perform operation
fnmadd.h f20, f5, f16, f12, rne # perform operation
fnmadd.h f20, f5, f16, f12, rtz # perform operation
fnmadd.h f20, f5, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f5, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f5, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f5, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f5, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f5, f16, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x0)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f24, 0(x2) # load 0x00007fff from memory into f24
la x2, scratch
li x3, 0xa8ad348bc0fec9c2 # load x3 with value 0xa8ad348bc0fec9c2
sw x3, 0(x2) # store 0xa8ad348bc0fec9c2 in memory
flh f18, 0(x2) # load 0xa8ad348bc0fec9c2 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f19, 0(x2) # load 0x00000000 from memory into f19
fnmadd.h f27, f24, f18, f19, dyn # perform operation
fnmadd.h f27, f24, f18, f19, rdn # perform operation
fnmadd.h f27, f24, f18, f19, rmm # perform operation
fnmadd.h f27, f24, f18, f19, rne # perform operation
fnmadd.h f27, f24, f18, f19, rtz # perform operation
fnmadd.h f27, f24, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f24, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f24, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f24, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f24, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f24, f18, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x8000)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f18, 0(x2) # load 0x00007fff from memory into f18
la x2, scratch
li x3, 0xf76299f9f0781280 # load x3 with value 0xf76299f9f0781280
sw x3, 0(x2) # store 0xf76299f9f0781280 in memory
flh f2, 0(x2) # load 0xf76299f9f0781280 from memory into f2
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f10, 0(x2) # load 0x00008000 from memory into f10
fnmadd.h f20, f18, f2, f10, dyn # perform operation
fnmadd.h f20, f18, f2, f10, rdn # perform operation
fnmadd.h f20, f18, f2, f10, rmm # perform operation
fnmadd.h f20, f18, f2, f10, rne # perform operation
fnmadd.h f20, f18, f2, f10, rtz # perform operation
fnmadd.h f20, f18, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f18, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f18, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f18, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f18, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f18, f2, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x3c00)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f8, 0(x2) # load 0x00007fff from memory into f8
la x2, scratch
li x3, 0x397052043623c797 # load x3 with value 0x397052043623c797
sw x3, 0(x2) # store 0x397052043623c797 in memory
flh f13, 0(x2) # load 0x397052043623c797 from memory into f13
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f19, 0(x2) # load 0x00003c00 from memory into f19
fnmadd.h f28, f8, f13, f19, dyn # perform operation
fnmadd.h f28, f8, f13, f19, rdn # perform operation
fnmadd.h f28, f8, f13, f19, rmm # perform operation
fnmadd.h f28, f8, f13, f19, rne # perform operation
fnmadd.h f28, f8, f13, f19, rtz # perform operation
fnmadd.h f28, f8, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f8, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f8, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f8, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f8, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f8, f13, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xbc00)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f8, 0(x2) # load 0x00007fff from memory into f8
la x2, scratch
li x3, 0x74050fe02a8ebcfa # load x3 with value 0x74050fe02a8ebcfa
sw x3, 0(x2) # store 0x74050fe02a8ebcfa in memory
flh f28, 0(x2) # load 0x74050fe02a8ebcfa from memory into f28
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f31, 0(x2) # load 0x0000bc00 from memory into f31
fnmadd.h f23, f8, f28, f31, dyn # perform operation
fnmadd.h f23, f8, f28, f31, rdn # perform operation
fnmadd.h f23, f8, f28, f31, rmm # perform operation
fnmadd.h f23, f8, f28, f31, rne # perform operation
fnmadd.h f23, f8, f28, f31, rtz # perform operation
fnmadd.h f23, f8, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f8, f28, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x3e00)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f30, 0(x2) # load 0x00007fff from memory into f30
la x2, scratch
li x3, 0x2831d7cbb8333a4 # load x3 with value 0x2831d7cbb8333a4
sw x3, 0(x2) # store 0x2831d7cbb8333a4 in memory
flh f11, 0(x2) # load 0x2831d7cbb8333a4 from memory into f11
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f22, 0(x2) # load 0x00003e00 from memory into f22
fnmadd.h f16, f30, f11, f22, dyn # perform operation
fnmadd.h f16, f30, f11, f22, rdn # perform operation
fnmadd.h f16, f30, f11, f22, rmm # perform operation
fnmadd.h f16, f30, f11, f22, rne # perform operation
fnmadd.h f16, f30, f11, f22, rtz # perform operation
fnmadd.h f16, f30, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f30, f11, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xbe00)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f6, 0(x2) # load 0x00007fff from memory into f6
la x2, scratch
li x3, 0x526d875d4d2065f0 # load x3 with value 0x526d875d4d2065f0
sw x3, 0(x2) # store 0x526d875d4d2065f0 in memory
flh f3, 0(x2) # load 0x526d875d4d2065f0 from memory into f3
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
fnmadd.h f26, f6, f3, f1, dyn # perform operation
fnmadd.h f26, f6, f3, f1, rdn # perform operation
fnmadd.h f26, f6, f3, f1, rmm # perform operation
fnmadd.h f26, f6, f3, f1, rne # perform operation
fnmadd.h f26, f6, f3, f1, rtz # perform operation
fnmadd.h f26, f6, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f6, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f6, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f6, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f6, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f6, f3, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x4000)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
la x2, scratch
li x3, 0x43b34834c72f8a55 # load x3 with value 0x43b34834c72f8a55
sw x3, 0(x2) # store 0x43b34834c72f8a55 in memory
flh f5, 0(x2) # load 0x43b34834c72f8a55 from memory into f5
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
fnmadd.h f28, f23, f5, f6, dyn # perform operation
fnmadd.h f28, f23, f5, f6, rdn # perform operation
fnmadd.h f28, f23, f5, f6, rmm # perform operation
fnmadd.h f28, f23, f5, f6, rne # perform operation
fnmadd.h f28, f23, f5, f6, rtz # perform operation
fnmadd.h f28, f23, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f23, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f23, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f23, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f23, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f23, f5, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xc000)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f24, 0(x2) # load 0x00007fff from memory into f24
la x2, scratch
li x3, 0xaaf1932126a5dd8c # load x3 with value 0xaaf1932126a5dd8c
sw x3, 0(x2) # store 0xaaf1932126a5dd8c in memory
flh f3, 0(x2) # load 0xaaf1932126a5dd8c from memory into f3
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f15, 0(x2) # load 0x0000c000 from memory into f15
fnmadd.h f19, f24, f3, f15, dyn # perform operation
fnmadd.h f19, f24, f3, f15, rdn # perform operation
fnmadd.h f19, f24, f3, f15, rmm # perform operation
fnmadd.h f19, f24, f3, f15, rne # perform operation
fnmadd.h f19, f24, f3, f15, rtz # perform operation
fnmadd.h f19, f24, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f24, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f24, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f24, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f24, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f24, f3, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x400)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f3, 0(x2) # load 0x00007fff from memory into f3
la x2, scratch
li x3, 0x3de06a0fc40f4169 # load x3 with value 0x3de06a0fc40f4169
sw x3, 0(x2) # store 0x3de06a0fc40f4169 in memory
flh f28, 0(x2) # load 0x3de06a0fc40f4169 from memory into f28
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f11, 0(x2) # load 0x00000400 from memory into f11
fnmadd.h f25, f3, f28, f11, dyn # perform operation
fnmadd.h f25, f3, f28, f11, rdn # perform operation
fnmadd.h f25, f3, f28, f11, rmm # perform operation
fnmadd.h f25, f3, f28, f11, rne # perform operation
fnmadd.h f25, f3, f28, f11, rtz # perform operation
fnmadd.h f25, f3, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f3, f28, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x8400)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f29, 0(x2) # load 0x00007fff from memory into f29
la x2, scratch
li x3, 0x717dca8f3197f222 # load x3 with value 0x717dca8f3197f222
sw x3, 0(x2) # store 0x717dca8f3197f222 in memory
flh f26, 0(x2) # load 0x717dca8f3197f222 from memory into f26
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f6, 0(x2) # load 0x00008400 from memory into f6
fnmadd.h f14, f29, f26, f6, dyn # perform operation
fnmadd.h f14, f29, f26, f6, rdn # perform operation
fnmadd.h f14, f29, f26, f6, rmm # perform operation
fnmadd.h f14, f29, f26, f6, rne # perform operation
fnmadd.h f14, f29, f26, f6, rtz # perform operation
fnmadd.h f14, f29, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f29, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f29, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f29, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f29, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f29, f26, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7bff)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f3, 0(x2) # load 0x00007fff from memory into f3
la x2, scratch
li x3, 0x7a0129c990e67d02 # load x3 with value 0x7a0129c990e67d02
sw x3, 0(x2) # store 0x7a0129c990e67d02 in memory
flh f22, 0(x2) # load 0x7a0129c990e67d02 from memory into f22
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f21, 0(x2) # load 0x00007bff from memory into f21
fnmadd.h f7, f3, f22, f21, dyn # perform operation
fnmadd.h f7, f3, f22, f21, rdn # perform operation
fnmadd.h f7, f3, f22, f21, rmm # perform operation
fnmadd.h f7, f3, f22, f21, rne # perform operation
fnmadd.h f7, f3, f22, f21, rtz # perform operation
fnmadd.h f7, f3, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f3, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f3, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f3, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f3, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f3, f22, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xfbff)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f24, 0(x2) # load 0x00007fff from memory into f24
la x2, scratch
li x3, 0x98973ef4770a71ab # load x3 with value 0x98973ef4770a71ab
sw x3, 0(x2) # store 0x98973ef4770a71ab in memory
flh f20, 0(x2) # load 0x98973ef4770a71ab from memory into f20
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
fnmadd.h f6, f24, f20, f15, dyn # perform operation
fnmadd.h f6, f24, f20, f15, rdn # perform operation
fnmadd.h f6, f24, f20, f15, rmm # perform operation
fnmadd.h f6, f24, f20, f15, rne # perform operation
fnmadd.h f6, f24, f20, f15, rtz # perform operation
fnmadd.h f6, f24, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f24, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f24, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f24, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f24, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f24, f20, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x3ff)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
la x2, scratch
li x3, 0x13ba88b75fdbab40 # load x3 with value 0x13ba88b75fdbab40
sw x3, 0(x2) # store 0x13ba88b75fdbab40 in memory
flh f26, 0(x2) # load 0x13ba88b75fdbab40 from memory into f26
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f2, 0(x2) # load 0x000003ff from memory into f2
fnmadd.h f15, f23, f26, f2, dyn # perform operation
fnmadd.h f15, f23, f26, f2, rdn # perform operation
fnmadd.h f15, f23, f26, f2, rmm # perform operation
fnmadd.h f15, f23, f26, f2, rne # perform operation
fnmadd.h f15, f23, f26, f2, rtz # perform operation
fnmadd.h f15, f23, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f23, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f23, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f23, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f23, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f23, f26, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x83ff)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f27, 0(x2) # load 0x00007fff from memory into f27
la x2, scratch
li x3, 0x309f35be24af1149 # load x3 with value 0x309f35be24af1149
sw x3, 0(x2) # store 0x309f35be24af1149 in memory
flh f8, 0(x2) # load 0x309f35be24af1149 from memory into f8
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f2, 0(x2) # load 0x000083ff from memory into f2
fnmadd.h f18, f27, f8, f2, dyn # perform operation
fnmadd.h f18, f27, f8, f2, rdn # perform operation
fnmadd.h f18, f27, f8, f2, rmm # perform operation
fnmadd.h f18, f27, f8, f2, rne # perform operation
fnmadd.h f18, f27, f8, f2, rtz # perform operation
fnmadd.h f18, f27, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f27, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f27, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f27, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f27, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f27, f8, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x200)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f5, 0(x2) # load 0x00007fff from memory into f5
la x2, scratch
li x3, 0xc802d9eaeee4e403 # load x3 with value 0xc802d9eaeee4e403
sw x3, 0(x2) # store 0xc802d9eaeee4e403 in memory
flh f21, 0(x2) # load 0xc802d9eaeee4e403 from memory into f21
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
fnmadd.h f16, f5, f21, f13, dyn # perform operation
fnmadd.h f16, f5, f21, f13, rdn # perform operation
fnmadd.h f16, f5, f21, f13, rmm # perform operation
fnmadd.h f16, f5, f21, f13, rne # perform operation
fnmadd.h f16, f5, f21, f13, rtz # perform operation
fnmadd.h f16, f5, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f5, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f5, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f5, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f5, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f5, f21, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x8200)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f12, 0(x2) # load 0x00007fff from memory into f12
la x2, scratch
li x3, 0x303df640adbae04 # load x3 with value 0x303df640adbae04
sw x3, 0(x2) # store 0x303df640adbae04 in memory
flh f31, 0(x2) # load 0x303df640adbae04 from memory into f31
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f27, 0(x2) # load 0x00008200 from memory into f27
fnmadd.h f9, f12, f31, f27, dyn # perform operation
fnmadd.h f9, f12, f31, f27, rdn # perform operation
fnmadd.h f9, f12, f31, f27, rmm # perform operation
fnmadd.h f9, f12, f31, f27, rne # perform operation
fnmadd.h f9, f12, f31, f27, rtz # perform operation
fnmadd.h f9, f12, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f12, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f12, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f12, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f12, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f12, f31, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x1)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f25, 0(x2) # load 0x00007fff from memory into f25
la x2, scratch
li x3, 0x270ba8a59c0b5d78 # load x3 with value 0x270ba8a59c0b5d78
sw x3, 0(x2) # store 0x270ba8a59c0b5d78 in memory
flh f29, 0(x2) # load 0x270ba8a59c0b5d78 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f18, 0(x2) # load 0x00000001 from memory into f18
fnmadd.h f20, f25, f29, f18, dyn # perform operation
fnmadd.h f20, f25, f29, f18, rdn # perform operation
fnmadd.h f20, f25, f29, f18, rmm # perform operation
fnmadd.h f20, f25, f29, f18, rne # perform operation
fnmadd.h f20, f25, f29, f18, rtz # perform operation
fnmadd.h f20, f25, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f25, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f25, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f25, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f25, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f25, f29, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x8001)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f12, 0(x2) # load 0x00007fff from memory into f12
la x2, scratch
li x3, 0xfa9578d915208abb # load x3 with value 0xfa9578d915208abb
sw x3, 0(x2) # store 0xfa9578d915208abb in memory
flh f21, 0(x2) # load 0xfa9578d915208abb from memory into f21
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f26, 0(x2) # load 0x00008001 from memory into f26
fnmadd.h f3, f12, f21, f26, dyn # perform operation
fnmadd.h f3, f12, f21, f26, rdn # perform operation
fnmadd.h f3, f12, f21, f26, rmm # perform operation
fnmadd.h f3, f12, f21, f26, rne # perform operation
fnmadd.h f3, f12, f21, f26, rtz # perform operation
fnmadd.h f3, f12, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f12, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f12, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f12, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f12, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f12, f21, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7c00)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f16, 0(x2) # load 0x00007fff from memory into f16
la x2, scratch
li x3, 0x8c5a70aba0f2251c # load x3 with value 0x8c5a70aba0f2251c
sw x3, 0(x2) # store 0x8c5a70aba0f2251c in memory
flh f24, 0(x2) # load 0x8c5a70aba0f2251c from memory into f24
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
fnmadd.h f28, f16, f24, f19, dyn # perform operation
fnmadd.h f28, f16, f24, f19, rdn # perform operation
fnmadd.h f28, f16, f24, f19, rmm # perform operation
fnmadd.h f28, f16, f24, f19, rne # perform operation
fnmadd.h f28, f16, f24, f19, rtz # perform operation
fnmadd.h f28, f16, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f16, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f16, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f16, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f16, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f16, f24, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xfc00)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f20, 0(x2) # load 0x00007fff from memory into f20
la x2, scratch
li x3, 0x9d7ed596668fe5cb # load x3 with value 0x9d7ed596668fe5cb
sw x3, 0(x2) # store 0x9d7ed596668fe5cb in memory
flh f23, 0(x2) # load 0x9d7ed596668fe5cb from memory into f23
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f18, 0(x2) # load 0x0000fc00 from memory into f18
fnmadd.h f24, f20, f23, f18, dyn # perform operation
fnmadd.h f24, f20, f23, f18, rdn # perform operation
fnmadd.h f24, f20, f23, f18, rmm # perform operation
fnmadd.h f24, f20, f23, f18, rne # perform operation
fnmadd.h f24, f20, f23, f18, rtz # perform operation
fnmadd.h f24, f20, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f20, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f20, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f20, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f20, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f20, f23, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7e00)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
la x2, scratch
li x3, 0x65e6f97c7820082d # load x3 with value 0x65e6f97c7820082d
sw x3, 0(x2) # store 0x65e6f97c7820082d in memory
flh f14, 0(x2) # load 0x65e6f97c7820082d from memory into f14
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f16, 0(x2) # load 0x00007e00 from memory into f16
fnmadd.h f10, f23, f14, f16, dyn # perform operation
fnmadd.h f10, f23, f14, f16, rdn # perform operation
fnmadd.h f10, f23, f14, f16, rmm # perform operation
fnmadd.h f10, f23, f14, f16, rne # perform operation
fnmadd.h f10, f23, f14, f16, rtz # perform operation
fnmadd.h f10, f23, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f23, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f23, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f23, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f23, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f23, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7fff)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f7, 0(x2) # load 0x00007fff from memory into f7
la x2, scratch
li x3, 0x532facb2fd4d43e1 # load x3 with value 0x532facb2fd4d43e1
sw x3, 0(x2) # store 0x532facb2fd4d43e1 in memory
flh f5, 0(x2) # load 0x532facb2fd4d43e1 from memory into f5
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f27, 0(x2) # load 0x00007fff from memory into f27
fnmadd.h f26, f7, f5, f27, dyn # perform operation
fnmadd.h f26, f7, f5, f27, rdn # perform operation
fnmadd.h f26, f7, f5, f27, rmm # perform operation
fnmadd.h f26, f7, f5, f27, rne # perform operation
fnmadd.h f26, f7, f5, f27, rtz # perform operation
fnmadd.h f26, f7, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f7, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f7, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f7, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f7, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f7, f5, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xfe00)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f2, 0(x2) # load 0x00007fff from memory into f2
la x2, scratch
li x3, 0x1b8260420da7fde4 # load x3 with value 0x1b8260420da7fde4
sw x3, 0(x2) # store 0x1b8260420da7fde4 in memory
flh f23, 0(x2) # load 0x1b8260420da7fde4 from memory into f23
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f12, 0(x2) # load 0x0000fe00 from memory into f12
fnmadd.h f8, f2, f23, f12, dyn # perform operation
fnmadd.h f8, f2, f23, f12, rdn # perform operation
fnmadd.h f8, f2, f23, f12, rmm # perform operation
fnmadd.h f8, f2, f23, f12, rne # perform operation
fnmadd.h f8, f2, f23, f12, rtz # perform operation
fnmadd.h f8, f2, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f2, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f2, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f2, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f2, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f2, f23, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7c01)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f17, 0(x2) # load 0x00007fff from memory into f17
la x2, scratch
li x3, 0x7857098ac2400c12 # load x3 with value 0x7857098ac2400c12
sw x3, 0(x2) # store 0x7857098ac2400c12 in memory
flh f7, 0(x2) # load 0x7857098ac2400c12 from memory into f7
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f29, 0(x2) # load 0x00007c01 from memory into f29
fnmadd.h f16, f17, f7, f29, dyn # perform operation
fnmadd.h f16, f17, f7, f29, rdn # perform operation
fnmadd.h f16, f17, f7, f29, rmm # perform operation
fnmadd.h f16, f17, f7, f29, rne # perform operation
fnmadd.h f16, f17, f7, f29, rtz # perform operation
fnmadd.h f16, f17, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f17, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f17, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f17, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f17, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f17, f7, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7dff)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f1, 0(x2) # load 0x00007fff from memory into f1
la x2, scratch
li x3, 0x862b87bee08ff84a # load x3 with value 0x862b87bee08ff84a
sw x3, 0(x2) # store 0x862b87bee08ff84a in memory
flh f6, 0(x2) # load 0x862b87bee08ff84a from memory into f6
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f15, 0(x2) # load 0x00007dff from memory into f15
fnmadd.h f8, f1, f6, f15, dyn # perform operation
fnmadd.h f8, f1, f6, f15, rdn # perform operation
fnmadd.h f8, f1, f6, f15, rmm # perform operation
fnmadd.h f8, f1, f6, f15, rne # perform operation
fnmadd.h f8, f1, f6, f15, rtz # perform operation
fnmadd.h f8, f1, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f1, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f1, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f1, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f1, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f1, f6, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xfc01)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f2, 0(x2) # load 0x00007fff from memory into f2
la x2, scratch
li x3, 0xc9d04e3cf513bccf # load x3 with value 0xc9d04e3cf513bccf
sw x3, 0(x2) # store 0xc9d04e3cf513bccf in memory
flh f8, 0(x2) # load 0xc9d04e3cf513bccf from memory into f8
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f16, 0(x2) # load 0x0000fc01 from memory into f16
fnmadd.h f1, f2, f8, f16, dyn # perform operation
fnmadd.h f1, f2, f8, f16, rdn # perform operation
fnmadd.h f1, f2, f8, f16, rmm # perform operation
fnmadd.h f1, f2, f8, f16, rne # perform operation
fnmadd.h f1, f2, f8, f16, rtz # perform operation
fnmadd.h f1, f2, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f2, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f2, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f2, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f2, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f2, f8, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x58b4)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f17, 0(x2) # load 0x00007fff from memory into f17
la x2, scratch
li x3, 0xe2b5943a1c336bea # load x3 with value 0xe2b5943a1c336bea
sw x3, 0(x2) # store 0xe2b5943a1c336bea in memory
flh f3, 0(x2) # load 0xe2b5943a1c336bea from memory into f3
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
fnmadd.h f10, f17, f3, f13, dyn # perform operation
fnmadd.h f10, f17, f3, f13, rdn # perform operation
fnmadd.h f10, f17, f3, f13, rmm # perform operation
fnmadd.h f10, f17, f3, f13, rne # perform operation
fnmadd.h f10, f17, f3, f13, rtz # perform operation
fnmadd.h f10, f17, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f17, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f17, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f17, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f17, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f17, f3, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xc93a)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f18, 0(x2) # load 0x00007fff from memory into f18
la x2, scratch
li x3, 0x9d612fb5131d5602 # load x3 with value 0x9d612fb5131d5602
sw x3, 0(x2) # store 0x9d612fb5131d5602 in memory
flh f30, 0(x2) # load 0x9d612fb5131d5602 from memory into f30
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f26, 0(x2) # load 0x0000c93a from memory into f26
fnmadd.h f27, f18, f30, f26, dyn # perform operation
fnmadd.h f27, f18, f30, f26, rdn # perform operation
fnmadd.h f27, f18, f30, f26, rmm # perform operation
fnmadd.h f27, f18, f30, f26, rne # perform operation
fnmadd.h f27, f18, f30, f26, rtz # perform operation
fnmadd.h f27, f18, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f18, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f18, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f18, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f18, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f18, f30, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x0)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f13, 0(x2) # load 0x0000fe00 from memory into f13
la x2, scratch
li x3, 0x2e8fab48022baab7 # load x3 with value 0x2e8fab48022baab7
sw x3, 0(x2) # store 0x2e8fab48022baab7 in memory
flh f15, 0(x2) # load 0x2e8fab48022baab7 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f19, 0(x2) # load 0x00000000 from memory into f19
fnmadd.h f17, f13, f15, f19, dyn # perform operation
fnmadd.h f17, f13, f15, f19, rdn # perform operation
fnmadd.h f17, f13, f15, f19, rmm # perform operation
fnmadd.h f17, f13, f15, f19, rne # perform operation
fnmadd.h f17, f13, f15, f19, rtz # perform operation
fnmadd.h f17, f13, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f13, f15, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x8000)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f22, 0(x2) # load 0x0000fe00 from memory into f22
la x2, scratch
li x3, 0x977a19e6a20a3a94 # load x3 with value 0x977a19e6a20a3a94
sw x3, 0(x2) # store 0x977a19e6a20a3a94 in memory
flh f10, 0(x2) # load 0x977a19e6a20a3a94 from memory into f10
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f6, 0(x2) # load 0x00008000 from memory into f6
fnmadd.h f16, f22, f10, f6, dyn # perform operation
fnmadd.h f16, f22, f10, f6, rdn # perform operation
fnmadd.h f16, f22, f10, f6, rmm # perform operation
fnmadd.h f16, f22, f10, f6, rne # perform operation
fnmadd.h f16, f22, f10, f6, rtz # perform operation
fnmadd.h f16, f22, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f22, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f22, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f22, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f22, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f22, f10, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x3c00)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f29, 0(x2) # load 0x0000fe00 from memory into f29
la x2, scratch
li x3, 0xfa0766b492221eb6 # load x3 with value 0xfa0766b492221eb6
sw x3, 0(x2) # store 0xfa0766b492221eb6 in memory
flh f25, 0(x2) # load 0xfa0766b492221eb6 from memory into f25
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f7, 0(x2) # load 0x00003c00 from memory into f7
fnmadd.h f28, f29, f25, f7, dyn # perform operation
fnmadd.h f28, f29, f25, f7, rdn # perform operation
fnmadd.h f28, f29, f25, f7, rmm # perform operation
fnmadd.h f28, f29, f25, f7, rne # perform operation
fnmadd.h f28, f29, f25, f7, rtz # perform operation
fnmadd.h f28, f29, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f29, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f29, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f29, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f29, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f29, f25, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0xbc00)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f19, 0(x2) # load 0x0000fe00 from memory into f19
la x2, scratch
li x3, 0x24eb9fc09e8612d6 # load x3 with value 0x24eb9fc09e8612d6
sw x3, 0(x2) # store 0x24eb9fc09e8612d6 in memory
flh f5, 0(x2) # load 0x24eb9fc09e8612d6 from memory into f5
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f26, 0(x2) # load 0x0000bc00 from memory into f26
fnmadd.h f12, f19, f5, f26, dyn # perform operation
fnmadd.h f12, f19, f5, f26, rdn # perform operation
fnmadd.h f12, f19, f5, f26, rmm # perform operation
fnmadd.h f12, f19, f5, f26, rne # perform operation
fnmadd.h f12, f19, f5, f26, rtz # perform operation
fnmadd.h f12, f19, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f19, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f19, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f19, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f19, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f19, f5, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x3e00)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f10, 0(x2) # load 0x0000fe00 from memory into f10
la x2, scratch
li x3, 0xb2fcc8e340b912ce # load x3 with value 0xb2fcc8e340b912ce
sw x3, 0(x2) # store 0xb2fcc8e340b912ce in memory
flh f16, 0(x2) # load 0xb2fcc8e340b912ce from memory into f16
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
fnmadd.h f22, f10, f16, f21, dyn # perform operation
fnmadd.h f22, f10, f16, f21, rdn # perform operation
fnmadd.h f22, f10, f16, f21, rmm # perform operation
fnmadd.h f22, f10, f16, f21, rne # perform operation
fnmadd.h f22, f10, f16, f21, rtz # perform operation
fnmadd.h f22, f10, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f10, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f10, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f10, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f10, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f10, f16, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0xbe00)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f29, 0(x2) # load 0x0000fe00 from memory into f29
la x2, scratch
li x3, 0xd97b4f5b81df3083 # load x3 with value 0xd97b4f5b81df3083
sw x3, 0(x2) # store 0xd97b4f5b81df3083 in memory
flh f9, 0(x2) # load 0xd97b4f5b81df3083 from memory into f9
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f6, 0(x2) # load 0x0000be00 from memory into f6
fnmadd.h f22, f29, f9, f6, dyn # perform operation
fnmadd.h f22, f29, f9, f6, rdn # perform operation
fnmadd.h f22, f29, f9, f6, rmm # perform operation
fnmadd.h f22, f29, f9, f6, rne # perform operation
fnmadd.h f22, f29, f9, f6, rtz # perform operation
fnmadd.h f22, f29, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f29, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f29, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f29, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f29, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f29, f9, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x4000)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f23, 0(x2) # load 0x0000fe00 from memory into f23
la x2, scratch
li x3, 0x42938c756870a5e1 # load x3 with value 0x42938c756870a5e1
sw x3, 0(x2) # store 0x42938c756870a5e1 in memory
flh f14, 0(x2) # load 0x42938c756870a5e1 from memory into f14
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f26, 0(x2) # load 0x00004000 from memory into f26
fnmadd.h f27, f23, f14, f26, dyn # perform operation
fnmadd.h f27, f23, f14, f26, rdn # perform operation
fnmadd.h f27, f23, f14, f26, rmm # perform operation
fnmadd.h f27, f23, f14, f26, rne # perform operation
fnmadd.h f27, f23, f14, f26, rtz # perform operation
fnmadd.h f27, f23, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f23, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f23, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f23, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f23, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f23, f14, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0xc000)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f21, 0(x2) # load 0x0000fe00 from memory into f21
la x2, scratch
li x3, 0x508f76e8e3149dab # load x3 with value 0x508f76e8e3149dab
sw x3, 0(x2) # store 0x508f76e8e3149dab in memory
flh f24, 0(x2) # load 0x508f76e8e3149dab from memory into f24
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f10, 0(x2) # load 0x0000c000 from memory into f10
fnmadd.h f6, f21, f24, f10, dyn # perform operation
fnmadd.h f6, f21, f24, f10, rdn # perform operation
fnmadd.h f6, f21, f24, f10, rmm # perform operation
fnmadd.h f6, f21, f24, f10, rne # perform operation
fnmadd.h f6, f21, f24, f10, rtz # perform operation
fnmadd.h f6, f21, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f21, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f21, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f21, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f21, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f21, f24, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x400)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f20, 0(x2) # load 0x0000fe00 from memory into f20
la x2, scratch
li x3, 0x7bf42679df1ae951 # load x3 with value 0x7bf42679df1ae951
sw x3, 0(x2) # store 0x7bf42679df1ae951 in memory
flh f17, 0(x2) # load 0x7bf42679df1ae951 from memory into f17
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f3, 0(x2) # load 0x00000400 from memory into f3
fnmadd.h f1, f20, f17, f3, dyn # perform operation
fnmadd.h f1, f20, f17, f3, rdn # perform operation
fnmadd.h f1, f20, f17, f3, rmm # perform operation
fnmadd.h f1, f20, f17, f3, rne # perform operation
fnmadd.h f1, f20, f17, f3, rtz # perform operation
fnmadd.h f1, f20, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f20, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f20, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f20, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f20, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f20, f17, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x8400)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f17, 0(x2) # load 0x0000fe00 from memory into f17
la x2, scratch
li x3, 0xee45f34275bd59c1 # load x3 with value 0xee45f34275bd59c1
sw x3, 0(x2) # store 0xee45f34275bd59c1 in memory
flh f25, 0(x2) # load 0xee45f34275bd59c1 from memory into f25
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f5, 0(x2) # load 0x00008400 from memory into f5
fnmadd.h f30, f17, f25, f5, dyn # perform operation
fnmadd.h f30, f17, f25, f5, rdn # perform operation
fnmadd.h f30, f17, f25, f5, rmm # perform operation
fnmadd.h f30, f17, f25, f5, rne # perform operation
fnmadd.h f30, f17, f25, f5, rtz # perform operation
fnmadd.h f30, f17, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f17, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f17, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f17, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f17, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f17, f25, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x7bff)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f31, 0(x2) # load 0x0000fe00 from memory into f31
la x2, scratch
li x3, 0x50bb70cdde12c1fd # load x3 with value 0x50bb70cdde12c1fd
sw x3, 0(x2) # store 0x50bb70cdde12c1fd in memory
flh f30, 0(x2) # load 0x50bb70cdde12c1fd from memory into f30
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f26, 0(x2) # load 0x00007bff from memory into f26
fnmadd.h f16, f31, f30, f26, dyn # perform operation
fnmadd.h f16, f31, f30, f26, rdn # perform operation
fnmadd.h f16, f31, f30, f26, rmm # perform operation
fnmadd.h f16, f31, f30, f26, rne # perform operation
fnmadd.h f16, f31, f30, f26, rtz # perform operation
fnmadd.h f16, f31, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f31, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f31, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f31, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f31, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f31, f30, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0xfbff)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f3, 0(x2) # load 0x0000fe00 from memory into f3
la x2, scratch
li x3, 0x540d8a4164e9dad4 # load x3 with value 0x540d8a4164e9dad4
sw x3, 0(x2) # store 0x540d8a4164e9dad4 in memory
flh f6, 0(x2) # load 0x540d8a4164e9dad4 from memory into f6
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f16, 0(x2) # load 0x0000fbff from memory into f16
fnmadd.h f13, f3, f6, f16, dyn # perform operation
fnmadd.h f13, f3, f6, f16, rdn # perform operation
fnmadd.h f13, f3, f6, f16, rmm # perform operation
fnmadd.h f13, f3, f6, f16, rne # perform operation
fnmadd.h f13, f3, f6, f16, rtz # perform operation
fnmadd.h f13, f3, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f3, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f3, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f3, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f3, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f3, f6, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x3ff)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f28, 0(x2) # load 0x0000fe00 from memory into f28
la x2, scratch
li x3, 0x80ed9581b50b0d70 # load x3 with value 0x80ed9581b50b0d70
sw x3, 0(x2) # store 0x80ed9581b50b0d70 in memory
flh f7, 0(x2) # load 0x80ed9581b50b0d70 from memory into f7
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f26, 0(x2) # load 0x000003ff from memory into f26
fnmadd.h f6, f28, f7, f26, dyn # perform operation
fnmadd.h f6, f28, f7, f26, rdn # perform operation
fnmadd.h f6, f28, f7, f26, rmm # perform operation
fnmadd.h f6, f28, f7, f26, rne # perform operation
fnmadd.h f6, f28, f7, f26, rtz # perform operation
fnmadd.h f6, f28, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f28, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f28, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f28, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f28, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f28, f7, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x83ff)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f13, 0(x2) # load 0x0000fe00 from memory into f13
la x2, scratch
li x3, 0x7e9aa73d83e4c0c7 # load x3 with value 0x7e9aa73d83e4c0c7
sw x3, 0(x2) # store 0x7e9aa73d83e4c0c7 in memory
flh f7, 0(x2) # load 0x7e9aa73d83e4c0c7 from memory into f7
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
fnmadd.h f3, f13, f7, f19, dyn # perform operation
fnmadd.h f3, f13, f7, f19, rdn # perform operation
fnmadd.h f3, f13, f7, f19, rmm # perform operation
fnmadd.h f3, f13, f7, f19, rne # perform operation
fnmadd.h f3, f13, f7, f19, rtz # perform operation
fnmadd.h f3, f13, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f13, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f13, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f13, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f13, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f13, f7, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x200)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f14, 0(x2) # load 0x0000fe00 from memory into f14
la x2, scratch
li x3, 0x5d9360bcc82ed26 # load x3 with value 0x5d9360bcc82ed26
sw x3, 0(x2) # store 0x5d9360bcc82ed26 in memory
flh f31, 0(x2) # load 0x5d9360bcc82ed26 from memory into f31
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
fnmadd.h f8, f14, f31, f19, dyn # perform operation
fnmadd.h f8, f14, f31, f19, rdn # perform operation
fnmadd.h f8, f14, f31, f19, rmm # perform operation
fnmadd.h f8, f14, f31, f19, rne # perform operation
fnmadd.h f8, f14, f31, f19, rtz # perform operation
fnmadd.h f8, f14, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f14, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f14, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f14, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f14, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f14, f31, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x8200)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f17, 0(x2) # load 0x0000fe00 from memory into f17
la x2, scratch
li x3, 0x2f41d00bb8e2d079 # load x3 with value 0x2f41d00bb8e2d079
sw x3, 0(x2) # store 0x2f41d00bb8e2d079 in memory
flh f22, 0(x2) # load 0x2f41d00bb8e2d079 from memory into f22
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f8, 0(x2) # load 0x00008200 from memory into f8
fnmadd.h f31, f17, f22, f8, dyn # perform operation
fnmadd.h f31, f17, f22, f8, rdn # perform operation
fnmadd.h f31, f17, f22, f8, rmm # perform operation
fnmadd.h f31, f17, f22, f8, rne # perform operation
fnmadd.h f31, f17, f22, f8, rtz # perform operation
fnmadd.h f31, f17, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f17, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f17, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f17, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f17, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f17, f22, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x1)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f28, 0(x2) # load 0x0000fe00 from memory into f28
la x2, scratch
li x3, 0xd068708f0f0f1ee9 # load x3 with value 0xd068708f0f0f1ee9
sw x3, 0(x2) # store 0xd068708f0f0f1ee9 in memory
flh f25, 0(x2) # load 0xd068708f0f0f1ee9 from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f22, 0(x2) # load 0x00000001 from memory into f22
fnmadd.h f7, f28, f25, f22, dyn # perform operation
fnmadd.h f7, f28, f25, f22, rdn # perform operation
fnmadd.h f7, f28, f25, f22, rmm # perform operation
fnmadd.h f7, f28, f25, f22, rne # perform operation
fnmadd.h f7, f28, f25, f22, rtz # perform operation
fnmadd.h f7, f28, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f28, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f28, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f28, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f28, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f28, f25, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x8001)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f20, 0(x2) # load 0x0000fe00 from memory into f20
la x2, scratch
li x3, 0xaf97a34e2e2f9062 # load x3 with value 0xaf97a34e2e2f9062
sw x3, 0(x2) # store 0xaf97a34e2e2f9062 in memory
flh f12, 0(x2) # load 0xaf97a34e2e2f9062 from memory into f12
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f29, 0(x2) # load 0x00008001 from memory into f29
fnmadd.h f13, f20, f12, f29, dyn # perform operation
fnmadd.h f13, f20, f12, f29, rdn # perform operation
fnmadd.h f13, f20, f12, f29, rmm # perform operation
fnmadd.h f13, f20, f12, f29, rne # perform operation
fnmadd.h f13, f20, f12, f29, rtz # perform operation
fnmadd.h f13, f20, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f20, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f20, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f20, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f20, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f20, f12, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x7c00)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f1, 0(x2) # load 0x0000fe00 from memory into f1
la x2, scratch
li x3, 0xafc7ab34ac62178f # load x3 with value 0xafc7ab34ac62178f
sw x3, 0(x2) # store 0xafc7ab34ac62178f in memory
flh f6, 0(x2) # load 0xafc7ab34ac62178f from memory into f6
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f25, 0(x2) # load 0x00007c00 from memory into f25
fnmadd.h f8, f1, f6, f25, dyn # perform operation
fnmadd.h f8, f1, f6, f25, rdn # perform operation
fnmadd.h f8, f1, f6, f25, rmm # perform operation
fnmadd.h f8, f1, f6, f25, rne # perform operation
fnmadd.h f8, f1, f6, f25, rtz # perform operation
fnmadd.h f8, f1, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f1, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f1, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f1, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f1, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f1, f6, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0xfc00)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f8, 0(x2) # load 0x0000fe00 from memory into f8
la x2, scratch
li x3, 0x7f14c8590fccad8e # load x3 with value 0x7f14c8590fccad8e
sw x3, 0(x2) # store 0x7f14c8590fccad8e in memory
flh f23, 0(x2) # load 0x7f14c8590fccad8e from memory into f23
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f25, 0(x2) # load 0x0000fc00 from memory into f25
fnmadd.h f21, f8, f23, f25, dyn # perform operation
fnmadd.h f21, f8, f23, f25, rdn # perform operation
fnmadd.h f21, f8, f23, f25, rmm # perform operation
fnmadd.h f21, f8, f23, f25, rne # perform operation
fnmadd.h f21, f8, f23, f25, rtz # perform operation
fnmadd.h f21, f8, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f8, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f8, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f8, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f8, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f8, f23, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x7e00)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f22, 0(x2) # load 0x0000fe00 from memory into f22
la x2, scratch
li x3, 0xfa70d163edd9ebbb # load x3 with value 0xfa70d163edd9ebbb
sw x3, 0(x2) # store 0xfa70d163edd9ebbb in memory
flh f11, 0(x2) # load 0xfa70d163edd9ebbb from memory into f11
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f12, 0(x2) # load 0x00007e00 from memory into f12
fnmadd.h f17, f22, f11, f12, dyn # perform operation
fnmadd.h f17, f22, f11, f12, rdn # perform operation
fnmadd.h f17, f22, f11, f12, rmm # perform operation
fnmadd.h f17, f22, f11, f12, rne # perform operation
fnmadd.h f17, f22, f11, f12, rtz # perform operation
fnmadd.h f17, f22, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f22, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f22, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f22, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f22, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f22, f11, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x7fff)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f18, 0(x2) # load 0x0000fe00 from memory into f18
la x2, scratch
li x3, 0x75b1e2d8ca55cda5 # load x3 with value 0x75b1e2d8ca55cda5
sw x3, 0(x2) # store 0x75b1e2d8ca55cda5 in memory
flh f24, 0(x2) # load 0x75b1e2d8ca55cda5 from memory into f24
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
fnmadd.h f27, f18, f24, f23, dyn # perform operation
fnmadd.h f27, f18, f24, f23, rdn # perform operation
fnmadd.h f27, f18, f24, f23, rmm # perform operation
fnmadd.h f27, f18, f24, f23, rne # perform operation
fnmadd.h f27, f18, f24, f23, rtz # perform operation
fnmadd.h f27, f18, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f18, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f18, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f18, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f18, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f18, f24, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0xfe00)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f24, 0(x2) # load 0x0000fe00 from memory into f24
la x2, scratch
li x3, 0x4a849391ef3bde95 # load x3 with value 0x4a849391ef3bde95
sw x3, 0(x2) # store 0x4a849391ef3bde95 in memory
flh f6, 0(x2) # load 0x4a849391ef3bde95 from memory into f6
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f30, 0(x2) # load 0x0000fe00 from memory into f30
fnmadd.h f28, f24, f6, f30, dyn # perform operation
fnmadd.h f28, f24, f6, f30, rdn # perform operation
fnmadd.h f28, f24, f6, f30, rmm # perform operation
fnmadd.h f28, f24, f6, f30, rne # perform operation
fnmadd.h f28, f24, f6, f30, rtz # perform operation
fnmadd.h f28, f24, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f24, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f24, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f24, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f24, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f24, f6, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x7c01)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f11, 0(x2) # load 0x0000fe00 from memory into f11
la x2, scratch
li x3, 0x3623ec4d70297d9e # load x3 with value 0x3623ec4d70297d9e
sw x3, 0(x2) # store 0x3623ec4d70297d9e in memory
flh f21, 0(x2) # load 0x3623ec4d70297d9e from memory into f21
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f24, 0(x2) # load 0x00007c01 from memory into f24
fnmadd.h f7, f11, f21, f24, dyn # perform operation
fnmadd.h f7, f11, f21, f24, rdn # perform operation
fnmadd.h f7, f11, f21, f24, rmm # perform operation
fnmadd.h f7, f11, f21, f24, rne # perform operation
fnmadd.h f7, f11, f21, f24, rtz # perform operation
fnmadd.h f7, f11, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f11, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f11, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f11, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f11, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f11, f21, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x7dff)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f15, 0(x2) # load 0x0000fe00 from memory into f15
la x2, scratch
li x3, 0x5948b0c0aef0ef23 # load x3 with value 0x5948b0c0aef0ef23
sw x3, 0(x2) # store 0x5948b0c0aef0ef23 in memory
flh f25, 0(x2) # load 0x5948b0c0aef0ef23 from memory into f25
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f13, 0(x2) # load 0x00007dff from memory into f13
fnmadd.h f12, f15, f25, f13, dyn # perform operation
fnmadd.h f12, f15, f25, f13, rdn # perform operation
fnmadd.h f12, f15, f25, f13, rmm # perform operation
fnmadd.h f12, f15, f25, f13, rne # perform operation
fnmadd.h f12, f15, f25, f13, rtz # perform operation
fnmadd.h f12, f15, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f15, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f15, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f15, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f15, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f15, f25, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0xfc01)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f28, 0(x2) # load 0x0000fe00 from memory into f28
la x2, scratch
li x3, 0x99c1f4a1d2a2a23e # load x3 with value 0x99c1f4a1d2a2a23e
sw x3, 0(x2) # store 0x99c1f4a1d2a2a23e in memory
flh f22, 0(x2) # load 0x99c1f4a1d2a2a23e from memory into f22
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f11, 0(x2) # load 0x0000fc01 from memory into f11
fnmadd.h f29, f28, f22, f11, dyn # perform operation
fnmadd.h f29, f28, f22, f11, rdn # perform operation
fnmadd.h f29, f28, f22, f11, rmm # perform operation
fnmadd.h f29, f28, f22, f11, rne # perform operation
fnmadd.h f29, f28, f22, f11, rtz # perform operation
fnmadd.h f29, f28, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f28, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f28, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f28, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f28, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f28, f22, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x58b4)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f23, 0(x2) # load 0x0000fe00 from memory into f23
la x2, scratch
li x3, 0xd3d5f2d882a3650e # load x3 with value 0xd3d5f2d882a3650e
sw x3, 0(x2) # store 0xd3d5f2d882a3650e in memory
flh f7, 0(x2) # load 0xd3d5f2d882a3650e from memory into f7
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f19, 0(x2) # load 0x000058b4 from memory into f19
fnmadd.h f12, f23, f7, f19, dyn # perform operation
fnmadd.h f12, f23, f7, f19, rdn # perform operation
fnmadd.h f12, f23, f7, f19, rmm # perform operation
fnmadd.h f12, f23, f7, f19, rne # perform operation
fnmadd.h f12, f23, f7, f19, rtz # perform operation
fnmadd.h f12, f23, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f23, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f23, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f23, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f23, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f23, f7, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0xc93a)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f14, 0(x2) # load 0x0000fe00 from memory into f14
la x2, scratch
li x3, 0xce48b59fb330bf3f # load x3 with value 0xce48b59fb330bf3f
sw x3, 0(x2) # store 0xce48b59fb330bf3f in memory
flh f25, 0(x2) # load 0xce48b59fb330bf3f from memory into f25
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f19, 0(x2) # load 0x0000c93a from memory into f19
fnmadd.h f23, f14, f25, f19, dyn # perform operation
fnmadd.h f23, f14, f25, f19, rdn # perform operation
fnmadd.h f23, f14, f25, f19, rmm # perform operation
fnmadd.h f23, f14, f25, f19, rne # perform operation
fnmadd.h f23, f14, f25, f19, rtz # perform operation
fnmadd.h f23, f14, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f14, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f14, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f14, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f14, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f14, f25, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x0)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f5, 0(x2) # load 0x00007c01 from memory into f5
la x2, scratch
li x3, 0x317b64d6b155d1f5 # load x3 with value 0x317b64d6b155d1f5
sw x3, 0(x2) # store 0x317b64d6b155d1f5 in memory
flh f6, 0(x2) # load 0x317b64d6b155d1f5 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f8, 0(x2) # load 0x00000000 from memory into f8
fnmadd.h f25, f5, f6, f8, dyn # perform operation
fnmadd.h f25, f5, f6, f8, rdn # perform operation
fnmadd.h f25, f5, f6, f8, rmm # perform operation
fnmadd.h f25, f5, f6, f8, rne # perform operation
fnmadd.h f25, f5, f6, f8, rtz # perform operation
fnmadd.h f25, f5, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f5, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f5, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f5, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f5, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f5, f6, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x8000)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f19, 0(x2) # load 0x00007c01 from memory into f19
la x2, scratch
li x3, 0x5cb592eba93c954c # load x3 with value 0x5cb592eba93c954c
sw x3, 0(x2) # store 0x5cb592eba93c954c in memory
flh f14, 0(x2) # load 0x5cb592eba93c954c from memory into f14
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f23, 0(x2) # load 0x00008000 from memory into f23
fnmadd.h f5, f19, f14, f23, dyn # perform operation
fnmadd.h f5, f19, f14, f23, rdn # perform operation
fnmadd.h f5, f19, f14, f23, rmm # perform operation
fnmadd.h f5, f19, f14, f23, rne # perform operation
fnmadd.h f5, f19, f14, f23, rtz # perform operation
fnmadd.h f5, f19, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f19, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f19, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f19, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f19, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f19, f14, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f2, 0(x2) # load 0x00007c01 from memory into f2
la x2, scratch
li x3, 0xdd1c1244ea25909c # load x3 with value 0xdd1c1244ea25909c
sw x3, 0(x2) # store 0xdd1c1244ea25909c in memory
flh f23, 0(x2) # load 0xdd1c1244ea25909c from memory into f23
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f28, 0(x2) # load 0x00003c00 from memory into f28
fnmadd.h f24, f2, f23, f28, dyn # perform operation
fnmadd.h f24, f2, f23, f28, rdn # perform operation
fnmadd.h f24, f2, f23, f28, rmm # perform operation
fnmadd.h f24, f2, f23, f28, rne # perform operation
fnmadd.h f24, f2, f23, f28, rtz # perform operation
fnmadd.h f24, f2, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f2, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f2, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f2, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f2, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f2, f23, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f12, 0(x2) # load 0x00007c01 from memory into f12
la x2, scratch
li x3, 0x582f079448cea521 # load x3 with value 0x582f079448cea521
sw x3, 0(x2) # store 0x582f079448cea521 in memory
flh f21, 0(x2) # load 0x582f079448cea521 from memory into f21
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f31, 0(x2) # load 0x0000bc00 from memory into f31
fnmadd.h f9, f12, f21, f31, dyn # perform operation
fnmadd.h f9, f12, f21, f31, rdn # perform operation
fnmadd.h f9, f12, f21, f31, rmm # perform operation
fnmadd.h f9, f12, f21, f31, rne # perform operation
fnmadd.h f9, f12, f21, f31, rtz # perform operation
fnmadd.h f9, f12, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f12, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f12, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f12, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f12, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f12, f21, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f27, 0(x2) # load 0x00007c01 from memory into f27
la x2, scratch
li x3, 0xc50368195bcc0dab # load x3 with value 0xc50368195bcc0dab
sw x3, 0(x2) # store 0xc50368195bcc0dab in memory
flh f10, 0(x2) # load 0xc50368195bcc0dab from memory into f10
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f2, 0(x2) # load 0x00003e00 from memory into f2
fnmadd.h f16, f27, f10, f2, dyn # perform operation
fnmadd.h f16, f27, f10, f2, rdn # perform operation
fnmadd.h f16, f27, f10, f2, rmm # perform operation
fnmadd.h f16, f27, f10, f2, rne # perform operation
fnmadd.h f16, f27, f10, f2, rtz # perform operation
fnmadd.h f16, f27, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f27, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f27, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f27, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f27, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f27, f10, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f15, 0(x2) # load 0x00007c01 from memory into f15
la x2, scratch
li x3, 0x76e01e3944f079f9 # load x3 with value 0x76e01e3944f079f9
sw x3, 0(x2) # store 0x76e01e3944f079f9 in memory
flh f6, 0(x2) # load 0x76e01e3944f079f9 from memory into f6
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f24, 0(x2) # load 0x0000be00 from memory into f24
fnmadd.h f12, f15, f6, f24, dyn # perform operation
fnmadd.h f12, f15, f6, f24, rdn # perform operation
fnmadd.h f12, f15, f6, f24, rmm # perform operation
fnmadd.h f12, f15, f6, f24, rne # perform operation
fnmadd.h f12, f15, f6, f24, rtz # perform operation
fnmadd.h f12, f15, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f15, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f15, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f15, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f15, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f15, f6, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x4000)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
la x2, scratch
li x3, 0x38c2386c616b867 # load x3 with value 0x38c2386c616b867
sw x3, 0(x2) # store 0x38c2386c616b867 in memory
flh f7, 0(x2) # load 0x38c2386c616b867 from memory into f7
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f8, 0(x2) # load 0x00004000 from memory into f8
fnmadd.h f14, f26, f7, f8, dyn # perform operation
fnmadd.h f14, f26, f7, f8, rdn # perform operation
fnmadd.h f14, f26, f7, f8, rmm # perform operation
fnmadd.h f14, f26, f7, f8, rne # perform operation
fnmadd.h f14, f26, f7, f8, rtz # perform operation
fnmadd.h f14, f26, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f26, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f26, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f26, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f26, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f26, f7, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xc000)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f6, 0(x2) # load 0x00007c01 from memory into f6
la x2, scratch
li x3, 0x484f885e008519c5 # load x3 with value 0x484f885e008519c5
sw x3, 0(x2) # store 0x484f885e008519c5 in memory
flh f23, 0(x2) # load 0x484f885e008519c5 from memory into f23
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f31, 0(x2) # load 0x0000c000 from memory into f31
fnmadd.h f18, f6, f23, f31, dyn # perform operation
fnmadd.h f18, f6, f23, f31, rdn # perform operation
fnmadd.h f18, f6, f23, f31, rmm # perform operation
fnmadd.h f18, f6, f23, f31, rne # perform operation
fnmadd.h f18, f6, f23, f31, rtz # perform operation
fnmadd.h f18, f6, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f6, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f6, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f6, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f6, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f6, f23, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x400)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f1, 0(x2) # load 0x00007c01 from memory into f1
la x2, scratch
li x3, 0x861e58f0263e03cc # load x3 with value 0x861e58f0263e03cc
sw x3, 0(x2) # store 0x861e58f0263e03cc in memory
flh f11, 0(x2) # load 0x861e58f0263e03cc from memory into f11
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f3, 0(x2) # load 0x00000400 from memory into f3
fnmadd.h f28, f1, f11, f3, dyn # perform operation
fnmadd.h f28, f1, f11, f3, rdn # perform operation
fnmadd.h f28, f1, f11, f3, rmm # perform operation
fnmadd.h f28, f1, f11, f3, rne # perform operation
fnmadd.h f28, f1, f11, f3, rtz # perform operation
fnmadd.h f28, f1, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f1, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f1, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f1, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f1, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f1, f11, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x8400)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f15, 0(x2) # load 0x00007c01 from memory into f15
la x2, scratch
li x3, 0x95c9c9d3608d2ad9 # load x3 with value 0x95c9c9d3608d2ad9
sw x3, 0(x2) # store 0x95c9c9d3608d2ad9 in memory
flh f10, 0(x2) # load 0x95c9c9d3608d2ad9 from memory into f10
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f9, 0(x2) # load 0x00008400 from memory into f9
fnmadd.h f29, f15, f10, f9, dyn # perform operation
fnmadd.h f29, f15, f10, f9, rdn # perform operation
fnmadd.h f29, f15, f10, f9, rmm # perform operation
fnmadd.h f29, f15, f10, f9, rne # perform operation
fnmadd.h f29, f15, f10, f9, rtz # perform operation
fnmadd.h f29, f15, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f15, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f15, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f15, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f15, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f15, f10, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f15, 0(x2) # load 0x00007c01 from memory into f15
la x2, scratch
li x3, 0x5a250c9cd766d322 # load x3 with value 0x5a250c9cd766d322
sw x3, 0(x2) # store 0x5a250c9cd766d322 in memory
flh f5, 0(x2) # load 0x5a250c9cd766d322 from memory into f5
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
fnmadd.h f18, f15, f5, f24, dyn # perform operation
fnmadd.h f18, f15, f5, f24, rdn # perform operation
fnmadd.h f18, f15, f5, f24, rmm # perform operation
fnmadd.h f18, f15, f5, f24, rne # perform operation
fnmadd.h f18, f15, f5, f24, rtz # perform operation
fnmadd.h f18, f15, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f15, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f15, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f15, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f15, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f15, f5, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f22, 0(x2) # load 0x00007c01 from memory into f22
la x2, scratch
li x3, 0xdbc40a81db2c7f4d # load x3 with value 0xdbc40a81db2c7f4d
sw x3, 0(x2) # store 0xdbc40a81db2c7f4d in memory
flh f24, 0(x2) # load 0xdbc40a81db2c7f4d from memory into f24
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f8, 0(x2) # load 0x0000fbff from memory into f8
fnmadd.h f2, f22, f24, f8, dyn # perform operation
fnmadd.h f2, f22, f24, f8, rdn # perform operation
fnmadd.h f2, f22, f24, f8, rmm # perform operation
fnmadd.h f2, f22, f24, f8, rne # perform operation
fnmadd.h f2, f22, f24, f8, rtz # perform operation
fnmadd.h f2, f22, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f22, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f22, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f22, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f22, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f22, f24, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f7, 0(x2) # load 0x00007c01 from memory into f7
la x2, scratch
li x3, 0x832fb2d4513d78e4 # load x3 with value 0x832fb2d4513d78e4
sw x3, 0(x2) # store 0x832fb2d4513d78e4 in memory
flh f21, 0(x2) # load 0x832fb2d4513d78e4 from memory into f21
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f19, 0(x2) # load 0x000003ff from memory into f19
fnmadd.h f6, f7, f21, f19, dyn # perform operation
fnmadd.h f6, f7, f21, f19, rdn # perform operation
fnmadd.h f6, f7, f21, f19, rmm # perform operation
fnmadd.h f6, f7, f21, f19, rne # perform operation
fnmadd.h f6, f7, f21, f19, rtz # perform operation
fnmadd.h f6, f7, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f7, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f7, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f7, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f7, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f7, f21, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f22, 0(x2) # load 0x00007c01 from memory into f22
la x2, scratch
li x3, 0xb188c83d5d858ce8 # load x3 with value 0xb188c83d5d858ce8
sw x3, 0(x2) # store 0xb188c83d5d858ce8 in memory
flh f17, 0(x2) # load 0xb188c83d5d858ce8 from memory into f17
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f9, 0(x2) # load 0x000083ff from memory into f9
fnmadd.h f2, f22, f17, f9, dyn # perform operation
fnmadd.h f2, f22, f17, f9, rdn # perform operation
fnmadd.h f2, f22, f17, f9, rmm # perform operation
fnmadd.h f2, f22, f17, f9, rne # perform operation
fnmadd.h f2, f22, f17, f9, rtz # perform operation
fnmadd.h f2, f22, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f22, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f22, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f22, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f22, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f22, f17, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x200)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f27, 0(x2) # load 0x00007c01 from memory into f27
la x2, scratch
li x3, 0xcdcddecfbcfb1291 # load x3 with value 0xcdcddecfbcfb1291
sw x3, 0(x2) # store 0xcdcddecfbcfb1291 in memory
flh f9, 0(x2) # load 0xcdcddecfbcfb1291 from memory into f9
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f23, 0(x2) # load 0x00000200 from memory into f23
fnmadd.h f8, f27, f9, f23, dyn # perform operation
fnmadd.h f8, f27, f9, f23, rdn # perform operation
fnmadd.h f8, f27, f9, f23, rmm # perform operation
fnmadd.h f8, f27, f9, f23, rne # perform operation
fnmadd.h f8, f27, f9, f23, rtz # perform operation
fnmadd.h f8, f27, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f27, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f27, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f27, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f27, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f27, f9, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x8200)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f3, 0(x2) # load 0x00007c01 from memory into f3
la x2, scratch
li x3, 0x9d9912837f2e9bcd # load x3 with value 0x9d9912837f2e9bcd
sw x3, 0(x2) # store 0x9d9912837f2e9bcd in memory
flh f22, 0(x2) # load 0x9d9912837f2e9bcd from memory into f22
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f14, 0(x2) # load 0x00008200 from memory into f14
fnmadd.h f11, f3, f22, f14, dyn # perform operation
fnmadd.h f11, f3, f22, f14, rdn # perform operation
fnmadd.h f11, f3, f22, f14, rmm # perform operation
fnmadd.h f11, f3, f22, f14, rne # perform operation
fnmadd.h f11, f3, f22, f14, rtz # perform operation
fnmadd.h f11, f3, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f3, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f3, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f3, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f3, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f3, f22, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x1)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f27, 0(x2) # load 0x00007c01 from memory into f27
la x2, scratch
li x3, 0x5038fa4d2594fed1 # load x3 with value 0x5038fa4d2594fed1
sw x3, 0(x2) # store 0x5038fa4d2594fed1 in memory
flh f23, 0(x2) # load 0x5038fa4d2594fed1 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f28, 0(x2) # load 0x00000001 from memory into f28
fnmadd.h f18, f27, f23, f28, dyn # perform operation
fnmadd.h f18, f27, f23, f28, rdn # perform operation
fnmadd.h f18, f27, f23, f28, rmm # perform operation
fnmadd.h f18, f27, f23, f28, rne # perform operation
fnmadd.h f18, f27, f23, f28, rtz # perform operation
fnmadd.h f18, f27, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f27, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f27, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f27, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f27, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f27, f23, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x8001)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f25, 0(x2) # load 0x00007c01 from memory into f25
la x2, scratch
li x3, 0xc97225b02a78e583 # load x3 with value 0xc97225b02a78e583
sw x3, 0(x2) # store 0xc97225b02a78e583 in memory
flh f27, 0(x2) # load 0xc97225b02a78e583 from memory into f27
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f16, 0(x2) # load 0x00008001 from memory into f16
fnmadd.h f11, f25, f27, f16, dyn # perform operation
fnmadd.h f11, f25, f27, f16, rdn # perform operation
fnmadd.h f11, f25, f27, f16, rmm # perform operation
fnmadd.h f11, f25, f27, f16, rne # perform operation
fnmadd.h f11, f25, f27, f16, rtz # perform operation
fnmadd.h f11, f25, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f25, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f25, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f25, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f25, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f25, f27, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
la x2, scratch
li x3, 0xe8a43b44b5cfe0f2 # load x3 with value 0xe8a43b44b5cfe0f2
sw x3, 0(x2) # store 0xe8a43b44b5cfe0f2 in memory
flh f24, 0(x2) # load 0xe8a43b44b5cfe0f2 from memory into f24
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f23, 0(x2) # load 0x00007c00 from memory into f23
fnmadd.h f18, f26, f24, f23, dyn # perform operation
fnmadd.h f18, f26, f24, f23, rdn # perform operation
fnmadd.h f18, f26, f24, f23, rmm # perform operation
fnmadd.h f18, f26, f24, f23, rne # perform operation
fnmadd.h f18, f26, f24, f23, rtz # perform operation
fnmadd.h f18, f26, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f26, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f26, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f26, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f26, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f26, f24, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
la x2, scratch
li x3, 0x80ad413eb08c3d90 # load x3 with value 0x80ad413eb08c3d90
sw x3, 0(x2) # store 0x80ad413eb08c3d90 in memory
flh f16, 0(x2) # load 0x80ad413eb08c3d90 from memory into f16
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f11, 0(x2) # load 0x0000fc00 from memory into f11
fnmadd.h f17, f20, f16, f11, dyn # perform operation
fnmadd.h f17, f20, f16, f11, rdn # perform operation
fnmadd.h f17, f20, f16, f11, rmm # perform operation
fnmadd.h f17, f20, f16, f11, rne # perform operation
fnmadd.h f17, f20, f16, f11, rtz # perform operation
fnmadd.h f17, f20, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f20, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f20, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f20, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f20, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f20, f16, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f27, 0(x2) # load 0x00007c01 from memory into f27
la x2, scratch
li x3, 0xb95fb2d994bc720f # load x3 with value 0xb95fb2d994bc720f
sw x3, 0(x2) # store 0xb95fb2d994bc720f in memory
flh f29, 0(x2) # load 0xb95fb2d994bc720f from memory into f29
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f31, 0(x2) # load 0x00007e00 from memory into f31
fnmadd.h f11, f27, f29, f31, dyn # perform operation
fnmadd.h f11, f27, f29, f31, rdn # perform operation
fnmadd.h f11, f27, f29, f31, rmm # perform operation
fnmadd.h f11, f27, f29, f31, rne # perform operation
fnmadd.h f11, f27, f29, f31, rtz # perform operation
fnmadd.h f11, f27, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f27, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f27, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f27, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f27, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f27, f29, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f18, 0(x2) # load 0x00007c01 from memory into f18
la x2, scratch
li x3, 0x348e107e1a4ed530 # load x3 with value 0x348e107e1a4ed530
sw x3, 0(x2) # store 0x348e107e1a4ed530 in memory
flh f9, 0(x2) # load 0x348e107e1a4ed530 from memory into f9
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f21, 0(x2) # load 0x00007fff from memory into f21
fnmadd.h f24, f18, f9, f21, dyn # perform operation
fnmadd.h f24, f18, f9, f21, rdn # perform operation
fnmadd.h f24, f18, f9, f21, rmm # perform operation
fnmadd.h f24, f18, f9, f21, rne # perform operation
fnmadd.h f24, f18, f9, f21, rtz # perform operation
fnmadd.h f24, f18, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f18, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f18, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f18, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f18, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f18, f9, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
la x2, scratch
li x3, 0xa7e339e71dec94ea # load x3 with value 0xa7e339e71dec94ea
sw x3, 0(x2) # store 0xa7e339e71dec94ea in memory
flh f2, 0(x2) # load 0xa7e339e71dec94ea from memory into f2
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f18, 0(x2) # load 0x0000fe00 from memory into f18
fnmadd.h f22, f30, f2, f18, dyn # perform operation
fnmadd.h f22, f30, f2, f18, rdn # perform operation
fnmadd.h f22, f30, f2, f18, rmm # perform operation
fnmadd.h f22, f30, f2, f18, rne # perform operation
fnmadd.h f22, f30, f2, f18, rtz # perform operation
fnmadd.h f22, f30, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f30, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f30, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f30, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f30, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f30, f2, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f31, 0(x2) # load 0x00007c01 from memory into f31
la x2, scratch
li x3, 0x89c7640c2c982842 # load x3 with value 0x89c7640c2c982842
sw x3, 0(x2) # store 0x89c7640c2c982842 in memory
flh f6, 0(x2) # load 0x89c7640c2c982842 from memory into f6
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f7, 0(x2) # load 0x00007c01 from memory into f7
fnmadd.h f3, f31, f6, f7, dyn # perform operation
fnmadd.h f3, f31, f6, f7, rdn # perform operation
fnmadd.h f3, f31, f6, f7, rmm # perform operation
fnmadd.h f3, f31, f6, f7, rne # perform operation
fnmadd.h f3, f31, f6, f7, rtz # perform operation
fnmadd.h f3, f31, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f31, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f31, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f31, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f31, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f31, f6, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
la x2, scratch
li x3, 0x3a4e725f11c8b129 # load x3 with value 0x3a4e725f11c8b129
sw x3, 0(x2) # store 0x3a4e725f11c8b129 in memory
flh f31, 0(x2) # load 0x3a4e725f11c8b129 from memory into f31
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f9, 0(x2) # load 0x00007dff from memory into f9
fnmadd.h f21, f20, f31, f9, dyn # perform operation
fnmadd.h f21, f20, f31, f9, rdn # perform operation
fnmadd.h f21, f20, f31, f9, rmm # perform operation
fnmadd.h f21, f20, f31, f9, rne # perform operation
fnmadd.h f21, f20, f31, f9, rtz # perform operation
fnmadd.h f21, f20, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f20, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f20, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f20, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f20, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f20, f31, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f17, 0(x2) # load 0x00007c01 from memory into f17
la x2, scratch
li x3, 0x3bf82dce772e579 # load x3 with value 0x3bf82dce772e579
sw x3, 0(x2) # store 0x3bf82dce772e579 in memory
flh f27, 0(x2) # load 0x3bf82dce772e579 from memory into f27
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f19, 0(x2) # load 0x0000fc01 from memory into f19
fnmadd.h f16, f17, f27, f19, dyn # perform operation
fnmadd.h f16, f17, f27, f19, rdn # perform operation
fnmadd.h f16, f17, f27, f19, rmm # perform operation
fnmadd.h f16, f17, f27, f19, rne # perform operation
fnmadd.h f16, f17, f27, f19, rtz # perform operation
fnmadd.h f16, f17, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f17, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f17, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f17, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f17, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f17, f27, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f6, 0(x2) # load 0x00007c01 from memory into f6
la x2, scratch
li x3, 0xa95357a2cb3cef5a # load x3 with value 0xa95357a2cb3cef5a
sw x3, 0(x2) # store 0xa95357a2cb3cef5a in memory
flh f23, 0(x2) # load 0xa95357a2cb3cef5a from memory into f23
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f14, 0(x2) # load 0x000058b4 from memory into f14
fnmadd.h f20, f6, f23, f14, dyn # perform operation
fnmadd.h f20, f6, f23, f14, rdn # perform operation
fnmadd.h f20, f6, f23, f14, rmm # perform operation
fnmadd.h f20, f6, f23, f14, rne # perform operation
fnmadd.h f20, f6, f23, f14, rtz # perform operation
fnmadd.h f20, f6, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f6, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f6, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f6, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f6, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f6, f23, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f1, 0(x2) # load 0x00007c01 from memory into f1
la x2, scratch
li x3, 0xe1e5e6ccfc390694 # load x3 with value 0xe1e5e6ccfc390694
sw x3, 0(x2) # store 0xe1e5e6ccfc390694 in memory
flh f19, 0(x2) # load 0xe1e5e6ccfc390694 from memory into f19
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f24, 0(x2) # load 0x0000c93a from memory into f24
fnmadd.h f5, f1, f19, f24, dyn # perform operation
fnmadd.h f5, f1, f19, f24, rdn # perform operation
fnmadd.h f5, f1, f19, f24, rmm # perform operation
fnmadd.h f5, f1, f19, f24, rne # perform operation
fnmadd.h f5, f1, f19, f24, rtz # perform operation
fnmadd.h f5, f1, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f1, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f1, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f1, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f1, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f1, f19, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x0)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f19, 0(x2) # load 0x00007dff from memory into f19
la x2, scratch
li x3, 0xf15d9bad49bfe932 # load x3 with value 0xf15d9bad49bfe932
sw x3, 0(x2) # store 0xf15d9bad49bfe932 in memory
flh f28, 0(x2) # load 0xf15d9bad49bfe932 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f20, 0(x2) # load 0x00000000 from memory into f20
fnmadd.h f17, f19, f28, f20, dyn # perform operation
fnmadd.h f17, f19, f28, f20, rdn # perform operation
fnmadd.h f17, f19, f28, f20, rmm # perform operation
fnmadd.h f17, f19, f28, f20, rne # perform operation
fnmadd.h f17, f19, f28, f20, rtz # perform operation
fnmadd.h f17, f19, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f19, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f19, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f19, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f19, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f19, f28, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x8000)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f16, 0(x2) # load 0x00007dff from memory into f16
la x2, scratch
li x3, 0x5e8f5de6096d1e65 # load x3 with value 0x5e8f5de6096d1e65
sw x3, 0(x2) # store 0x5e8f5de6096d1e65 in memory
flh f23, 0(x2) # load 0x5e8f5de6096d1e65 from memory into f23
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f1, 0(x2) # load 0x00008000 from memory into f1
fnmadd.h f6, f16, f23, f1, dyn # perform operation
fnmadd.h f6, f16, f23, f1, rdn # perform operation
fnmadd.h f6, f16, f23, f1, rmm # perform operation
fnmadd.h f6, f16, f23, f1, rne # perform operation
fnmadd.h f6, f16, f23, f1, rtz # perform operation
fnmadd.h f6, f16, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f16, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f16, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f16, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f16, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f16, f23, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x3c00)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f18, 0(x2) # load 0x00007dff from memory into f18
la x2, scratch
li x3, 0xc519250a07ec4543 # load x3 with value 0xc519250a07ec4543
sw x3, 0(x2) # store 0xc519250a07ec4543 in memory
flh f12, 0(x2) # load 0xc519250a07ec4543 from memory into f12
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
fnmadd.h f15, f18, f12, f8, dyn # perform operation
fnmadd.h f15, f18, f12, f8, rdn # perform operation
fnmadd.h f15, f18, f12, f8, rmm # perform operation
fnmadd.h f15, f18, f12, f8, rne # perform operation
fnmadd.h f15, f18, f12, f8, rtz # perform operation
fnmadd.h f15, f18, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f18, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f18, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f18, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f18, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f18, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xbc00)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f30, 0(x2) # load 0x00007dff from memory into f30
la x2, scratch
li x3, 0xdf3e36b29e25afa2 # load x3 with value 0xdf3e36b29e25afa2
sw x3, 0(x2) # store 0xdf3e36b29e25afa2 in memory
flh f5, 0(x2) # load 0xdf3e36b29e25afa2 from memory into f5
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f15, 0(x2) # load 0x0000bc00 from memory into f15
fnmadd.h f8, f30, f5, f15, dyn # perform operation
fnmadd.h f8, f30, f5, f15, rdn # perform operation
fnmadd.h f8, f30, f5, f15, rmm # perform operation
fnmadd.h f8, f30, f5, f15, rne # perform operation
fnmadd.h f8, f30, f5, f15, rtz # perform operation
fnmadd.h f8, f30, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f30, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f30, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f30, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f30, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f30, f5, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x3e00)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f24, 0(x2) # load 0x00007dff from memory into f24
la x2, scratch
li x3, 0x56b82db97da6c0c # load x3 with value 0x56b82db97da6c0c
sw x3, 0(x2) # store 0x56b82db97da6c0c in memory
flh f25, 0(x2) # load 0x56b82db97da6c0c from memory into f25
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f11, 0(x2) # load 0x00003e00 from memory into f11
fnmadd.h f18, f24, f25, f11, dyn # perform operation
fnmadd.h f18, f24, f25, f11, rdn # perform operation
fnmadd.h f18, f24, f25, f11, rmm # perform operation
fnmadd.h f18, f24, f25, f11, rne # perform operation
fnmadd.h f18, f24, f25, f11, rtz # perform operation
fnmadd.h f18, f24, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f24, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f24, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f24, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f24, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f24, f25, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xbe00)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f5, 0(x2) # load 0x00007dff from memory into f5
la x2, scratch
li x3, 0xee1de272d7417401 # load x3 with value 0xee1de272d7417401
sw x3, 0(x2) # store 0xee1de272d7417401 in memory
flh f18, 0(x2) # load 0xee1de272d7417401 from memory into f18
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f17, 0(x2) # load 0x0000be00 from memory into f17
fnmadd.h f21, f5, f18, f17, dyn # perform operation
fnmadd.h f21, f5, f18, f17, rdn # perform operation
fnmadd.h f21, f5, f18, f17, rmm # perform operation
fnmadd.h f21, f5, f18, f17, rne # perform operation
fnmadd.h f21, f5, f18, f17, rtz # perform operation
fnmadd.h f21, f5, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f5, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f5, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f5, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f5, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f5, f18, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x4000)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f16, 0(x2) # load 0x00007dff from memory into f16
la x2, scratch
li x3, 0xfb12a1228f4f5c17 # load x3 with value 0xfb12a1228f4f5c17
sw x3, 0(x2) # store 0xfb12a1228f4f5c17 in memory
flh f21, 0(x2) # load 0xfb12a1228f4f5c17 from memory into f21
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f30, 0(x2) # load 0x00004000 from memory into f30
fnmadd.h f27, f16, f21, f30, dyn # perform operation
fnmadd.h f27, f16, f21, f30, rdn # perform operation
fnmadd.h f27, f16, f21, f30, rmm # perform operation
fnmadd.h f27, f16, f21, f30, rne # perform operation
fnmadd.h f27, f16, f21, f30, rtz # perform operation
fnmadd.h f27, f16, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f16, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f16, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f16, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f16, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f16, f21, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xc000)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f13, 0(x2) # load 0x00007dff from memory into f13
la x2, scratch
li x3, 0x84a0314a2f89c97 # load x3 with value 0x84a0314a2f89c97
sw x3, 0(x2) # store 0x84a0314a2f89c97 in memory
flh f8, 0(x2) # load 0x84a0314a2f89c97 from memory into f8
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f29, 0(x2) # load 0x0000c000 from memory into f29
fnmadd.h f31, f13, f8, f29, dyn # perform operation
fnmadd.h f31, f13, f8, f29, rdn # perform operation
fnmadd.h f31, f13, f8, f29, rmm # perform operation
fnmadd.h f31, f13, f8, f29, rne # perform operation
fnmadd.h f31, f13, f8, f29, rtz # perform operation
fnmadd.h f31, f13, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f13, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f13, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f13, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f13, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f13, f8, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x400)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f6, 0(x2) # load 0x00007dff from memory into f6
la x2, scratch
li x3, 0xbd53c60c54117c04 # load x3 with value 0xbd53c60c54117c04
sw x3, 0(x2) # store 0xbd53c60c54117c04 in memory
flh f12, 0(x2) # load 0xbd53c60c54117c04 from memory into f12
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f20, 0(x2) # load 0x00000400 from memory into f20
fnmadd.h f9, f6, f12, f20, dyn # perform operation
fnmadd.h f9, f6, f12, f20, rdn # perform operation
fnmadd.h f9, f6, f12, f20, rmm # perform operation
fnmadd.h f9, f6, f12, f20, rne # perform operation
fnmadd.h f9, f6, f12, f20, rtz # perform operation
fnmadd.h f9, f6, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f6, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f6, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f6, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f6, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f6, f12, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x8400)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f22, 0(x2) # load 0x00007dff from memory into f22
la x2, scratch
li x3, 0x1250bb94224d70a2 # load x3 with value 0x1250bb94224d70a2
sw x3, 0(x2) # store 0x1250bb94224d70a2 in memory
flh f14, 0(x2) # load 0x1250bb94224d70a2 from memory into f14
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f20, 0(x2) # load 0x00008400 from memory into f20
fnmadd.h f9, f22, f14, f20, dyn # perform operation
fnmadd.h f9, f22, f14, f20, rdn # perform operation
fnmadd.h f9, f22, f14, f20, rmm # perform operation
fnmadd.h f9, f22, f14, f20, rne # perform operation
fnmadd.h f9, f22, f14, f20, rtz # perform operation
fnmadd.h f9, f22, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f22, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f22, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f22, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f22, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f22, f14, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7bff)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f21, 0(x2) # load 0x00007dff from memory into f21
la x2, scratch
li x3, 0x852184211f89ac77 # load x3 with value 0x852184211f89ac77
sw x3, 0(x2) # store 0x852184211f89ac77 in memory
flh f3, 0(x2) # load 0x852184211f89ac77 from memory into f3
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f20, 0(x2) # load 0x00007bff from memory into f20
fnmadd.h f31, f21, f3, f20, dyn # perform operation
fnmadd.h f31, f21, f3, f20, rdn # perform operation
fnmadd.h f31, f21, f3, f20, rmm # perform operation
fnmadd.h f31, f21, f3, f20, rne # perform operation
fnmadd.h f31, f21, f3, f20, rtz # perform operation
fnmadd.h f31, f21, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f21, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f21, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f21, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f21, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f21, f3, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xfbff)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f30, 0(x2) # load 0x00007dff from memory into f30
la x2, scratch
li x3, 0xc0b41f9be3342658 # load x3 with value 0xc0b41f9be3342658
sw x3, 0(x2) # store 0xc0b41f9be3342658 in memory
flh f6, 0(x2) # load 0xc0b41f9be3342658 from memory into f6
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f10, 0(x2) # load 0x0000fbff from memory into f10
fnmadd.h f14, f30, f6, f10, dyn # perform operation
fnmadd.h f14, f30, f6, f10, rdn # perform operation
fnmadd.h f14, f30, f6, f10, rmm # perform operation
fnmadd.h f14, f30, f6, f10, rne # perform operation
fnmadd.h f14, f30, f6, f10, rtz # perform operation
fnmadd.h f14, f30, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f30, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f30, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f30, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f30, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f30, f6, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x3ff)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f28, 0(x2) # load 0x00007dff from memory into f28
la x2, scratch
li x3, 0x3924fcec35533e97 # load x3 with value 0x3924fcec35533e97
sw x3, 0(x2) # store 0x3924fcec35533e97 in memory
flh f9, 0(x2) # load 0x3924fcec35533e97 from memory into f9
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f16, 0(x2) # load 0x000003ff from memory into f16
fnmadd.h f22, f28, f9, f16, dyn # perform operation
fnmadd.h f22, f28, f9, f16, rdn # perform operation
fnmadd.h f22, f28, f9, f16, rmm # perform operation
fnmadd.h f22, f28, f9, f16, rne # perform operation
fnmadd.h f22, f28, f9, f16, rtz # perform operation
fnmadd.h f22, f28, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f28, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f28, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f28, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f28, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f28, f9, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x83ff)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f17, 0(x2) # load 0x00007dff from memory into f17
la x2, scratch
li x3, 0x4354420f77e2b86a # load x3 with value 0x4354420f77e2b86a
sw x3, 0(x2) # store 0x4354420f77e2b86a in memory
flh f22, 0(x2) # load 0x4354420f77e2b86a from memory into f22
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f23, 0(x2) # load 0x000083ff from memory into f23
fnmadd.h f9, f17, f22, f23, dyn # perform operation
fnmadd.h f9, f17, f22, f23, rdn # perform operation
fnmadd.h f9, f17, f22, f23, rmm # perform operation
fnmadd.h f9, f17, f22, f23, rne # perform operation
fnmadd.h f9, f17, f22, f23, rtz # perform operation
fnmadd.h f9, f17, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f17, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f17, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f17, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f17, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f17, f22, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x200)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f15, 0(x2) # load 0x00007dff from memory into f15
la x2, scratch
li x3, 0xb07e2cea66ba6caf # load x3 with value 0xb07e2cea66ba6caf
sw x3, 0(x2) # store 0xb07e2cea66ba6caf in memory
flh f16, 0(x2) # load 0xb07e2cea66ba6caf from memory into f16
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f28, 0(x2) # load 0x00000200 from memory into f28
fnmadd.h f26, f15, f16, f28, dyn # perform operation
fnmadd.h f26, f15, f16, f28, rdn # perform operation
fnmadd.h f26, f15, f16, f28, rmm # perform operation
fnmadd.h f26, f15, f16, f28, rne # perform operation
fnmadd.h f26, f15, f16, f28, rtz # perform operation
fnmadd.h f26, f15, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f15, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f15, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f15, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f15, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f15, f16, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x8200)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f19, 0(x2) # load 0x00007dff from memory into f19
la x2, scratch
li x3, 0xa30cd92119179b09 # load x3 with value 0xa30cd92119179b09
sw x3, 0(x2) # store 0xa30cd92119179b09 in memory
flh f9, 0(x2) # load 0xa30cd92119179b09 from memory into f9
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f14, 0(x2) # load 0x00008200 from memory into f14
fnmadd.h f20, f19, f9, f14, dyn # perform operation
fnmadd.h f20, f19, f9, f14, rdn # perform operation
fnmadd.h f20, f19, f9, f14, rmm # perform operation
fnmadd.h f20, f19, f9, f14, rne # perform operation
fnmadd.h f20, f19, f9, f14, rtz # perform operation
fnmadd.h f20, f19, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f19, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f19, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f19, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f19, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f19, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x1)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f29, 0(x2) # load 0x00007dff from memory into f29
la x2, scratch
li x3, 0x4a43f395d219f40 # load x3 with value 0x4a43f395d219f40
sw x3, 0(x2) # store 0x4a43f395d219f40 in memory
flh f18, 0(x2) # load 0x4a43f395d219f40 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f21, 0(x2) # load 0x00000001 from memory into f21
fnmadd.h f19, f29, f18, f21, dyn # perform operation
fnmadd.h f19, f29, f18, f21, rdn # perform operation
fnmadd.h f19, f29, f18, f21, rmm # perform operation
fnmadd.h f19, f29, f18, f21, rne # perform operation
fnmadd.h f19, f29, f18, f21, rtz # perform operation
fnmadd.h f19, f29, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f29, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f29, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f29, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f29, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f29, f18, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x8001)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f15, 0(x2) # load 0x00007dff from memory into f15
la x2, scratch
li x3, 0xc866465215f11725 # load x3 with value 0xc866465215f11725
sw x3, 0(x2) # store 0xc866465215f11725 in memory
flh f13, 0(x2) # load 0xc866465215f11725 from memory into f13
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f25, 0(x2) # load 0x00008001 from memory into f25
fnmadd.h f1, f15, f13, f25, dyn # perform operation
fnmadd.h f1, f15, f13, f25, rdn # perform operation
fnmadd.h f1, f15, f13, f25, rmm # perform operation
fnmadd.h f1, f15, f13, f25, rne # perform operation
fnmadd.h f1, f15, f13, f25, rtz # perform operation
fnmadd.h f1, f15, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f15, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f15, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f15, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f15, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f15, f13, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7c00)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f21, 0(x2) # load 0x00007dff from memory into f21
la x2, scratch
li x3, 0xab58bef9cfe01b6b # load x3 with value 0xab58bef9cfe01b6b
sw x3, 0(x2) # store 0xab58bef9cfe01b6b in memory
flh f17, 0(x2) # load 0xab58bef9cfe01b6b from memory into f17
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f14, 0(x2) # load 0x00007c00 from memory into f14
fnmadd.h f19, f21, f17, f14, dyn # perform operation
fnmadd.h f19, f21, f17, f14, rdn # perform operation
fnmadd.h f19, f21, f17, f14, rmm # perform operation
fnmadd.h f19, f21, f17, f14, rne # perform operation
fnmadd.h f19, f21, f17, f14, rtz # perform operation
fnmadd.h f19, f21, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f21, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f21, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f21, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f21, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f21, f17, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xfc00)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f7, 0(x2) # load 0x00007dff from memory into f7
la x2, scratch
li x3, 0x73551f6a4d406da # load x3 with value 0x73551f6a4d406da
sw x3, 0(x2) # store 0x73551f6a4d406da in memory
flh f27, 0(x2) # load 0x73551f6a4d406da from memory into f27
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f22, 0(x2) # load 0x0000fc00 from memory into f22
fnmadd.h f6, f7, f27, f22, dyn # perform operation
fnmadd.h f6, f7, f27, f22, rdn # perform operation
fnmadd.h f6, f7, f27, f22, rmm # perform operation
fnmadd.h f6, f7, f27, f22, rne # perform operation
fnmadd.h f6, f7, f27, f22, rtz # perform operation
fnmadd.h f6, f7, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f7, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f7, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f7, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f7, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f7, f27, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7e00)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f5, 0(x2) # load 0x00007dff from memory into f5
la x2, scratch
li x3, 0xced2a222fc6b64a1 # load x3 with value 0xced2a222fc6b64a1
sw x3, 0(x2) # store 0xced2a222fc6b64a1 in memory
flh f28, 0(x2) # load 0xced2a222fc6b64a1 from memory into f28
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
fnmadd.h f25, f5, f28, f20, dyn # perform operation
fnmadd.h f25, f5, f28, f20, rdn # perform operation
fnmadd.h f25, f5, f28, f20, rmm # perform operation
fnmadd.h f25, f5, f28, f20, rne # perform operation
fnmadd.h f25, f5, f28, f20, rtz # perform operation
fnmadd.h f25, f5, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f5, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f5, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f5, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f5, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f5, f28, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7fff)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f28, 0(x2) # load 0x00007dff from memory into f28
la x2, scratch
li x3, 0x9a21537354abcfba # load x3 with value 0x9a21537354abcfba
sw x3, 0(x2) # store 0x9a21537354abcfba in memory
flh f20, 0(x2) # load 0x9a21537354abcfba from memory into f20
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f13, 0(x2) # load 0x00007fff from memory into f13
fnmadd.h f16, f28, f20, f13, dyn # perform operation
fnmadd.h f16, f28, f20, f13, rdn # perform operation
fnmadd.h f16, f28, f20, f13, rmm # perform operation
fnmadd.h f16, f28, f20, f13, rne # perform operation
fnmadd.h f16, f28, f20, f13, rtz # perform operation
fnmadd.h f16, f28, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f28, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f28, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f28, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f28, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f28, f20, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xfe00)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f3, 0(x2) # load 0x00007dff from memory into f3
la x2, scratch
li x3, 0x80f2e19f0e5d336a # load x3 with value 0x80f2e19f0e5d336a
sw x3, 0(x2) # store 0x80f2e19f0e5d336a in memory
flh f15, 0(x2) # load 0x80f2e19f0e5d336a from memory into f15
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f10, 0(x2) # load 0x0000fe00 from memory into f10
fnmadd.h f28, f3, f15, f10, dyn # perform operation
fnmadd.h f28, f3, f15, f10, rdn # perform operation
fnmadd.h f28, f3, f15, f10, rmm # perform operation
fnmadd.h f28, f3, f15, f10, rne # perform operation
fnmadd.h f28, f3, f15, f10, rtz # perform operation
fnmadd.h f28, f3, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f3, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f3, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f3, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f3, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f3, f15, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7c01)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f22, 0(x2) # load 0x00007dff from memory into f22
la x2, scratch
li x3, 0x2d5ec7b29023539e # load x3 with value 0x2d5ec7b29023539e
sw x3, 0(x2) # store 0x2d5ec7b29023539e in memory
flh f17, 0(x2) # load 0x2d5ec7b29023539e from memory into f17
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f19, 0(x2) # load 0x00007c01 from memory into f19
fnmadd.h f8, f22, f17, f19, dyn # perform operation
fnmadd.h f8, f22, f17, f19, rdn # perform operation
fnmadd.h f8, f22, f17, f19, rmm # perform operation
fnmadd.h f8, f22, f17, f19, rne # perform operation
fnmadd.h f8, f22, f17, f19, rtz # perform operation
fnmadd.h f8, f22, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f22, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f22, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f22, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f22, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f22, f17, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7dff)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f5, 0(x2) # load 0x00007dff from memory into f5
la x2, scratch
li x3, 0x7d1e55a597a8158e # load x3 with value 0x7d1e55a597a8158e
sw x3, 0(x2) # store 0x7d1e55a597a8158e in memory
flh f16, 0(x2) # load 0x7d1e55a597a8158e from memory into f16
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f11, 0(x2) # load 0x00007dff from memory into f11
fnmadd.h f12, f5, f16, f11, dyn # perform operation
fnmadd.h f12, f5, f16, f11, rdn # perform operation
fnmadd.h f12, f5, f16, f11, rmm # perform operation
fnmadd.h f12, f5, f16, f11, rne # perform operation
fnmadd.h f12, f5, f16, f11, rtz # perform operation
fnmadd.h f12, f5, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f5, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f5, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f5, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f5, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f5, f16, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xfc01)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f11, 0(x2) # load 0x00007dff from memory into f11
la x2, scratch
li x3, 0x65e936a0329da93a # load x3 with value 0x65e936a0329da93a
sw x3, 0(x2) # store 0x65e936a0329da93a in memory
flh f3, 0(x2) # load 0x65e936a0329da93a from memory into f3
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f15, 0(x2) # load 0x0000fc01 from memory into f15
fnmadd.h f22, f11, f3, f15, dyn # perform operation
fnmadd.h f22, f11, f3, f15, rdn # perform operation
fnmadd.h f22, f11, f3, f15, rmm # perform operation
fnmadd.h f22, f11, f3, f15, rne # perform operation
fnmadd.h f22, f11, f3, f15, rtz # perform operation
fnmadd.h f22, f11, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f11, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f11, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f11, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f11, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f11, f3, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x58b4)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f5, 0(x2) # load 0x00007dff from memory into f5
la x2, scratch
li x3, 0xc2d7e9ac5290681e # load x3 with value 0xc2d7e9ac5290681e
sw x3, 0(x2) # store 0xc2d7e9ac5290681e in memory
flh f23, 0(x2) # load 0xc2d7e9ac5290681e from memory into f23
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f27, 0(x2) # load 0x000058b4 from memory into f27
fnmadd.h f28, f5, f23, f27, dyn # perform operation
fnmadd.h f28, f5, f23, f27, rdn # perform operation
fnmadd.h f28, f5, f23, f27, rmm # perform operation
fnmadd.h f28, f5, f23, f27, rne # perform operation
fnmadd.h f28, f5, f23, f27, rtz # perform operation
fnmadd.h f28, f5, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f5, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f5, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f5, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f5, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f5, f23, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xc93a)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f23, 0(x2) # load 0x00007dff from memory into f23
la x2, scratch
li x3, 0x3c2704a4e5ee5f0 # load x3 with value 0x3c2704a4e5ee5f0
sw x3, 0(x2) # store 0x3c2704a4e5ee5f0 in memory
flh f15, 0(x2) # load 0x3c2704a4e5ee5f0 from memory into f15
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f19, 0(x2) # load 0x0000c93a from memory into f19
fnmadd.h f13, f23, f15, f19, dyn # perform operation
fnmadd.h f13, f23, f15, f19, rdn # perform operation
fnmadd.h f13, f23, f15, f19, rmm # perform operation
fnmadd.h f13, f23, f15, f19, rne # perform operation
fnmadd.h f13, f23, f15, f19, rtz # perform operation
fnmadd.h f13, f23, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f23, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f23, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f23, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f23, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f23, f15, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x0)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f12, 0(x2) # load 0x0000fc01 from memory into f12
la x2, scratch
li x3, 0xb41a207181252ab5 # load x3 with value 0xb41a207181252ab5
sw x3, 0(x2) # store 0xb41a207181252ab5 in memory
flh f11, 0(x2) # load 0xb41a207181252ab5 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
fnmadd.h f10, f12, f11, f31, dyn # perform operation
fnmadd.h f10, f12, f11, f31, rdn # perform operation
fnmadd.h f10, f12, f11, f31, rmm # perform operation
fnmadd.h f10, f12, f11, f31, rne # perform operation
fnmadd.h f10, f12, f11, f31, rtz # perform operation
fnmadd.h f10, f12, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f12, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f12, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f12, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f12, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f12, f11, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x8000)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f3, 0(x2) # load 0x0000fc01 from memory into f3
la x2, scratch
li x3, 0xad2754ed8d81c8e8 # load x3 with value 0xad2754ed8d81c8e8
sw x3, 0(x2) # store 0xad2754ed8d81c8e8 in memory
flh f22, 0(x2) # load 0xad2754ed8d81c8e8 from memory into f22
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f31, 0(x2) # load 0x00008000 from memory into f31
fnmadd.h f15, f3, f22, f31, dyn # perform operation
fnmadd.h f15, f3, f22, f31, rdn # perform operation
fnmadd.h f15, f3, f22, f31, rmm # perform operation
fnmadd.h f15, f3, f22, f31, rne # perform operation
fnmadd.h f15, f3, f22, f31, rtz # perform operation
fnmadd.h f15, f3, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f3, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f3, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f3, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f3, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f3, f22, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x3c00)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f27, 0(x2) # load 0x0000fc01 from memory into f27
la x2, scratch
li x3, 0x166969f205174f5d # load x3 with value 0x166969f205174f5d
sw x3, 0(x2) # store 0x166969f205174f5d in memory
flh f24, 0(x2) # load 0x166969f205174f5d from memory into f24
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f28, 0(x2) # load 0x00003c00 from memory into f28
fnmadd.h f5, f27, f24, f28, dyn # perform operation
fnmadd.h f5, f27, f24, f28, rdn # perform operation
fnmadd.h f5, f27, f24, f28, rmm # perform operation
fnmadd.h f5, f27, f24, f28, rne # perform operation
fnmadd.h f5, f27, f24, f28, rtz # perform operation
fnmadd.h f5, f27, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f27, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f27, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f27, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f27, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f27, f24, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0xbc00)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f15, 0(x2) # load 0x0000fc01 from memory into f15
la x2, scratch
li x3, 0xc260a4f1ea2e941 # load x3 with value 0xc260a4f1ea2e941
sw x3, 0(x2) # store 0xc260a4f1ea2e941 in memory
flh f25, 0(x2) # load 0xc260a4f1ea2e941 from memory into f25
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f17, 0(x2) # load 0x0000bc00 from memory into f17
fnmadd.h f19, f15, f25, f17, dyn # perform operation
fnmadd.h f19, f15, f25, f17, rdn # perform operation
fnmadd.h f19, f15, f25, f17, rmm # perform operation
fnmadd.h f19, f15, f25, f17, rne # perform operation
fnmadd.h f19, f15, f25, f17, rtz # perform operation
fnmadd.h f19, f15, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f15, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f15, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f15, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f15, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f15, f25, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x3e00)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f25, 0(x2) # load 0x0000fc01 from memory into f25
la x2, scratch
li x3, 0xa9bd90de1029de1 # load x3 with value 0xa9bd90de1029de1
sw x3, 0(x2) # store 0xa9bd90de1029de1 in memory
flh f12, 0(x2) # load 0xa9bd90de1029de1 from memory into f12
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f5, 0(x2) # load 0x00003e00 from memory into f5
fnmadd.h f27, f25, f12, f5, dyn # perform operation
fnmadd.h f27, f25, f12, f5, rdn # perform operation
fnmadd.h f27, f25, f12, f5, rmm # perform operation
fnmadd.h f27, f25, f12, f5, rne # perform operation
fnmadd.h f27, f25, f12, f5, rtz # perform operation
fnmadd.h f27, f25, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f25, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f25, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f25, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f25, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f25, f12, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0xbe00)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f3, 0(x2) # load 0x0000fc01 from memory into f3
la x2, scratch
li x3, 0x32def20e718628e # load x3 with value 0x32def20e718628e
sw x3, 0(x2) # store 0x32def20e718628e in memory
flh f31, 0(x2) # load 0x32def20e718628e from memory into f31
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f13, 0(x2) # load 0x0000be00 from memory into f13
fnmadd.h f9, f3, f31, f13, dyn # perform operation
fnmadd.h f9, f3, f31, f13, rdn # perform operation
fnmadd.h f9, f3, f31, f13, rmm # perform operation
fnmadd.h f9, f3, f31, f13, rne # perform operation
fnmadd.h f9, f3, f31, f13, rtz # perform operation
fnmadd.h f9, f3, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f3, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f3, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f3, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f3, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f3, f31, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x4000)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f23, 0(x2) # load 0x0000fc01 from memory into f23
la x2, scratch
li x3, 0xf0e2e19e70282899 # load x3 with value 0xf0e2e19e70282899
sw x3, 0(x2) # store 0xf0e2e19e70282899 in memory
flh f28, 0(x2) # load 0xf0e2e19e70282899 from memory into f28
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f15, 0(x2) # load 0x00004000 from memory into f15
fnmadd.h f12, f23, f28, f15, dyn # perform operation
fnmadd.h f12, f23, f28, f15, rdn # perform operation
fnmadd.h f12, f23, f28, f15, rmm # perform operation
fnmadd.h f12, f23, f28, f15, rne # perform operation
fnmadd.h f12, f23, f28, f15, rtz # perform operation
fnmadd.h f12, f23, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f23, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f23, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f23, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f23, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f23, f28, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0xc000)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f3, 0(x2) # load 0x0000fc01 from memory into f3
la x2, scratch
li x3, 0x439195b952bec0e1 # load x3 with value 0x439195b952bec0e1
sw x3, 0(x2) # store 0x439195b952bec0e1 in memory
flh f31, 0(x2) # load 0x439195b952bec0e1 from memory into f31
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f18, 0(x2) # load 0x0000c000 from memory into f18
fnmadd.h f5, f3, f31, f18, dyn # perform operation
fnmadd.h f5, f3, f31, f18, rdn # perform operation
fnmadd.h f5, f3, f31, f18, rmm # perform operation
fnmadd.h f5, f3, f31, f18, rne # perform operation
fnmadd.h f5, f3, f31, f18, rtz # perform operation
fnmadd.h f5, f3, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f3, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f3, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f3, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f3, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f3, f31, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x400)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f30, 0(x2) # load 0x0000fc01 from memory into f30
la x2, scratch
li x3, 0xbc7f4307a39f1f4 # load x3 with value 0xbc7f4307a39f1f4
sw x3, 0(x2) # store 0xbc7f4307a39f1f4 in memory
flh f25, 0(x2) # load 0xbc7f4307a39f1f4 from memory into f25
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f17, 0(x2) # load 0x00000400 from memory into f17
fnmadd.h f14, f30, f25, f17, dyn # perform operation
fnmadd.h f14, f30, f25, f17, rdn # perform operation
fnmadd.h f14, f30, f25, f17, rmm # perform operation
fnmadd.h f14, f30, f25, f17, rne # perform operation
fnmadd.h f14, f30, f25, f17, rtz # perform operation
fnmadd.h f14, f30, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f30, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f30, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f30, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f30, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f30, f25, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x8400)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f30, 0(x2) # load 0x0000fc01 from memory into f30
la x2, scratch
li x3, 0x74157f74cc6168b # load x3 with value 0x74157f74cc6168b
sw x3, 0(x2) # store 0x74157f74cc6168b in memory
flh f18, 0(x2) # load 0x74157f74cc6168b from memory into f18
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f1, 0(x2) # load 0x00008400 from memory into f1
fnmadd.h f9, f30, f18, f1, dyn # perform operation
fnmadd.h f9, f30, f18, f1, rdn # perform operation
fnmadd.h f9, f30, f18, f1, rmm # perform operation
fnmadd.h f9, f30, f18, f1, rne # perform operation
fnmadd.h f9, f30, f18, f1, rtz # perform operation
fnmadd.h f9, f30, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f30, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f30, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f30, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f30, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f30, f18, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x7bff)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f5, 0(x2) # load 0x0000fc01 from memory into f5
la x2, scratch
li x3, 0x852db8ce78412322 # load x3 with value 0x852db8ce78412322
sw x3, 0(x2) # store 0x852db8ce78412322 in memory
flh f9, 0(x2) # load 0x852db8ce78412322 from memory into f9
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f14, 0(x2) # load 0x00007bff from memory into f14
fnmadd.h f20, f5, f9, f14, dyn # perform operation
fnmadd.h f20, f5, f9, f14, rdn # perform operation
fnmadd.h f20, f5, f9, f14, rmm # perform operation
fnmadd.h f20, f5, f9, f14, rne # perform operation
fnmadd.h f20, f5, f9, f14, rtz # perform operation
fnmadd.h f20, f5, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f5, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0xfbff)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f16, 0(x2) # load 0x0000fc01 from memory into f16
la x2, scratch
li x3, 0xfb5cfb70b5e74c7f # load x3 with value 0xfb5cfb70b5e74c7f
sw x3, 0(x2) # store 0xfb5cfb70b5e74c7f in memory
flh f6, 0(x2) # load 0xfb5cfb70b5e74c7f from memory into f6
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f31, 0(x2) # load 0x0000fbff from memory into f31
fnmadd.h f17, f16, f6, f31, dyn # perform operation
fnmadd.h f17, f16, f6, f31, rdn # perform operation
fnmadd.h f17, f16, f6, f31, rmm # perform operation
fnmadd.h f17, f16, f6, f31, rne # perform operation
fnmadd.h f17, f16, f6, f31, rtz # perform operation
fnmadd.h f17, f16, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f16, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f16, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f16, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f16, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f16, f6, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x3ff)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f17, 0(x2) # load 0x0000fc01 from memory into f17
la x2, scratch
li x3, 0x83ace49062cf8ed2 # load x3 with value 0x83ace49062cf8ed2
sw x3, 0(x2) # store 0x83ace49062cf8ed2 in memory
flh f31, 0(x2) # load 0x83ace49062cf8ed2 from memory into f31
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f9, 0(x2) # load 0x000003ff from memory into f9
fnmadd.h f8, f17, f31, f9, dyn # perform operation
fnmadd.h f8, f17, f31, f9, rdn # perform operation
fnmadd.h f8, f17, f31, f9, rmm # perform operation
fnmadd.h f8, f17, f31, f9, rne # perform operation
fnmadd.h f8, f17, f31, f9, rtz # perform operation
fnmadd.h f8, f17, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f17, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f17, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f17, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f17, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f17, f31, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x83ff)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f12, 0(x2) # load 0x0000fc01 from memory into f12
la x2, scratch
li x3, 0xe309167e225841b9 # load x3 with value 0xe309167e225841b9
sw x3, 0(x2) # store 0xe309167e225841b9 in memory
flh f13, 0(x2) # load 0xe309167e225841b9 from memory into f13
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f16, 0(x2) # load 0x000083ff from memory into f16
fnmadd.h f24, f12, f13, f16, dyn # perform operation
fnmadd.h f24, f12, f13, f16, rdn # perform operation
fnmadd.h f24, f12, f13, f16, rmm # perform operation
fnmadd.h f24, f12, f13, f16, rne # perform operation
fnmadd.h f24, f12, f13, f16, rtz # perform operation
fnmadd.h f24, f12, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f12, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f12, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f12, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f12, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f12, f13, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x200)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f6, 0(x2) # load 0x0000fc01 from memory into f6
la x2, scratch
li x3, 0xdd7a211d002e080a # load x3 with value 0xdd7a211d002e080a
sw x3, 0(x2) # store 0xdd7a211d002e080a in memory
flh f21, 0(x2) # load 0xdd7a211d002e080a from memory into f21
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f14, 0(x2) # load 0x00000200 from memory into f14
fnmadd.h f3, f6, f21, f14, dyn # perform operation
fnmadd.h f3, f6, f21, f14, rdn # perform operation
fnmadd.h f3, f6, f21, f14, rmm # perform operation
fnmadd.h f3, f6, f21, f14, rne # perform operation
fnmadd.h f3, f6, f21, f14, rtz # perform operation
fnmadd.h f3, f6, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f6, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f6, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f6, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f6, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f6, f21, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x8200)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f22, 0(x2) # load 0x0000fc01 from memory into f22
la x2, scratch
li x3, 0xeda0a0c63afabc08 # load x3 with value 0xeda0a0c63afabc08
sw x3, 0(x2) # store 0xeda0a0c63afabc08 in memory
flh f23, 0(x2) # load 0xeda0a0c63afabc08 from memory into f23
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f18, 0(x2) # load 0x00008200 from memory into f18
fnmadd.h f2, f22, f23, f18, dyn # perform operation
fnmadd.h f2, f22, f23, f18, rdn # perform operation
fnmadd.h f2, f22, f23, f18, rmm # perform operation
fnmadd.h f2, f22, f23, f18, rne # perform operation
fnmadd.h f2, f22, f23, f18, rtz # perform operation
fnmadd.h f2, f22, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f22, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f22, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f22, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f22, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f22, f23, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x1)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f25, 0(x2) # load 0x0000fc01 from memory into f25
la x2, scratch
li x3, 0x7a3db869e6707087 # load x3 with value 0x7a3db869e6707087
sw x3, 0(x2) # store 0x7a3db869e6707087 in memory
flh f24, 0(x2) # load 0x7a3db869e6707087 from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
fnmadd.h f13, f25, f24, f3, dyn # perform operation
fnmadd.h f13, f25, f24, f3, rdn # perform operation
fnmadd.h f13, f25, f24, f3, rmm # perform operation
fnmadd.h f13, f25, f24, f3, rne # perform operation
fnmadd.h f13, f25, f24, f3, rtz # perform operation
fnmadd.h f13, f25, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f25, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f25, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f25, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f25, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f25, f24, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x8001)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f15, 0(x2) # load 0x0000fc01 from memory into f15
la x2, scratch
li x3, 0x1f85824146c46b9c # load x3 with value 0x1f85824146c46b9c
sw x3, 0(x2) # store 0x1f85824146c46b9c in memory
flh f9, 0(x2) # load 0x1f85824146c46b9c from memory into f9
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f1, 0(x2) # load 0x00008001 from memory into f1
fnmadd.h f26, f15, f9, f1, dyn # perform operation
fnmadd.h f26, f15, f9, f1, rdn # perform operation
fnmadd.h f26, f15, f9, f1, rmm # perform operation
fnmadd.h f26, f15, f9, f1, rne # perform operation
fnmadd.h f26, f15, f9, f1, rtz # perform operation
fnmadd.h f26, f15, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f15, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f15, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f15, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f15, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f15, f9, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x7c00)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f29, 0(x2) # load 0x0000fc01 from memory into f29
la x2, scratch
li x3, 0xdd39f9e5323f2c77 # load x3 with value 0xdd39f9e5323f2c77
sw x3, 0(x2) # store 0xdd39f9e5323f2c77 in memory
flh f18, 0(x2) # load 0xdd39f9e5323f2c77 from memory into f18
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f16, 0(x2) # load 0x00007c00 from memory into f16
fnmadd.h f14, f29, f18, f16, dyn # perform operation
fnmadd.h f14, f29, f18, f16, rdn # perform operation
fnmadd.h f14, f29, f18, f16, rmm # perform operation
fnmadd.h f14, f29, f18, f16, rne # perform operation
fnmadd.h f14, f29, f18, f16, rtz # perform operation
fnmadd.h f14, f29, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f29, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f29, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f29, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f29, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f29, f18, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0xfc00)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f2, 0(x2) # load 0x0000fc01 from memory into f2
la x2, scratch
li x3, 0xf34037a5c08862f9 # load x3 with value 0xf34037a5c08862f9
sw x3, 0(x2) # store 0xf34037a5c08862f9 in memory
flh f27, 0(x2) # load 0xf34037a5c08862f9 from memory into f27
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f14, 0(x2) # load 0x0000fc00 from memory into f14
fnmadd.h f10, f2, f27, f14, dyn # perform operation
fnmadd.h f10, f2, f27, f14, rdn # perform operation
fnmadd.h f10, f2, f27, f14, rmm # perform operation
fnmadd.h f10, f2, f27, f14, rne # perform operation
fnmadd.h f10, f2, f27, f14, rtz # perform operation
fnmadd.h f10, f2, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f2, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f2, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f2, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f2, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f2, f27, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x7e00)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f26, 0(x2) # load 0x0000fc01 from memory into f26
la x2, scratch
li x3, 0xb914ba3bc404afd9 # load x3 with value 0xb914ba3bc404afd9
sw x3, 0(x2) # store 0xb914ba3bc404afd9 in memory
flh f24, 0(x2) # load 0xb914ba3bc404afd9 from memory into f24
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f11, 0(x2) # load 0x00007e00 from memory into f11
fnmadd.h f9, f26, f24, f11, dyn # perform operation
fnmadd.h f9, f26, f24, f11, rdn # perform operation
fnmadd.h f9, f26, f24, f11, rmm # perform operation
fnmadd.h f9, f26, f24, f11, rne # perform operation
fnmadd.h f9, f26, f24, f11, rtz # perform operation
fnmadd.h f9, f26, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f26, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f26, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f26, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f26, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f26, f24, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x7fff)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f21, 0(x2) # load 0x0000fc01 from memory into f21
la x2, scratch
li x3, 0x51a6308f36f86db8 # load x3 with value 0x51a6308f36f86db8
sw x3, 0(x2) # store 0x51a6308f36f86db8 in memory
flh f7, 0(x2) # load 0x51a6308f36f86db8 from memory into f7
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f13, 0(x2) # load 0x00007fff from memory into f13
fnmadd.h f16, f21, f7, f13, dyn # perform operation
fnmadd.h f16, f21, f7, f13, rdn # perform operation
fnmadd.h f16, f21, f7, f13, rmm # perform operation
fnmadd.h f16, f21, f7, f13, rne # perform operation
fnmadd.h f16, f21, f7, f13, rtz # perform operation
fnmadd.h f16, f21, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f21, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f21, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f21, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f21, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f21, f7, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0xfe00)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f6, 0(x2) # load 0x0000fc01 from memory into f6
la x2, scratch
li x3, 0x8aa994ce05b2ff9d # load x3 with value 0x8aa994ce05b2ff9d
sw x3, 0(x2) # store 0x8aa994ce05b2ff9d in memory
flh f21, 0(x2) # load 0x8aa994ce05b2ff9d from memory into f21
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f3, 0(x2) # load 0x0000fe00 from memory into f3
fnmadd.h f17, f6, f21, f3, dyn # perform operation
fnmadd.h f17, f6, f21, f3, rdn # perform operation
fnmadd.h f17, f6, f21, f3, rmm # perform operation
fnmadd.h f17, f6, f21, f3, rne # perform operation
fnmadd.h f17, f6, f21, f3, rtz # perform operation
fnmadd.h f17, f6, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f6, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f6, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f6, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f6, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f6, f21, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x7c01)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f20, 0(x2) # load 0x0000fc01 from memory into f20
la x2, scratch
li x3, 0xb9d6959d8a8410db # load x3 with value 0xb9d6959d8a8410db
sw x3, 0(x2) # store 0xb9d6959d8a8410db in memory
flh f9, 0(x2) # load 0xb9d6959d8a8410db from memory into f9
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f28, 0(x2) # load 0x00007c01 from memory into f28
fnmadd.h f16, f20, f9, f28, dyn # perform operation
fnmadd.h f16, f20, f9, f28, rdn # perform operation
fnmadd.h f16, f20, f9, f28, rmm # perform operation
fnmadd.h f16, f20, f9, f28, rne # perform operation
fnmadd.h f16, f20, f9, f28, rtz # perform operation
fnmadd.h f16, f20, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f20, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f20, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f20, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f20, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f20, f9, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x7dff)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f8, 0(x2) # load 0x0000fc01 from memory into f8
la x2, scratch
li x3, 0x27f14e73734980a1 # load x3 with value 0x27f14e73734980a1
sw x3, 0(x2) # store 0x27f14e73734980a1 in memory
flh f18, 0(x2) # load 0x27f14e73734980a1 from memory into f18
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f31, 0(x2) # load 0x00007dff from memory into f31
fnmadd.h f14, f8, f18, f31, dyn # perform operation
fnmadd.h f14, f8, f18, f31, rdn # perform operation
fnmadd.h f14, f8, f18, f31, rmm # perform operation
fnmadd.h f14, f8, f18, f31, rne # perform operation
fnmadd.h f14, f8, f18, f31, rtz # perform operation
fnmadd.h f14, f8, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f8, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f8, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f8, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f8, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f8, f18, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0xfc01)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f30, 0(x2) # load 0x0000fc01 from memory into f30
la x2, scratch
li x3, 0xd072e73528c3141b # load x3 with value 0xd072e73528c3141b
sw x3, 0(x2) # store 0xd072e73528c3141b in memory
flh f19, 0(x2) # load 0xd072e73528c3141b from memory into f19
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f22, 0(x2) # load 0x0000fc01 from memory into f22
fnmadd.h f31, f30, f19, f22, dyn # perform operation
fnmadd.h f31, f30, f19, f22, rdn # perform operation
fnmadd.h f31, f30, f19, f22, rmm # perform operation
fnmadd.h f31, f30, f19, f22, rne # perform operation
fnmadd.h f31, f30, f19, f22, rtz # perform operation
fnmadd.h f31, f30, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f30, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f30, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f30, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f30, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f30, f19, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x58b4)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f21, 0(x2) # load 0x0000fc01 from memory into f21
la x2, scratch
li x3, 0x6c418c2d9cc577ce # load x3 with value 0x6c418c2d9cc577ce
sw x3, 0(x2) # store 0x6c418c2d9cc577ce in memory
flh f25, 0(x2) # load 0x6c418c2d9cc577ce from memory into f25
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f27, 0(x2) # load 0x000058b4 from memory into f27
fnmadd.h f8, f21, f25, f27, dyn # perform operation
fnmadd.h f8, f21, f25, f27, rdn # perform operation
fnmadd.h f8, f21, f25, f27, rmm # perform operation
fnmadd.h f8, f21, f25, f27, rne # perform operation
fnmadd.h f8, f21, f25, f27, rtz # perform operation
fnmadd.h f8, f21, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f21, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f21, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f21, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f21, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f21, f25, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0xc93a)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f9, 0(x2) # load 0x0000fc01 from memory into f9
la x2, scratch
li x3, 0x3aa36627a5cdcc64 # load x3 with value 0x3aa36627a5cdcc64
sw x3, 0(x2) # store 0x3aa36627a5cdcc64 in memory
flh f15, 0(x2) # load 0x3aa36627a5cdcc64 from memory into f15
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f29, 0(x2) # load 0x0000c93a from memory into f29
fnmadd.h f7, f9, f15, f29, dyn # perform operation
fnmadd.h f7, f9, f15, f29, rdn # perform operation
fnmadd.h f7, f9, f15, f29, rmm # perform operation
fnmadd.h f7, f9, f15, f29, rne # perform operation
fnmadd.h f7, f9, f15, f29, rtz # perform operation
fnmadd.h f7, f9, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f9, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f9, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f9, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f9, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f9, f15, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x0)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f19, 0(x2) # load 0x000058b4 from memory into f19
la x2, scratch
li x3, 0xf74146cb13b66e3e # load x3 with value 0xf74146cb13b66e3e
sw x3, 0(x2) # store 0xf74146cb13b66e3e in memory
flh f13, 0(x2) # load 0xf74146cb13b66e3e from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f17, 0(x2) # load 0x00000000 from memory into f17
fnmadd.h f20, f19, f13, f17, dyn # perform operation
fnmadd.h f20, f19, f13, f17, rdn # perform operation
fnmadd.h f20, f19, f13, f17, rmm # perform operation
fnmadd.h f20, f19, f13, f17, rne # perform operation
fnmadd.h f20, f19, f13, f17, rtz # perform operation
fnmadd.h f20, f19, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f19, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f19, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f19, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f19, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f19, f13, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x8000)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f23, 0(x2) # load 0x000058b4 from memory into f23
la x2, scratch
li x3, 0xbec5e052c06ff6ae # load x3 with value 0xbec5e052c06ff6ae
sw x3, 0(x2) # store 0xbec5e052c06ff6ae in memory
flh f31, 0(x2) # load 0xbec5e052c06ff6ae from memory into f31
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f6, 0(x2) # load 0x00008000 from memory into f6
fnmadd.h f14, f23, f31, f6, dyn # perform operation
fnmadd.h f14, f23, f31, f6, rdn # perform operation
fnmadd.h f14, f23, f31, f6, rmm # perform operation
fnmadd.h f14, f23, f31, f6, rne # perform operation
fnmadd.h f14, f23, f31, f6, rtz # perform operation
fnmadd.h f14, f23, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f23, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f23, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f23, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f23, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f23, f31, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x3c00)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f23, 0(x2) # load 0x000058b4 from memory into f23
la x2, scratch
li x3, 0xdc0e192a4e828f91 # load x3 with value 0xdc0e192a4e828f91
sw x3, 0(x2) # store 0xdc0e192a4e828f91 in memory
flh f18, 0(x2) # load 0xdc0e192a4e828f91 from memory into f18
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f17, 0(x2) # load 0x00003c00 from memory into f17
fnmadd.h f5, f23, f18, f17, dyn # perform operation
fnmadd.h f5, f23, f18, f17, rdn # perform operation
fnmadd.h f5, f23, f18, f17, rmm # perform operation
fnmadd.h f5, f23, f18, f17, rne # perform operation
fnmadd.h f5, f23, f18, f17, rtz # perform operation
fnmadd.h f5, f23, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f23, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f23, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f23, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f23, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f23, f18, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xbc00)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f1, 0(x2) # load 0x000058b4 from memory into f1
la x2, scratch
li x3, 0x40cf09e865ff20bc # load x3 with value 0x40cf09e865ff20bc
sw x3, 0(x2) # store 0x40cf09e865ff20bc in memory
flh f22, 0(x2) # load 0x40cf09e865ff20bc from memory into f22
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f13, 0(x2) # load 0x0000bc00 from memory into f13
fnmadd.h f14, f1, f22, f13, dyn # perform operation
fnmadd.h f14, f1, f22, f13, rdn # perform operation
fnmadd.h f14, f1, f22, f13, rmm # perform operation
fnmadd.h f14, f1, f22, f13, rne # perform operation
fnmadd.h f14, f1, f22, f13, rtz # perform operation
fnmadd.h f14, f1, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f1, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f1, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f1, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f1, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f1, f22, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x3e00)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
la x2, scratch
li x3, 0xdab5cda19f19a6ba # load x3 with value 0xdab5cda19f19a6ba
sw x3, 0(x2) # store 0xdab5cda19f19a6ba in memory
flh f15, 0(x2) # load 0xdab5cda19f19a6ba from memory into f15
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f9, 0(x2) # load 0x00003e00 from memory into f9
fnmadd.h f5, f29, f15, f9, dyn # perform operation
fnmadd.h f5, f29, f15, f9, rdn # perform operation
fnmadd.h f5, f29, f15, f9, rmm # perform operation
fnmadd.h f5, f29, f15, f9, rne # perform operation
fnmadd.h f5, f29, f15, f9, rtz # perform operation
fnmadd.h f5, f29, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f29, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f29, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f29, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f29, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f29, f15, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xbe00)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f8, 0(x2) # load 0x000058b4 from memory into f8
la x2, scratch
li x3, 0x74c7da7726daa1f2 # load x3 with value 0x74c7da7726daa1f2
sw x3, 0(x2) # store 0x74c7da7726daa1f2 in memory
flh f15, 0(x2) # load 0x74c7da7726daa1f2 from memory into f15
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f29, 0(x2) # load 0x0000be00 from memory into f29
fnmadd.h f25, f8, f15, f29, dyn # perform operation
fnmadd.h f25, f8, f15, f29, rdn # perform operation
fnmadd.h f25, f8, f15, f29, rmm # perform operation
fnmadd.h f25, f8, f15, f29, rne # perform operation
fnmadd.h f25, f8, f15, f29, rtz # perform operation
fnmadd.h f25, f8, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f8, f15, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x4000)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f19, 0(x2) # load 0x000058b4 from memory into f19
la x2, scratch
li x3, 0xe1b2d03322943f59 # load x3 with value 0xe1b2d03322943f59
sw x3, 0(x2) # store 0xe1b2d03322943f59 in memory
flh f15, 0(x2) # load 0xe1b2d03322943f59 from memory into f15
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f7, 0(x2) # load 0x00004000 from memory into f7
fnmadd.h f31, f19, f15, f7, dyn # perform operation
fnmadd.h f31, f19, f15, f7, rdn # perform operation
fnmadd.h f31, f19, f15, f7, rmm # perform operation
fnmadd.h f31, f19, f15, f7, rne # perform operation
fnmadd.h f31, f19, f15, f7, rtz # perform operation
fnmadd.h f31, f19, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f19, f15, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xc000)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f7, 0(x2) # load 0x000058b4 from memory into f7
la x2, scratch
li x3, 0xa911aa94fd4176c5 # load x3 with value 0xa911aa94fd4176c5
sw x3, 0(x2) # store 0xa911aa94fd4176c5 in memory
flh f28, 0(x2) # load 0xa911aa94fd4176c5 from memory into f28
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f24, 0(x2) # load 0x0000c000 from memory into f24
fnmadd.h f31, f7, f28, f24, dyn # perform operation
fnmadd.h f31, f7, f28, f24, rdn # perform operation
fnmadd.h f31, f7, f28, f24, rmm # perform operation
fnmadd.h f31, f7, f28, f24, rne # perform operation
fnmadd.h f31, f7, f28, f24, rtz # perform operation
fnmadd.h f31, f7, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f7, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f7, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f7, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f7, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f7, f28, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x400)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f1, 0(x2) # load 0x000058b4 from memory into f1
la x2, scratch
li x3, 0x82023c8f4dc281b3 # load x3 with value 0x82023c8f4dc281b3
sw x3, 0(x2) # store 0x82023c8f4dc281b3 in memory
flh f11, 0(x2) # load 0x82023c8f4dc281b3 from memory into f11
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f31, 0(x2) # load 0x00000400 from memory into f31
fnmadd.h f22, f1, f11, f31, dyn # perform operation
fnmadd.h f22, f1, f11, f31, rdn # perform operation
fnmadd.h f22, f1, f11, f31, rmm # perform operation
fnmadd.h f22, f1, f11, f31, rne # perform operation
fnmadd.h f22, f1, f11, f31, rtz # perform operation
fnmadd.h f22, f1, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f1, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f1, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f1, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f1, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f1, f11, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x8400)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f20, 0(x2) # load 0x000058b4 from memory into f20
la x2, scratch
li x3, 0x1cf23608643d5c68 # load x3 with value 0x1cf23608643d5c68
sw x3, 0(x2) # store 0x1cf23608643d5c68 in memory
flh f30, 0(x2) # load 0x1cf23608643d5c68 from memory into f30
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f7, 0(x2) # load 0x00008400 from memory into f7
fnmadd.h f8, f20, f30, f7, dyn # perform operation
fnmadd.h f8, f20, f30, f7, rdn # perform operation
fnmadd.h f8, f20, f30, f7, rmm # perform operation
fnmadd.h f8, f20, f30, f7, rne # perform operation
fnmadd.h f8, f20, f30, f7, rtz # perform operation
fnmadd.h f8, f20, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f20, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f20, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f20, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f20, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f20, f30, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7bff)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f6, 0(x2) # load 0x000058b4 from memory into f6
la x2, scratch
li x3, 0x1d99a5c4bdb63840 # load x3 with value 0x1d99a5c4bdb63840
sw x3, 0(x2) # store 0x1d99a5c4bdb63840 in memory
flh f27, 0(x2) # load 0x1d99a5c4bdb63840 from memory into f27
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f14, 0(x2) # load 0x00007bff from memory into f14
fnmadd.h f8, f6, f27, f14, dyn # perform operation
fnmadd.h f8, f6, f27, f14, rdn # perform operation
fnmadd.h f8, f6, f27, f14, rmm # perform operation
fnmadd.h f8, f6, f27, f14, rne # perform operation
fnmadd.h f8, f6, f27, f14, rtz # perform operation
fnmadd.h f8, f6, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f6, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f6, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f6, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f6, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f6, f27, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xfbff)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f17, 0(x2) # load 0x000058b4 from memory into f17
la x2, scratch
li x3, 0x7733df3d3491bb24 # load x3 with value 0x7733df3d3491bb24
sw x3, 0(x2) # store 0x7733df3d3491bb24 in memory
flh f15, 0(x2) # load 0x7733df3d3491bb24 from memory into f15
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f25, 0(x2) # load 0x0000fbff from memory into f25
fnmadd.h f29, f17, f15, f25, dyn # perform operation
fnmadd.h f29, f17, f15, f25, rdn # perform operation
fnmadd.h f29, f17, f15, f25, rmm # perform operation
fnmadd.h f29, f17, f15, f25, rne # perform operation
fnmadd.h f29, f17, f15, f25, rtz # perform operation
fnmadd.h f29, f17, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f17, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f17, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f17, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f17, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f17, f15, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x3ff)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f9, 0(x2) # load 0x000058b4 from memory into f9
la x2, scratch
li x3, 0xfc2b380ec72ba2a8 # load x3 with value 0xfc2b380ec72ba2a8
sw x3, 0(x2) # store 0xfc2b380ec72ba2a8 in memory
flh f30, 0(x2) # load 0xfc2b380ec72ba2a8 from memory into f30
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f19, 0(x2) # load 0x000003ff from memory into f19
fnmadd.h f20, f9, f30, f19, dyn # perform operation
fnmadd.h f20, f9, f30, f19, rdn # perform operation
fnmadd.h f20, f9, f30, f19, rmm # perform operation
fnmadd.h f20, f9, f30, f19, rne # perform operation
fnmadd.h f20, f9, f30, f19, rtz # perform operation
fnmadd.h f20, f9, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f9, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f9, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f9, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f9, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f9, f30, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x83ff)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
la x2, scratch
li x3, 0x5cd98d6b2e789fe4 # load x3 with value 0x5cd98d6b2e789fe4
sw x3, 0(x2) # store 0x5cd98d6b2e789fe4 in memory
flh f28, 0(x2) # load 0x5cd98d6b2e789fe4 from memory into f28
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f31, 0(x2) # load 0x000083ff from memory into f31
fnmadd.h f26, f13, f28, f31, dyn # perform operation
fnmadd.h f26, f13, f28, f31, rdn # perform operation
fnmadd.h f26, f13, f28, f31, rmm # perform operation
fnmadd.h f26, f13, f28, f31, rne # perform operation
fnmadd.h f26, f13, f28, f31, rtz # perform operation
fnmadd.h f26, f13, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f13, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f13, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f13, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f13, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f13, f28, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x200)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f17, 0(x2) # load 0x000058b4 from memory into f17
la x2, scratch
li x3, 0x37813e0ee3437936 # load x3 with value 0x37813e0ee3437936
sw x3, 0(x2) # store 0x37813e0ee3437936 in memory
flh f20, 0(x2) # load 0x37813e0ee3437936 from memory into f20
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
fnmadd.h f5, f17, f20, f24, dyn # perform operation
fnmadd.h f5, f17, f20, f24, rdn # perform operation
fnmadd.h f5, f17, f20, f24, rmm # perform operation
fnmadd.h f5, f17, f20, f24, rne # perform operation
fnmadd.h f5, f17, f20, f24, rtz # perform operation
fnmadd.h f5, f17, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f17, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f17, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f17, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f17, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f17, f20, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x8200)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f23, 0(x2) # load 0x000058b4 from memory into f23
la x2, scratch
li x3, 0xd285bb5def2f254d # load x3 with value 0xd285bb5def2f254d
sw x3, 0(x2) # store 0xd285bb5def2f254d in memory
flh f31, 0(x2) # load 0xd285bb5def2f254d from memory into f31
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f2, 0(x2) # load 0x00008200 from memory into f2
fnmadd.h f29, f23, f31, f2, dyn # perform operation
fnmadd.h f29, f23, f31, f2, rdn # perform operation
fnmadd.h f29, f23, f31, f2, rmm # perform operation
fnmadd.h f29, f23, f31, f2, rne # perform operation
fnmadd.h f29, f23, f31, f2, rtz # perform operation
fnmadd.h f29, f23, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f23, f31, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x1)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f1, 0(x2) # load 0x000058b4 from memory into f1
la x2, scratch
li x3, 0xcad75088bde9ec85 # load x3 with value 0xcad75088bde9ec85
sw x3, 0(x2) # store 0xcad75088bde9ec85 in memory
flh f13, 0(x2) # load 0xcad75088bde9ec85 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f30, 0(x2) # load 0x00000001 from memory into f30
fnmadd.h f27, f1, f13, f30, dyn # perform operation
fnmadd.h f27, f1, f13, f30, rdn # perform operation
fnmadd.h f27, f1, f13, f30, rmm # perform operation
fnmadd.h f27, f1, f13, f30, rne # perform operation
fnmadd.h f27, f1, f13, f30, rtz # perform operation
fnmadd.h f27, f1, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f1, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f1, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f1, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f1, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f1, f13, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x8001)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
la x2, scratch
li x3, 0x881c0ea342ef19e2 # load x3 with value 0x881c0ea342ef19e2
sw x3, 0(x2) # store 0x881c0ea342ef19e2 in memory
flh f31, 0(x2) # load 0x881c0ea342ef19e2 from memory into f31
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f9, 0(x2) # load 0x00008001 from memory into f9
fnmadd.h f1, f29, f31, f9, dyn # perform operation
fnmadd.h f1, f29, f31, f9, rdn # perform operation
fnmadd.h f1, f29, f31, f9, rmm # perform operation
fnmadd.h f1, f29, f31, f9, rne # perform operation
fnmadd.h f1, f29, f31, f9, rtz # perform operation
fnmadd.h f1, f29, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f29, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f29, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f29, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f29, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f29, f31, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7c00)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f1, 0(x2) # load 0x000058b4 from memory into f1
la x2, scratch
li x3, 0x4196c3742990cab9 # load x3 with value 0x4196c3742990cab9
sw x3, 0(x2) # store 0x4196c3742990cab9 in memory
flh f23, 0(x2) # load 0x4196c3742990cab9 from memory into f23
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f24, 0(x2) # load 0x00007c00 from memory into f24
fnmadd.h f9, f1, f23, f24, dyn # perform operation
fnmadd.h f9, f1, f23, f24, rdn # perform operation
fnmadd.h f9, f1, f23, f24, rmm # perform operation
fnmadd.h f9, f1, f23, f24, rne # perform operation
fnmadd.h f9, f1, f23, f24, rtz # perform operation
fnmadd.h f9, f1, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f1, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f1, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f1, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f1, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f1, f23, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xfc00)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f9, 0(x2) # load 0x000058b4 from memory into f9
la x2, scratch
li x3, 0xe8c4fe61c0c597b4 # load x3 with value 0xe8c4fe61c0c597b4
sw x3, 0(x2) # store 0xe8c4fe61c0c597b4 in memory
flh f28, 0(x2) # load 0xe8c4fe61c0c597b4 from memory into f28
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f24, 0(x2) # load 0x0000fc00 from memory into f24
fnmadd.h f14, f9, f28, f24, dyn # perform operation
fnmadd.h f14, f9, f28, f24, rdn # perform operation
fnmadd.h f14, f9, f28, f24, rmm # perform operation
fnmadd.h f14, f9, f28, f24, rne # perform operation
fnmadd.h f14, f9, f28, f24, rtz # perform operation
fnmadd.h f14, f9, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f9, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f9, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f9, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f9, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f9, f28, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7e00)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f22, 0(x2) # load 0x000058b4 from memory into f22
la x2, scratch
li x3, 0x8018ed6129b5f6c5 # load x3 with value 0x8018ed6129b5f6c5
sw x3, 0(x2) # store 0x8018ed6129b5f6c5 in memory
flh f21, 0(x2) # load 0x8018ed6129b5f6c5 from memory into f21
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f2, 0(x2) # load 0x00007e00 from memory into f2
fnmadd.h f24, f22, f21, f2, dyn # perform operation
fnmadd.h f24, f22, f21, f2, rdn # perform operation
fnmadd.h f24, f22, f21, f2, rmm # perform operation
fnmadd.h f24, f22, f21, f2, rne # perform operation
fnmadd.h f24, f22, f21, f2, rtz # perform operation
fnmadd.h f24, f22, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f22, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f22, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f22, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f22, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f22, f21, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7fff)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f17, 0(x2) # load 0x000058b4 from memory into f17
la x2, scratch
li x3, 0xa319b38ff28d6c88 # load x3 with value 0xa319b38ff28d6c88
sw x3, 0(x2) # store 0xa319b38ff28d6c88 in memory
flh f31, 0(x2) # load 0xa319b38ff28d6c88 from memory into f31
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f1, 0(x2) # load 0x00007fff from memory into f1
fnmadd.h f13, f17, f31, f1, dyn # perform operation
fnmadd.h f13, f17, f31, f1, rdn # perform operation
fnmadd.h f13, f17, f31, f1, rmm # perform operation
fnmadd.h f13, f17, f31, f1, rne # perform operation
fnmadd.h f13, f17, f31, f1, rtz # perform operation
fnmadd.h f13, f17, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f17, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f17, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f17, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f17, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f17, f31, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xfe00)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f8, 0(x2) # load 0x000058b4 from memory into f8
la x2, scratch
li x3, 0x7d159f78719e3b3a # load x3 with value 0x7d159f78719e3b3a
sw x3, 0(x2) # store 0x7d159f78719e3b3a in memory
flh f3, 0(x2) # load 0x7d159f78719e3b3a from memory into f3
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f31, 0(x2) # load 0x0000fe00 from memory into f31
fnmadd.h f11, f8, f3, f31, dyn # perform operation
fnmadd.h f11, f8, f3, f31, rdn # perform operation
fnmadd.h f11, f8, f3, f31, rmm # perform operation
fnmadd.h f11, f8, f3, f31, rne # perform operation
fnmadd.h f11, f8, f3, f31, rtz # perform operation
fnmadd.h f11, f8, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f8, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f8, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f8, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f8, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f8, f3, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7c01)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f17, 0(x2) # load 0x000058b4 from memory into f17
la x2, scratch
li x3, 0xd92e815cfb7c2436 # load x3 with value 0xd92e815cfb7c2436
sw x3, 0(x2) # store 0xd92e815cfb7c2436 in memory
flh f23, 0(x2) # load 0xd92e815cfb7c2436 from memory into f23
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f12, 0(x2) # load 0x00007c01 from memory into f12
fnmadd.h f16, f17, f23, f12, dyn # perform operation
fnmadd.h f16, f17, f23, f12, rdn # perform operation
fnmadd.h f16, f17, f23, f12, rmm # perform operation
fnmadd.h f16, f17, f23, f12, rne # perform operation
fnmadd.h f16, f17, f23, f12, rtz # perform operation
fnmadd.h f16, f17, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f17, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f17, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f17, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f17, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f17, f23, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7dff)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f7, 0(x2) # load 0x000058b4 from memory into f7
la x2, scratch
li x3, 0x429312de986867d6 # load x3 with value 0x429312de986867d6
sw x3, 0(x2) # store 0x429312de986867d6 in memory
flh f3, 0(x2) # load 0x429312de986867d6 from memory into f3
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f15, 0(x2) # load 0x00007dff from memory into f15
fnmadd.h f21, f7, f3, f15, dyn # perform operation
fnmadd.h f21, f7, f3, f15, rdn # perform operation
fnmadd.h f21, f7, f3, f15, rmm # perform operation
fnmadd.h f21, f7, f3, f15, rne # perform operation
fnmadd.h f21, f7, f3, f15, rtz # perform operation
fnmadd.h f21, f7, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f7, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f7, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f7, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f7, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f7, f3, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xfc01)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f20, 0(x2) # load 0x000058b4 from memory into f20
la x2, scratch
li x3, 0x16f8268b89b012a9 # load x3 with value 0x16f8268b89b012a9
sw x3, 0(x2) # store 0x16f8268b89b012a9 in memory
flh f13, 0(x2) # load 0x16f8268b89b012a9 from memory into f13
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f28, 0(x2) # load 0x0000fc01 from memory into f28
fnmadd.h f2, f20, f13, f28, dyn # perform operation
fnmadd.h f2, f20, f13, f28, rdn # perform operation
fnmadd.h f2, f20, f13, f28, rmm # perform operation
fnmadd.h f2, f20, f13, f28, rne # perform operation
fnmadd.h f2, f20, f13, f28, rtz # perform operation
fnmadd.h f2, f20, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f20, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f20, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f20, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f20, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f20, f13, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x58b4)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f11, 0(x2) # load 0x000058b4 from memory into f11
la x2, scratch
li x3, 0xc54196c6d02560cf # load x3 with value 0xc54196c6d02560cf
sw x3, 0(x2) # store 0xc54196c6d02560cf in memory
flh f5, 0(x2) # load 0xc54196c6d02560cf from memory into f5
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f6, 0(x2) # load 0x000058b4 from memory into f6
fnmadd.h f31, f11, f5, f6, dyn # perform operation
fnmadd.h f31, f11, f5, f6, rdn # perform operation
fnmadd.h f31, f11, f5, f6, rmm # perform operation
fnmadd.h f31, f11, f5, f6, rne # perform operation
fnmadd.h f31, f11, f5, f6, rtz # perform operation
fnmadd.h f31, f11, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f11, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f11, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f11, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f11, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f11, f5, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xc93a)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f10, 0(x2) # load 0x000058b4 from memory into f10
la x2, scratch
li x3, 0x5fa3f6d5d639dfac # load x3 with value 0x5fa3f6d5d639dfac
sw x3, 0(x2) # store 0x5fa3f6d5d639dfac in memory
flh f26, 0(x2) # load 0x5fa3f6d5d639dfac from memory into f26
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f25, 0(x2) # load 0x0000c93a from memory into f25
fnmadd.h f9, f10, f26, f25, dyn # perform operation
fnmadd.h f9, f10, f26, f25, rdn # perform operation
fnmadd.h f9, f10, f26, f25, rmm # perform operation
fnmadd.h f9, f10, f26, f25, rne # perform operation
fnmadd.h f9, f10, f26, f25, rtz # perform operation
fnmadd.h f9, f10, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f10, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f10, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f10, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f10, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f10, f26, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x0)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
la x2, scratch
li x3, 0x9682ee831b26e6d8 # load x3 with value 0x9682ee831b26e6d8
sw x3, 0(x2) # store 0x9682ee831b26e6d8 in memory
flh f22, 0(x2) # load 0x9682ee831b26e6d8 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f12, 0(x2) # load 0x00000000 from memory into f12
fnmadd.h f19, f16, f22, f12, dyn # perform operation
fnmadd.h f19, f16, f22, f12, rdn # perform operation
fnmadd.h f19, f16, f22, f12, rmm # perform operation
fnmadd.h f19, f16, f22, f12, rne # perform operation
fnmadd.h f19, f16, f22, f12, rtz # perform operation
fnmadd.h f19, f16, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f16, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f16, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f16, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f16, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f16, f22, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x8000)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f1, 0(x2) # load 0x0000c93a from memory into f1
la x2, scratch
li x3, 0x92defba619c8d0a3 # load x3 with value 0x92defba619c8d0a3
sw x3, 0(x2) # store 0x92defba619c8d0a3 in memory
flh f18, 0(x2) # load 0x92defba619c8d0a3 from memory into f18
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f13, 0(x2) # load 0x00008000 from memory into f13
fnmadd.h f2, f1, f18, f13, dyn # perform operation
fnmadd.h f2, f1, f18, f13, rdn # perform operation
fnmadd.h f2, f1, f18, f13, rmm # perform operation
fnmadd.h f2, f1, f18, f13, rne # perform operation
fnmadd.h f2, f1, f18, f13, rtz # perform operation
fnmadd.h f2, f1, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f1, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f1, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f1, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f1, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f1, f18, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x3c00)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f5, 0(x2) # load 0x0000c93a from memory into f5
la x2, scratch
li x3, 0x93b8808eea96c266 # load x3 with value 0x93b8808eea96c266
sw x3, 0(x2) # store 0x93b8808eea96c266 in memory
flh f9, 0(x2) # load 0x93b8808eea96c266 from memory into f9
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f22, 0(x2) # load 0x00003c00 from memory into f22
fnmadd.h f12, f5, f9, f22, dyn # perform operation
fnmadd.h f12, f5, f9, f22, rdn # perform operation
fnmadd.h f12, f5, f9, f22, rmm # perform operation
fnmadd.h f12, f5, f9, f22, rne # perform operation
fnmadd.h f12, f5, f9, f22, rtz # perform operation
fnmadd.h f12, f5, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f5, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f5, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f5, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f5, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f5, f9, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xbc00)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f19, 0(x2) # load 0x0000c93a from memory into f19
la x2, scratch
li x3, 0x95393cdf95ba31fb # load x3 with value 0x95393cdf95ba31fb
sw x3, 0(x2) # store 0x95393cdf95ba31fb in memory
flh f27, 0(x2) # load 0x95393cdf95ba31fb from memory into f27
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f7, 0(x2) # load 0x0000bc00 from memory into f7
fnmadd.h f10, f19, f27, f7, dyn # perform operation
fnmadd.h f10, f19, f27, f7, rdn # perform operation
fnmadd.h f10, f19, f27, f7, rmm # perform operation
fnmadd.h f10, f19, f27, f7, rne # perform operation
fnmadd.h f10, f19, f27, f7, rtz # perform operation
fnmadd.h f10, f19, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f19, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f19, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f19, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f19, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f19, f27, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x3e00)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f13, 0(x2) # load 0x0000c93a from memory into f13
la x2, scratch
li x3, 0x30f8d74cc119c076 # load x3 with value 0x30f8d74cc119c076
sw x3, 0(x2) # store 0x30f8d74cc119c076 in memory
flh f8, 0(x2) # load 0x30f8d74cc119c076 from memory into f8
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f19, 0(x2) # load 0x00003e00 from memory into f19
fnmadd.h f21, f13, f8, f19, dyn # perform operation
fnmadd.h f21, f13, f8, f19, rdn # perform operation
fnmadd.h f21, f13, f8, f19, rmm # perform operation
fnmadd.h f21, f13, f8, f19, rne # perform operation
fnmadd.h f21, f13, f8, f19, rtz # perform operation
fnmadd.h f21, f13, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f13, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f13, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f13, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f13, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f13, f8, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xbe00)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f24, 0(x2) # load 0x0000c93a from memory into f24
la x2, scratch
li x3, 0xc09a640b2a459708 # load x3 with value 0xc09a640b2a459708
sw x3, 0(x2) # store 0xc09a640b2a459708 in memory
flh f31, 0(x2) # load 0xc09a640b2a459708 from memory into f31
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f22, 0(x2) # load 0x0000be00 from memory into f22
fnmadd.h f27, f24, f31, f22, dyn # perform operation
fnmadd.h f27, f24, f31, f22, rdn # perform operation
fnmadd.h f27, f24, f31, f22, rmm # perform operation
fnmadd.h f27, f24, f31, f22, rne # perform operation
fnmadd.h f27, f24, f31, f22, rtz # perform operation
fnmadd.h f27, f24, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f24, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f24, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f24, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f24, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f24, f31, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x4000)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f18, 0(x2) # load 0x0000c93a from memory into f18
la x2, scratch
li x3, 0xa9f144deeb4b126c # load x3 with value 0xa9f144deeb4b126c
sw x3, 0(x2) # store 0xa9f144deeb4b126c in memory
flh f20, 0(x2) # load 0xa9f144deeb4b126c from memory into f20
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f13, 0(x2) # load 0x00004000 from memory into f13
fnmadd.h f21, f18, f20, f13, dyn # perform operation
fnmadd.h f21, f18, f20, f13, rdn # perform operation
fnmadd.h f21, f18, f20, f13, rmm # perform operation
fnmadd.h f21, f18, f20, f13, rne # perform operation
fnmadd.h f21, f18, f20, f13, rtz # perform operation
fnmadd.h f21, f18, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f18, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f18, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f18, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f18, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f18, f20, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xc000)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f24, 0(x2) # load 0x0000c93a from memory into f24
la x2, scratch
li x3, 0x50ad7fb9d2ac84fe # load x3 with value 0x50ad7fb9d2ac84fe
sw x3, 0(x2) # store 0x50ad7fb9d2ac84fe in memory
flh f13, 0(x2) # load 0x50ad7fb9d2ac84fe from memory into f13
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f11, 0(x2) # load 0x0000c000 from memory into f11
fnmadd.h f28, f24, f13, f11, dyn # perform operation
fnmadd.h f28, f24, f13, f11, rdn # perform operation
fnmadd.h f28, f24, f13, f11, rmm # perform operation
fnmadd.h f28, f24, f13, f11, rne # perform operation
fnmadd.h f28, f24, f13, f11, rtz # perform operation
fnmadd.h f28, f24, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f24, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f24, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f24, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f24, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f24, f13, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x400)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f30, 0(x2) # load 0x0000c93a from memory into f30
la x2, scratch
li x3, 0xbecb951be8ec91a0 # load x3 with value 0xbecb951be8ec91a0
sw x3, 0(x2) # store 0xbecb951be8ec91a0 in memory
flh f11, 0(x2) # load 0xbecb951be8ec91a0 from memory into f11
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f19, 0(x2) # load 0x00000400 from memory into f19
fnmadd.h f14, f30, f11, f19, dyn # perform operation
fnmadd.h f14, f30, f11, f19, rdn # perform operation
fnmadd.h f14, f30, f11, f19, rmm # perform operation
fnmadd.h f14, f30, f11, f19, rne # perform operation
fnmadd.h f14, f30, f11, f19, rtz # perform operation
fnmadd.h f14, f30, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f30, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f30, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f30, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f30, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f30, f11, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x8400)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
la x2, scratch
li x3, 0x72532c395b288561 # load x3 with value 0x72532c395b288561
sw x3, 0(x2) # store 0x72532c395b288561 in memory
flh f13, 0(x2) # load 0x72532c395b288561 from memory into f13
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f22, 0(x2) # load 0x00008400 from memory into f22
fnmadd.h f10, f12, f13, f22, dyn # perform operation
fnmadd.h f10, f12, f13, f22, rdn # perform operation
fnmadd.h f10, f12, f13, f22, rmm # perform operation
fnmadd.h f10, f12, f13, f22, rne # perform operation
fnmadd.h f10, f12, f13, f22, rtz # perform operation
fnmadd.h f10, f12, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f12, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f12, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f12, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f12, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f12, f13, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7bff)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f11, 0(x2) # load 0x0000c93a from memory into f11
la x2, scratch
li x3, 0x9a151d06ac15da29 # load x3 with value 0x9a151d06ac15da29
sw x3, 0(x2) # store 0x9a151d06ac15da29 in memory
flh f7, 0(x2) # load 0x9a151d06ac15da29 from memory into f7
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f27, 0(x2) # load 0x00007bff from memory into f27
fnmadd.h f15, f11, f7, f27, dyn # perform operation
fnmadd.h f15, f11, f7, f27, rdn # perform operation
fnmadd.h f15, f11, f7, f27, rmm # perform operation
fnmadd.h f15, f11, f7, f27, rne # perform operation
fnmadd.h f15, f11, f7, f27, rtz # perform operation
fnmadd.h f15, f11, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f11, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f11, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f11, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f11, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f11, f7, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xfbff)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f19, 0(x2) # load 0x0000c93a from memory into f19
la x2, scratch
li x3, 0x9cbf4ff61550dee1 # load x3 with value 0x9cbf4ff61550dee1
sw x3, 0(x2) # store 0x9cbf4ff61550dee1 in memory
flh f13, 0(x2) # load 0x9cbf4ff61550dee1 from memory into f13
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f18, 0(x2) # load 0x0000fbff from memory into f18
fnmadd.h f31, f19, f13, f18, dyn # perform operation
fnmadd.h f31, f19, f13, f18, rdn # perform operation
fnmadd.h f31, f19, f13, f18, rmm # perform operation
fnmadd.h f31, f19, f13, f18, rne # perform operation
fnmadd.h f31, f19, f13, f18, rtz # perform operation
fnmadd.h f31, f19, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f19, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f19, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f19, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f19, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f19, f13, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x3ff)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f2, 0(x2) # load 0x0000c93a from memory into f2
la x2, scratch
li x3, 0xacaa2a0145661ae # load x3 with value 0xacaa2a0145661ae
sw x3, 0(x2) # store 0xacaa2a0145661ae in memory
flh f15, 0(x2) # load 0xacaa2a0145661ae from memory into f15
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f5, 0(x2) # load 0x000003ff from memory into f5
fnmadd.h f18, f2, f15, f5, dyn # perform operation
fnmadd.h f18, f2, f15, f5, rdn # perform operation
fnmadd.h f18, f2, f15, f5, rmm # perform operation
fnmadd.h f18, f2, f15, f5, rne # perform operation
fnmadd.h f18, f2, f15, f5, rtz # perform operation
fnmadd.h f18, f2, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f2, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f2, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f2, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f2, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f2, f15, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x83ff)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f10, 0(x2) # load 0x0000c93a from memory into f10
la x2, scratch
li x3, 0xf764eceac33b48f5 # load x3 with value 0xf764eceac33b48f5
sw x3, 0(x2) # store 0xf764eceac33b48f5 in memory
flh f23, 0(x2) # load 0xf764eceac33b48f5 from memory into f23
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
fnmadd.h f2, f10, f23, f19, dyn # perform operation
fnmadd.h f2, f10, f23, f19, rdn # perform operation
fnmadd.h f2, f10, f23, f19, rmm # perform operation
fnmadd.h f2, f10, f23, f19, rne # perform operation
fnmadd.h f2, f10, f23, f19, rtz # perform operation
fnmadd.h f2, f10, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f10, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f10, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f10, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f10, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f10, f23, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x200)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f18, 0(x2) # load 0x0000c93a from memory into f18
la x2, scratch
li x3, 0xdb8435f7729a195d # load x3 with value 0xdb8435f7729a195d
sw x3, 0(x2) # store 0xdb8435f7729a195d in memory
flh f3, 0(x2) # load 0xdb8435f7729a195d from memory into f3
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
fnmadd.h f6, f18, f3, f13, dyn # perform operation
fnmadd.h f6, f18, f3, f13, rdn # perform operation
fnmadd.h f6, f18, f3, f13, rmm # perform operation
fnmadd.h f6, f18, f3, f13, rne # perform operation
fnmadd.h f6, f18, f3, f13, rtz # perform operation
fnmadd.h f6, f18, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f18, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f18, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f18, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f18, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f18, f3, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x8200)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f5, 0(x2) # load 0x0000c93a from memory into f5
la x2, scratch
li x3, 0xad223967a809d377 # load x3 with value 0xad223967a809d377
sw x3, 0(x2) # store 0xad223967a809d377 in memory
flh f18, 0(x2) # load 0xad223967a809d377 from memory into f18
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f3, 0(x2) # load 0x00008200 from memory into f3
fnmadd.h f27, f5, f18, f3, dyn # perform operation
fnmadd.h f27, f5, f18, f3, rdn # perform operation
fnmadd.h f27, f5, f18, f3, rmm # perform operation
fnmadd.h f27, f5, f18, f3, rne # perform operation
fnmadd.h f27, f5, f18, f3, rtz # perform operation
fnmadd.h f27, f5, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f5, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f5, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f5, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f5, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f5, f18, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x1)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f18, 0(x2) # load 0x0000c93a from memory into f18
la x2, scratch
li x3, 0x4ecb99c05c96bdc5 # load x3 with value 0x4ecb99c05c96bdc5
sw x3, 0(x2) # store 0x4ecb99c05c96bdc5 in memory
flh f20, 0(x2) # load 0x4ecb99c05c96bdc5 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f22, 0(x2) # load 0x00000001 from memory into f22
fnmadd.h f7, f18, f20, f22, dyn # perform operation
fnmadd.h f7, f18, f20, f22, rdn # perform operation
fnmadd.h f7, f18, f20, f22, rmm # perform operation
fnmadd.h f7, f18, f20, f22, rne # perform operation
fnmadd.h f7, f18, f20, f22, rtz # perform operation
fnmadd.h f7, f18, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f18, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f18, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f18, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f18, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f18, f20, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x8001)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f9, 0(x2) # load 0x0000c93a from memory into f9
la x2, scratch
li x3, 0x15aa573aa3063c27 # load x3 with value 0x15aa573aa3063c27
sw x3, 0(x2) # store 0x15aa573aa3063c27 in memory
flh f14, 0(x2) # load 0x15aa573aa3063c27 from memory into f14
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f11, 0(x2) # load 0x00008001 from memory into f11
fnmadd.h f1, f9, f14, f11, dyn # perform operation
fnmadd.h f1, f9, f14, f11, rdn # perform operation
fnmadd.h f1, f9, f14, f11, rmm # perform operation
fnmadd.h f1, f9, f14, f11, rne # perform operation
fnmadd.h f1, f9, f14, f11, rtz # perform operation
fnmadd.h f1, f9, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f9, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f9, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f9, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f9, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f9, f14, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7c00)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f2, 0(x2) # load 0x0000c93a from memory into f2
la x2, scratch
li x3, 0x67aa49a751cf3248 # load x3 with value 0x67aa49a751cf3248
sw x3, 0(x2) # store 0x67aa49a751cf3248 in memory
flh f8, 0(x2) # load 0x67aa49a751cf3248 from memory into f8
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f26, 0(x2) # load 0x00007c00 from memory into f26
fnmadd.h f14, f2, f8, f26, dyn # perform operation
fnmadd.h f14, f2, f8, f26, rdn # perform operation
fnmadd.h f14, f2, f8, f26, rmm # perform operation
fnmadd.h f14, f2, f8, f26, rne # perform operation
fnmadd.h f14, f2, f8, f26, rtz # perform operation
fnmadd.h f14, f2, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f2, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f2, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f2, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f2, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f2, f8, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xfc00)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f2, 0(x2) # load 0x0000c93a from memory into f2
la x2, scratch
li x3, 0xa3cda016e5caaaa # load x3 with value 0xa3cda016e5caaaa
sw x3, 0(x2) # store 0xa3cda016e5caaaa in memory
flh f16, 0(x2) # load 0xa3cda016e5caaaa from memory into f16
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f9, 0(x2) # load 0x0000fc00 from memory into f9
fnmadd.h f15, f2, f16, f9, dyn # perform operation
fnmadd.h f15, f2, f16, f9, rdn # perform operation
fnmadd.h f15, f2, f16, f9, rmm # perform operation
fnmadd.h f15, f2, f16, f9, rne # perform operation
fnmadd.h f15, f2, f16, f9, rtz # perform operation
fnmadd.h f15, f2, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f2, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f2, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f2, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f2, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f2, f16, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7e00)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f5, 0(x2) # load 0x0000c93a from memory into f5
la x2, scratch
li x3, 0x52d2e863107496bd # load x3 with value 0x52d2e863107496bd
sw x3, 0(x2) # store 0x52d2e863107496bd in memory
flh f30, 0(x2) # load 0x52d2e863107496bd from memory into f30
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f8, 0(x2) # load 0x00007e00 from memory into f8
fnmadd.h f13, f5, f30, f8, dyn # perform operation
fnmadd.h f13, f5, f30, f8, rdn # perform operation
fnmadd.h f13, f5, f30, f8, rmm # perform operation
fnmadd.h f13, f5, f30, f8, rne # perform operation
fnmadd.h f13, f5, f30, f8, rtz # perform operation
fnmadd.h f13, f5, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f5, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f5, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f5, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f5, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f5, f30, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7fff)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f20, 0(x2) # load 0x0000c93a from memory into f20
la x2, scratch
li x3, 0x354fa71204a3914 # load x3 with value 0x354fa71204a3914
sw x3, 0(x2) # store 0x354fa71204a3914 in memory
flh f22, 0(x2) # load 0x354fa71204a3914 from memory into f22
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f24, 0(x2) # load 0x00007fff from memory into f24
fnmadd.h f16, f20, f22, f24, dyn # perform operation
fnmadd.h f16, f20, f22, f24, rdn # perform operation
fnmadd.h f16, f20, f22, f24, rmm # perform operation
fnmadd.h f16, f20, f22, f24, rne # perform operation
fnmadd.h f16, f20, f22, f24, rtz # perform operation
fnmadd.h f16, f20, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f20, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f20, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f20, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f20, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f20, f22, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xfe00)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f28, 0(x2) # load 0x0000c93a from memory into f28
la x2, scratch
li x3, 0x6c6e9bf2abb5a5e0 # load x3 with value 0x6c6e9bf2abb5a5e0
sw x3, 0(x2) # store 0x6c6e9bf2abb5a5e0 in memory
flh f30, 0(x2) # load 0x6c6e9bf2abb5a5e0 from memory into f30
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f2, 0(x2) # load 0x0000fe00 from memory into f2
fnmadd.h f8, f28, f30, f2, dyn # perform operation
fnmadd.h f8, f28, f30, f2, rdn # perform operation
fnmadd.h f8, f28, f30, f2, rmm # perform operation
fnmadd.h f8, f28, f30, f2, rne # perform operation
fnmadd.h f8, f28, f30, f2, rtz # perform operation
fnmadd.h f8, f28, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f28, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f28, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f28, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f28, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f28, f30, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7c01)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f20, 0(x2) # load 0x0000c93a from memory into f20
la x2, scratch
li x3, 0xc507877bb1f173c3 # load x3 with value 0xc507877bb1f173c3
sw x3, 0(x2) # store 0xc507877bb1f173c3 in memory
flh f6, 0(x2) # load 0xc507877bb1f173c3 from memory into f6
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f16, 0(x2) # load 0x00007c01 from memory into f16
fnmadd.h f25, f20, f6, f16, dyn # perform operation
fnmadd.h f25, f20, f6, f16, rdn # perform operation
fnmadd.h f25, f20, f6, f16, rmm # perform operation
fnmadd.h f25, f20, f6, f16, rne # perform operation
fnmadd.h f25, f20, f6, f16, rtz # perform operation
fnmadd.h f25, f20, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f20, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f20, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f20, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f20, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f20, f6, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7dff)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
la x2, scratch
li x3, 0xff40925fd19ddc77 # load x3 with value 0xff40925fd19ddc77
sw x3, 0(x2) # store 0xff40925fd19ddc77 in memory
flh f20, 0(x2) # load 0xff40925fd19ddc77 from memory into f20
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f17, 0(x2) # load 0x00007dff from memory into f17
fnmadd.h f30, f12, f20, f17, dyn # perform operation
fnmadd.h f30, f12, f20, f17, rdn # perform operation
fnmadd.h f30, f12, f20, f17, rmm # perform operation
fnmadd.h f30, f12, f20, f17, rne # perform operation
fnmadd.h f30, f12, f20, f17, rtz # perform operation
fnmadd.h f30, f12, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f12, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f12, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f12, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f12, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f12, f20, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xfc01)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f5, 0(x2) # load 0x0000c93a from memory into f5
la x2, scratch
li x3, 0x59535eef8bd6e505 # load x3 with value 0x59535eef8bd6e505
sw x3, 0(x2) # store 0x59535eef8bd6e505 in memory
flh f12, 0(x2) # load 0x59535eef8bd6e505 from memory into f12
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f7, 0(x2) # load 0x0000fc01 from memory into f7
fnmadd.h f16, f5, f12, f7, dyn # perform operation
fnmadd.h f16, f5, f12, f7, rdn # perform operation
fnmadd.h f16, f5, f12, f7, rmm # perform operation
fnmadd.h f16, f5, f12, f7, rne # perform operation
fnmadd.h f16, f5, f12, f7, rtz # perform operation
fnmadd.h f16, f5, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f5, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f5, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f5, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f5, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f5, f12, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x58b4)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
la x2, scratch
li x3, 0xf8a1a549cf79878d # load x3 with value 0xf8a1a549cf79878d
sw x3, 0(x2) # store 0xf8a1a549cf79878d in memory
flh f14, 0(x2) # load 0xf8a1a549cf79878d from memory into f14
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f2, 0(x2) # load 0x000058b4 from memory into f2
fnmadd.h f30, f12, f14, f2, dyn # perform operation
fnmadd.h f30, f12, f14, f2, rdn # perform operation
fnmadd.h f30, f12, f14, f2, rmm # perform operation
fnmadd.h f30, f12, f14, f2, rne # perform operation
fnmadd.h f30, f12, f14, f2, rtz # perform operation
fnmadd.h f30, f12, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f12, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f12, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f12, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f12, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f12, f14, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xc93a)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f17, 0(x2) # load 0x0000c93a from memory into f17
la x2, scratch
li x3, 0xac155dec030fcfbb # load x3 with value 0xac155dec030fcfbb
sw x3, 0(x2) # store 0xac155dec030fcfbb in memory
flh f21, 0(x2) # load 0xac155dec030fcfbb from memory into f21
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f6, 0(x2) # load 0x0000c93a from memory into f6
fnmadd.h f28, f17, f21, f6, dyn # perform operation
fnmadd.h f28, f17, f21, f6, rdn # perform operation
fnmadd.h f28, f17, f21, f6, rmm # perform operation
fnmadd.h f28, f17, f21, f6, rne # perform operation
fnmadd.h f28, f17, f21, f6, rtz # perform operation
fnmadd.h f28, f17, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f17, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f17, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f17, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f17, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f17, f21, f6 # perform operation


# Testcase Random test for cp_NaNBox 
la x2, scratch
li x3, 0x4f22fd7633e46bd7 # load x3 with value 0x4f22fd7633e46bd7
sw x3, 0(x2) # store 0x4f22fd7633e46bd7 in memory
flh f14, 0(x2) # load 0x4f22fd7633e46bd7 from memory into f14
la x2, scratch
li x3, 0x6ce96de08d2d49b3 # load x3 with value 0x6ce96de08d2d49b3
sw x3, 0(x2) # store 0x6ce96de08d2d49b3 in memory
flh f19, 0(x2) # load 0x6ce96de08d2d49b3 from memory into f19
la x2, scratch
li x3, 0xf4490ac907011427 # load x3 with value 0xf4490ac907011427
sw x3, 0(x2) # store 0xf4490ac907011427 in memory
flh f10, 0(x2) # load 0xf4490ac907011427 from memory into f10
fnmadd.h f21, f14, f19, f10 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0x0 in f21)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x1a1c14c09b468fc8 # load x3 with value 0x1a1c14c09b468fc8
sw x3, 0(x2) # store 0x1a1c14c09b468fc8 in memory
flw f16, 0(x2) # load 0x1a1c14c09b468fc8 from memory into f16
la x2, scratch
li x3, 0x35155b285b60908d # load x3 with value 0x35155b285b60908d
sw x3, 0(x2) # store 0x35155b285b60908d in memory
flw f7, 0(x2) # load 0x35155b285b60908d from memory into f7
fnmadd.h f24, f21, f16, f7 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xfffe8000 in f8)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xfffe8000 # load x3 with value 0xfffe8000
sw x3, 0(x2) # store 0xfffe8000 in memory
flw f8, 0(x2) # load 0xfffe8000 from memory into f8
la x2, scratch
li x3, 0x36e19095d00b50d0 # load x3 with value 0x36e19095d00b50d0
sw x3, 0(x2) # store 0x36e19095d00b50d0 in memory
flw f27, 0(x2) # load 0x36e19095d00b50d0 from memory into f27
la x2, scratch
li x3, 0x307f305062a87059 # load x3 with value 0x307f305062a87059
sw x3, 0(x2) # store 0x307f305062a87059 in memory
flw f13, 0(x2) # load 0x307f305062a87059 from memory into f13
fnmadd.h f2, f8, f27, f13 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0x7fff3c00 in f7)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fff3c00 # load x3 with value 0x7fff3c00
sw x3, 0(x2) # store 0x7fff3c00 in memory
flw f7, 0(x2) # load 0x7fff3c00 from memory into f7
la x2, scratch
li x3, 0xf04af913149c6862 # load x3 with value 0xf04af913149c6862
sw x3, 0(x2) # store 0xf04af913149c6862 in memory
flw f20, 0(x2) # load 0xf04af913149c6862 from memory into f20
la x2, scratch
li x3, 0xd8e71612226c8003 # load x3 with value 0xd8e71612226c8003
sw x3, 0(x2) # store 0xd8e71612226c8003 in memory
flw f17, 0(x2) # load 0xd8e71612226c8003 from memory into f17
fnmadd.h f9, f7, f20, f17 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xbeefbc00 in f14)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbeefbc00 # load x3 with value 0xbeefbc00
sw x3, 0(x2) # store 0xbeefbc00 in memory
flw f14, 0(x2) # load 0xbeefbc00 from memory into f14
la x2, scratch
li x3, 0x9b34cb517f3c88d # load x3 with value 0x9b34cb517f3c88d
sw x3, 0(x2) # store 0x9b34cb517f3c88d in memory
flw f10, 0(x2) # load 0x9b34cb517f3c88d from memory into f10
la x2, scratch
li x3, 0xbff453602fafb5d # load x3 with value 0xbff453602fafb5d
sw x3, 0(x2) # store 0xbff453602fafb5d in memory
flw f5, 0(x2) # load 0xbff453602fafb5d from memory into f5
fnmadd.h f2, f14, f10, f5 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xfeff0400 in f26)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xfeff0400 # load x3 with value 0xfeff0400
sw x3, 0(x2) # store 0xfeff0400 in memory
flw f26, 0(x2) # load 0xfeff0400 from memory into f26
la x2, scratch
li x3, 0x7d94c579eb5e928d # load x3 with value 0x7d94c579eb5e928d
sw x3, 0(x2) # store 0x7d94c579eb5e928d in memory
flw f15, 0(x2) # load 0x7d94c579eb5e928d from memory into f15
la x2, scratch
li x3, 0xffa73d18b43d517b # load x3 with value 0xffa73d18b43d517b
sw x3, 0(x2) # store 0xffa73d18b43d517b in memory
flw f14, 0(x2) # load 0xffa73d18b43d517b from memory into f14
fnmadd.h f24, f26, f15, f14 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xfff8400 in f31)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0fff8400 # load x3 with value 0x0fff8400
sw x3, 0(x2) # store 0x0fff8400 in memory
flw f31, 0(x2) # load 0x0fff8400 from memory into f31
la x2, scratch
li x3, 0xd50aa491d325f6ae # load x3 with value 0xd50aa491d325f6ae
sw x3, 0(x2) # store 0xd50aa491d325f6ae in memory
flw f27, 0(x2) # load 0xd50aa491d325f6ae from memory into f27
la x2, scratch
li x3, 0x6ca561f54af359af # load x3 with value 0x6ca561f54af359af
sw x3, 0(x2) # store 0x6ca561f54af359af in memory
flw f20, 0(x2) # load 0x6ca561f54af359af from memory into f20
fnmadd.h f14, f31, f27, f20 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xefff7bff in f2)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xefff7bff # load x3 with value 0xefff7bff
sw x3, 0(x2) # store 0xefff7bff in memory
flw f2, 0(x2) # load 0xefff7bff from memory into f2
la x2, scratch
li x3, 0x323b0a679cdd1b1b # load x3 with value 0x323b0a679cdd1b1b
sw x3, 0(x2) # store 0x323b0a679cdd1b1b in memory
flw f6, 0(x2) # load 0x323b0a679cdd1b1b from memory into f6
la x2, scratch
li x3, 0x366f88d598262d6c # load x3 with value 0x366f88d598262d6c
sw x3, 0(x2) # store 0x366f88d598262d6c in memory
flw f30, 0(x2) # load 0x366f88d598262d6c from memory into f30
fnmadd.h f27, f2, f6, f30 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xc0defbff in f29)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0defbff # load x3 with value 0xc0defbff
sw x3, 0(x2) # store 0xc0defbff in memory
flw f29, 0(x2) # load 0xc0defbff from memory into f29
la x2, scratch
li x3, 0x3fc8a7db0f02ec9 # load x3 with value 0x3fc8a7db0f02ec9
sw x3, 0(x2) # store 0x3fc8a7db0f02ec9 in memory
flw f12, 0(x2) # load 0x3fc8a7db0f02ec9 from memory into f12
la x2, scratch
li x3, 0x41aed208e1256148 # load x3 with value 0x41aed208e1256148
sw x3, 0(x2) # store 0x41aed208e1256148 in memory
flw f20, 0(x2) # load 0x41aed208e1256148 from memory into f20
fnmadd.h f7, f29, f12, f20 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0x4f1a7c00 in f23)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x4f1a7c00 # load x3 with value 0x4f1a7c00
sw x3, 0(x2) # store 0x4f1a7c00 in memory
flw f23, 0(x2) # load 0x4f1a7c00 from memory into f23
la x2, scratch
li x3, 0x91c3ec2d506710cb # load x3 with value 0x91c3ec2d506710cb
sw x3, 0(x2) # store 0x91c3ec2d506710cb in memory
flw f19, 0(x2) # load 0x91c3ec2d506710cb from memory into f19
la x2, scratch
li x3, 0x753e2306355d5b06 # load x3 with value 0x753e2306355d5b06
sw x3, 0(x2) # store 0x753e2306355d5b06 in memory
flw f26, 0(x2) # load 0x753e2306355d5b06 from memory into f26
fnmadd.h f11, f23, f19, f26 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xffffc00 in f30)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0ffffc00 # load x3 with value 0x0ffffc00
sw x3, 0(x2) # store 0x0ffffc00 in memory
flw f30, 0(x2) # load 0x0ffffc00 from memory into f30
la x2, scratch
li x3, 0xf7a8dddd8353f648 # load x3 with value 0xf7a8dddd8353f648
sw x3, 0(x2) # store 0xf7a8dddd8353f648 in memory
flw f6, 0(x2) # load 0xf7a8dddd8353f648 from memory into f6
la x2, scratch
li x3, 0x7b3239fcb95f6d63 # load x3 with value 0x7b3239fcb95f6d63
sw x3, 0(x2) # store 0x7b3239fcb95f6d63 in memory
flw f28, 0(x2) # load 0x7b3239fcb95f6d63 from memory into f28
fnmadd.h f20, f30, f6, f28 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xffef7e00 in f31)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffef7e00 # load x3 with value 0xffef7e00
sw x3, 0(x2) # store 0xffef7e00 in memory
flw f31, 0(x2) # load 0xffef7e00 from memory into f31
la x2, scratch
li x3, 0x65dceadb931a8df0 # load x3 with value 0x65dceadb931a8df0
sw x3, 0(x2) # store 0x65dceadb931a8df0 in memory
flw f26, 0(x2) # load 0x65dceadb931a8df0 from memory into f26
la x2, scratch
li x3, 0x16e5e3c875a2dc7e # load x3 with value 0x16e5e3c875a2dc7e
sw x3, 0(x2) # store 0x16e5e3c875a2dc7e in memory
flw f16, 0(x2) # load 0x16e5e3c875a2dc7e from memory into f16
fnmadd.h f10, f31, f26, f16 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xfeef7fff in f20)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xfeef7fff # load x3 with value 0xfeef7fff
sw x3, 0(x2) # store 0xfeef7fff in memory
flw f20, 0(x2) # load 0xfeef7fff from memory into f20
la x2, scratch
li x3, 0xa6b1b84e0318812d # load x3 with value 0xa6b1b84e0318812d
sw x3, 0(x2) # store 0xa6b1b84e0318812d in memory
flw f17, 0(x2) # load 0xa6b1b84e0318812d from memory into f17
la x2, scratch
li x3, 0xa5aa43c155c448f4 # load x3 with value 0xa5aa43c155c448f4
sw x3, 0(x2) # store 0xa5aa43c155c448f4 in memory
flw f8, 0(x2) # load 0xa5aa43c155c448f4 from memory into f8
fnmadd.h f25, f20, f17, f8 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xa1b27c01 in f10)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa1b27c01 # load x3 with value 0xa1b27c01
sw x3, 0(x2) # store 0xa1b27c01 in memory
flw f10, 0(x2) # load 0xa1b27c01 from memory into f10
la x2, scratch
li x3, 0x1afb728d717e392f # load x3 with value 0x1afb728d717e392f
sw x3, 0(x2) # store 0x1afb728d717e392f in memory
flw f15, 0(x2) # load 0x1afb728d717e392f from memory into f15
la x2, scratch
li x3, 0x83a6b547d46bdf5e # load x3 with value 0x83a6b547d46bdf5e
sw x3, 0(x2) # store 0x83a6b547d46bdf5e in memory
flw f11, 0(x2) # load 0x83a6b547d46bdf5e from memory into f11
fnmadd.h f13, f10, f15, f11 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0x4fd77dff in f22)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x4fd77dff # load x3 with value 0x4fd77dff
sw x3, 0(x2) # store 0x4fd77dff in memory
flw f22, 0(x2) # load 0x4fd77dff from memory into f22
la x2, scratch
li x3, 0xd76e4ee38f937a7 # load x3 with value 0xd76e4ee38f937a7
sw x3, 0(x2) # store 0xd76e4ee38f937a7 in memory
flw f28, 0(x2) # load 0xd76e4ee38f937a7 from memory into f28
la x2, scratch
li x3, 0x56659d8596deb41c # load x3 with value 0x56659d8596deb41c
sw x3, 0(x2) # store 0x56659d8596deb41c in memory
flw f15, 0(x2) # load 0x56659d8596deb41c from memory into f15
fnmadd.h f20, f22, f28, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
la x2, scratch
li x3, 0xa211c7b8857034f8 # load x3 with value 0xa211c7b8857034f8
sw x3, 0(x2) # store 0xa211c7b8857034f8 in memory
flw f17, 0(x2) # load 0xa211c7b8857034f8 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0xef7695931b5095b0 # load x3 with value 0xef7695931b5095b0
sw x3, 0(x2) # store 0xef7695931b5095b0 in memory
flw f16, 0(x2) # load 0xef7695931b5095b0 from memory into f16
fnmadd.h f8, f17, f18, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfffe8000)
la x2, scratch
li x3, 0x7b662e46d8fe41b1 # load x3 with value 0x7b662e46d8fe41b1
sw x3, 0(x2) # store 0x7b662e46d8fe41b1 in memory
flw f15, 0(x2) # load 0x7b662e46d8fe41b1 from memory into f15
la x2, scratch
li x3, 0xfffe8000 # load x3 with value 0xfffe8000
sw x3, 0(x2) # store 0xfffe8000 in memory
flw f30, 0(x2) # load 0xfffe8000 from memory into f30
la x2, scratch
li x3, 0x46d13470c43fce85 # load x3 with value 0x46d13470c43fce85
sw x3, 0(x2) # store 0x46d13470c43fce85 in memory
flw f27, 0(x2) # load 0x46d13470c43fce85 from memory into f27
fnmadd.h f10, f15, f30, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fff3c00)
la x2, scratch
li x3, 0xba59b24771fe63d8 # load x3 with value 0xba59b24771fe63d8
sw x3, 0(x2) # store 0xba59b24771fe63d8 in memory
flw f31, 0(x2) # load 0xba59b24771fe63d8 from memory into f31
la x2, scratch
li x3, 0x7fff3c00 # load x3 with value 0x7fff3c00
sw x3, 0(x2) # store 0x7fff3c00 in memory
flw f19, 0(x2) # load 0x7fff3c00 from memory into f19
la x2, scratch
li x3, 0x75354a43fbf498a1 # load x3 with value 0x75354a43fbf498a1
sw x3, 0(x2) # store 0x75354a43fbf498a1 in memory
flw f18, 0(x2) # load 0x75354a43fbf498a1 from memory into f18
fnmadd.h f23, f31, f19, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbeefbc00)
la x2, scratch
li x3, 0xd890138442d61c56 # load x3 with value 0xd890138442d61c56
sw x3, 0(x2) # store 0xd890138442d61c56 in memory
flw f23, 0(x2) # load 0xd890138442d61c56 from memory into f23
la x2, scratch
li x3, 0xbeefbc00 # load x3 with value 0xbeefbc00
sw x3, 0(x2) # store 0xbeefbc00 in memory
flw f22, 0(x2) # load 0xbeefbc00 from memory into f22
la x2, scratch
li x3, 0x2c824cf26cb8302d # load x3 with value 0x2c824cf26cb8302d
sw x3, 0(x2) # store 0x2c824cf26cb8302d in memory
flw f12, 0(x2) # load 0x2c824cf26cb8302d from memory into f12
fnmadd.h f11, f23, f22, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfeff0400)
la x2, scratch
li x3, 0xd812456578c94f02 # load x3 with value 0xd812456578c94f02
sw x3, 0(x2) # store 0xd812456578c94f02 in memory
flw f11, 0(x2) # load 0xd812456578c94f02 from memory into f11
la x2, scratch
li x3, 0xfeff0400 # load x3 with value 0xfeff0400
sw x3, 0(x2) # store 0xfeff0400 in memory
flw f15, 0(x2) # load 0xfeff0400 from memory into f15
la x2, scratch
li x3, 0x4aac4f04eccffcd4 # load x3 with value 0x4aac4f04eccffcd4
sw x3, 0(x2) # store 0x4aac4f04eccffcd4 in memory
flw f24, 0(x2) # load 0x4aac4f04eccffcd4 from memory into f24
fnmadd.h f22, f11, f15, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfff8400)
la x2, scratch
li x3, 0x86fd9a5e75f2de00 # load x3 with value 0x86fd9a5e75f2de00
sw x3, 0(x2) # store 0x86fd9a5e75f2de00 in memory
flw f7, 0(x2) # load 0x86fd9a5e75f2de00 from memory into f7
la x2, scratch
li x3, 0x0fff8400 # load x3 with value 0x0fff8400
sw x3, 0(x2) # store 0x0fff8400 in memory
flw f1, 0(x2) # load 0x0fff8400 from memory into f1
la x2, scratch
li x3, 0x8c5cbc18cf43041c # load x3 with value 0x8c5cbc18cf43041c
sw x3, 0(x2) # store 0x8c5cbc18cf43041c in memory
flw f3, 0(x2) # load 0x8c5cbc18cf43041c from memory into f3
fnmadd.h f10, f7, f1, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xefff7bff)
la x2, scratch
li x3, 0xbbb7f18b8664d080 # load x3 with value 0xbbb7f18b8664d080
sw x3, 0(x2) # store 0xbbb7f18b8664d080 in memory
flw f9, 0(x2) # load 0xbbb7f18b8664d080 from memory into f9
la x2, scratch
li x3, 0xefff7bff # load x3 with value 0xefff7bff
sw x3, 0(x2) # store 0xefff7bff in memory
flw f15, 0(x2) # load 0xefff7bff from memory into f15
la x2, scratch
li x3, 0x5e51a24bf0b78851 # load x3 with value 0x5e51a24bf0b78851
sw x3, 0(x2) # store 0x5e51a24bf0b78851 in memory
flw f13, 0(x2) # load 0x5e51a24bf0b78851 from memory into f13
fnmadd.h f11, f9, f15, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc0defbff)
la x2, scratch
li x3, 0xb91bd9002c5fa36 # load x3 with value 0xb91bd9002c5fa36
sw x3, 0(x2) # store 0xb91bd9002c5fa36 in memory
flw f2, 0(x2) # load 0xb91bd9002c5fa36 from memory into f2
la x2, scratch
li x3, 0xc0defbff # load x3 with value 0xc0defbff
sw x3, 0(x2) # store 0xc0defbff in memory
flw f19, 0(x2) # load 0xc0defbff from memory into f19
la x2, scratch
li x3, 0x66b061a8da3ff6f6 # load x3 with value 0x66b061a8da3ff6f6
sw x3, 0(x2) # store 0x66b061a8da3ff6f6 in memory
flw f18, 0(x2) # load 0x66b061a8da3ff6f6 from memory into f18
fnmadd.h f29, f2, f19, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x4f1a7c00)
la x2, scratch
li x3, 0x2279fb7c9275384d # load x3 with value 0x2279fb7c9275384d
sw x3, 0(x2) # store 0x2279fb7c9275384d in memory
flw f15, 0(x2) # load 0x2279fb7c9275384d from memory into f15
la x2, scratch
li x3, 0x4f1a7c00 # load x3 with value 0x4f1a7c00
sw x3, 0(x2) # store 0x4f1a7c00 in memory
flw f16, 0(x2) # load 0x4f1a7c00 from memory into f16
la x2, scratch
li x3, 0x1f967f5f894125c3 # load x3 with value 0x1f967f5f894125c3
sw x3, 0(x2) # store 0x1f967f5f894125c3 in memory
flw f12, 0(x2) # load 0x1f967f5f894125c3 from memory into f12
fnmadd.h f24, f15, f16, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffffc00)
la x2, scratch
li x3, 0x9602bbd8a9a19461 # load x3 with value 0x9602bbd8a9a19461
sw x3, 0(x2) # store 0x9602bbd8a9a19461 in memory
flw f21, 0(x2) # load 0x9602bbd8a9a19461 from memory into f21
la x2, scratch
li x3, 0x0ffffc00 # load x3 with value 0x0ffffc00
sw x3, 0(x2) # store 0x0ffffc00 in memory
flw f25, 0(x2) # load 0x0ffffc00 from memory into f25
la x2, scratch
li x3, 0xa1a9916775187801 # load x3 with value 0xa1a9916775187801
sw x3, 0(x2) # store 0xa1a9916775187801 in memory
flw f31, 0(x2) # load 0xa1a9916775187801 from memory into f31
fnmadd.h f28, f21, f25, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffef7e00)
la x2, scratch
li x3, 0x91b93d8949f26dcb # load x3 with value 0x91b93d8949f26dcb
sw x3, 0(x2) # store 0x91b93d8949f26dcb in memory
flw f5, 0(x2) # load 0x91b93d8949f26dcb from memory into f5
la x2, scratch
li x3, 0xffef7e00 # load x3 with value 0xffef7e00
sw x3, 0(x2) # store 0xffef7e00 in memory
flw f14, 0(x2) # load 0xffef7e00 from memory into f14
la x2, scratch
li x3, 0x4bdfeb7b808a11b5 # load x3 with value 0x4bdfeb7b808a11b5
sw x3, 0(x2) # store 0x4bdfeb7b808a11b5 in memory
flw f22, 0(x2) # load 0x4bdfeb7b808a11b5 from memory into f22
fnmadd.h f27, f5, f14, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfeef7fff)
la x2, scratch
li x3, 0x83c82c14771917e7 # load x3 with value 0x83c82c14771917e7
sw x3, 0(x2) # store 0x83c82c14771917e7 in memory
flw f15, 0(x2) # load 0x83c82c14771917e7 from memory into f15
la x2, scratch
li x3, 0xfeef7fff # load x3 with value 0xfeef7fff
sw x3, 0(x2) # store 0xfeef7fff in memory
flw f3, 0(x2) # load 0xfeef7fff from memory into f3
la x2, scratch
li x3, 0xa1b80b9e1ce03ca8 # load x3 with value 0xa1b80b9e1ce03ca8
sw x3, 0(x2) # store 0xa1b80b9e1ce03ca8 in memory
flw f24, 0(x2) # load 0xa1b80b9e1ce03ca8 from memory into f24
fnmadd.h f20, f15, f3, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xa1b27c01)
la x2, scratch
li x3, 0x4f952580509a6f5f # load x3 with value 0x4f952580509a6f5f
sw x3, 0(x2) # store 0x4f952580509a6f5f in memory
flw f3, 0(x2) # load 0x4f952580509a6f5f from memory into f3
la x2, scratch
li x3, 0xa1b27c01 # load x3 with value 0xa1b27c01
sw x3, 0(x2) # store 0xa1b27c01 in memory
flw f28, 0(x2) # load 0xa1b27c01 from memory into f28
la x2, scratch
li x3, 0xf0ce3ac53a1b42c6 # load x3 with value 0xf0ce3ac53a1b42c6
sw x3, 0(x2) # store 0xf0ce3ac53a1b42c6 in memory
flw f24, 0(x2) # load 0xf0ce3ac53a1b42c6 from memory into f24
fnmadd.h f26, f3, f28, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x4fd77dff)
la x2, scratch
li x3, 0x6861cad12aae0b80 # load x3 with value 0x6861cad12aae0b80
sw x3, 0(x2) # store 0x6861cad12aae0b80 in memory
flw f19, 0(x2) # load 0x6861cad12aae0b80 from memory into f19
la x2, scratch
li x3, 0x4fd77dff # load x3 with value 0x4fd77dff
sw x3, 0(x2) # store 0x4fd77dff in memory
flw f14, 0(x2) # load 0x4fd77dff from memory into f14
la x2, scratch
li x3, 0x26ba9a1aa3d6ad4b # load x3 with value 0x26ba9a1aa3d6ad4b
sw x3, 0(x2) # store 0x26ba9a1aa3d6ad4b in memory
flw f1, 0(x2) # load 0x26ba9a1aa3d6ad4b from memory into f1
fnmadd.h f3, f19, f14, f1 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
la x2, scratch
li x3, 0xc63451e36a880610 # load x3 with value 0xc63451e36a880610
sw x3, 0(x2) # store 0xc63451e36a880610 in memory
flw f20, 0(x2) # load 0xc63451e36a880610 from memory into f20
la x2, scratch
li x3, 0xa13beade51445196 # load x3 with value 0xa13beade51445196
sw x3, 0(x2) # store 0xa13beade51445196 in memory
flw f19, 0(x2) # load 0xa13beade51445196 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
fnmadd.h f15, f20, f19, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfffe8000)
la x2, scratch
li x3, 0x8a1db4174e8c980 # load x3 with value 0x8a1db4174e8c980
sw x3, 0(x2) # store 0x8a1db4174e8c980 in memory
flw f24, 0(x2) # load 0x8a1db4174e8c980 from memory into f24
la x2, scratch
li x3, 0x86f4875cd840d4b9 # load x3 with value 0x86f4875cd840d4b9
sw x3, 0(x2) # store 0x86f4875cd840d4b9 in memory
flw f25, 0(x2) # load 0x86f4875cd840d4b9 from memory into f25
la x2, scratch
li x3, 0xfffe8000 # load x3 with value 0xfffe8000
sw x3, 0(x2) # store 0xfffe8000 in memory
flw f20, 0(x2) # load 0xfffe8000 from memory into f20
fnmadd.h f10, f24, f25, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fff3c00)
la x2, scratch
li x3, 0xe7ebfdfd9ba5b1f9 # load x3 with value 0xe7ebfdfd9ba5b1f9
sw x3, 0(x2) # store 0xe7ebfdfd9ba5b1f9 in memory
flw f7, 0(x2) # load 0xe7ebfdfd9ba5b1f9 from memory into f7
la x2, scratch
li x3, 0xdd90de7c2efa7ab7 # load x3 with value 0xdd90de7c2efa7ab7
sw x3, 0(x2) # store 0xdd90de7c2efa7ab7 in memory
flw f21, 0(x2) # load 0xdd90de7c2efa7ab7 from memory into f21
la x2, scratch
li x3, 0x7fff3c00 # load x3 with value 0x7fff3c00
sw x3, 0(x2) # store 0x7fff3c00 in memory
flw f17, 0(x2) # load 0x7fff3c00 from memory into f17
fnmadd.h f6, f7, f21, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbeefbc00)
la x2, scratch
li x3, 0xed6aa4b39d3faf17 # load x3 with value 0xed6aa4b39d3faf17
sw x3, 0(x2) # store 0xed6aa4b39d3faf17 in memory
flw f19, 0(x2) # load 0xed6aa4b39d3faf17 from memory into f19
la x2, scratch
li x3, 0x639651cadeb194bd # load x3 with value 0x639651cadeb194bd
sw x3, 0(x2) # store 0x639651cadeb194bd in memory
flw f27, 0(x2) # load 0x639651cadeb194bd from memory into f27
la x2, scratch
li x3, 0xbeefbc00 # load x3 with value 0xbeefbc00
sw x3, 0(x2) # store 0xbeefbc00 in memory
flw f9, 0(x2) # load 0xbeefbc00 from memory into f9
fnmadd.h f23, f19, f27, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfeff0400)
la x2, scratch
li x3, 0xf98db818d5e8046a # load x3 with value 0xf98db818d5e8046a
sw x3, 0(x2) # store 0xf98db818d5e8046a in memory
flw f22, 0(x2) # load 0xf98db818d5e8046a from memory into f22
la x2, scratch
li x3, 0xc132d3c706402a95 # load x3 with value 0xc132d3c706402a95
sw x3, 0(x2) # store 0xc132d3c706402a95 in memory
flw f11, 0(x2) # load 0xc132d3c706402a95 from memory into f11
la x2, scratch
li x3, 0xfeff0400 # load x3 with value 0xfeff0400
sw x3, 0(x2) # store 0xfeff0400 in memory
flw f6, 0(x2) # load 0xfeff0400 from memory into f6
fnmadd.h f8, f22, f11, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfff8400)
la x2, scratch
li x3, 0x2902fbbac66e96ea # load x3 with value 0x2902fbbac66e96ea
sw x3, 0(x2) # store 0x2902fbbac66e96ea in memory
flw f15, 0(x2) # load 0x2902fbbac66e96ea from memory into f15
la x2, scratch
li x3, 0xaf51ee940ca11ff0 # load x3 with value 0xaf51ee940ca11ff0
sw x3, 0(x2) # store 0xaf51ee940ca11ff0 in memory
flw f5, 0(x2) # load 0xaf51ee940ca11ff0 from memory into f5
la x2, scratch
li x3, 0x0fff8400 # load x3 with value 0x0fff8400
sw x3, 0(x2) # store 0x0fff8400 in memory
flw f31, 0(x2) # load 0x0fff8400 from memory into f31
fnmadd.h f13, f15, f5, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xefff7bff)
la x2, scratch
li x3, 0x26757cef5594d0f3 # load x3 with value 0x26757cef5594d0f3
sw x3, 0(x2) # store 0x26757cef5594d0f3 in memory
flw f21, 0(x2) # load 0x26757cef5594d0f3 from memory into f21
la x2, scratch
li x3, 0xf29d10665025bd66 # load x3 with value 0xf29d10665025bd66
sw x3, 0(x2) # store 0xf29d10665025bd66 in memory
flw f6, 0(x2) # load 0xf29d10665025bd66 from memory into f6
la x2, scratch
li x3, 0xefff7bff # load x3 with value 0xefff7bff
sw x3, 0(x2) # store 0xefff7bff in memory
flw f15, 0(x2) # load 0xefff7bff from memory into f15
fnmadd.h f27, f21, f6, f15 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc0defbff)
la x2, scratch
li x3, 0x61f437b448563ba3 # load x3 with value 0x61f437b448563ba3
sw x3, 0(x2) # store 0x61f437b448563ba3 in memory
flw f8, 0(x2) # load 0x61f437b448563ba3 from memory into f8
la x2, scratch
li x3, 0x9987446fc4db5ed6 # load x3 with value 0x9987446fc4db5ed6
sw x3, 0(x2) # store 0x9987446fc4db5ed6 in memory
flw f24, 0(x2) # load 0x9987446fc4db5ed6 from memory into f24
la x2, scratch
li x3, 0xc0defbff # load x3 with value 0xc0defbff
sw x3, 0(x2) # store 0xc0defbff in memory
flw f1, 0(x2) # load 0xc0defbff from memory into f1
fnmadd.h f16, f8, f24, f1 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x4f1a7c00)
la x2, scratch
li x3, 0xbe0a85d98342744f # load x3 with value 0xbe0a85d98342744f
sw x3, 0(x2) # store 0xbe0a85d98342744f in memory
flw f24, 0(x2) # load 0xbe0a85d98342744f from memory into f24
la x2, scratch
li x3, 0x8fca3e0a46c88304 # load x3 with value 0x8fca3e0a46c88304
sw x3, 0(x2) # store 0x8fca3e0a46c88304 in memory
flw f30, 0(x2) # load 0x8fca3e0a46c88304 from memory into f30
la x2, scratch
li x3, 0x4f1a7c00 # load x3 with value 0x4f1a7c00
sw x3, 0(x2) # store 0x4f1a7c00 in memory
flw f22, 0(x2) # load 0x4f1a7c00 from memory into f22
fnmadd.h f19, f24, f30, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffffc00)
la x2, scratch
li x3, 0x522c6db04f2df87b # load x3 with value 0x522c6db04f2df87b
sw x3, 0(x2) # store 0x522c6db04f2df87b in memory
flw f22, 0(x2) # load 0x522c6db04f2df87b from memory into f22
la x2, scratch
li x3, 0xde3ba85524b1f838 # load x3 with value 0xde3ba85524b1f838
sw x3, 0(x2) # store 0xde3ba85524b1f838 in memory
flw f25, 0(x2) # load 0xde3ba85524b1f838 from memory into f25
la x2, scratch
li x3, 0x0ffffc00 # load x3 with value 0x0ffffc00
sw x3, 0(x2) # store 0x0ffffc00 in memory
flw f17, 0(x2) # load 0x0ffffc00 from memory into f17
fnmadd.h f9, f22, f25, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffef7e00)
la x2, scratch
li x3, 0xb80fa6cd71433164 # load x3 with value 0xb80fa6cd71433164
sw x3, 0(x2) # store 0xb80fa6cd71433164 in memory
flw f30, 0(x2) # load 0xb80fa6cd71433164 from memory into f30
la x2, scratch
li x3, 0x4c523fdacd7057e7 # load x3 with value 0x4c523fdacd7057e7
sw x3, 0(x2) # store 0x4c523fdacd7057e7 in memory
flw f15, 0(x2) # load 0x4c523fdacd7057e7 from memory into f15
la x2, scratch
li x3, 0xffef7e00 # load x3 with value 0xffef7e00
sw x3, 0(x2) # store 0xffef7e00 in memory
flw f29, 0(x2) # load 0xffef7e00 from memory into f29
fnmadd.h f24, f30, f15, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfeef7fff)
la x2, scratch
li x3, 0xce715cbd5faee896 # load x3 with value 0xce715cbd5faee896
sw x3, 0(x2) # store 0xce715cbd5faee896 in memory
flw f20, 0(x2) # load 0xce715cbd5faee896 from memory into f20
la x2, scratch
li x3, 0xb13eac015e2da23c # load x3 with value 0xb13eac015e2da23c
sw x3, 0(x2) # store 0xb13eac015e2da23c in memory
flw f13, 0(x2) # load 0xb13eac015e2da23c from memory into f13
la x2, scratch
li x3, 0xfeef7fff # load x3 with value 0xfeef7fff
sw x3, 0(x2) # store 0xfeef7fff in memory
flw f17, 0(x2) # load 0xfeef7fff from memory into f17
fnmadd.h f23, f20, f13, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xa1b27c01)
la x2, scratch
li x3, 0x3de549ea2daba6d2 # load x3 with value 0x3de549ea2daba6d2
sw x3, 0(x2) # store 0x3de549ea2daba6d2 in memory
flw f24, 0(x2) # load 0x3de549ea2daba6d2 from memory into f24
la x2, scratch
li x3, 0x2d07014e76e898cd # load x3 with value 0x2d07014e76e898cd
sw x3, 0(x2) # store 0x2d07014e76e898cd in memory
flw f31, 0(x2) # load 0x2d07014e76e898cd from memory into f31
la x2, scratch
li x3, 0xa1b27c01 # load x3 with value 0xa1b27c01
sw x3, 0(x2) # store 0xa1b27c01 in memory
flw f27, 0(x2) # load 0xa1b27c01 from memory into f27
fnmadd.h f6, f24, f31, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x4fd77dff)
la x2, scratch
li x3, 0x446289a08b2730b4 # load x3 with value 0x446289a08b2730b4
sw x3, 0(x2) # store 0x446289a08b2730b4 in memory
flw f29, 0(x2) # load 0x446289a08b2730b4 from memory into f29
la x2, scratch
li x3, 0x5de3811ef84a2e22 # load x3 with value 0x5de3811ef84a2e22
sw x3, 0(x2) # store 0x5de3811ef84a2e22 in memory
flw f16, 0(x2) # load 0x5de3811ef84a2e22 from memory into f16
la x2, scratch
li x3, 0x4fd77dff # load x3 with value 0x4fd77dff
sw x3, 0(x2) # store 0x4fd77dff in memory
flw f31, 0(x2) # load 0x4fd77dff from memory into f31
fnmadd.h f11, f29, f16, f31 # perform operation

.EQU SIGSIZE,0


 # testgen_footer.S


write_tohost:
    la t1, tohost
    li t0, 1
    sw t0, 0(t1)
    sw zero, 4(t1)

self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 136

.data 

.section .tohost 
tohost: # write to HTIF
    .dword 0
fromhost:
    .dword 0

.align 4
begin_signature:
    .fill SIGSIZE*8/__riscv_xlen,__riscv_xlen/8,0xdeadbeef
end_signature:

.end
