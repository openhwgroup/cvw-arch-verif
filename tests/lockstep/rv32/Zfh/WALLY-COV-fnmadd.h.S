///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/lockstep/rv32/Zfh/WALLY-COV-fnmadd.h.S
// David_Harris@hmc.edu

 # testgen_header.S
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

#include "macros.h"

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

# initialize signature pointer
la x4, begin_signature

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cp_gpr/fpr_hazard nohaz test
add x20, x14, x3 # perform first operation
fnmadd.h f17, f21, f18, f31 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x14, x5, x31 # perform first operation
fnmadd.h f15, f12, f25, f9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x16, x19, x8 # perform first operation
fnmadd.h f27, f21, f26, f6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f16, f2, f21 # perform first operation
fnmadd.h f21, f16, f13, f18 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f21, f11, f29 # perform first operation
fnmadd.h f21, f7, f21, f20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f12, f3, f16 # perform first operation
fnmadd.h f16, f2, f24, f12 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f31, f27, f11 # perform first operation
fnmadd.h f31, f12, f1, f19 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f22, f11, f13 # perform first operation
fnmadd.h f22, f18, f28, f7 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f26, f20, f3 # perform first operation
fnmadd.h f26, f1, f30, f24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f9, f22, f6 # perform first operation
fnmadd.h f22, f11, f15, f19 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f9, f22, f14 # perform first operation
fnmadd.h f14, f19, f29, f6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f14, f26, f11 # perform first operation
fnmadd.h f23, f5, f18, f28 # perform second (triggering) operation

# Testcase cp_fs1 (Test source fs1 = f0)
la x2, scratch
li x3, 0xf1ff8f24 # load x3 with value 0xf1ff8f24
sw x3, 0(x2) # store 0xf1ff8f24 in memory
flh f0, 0(x2) # load 0xf1ff8f24 from memory into f0
la x2, scratch
li x3, 0x811452b9 # load x3 with value 0x811452b9
sw x3, 0(x2) # store 0x811452b9 in memory
flh f9, 0(x2) # load 0x811452b9 from memory into f9
la x2, scratch
li x3, 0x3c6711e6 # load x3 with value 0x3c6711e6
sw x3, 0(x2) # store 0x3c6711e6 in memory
flh f17, 0(x2) # load 0x3c6711e6 from memory into f17
fnmadd.h f5, f0, f9, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
la x2, scratch
li x3, 0x222b942b # load x3 with value 0x222b942b
sw x3, 0(x2) # store 0x222b942b in memory
flh f1, 0(x2) # load 0x222b942b from memory into f1
la x2, scratch
li x3, 0xa55e42c8 # load x3 with value 0xa55e42c8
sw x3, 0(x2) # store 0xa55e42c8 in memory
flh f10, 0(x2) # load 0xa55e42c8 from memory into f10
la x2, scratch
li x3, 0xc00e9579 # load x3 with value 0xc00e9579
sw x3, 0(x2) # store 0xc00e9579 in memory
flh f22, 0(x2) # load 0xc00e9579 from memory into f22
fnmadd.h f26, f1, f10, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
la x2, scratch
li x3, 0x87d60560 # load x3 with value 0x87d60560
sw x3, 0(x2) # store 0x87d60560 in memory
flh f2, 0(x2) # load 0x87d60560 from memory into f2
la x2, scratch
li x3, 0x7218b325 # load x3 with value 0x7218b325
sw x3, 0(x2) # store 0x7218b325 in memory
flh f24, 0(x2) # load 0x7218b325 from memory into f24
la x2, scratch
li x3, 0xa21755a9 # load x3 with value 0xa21755a9
sw x3, 0(x2) # store 0xa21755a9 in memory
flh f5, 0(x2) # load 0xa21755a9 from memory into f5
fnmadd.h f15, f2, f24, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
la x2, scratch
li x3, 0xddbab8aa # load x3 with value 0xddbab8aa
sw x3, 0(x2) # store 0xddbab8aa in memory
flh f3, 0(x2) # load 0xddbab8aa from memory into f3
la x2, scratch
li x3, 0x6631fcdc # load x3 with value 0x6631fcdc
sw x3, 0(x2) # store 0x6631fcdc in memory
flh f10, 0(x2) # load 0x6631fcdc from memory into f10
la x2, scratch
li x3, 0xf3b79b8c # load x3 with value 0xf3b79b8c
sw x3, 0(x2) # store 0xf3b79b8c in memory
flh f30, 0(x2) # load 0xf3b79b8c from memory into f30
fnmadd.h f15, f3, f10, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xb4aad24e # load x3 with value 0xb4aad24e
sw x3, 0(x2) # store 0xb4aad24e in memory
flh f4, 0(x2) # load 0xb4aad24e from memory into f4
la x2, scratch
li x3, 0x72d5be28 # load x3 with value 0x72d5be28
sw x3, 0(x2) # store 0x72d5be28 in memory
flh f17, 0(x2) # load 0x72d5be28 from memory into f17
la x2, scratch
li x3, 0x1e3fddf9 # load x3 with value 0x1e3fddf9
sw x3, 0(x2) # store 0x1e3fddf9 in memory
flh f23, 0(x2) # load 0x1e3fddf9 from memory into f23
fnmadd.h f24, f4, f17, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x2a231a36 # load x3 with value 0x2a231a36
sw x3, 0(x2) # store 0x2a231a36 in memory
flh f5, 0(x2) # load 0x2a231a36 from memory into f5
la x2, scratch
li x3, 0x8bc4f549 # load x3 with value 0x8bc4f549
sw x3, 0(x2) # store 0x8bc4f549 in memory
flh f28, 0(x2) # load 0x8bc4f549 from memory into f28
la x2, scratch
li x3, 0x23a1d9ce # load x3 with value 0x23a1d9ce
sw x3, 0(x2) # store 0x23a1d9ce in memory
flh f17, 0(x2) # load 0x23a1d9ce from memory into f17
fnmadd.h f20, f5, f28, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x39a7d814 # load x3 with value 0x39a7d814
sw x3, 0(x2) # store 0x39a7d814 in memory
flh f6, 0(x2) # load 0x39a7d814 from memory into f6
la x2, scratch
li x3, 0xe9d4b666 # load x3 with value 0xe9d4b666
sw x3, 0(x2) # store 0xe9d4b666 in memory
flh f18, 0(x2) # load 0xe9d4b666 from memory into f18
la x2, scratch
li x3, 0x73d1ce3e # load x3 with value 0x73d1ce3e
sw x3, 0(x2) # store 0x73d1ce3e in memory
flh f8, 0(x2) # load 0x73d1ce3e from memory into f8
fnmadd.h f16, f6, f18, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xc9273bdc # load x3 with value 0xc9273bdc
sw x3, 0(x2) # store 0xc9273bdc in memory
flh f7, 0(x2) # load 0xc9273bdc from memory into f7
la x2, scratch
li x3, 0x68010aa6 # load x3 with value 0x68010aa6
sw x3, 0(x2) # store 0x68010aa6 in memory
flh f3, 0(x2) # load 0x68010aa6 from memory into f3
la x2, scratch
li x3, 0x11de302c # load x3 with value 0x11de302c
sw x3, 0(x2) # store 0x11de302c in memory
flh f10, 0(x2) # load 0x11de302c from memory into f10
fnmadd.h f6, f7, f3, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
la x2, scratch
li x3, 0x1ae73b21 # load x3 with value 0x1ae73b21
sw x3, 0(x2) # store 0x1ae73b21 in memory
flh f8, 0(x2) # load 0x1ae73b21 from memory into f8
la x2, scratch
li x3, 0x1c313e78 # load x3 with value 0x1c313e78
sw x3, 0(x2) # store 0x1c313e78 in memory
flh f11, 0(x2) # load 0x1c313e78 from memory into f11
la x2, scratch
li x3, 0x50744e28 # load x3 with value 0x50744e28
sw x3, 0(x2) # store 0x50744e28 in memory
flh f23, 0(x2) # load 0x50744e28 from memory into f23
fnmadd.h f24, f8, f11, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
la x2, scratch
li x3, 0x34d24095 # load x3 with value 0x34d24095
sw x3, 0(x2) # store 0x34d24095 in memory
flh f9, 0(x2) # load 0x34d24095 from memory into f9
la x2, scratch
li x3, 0xe2a2d4b3 # load x3 with value 0xe2a2d4b3
sw x3, 0(x2) # store 0xe2a2d4b3 in memory
flh f5, 0(x2) # load 0xe2a2d4b3 from memory into f5
la x2, scratch
li x3, 0x67c594d8 # load x3 with value 0x67c594d8
sw x3, 0(x2) # store 0x67c594d8 in memory
flh f2, 0(x2) # load 0x67c594d8 from memory into f2
fnmadd.h f14, f9, f5, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
la x2, scratch
li x3, 0x45a45bb2 # load x3 with value 0x45a45bb2
sw x3, 0(x2) # store 0x45a45bb2 in memory
flh f10, 0(x2) # load 0x45a45bb2 from memory into f10
la x2, scratch
li x3, 0x1504a8b9 # load x3 with value 0x1504a8b9
sw x3, 0(x2) # store 0x1504a8b9 in memory
flh f21, 0(x2) # load 0x1504a8b9 from memory into f21
la x2, scratch
li x3, 0xc7592684 # load x3 with value 0xc7592684
sw x3, 0(x2) # store 0xc7592684 in memory
flh f13, 0(x2) # load 0xc7592684 from memory into f13
fnmadd.h f9, f10, f21, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
la x2, scratch
li x3, 0x6c178316 # load x3 with value 0x6c178316
sw x3, 0(x2) # store 0x6c178316 in memory
flh f11, 0(x2) # load 0x6c178316 from memory into f11
la x2, scratch
li x3, 0xfe8cdd29 # load x3 with value 0xfe8cdd29
sw x3, 0(x2) # store 0xfe8cdd29 in memory
flh f20, 0(x2) # load 0xfe8cdd29 from memory into f20
la x2, scratch
li x3, 0x5f35c23d # load x3 with value 0x5f35c23d
sw x3, 0(x2) # store 0x5f35c23d in memory
flh f15, 0(x2) # load 0x5f35c23d from memory into f15
fnmadd.h f24, f11, f20, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
la x2, scratch
li x3, 0xb224618b # load x3 with value 0xb224618b
sw x3, 0(x2) # store 0xb224618b in memory
flh f12, 0(x2) # load 0xb224618b from memory into f12
la x2, scratch
li x3, 0x0a993bde # load x3 with value 0x0a993bde
sw x3, 0(x2) # store 0x0a993bde in memory
flh f7, 0(x2) # load 0x0a993bde from memory into f7
la x2, scratch
li x3, 0x89341968 # load x3 with value 0x89341968
sw x3, 0(x2) # store 0x89341968 in memory
flh f1, 0(x2) # load 0x89341968 from memory into f1
fnmadd.h f18, f12, f7, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
la x2, scratch
li x3, 0xb7ab512b # load x3 with value 0xb7ab512b
sw x3, 0(x2) # store 0xb7ab512b in memory
flh f13, 0(x2) # load 0xb7ab512b from memory into f13
la x2, scratch
li x3, 0xf9d564a6 # load x3 with value 0xf9d564a6
sw x3, 0(x2) # store 0xf9d564a6 in memory
flh f24, 0(x2) # load 0xf9d564a6 from memory into f24
la x2, scratch
li x3, 0x718d0364 # load x3 with value 0x718d0364
sw x3, 0(x2) # store 0x718d0364 in memory
flh f14, 0(x2) # load 0x718d0364 from memory into f14
fnmadd.h f28, f13, f24, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
la x2, scratch
li x3, 0x5cd00263 # load x3 with value 0x5cd00263
sw x3, 0(x2) # store 0x5cd00263 in memory
flh f14, 0(x2) # load 0x5cd00263 from memory into f14
la x2, scratch
li x3, 0xdbe3e0c3 # load x3 with value 0xdbe3e0c3
sw x3, 0(x2) # store 0xdbe3e0c3 in memory
flh f2, 0(x2) # load 0xdbe3e0c3 from memory into f2
la x2, scratch
li x3, 0xdeb6544c # load x3 with value 0xdeb6544c
sw x3, 0(x2) # store 0xdeb6544c in memory
flh f20, 0(x2) # load 0xdeb6544c from memory into f20
fnmadd.h f14, f14, f2, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
la x2, scratch
li x3, 0x7f75e5d5 # load x3 with value 0x7f75e5d5
sw x3, 0(x2) # store 0x7f75e5d5 in memory
flh f15, 0(x2) # load 0x7f75e5d5 from memory into f15
la x2, scratch
li x3, 0x657e67a2 # load x3 with value 0x657e67a2
sw x3, 0(x2) # store 0x657e67a2 in memory
flh f6, 0(x2) # load 0x657e67a2 from memory into f6
la x2, scratch
li x3, 0x0645f952 # load x3 with value 0x0645f952
sw x3, 0(x2) # store 0x0645f952 in memory
flh f12, 0(x2) # load 0x0645f952 from memory into f12
fnmadd.h f1, f15, f6, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
la x2, scratch
li x3, 0x68a5e348 # load x3 with value 0x68a5e348
sw x3, 0(x2) # store 0x68a5e348 in memory
flh f16, 0(x2) # load 0x68a5e348 from memory into f16
la x2, scratch
li x3, 0x199d04f3 # load x3 with value 0x199d04f3
sw x3, 0(x2) # store 0x199d04f3 in memory
flh f3, 0(x2) # load 0x199d04f3 from memory into f3
la x2, scratch
li x3, 0xa934f346 # load x3 with value 0xa934f346
sw x3, 0(x2) # store 0xa934f346 in memory
flh f6, 0(x2) # load 0xa934f346 from memory into f6
fnmadd.h f7, f16, f3, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
la x2, scratch
li x3, 0xb502d301 # load x3 with value 0xb502d301
sw x3, 0(x2) # store 0xb502d301 in memory
flh f17, 0(x2) # load 0xb502d301 from memory into f17
la x2, scratch
li x3, 0xa92f940f # load x3 with value 0xa92f940f
sw x3, 0(x2) # store 0xa92f940f in memory
flh f21, 0(x2) # load 0xa92f940f from memory into f21
la x2, scratch
li x3, 0x0cb5d261 # load x3 with value 0x0cb5d261
sw x3, 0(x2) # store 0x0cb5d261 in memory
flh f30, 0(x2) # load 0x0cb5d261 from memory into f30
fnmadd.h f22, f17, f21, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
la x2, scratch
li x3, 0x3f996790 # load x3 with value 0x3f996790
sw x3, 0(x2) # store 0x3f996790 in memory
flh f18, 0(x2) # load 0x3f996790 from memory into f18
la x2, scratch
li x3, 0xe621bce9 # load x3 with value 0xe621bce9
sw x3, 0(x2) # store 0xe621bce9 in memory
flh f7, 0(x2) # load 0xe621bce9 from memory into f7
la x2, scratch
li x3, 0x68f1a93f # load x3 with value 0x68f1a93f
sw x3, 0(x2) # store 0x68f1a93f in memory
flh f13, 0(x2) # load 0x68f1a93f from memory into f13
fnmadd.h f18, f18, f7, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
la x2, scratch
li x3, 0xd1ae293e # load x3 with value 0xd1ae293e
sw x3, 0(x2) # store 0xd1ae293e in memory
flh f19, 0(x2) # load 0xd1ae293e from memory into f19
la x2, scratch
li x3, 0x4d641648 # load x3 with value 0x4d641648
sw x3, 0(x2) # store 0x4d641648 in memory
flh f10, 0(x2) # load 0x4d641648 from memory into f10
la x2, scratch
li x3, 0x263eaf47 # load x3 with value 0x263eaf47
sw x3, 0(x2) # store 0x263eaf47 in memory
flh f3, 0(x2) # load 0x263eaf47 from memory into f3
fnmadd.h f23, f19, f10, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
la x2, scratch
li x3, 0xb8ba2ec8 # load x3 with value 0xb8ba2ec8
sw x3, 0(x2) # store 0xb8ba2ec8 in memory
flh f20, 0(x2) # load 0xb8ba2ec8 from memory into f20
la x2, scratch
li x3, 0x6622565d # load x3 with value 0x6622565d
sw x3, 0(x2) # store 0x6622565d in memory
flh f29, 0(x2) # load 0x6622565d from memory into f29
la x2, scratch
li x3, 0x0dc61a3d # load x3 with value 0x0dc61a3d
sw x3, 0(x2) # store 0x0dc61a3d in memory
flh f7, 0(x2) # load 0x0dc61a3d from memory into f7
fnmadd.h f22, f20, f29, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
la x2, scratch
li x3, 0x962d70f0 # load x3 with value 0x962d70f0
sw x3, 0(x2) # store 0x962d70f0 in memory
flh f21, 0(x2) # load 0x962d70f0 from memory into f21
la x2, scratch
li x3, 0x36bd003c # load x3 with value 0x36bd003c
sw x3, 0(x2) # store 0x36bd003c in memory
flh f5, 0(x2) # load 0x36bd003c from memory into f5
la x2, scratch
li x3, 0x21fdeca0 # load x3 with value 0x21fdeca0
sw x3, 0(x2) # store 0x21fdeca0 in memory
flh f22, 0(x2) # load 0x21fdeca0 from memory into f22
fnmadd.h f13, f21, f5, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
la x2, scratch
li x3, 0x41b82829 # load x3 with value 0x41b82829
sw x3, 0(x2) # store 0x41b82829 in memory
flh f22, 0(x2) # load 0x41b82829 from memory into f22
la x2, scratch
li x3, 0x68357661 # load x3 with value 0x68357661
sw x3, 0(x2) # store 0x68357661 in memory
flh f11, 0(x2) # load 0x68357661 from memory into f11
la x2, scratch
li x3, 0xaa39a486 # load x3 with value 0xaa39a486
sw x3, 0(x2) # store 0xaa39a486 in memory
flh f26, 0(x2) # load 0xaa39a486 from memory into f26
fnmadd.h f22, f22, f11, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
la x2, scratch
li x3, 0x851f4fab # load x3 with value 0x851f4fab
sw x3, 0(x2) # store 0x851f4fab in memory
flh f23, 0(x2) # load 0x851f4fab from memory into f23
la x2, scratch
li x3, 0x7413db07 # load x3 with value 0x7413db07
sw x3, 0(x2) # store 0x7413db07 in memory
flh f29, 0(x2) # load 0x7413db07 from memory into f29
la x2, scratch
li x3, 0x8380d0ae # load x3 with value 0x8380d0ae
sw x3, 0(x2) # store 0x8380d0ae in memory
flh f17, 0(x2) # load 0x8380d0ae from memory into f17
fnmadd.h f31, f23, f29, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
la x2, scratch
li x3, 0x492ae1eb # load x3 with value 0x492ae1eb
sw x3, 0(x2) # store 0x492ae1eb in memory
flh f24, 0(x2) # load 0x492ae1eb from memory into f24
la x2, scratch
li x3, 0xea943743 # load x3 with value 0xea943743
sw x3, 0(x2) # store 0xea943743 in memory
flh f21, 0(x2) # load 0xea943743 from memory into f21
la x2, scratch
li x3, 0x34a05151 # load x3 with value 0x34a05151
sw x3, 0(x2) # store 0x34a05151 in memory
flh f6, 0(x2) # load 0x34a05151 from memory into f6
fnmadd.h f16, f24, f21, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
la x2, scratch
li x3, 0x46b28763 # load x3 with value 0x46b28763
sw x3, 0(x2) # store 0x46b28763 in memory
flh f25, 0(x2) # load 0x46b28763 from memory into f25
la x2, scratch
li x3, 0x3b2b8b41 # load x3 with value 0x3b2b8b41
sw x3, 0(x2) # store 0x3b2b8b41 in memory
flh f20, 0(x2) # load 0x3b2b8b41 from memory into f20
la x2, scratch
li x3, 0xe279b087 # load x3 with value 0xe279b087
sw x3, 0(x2) # store 0xe279b087 in memory
flh f14, 0(x2) # load 0xe279b087 from memory into f14
fnmadd.h f25, f25, f20, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
la x2, scratch
li x3, 0xc963cd20 # load x3 with value 0xc963cd20
sw x3, 0(x2) # store 0xc963cd20 in memory
flh f26, 0(x2) # load 0xc963cd20 from memory into f26
la x2, scratch
li x3, 0x45dff427 # load x3 with value 0x45dff427
sw x3, 0(x2) # store 0x45dff427 in memory
flh f5, 0(x2) # load 0x45dff427 from memory into f5
la x2, scratch
li x3, 0x5aa8f2ce # load x3 with value 0x5aa8f2ce
sw x3, 0(x2) # store 0x5aa8f2ce in memory
flh f7, 0(x2) # load 0x5aa8f2ce from memory into f7
fnmadd.h f27, f26, f5, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
la x2, scratch
li x3, 0xcc142720 # load x3 with value 0xcc142720
sw x3, 0(x2) # store 0xcc142720 in memory
flh f27, 0(x2) # load 0xcc142720 from memory into f27
la x2, scratch
li x3, 0x651412e9 # load x3 with value 0x651412e9
sw x3, 0(x2) # store 0x651412e9 in memory
flh f28, 0(x2) # load 0x651412e9 from memory into f28
la x2, scratch
li x3, 0x56b09d46 # load x3 with value 0x56b09d46
sw x3, 0(x2) # store 0x56b09d46 in memory
flh f13, 0(x2) # load 0x56b09d46 from memory into f13
fnmadd.h f8, f27, f28, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
la x2, scratch
li x3, 0xedb20fc4 # load x3 with value 0xedb20fc4
sw x3, 0(x2) # store 0xedb20fc4 in memory
flh f28, 0(x2) # load 0xedb20fc4 from memory into f28
la x2, scratch
li x3, 0x6d75e479 # load x3 with value 0x6d75e479
sw x3, 0(x2) # store 0x6d75e479 in memory
flh f5, 0(x2) # load 0x6d75e479 from memory into f5
la x2, scratch
li x3, 0x7df3a779 # load x3 with value 0x7df3a779
sw x3, 0(x2) # store 0x7df3a779 in memory
flh f15, 0(x2) # load 0x7df3a779 from memory into f15
fnmadd.h f29, f28, f5, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
la x2, scratch
li x3, 0xf3d8f82f # load x3 with value 0xf3d8f82f
sw x3, 0(x2) # store 0xf3d8f82f in memory
flh f29, 0(x2) # load 0xf3d8f82f from memory into f29
la x2, scratch
li x3, 0xaeffc183 # load x3 with value 0xaeffc183
sw x3, 0(x2) # store 0xaeffc183 in memory
flh f1, 0(x2) # load 0xaeffc183 from memory into f1
la x2, scratch
li x3, 0x83c46cf0 # load x3 with value 0x83c46cf0
sw x3, 0(x2) # store 0x83c46cf0 in memory
flh f2, 0(x2) # load 0x83c46cf0 from memory into f2
fnmadd.h f14, f29, f1, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
la x2, scratch
li x3, 0x202d1e35 # load x3 with value 0x202d1e35
sw x3, 0(x2) # store 0x202d1e35 in memory
flh f30, 0(x2) # load 0x202d1e35 from memory into f30
la x2, scratch
li x3, 0xa8659b67 # load x3 with value 0xa8659b67
sw x3, 0(x2) # store 0xa8659b67 in memory
flh f31, 0(x2) # load 0xa8659b67 from memory into f31
la x2, scratch
li x3, 0x3ab45619 # load x3 with value 0x3ab45619
sw x3, 0(x2) # store 0x3ab45619 in memory
flh f10, 0(x2) # load 0x3ab45619 from memory into f10
fnmadd.h f16, f30, f31, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
la x2, scratch
li x3, 0x1c909443 # load x3 with value 0x1c909443
sw x3, 0(x2) # store 0x1c909443 in memory
flh f31, 0(x2) # load 0x1c909443 from memory into f31
la x2, scratch
li x3, 0xf5a70c1e # load x3 with value 0xf5a70c1e
sw x3, 0(x2) # store 0xf5a70c1e in memory
flh f18, 0(x2) # load 0xf5a70c1e from memory into f18
la x2, scratch
li x3, 0xf8a51f99 # load x3 with value 0xf8a51f99
sw x3, 0(x2) # store 0xf8a51f99 in memory
flh f13, 0(x2) # load 0xf8a51f99 from memory into f13
fnmadd.h f7, f31, f18, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
la x2, scratch
li x3, 0x1ad03454 # load x3 with value 0x1ad03454
sw x3, 0(x2) # store 0x1ad03454 in memory
flh f18, 0(x2) # load 0x1ad03454 from memory into f18
la x2, scratch
li x3, 0xfa7af5ce # load x3 with value 0xfa7af5ce
sw x3, 0(x2) # store 0xfa7af5ce in memory
flh f0, 0(x2) # load 0xfa7af5ce from memory into f0
la x2, scratch
li x3, 0x503ce7ed # load x3 with value 0x503ce7ed
sw x3, 0(x2) # store 0x503ce7ed in memory
flh f28, 0(x2) # load 0x503ce7ed from memory into f28
fnmadd.h f2, f18, f0, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
la x2, scratch
li x3, 0xe19fdf0b # load x3 with value 0xe19fdf0b
sw x3, 0(x2) # store 0xe19fdf0b in memory
flh f13, 0(x2) # load 0xe19fdf0b from memory into f13
la x2, scratch
li x3, 0x5c7de88b # load x3 with value 0x5c7de88b
sw x3, 0(x2) # store 0x5c7de88b in memory
flh f1, 0(x2) # load 0x5c7de88b from memory into f1
la x2, scratch
li x3, 0x748ce9d5 # load x3 with value 0x748ce9d5
sw x3, 0(x2) # store 0x748ce9d5 in memory
flh f10, 0(x2) # load 0x748ce9d5 from memory into f10
fnmadd.h f30, f13, f1, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
la x2, scratch
li x3, 0x1f42dd4e # load x3 with value 0x1f42dd4e
sw x3, 0(x2) # store 0x1f42dd4e in memory
flh f29, 0(x2) # load 0x1f42dd4e from memory into f29
la x2, scratch
li x3, 0xc65ef9d4 # load x3 with value 0xc65ef9d4
sw x3, 0(x2) # store 0xc65ef9d4 in memory
flh f2, 0(x2) # load 0xc65ef9d4 from memory into f2
la x2, scratch
li x3, 0x7123db09 # load x3 with value 0x7123db09
sw x3, 0(x2) # store 0x7123db09 in memory
flh f6, 0(x2) # load 0x7123db09 from memory into f6
fnmadd.h f27, f29, f2, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
la x2, scratch
li x3, 0x1a76f71d # load x3 with value 0x1a76f71d
sw x3, 0(x2) # store 0x1a76f71d in memory
flh f12, 0(x2) # load 0x1a76f71d from memory into f12
la x2, scratch
li x3, 0xc1232e56 # load x3 with value 0xc1232e56
sw x3, 0(x2) # store 0xc1232e56 in memory
flh f3, 0(x2) # load 0xc1232e56 from memory into f3
la x2, scratch
li x3, 0x35854c8d # load x3 with value 0x35854c8d
sw x3, 0(x2) # store 0x35854c8d in memory
flh f9, 0(x2) # load 0x35854c8d from memory into f9
fnmadd.h f10, f12, f3, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xc07b1c1a # load x3 with value 0xc07b1c1a
sw x3, 0(x2) # store 0xc07b1c1a in memory
flh f26, 0(x2) # load 0xc07b1c1a from memory into f26
la x2, scratch
li x3, 0x13cadd67 # load x3 with value 0x13cadd67
sw x3, 0(x2) # store 0x13cadd67 in memory
flh f4, 0(x2) # load 0x13cadd67 from memory into f4
la x2, scratch
li x3, 0x056407c5 # load x3 with value 0x056407c5
sw x3, 0(x2) # store 0x056407c5 in memory
flh f21, 0(x2) # load 0x056407c5 from memory into f21
fnmadd.h f23, f26, f4, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x562827ef # load x3 with value 0x562827ef
sw x3, 0(x2) # store 0x562827ef in memory
flh f2, 0(x2) # load 0x562827ef from memory into f2
la x2, scratch
li x3, 0xd5dd01c9 # load x3 with value 0xd5dd01c9
sw x3, 0(x2) # store 0xd5dd01c9 in memory
flh f5, 0(x2) # load 0xd5dd01c9 from memory into f5
la x2, scratch
li x3, 0x09e13fd7 # load x3 with value 0x09e13fd7
sw x3, 0(x2) # store 0x09e13fd7 in memory
flh f15, 0(x2) # load 0x09e13fd7 from memory into f15
fnmadd.h f22, f2, f5, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x16f2509f # load x3 with value 0x16f2509f
sw x3, 0(x2) # store 0x16f2509f in memory
flh f31, 0(x2) # load 0x16f2509f from memory into f31
la x2, scratch
li x3, 0xc84c6378 # load x3 with value 0xc84c6378
sw x3, 0(x2) # store 0xc84c6378 in memory
flh f6, 0(x2) # load 0xc84c6378 from memory into f6
la x2, scratch
li x3, 0xf3152b65 # load x3 with value 0xf3152b65
sw x3, 0(x2) # store 0xf3152b65 in memory
flh f17, 0(x2) # load 0xf3152b65 from memory into f17
fnmadd.h f14, f31, f6, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x3ad260d7 # load x3 with value 0x3ad260d7
sw x3, 0(x2) # store 0x3ad260d7 in memory
flh f20, 0(x2) # load 0x3ad260d7 from memory into f20
la x2, scratch
li x3, 0x88b856c3 # load x3 with value 0x88b856c3
sw x3, 0(x2) # store 0x88b856c3 in memory
flh f7, 0(x2) # load 0x88b856c3 from memory into f7
la x2, scratch
li x3, 0x97889378 # load x3 with value 0x97889378
sw x3, 0(x2) # store 0x97889378 in memory
flh f28, 0(x2) # load 0x97889378 from memory into f28
fnmadd.h f10, f20, f7, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
la x2, scratch
li x3, 0xaeeaa407 # load x3 with value 0xaeeaa407
sw x3, 0(x2) # store 0xaeeaa407 in memory
flh f9, 0(x2) # load 0xaeeaa407 from memory into f9
la x2, scratch
li x3, 0xbdd22314 # load x3 with value 0xbdd22314
sw x3, 0(x2) # store 0xbdd22314 in memory
flh f8, 0(x2) # load 0xbdd22314 from memory into f8
la x2, scratch
li x3, 0x87cec24b # load x3 with value 0x87cec24b
sw x3, 0(x2) # store 0x87cec24b in memory
flh f26, 0(x2) # load 0x87cec24b from memory into f26
fnmadd.h f25, f9, f8, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
la x2, scratch
li x3, 0x14330fa2 # load x3 with value 0x14330fa2
sw x3, 0(x2) # store 0x14330fa2 in memory
flh f6, 0(x2) # load 0x14330fa2 from memory into f6
la x2, scratch
li x3, 0x84f1cb30 # load x3 with value 0x84f1cb30
sw x3, 0(x2) # store 0x84f1cb30 in memory
flh f9, 0(x2) # load 0x84f1cb30 from memory into f9
la x2, scratch
li x3, 0x28c89fbc # load x3 with value 0x28c89fbc
sw x3, 0(x2) # store 0x28c89fbc in memory
flh f10, 0(x2) # load 0x28c89fbc from memory into f10
fnmadd.h f31, f6, f9, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
la x2, scratch
li x3, 0x77412252 # load x3 with value 0x77412252
sw x3, 0(x2) # store 0x77412252 in memory
flh f8, 0(x2) # load 0x77412252 from memory into f8
la x2, scratch
li x3, 0xbd2a500d # load x3 with value 0xbd2a500d
sw x3, 0(x2) # store 0xbd2a500d in memory
flh f10, 0(x2) # load 0xbd2a500d from memory into f10
la x2, scratch
li x3, 0x54a2e552 # load x3 with value 0x54a2e552
sw x3, 0(x2) # store 0x54a2e552 in memory
flh f1, 0(x2) # load 0x54a2e552 from memory into f1
fnmadd.h f26, f8, f10, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
la x2, scratch
li x3, 0x101b4f73 # load x3 with value 0x101b4f73
sw x3, 0(x2) # store 0x101b4f73 in memory
flh f3, 0(x2) # load 0x101b4f73 from memory into f3
la x2, scratch
li x3, 0xfbe27561 # load x3 with value 0xfbe27561
sw x3, 0(x2) # store 0xfbe27561 in memory
flh f11, 0(x2) # load 0xfbe27561 from memory into f11
la x2, scratch
li x3, 0xe57b9265 # load x3 with value 0xe57b9265
sw x3, 0(x2) # store 0xe57b9265 in memory
flh f27, 0(x2) # load 0xe57b9265 from memory into f27
fnmadd.h f15, f3, f11, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
la x2, scratch
li x3, 0xddf38398 # load x3 with value 0xddf38398
sw x3, 0(x2) # store 0xddf38398 in memory
flh f10, 0(x2) # load 0xddf38398 from memory into f10
la x2, scratch
li x3, 0x1341994d # load x3 with value 0x1341994d
sw x3, 0(x2) # store 0x1341994d in memory
flh f12, 0(x2) # load 0x1341994d from memory into f12
la x2, scratch
li x3, 0x930a5de6 # load x3 with value 0x930a5de6
sw x3, 0(x2) # store 0x930a5de6 in memory
flh f6, 0(x2) # load 0x930a5de6 from memory into f6
fnmadd.h f11, f10, f12, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
la x2, scratch
li x3, 0x0c5fd0f5 # load x3 with value 0x0c5fd0f5
sw x3, 0(x2) # store 0x0c5fd0f5 in memory
flh f15, 0(x2) # load 0x0c5fd0f5 from memory into f15
la x2, scratch
li x3, 0xccaf9705 # load x3 with value 0xccaf9705
sw x3, 0(x2) # store 0xccaf9705 in memory
flh f13, 0(x2) # load 0xccaf9705 from memory into f13
la x2, scratch
li x3, 0x7183b427 # load x3 with value 0x7183b427
sw x3, 0(x2) # store 0x7183b427 in memory
flh f23, 0(x2) # load 0x7183b427 from memory into f23
fnmadd.h f2, f15, f13, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
la x2, scratch
li x3, 0xdee18c68 # load x3 with value 0xdee18c68
sw x3, 0(x2) # store 0xdee18c68 in memory
flh f2, 0(x2) # load 0xdee18c68 from memory into f2
la x2, scratch
li x3, 0x458c0468 # load x3 with value 0x458c0468
sw x3, 0(x2) # store 0x458c0468 in memory
flh f14, 0(x2) # load 0x458c0468 from memory into f14
la x2, scratch
li x3, 0xacebb3ee # load x3 with value 0xacebb3ee
sw x3, 0(x2) # store 0xacebb3ee in memory
flh f28, 0(x2) # load 0xacebb3ee from memory into f28
fnmadd.h f23, f2, f14, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
la x2, scratch
li x3, 0xb5c79f7b # load x3 with value 0xb5c79f7b
sw x3, 0(x2) # store 0xb5c79f7b in memory
flh f14, 0(x2) # load 0xb5c79f7b from memory into f14
la x2, scratch
li x3, 0x055b0e77 # load x3 with value 0x055b0e77
sw x3, 0(x2) # store 0x055b0e77 in memory
flh f15, 0(x2) # load 0x055b0e77 from memory into f15
la x2, scratch
li x3, 0x7459217b # load x3 with value 0x7459217b
sw x3, 0(x2) # store 0x7459217b in memory
flh f16, 0(x2) # load 0x7459217b from memory into f16
fnmadd.h f30, f14, f15, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
la x2, scratch
li x3, 0x1b90e383 # load x3 with value 0x1b90e383
sw x3, 0(x2) # store 0x1b90e383 in memory
flh f24, 0(x2) # load 0x1b90e383 from memory into f24
la x2, scratch
li x3, 0x3aedc45c # load x3 with value 0x3aedc45c
sw x3, 0(x2) # store 0x3aedc45c in memory
flh f16, 0(x2) # load 0x3aedc45c from memory into f16
la x2, scratch
li x3, 0x0075f9e3 # load x3 with value 0x0075f9e3
sw x3, 0(x2) # store 0x0075f9e3 in memory
flh f31, 0(x2) # load 0x0075f9e3 from memory into f31
fnmadd.h f6, f24, f16, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
la x2, scratch
li x3, 0x3bb6da7d # load x3 with value 0x3bb6da7d
sw x3, 0(x2) # store 0x3bb6da7d in memory
flh f14, 0(x2) # load 0x3bb6da7d from memory into f14
la x2, scratch
li x3, 0xc42a4ce4 # load x3 with value 0xc42a4ce4
sw x3, 0(x2) # store 0xc42a4ce4 in memory
flh f17, 0(x2) # load 0xc42a4ce4 from memory into f17
la x2, scratch
li x3, 0x34d90041 # load x3 with value 0x34d90041
sw x3, 0(x2) # store 0x34d90041 in memory
flh f7, 0(x2) # load 0x34d90041 from memory into f7
fnmadd.h f9, f14, f17, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
la x2, scratch
li x3, 0x89bf028b # load x3 with value 0x89bf028b
sw x3, 0(x2) # store 0x89bf028b in memory
flh f21, 0(x2) # load 0x89bf028b from memory into f21
la x2, scratch
li x3, 0x1e08f145 # load x3 with value 0x1e08f145
sw x3, 0(x2) # store 0x1e08f145 in memory
flh f18, 0(x2) # load 0x1e08f145 from memory into f18
la x2, scratch
li x3, 0x1f5d6afc # load x3 with value 0x1f5d6afc
sw x3, 0(x2) # store 0x1f5d6afc in memory
flh f28, 0(x2) # load 0x1f5d6afc from memory into f28
fnmadd.h f17, f21, f18, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
la x2, scratch
li x3, 0x1d5d552d # load x3 with value 0x1d5d552d
sw x3, 0(x2) # store 0x1d5d552d in memory
flh f28, 0(x2) # load 0x1d5d552d from memory into f28
la x2, scratch
li x3, 0xba7fb343 # load x3 with value 0xba7fb343
sw x3, 0(x2) # store 0xba7fb343 in memory
flh f19, 0(x2) # load 0xba7fb343 from memory into f19
la x2, scratch
li x3, 0x44c3efba # load x3 with value 0x44c3efba
sw x3, 0(x2) # store 0x44c3efba in memory
flh f14, 0(x2) # load 0x44c3efba from memory into f14
fnmadd.h f13, f28, f19, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
la x2, scratch
li x3, 0x61231968 # load x3 with value 0x61231968
sw x3, 0(x2) # store 0x61231968 in memory
flh f30, 0(x2) # load 0x61231968 from memory into f30
la x2, scratch
li x3, 0x77c2d032 # load x3 with value 0x77c2d032
sw x3, 0(x2) # store 0x77c2d032 in memory
flh f20, 0(x2) # load 0x77c2d032 from memory into f20
la x2, scratch
li x3, 0xdb66edfe # load x3 with value 0xdb66edfe
sw x3, 0(x2) # store 0xdb66edfe in memory
flh f8, 0(x2) # load 0xdb66edfe from memory into f8
fnmadd.h f16, f30, f20, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
la x2, scratch
li x3, 0x77911348 # load x3 with value 0x77911348
sw x3, 0(x2) # store 0x77911348 in memory
flh f23, 0(x2) # load 0x77911348 from memory into f23
la x2, scratch
li x3, 0x380e240b # load x3 with value 0x380e240b
sw x3, 0(x2) # store 0x380e240b in memory
flh f21, 0(x2) # load 0x380e240b from memory into f21
la x2, scratch
li x3, 0x0ae3ca73 # load x3 with value 0x0ae3ca73
sw x3, 0(x2) # store 0x0ae3ca73 in memory
flh f9, 0(x2) # load 0x0ae3ca73 from memory into f9
fnmadd.h f24, f23, f21, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
la x2, scratch
li x3, 0x221ce340 # load x3 with value 0x221ce340
sw x3, 0(x2) # store 0x221ce340 in memory
flh f28, 0(x2) # load 0x221ce340 from memory into f28
la x2, scratch
li x3, 0x484b309b # load x3 with value 0x484b309b
sw x3, 0(x2) # store 0x484b309b in memory
flh f22, 0(x2) # load 0x484b309b from memory into f22
la x2, scratch
li x3, 0x09589025 # load x3 with value 0x09589025
sw x3, 0(x2) # store 0x09589025 in memory
flh f15, 0(x2) # load 0x09589025 from memory into f15
fnmadd.h f12, f28, f22, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
la x2, scratch
li x3, 0x6d2f9400 # load x3 with value 0x6d2f9400
sw x3, 0(x2) # store 0x6d2f9400 in memory
flh f30, 0(x2) # load 0x6d2f9400 from memory into f30
la x2, scratch
li x3, 0x61133c76 # load x3 with value 0x61133c76
sw x3, 0(x2) # store 0x61133c76 in memory
flh f23, 0(x2) # load 0x61133c76 from memory into f23
la x2, scratch
li x3, 0x3833b301 # load x3 with value 0x3833b301
sw x3, 0(x2) # store 0x3833b301 in memory
flh f13, 0(x2) # load 0x3833b301 from memory into f13
fnmadd.h f25, f30, f23, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
la x2, scratch
li x3, 0xf4a40373 # load x3 with value 0xf4a40373
sw x3, 0(x2) # store 0xf4a40373 in memory
flh f21, 0(x2) # load 0xf4a40373 from memory into f21
la x2, scratch
li x3, 0x64238677 # load x3 with value 0x64238677
sw x3, 0(x2) # store 0x64238677 in memory
flh f24, 0(x2) # load 0x64238677 from memory into f24
la x2, scratch
li x3, 0x5f91f21a # load x3 with value 0x5f91f21a
sw x3, 0(x2) # store 0x5f91f21a in memory
flh f16, 0(x2) # load 0x5f91f21a from memory into f16
fnmadd.h f19, f21, f24, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
la x2, scratch
li x3, 0x9f3f0f1c # load x3 with value 0x9f3f0f1c
sw x3, 0(x2) # store 0x9f3f0f1c in memory
flh f9, 0(x2) # load 0x9f3f0f1c from memory into f9
la x2, scratch
li x3, 0xf77837b0 # load x3 with value 0xf77837b0
sw x3, 0(x2) # store 0xf77837b0 in memory
flh f25, 0(x2) # load 0xf77837b0 from memory into f25
la x2, scratch
li x3, 0x22592a6a # load x3 with value 0x22592a6a
sw x3, 0(x2) # store 0x22592a6a in memory
flh f16, 0(x2) # load 0x22592a6a from memory into f16
fnmadd.h f20, f9, f25, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
la x2, scratch
li x3, 0xb198100a # load x3 with value 0xb198100a
sw x3, 0(x2) # store 0xb198100a in memory
flh f1, 0(x2) # load 0xb198100a from memory into f1
la x2, scratch
li x3, 0xd3a1d251 # load x3 with value 0xd3a1d251
sw x3, 0(x2) # store 0xd3a1d251 in memory
flh f26, 0(x2) # load 0xd3a1d251 from memory into f26
la x2, scratch
li x3, 0xe52fd407 # load x3 with value 0xe52fd407
sw x3, 0(x2) # store 0xe52fd407 in memory
flh f17, 0(x2) # load 0xe52fd407 from memory into f17
fnmadd.h f9, f1, f26, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
la x2, scratch
li x3, 0x22d444c9 # load x3 with value 0x22d444c9
sw x3, 0(x2) # store 0x22d444c9 in memory
flh f17, 0(x2) # load 0x22d444c9 from memory into f17
la x2, scratch
li x3, 0xcc7298ad # load x3 with value 0xcc7298ad
sw x3, 0(x2) # store 0xcc7298ad in memory
flh f27, 0(x2) # load 0xcc7298ad from memory into f27
la x2, scratch
li x3, 0xca6d88f0 # load x3 with value 0xca6d88f0
sw x3, 0(x2) # store 0xca6d88f0 in memory
flh f16, 0(x2) # load 0xca6d88f0 from memory into f16
fnmadd.h f27, f17, f27, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
la x2, scratch
li x3, 0x70e57f90 # load x3 with value 0x70e57f90
sw x3, 0(x2) # store 0x70e57f90 in memory
flh f27, 0(x2) # load 0x70e57f90 from memory into f27
la x2, scratch
li x3, 0xdc3d6ec9 # load x3 with value 0xdc3d6ec9
sw x3, 0(x2) # store 0xdc3d6ec9 in memory
flh f28, 0(x2) # load 0xdc3d6ec9 from memory into f28
la x2, scratch
li x3, 0x2c4a8fe1 # load x3 with value 0x2c4a8fe1
sw x3, 0(x2) # store 0x2c4a8fe1 in memory
flh f1, 0(x2) # load 0x2c4a8fe1 from memory into f1
fnmadd.h f15, f27, f28, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
la x2, scratch
li x3, 0x8aa66158 # load x3 with value 0x8aa66158
sw x3, 0(x2) # store 0x8aa66158 in memory
flh f10, 0(x2) # load 0x8aa66158 from memory into f10
la x2, scratch
li x3, 0xbed88fe8 # load x3 with value 0xbed88fe8
sw x3, 0(x2) # store 0xbed88fe8 in memory
flh f29, 0(x2) # load 0xbed88fe8 from memory into f29
la x2, scratch
li x3, 0x91620a71 # load x3 with value 0x91620a71
sw x3, 0(x2) # store 0x91620a71 in memory
flh f12, 0(x2) # load 0x91620a71 from memory into f12
fnmadd.h f18, f10, f29, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
la x2, scratch
li x3, 0xe6db3dd2 # load x3 with value 0xe6db3dd2
sw x3, 0(x2) # store 0xe6db3dd2 in memory
flh f15, 0(x2) # load 0xe6db3dd2 from memory into f15
la x2, scratch
li x3, 0xe5f0d819 # load x3 with value 0xe5f0d819
sw x3, 0(x2) # store 0xe5f0d819 in memory
flh f30, 0(x2) # load 0xe5f0d819 from memory into f30
la x2, scratch
li x3, 0x3b0279d4 # load x3 with value 0x3b0279d4
sw x3, 0(x2) # store 0x3b0279d4 in memory
flh f11, 0(x2) # load 0x3b0279d4 from memory into f11
fnmadd.h f5, f15, f30, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
la x2, scratch
li x3, 0x61c2d48f # load x3 with value 0x61c2d48f
sw x3, 0(x2) # store 0x61c2d48f in memory
flh f28, 0(x2) # load 0x61c2d48f from memory into f28
la x2, scratch
li x3, 0x21e247f1 # load x3 with value 0x21e247f1
sw x3, 0(x2) # store 0x21e247f1 in memory
flh f31, 0(x2) # load 0x21e247f1 from memory into f31
la x2, scratch
li x3, 0xcfec6bbc # load x3 with value 0xcfec6bbc
sw x3, 0(x2) # store 0xcfec6bbc in memory
flh f1, 0(x2) # load 0xcfec6bbc from memory into f1
fnmadd.h f23, f28, f31, f1 # perform operation

# Testcase cp_fs3 (Test source fs3 = f0)
la x2, scratch
li x3, 0x574a27d8 # load x3 with value 0x574a27d8
sw x3, 0(x2) # store 0x574a27d8 in memory
flh f24, 0(x2) # load 0x574a27d8 from memory into f24
la x2, scratch
li x3, 0x10144f91 # load x3 with value 0x10144f91
sw x3, 0(x2) # store 0x10144f91 in memory
flh f11, 0(x2) # load 0x10144f91 from memory into f11
la x2, scratch
li x3, 0xb0522e9c # load x3 with value 0xb0522e9c
sw x3, 0(x2) # store 0xb0522e9c in memory
flh f0, 0(x2) # load 0xb0522e9c from memory into f0
fnmadd.h f15, f24, f11, f0 # perform operation

# Testcase cp_fs3 (Test source fs3 = f1)
la x2, scratch
li x3, 0x1bfeb91b # load x3 with value 0x1bfeb91b
sw x3, 0(x2) # store 0x1bfeb91b in memory
flh f23, 0(x2) # load 0x1bfeb91b from memory into f23
la x2, scratch
li x3, 0x65b44e97 # load x3 with value 0x65b44e97
sw x3, 0(x2) # store 0x65b44e97 in memory
flh f28, 0(x2) # load 0x65b44e97 from memory into f28
la x2, scratch
li x3, 0x50c0f1de # load x3 with value 0x50c0f1de
sw x3, 0(x2) # store 0x50c0f1de in memory
flh f1, 0(x2) # load 0x50c0f1de from memory into f1
fnmadd.h f2, f23, f28, f1 # perform operation

# Testcase cp_fs3 (Test source fs3 = f2)
la x2, scratch
li x3, 0xde4703b7 # load x3 with value 0xde4703b7
sw x3, 0(x2) # store 0xde4703b7 in memory
flh f16, 0(x2) # load 0xde4703b7 from memory into f16
la x2, scratch
li x3, 0x92e6d3e3 # load x3 with value 0x92e6d3e3
sw x3, 0(x2) # store 0x92e6d3e3 in memory
flh f13, 0(x2) # load 0x92e6d3e3 from memory into f13
la x2, scratch
li x3, 0x84199f77 # load x3 with value 0x84199f77
sw x3, 0(x2) # store 0x84199f77 in memory
flh f2, 0(x2) # load 0x84199f77 from memory into f2
fnmadd.h f9, f16, f13, f2 # perform operation

# Testcase cp_fs3 (Test source fs3 = f3)
la x2, scratch
li x3, 0xb840822e # load x3 with value 0xb840822e
sw x3, 0(x2) # store 0xb840822e in memory
flh f23, 0(x2) # load 0xb840822e from memory into f23
la x2, scratch
li x3, 0xbc59c807 # load x3 with value 0xbc59c807
sw x3, 0(x2) # store 0xbc59c807 in memory
flh f31, 0(x2) # load 0xbc59c807 from memory into f31
la x2, scratch
li x3, 0xca792741 # load x3 with value 0xca792741
sw x3, 0(x2) # store 0xca792741 in memory
flh f3, 0(x2) # load 0xca792741 from memory into f3
fnmadd.h f1, f23, f31, f3 # perform operation

# Testcase cp_fs3 (Test source fs3 = f4)
la x2, scratch
li x3, 0x06fe83cd # load x3 with value 0x06fe83cd
sw x3, 0(x2) # store 0x06fe83cd in memory
flh f31, 0(x2) # load 0x06fe83cd from memory into f31
la x2, scratch
li x3, 0x86c13fa2 # load x3 with value 0x86c13fa2
sw x3, 0(x2) # store 0x86c13fa2 in memory
flh f11, 0(x2) # load 0x86c13fa2 from memory into f11
la x2, scratch
li x3, 0x9aed4050 # load x3 with value 0x9aed4050
sw x3, 0(x2) # store 0x9aed4050 in memory
flh f4, 0(x2) # load 0x9aed4050 from memory into f4
fnmadd.h f17, f31, f11, f4 # perform operation

# Testcase cp_fs3 (Test source fs3 = f5)
la x2, scratch
li x3, 0x2e7d2a2d # load x3 with value 0x2e7d2a2d
sw x3, 0(x2) # store 0x2e7d2a2d in memory
flh f15, 0(x2) # load 0x2e7d2a2d from memory into f15
la x2, scratch
li x3, 0xef2be1a0 # load x3 with value 0xef2be1a0
sw x3, 0(x2) # store 0xef2be1a0 in memory
flh f1, 0(x2) # load 0xef2be1a0 from memory into f1
la x2, scratch
li x3, 0xd4fe30dc # load x3 with value 0xd4fe30dc
sw x3, 0(x2) # store 0xd4fe30dc in memory
flh f5, 0(x2) # load 0xd4fe30dc from memory into f5
fnmadd.h f30, f15, f1, f5 # perform operation

# Testcase cp_fs3 (Test source fs3 = f6)
la x2, scratch
li x3, 0x8df0d1e8 # load x3 with value 0x8df0d1e8
sw x3, 0(x2) # store 0x8df0d1e8 in memory
flh f14, 0(x2) # load 0x8df0d1e8 from memory into f14
la x2, scratch
li x3, 0xb1e689b3 # load x3 with value 0xb1e689b3
sw x3, 0(x2) # store 0xb1e689b3 in memory
flh f8, 0(x2) # load 0xb1e689b3 from memory into f8
la x2, scratch
li x3, 0x341b8e28 # load x3 with value 0x341b8e28
sw x3, 0(x2) # store 0x341b8e28 in memory
flh f6, 0(x2) # load 0x341b8e28 from memory into f6
fnmadd.h f6, f14, f8, f6 # perform operation

# Testcase cp_fs3 (Test source fs3 = f7)
la x2, scratch
li x3, 0x4060c0fd # load x3 with value 0x4060c0fd
sw x3, 0(x2) # store 0x4060c0fd in memory
flh f13, 0(x2) # load 0x4060c0fd from memory into f13
la x2, scratch
li x3, 0x99926c07 # load x3 with value 0x99926c07
sw x3, 0(x2) # store 0x99926c07 in memory
flh f15, 0(x2) # load 0x99926c07 from memory into f15
la x2, scratch
li x3, 0xc52369f6 # load x3 with value 0xc52369f6
sw x3, 0(x2) # store 0xc52369f6 in memory
flh f7, 0(x2) # load 0xc52369f6 from memory into f7
fnmadd.h f12, f13, f15, f7 # perform operation

# Testcase cp_fs3 (Test source fs3 = f8)
la x2, scratch
li x3, 0xf3e965b9 # load x3 with value 0xf3e965b9
sw x3, 0(x2) # store 0xf3e965b9 in memory
flh f1, 0(x2) # load 0xf3e965b9 from memory into f1
la x2, scratch
li x3, 0xaf837ba7 # load x3 with value 0xaf837ba7
sw x3, 0(x2) # store 0xaf837ba7 in memory
flh f29, 0(x2) # load 0xaf837ba7 from memory into f29
la x2, scratch
li x3, 0xb48ea69c # load x3 with value 0xb48ea69c
sw x3, 0(x2) # store 0xb48ea69c in memory
flh f8, 0(x2) # load 0xb48ea69c from memory into f8
fnmadd.h f14, f1, f29, f8 # perform operation

# Testcase cp_fs3 (Test source fs3 = f9)
la x2, scratch
li x3, 0x9e20c997 # load x3 with value 0x9e20c997
sw x3, 0(x2) # store 0x9e20c997 in memory
flh f28, 0(x2) # load 0x9e20c997 from memory into f28
la x2, scratch
li x3, 0xce37e521 # load x3 with value 0xce37e521
sw x3, 0(x2) # store 0xce37e521 in memory
flh f5, 0(x2) # load 0xce37e521 from memory into f5
la x2, scratch
li x3, 0xdd94713c # load x3 with value 0xdd94713c
sw x3, 0(x2) # store 0xdd94713c in memory
flh f9, 0(x2) # load 0xdd94713c from memory into f9
fnmadd.h f21, f28, f5, f9 # perform operation

# Testcase cp_fs3 (Test source fs3 = f10)
la x2, scratch
li x3, 0x70aed520 # load x3 with value 0x70aed520
sw x3, 0(x2) # store 0x70aed520 in memory
flh f3, 0(x2) # load 0x70aed520 from memory into f3
la x2, scratch
li x3, 0xfa2260f6 # load x3 with value 0xfa2260f6
sw x3, 0(x2) # store 0xfa2260f6 in memory
flh f2, 0(x2) # load 0xfa2260f6 from memory into f2
la x2, scratch
li x3, 0xbaf65960 # load x3 with value 0xbaf65960
sw x3, 0(x2) # store 0xbaf65960 in memory
flh f10, 0(x2) # load 0xbaf65960 from memory into f10
fnmadd.h f14, f3, f2, f10 # perform operation

# Testcase cp_fs3 (Test source fs3 = f11)
la x2, scratch
li x3, 0x4eeafb4d # load x3 with value 0x4eeafb4d
sw x3, 0(x2) # store 0x4eeafb4d in memory
flh f25, 0(x2) # load 0x4eeafb4d from memory into f25
la x2, scratch
li x3, 0xb6425d8e # load x3 with value 0xb6425d8e
sw x3, 0(x2) # store 0xb6425d8e in memory
flh f3, 0(x2) # load 0xb6425d8e from memory into f3
la x2, scratch
li x3, 0xdad46d44 # load x3 with value 0xdad46d44
sw x3, 0(x2) # store 0xdad46d44 in memory
flh f11, 0(x2) # load 0xdad46d44 from memory into f11
fnmadd.h f23, f25, f3, f11 # perform operation

# Testcase cp_fs3 (Test source fs3 = f12)
la x2, scratch
li x3, 0x08d526cd # load x3 with value 0x08d526cd
sw x3, 0(x2) # store 0x08d526cd in memory
flh f29, 0(x2) # load 0x08d526cd from memory into f29
la x2, scratch
li x3, 0xa623241b # load x3 with value 0xa623241b
sw x3, 0(x2) # store 0xa623241b in memory
flh f23, 0(x2) # load 0xa623241b from memory into f23
la x2, scratch
li x3, 0x0819486f # load x3 with value 0x0819486f
sw x3, 0(x2) # store 0x0819486f in memory
flh f12, 0(x2) # load 0x0819486f from memory into f12
fnmadd.h f27, f29, f23, f12 # perform operation

# Testcase cp_fs3 (Test source fs3 = f13)
la x2, scratch
li x3, 0x5b4292dc # load x3 with value 0x5b4292dc
sw x3, 0(x2) # store 0x5b4292dc in memory
flh f2, 0(x2) # load 0x5b4292dc from memory into f2
la x2, scratch
li x3, 0x641e2807 # load x3 with value 0x641e2807
sw x3, 0(x2) # store 0x641e2807 in memory
flh f18, 0(x2) # load 0x641e2807 from memory into f18
la x2, scratch
li x3, 0x413eba4f # load x3 with value 0x413eba4f
sw x3, 0(x2) # store 0x413eba4f in memory
flh f13, 0(x2) # load 0x413eba4f from memory into f13
fnmadd.h f8, f2, f18, f13 # perform operation

# Testcase cp_fs3 (Test source fs3 = f14)
la x2, scratch
li x3, 0xcd26753b # load x3 with value 0xcd26753b
sw x3, 0(x2) # store 0xcd26753b in memory
flh f6, 0(x2) # load 0xcd26753b from memory into f6
la x2, scratch
li x3, 0xf4c452b8 # load x3 with value 0xf4c452b8
sw x3, 0(x2) # store 0xf4c452b8 in memory
flh f23, 0(x2) # load 0xf4c452b8 from memory into f23
la x2, scratch
li x3, 0xb3c92bdd # load x3 with value 0xb3c92bdd
sw x3, 0(x2) # store 0xb3c92bdd in memory
flh f14, 0(x2) # load 0xb3c92bdd from memory into f14
fnmadd.h f24, f6, f23, f14 # perform operation

# Testcase cp_fs3 (Test source fs3 = f15)
la x2, scratch
li x3, 0x1ff119f3 # load x3 with value 0x1ff119f3
sw x3, 0(x2) # store 0x1ff119f3 in memory
flh f7, 0(x2) # load 0x1ff119f3 from memory into f7
la x2, scratch
li x3, 0x0eaef562 # load x3 with value 0x0eaef562
sw x3, 0(x2) # store 0x0eaef562 in memory
flh f31, 0(x2) # load 0x0eaef562 from memory into f31
la x2, scratch
li x3, 0xc55e9264 # load x3 with value 0xc55e9264
sw x3, 0(x2) # store 0xc55e9264 in memory
flh f15, 0(x2) # load 0xc55e9264 from memory into f15
fnmadd.h f11, f7, f31, f15 # perform operation

# Testcase cp_fs3 (Test source fs3 = f16)
la x2, scratch
li x3, 0x8c06a4eb # load x3 with value 0x8c06a4eb
sw x3, 0(x2) # store 0x8c06a4eb in memory
flh f27, 0(x2) # load 0x8c06a4eb from memory into f27
la x2, scratch
li x3, 0x5503d238 # load x3 with value 0x5503d238
sw x3, 0(x2) # store 0x5503d238 in memory
flh f25, 0(x2) # load 0x5503d238 from memory into f25
la x2, scratch
li x3, 0x926e23bf # load x3 with value 0x926e23bf
sw x3, 0(x2) # store 0x926e23bf in memory
flh f16, 0(x2) # load 0x926e23bf from memory into f16
fnmadd.h f13, f27, f25, f16 # perform operation

# Testcase cp_fs3 (Test source fs3 = f17)
la x2, scratch
li x3, 0xaea7aafc # load x3 with value 0xaea7aafc
sw x3, 0(x2) # store 0xaea7aafc in memory
flh f30, 0(x2) # load 0xaea7aafc from memory into f30
la x2, scratch
li x3, 0x9b2b4057 # load x3 with value 0x9b2b4057
sw x3, 0(x2) # store 0x9b2b4057 in memory
flh f5, 0(x2) # load 0x9b2b4057 from memory into f5
la x2, scratch
li x3, 0x94674a83 # load x3 with value 0x94674a83
sw x3, 0(x2) # store 0x94674a83 in memory
flh f17, 0(x2) # load 0x94674a83 from memory into f17
fnmadd.h f22, f30, f5, f17 # perform operation

# Testcase cp_fs3 (Test source fs3 = f18)
la x2, scratch
li x3, 0x263495f2 # load x3 with value 0x263495f2
sw x3, 0(x2) # store 0x263495f2 in memory
flh f19, 0(x2) # load 0x263495f2 from memory into f19
la x2, scratch
li x3, 0xaa763884 # load x3 with value 0xaa763884
sw x3, 0(x2) # store 0xaa763884 in memory
flh f31, 0(x2) # load 0xaa763884 from memory into f31
la x2, scratch
li x3, 0xa3fe8bb8 # load x3 with value 0xa3fe8bb8
sw x3, 0(x2) # store 0xa3fe8bb8 in memory
flh f18, 0(x2) # load 0xa3fe8bb8 from memory into f18
fnmadd.h f16, f19, f31, f18 # perform operation

# Testcase cp_fs3 (Test source fs3 = f19)
la x2, scratch
li x3, 0xef1e95ef # load x3 with value 0xef1e95ef
sw x3, 0(x2) # store 0xef1e95ef in memory
flh f27, 0(x2) # load 0xef1e95ef from memory into f27
la x2, scratch
li x3, 0xdc2162df # load x3 with value 0xdc2162df
sw x3, 0(x2) # store 0xdc2162df in memory
flh f5, 0(x2) # load 0xdc2162df from memory into f5
la x2, scratch
li x3, 0xf68fcf30 # load x3 with value 0xf68fcf30
sw x3, 0(x2) # store 0xf68fcf30 in memory
flh f19, 0(x2) # load 0xf68fcf30 from memory into f19
fnmadd.h f11, f27, f5, f19 # perform operation

# Testcase cp_fs3 (Test source fs3 = f20)
la x2, scratch
li x3, 0xb8061b03 # load x3 with value 0xb8061b03
sw x3, 0(x2) # store 0xb8061b03 in memory
flh f17, 0(x2) # load 0xb8061b03 from memory into f17
la x2, scratch
li x3, 0x29fa998f # load x3 with value 0x29fa998f
sw x3, 0(x2) # store 0x29fa998f in memory
flh f22, 0(x2) # load 0x29fa998f from memory into f22
la x2, scratch
li x3, 0x0adc32d3 # load x3 with value 0x0adc32d3
sw x3, 0(x2) # store 0x0adc32d3 in memory
flh f20, 0(x2) # load 0x0adc32d3 from memory into f20
fnmadd.h f23, f17, f22, f20 # perform operation

# Testcase cp_fs3 (Test source fs3 = f21)
la x2, scratch
li x3, 0x00bd7147 # load x3 with value 0x00bd7147
sw x3, 0(x2) # store 0x00bd7147 in memory
flh f9, 0(x2) # load 0x00bd7147 from memory into f9
la x2, scratch
li x3, 0xd7283e99 # load x3 with value 0xd7283e99
sw x3, 0(x2) # store 0xd7283e99 in memory
flh f17, 0(x2) # load 0xd7283e99 from memory into f17
la x2, scratch
li x3, 0x33f153fb # load x3 with value 0x33f153fb
sw x3, 0(x2) # store 0x33f153fb in memory
flh f21, 0(x2) # load 0x33f153fb from memory into f21
fnmadd.h f3, f9, f17, f21 # perform operation

# Testcase cp_fs3 (Test source fs3 = f22)
la x2, scratch
li x3, 0xa5c8df3c # load x3 with value 0xa5c8df3c
sw x3, 0(x2) # store 0xa5c8df3c in memory
flh f19, 0(x2) # load 0xa5c8df3c from memory into f19
la x2, scratch
li x3, 0x90453da3 # load x3 with value 0x90453da3
sw x3, 0(x2) # store 0x90453da3 in memory
flh f29, 0(x2) # load 0x90453da3 from memory into f29
la x2, scratch
li x3, 0xa54df8c6 # load x3 with value 0xa54df8c6
sw x3, 0(x2) # store 0xa54df8c6 in memory
flh f22, 0(x2) # load 0xa54df8c6 from memory into f22
fnmadd.h f14, f19, f29, f22 # perform operation

# Testcase cp_fs3 (Test source fs3 = f23)
la x2, scratch
li x3, 0x1c2c6f59 # load x3 with value 0x1c2c6f59
sw x3, 0(x2) # store 0x1c2c6f59 in memory
flh f10, 0(x2) # load 0x1c2c6f59 from memory into f10
la x2, scratch
li x3, 0x83a20ce4 # load x3 with value 0x83a20ce4
sw x3, 0(x2) # store 0x83a20ce4 in memory
flh f31, 0(x2) # load 0x83a20ce4 from memory into f31
la x2, scratch
li x3, 0x77f98862 # load x3 with value 0x77f98862
sw x3, 0(x2) # store 0x77f98862 in memory
flh f23, 0(x2) # load 0x77f98862 from memory into f23
fnmadd.h f16, f10, f31, f23 # perform operation

# Testcase cp_fs3 (Test source fs3 = f24)
la x2, scratch
li x3, 0x295b8a5d # load x3 with value 0x295b8a5d
sw x3, 0(x2) # store 0x295b8a5d in memory
flh f5, 0(x2) # load 0x295b8a5d from memory into f5
la x2, scratch
li x3, 0xff3202f7 # load x3 with value 0xff3202f7
sw x3, 0(x2) # store 0xff3202f7 in memory
flh f17, 0(x2) # load 0xff3202f7 from memory into f17
la x2, scratch
li x3, 0x1fa556dc # load x3 with value 0x1fa556dc
sw x3, 0(x2) # store 0x1fa556dc in memory
flh f24, 0(x2) # load 0x1fa556dc from memory into f24
fnmadd.h f22, f5, f17, f24 # perform operation

# Testcase cp_fs3 (Test source fs3 = f25)
la x2, scratch
li x3, 0x4d19fc04 # load x3 with value 0x4d19fc04
sw x3, 0(x2) # store 0x4d19fc04 in memory
flh f22, 0(x2) # load 0x4d19fc04 from memory into f22
la x2, scratch
li x3, 0xd4bb09c2 # load x3 with value 0xd4bb09c2
sw x3, 0(x2) # store 0xd4bb09c2 in memory
flh f5, 0(x2) # load 0xd4bb09c2 from memory into f5
la x2, scratch
li x3, 0xc219bb0e # load x3 with value 0xc219bb0e
sw x3, 0(x2) # store 0xc219bb0e in memory
flh f25, 0(x2) # load 0xc219bb0e from memory into f25
fnmadd.h f18, f22, f5, f25 # perform operation

# Testcase cp_fs3 (Test source fs3 = f26)
la x2, scratch
li x3, 0x7a9a5a97 # load x3 with value 0x7a9a5a97
sw x3, 0(x2) # store 0x7a9a5a97 in memory
flh f12, 0(x2) # load 0x7a9a5a97 from memory into f12
la x2, scratch
li x3, 0x989bb8b5 # load x3 with value 0x989bb8b5
sw x3, 0(x2) # store 0x989bb8b5 in memory
flh f11, 0(x2) # load 0x989bb8b5 from memory into f11
la x2, scratch
li x3, 0x410d825f # load x3 with value 0x410d825f
sw x3, 0(x2) # store 0x410d825f in memory
flh f26, 0(x2) # load 0x410d825f from memory into f26
fnmadd.h f7, f12, f11, f26 # perform operation

# Testcase cp_fs3 (Test source fs3 = f27)
la x2, scratch
li x3, 0xceaa0d9c # load x3 with value 0xceaa0d9c
sw x3, 0(x2) # store 0xceaa0d9c in memory
flh f10, 0(x2) # load 0xceaa0d9c from memory into f10
la x2, scratch
li x3, 0x9e713463 # load x3 with value 0x9e713463
sw x3, 0(x2) # store 0x9e713463 in memory
flh f28, 0(x2) # load 0x9e713463 from memory into f28
la x2, scratch
li x3, 0x544ab1eb # load x3 with value 0x544ab1eb
sw x3, 0(x2) # store 0x544ab1eb in memory
flh f27, 0(x2) # load 0x544ab1eb from memory into f27
fnmadd.h f21, f10, f28, f27 # perform operation

# Testcase cp_fs3 (Test source fs3 = f28)
la x2, scratch
li x3, 0x002c5267 # load x3 with value 0x002c5267
sw x3, 0(x2) # store 0x002c5267 in memory
flh f21, 0(x2) # load 0x002c5267 from memory into f21
la x2, scratch
li x3, 0x6321833d # load x3 with value 0x6321833d
sw x3, 0(x2) # store 0x6321833d in memory
flh f22, 0(x2) # load 0x6321833d from memory into f22
la x2, scratch
li x3, 0x4f856f06 # load x3 with value 0x4f856f06
sw x3, 0(x2) # store 0x4f856f06 in memory
flh f28, 0(x2) # load 0x4f856f06 from memory into f28
fnmadd.h f11, f21, f22, f28 # perform operation

# Testcase cp_fs3 (Test source fs3 = f29)
la x2, scratch
li x3, 0x04667755 # load x3 with value 0x04667755
sw x3, 0(x2) # store 0x04667755 in memory
flh f17, 0(x2) # load 0x04667755 from memory into f17
la x2, scratch
li x3, 0xc3f0b90e # load x3 with value 0xc3f0b90e
sw x3, 0(x2) # store 0xc3f0b90e in memory
flh f3, 0(x2) # load 0xc3f0b90e from memory into f3
la x2, scratch
li x3, 0x0ced69ef # load x3 with value 0x0ced69ef
sw x3, 0(x2) # store 0x0ced69ef in memory
flh f29, 0(x2) # load 0x0ced69ef from memory into f29
fnmadd.h f29, f17, f3, f29 # perform operation

# Testcase cp_fs3 (Test source fs3 = f30)
la x2, scratch
li x3, 0x1f4c9e8f # load x3 with value 0x1f4c9e8f
sw x3, 0(x2) # store 0x1f4c9e8f in memory
flh f11, 0(x2) # load 0x1f4c9e8f from memory into f11
la x2, scratch
li x3, 0xe88f6ca9 # load x3 with value 0xe88f6ca9
sw x3, 0(x2) # store 0xe88f6ca9 in memory
flh f5, 0(x2) # load 0xe88f6ca9 from memory into f5
la x2, scratch
li x3, 0xb6689247 # load x3 with value 0xb6689247
sw x3, 0(x2) # store 0xb6689247 in memory
flh f30, 0(x2) # load 0xb6689247 from memory into f30
fnmadd.h f25, f11, f5, f30 # perform operation

# Testcase cp_fs3 (Test source fs3 = f31)
la x2, scratch
li x3, 0x00e5b6e3 # load x3 with value 0x00e5b6e3
sw x3, 0(x2) # store 0x00e5b6e3 in memory
flh f23, 0(x2) # load 0x00e5b6e3 from memory into f23
la x2, scratch
li x3, 0x99d3339f # load x3 with value 0x99d3339f
sw x3, 0(x2) # store 0x99d3339f in memory
flh f10, 0(x2) # load 0x99d3339f from memory into f10
la x2, scratch
li x3, 0xc7a4c406 # load x3 with value 0xc7a4c406
sw x3, 0(x2) # store 0xc7a4c406 in memory
flh f31, 0(x2) # load 0xc7a4c406 from memory into f31
fnmadd.h f5, f23, f10, f31 # perform operation

# Testcase cp_fd (Test destination fd = x0)
la x2, scratch
li x3, 0x5c7335ab # load x3 with value 0x5c7335ab
sw x3, 0(x2) # store 0x5c7335ab in memory
flh f29, 0(x2) # load 0x5c7335ab from memory into f29
la x2, scratch
li x3, 0x82d48215 # load x3 with value 0x82d48215
sw x3, 0(x2) # store 0x82d48215 in memory
flh f14, 0(x2) # load 0x82d48215 from memory into f14
la x2, scratch
li x3, 0x15ea7518 # load x3 with value 0x15ea7518
sw x3, 0(x2) # store 0x15ea7518 in memory
flh f8, 0(x2) # load 0x15ea7518 from memory into f8
fnmadd.h f0, f29, f14, f8 # perform operation

# Testcase cp_fd (Test destination fd = x1)
la x2, scratch
li x3, 0x1810d48f # load x3 with value 0x1810d48f
sw x3, 0(x2) # store 0x1810d48f in memory
flh f26, 0(x2) # load 0x1810d48f from memory into f26
la x2, scratch
li x3, 0x4de04b4d # load x3 with value 0x4de04b4d
sw x3, 0(x2) # store 0x4de04b4d in memory
flh f9, 0(x2) # load 0x4de04b4d from memory into f9
la x2, scratch
li x3, 0x8a7b091f # load x3 with value 0x8a7b091f
sw x3, 0(x2) # store 0x8a7b091f in memory
flh f20, 0(x2) # load 0x8a7b091f from memory into f20
fnmadd.h f1, f26, f9, f20 # perform operation

# Testcase cp_fd (Test destination fd = x2)
la x2, scratch
li x3, 0x405960f9 # load x3 with value 0x405960f9
sw x3, 0(x2) # store 0x405960f9 in memory
flh f24, 0(x2) # load 0x405960f9 from memory into f24
la x2, scratch
li x3, 0xba5398ec # load x3 with value 0xba5398ec
sw x3, 0(x2) # store 0xba5398ec in memory
flh f18, 0(x2) # load 0xba5398ec from memory into f18
la x2, scratch
li x3, 0x54e7a00d # load x3 with value 0x54e7a00d
sw x3, 0(x2) # store 0x54e7a00d in memory
flh f23, 0(x2) # load 0x54e7a00d from memory into f23
fnmadd.h f2, f24, f18, f23 # perform operation

# Testcase cp_fd (Test destination fd = x3)
la x2, scratch
li x3, 0xa7a23a76 # load x3 with value 0xa7a23a76
sw x3, 0(x2) # store 0xa7a23a76 in memory
flh f13, 0(x2) # load 0xa7a23a76 from memory into f13
la x2, scratch
li x3, 0xc0ecc9cb # load x3 with value 0xc0ecc9cb
sw x3, 0(x2) # store 0xc0ecc9cb in memory
flh f26, 0(x2) # load 0xc0ecc9cb from memory into f26
la x2, scratch
li x3, 0x4eff5d1a # load x3 with value 0x4eff5d1a
sw x3, 0(x2) # store 0x4eff5d1a in memory
flh f25, 0(x2) # load 0x4eff5d1a from memory into f25
fnmadd.h f3, f13, f26, f25 # perform operation

# Testcase cp_fd (Test destination fd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xf8602b38 # load x3 with value 0xf8602b38
sw x3, 0(x2) # store 0xf8602b38 in memory
flh f8, 0(x2) # load 0xf8602b38 from memory into f8
la x2, scratch
li x3, 0xa6a16725 # load x3 with value 0xa6a16725
sw x3, 0(x2) # store 0xa6a16725 in memory
flh f26, 0(x2) # load 0xa6a16725 from memory into f26
la x2, scratch
li x3, 0xf132a1c5 # load x3 with value 0xf132a1c5
sw x3, 0(x2) # store 0xf132a1c5 in memory
flh f13, 0(x2) # load 0xf132a1c5 from memory into f13
fnmadd.h f4, f8, f26, f13 # perform operation

# Testcase cp_fd (Test destination fd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x3be4985a # load x3 with value 0x3be4985a
sw x3, 0(x2) # store 0x3be4985a in memory
flh f7, 0(x2) # load 0x3be4985a from memory into f7
la x2, scratch
li x3, 0xbdd5f3dd # load x3 with value 0xbdd5f3dd
sw x3, 0(x2) # store 0xbdd5f3dd in memory
flh f23, 0(x2) # load 0xbdd5f3dd from memory into f23
la x2, scratch
li x3, 0xa066cba5 # load x3 with value 0xa066cba5
sw x3, 0(x2) # store 0xa066cba5 in memory
flh f24, 0(x2) # load 0xa066cba5 from memory into f24
fnmadd.h f5, f7, f23, f24 # perform operation

# Testcase cp_fd (Test destination fd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x2bc80226 # load x3 with value 0x2bc80226
sw x3, 0(x2) # store 0x2bc80226 in memory
flh f4, 0(x2) # load 0x2bc80226 from memory into f4
la x2, scratch
li x3, 0x79f094e5 # load x3 with value 0x79f094e5
sw x3, 0(x2) # store 0x79f094e5 in memory
flh f27, 0(x2) # load 0x79f094e5 from memory into f27
la x2, scratch
li x3, 0x324467a9 # load x3 with value 0x324467a9
sw x3, 0(x2) # store 0x324467a9 in memory
flh f17, 0(x2) # load 0x324467a9 from memory into f17
fnmadd.h f6, f4, f27, f17 # perform operation

# Testcase cp_fd (Test destination fd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x0b9a7eae # load x3 with value 0x0b9a7eae
sw x3, 0(x2) # store 0x0b9a7eae in memory
flh f6, 0(x2) # load 0x0b9a7eae from memory into f6
la x2, scratch
li x3, 0xc9559154 # load x3 with value 0xc9559154
sw x3, 0(x2) # store 0xc9559154 in memory
flh f12, 0(x2) # load 0xc9559154 from memory into f12
la x2, scratch
li x3, 0xb3c75380 # load x3 with value 0xb3c75380
sw x3, 0(x2) # store 0xb3c75380 in memory
flh f16, 0(x2) # load 0xb3c75380 from memory into f16
fnmadd.h f7, f6, f12, f16 # perform operation

# Testcase cp_fd (Test destination fd = x8)
la x2, scratch
li x3, 0x51b5a52f # load x3 with value 0x51b5a52f
sw x3, 0(x2) # store 0x51b5a52f in memory
flh f28, 0(x2) # load 0x51b5a52f from memory into f28
la x2, scratch
li x3, 0x1db1fcea # load x3 with value 0x1db1fcea
sw x3, 0(x2) # store 0x1db1fcea in memory
flh f2, 0(x2) # load 0x1db1fcea from memory into f2
la x2, scratch
li x3, 0xdf29cf0e # load x3 with value 0xdf29cf0e
sw x3, 0(x2) # store 0xdf29cf0e in memory
flh f6, 0(x2) # load 0xdf29cf0e from memory into f6
fnmadd.h f8, f28, f2, f6 # perform operation

# Testcase cp_fd (Test destination fd = x9)
la x2, scratch
li x3, 0x75243da5 # load x3 with value 0x75243da5
sw x3, 0(x2) # store 0x75243da5 in memory
flh f5, 0(x2) # load 0x75243da5 from memory into f5
la x2, scratch
li x3, 0x54613d58 # load x3 with value 0x54613d58
sw x3, 0(x2) # store 0x54613d58 in memory
flh f3, 0(x2) # load 0x54613d58 from memory into f3
la x2, scratch
li x3, 0xe37af302 # load x3 with value 0xe37af302
sw x3, 0(x2) # store 0xe37af302 in memory
flh f20, 0(x2) # load 0xe37af302 from memory into f20
fnmadd.h f9, f5, f3, f20 # perform operation

# Testcase cp_fd (Test destination fd = x10)
la x2, scratch
li x3, 0x83828a10 # load x3 with value 0x83828a10
sw x3, 0(x2) # store 0x83828a10 in memory
flh f18, 0(x2) # load 0x83828a10 from memory into f18
la x2, scratch
li x3, 0xf54023eb # load x3 with value 0xf54023eb
sw x3, 0(x2) # store 0xf54023eb in memory
flh f12, 0(x2) # load 0xf54023eb from memory into f12
la x2, scratch
li x3, 0xdd1780fa # load x3 with value 0xdd1780fa
sw x3, 0(x2) # store 0xdd1780fa in memory
flh f14, 0(x2) # load 0xdd1780fa from memory into f14
fnmadd.h f10, f18, f12, f14 # perform operation

# Testcase cp_fd (Test destination fd = x11)
la x2, scratch
li x3, 0xbfa45204 # load x3 with value 0xbfa45204
sw x3, 0(x2) # store 0xbfa45204 in memory
flh f30, 0(x2) # load 0xbfa45204 from memory into f30
la x2, scratch
li x3, 0x32afaa3c # load x3 with value 0x32afaa3c
sw x3, 0(x2) # store 0x32afaa3c in memory
flh f25, 0(x2) # load 0x32afaa3c from memory into f25
la x2, scratch
li x3, 0x68d204a3 # load x3 with value 0x68d204a3
sw x3, 0(x2) # store 0x68d204a3 in memory
flh f16, 0(x2) # load 0x68d204a3 from memory into f16
fnmadd.h f11, f30, f25, f16 # perform operation

# Testcase cp_fd (Test destination fd = x12)
la x2, scratch
li x3, 0x247555ee # load x3 with value 0x247555ee
sw x3, 0(x2) # store 0x247555ee in memory
flh f24, 0(x2) # load 0x247555ee from memory into f24
la x2, scratch
li x3, 0x1f957d86 # load x3 with value 0x1f957d86
sw x3, 0(x2) # store 0x1f957d86 in memory
flh f5, 0(x2) # load 0x1f957d86 from memory into f5
la x2, scratch
li x3, 0x5897106a # load x3 with value 0x5897106a
sw x3, 0(x2) # store 0x5897106a in memory
flh f3, 0(x2) # load 0x5897106a from memory into f3
fnmadd.h f12, f24, f5, f3 # perform operation

# Testcase cp_fd (Test destination fd = x13)
la x2, scratch
li x3, 0x3b060594 # load x3 with value 0x3b060594
sw x3, 0(x2) # store 0x3b060594 in memory
flh f22, 0(x2) # load 0x3b060594 from memory into f22
la x2, scratch
li x3, 0xcc0b6f99 # load x3 with value 0xcc0b6f99
sw x3, 0(x2) # store 0xcc0b6f99 in memory
flh f7, 0(x2) # load 0xcc0b6f99 from memory into f7
la x2, scratch
li x3, 0x1dc0a8a6 # load x3 with value 0x1dc0a8a6
sw x3, 0(x2) # store 0x1dc0a8a6 in memory
flh f6, 0(x2) # load 0x1dc0a8a6 from memory into f6
fnmadd.h f13, f22, f7, f6 # perform operation

# Testcase cp_fd (Test destination fd = x14)
la x2, scratch
li x3, 0xafd21d39 # load x3 with value 0xafd21d39
sw x3, 0(x2) # store 0xafd21d39 in memory
flh f29, 0(x2) # load 0xafd21d39 from memory into f29
la x2, scratch
li x3, 0xa058c053 # load x3 with value 0xa058c053
sw x3, 0(x2) # store 0xa058c053 in memory
flh f8, 0(x2) # load 0xa058c053 from memory into f8
la x2, scratch
li x3, 0x37d2a39c # load x3 with value 0x37d2a39c
sw x3, 0(x2) # store 0x37d2a39c in memory
flh f6, 0(x2) # load 0x37d2a39c from memory into f6
fnmadd.h f14, f29, f8, f6 # perform operation

# Testcase cp_fd (Test destination fd = x15)
la x2, scratch
li x3, 0xda8e46c4 # load x3 with value 0xda8e46c4
sw x3, 0(x2) # store 0xda8e46c4 in memory
flh f28, 0(x2) # load 0xda8e46c4 from memory into f28
la x2, scratch
li x3, 0x150a1655 # load x3 with value 0x150a1655
sw x3, 0(x2) # store 0x150a1655 in memory
flh f31, 0(x2) # load 0x150a1655 from memory into f31
la x2, scratch
li x3, 0x7e2f98bf # load x3 with value 0x7e2f98bf
sw x3, 0(x2) # store 0x7e2f98bf in memory
flh f11, 0(x2) # load 0x7e2f98bf from memory into f11
fnmadd.h f15, f28, f31, f11 # perform operation

# Testcase cp_fd (Test destination fd = x16)
la x2, scratch
li x3, 0xaa3c1ecc # load x3 with value 0xaa3c1ecc
sw x3, 0(x2) # store 0xaa3c1ecc in memory
flh f2, 0(x2) # load 0xaa3c1ecc from memory into f2
la x2, scratch
li x3, 0x70750ca0 # load x3 with value 0x70750ca0
sw x3, 0(x2) # store 0x70750ca0 in memory
flh f12, 0(x2) # load 0x70750ca0 from memory into f12
la x2, scratch
li x3, 0xdd422687 # load x3 with value 0xdd422687
sw x3, 0(x2) # store 0xdd422687 in memory
flh f7, 0(x2) # load 0xdd422687 from memory into f7
fnmadd.h f16, f2, f12, f7 # perform operation

# Testcase cp_fd (Test destination fd = x17)
la x2, scratch
li x3, 0xde4f150c # load x3 with value 0xde4f150c
sw x3, 0(x2) # store 0xde4f150c in memory
flh f24, 0(x2) # load 0xde4f150c from memory into f24
la x2, scratch
li x3, 0xe3aa2a74 # load x3 with value 0xe3aa2a74
sw x3, 0(x2) # store 0xe3aa2a74 in memory
flh f17, 0(x2) # load 0xe3aa2a74 from memory into f17
la x2, scratch
li x3, 0x792886da # load x3 with value 0x792886da
sw x3, 0(x2) # store 0x792886da in memory
flh f9, 0(x2) # load 0x792886da from memory into f9
fnmadd.h f17, f24, f17, f9 # perform operation

# Testcase cp_fd (Test destination fd = x18)
la x2, scratch
li x3, 0x30d2f198 # load x3 with value 0x30d2f198
sw x3, 0(x2) # store 0x30d2f198 in memory
flh f23, 0(x2) # load 0x30d2f198 from memory into f23
la x2, scratch
li x3, 0xcd93fe05 # load x3 with value 0xcd93fe05
sw x3, 0(x2) # store 0xcd93fe05 in memory
flh f19, 0(x2) # load 0xcd93fe05 from memory into f19
la x2, scratch
li x3, 0xcd85b913 # load x3 with value 0xcd85b913
sw x3, 0(x2) # store 0xcd85b913 in memory
flh f22, 0(x2) # load 0xcd85b913 from memory into f22
fnmadd.h f18, f23, f19, f22 # perform operation

# Testcase cp_fd (Test destination fd = x19)
la x2, scratch
li x3, 0xdeaea14d # load x3 with value 0xdeaea14d
sw x3, 0(x2) # store 0xdeaea14d in memory
flh f30, 0(x2) # load 0xdeaea14d from memory into f30
la x2, scratch
li x3, 0xbcaab26e # load x3 with value 0xbcaab26e
sw x3, 0(x2) # store 0xbcaab26e in memory
flh f3, 0(x2) # load 0xbcaab26e from memory into f3
la x2, scratch
li x3, 0xef76a8e3 # load x3 with value 0xef76a8e3
sw x3, 0(x2) # store 0xef76a8e3 in memory
flh f28, 0(x2) # load 0xef76a8e3 from memory into f28
fnmadd.h f19, f30, f3, f28 # perform operation

# Testcase cp_fd (Test destination fd = x20)
la x2, scratch
li x3, 0x77b08d74 # load x3 with value 0x77b08d74
sw x3, 0(x2) # store 0x77b08d74 in memory
flh f20, 0(x2) # load 0x77b08d74 from memory into f20
la x2, scratch
li x3, 0xf8522131 # load x3 with value 0xf8522131
sw x3, 0(x2) # store 0xf8522131 in memory
flh f3, 0(x2) # load 0xf8522131 from memory into f3
la x2, scratch
li x3, 0xd3c178b5 # load x3 with value 0xd3c178b5
sw x3, 0(x2) # store 0xd3c178b5 in memory
flh f25, 0(x2) # load 0xd3c178b5 from memory into f25
fnmadd.h f20, f20, f3, f25 # perform operation

# Testcase cp_fd (Test destination fd = x21)
la x2, scratch
li x3, 0x69674f69 # load x3 with value 0x69674f69
sw x3, 0(x2) # store 0x69674f69 in memory
flh f6, 0(x2) # load 0x69674f69 from memory into f6
la x2, scratch
li x3, 0x1f8e9183 # load x3 with value 0x1f8e9183
sw x3, 0(x2) # store 0x1f8e9183 in memory
flh f25, 0(x2) # load 0x1f8e9183 from memory into f25
la x2, scratch
li x3, 0x61836f46 # load x3 with value 0x61836f46
sw x3, 0(x2) # store 0x61836f46 in memory
flh f22, 0(x2) # load 0x61836f46 from memory into f22
fnmadd.h f21, f6, f25, f22 # perform operation

# Testcase cp_fd (Test destination fd = x22)
la x2, scratch
li x3, 0x3bebb7c6 # load x3 with value 0x3bebb7c6
sw x3, 0(x2) # store 0x3bebb7c6 in memory
flh f18, 0(x2) # load 0x3bebb7c6 from memory into f18
la x2, scratch
li x3, 0xefd0cdde # load x3 with value 0xefd0cdde
sw x3, 0(x2) # store 0xefd0cdde in memory
flh f16, 0(x2) # load 0xefd0cdde from memory into f16
la x2, scratch
li x3, 0x6bbae1bd # load x3 with value 0x6bbae1bd
sw x3, 0(x2) # store 0x6bbae1bd in memory
flh f10, 0(x2) # load 0x6bbae1bd from memory into f10
fnmadd.h f22, f18, f16, f10 # perform operation

# Testcase cp_fd (Test destination fd = x23)
la x2, scratch
li x3, 0x20afa66d # load x3 with value 0x20afa66d
sw x3, 0(x2) # store 0x20afa66d in memory
flh f13, 0(x2) # load 0x20afa66d from memory into f13
la x2, scratch
li x3, 0xaf0cec31 # load x3 with value 0xaf0cec31
sw x3, 0(x2) # store 0xaf0cec31 in memory
flh f16, 0(x2) # load 0xaf0cec31 from memory into f16
la x2, scratch
li x3, 0x1168bfed # load x3 with value 0x1168bfed
sw x3, 0(x2) # store 0x1168bfed in memory
flh f2, 0(x2) # load 0x1168bfed from memory into f2
fnmadd.h f23, f13, f16, f2 # perform operation

# Testcase cp_fd (Test destination fd = x24)
la x2, scratch
li x3, 0xeafd1b4f # load x3 with value 0xeafd1b4f
sw x3, 0(x2) # store 0xeafd1b4f in memory
flh f7, 0(x2) # load 0xeafd1b4f from memory into f7
la x2, scratch
li x3, 0x098dd24a # load x3 with value 0x098dd24a
sw x3, 0(x2) # store 0x098dd24a in memory
flh f10, 0(x2) # load 0x098dd24a from memory into f10
la x2, scratch
li x3, 0x70836224 # load x3 with value 0x70836224
sw x3, 0(x2) # store 0x70836224 in memory
flh f19, 0(x2) # load 0x70836224 from memory into f19
fnmadd.h f24, f7, f10, f19 # perform operation

# Testcase cp_fd (Test destination fd = x25)
la x2, scratch
li x3, 0xef84b8ce # load x3 with value 0xef84b8ce
sw x3, 0(x2) # store 0xef84b8ce in memory
flh f18, 0(x2) # load 0xef84b8ce from memory into f18
la x2, scratch
li x3, 0x7a2941bd # load x3 with value 0x7a2941bd
sw x3, 0(x2) # store 0x7a2941bd in memory
flh f2, 0(x2) # load 0x7a2941bd from memory into f2
la x2, scratch
li x3, 0x3256c457 # load x3 with value 0x3256c457
sw x3, 0(x2) # store 0x3256c457 in memory
flh f15, 0(x2) # load 0x3256c457 from memory into f15
fnmadd.h f25, f18, f2, f15 # perform operation

# Testcase cp_fd (Test destination fd = x26)
la x2, scratch
li x3, 0xb1c85939 # load x3 with value 0xb1c85939
sw x3, 0(x2) # store 0xb1c85939 in memory
flh f6, 0(x2) # load 0xb1c85939 from memory into f6
la x2, scratch
li x3, 0x1c039881 # load x3 with value 0x1c039881
sw x3, 0(x2) # store 0x1c039881 in memory
flh f31, 0(x2) # load 0x1c039881 from memory into f31
la x2, scratch
li x3, 0x25584e44 # load x3 with value 0x25584e44
sw x3, 0(x2) # store 0x25584e44 in memory
flh f8, 0(x2) # load 0x25584e44 from memory into f8
fnmadd.h f26, f6, f31, f8 # perform operation

# Testcase cp_fd (Test destination fd = x27)
la x2, scratch
li x3, 0x0ccc2b0c # load x3 with value 0x0ccc2b0c
sw x3, 0(x2) # store 0x0ccc2b0c in memory
flh f3, 0(x2) # load 0x0ccc2b0c from memory into f3
la x2, scratch
li x3, 0xb7c280c6 # load x3 with value 0xb7c280c6
sw x3, 0(x2) # store 0xb7c280c6 in memory
flh f2, 0(x2) # load 0xb7c280c6 from memory into f2
la x2, scratch
li x3, 0x78e14548 # load x3 with value 0x78e14548
sw x3, 0(x2) # store 0x78e14548 in memory
flh f24, 0(x2) # load 0x78e14548 from memory into f24
fnmadd.h f27, f3, f2, f24 # perform operation

# Testcase cp_fd (Test destination fd = x28)
la x2, scratch
li x3, 0xece955b4 # load x3 with value 0xece955b4
sw x3, 0(x2) # store 0xece955b4 in memory
flh f25, 0(x2) # load 0xece955b4 from memory into f25
la x2, scratch
li x3, 0xe6754919 # load x3 with value 0xe6754919
sw x3, 0(x2) # store 0xe6754919 in memory
flh f24, 0(x2) # load 0xe6754919 from memory into f24
la x2, scratch
li x3, 0xdce2e16c # load x3 with value 0xdce2e16c
sw x3, 0(x2) # store 0xdce2e16c in memory
flh f22, 0(x2) # load 0xdce2e16c from memory into f22
fnmadd.h f28, f25, f24, f22 # perform operation

# Testcase cp_fd (Test destination fd = x29)
la x2, scratch
li x3, 0x94434569 # load x3 with value 0x94434569
sw x3, 0(x2) # store 0x94434569 in memory
flh f7, 0(x2) # load 0x94434569 from memory into f7
la x2, scratch
li x3, 0xf3e988b8 # load x3 with value 0xf3e988b8
sw x3, 0(x2) # store 0xf3e988b8 in memory
flh f16, 0(x2) # load 0xf3e988b8 from memory into f16
la x2, scratch
li x3, 0xb01f4b28 # load x3 with value 0xb01f4b28
sw x3, 0(x2) # store 0xb01f4b28 in memory
flh f17, 0(x2) # load 0xb01f4b28 from memory into f17
fnmadd.h f29, f7, f16, f17 # perform operation

# Testcase cp_fd (Test destination fd = x30)
la x2, scratch
li x3, 0x0eb83945 # load x3 with value 0x0eb83945
sw x3, 0(x2) # store 0x0eb83945 in memory
flh f15, 0(x2) # load 0x0eb83945 from memory into f15
la x2, scratch
li x3, 0xb00beb4b # load x3 with value 0xb00beb4b
sw x3, 0(x2) # store 0xb00beb4b in memory
flh f2, 0(x2) # load 0xb00beb4b from memory into f2
la x2, scratch
li x3, 0x588b247c # load x3 with value 0x588b247c
sw x3, 0(x2) # store 0x588b247c in memory
flh f27, 0(x2) # load 0x588b247c from memory into f27
fnmadd.h f30, f15, f2, f27 # perform operation

# Testcase cp_fd (Test destination fd = x31)
la x2, scratch
li x3, 0xde985ff3 # load x3 with value 0xde985ff3
sw x3, 0(x2) # store 0xde985ff3 in memory
flh f9, 0(x2) # load 0xde985ff3 from memory into f9
la x2, scratch
li x3, 0x06c4cf38 # load x3 with value 0x06c4cf38
sw x3, 0(x2) # store 0x06c4cf38 in memory
flh f7, 0(x2) # load 0x06c4cf38 from memory into f7
la x2, scratch
li x3, 0x4f91457c # load x3 with value 0x4f91457c
sw x3, 0(x2) # store 0x4f91457c in memory
flh f6, 0(x2) # load 0x4f91457c from memory into f6
fnmadd.h f31, f9, f7, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x061b69b8 # load x3 with value 0x061b69b8
sw x3, 0(x2) # store 0x061b69b8 in memory
flh f10, 0(x2) # load 0x061b69b8 from memory into f10
la x2, scratch
li x3, 0xfda8ed6e # load x3 with value 0xfda8ed6e
sw x3, 0(x2) # store 0xfda8ed6e in memory
flh f30, 0(x2) # load 0xfda8ed6e from memory into f30
fnmadd.h f5, f21, f10, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f6, 0(x2) # load 0x00008000 from memory into f6
la x2, scratch
li x3, 0xc2b4be6b # load x3 with value 0xc2b4be6b
sw x3, 0(x2) # store 0xc2b4be6b in memory
flh f16, 0(x2) # load 0xc2b4be6b from memory into f16
la x2, scratch
li x3, 0xf0483b53 # load x3 with value 0xf0483b53
sw x3, 0(x2) # store 0xf0483b53 in memory
flh f26, 0(x2) # load 0xf0483b53 from memory into f26
fnmadd.h f18, f6, f16, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f1, 0(x2) # load 0x00003c00 from memory into f1
la x2, scratch
li x3, 0x37b268b9 # load x3 with value 0x37b268b9
sw x3, 0(x2) # store 0x37b268b9 in memory
flh f12, 0(x2) # load 0x37b268b9 from memory into f12
la x2, scratch
li x3, 0x58699dbd # load x3 with value 0x58699dbd
sw x3, 0(x2) # store 0x58699dbd in memory
flh f16, 0(x2) # load 0x58699dbd from memory into f16
fnmadd.h f11, f1, f12, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f21, 0(x2) # load 0x0000bc00 from memory into f21
la x2, scratch
li x3, 0xbc911ac1 # load x3 with value 0xbc911ac1
sw x3, 0(x2) # store 0xbc911ac1 in memory
flh f1, 0(x2) # load 0xbc911ac1 from memory into f1
la x2, scratch
li x3, 0x5617771c # load x3 with value 0x5617771c
sw x3, 0(x2) # store 0x5617771c in memory
flh f7, 0(x2) # load 0x5617771c from memory into f7
fnmadd.h f3, f21, f1, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
la x2, scratch
li x3, 0x18fe999f # load x3 with value 0x18fe999f
sw x3, 0(x2) # store 0x18fe999f in memory
flh f15, 0(x2) # load 0x18fe999f from memory into f15
la x2, scratch
li x3, 0x84c067a4 # load x3 with value 0x84c067a4
sw x3, 0(x2) # store 0x84c067a4 in memory
flh f14, 0(x2) # load 0x84c067a4 from memory into f14
fnmadd.h f5, f10, f15, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f15, 0(x2) # load 0x0000be00 from memory into f15
la x2, scratch
li x3, 0x539845b8 # load x3 with value 0x539845b8
sw x3, 0(x2) # store 0x539845b8 in memory
flh f5, 0(x2) # load 0x539845b8 from memory into f5
la x2, scratch
li x3, 0x47c177f7 # load x3 with value 0x47c177f7
sw x3, 0(x2) # store 0x47c177f7 in memory
flh f27, 0(x2) # load 0x47c177f7 from memory into f27
fnmadd.h f29, f15, f5, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f16, 0(x2) # load 0x00004000 from memory into f16
la x2, scratch
li x3, 0x2e0d6b6c # load x3 with value 0x2e0d6b6c
sw x3, 0(x2) # store 0x2e0d6b6c in memory
flh f17, 0(x2) # load 0x2e0d6b6c from memory into f17
la x2, scratch
li x3, 0x6c142015 # load x3 with value 0x6c142015
sw x3, 0(x2) # store 0x6c142015 in memory
flh f22, 0(x2) # load 0x6c142015 from memory into f22
fnmadd.h f23, f16, f17, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f10, 0(x2) # load 0x0000c000 from memory into f10
la x2, scratch
li x3, 0x4e7a3947 # load x3 with value 0x4e7a3947
sw x3, 0(x2) # store 0x4e7a3947 in memory
flh f23, 0(x2) # load 0x4e7a3947 from memory into f23
la x2, scratch
li x3, 0x9508fc75 # load x3 with value 0x9508fc75
sw x3, 0(x2) # store 0x9508fc75 in memory
flh f2, 0(x2) # load 0x9508fc75 from memory into f2
fnmadd.h f18, f10, f23, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
la x2, scratch
li x3, 0xd7a9dd9a # load x3 with value 0xd7a9dd9a
sw x3, 0(x2) # store 0xd7a9dd9a in memory
flh f5, 0(x2) # load 0xd7a9dd9a from memory into f5
la x2, scratch
li x3, 0xa370dc2c # load x3 with value 0xa370dc2c
sw x3, 0(x2) # store 0xa370dc2c in memory
flh f3, 0(x2) # load 0xa370dc2c from memory into f3
fnmadd.h f16, f18, f5, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f26, 0(x2) # load 0x00008400 from memory into f26
la x2, scratch
li x3, 0x348d5066 # load x3 with value 0x348d5066
sw x3, 0(x2) # store 0x348d5066 in memory
flh f25, 0(x2) # load 0x348d5066 from memory into f25
la x2, scratch
li x3, 0x885bf824 # load x3 with value 0x885bf824
sw x3, 0(x2) # store 0x885bf824 in memory
flh f1, 0(x2) # load 0x885bf824 from memory into f1
fnmadd.h f17, f26, f25, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f2, 0(x2) # load 0x00007bff from memory into f2
la x2, scratch
li x3, 0x4860f163 # load x3 with value 0x4860f163
sw x3, 0(x2) # store 0x4860f163 in memory
flh f12, 0(x2) # load 0x4860f163 from memory into f12
la x2, scratch
li x3, 0x4f7963b8 # load x3 with value 0x4f7963b8
sw x3, 0(x2) # store 0x4f7963b8 in memory
flh f6, 0(x2) # load 0x4f7963b8 from memory into f6
fnmadd.h f18, f2, f12, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f31, 0(x2) # load 0x0000fbff from memory into f31
la x2, scratch
li x3, 0xe5c9cc60 # load x3 with value 0xe5c9cc60
sw x3, 0(x2) # store 0xe5c9cc60 in memory
flh f27, 0(x2) # load 0xe5c9cc60 from memory into f27
la x2, scratch
li x3, 0xa0b49222 # load x3 with value 0xa0b49222
sw x3, 0(x2) # store 0xa0b49222 in memory
flh f7, 0(x2) # load 0xa0b49222 from memory into f7
fnmadd.h f21, f31, f27, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f16, 0(x2) # load 0x000003ff from memory into f16
la x2, scratch
li x3, 0x8c5ef162 # load x3 with value 0x8c5ef162
sw x3, 0(x2) # store 0x8c5ef162 in memory
flh f29, 0(x2) # load 0x8c5ef162 from memory into f29
la x2, scratch
li x3, 0xa3ea2e84 # load x3 with value 0xa3ea2e84
sw x3, 0(x2) # store 0xa3ea2e84 in memory
flh f11, 0(x2) # load 0xa3ea2e84 from memory into f11
fnmadd.h f25, f16, f29, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
la x2, scratch
li x3, 0x26e770b3 # load x3 with value 0x26e770b3
sw x3, 0(x2) # store 0x26e770b3 in memory
flh f13, 0(x2) # load 0x26e770b3 from memory into f13
la x2, scratch
li x3, 0xe7679f5f # load x3 with value 0xe7679f5f
sw x3, 0(x2) # store 0xe7679f5f in memory
flh f31, 0(x2) # load 0xe7679f5f from memory into f31
fnmadd.h f30, f18, f13, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f30, 0(x2) # load 0x00000200 from memory into f30
la x2, scratch
li x3, 0x4cd89337 # load x3 with value 0x4cd89337
sw x3, 0(x2) # store 0x4cd89337 in memory
flh f1, 0(x2) # load 0x4cd89337 from memory into f1
la x2, scratch
li x3, 0x7c1b1eed # load x3 with value 0x7c1b1eed
sw x3, 0(x2) # store 0x7c1b1eed in memory
flh f8, 0(x2) # load 0x7c1b1eed from memory into f8
fnmadd.h f26, f30, f1, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f24, 0(x2) # load 0x00008200 from memory into f24
la x2, scratch
li x3, 0xd5872363 # load x3 with value 0xd5872363
sw x3, 0(x2) # store 0xd5872363 in memory
flh f8, 0(x2) # load 0xd5872363 from memory into f8
la x2, scratch
li x3, 0xb7fe767b # load x3 with value 0xb7fe767b
sw x3, 0(x2) # store 0xb7fe767b in memory
flh f14, 0(x2) # load 0xb7fe767b from memory into f14
fnmadd.h f12, f24, f8, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0xddcdf8a3 # load x3 with value 0xddcdf8a3
sw x3, 0(x2) # store 0xddcdf8a3 in memory
flh f3, 0(x2) # load 0xddcdf8a3 from memory into f3
la x2, scratch
li x3, 0xac558959 # load x3 with value 0xac558959
sw x3, 0(x2) # store 0xac558959 in memory
flh f20, 0(x2) # load 0xac558959 from memory into f20
fnmadd.h f5, f8, f3, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f13, 0(x2) # load 0x00008001 from memory into f13
la x2, scratch
li x3, 0x8d1c1f13 # load x3 with value 0x8d1c1f13
sw x3, 0(x2) # store 0x8d1c1f13 in memory
flh f27, 0(x2) # load 0x8d1c1f13 from memory into f27
la x2, scratch
li x3, 0xd266c2b1 # load x3 with value 0xd266c2b1
sw x3, 0(x2) # store 0xd266c2b1 in memory
flh f30, 0(x2) # load 0xd266c2b1 from memory into f30
fnmadd.h f18, f13, f27, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f13, 0(x2) # load 0x00007c00 from memory into f13
la x2, scratch
li x3, 0x24c74453 # load x3 with value 0x24c74453
sw x3, 0(x2) # store 0x24c74453 in memory
flh f29, 0(x2) # load 0x24c74453 from memory into f29
la x2, scratch
li x3, 0xd080a924 # load x3 with value 0xd080a924
sw x3, 0(x2) # store 0xd080a924 in memory
flh f11, 0(x2) # load 0xd080a924 from memory into f11
fnmadd.h f20, f13, f29, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f30, 0(x2) # load 0x0000fc00 from memory into f30
la x2, scratch
li x3, 0xa8e18a23 # load x3 with value 0xa8e18a23
sw x3, 0(x2) # store 0xa8e18a23 in memory
flh f6, 0(x2) # load 0xa8e18a23 from memory into f6
la x2, scratch
li x3, 0x2737f32a # load x3 with value 0x2737f32a
sw x3, 0(x2) # store 0x2737f32a in memory
flh f20, 0(x2) # load 0x2737f32a from memory into f20
fnmadd.h f14, f30, f6, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f2, 0(x2) # load 0x00007e00 from memory into f2
la x2, scratch
li x3, 0x0a6569c3 # load x3 with value 0x0a6569c3
sw x3, 0(x2) # store 0x0a6569c3 in memory
flh f26, 0(x2) # load 0x0a6569c3 from memory into f26
la x2, scratch
li x3, 0xf8300f52 # load x3 with value 0xf8300f52
sw x3, 0(x2) # store 0xf8300f52 in memory
flh f31, 0(x2) # load 0xf8300f52 from memory into f31
fnmadd.h f23, f2, f26, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f20, 0(x2) # load 0x00007fff from memory into f20
la x2, scratch
li x3, 0x17edbc04 # load x3 with value 0x17edbc04
sw x3, 0(x2) # store 0x17edbc04 in memory
flh f11, 0(x2) # load 0x17edbc04 from memory into f11
la x2, scratch
li x3, 0xc7b879d7 # load x3 with value 0xc7b879d7
sw x3, 0(x2) # store 0xc7b879d7 in memory
flh f31, 0(x2) # load 0xc7b879d7 from memory into f31
fnmadd.h f12, f20, f11, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f13, 0(x2) # load 0x0000fe00 from memory into f13
la x2, scratch
li x3, 0x36e7fe32 # load x3 with value 0x36e7fe32
sw x3, 0(x2) # store 0x36e7fe32 in memory
flh f31, 0(x2) # load 0x36e7fe32 from memory into f31
la x2, scratch
li x3, 0xe8f1bbf8 # load x3 with value 0xe8f1bbf8
sw x3, 0(x2) # store 0xe8f1bbf8 in memory
flh f3, 0(x2) # load 0xe8f1bbf8 from memory into f3
fnmadd.h f9, f13, f31, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
la x2, scratch
li x3, 0x9541ba5d # load x3 with value 0x9541ba5d
sw x3, 0(x2) # store 0x9541ba5d in memory
flh f13, 0(x2) # load 0x9541ba5d from memory into f13
la x2, scratch
li x3, 0x01a7fe8a # load x3 with value 0x01a7fe8a
sw x3, 0(x2) # store 0x01a7fe8a in memory
flh f27, 0(x2) # load 0x01a7fe8a from memory into f27
fnmadd.h f31, f20, f13, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f17, 0(x2) # load 0x00007dff from memory into f17
la x2, scratch
li x3, 0xf98f54f0 # load x3 with value 0xf98f54f0
sw x3, 0(x2) # store 0xf98f54f0 in memory
flh f3, 0(x2) # load 0xf98f54f0 from memory into f3
la x2, scratch
li x3, 0xd03d5a36 # load x3 with value 0xd03d5a36
sw x3, 0(x2) # store 0xd03d5a36 in memory
flh f13, 0(x2) # load 0xd03d5a36 from memory into f13
fnmadd.h f28, f17, f3, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f13, 0(x2) # load 0x0000fc01 from memory into f13
la x2, scratch
li x3, 0x7c190ad2 # load x3 with value 0x7c190ad2
sw x3, 0(x2) # store 0x7c190ad2 in memory
flh f30, 0(x2) # load 0x7c190ad2 from memory into f30
la x2, scratch
li x3, 0x00751ae4 # load x3 with value 0x00751ae4
sw x3, 0(x2) # store 0x00751ae4 in memory
flh f5, 0(x2) # load 0x00751ae4 from memory into f5
fnmadd.h f8, f13, f30, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f16, 0(x2) # load 0x000058b4 from memory into f16
la x2, scratch
li x3, 0x1c178020 # load x3 with value 0x1c178020
sw x3, 0(x2) # store 0x1c178020 in memory
flh f11, 0(x2) # load 0x1c178020 from memory into f11
la x2, scratch
li x3, 0x599465f8 # load x3 with value 0x599465f8
sw x3, 0(x2) # store 0x599465f8 in memory
flh f21, 0(x2) # load 0x599465f8 from memory into f21
fnmadd.h f13, f16, f11, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f8, 0(x2) # load 0x0000c93a from memory into f8
la x2, scratch
li x3, 0x562a1bcb # load x3 with value 0x562a1bcb
sw x3, 0(x2) # store 0x562a1bcb in memory
flh f30, 0(x2) # load 0x562a1bcb from memory into f30
la x2, scratch
li x3, 0x71cbce22 # load x3 with value 0x71cbce22
sw x3, 0(x2) # store 0x71cbce22 in memory
flh f14, 0(x2) # load 0x71cbce22 from memory into f14
fnmadd.h f17, f8, f30, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
la x2, scratch
li x3, 0x4a266b7d # load x3 with value 0x4a266b7d
sw x3, 0(x2) # store 0x4a266b7d in memory
flh f5, 0(x2) # load 0x4a266b7d from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0xa0fdabf7 # load x3 with value 0xa0fdabf7
sw x3, 0(x2) # store 0xa0fdabf7 in memory
flh f20, 0(x2) # load 0xa0fdabf7 from memory into f20
fnmadd.h f14, f5, f16, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000)
la x2, scratch
li x3, 0x54bf36cb # load x3 with value 0x54bf36cb
sw x3, 0(x2) # store 0x54bf36cb in memory
flh f30, 0(x2) # load 0x54bf36cb from memory into f30
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f10, 0(x2) # load 0x00008000 from memory into f10
la x2, scratch
li x3, 0x6c98b4d0 # load x3 with value 0x6c98b4d0
sw x3, 0(x2) # store 0x6c98b4d0 in memory
flh f21, 0(x2) # load 0x6c98b4d0 from memory into f21
fnmadd.h f1, f30, f10, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3c00)
la x2, scratch
li x3, 0x2c62c967 # load x3 with value 0x2c62c967
sw x3, 0(x2) # store 0x2c62c967 in memory
flh f26, 0(x2) # load 0x2c62c967 from memory into f26
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f19, 0(x2) # load 0x00003c00 from memory into f19
la x2, scratch
li x3, 0x9716f236 # load x3 with value 0x9716f236
sw x3, 0(x2) # store 0x9716f236 in memory
flh f23, 0(x2) # load 0x9716f236 from memory into f23
fnmadd.h f10, f26, f19, f23 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbc00)
la x2, scratch
li x3, 0x6ce4a37a # load x3 with value 0x6ce4a37a
sw x3, 0(x2) # store 0x6ce4a37a in memory
flh f22, 0(x2) # load 0x6ce4a37a from memory into f22
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f31, 0(x2) # load 0x0000bc00 from memory into f31
la x2, scratch
li x3, 0x6a257dfe # load x3 with value 0x6a257dfe
sw x3, 0(x2) # store 0x6a257dfe in memory
flh f6, 0(x2) # load 0x6a257dfe from memory into f6
fnmadd.h f13, f22, f31, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3e00)
la x2, scratch
li x3, 0x13034d5b # load x3 with value 0x13034d5b
sw x3, 0(x2) # store 0x13034d5b in memory
flh f10, 0(x2) # load 0x13034d5b from memory into f10
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
la x2, scratch
li x3, 0x5729a0d1 # load x3 with value 0x5729a0d1
sw x3, 0(x2) # store 0x5729a0d1 in memory
flh f25, 0(x2) # load 0x5729a0d1 from memory into f25
fnmadd.h f29, f10, f21, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbe00)
la x2, scratch
li x3, 0xebe28acb # load x3 with value 0xebe28acb
sw x3, 0(x2) # store 0xebe28acb in memory
flh f13, 0(x2) # load 0xebe28acb from memory into f13
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f29, 0(x2) # load 0x0000be00 from memory into f29
la x2, scratch
li x3, 0x57203f88 # load x3 with value 0x57203f88
sw x3, 0(x2) # store 0x57203f88 in memory
flh f3, 0(x2) # load 0x57203f88 from memory into f3
fnmadd.h f7, f13, f29, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x4000)
la x2, scratch
li x3, 0x62cf308e # load x3 with value 0x62cf308e
sw x3, 0(x2) # store 0x62cf308e in memory
flh f20, 0(x2) # load 0x62cf308e from memory into f20
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f2, 0(x2) # load 0x00004000 from memory into f2
la x2, scratch
li x3, 0xccbb13c3 # load x3 with value 0xccbb13c3
sw x3, 0(x2) # store 0xccbb13c3 in memory
flh f28, 0(x2) # load 0xccbb13c3 from memory into f28
fnmadd.h f10, f20, f2, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc000)
la x2, scratch
li x3, 0x9c617887 # load x3 with value 0x9c617887
sw x3, 0(x2) # store 0x9c617887 in memory
flh f25, 0(x2) # load 0x9c617887 from memory into f25
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f19, 0(x2) # load 0x0000c000 from memory into f19
la x2, scratch
li x3, 0xdece8ed3 # load x3 with value 0xdece8ed3
sw x3, 0(x2) # store 0xdece8ed3 in memory
flh f14, 0(x2) # load 0xdece8ed3 from memory into f14
fnmadd.h f16, f25, f19, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400)
la x2, scratch
li x3, 0xed6d3034 # load x3 with value 0xed6d3034
sw x3, 0(x2) # store 0xed6d3034 in memory
flh f12, 0(x2) # load 0xed6d3034 from memory into f12
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f17, 0(x2) # load 0x00000400 from memory into f17
la x2, scratch
li x3, 0xefa21ad0 # load x3 with value 0xefa21ad0
sw x3, 0(x2) # store 0xefa21ad0 in memory
flh f10, 0(x2) # load 0xefa21ad0 from memory into f10
fnmadd.h f3, f12, f17, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8400)
la x2, scratch
li x3, 0xc5401e8f # load x3 with value 0xc5401e8f
sw x3, 0(x2) # store 0xc5401e8f in memory
flh f6, 0(x2) # load 0xc5401e8f from memory into f6
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f14, 0(x2) # load 0x00008400 from memory into f14
la x2, scratch
li x3, 0xfe905797 # load x3 with value 0xfe905797
sw x3, 0(x2) # store 0xfe905797 in memory
flh f30, 0(x2) # load 0xfe905797 from memory into f30
fnmadd.h f21, f6, f14, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7bff)
la x2, scratch
li x3, 0x7d3c7379 # load x3 with value 0x7d3c7379
sw x3, 0(x2) # store 0x7d3c7379 in memory
flh f1, 0(x2) # load 0x7d3c7379 from memory into f1
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f19, 0(x2) # load 0x00007bff from memory into f19
la x2, scratch
li x3, 0xe8f56939 # load x3 with value 0xe8f56939
sw x3, 0(x2) # store 0xe8f56939 in memory
flh f27, 0(x2) # load 0xe8f56939 from memory into f27
fnmadd.h f10, f1, f19, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfbff)
la x2, scratch
li x3, 0x135ddcd1 # load x3 with value 0x135ddcd1
sw x3, 0(x2) # store 0x135ddcd1 in memory
flh f16, 0(x2) # load 0x135ddcd1 from memory into f16
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f17, 0(x2) # load 0x0000fbff from memory into f17
la x2, scratch
li x3, 0xc3ec33a8 # load x3 with value 0xc3ec33a8
sw x3, 0(x2) # store 0xc3ec33a8 in memory
flh f3, 0(x2) # load 0xc3ec33a8 from memory into f3
fnmadd.h f19, f16, f17, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff)
la x2, scratch
li x3, 0x44df3deb # load x3 with value 0x44df3deb
sw x3, 0(x2) # store 0x44df3deb in memory
flh f11, 0(x2) # load 0x44df3deb from memory into f11
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f21, 0(x2) # load 0x000003ff from memory into f21
la x2, scratch
li x3, 0xf2429c02 # load x3 with value 0xf2429c02
sw x3, 0(x2) # store 0xf2429c02 in memory
flh f12, 0(x2) # load 0xf2429c02 from memory into f12
fnmadd.h f22, f11, f21, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x83ff)
la x2, scratch
li x3, 0x50e20eb2 # load x3 with value 0x50e20eb2
sw x3, 0(x2) # store 0x50e20eb2 in memory
flh f12, 0(x2) # load 0x50e20eb2 from memory into f12
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f5, 0(x2) # load 0x000083ff from memory into f5
la x2, scratch
li x3, 0xaaa8f266 # load x3 with value 0xaaa8f266
sw x3, 0(x2) # store 0xaaa8f266 in memory
flh f1, 0(x2) # load 0xaaa8f266 from memory into f1
fnmadd.h f28, f12, f5, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x200)
la x2, scratch
li x3, 0x39c837ef # load x3 with value 0x39c837ef
sw x3, 0(x2) # store 0x39c837ef in memory
flh f1, 0(x2) # load 0x39c837ef from memory into f1
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f25, 0(x2) # load 0x00000200 from memory into f25
la x2, scratch
li x3, 0xfb5920e1 # load x3 with value 0xfb5920e1
sw x3, 0(x2) # store 0xfb5920e1 in memory
flh f15, 0(x2) # load 0xfb5920e1 from memory into f15
fnmadd.h f14, f1, f25, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8200)
la x2, scratch
li x3, 0x8a98ac13 # load x3 with value 0x8a98ac13
sw x3, 0(x2) # store 0x8a98ac13 in memory
flh f16, 0(x2) # load 0x8a98ac13 from memory into f16
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f3, 0(x2) # load 0x00008200 from memory into f3
la x2, scratch
li x3, 0x38e8844d # load x3 with value 0x38e8844d
sw x3, 0(x2) # store 0x38e8844d in memory
flh f30, 0(x2) # load 0x38e8844d from memory into f30
fnmadd.h f12, f16, f3, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
la x2, scratch
li x3, 0xe582f207 # load x3 with value 0xe582f207
sw x3, 0(x2) # store 0xe582f207 in memory
flh f30, 0(x2) # load 0xe582f207 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0xc2eda018 # load x3 with value 0xc2eda018
sw x3, 0(x2) # store 0xc2eda018 in memory
flh f28, 0(x2) # load 0xc2eda018 from memory into f28
fnmadd.h f21, f30, f19, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8001)
la x2, scratch
li x3, 0x3406205a # load x3 with value 0x3406205a
sw x3, 0(x2) # store 0x3406205a in memory
flh f16, 0(x2) # load 0x3406205a from memory into f16
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f2, 0(x2) # load 0x00008001 from memory into f2
la x2, scratch
li x3, 0x5aad1dd0 # load x3 with value 0x5aad1dd0
sw x3, 0(x2) # store 0x5aad1dd0 in memory
flh f10, 0(x2) # load 0x5aad1dd0 from memory into f10
fnmadd.h f19, f16, f2, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7c00)
la x2, scratch
li x3, 0x0154a010 # load x3 with value 0x0154a010
sw x3, 0(x2) # store 0x0154a010 in memory
flh f15, 0(x2) # load 0x0154a010 from memory into f15
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f10, 0(x2) # load 0x00007c00 from memory into f10
la x2, scratch
li x3, 0xd38228ef # load x3 with value 0xd38228ef
sw x3, 0(x2) # store 0xd38228ef in memory
flh f21, 0(x2) # load 0xd38228ef from memory into f21
fnmadd.h f14, f15, f10, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfc00)
la x2, scratch
li x3, 0xc4a7bae2 # load x3 with value 0xc4a7bae2
sw x3, 0(x2) # store 0xc4a7bae2 in memory
flh f7, 0(x2) # load 0xc4a7bae2 from memory into f7
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f23, 0(x2) # load 0x0000fc00 from memory into f23
la x2, scratch
li x3, 0x569f35a4 # load x3 with value 0x569f35a4
sw x3, 0(x2) # store 0x569f35a4 in memory
flh f15, 0(x2) # load 0x569f35a4 from memory into f15
fnmadd.h f13, f7, f23, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7e00)
la x2, scratch
li x3, 0x8d4d753c # load x3 with value 0x8d4d753c
sw x3, 0(x2) # store 0x8d4d753c in memory
flh f17, 0(x2) # load 0x8d4d753c from memory into f17
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f11, 0(x2) # load 0x00007e00 from memory into f11
la x2, scratch
li x3, 0xae7ec1a6 # load x3 with value 0xae7ec1a6
sw x3, 0(x2) # store 0xae7ec1a6 in memory
flh f15, 0(x2) # load 0xae7ec1a6 from memory into f15
fnmadd.h f19, f17, f11, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fff)
la x2, scratch
li x3, 0x59198349 # load x3 with value 0x59198349
sw x3, 0(x2) # store 0x59198349 in memory
flh f14, 0(x2) # load 0x59198349 from memory into f14
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f25, 0(x2) # load 0x00007fff from memory into f25
la x2, scratch
li x3, 0xc9172e65 # load x3 with value 0xc9172e65
sw x3, 0(x2) # store 0xc9172e65 in memory
flh f12, 0(x2) # load 0xc9172e65 from memory into f12
fnmadd.h f7, f14, f25, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfe00)
la x2, scratch
li x3, 0xd07d160d # load x3 with value 0xd07d160d
sw x3, 0(x2) # store 0xd07d160d in memory
flh f28, 0(x2) # load 0xd07d160d from memory into f28
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f23, 0(x2) # load 0x0000fe00 from memory into f23
la x2, scratch
li x3, 0xdfe827b1 # load x3 with value 0xdfe827b1
sw x3, 0(x2) # store 0xdfe827b1 in memory
flh f25, 0(x2) # load 0xdfe827b1 from memory into f25
fnmadd.h f13, f28, f23, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7c01)
la x2, scratch
li x3, 0x1288afe6 # load x3 with value 0x1288afe6
sw x3, 0(x2) # store 0x1288afe6 in memory
flh f18, 0(x2) # load 0x1288afe6 from memory into f18
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
la x2, scratch
li x3, 0x890761de # load x3 with value 0x890761de
sw x3, 0(x2) # store 0x890761de in memory
flh f19, 0(x2) # load 0x890761de from memory into f19
fnmadd.h f15, f18, f30, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7dff)
la x2, scratch
li x3, 0xa8f63802 # load x3 with value 0xa8f63802
sw x3, 0(x2) # store 0xa8f63802 in memory
flh f13, 0(x2) # load 0xa8f63802 from memory into f13
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f25, 0(x2) # load 0x00007dff from memory into f25
la x2, scratch
li x3, 0xd39c8beb # load x3 with value 0xd39c8beb
sw x3, 0(x2) # store 0xd39c8beb in memory
flh f3, 0(x2) # load 0xd39c8beb from memory into f3
fnmadd.h f12, f13, f25, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfc01)
la x2, scratch
li x3, 0x771d0a54 # load x3 with value 0x771d0a54
sw x3, 0(x2) # store 0x771d0a54 in memory
flh f17, 0(x2) # load 0x771d0a54 from memory into f17
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f21, 0(x2) # load 0x0000fc01 from memory into f21
la x2, scratch
li x3, 0xfc2311fc # load x3 with value 0xfc2311fc
sw x3, 0(x2) # store 0xfc2311fc in memory
flh f20, 0(x2) # load 0xfc2311fc from memory into f20
fnmadd.h f3, f17, f21, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x58b4)
la x2, scratch
li x3, 0xca9209d4 # load x3 with value 0xca9209d4
sw x3, 0(x2) # store 0xca9209d4 in memory
flh f30, 0(x2) # load 0xca9209d4 from memory into f30
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f9, 0(x2) # load 0x000058b4 from memory into f9
la x2, scratch
li x3, 0xa842a37a # load x3 with value 0xa842a37a
sw x3, 0(x2) # store 0xa842a37a in memory
flh f27, 0(x2) # load 0xa842a37a from memory into f27
fnmadd.h f26, f30, f9, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc93a)
la x2, scratch
li x3, 0x6ff91dea # load x3 with value 0x6ff91dea
sw x3, 0(x2) # store 0x6ff91dea in memory
flh f18, 0(x2) # load 0x6ff91dea from memory into f18
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f6, 0(x2) # load 0x0000c93a from memory into f6
la x2, scratch
li x3, 0x237f039f # load x3 with value 0x237f039f
sw x3, 0(x2) # store 0x237f039f in memory
flh f24, 0(x2) # load 0x237f039f from memory into f24
fnmadd.h f8, f18, f6, f24 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
la x2, scratch
li x3, 0xed3e46c0 # load x3 with value 0xed3e46c0
sw x3, 0(x2) # store 0xed3e46c0 in memory
flh f21, 0(x2) # load 0xed3e46c0 from memory into f21
la x2, scratch
li x3, 0x10116e73 # load x3 with value 0x10116e73
sw x3, 0(x2) # store 0x10116e73 in memory
flh f15, 0(x2) # load 0x10116e73 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f28, 0(x2) # load 0x00000000 from memory into f28
fnmadd.h f31, f21, f15, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8000)
la x2, scratch
li x3, 0xbd823b35 # load x3 with value 0xbd823b35
sw x3, 0(x2) # store 0xbd823b35 in memory
flh f18, 0(x2) # load 0xbd823b35 from memory into f18
la x2, scratch
li x3, 0xac43fec5 # load x3 with value 0xac43fec5
sw x3, 0(x2) # store 0xac43fec5 in memory
flh f13, 0(x2) # load 0xac43fec5 from memory into f13
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f15, 0(x2) # load 0x00008000 from memory into f15
fnmadd.h f3, f18, f13, f15 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3c00)
la x2, scratch
li x3, 0xe3712013 # load x3 with value 0xe3712013
sw x3, 0(x2) # store 0xe3712013 in memory
flh f18, 0(x2) # load 0xe3712013 from memory into f18
la x2, scratch
li x3, 0x364841e0 # load x3 with value 0x364841e0
sw x3, 0(x2) # store 0x364841e0 in memory
flh f8, 0(x2) # load 0x364841e0 from memory into f8
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f14, 0(x2) # load 0x00003c00 from memory into f14
fnmadd.h f1, f18, f8, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbc00)
la x2, scratch
li x3, 0x5a804842 # load x3 with value 0x5a804842
sw x3, 0(x2) # store 0x5a804842 in memory
flh f9, 0(x2) # load 0x5a804842 from memory into f9
la x2, scratch
li x3, 0x060848cd # load x3 with value 0x060848cd
sw x3, 0(x2) # store 0x060848cd in memory
flh f13, 0(x2) # load 0x060848cd from memory into f13
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f12, 0(x2) # load 0x0000bc00 from memory into f12
fnmadd.h f23, f9, f13, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3e00)
la x2, scratch
li x3, 0xce3aad4c # load x3 with value 0xce3aad4c
sw x3, 0(x2) # store 0xce3aad4c in memory
flh f10, 0(x2) # load 0xce3aad4c from memory into f10
la x2, scratch
li x3, 0x113c617d # load x3 with value 0x113c617d
sw x3, 0(x2) # store 0x113c617d in memory
flh f5, 0(x2) # load 0x113c617d from memory into f5
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f3, 0(x2) # load 0x00003e00 from memory into f3
fnmadd.h f20, f10, f5, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbe00)
la x2, scratch
li x3, 0xd127d0df # load x3 with value 0xd127d0df
sw x3, 0(x2) # store 0xd127d0df in memory
flh f20, 0(x2) # load 0xd127d0df from memory into f20
la x2, scratch
li x3, 0xf7b560f7 # load x3 with value 0xf7b560f7
sw x3, 0(x2) # store 0xf7b560f7 in memory
flh f16, 0(x2) # load 0xf7b560f7 from memory into f16
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f7, 0(x2) # load 0x0000be00 from memory into f7
fnmadd.h f25, f20, f16, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x4000)
la x2, scratch
li x3, 0x851b2c0b # load x3 with value 0x851b2c0b
sw x3, 0(x2) # store 0x851b2c0b in memory
flh f15, 0(x2) # load 0x851b2c0b from memory into f15
la x2, scratch
li x3, 0x0d4d300f # load x3 with value 0x0d4d300f
sw x3, 0(x2) # store 0x0d4d300f in memory
flh f5, 0(x2) # load 0x0d4d300f from memory into f5
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
fnmadd.h f26, f15, f5, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc000)
la x2, scratch
li x3, 0x0156c982 # load x3 with value 0x0156c982
sw x3, 0(x2) # store 0x0156c982 in memory
flh f15, 0(x2) # load 0x0156c982 from memory into f15
la x2, scratch
li x3, 0xccdb97d2 # load x3 with value 0xccdb97d2
sw x3, 0(x2) # store 0xccdb97d2 in memory
flh f28, 0(x2) # load 0xccdb97d2 from memory into f28
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
fnmadd.h f7, f15, f28, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400)
la x2, scratch
li x3, 0x82a1a494 # load x3 with value 0x82a1a494
sw x3, 0(x2) # store 0x82a1a494 in memory
flh f11, 0(x2) # load 0x82a1a494 from memory into f11
la x2, scratch
li x3, 0xe564b16a # load x3 with value 0xe564b16a
sw x3, 0(x2) # store 0xe564b16a in memory
flh f15, 0(x2) # load 0xe564b16a from memory into f15
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f8, 0(x2) # load 0x00000400 from memory into f8
fnmadd.h f5, f11, f15, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8400)
la x2, scratch
li x3, 0x3cb25de0 # load x3 with value 0x3cb25de0
sw x3, 0(x2) # store 0x3cb25de0 in memory
flh f31, 0(x2) # load 0x3cb25de0 from memory into f31
la x2, scratch
li x3, 0x45718275 # load x3 with value 0x45718275
sw x3, 0(x2) # store 0x45718275 in memory
flh f24, 0(x2) # load 0x45718275 from memory into f24
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f2, 0(x2) # load 0x00008400 from memory into f2
fnmadd.h f18, f31, f24, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7bff)
la x2, scratch
li x3, 0xb5307d08 # load x3 with value 0xb5307d08
sw x3, 0(x2) # store 0xb5307d08 in memory
flh f5, 0(x2) # load 0xb5307d08 from memory into f5
la x2, scratch
li x3, 0x223015fe # load x3 with value 0x223015fe
sw x3, 0(x2) # store 0x223015fe in memory
flh f15, 0(x2) # load 0x223015fe from memory into f15
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f26, 0(x2) # load 0x00007bff from memory into f26
fnmadd.h f6, f5, f15, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfbff)
la x2, scratch
li x3, 0xc2547085 # load x3 with value 0xc2547085
sw x3, 0(x2) # store 0xc2547085 in memory
flh f30, 0(x2) # load 0xc2547085 from memory into f30
la x2, scratch
li x3, 0x9c0addc8 # load x3 with value 0x9c0addc8
sw x3, 0(x2) # store 0x9c0addc8 in memory
flh f13, 0(x2) # load 0x9c0addc8 from memory into f13
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f1, 0(x2) # load 0x0000fbff from memory into f1
fnmadd.h f15, f30, f13, f1 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3ff)
la x2, scratch
li x3, 0x0b1f888b # load x3 with value 0x0b1f888b
sw x3, 0(x2) # store 0x0b1f888b in memory
flh f17, 0(x2) # load 0x0b1f888b from memory into f17
la x2, scratch
li x3, 0xaa2f96ca # load x3 with value 0xaa2f96ca
sw x3, 0(x2) # store 0xaa2f96ca in memory
flh f5, 0(x2) # load 0xaa2f96ca from memory into f5
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f19, 0(x2) # load 0x000003ff from memory into f19
fnmadd.h f31, f17, f5, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x83ff)
la x2, scratch
li x3, 0xa36ee51c # load x3 with value 0xa36ee51c
sw x3, 0(x2) # store 0xa36ee51c in memory
flh f25, 0(x2) # load 0xa36ee51c from memory into f25
la x2, scratch
li x3, 0xf0481748 # load x3 with value 0xf0481748
sw x3, 0(x2) # store 0xf0481748 in memory
flh f23, 0(x2) # load 0xf0481748 from memory into f23
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f2, 0(x2) # load 0x000083ff from memory into f2
fnmadd.h f19, f25, f23, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x200)
la x2, scratch
li x3, 0xb652e25c # load x3 with value 0xb652e25c
sw x3, 0(x2) # store 0xb652e25c in memory
flh f17, 0(x2) # load 0xb652e25c from memory into f17
la x2, scratch
li x3, 0xd942faf5 # load x3 with value 0xd942faf5
sw x3, 0(x2) # store 0xd942faf5 in memory
flh f19, 0(x2) # load 0xd942faf5 from memory into f19
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f14, 0(x2) # load 0x00000200 from memory into f14
fnmadd.h f29, f17, f19, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8200)
la x2, scratch
li x3, 0xa2f7c1b3 # load x3 with value 0xa2f7c1b3
sw x3, 0(x2) # store 0xa2f7c1b3 in memory
flh f15, 0(x2) # load 0xa2f7c1b3 from memory into f15
la x2, scratch
li x3, 0x03aae2dd # load x3 with value 0x03aae2dd
sw x3, 0(x2) # store 0x03aae2dd in memory
flh f30, 0(x2) # load 0x03aae2dd from memory into f30
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f3, 0(x2) # load 0x00008200 from memory into f3
fnmadd.h f16, f15, f30, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
la x2, scratch
li x3, 0x1280a6b4 # load x3 with value 0x1280a6b4
sw x3, 0(x2) # store 0x1280a6b4 in memory
flh f17, 0(x2) # load 0x1280a6b4 from memory into f17
la x2, scratch
li x3, 0x5993405c # load x3 with value 0x5993405c
sw x3, 0(x2) # store 0x5993405c in memory
flh f19, 0(x2) # load 0x5993405c from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f28, 0(x2) # load 0x00000001 from memory into f28
fnmadd.h f18, f17, f19, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8001)
la x2, scratch
li x3, 0x4845ae66 # load x3 with value 0x4845ae66
sw x3, 0(x2) # store 0x4845ae66 in memory
flh f5, 0(x2) # load 0x4845ae66 from memory into f5
la x2, scratch
li x3, 0x5b4ff357 # load x3 with value 0x5b4ff357
sw x3, 0(x2) # store 0x5b4ff357 in memory
flh f2, 0(x2) # load 0x5b4ff357 from memory into f2
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f10, 0(x2) # load 0x00008001 from memory into f10
fnmadd.h f23, f5, f2, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7c00)
la x2, scratch
li x3, 0xf8365fa1 # load x3 with value 0xf8365fa1
sw x3, 0(x2) # store 0xf8365fa1 in memory
flh f12, 0(x2) # load 0xf8365fa1 from memory into f12
la x2, scratch
li x3, 0x3c6ad398 # load x3 with value 0x3c6ad398
sw x3, 0(x2) # store 0x3c6ad398 in memory
flh f9, 0(x2) # load 0x3c6ad398 from memory into f9
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f27, 0(x2) # load 0x00007c00 from memory into f27
fnmadd.h f10, f12, f9, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfc00)
la x2, scratch
li x3, 0x00c80f01 # load x3 with value 0x00c80f01
sw x3, 0(x2) # store 0x00c80f01 in memory
flh f12, 0(x2) # load 0x00c80f01 from memory into f12
la x2, scratch
li x3, 0x90f6370d # load x3 with value 0x90f6370d
sw x3, 0(x2) # store 0x90f6370d in memory
flh f24, 0(x2) # load 0x90f6370d from memory into f24
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f17, 0(x2) # load 0x0000fc00 from memory into f17
fnmadd.h f20, f12, f24, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7e00)
la x2, scratch
li x3, 0x8115500d # load x3 with value 0x8115500d
sw x3, 0(x2) # store 0x8115500d in memory
flh f30, 0(x2) # load 0x8115500d from memory into f30
la x2, scratch
li x3, 0x46273844 # load x3 with value 0x46273844
sw x3, 0(x2) # store 0x46273844 in memory
flh f3, 0(x2) # load 0x46273844 from memory into f3
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f8, 0(x2) # load 0x00007e00 from memory into f8
fnmadd.h f10, f30, f3, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fff)
la x2, scratch
li x3, 0x56d8bd72 # load x3 with value 0x56d8bd72
sw x3, 0(x2) # store 0x56d8bd72 in memory
flh f16, 0(x2) # load 0x56d8bd72 from memory into f16
la x2, scratch
li x3, 0x02d6d18e # load x3 with value 0x02d6d18e
sw x3, 0(x2) # store 0x02d6d18e in memory
flh f25, 0(x2) # load 0x02d6d18e from memory into f25
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f6, 0(x2) # load 0x00007fff from memory into f6
fnmadd.h f12, f16, f25, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfe00)
la x2, scratch
li x3, 0xffcba041 # load x3 with value 0xffcba041
sw x3, 0(x2) # store 0xffcba041 in memory
flh f12, 0(x2) # load 0xffcba041 from memory into f12
la x2, scratch
li x3, 0xae60031f # load x3 with value 0xae60031f
sw x3, 0(x2) # store 0xae60031f in memory
flh f19, 0(x2) # load 0xae60031f from memory into f19
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f13, 0(x2) # load 0x0000fe00 from memory into f13
fnmadd.h f3, f12, f19, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7c01)
la x2, scratch
li x3, 0x5602d5c5 # load x3 with value 0x5602d5c5
sw x3, 0(x2) # store 0x5602d5c5 in memory
flh f10, 0(x2) # load 0x5602d5c5 from memory into f10
la x2, scratch
li x3, 0x529fc5b6 # load x3 with value 0x529fc5b6
sw x3, 0(x2) # store 0x529fc5b6 in memory
flh f21, 0(x2) # load 0x529fc5b6 from memory into f21
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f23, 0(x2) # load 0x00007c01 from memory into f23
fnmadd.h f3, f10, f21, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7dff)
la x2, scratch
li x3, 0xa2c9f2c1 # load x3 with value 0xa2c9f2c1
sw x3, 0(x2) # store 0xa2c9f2c1 in memory
flh f13, 0(x2) # load 0xa2c9f2c1 from memory into f13
la x2, scratch
li x3, 0xba84a5e2 # load x3 with value 0xba84a5e2
sw x3, 0(x2) # store 0xba84a5e2 in memory
flh f1, 0(x2) # load 0xba84a5e2 from memory into f1
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f15, 0(x2) # load 0x00007dff from memory into f15
fnmadd.h f30, f13, f1, f15 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfc01)
la x2, scratch
li x3, 0x546fe039 # load x3 with value 0x546fe039
sw x3, 0(x2) # store 0x546fe039 in memory
flh f26, 0(x2) # load 0x546fe039 from memory into f26
la x2, scratch
li x3, 0xb8d437f9 # load x3 with value 0xb8d437f9
sw x3, 0(x2) # store 0xb8d437f9 in memory
flh f29, 0(x2) # load 0xb8d437f9 from memory into f29
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f19, 0(x2) # load 0x0000fc01 from memory into f19
fnmadd.h f27, f26, f29, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x58b4)
la x2, scratch
li x3, 0x4a011f12 # load x3 with value 0x4a011f12
sw x3, 0(x2) # store 0x4a011f12 in memory
flh f27, 0(x2) # load 0x4a011f12 from memory into f27
la x2, scratch
li x3, 0x72807617 # load x3 with value 0x72807617
sw x3, 0(x2) # store 0x72807617 in memory
flh f2, 0(x2) # load 0x72807617 from memory into f2
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f28, 0(x2) # load 0x000058b4 from memory into f28
fnmadd.h f16, f27, f2, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc93a)
la x2, scratch
li x3, 0xd71d0ad7 # load x3 with value 0xd71d0ad7
sw x3, 0(x2) # store 0xd71d0ad7 in memory
flh f25, 0(x2) # load 0xd71d0ad7 from memory into f25
la x2, scratch
li x3, 0xb6f7045e # load x3 with value 0xb6f7045e
sw x3, 0(x2) # store 0xb6f7045e in memory
flh f24, 0(x2) # load 0xb6f7045e from memory into f24
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
fnmadd.h f10, f25, f24, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
la x2, scratch
li x3, 0x92e5b2bb # load x3 with value 0x92e5b2bb
sw x3, 0(x2) # store 0x92e5b2bb in memory
flh f0, 0(x2) # load 0x92e5b2bb from memory into f0
la x2, scratch
li x3, 0xbb45a4fe # load x3 with value 0xbb45a4fe
sw x3, 0(x2) # store 0xbb45a4fe in memory
flh f7, 0(x2) # load 0xbb45a4fe from memory into f7
la x2, scratch
li x3, 0x30857376 # load x3 with value 0x30857376
sw x3, 0(x2) # store 0x30857376 in memory
flh f11, 0(x2) # load 0x30857376 from memory into f11
fnmadd.h f0, f0, f7, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
la x2, scratch
li x3, 0xddb585f7 # load x3 with value 0xddb585f7
sw x3, 0(x2) # store 0xddb585f7 in memory
flh f1, 0(x2) # load 0xddb585f7 from memory into f1
la x2, scratch
li x3, 0xb36a538e # load x3 with value 0xb36a538e
sw x3, 0(x2) # store 0xb36a538e in memory
flh f19, 0(x2) # load 0xb36a538e from memory into f19
la x2, scratch
li x3, 0x3b4cfd75 # load x3 with value 0x3b4cfd75
sw x3, 0(x2) # store 0x3b4cfd75 in memory
flh f31, 0(x2) # load 0x3b4cfd75 from memory into f31
fnmadd.h f1, f1, f19, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
la x2, scratch
li x3, 0xdf681ef0 # load x3 with value 0xdf681ef0
sw x3, 0(x2) # store 0xdf681ef0 in memory
flh f2, 0(x2) # load 0xdf681ef0 from memory into f2
la x2, scratch
li x3, 0x86c7c78d # load x3 with value 0x86c7c78d
sw x3, 0(x2) # store 0x86c7c78d in memory
flh f16, 0(x2) # load 0x86c7c78d from memory into f16
la x2, scratch
li x3, 0x167f276c # load x3 with value 0x167f276c
sw x3, 0(x2) # store 0x167f276c in memory
flh f20, 0(x2) # load 0x167f276c from memory into f20
fnmadd.h f2, f2, f16, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
la x2, scratch
li x3, 0x415c22b5 # load x3 with value 0x415c22b5
sw x3, 0(x2) # store 0x415c22b5 in memory
flh f3, 0(x2) # load 0x415c22b5 from memory into f3
la x2, scratch
li x3, 0xfd51ad78 # load x3 with value 0xfd51ad78
sw x3, 0(x2) # store 0xfd51ad78 in memory
flh f19, 0(x2) # load 0xfd51ad78 from memory into f19
la x2, scratch
li x3, 0x2ce3ed91 # load x3 with value 0x2ce3ed91
sw x3, 0(x2) # store 0x2ce3ed91 in memory
flh f6, 0(x2) # load 0x2ce3ed91 from memory into f6
fnmadd.h f3, f3, f19, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x3a0701c8 # load x3 with value 0x3a0701c8
sw x3, 0(x2) # store 0x3a0701c8 in memory
flh f4, 0(x2) # load 0x3a0701c8 from memory into f4
la x2, scratch
li x3, 0x1a6d8f51 # load x3 with value 0x1a6d8f51
sw x3, 0(x2) # store 0x1a6d8f51 in memory
flh f23, 0(x2) # load 0x1a6d8f51 from memory into f23
la x2, scratch
li x3, 0x2f12d0c9 # load x3 with value 0x2f12d0c9
sw x3, 0(x2) # store 0x2f12d0c9 in memory
flh f6, 0(x2) # load 0x2f12d0c9 from memory into f6
fnmadd.h f4, f4, f23, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x26fca23d # load x3 with value 0x26fca23d
sw x3, 0(x2) # store 0x26fca23d in memory
flh f5, 0(x2) # load 0x26fca23d from memory into f5
la x2, scratch
li x3, 0x9662c4f6 # load x3 with value 0x9662c4f6
sw x3, 0(x2) # store 0x9662c4f6 in memory
flh f20, 0(x2) # load 0x9662c4f6 from memory into f20
la x2, scratch
li x3, 0x1ea2ae2e # load x3 with value 0x1ea2ae2e
sw x3, 0(x2) # store 0x1ea2ae2e in memory
flh f6, 0(x2) # load 0x1ea2ae2e from memory into f6
fnmadd.h f5, f5, f20, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x3519cc52 # load x3 with value 0x3519cc52
sw x3, 0(x2) # store 0x3519cc52 in memory
flh f6, 0(x2) # load 0x3519cc52 from memory into f6
la x2, scratch
li x3, 0xe251470f # load x3 with value 0xe251470f
sw x3, 0(x2) # store 0xe251470f in memory
flh f27, 0(x2) # load 0xe251470f from memory into f27
la x2, scratch
li x3, 0xd768c0b3 # load x3 with value 0xd768c0b3
sw x3, 0(x2) # store 0xd768c0b3 in memory
flh f17, 0(x2) # load 0xd768c0b3 from memory into f17
fnmadd.h f6, f6, f27, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x507eeab8 # load x3 with value 0x507eeab8
sw x3, 0(x2) # store 0x507eeab8 in memory
flh f7, 0(x2) # load 0x507eeab8 from memory into f7
la x2, scratch
li x3, 0x6e21a2eb # load x3 with value 0x6e21a2eb
sw x3, 0(x2) # store 0x6e21a2eb in memory
flh f18, 0(x2) # load 0x6e21a2eb from memory into f18
la x2, scratch
li x3, 0x8807c2cb # load x3 with value 0x8807c2cb
sw x3, 0(x2) # store 0x8807c2cb in memory
flh f6, 0(x2) # load 0x8807c2cb from memory into f6
fnmadd.h f7, f7, f18, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
la x2, scratch
li x3, 0x61120641 # load x3 with value 0x61120641
sw x3, 0(x2) # store 0x61120641 in memory
flh f8, 0(x2) # load 0x61120641 from memory into f8
la x2, scratch
li x3, 0x46657442 # load x3 with value 0x46657442
sw x3, 0(x2) # store 0x46657442 in memory
flh f14, 0(x2) # load 0x46657442 from memory into f14
la x2, scratch
li x3, 0x83a104a4 # load x3 with value 0x83a104a4
sw x3, 0(x2) # store 0x83a104a4 in memory
flh f15, 0(x2) # load 0x83a104a4 from memory into f15
fnmadd.h f8, f8, f14, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
la x2, scratch
li x3, 0x2a1377d0 # load x3 with value 0x2a1377d0
sw x3, 0(x2) # store 0x2a1377d0 in memory
flh f9, 0(x2) # load 0x2a1377d0 from memory into f9
la x2, scratch
li x3, 0xe8b274ea # load x3 with value 0xe8b274ea
sw x3, 0(x2) # store 0xe8b274ea in memory
flh f16, 0(x2) # load 0xe8b274ea from memory into f16
la x2, scratch
li x3, 0x8538cd13 # load x3 with value 0x8538cd13
sw x3, 0(x2) # store 0x8538cd13 in memory
flh f3, 0(x2) # load 0x8538cd13 from memory into f3
fnmadd.h f9, f9, f16, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
la x2, scratch
li x3, 0x5327a8ba # load x3 with value 0x5327a8ba
sw x3, 0(x2) # store 0x5327a8ba in memory
flh f10, 0(x2) # load 0x5327a8ba from memory into f10
la x2, scratch
li x3, 0x28d2a2eb # load x3 with value 0x28d2a2eb
sw x3, 0(x2) # store 0x28d2a2eb in memory
flh f18, 0(x2) # load 0x28d2a2eb from memory into f18
la x2, scratch
li x3, 0xc26e2896 # load x3 with value 0xc26e2896
sw x3, 0(x2) # store 0xc26e2896 in memory
flh f10, 0(x2) # load 0xc26e2896 from memory into f10
fnmadd.h f10, f10, f18, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
la x2, scratch
li x3, 0xaaf645c6 # load x3 with value 0xaaf645c6
sw x3, 0(x2) # store 0xaaf645c6 in memory
flh f11, 0(x2) # load 0xaaf645c6 from memory into f11
la x2, scratch
li x3, 0xf7eb4794 # load x3 with value 0xf7eb4794
sw x3, 0(x2) # store 0xf7eb4794 in memory
flh f11, 0(x2) # load 0xf7eb4794 from memory into f11
la x2, scratch
li x3, 0x937915bc # load x3 with value 0x937915bc
sw x3, 0(x2) # store 0x937915bc in memory
flh f9, 0(x2) # load 0x937915bc from memory into f9
fnmadd.h f11, f11, f11, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
la x2, scratch
li x3, 0xe1c5a053 # load x3 with value 0xe1c5a053
sw x3, 0(x2) # store 0xe1c5a053 in memory
flh f12, 0(x2) # load 0xe1c5a053 from memory into f12
la x2, scratch
li x3, 0xf94dcd72 # load x3 with value 0xf94dcd72
sw x3, 0(x2) # store 0xf94dcd72 in memory
flh f11, 0(x2) # load 0xf94dcd72 from memory into f11
la x2, scratch
li x3, 0x106c7c54 # load x3 with value 0x106c7c54
sw x3, 0(x2) # store 0x106c7c54 in memory
flh f23, 0(x2) # load 0x106c7c54 from memory into f23
fnmadd.h f12, f12, f11, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
la x2, scratch
li x3, 0x85b4e315 # load x3 with value 0x85b4e315
sw x3, 0(x2) # store 0x85b4e315 in memory
flh f13, 0(x2) # load 0x85b4e315 from memory into f13
la x2, scratch
li x3, 0x56ae4e89 # load x3 with value 0x56ae4e89
sw x3, 0(x2) # store 0x56ae4e89 in memory
flh f29, 0(x2) # load 0x56ae4e89 from memory into f29
la x2, scratch
li x3, 0x040ee65d # load x3 with value 0x040ee65d
sw x3, 0(x2) # store 0x040ee65d in memory
flh f27, 0(x2) # load 0x040ee65d from memory into f27
fnmadd.h f13, f13, f29, f27 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
la x2, scratch
li x3, 0x348c021e # load x3 with value 0x348c021e
sw x3, 0(x2) # store 0x348c021e in memory
flh f14, 0(x2) # load 0x348c021e from memory into f14
la x2, scratch
li x3, 0x9efdfa40 # load x3 with value 0x9efdfa40
sw x3, 0(x2) # store 0x9efdfa40 in memory
flh f26, 0(x2) # load 0x9efdfa40 from memory into f26
la x2, scratch
li x3, 0x8b709143 # load x3 with value 0x8b709143
sw x3, 0(x2) # store 0x8b709143 in memory
flh f2, 0(x2) # load 0x8b709143 from memory into f2
fnmadd.h f14, f14, f26, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
la x2, scratch
li x3, 0xcb8d34c4 # load x3 with value 0xcb8d34c4
sw x3, 0(x2) # store 0xcb8d34c4 in memory
flh f15, 0(x2) # load 0xcb8d34c4 from memory into f15
la x2, scratch
li x3, 0xd0c5618a # load x3 with value 0xd0c5618a
sw x3, 0(x2) # store 0xd0c5618a in memory
flh f27, 0(x2) # load 0xd0c5618a from memory into f27
la x2, scratch
li x3, 0xc7b57600 # load x3 with value 0xc7b57600
sw x3, 0(x2) # store 0xc7b57600 in memory
flh f15, 0(x2) # load 0xc7b57600 from memory into f15
fnmadd.h f15, f15, f27, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
la x2, scratch
li x3, 0x328d835a # load x3 with value 0x328d835a
sw x3, 0(x2) # store 0x328d835a in memory
flh f16, 0(x2) # load 0x328d835a from memory into f16
la x2, scratch
li x3, 0xffabeba3 # load x3 with value 0xffabeba3
sw x3, 0(x2) # store 0xffabeba3 in memory
flh f30, 0(x2) # load 0xffabeba3 from memory into f30
la x2, scratch
li x3, 0x3f4211a5 # load x3 with value 0x3f4211a5
sw x3, 0(x2) # store 0x3f4211a5 in memory
flh f23, 0(x2) # load 0x3f4211a5 from memory into f23
fnmadd.h f16, f16, f30, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
la x2, scratch
li x3, 0xa0e54a2c # load x3 with value 0xa0e54a2c
sw x3, 0(x2) # store 0xa0e54a2c in memory
flh f17, 0(x2) # load 0xa0e54a2c from memory into f17
la x2, scratch
li x3, 0xef9eff83 # load x3 with value 0xef9eff83
sw x3, 0(x2) # store 0xef9eff83 in memory
flh f12, 0(x2) # load 0xef9eff83 from memory into f12
la x2, scratch
li x3, 0xdc7b7635 # load x3 with value 0xdc7b7635
sw x3, 0(x2) # store 0xdc7b7635 in memory
flh f21, 0(x2) # load 0xdc7b7635 from memory into f21
fnmadd.h f17, f17, f12, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
la x2, scratch
li x3, 0xc5157948 # load x3 with value 0xc5157948
sw x3, 0(x2) # store 0xc5157948 in memory
flh f18, 0(x2) # load 0xc5157948 from memory into f18
la x2, scratch
li x3, 0x8df9f93c # load x3 with value 0x8df9f93c
sw x3, 0(x2) # store 0x8df9f93c in memory
flh f25, 0(x2) # load 0x8df9f93c from memory into f25
la x2, scratch
li x3, 0xe284ac07 # load x3 with value 0xe284ac07
sw x3, 0(x2) # store 0xe284ac07 in memory
flh f11, 0(x2) # load 0xe284ac07 from memory into f11
fnmadd.h f18, f18, f25, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
la x2, scratch
li x3, 0x8042640d # load x3 with value 0x8042640d
sw x3, 0(x2) # store 0x8042640d in memory
flh f19, 0(x2) # load 0x8042640d from memory into f19
la x2, scratch
li x3, 0xe9d3322a # load x3 with value 0xe9d3322a
sw x3, 0(x2) # store 0xe9d3322a in memory
flh f5, 0(x2) # load 0xe9d3322a from memory into f5
la x2, scratch
li x3, 0x3d5647bc # load x3 with value 0x3d5647bc
sw x3, 0(x2) # store 0x3d5647bc in memory
flh f28, 0(x2) # load 0x3d5647bc from memory into f28
fnmadd.h f19, f19, f5, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
la x2, scratch
li x3, 0xba1d5e89 # load x3 with value 0xba1d5e89
sw x3, 0(x2) # store 0xba1d5e89 in memory
flh f20, 0(x2) # load 0xba1d5e89 from memory into f20
la x2, scratch
li x3, 0xe236ee76 # load x3 with value 0xe236ee76
sw x3, 0(x2) # store 0xe236ee76 in memory
flh f16, 0(x2) # load 0xe236ee76 from memory into f16
la x2, scratch
li x3, 0x3d7559ba # load x3 with value 0x3d7559ba
sw x3, 0(x2) # store 0x3d7559ba in memory
flh f7, 0(x2) # load 0x3d7559ba from memory into f7
fnmadd.h f20, f20, f16, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
la x2, scratch
li x3, 0x20eb4832 # load x3 with value 0x20eb4832
sw x3, 0(x2) # store 0x20eb4832 in memory
flh f21, 0(x2) # load 0x20eb4832 from memory into f21
la x2, scratch
li x3, 0x72964cf6 # load x3 with value 0x72964cf6
sw x3, 0(x2) # store 0x72964cf6 in memory
flh f29, 0(x2) # load 0x72964cf6 from memory into f29
la x2, scratch
li x3, 0xc1d3703a # load x3 with value 0xc1d3703a
sw x3, 0(x2) # store 0xc1d3703a in memory
flh f18, 0(x2) # load 0xc1d3703a from memory into f18
fnmadd.h f21, f21, f29, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
la x2, scratch
li x3, 0x4e043e1a # load x3 with value 0x4e043e1a
sw x3, 0(x2) # store 0x4e043e1a in memory
flh f22, 0(x2) # load 0x4e043e1a from memory into f22
la x2, scratch
li x3, 0x25d0be84 # load x3 with value 0x25d0be84
sw x3, 0(x2) # store 0x25d0be84 in memory
flh f2, 0(x2) # load 0x25d0be84 from memory into f2
la x2, scratch
li x3, 0x5bdd4aa8 # load x3 with value 0x5bdd4aa8
sw x3, 0(x2) # store 0x5bdd4aa8 in memory
flh f14, 0(x2) # load 0x5bdd4aa8 from memory into f14
fnmadd.h f22, f22, f2, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
la x2, scratch
li x3, 0xc24bf12b # load x3 with value 0xc24bf12b
sw x3, 0(x2) # store 0xc24bf12b in memory
flh f23, 0(x2) # load 0xc24bf12b from memory into f23
la x2, scratch
li x3, 0x99867e71 # load x3 with value 0x99867e71
sw x3, 0(x2) # store 0x99867e71 in memory
flh f12, 0(x2) # load 0x99867e71 from memory into f12
la x2, scratch
li x3, 0x12f24867 # load x3 with value 0x12f24867
sw x3, 0(x2) # store 0x12f24867 in memory
flh f8, 0(x2) # load 0x12f24867 from memory into f8
fnmadd.h f23, f23, f12, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
la x2, scratch
li x3, 0xbf5d1cd0 # load x3 with value 0xbf5d1cd0
sw x3, 0(x2) # store 0xbf5d1cd0 in memory
flh f24, 0(x2) # load 0xbf5d1cd0 from memory into f24
la x2, scratch
li x3, 0x49c96602 # load x3 with value 0x49c96602
sw x3, 0(x2) # store 0x49c96602 in memory
flh f18, 0(x2) # load 0x49c96602 from memory into f18
la x2, scratch
li x3, 0x5b3ba9b7 # load x3 with value 0x5b3ba9b7
sw x3, 0(x2) # store 0x5b3ba9b7 in memory
flh f6, 0(x2) # load 0x5b3ba9b7 from memory into f6
fnmadd.h f24, f24, f18, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
la x2, scratch
li x3, 0xb7113ac4 # load x3 with value 0xb7113ac4
sw x3, 0(x2) # store 0xb7113ac4 in memory
flh f25, 0(x2) # load 0xb7113ac4 from memory into f25
la x2, scratch
li x3, 0xf8c8a1e2 # load x3 with value 0xf8c8a1e2
sw x3, 0(x2) # store 0xf8c8a1e2 in memory
flh f14, 0(x2) # load 0xf8c8a1e2 from memory into f14
la x2, scratch
li x3, 0x5bc05933 # load x3 with value 0x5bc05933
sw x3, 0(x2) # store 0x5bc05933 in memory
flh f28, 0(x2) # load 0x5bc05933 from memory into f28
fnmadd.h f25, f25, f14, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
la x2, scratch
li x3, 0x75302af0 # load x3 with value 0x75302af0
sw x3, 0(x2) # store 0x75302af0 in memory
flh f26, 0(x2) # load 0x75302af0 from memory into f26
la x2, scratch
li x3, 0x79559cc4 # load x3 with value 0x79559cc4
sw x3, 0(x2) # store 0x79559cc4 in memory
flh f6, 0(x2) # load 0x79559cc4 from memory into f6
la x2, scratch
li x3, 0xe861c18e # load x3 with value 0xe861c18e
sw x3, 0(x2) # store 0xe861c18e in memory
flh f14, 0(x2) # load 0xe861c18e from memory into f14
fnmadd.h f26, f26, f6, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
la x2, scratch
li x3, 0x5305dfa6 # load x3 with value 0x5305dfa6
sw x3, 0(x2) # store 0x5305dfa6 in memory
flh f27, 0(x2) # load 0x5305dfa6 from memory into f27
la x2, scratch
li x3, 0xce4d8623 # load x3 with value 0xce4d8623
sw x3, 0(x2) # store 0xce4d8623 in memory
flh f3, 0(x2) # load 0xce4d8623 from memory into f3
la x2, scratch
li x3, 0x122c85ad # load x3 with value 0x122c85ad
sw x3, 0(x2) # store 0x122c85ad in memory
flh f14, 0(x2) # load 0x122c85ad from memory into f14
fnmadd.h f27, f27, f3, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
la x2, scratch
li x3, 0xff234ba7 # load x3 with value 0xff234ba7
sw x3, 0(x2) # store 0xff234ba7 in memory
flh f28, 0(x2) # load 0xff234ba7 from memory into f28
la x2, scratch
li x3, 0x7ab7d6b2 # load x3 with value 0x7ab7d6b2
sw x3, 0(x2) # store 0x7ab7d6b2 in memory
flh f7, 0(x2) # load 0x7ab7d6b2 from memory into f7
la x2, scratch
li x3, 0x0287fb2b # load x3 with value 0x0287fb2b
sw x3, 0(x2) # store 0x0287fb2b in memory
flh f17, 0(x2) # load 0x0287fb2b from memory into f17
fnmadd.h f28, f28, f7, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
la x2, scratch
li x3, 0xb3e74aaa # load x3 with value 0xb3e74aaa
sw x3, 0(x2) # store 0xb3e74aaa in memory
flh f29, 0(x2) # load 0xb3e74aaa from memory into f29
la x2, scratch
li x3, 0x9bf60ee7 # load x3 with value 0x9bf60ee7
sw x3, 0(x2) # store 0x9bf60ee7 in memory
flh f15, 0(x2) # load 0x9bf60ee7 from memory into f15
la x2, scratch
li x3, 0x26d4324b # load x3 with value 0x26d4324b
sw x3, 0(x2) # store 0x26d4324b in memory
flh f8, 0(x2) # load 0x26d4324b from memory into f8
fnmadd.h f29, f29, f15, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
la x2, scratch
li x3, 0x6531f102 # load x3 with value 0x6531f102
sw x3, 0(x2) # store 0x6531f102 in memory
flh f30, 0(x2) # load 0x6531f102 from memory into f30
la x2, scratch
li x3, 0x310a8824 # load x3 with value 0x310a8824
sw x3, 0(x2) # store 0x310a8824 in memory
flh f9, 0(x2) # load 0x310a8824 from memory into f9
la x2, scratch
li x3, 0x5a46996d # load x3 with value 0x5a46996d
sw x3, 0(x2) # store 0x5a46996d in memory
flh f26, 0(x2) # load 0x5a46996d from memory into f26
fnmadd.h f30, f30, f9, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
la x2, scratch
li x3, 0xb02ec146 # load x3 with value 0xb02ec146
sw x3, 0(x2) # store 0xb02ec146 in memory
flh f31, 0(x2) # load 0xb02ec146 from memory into f31
la x2, scratch
li x3, 0x21303488 # load x3 with value 0x21303488
sw x3, 0(x2) # store 0x21303488 in memory
flh f15, 0(x2) # load 0x21303488 from memory into f15
la x2, scratch
li x3, 0x5b450134 # load x3 with value 0x5b450134
sw x3, 0(x2) # store 0x5b450134 in memory
flh f11, 0(x2) # load 0x5b450134 from memory into f11
fnmadd.h f31, f31, f15, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
la x2, scratch
li x3, 0x7cb5e4e6 # load x3 with value 0x7cb5e4e6
sw x3, 0(x2) # store 0x7cb5e4e6 in memory
flh f21, 0(x2) # load 0x7cb5e4e6 from memory into f21
la x2, scratch
li x3, 0x91b4184c # load x3 with value 0x91b4184c
sw x3, 0(x2) # store 0x91b4184c in memory
flh f0, 0(x2) # load 0x91b4184c from memory into f0
la x2, scratch
li x3, 0xadabd7d8 # load x3 with value 0xadabd7d8
sw x3, 0(x2) # store 0xadabd7d8 in memory
flh f5, 0(x2) # load 0xadabd7d8 from memory into f5
fnmadd.h f0, f21, f0, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
la x2, scratch
li x3, 0x72cf2828 # load x3 with value 0x72cf2828
sw x3, 0(x2) # store 0x72cf2828 in memory
flh f27, 0(x2) # load 0x72cf2828 from memory into f27
la x2, scratch
li x3, 0x32b814c2 # load x3 with value 0x32b814c2
sw x3, 0(x2) # store 0x32b814c2 in memory
flh f1, 0(x2) # load 0x32b814c2 from memory into f1
la x2, scratch
li x3, 0xae33e150 # load x3 with value 0xae33e150
sw x3, 0(x2) # store 0xae33e150 in memory
flh f17, 0(x2) # load 0xae33e150 from memory into f17
fnmadd.h f1, f27, f1, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
la x2, scratch
li x3, 0xa546428c # load x3 with value 0xa546428c
sw x3, 0(x2) # store 0xa546428c in memory
flh f2, 0(x2) # load 0xa546428c from memory into f2
la x2, scratch
li x3, 0x1151944b # load x3 with value 0x1151944b
sw x3, 0(x2) # store 0x1151944b in memory
flh f2, 0(x2) # load 0x1151944b from memory into f2
la x2, scratch
li x3, 0x0dcc97ee # load x3 with value 0x0dcc97ee
sw x3, 0(x2) # store 0x0dcc97ee in memory
flh f17, 0(x2) # load 0x0dcc97ee from memory into f17
fnmadd.h f2, f2, f2, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
la x2, scratch
li x3, 0x22d8674f # load x3 with value 0x22d8674f
sw x3, 0(x2) # store 0x22d8674f in memory
flh f14, 0(x2) # load 0x22d8674f from memory into f14
la x2, scratch
li x3, 0x04cb7777 # load x3 with value 0x04cb7777
sw x3, 0(x2) # store 0x04cb7777 in memory
flh f3, 0(x2) # load 0x04cb7777 from memory into f3
la x2, scratch
li x3, 0xaad17163 # load x3 with value 0xaad17163
sw x3, 0(x2) # store 0xaad17163 in memory
flh f19, 0(x2) # load 0xaad17163 from memory into f19
fnmadd.h f3, f14, f3, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x6cebc495 # load x3 with value 0x6cebc495
sw x3, 0(x2) # store 0x6cebc495 in memory
flh f31, 0(x2) # load 0x6cebc495 from memory into f31
la x2, scratch
li x3, 0xe0da04fb # load x3 with value 0xe0da04fb
sw x3, 0(x2) # store 0xe0da04fb in memory
flh f4, 0(x2) # load 0xe0da04fb from memory into f4
la x2, scratch
li x3, 0x6e5afa75 # load x3 with value 0x6e5afa75
sw x3, 0(x2) # store 0x6e5afa75 in memory
flh f21, 0(x2) # load 0x6e5afa75 from memory into f21
fnmadd.h f4, f31, f4, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x8ca1fc0d # load x3 with value 0x8ca1fc0d
sw x3, 0(x2) # store 0x8ca1fc0d in memory
flh f18, 0(x2) # load 0x8ca1fc0d from memory into f18
la x2, scratch
li x3, 0x71dda381 # load x3 with value 0x71dda381
sw x3, 0(x2) # store 0x71dda381 in memory
flh f5, 0(x2) # load 0x71dda381 from memory into f5
la x2, scratch
li x3, 0x7b8d0ff7 # load x3 with value 0x7b8d0ff7
sw x3, 0(x2) # store 0x7b8d0ff7 in memory
flh f8, 0(x2) # load 0x7b8d0ff7 from memory into f8
fnmadd.h f5, f18, f5, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xa41e5db2 # load x3 with value 0xa41e5db2
sw x3, 0(x2) # store 0xa41e5db2 in memory
flh f11, 0(x2) # load 0xa41e5db2 from memory into f11
la x2, scratch
li x3, 0x79b719ee # load x3 with value 0x79b719ee
sw x3, 0(x2) # store 0x79b719ee in memory
flh f6, 0(x2) # load 0x79b719ee from memory into f6
la x2, scratch
li x3, 0x39058eaa # load x3 with value 0x39058eaa
sw x3, 0(x2) # store 0x39058eaa in memory
flh f12, 0(x2) # load 0x39058eaa from memory into f12
fnmadd.h f6, f11, f6, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x1a83448e # load x3 with value 0x1a83448e
sw x3, 0(x2) # store 0x1a83448e in memory
flh f18, 0(x2) # load 0x1a83448e from memory into f18
la x2, scratch
li x3, 0x3b8c2338 # load x3 with value 0x3b8c2338
sw x3, 0(x2) # store 0x3b8c2338 in memory
flh f7, 0(x2) # load 0x3b8c2338 from memory into f7
la x2, scratch
li x3, 0xce32219b # load x3 with value 0xce32219b
sw x3, 0(x2) # store 0xce32219b in memory
flh f31, 0(x2) # load 0xce32219b from memory into f31
fnmadd.h f7, f18, f7, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
la x2, scratch
li x3, 0x06df5ec5 # load x3 with value 0x06df5ec5
sw x3, 0(x2) # store 0x06df5ec5 in memory
flh f28, 0(x2) # load 0x06df5ec5 from memory into f28
la x2, scratch
li x3, 0x416a3b89 # load x3 with value 0x416a3b89
sw x3, 0(x2) # store 0x416a3b89 in memory
flh f8, 0(x2) # load 0x416a3b89 from memory into f8
la x2, scratch
li x3, 0x742bd486 # load x3 with value 0x742bd486
sw x3, 0(x2) # store 0x742bd486 in memory
flh f26, 0(x2) # load 0x742bd486 from memory into f26
fnmadd.h f8, f28, f8, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
la x2, scratch
li x3, 0x73d77af9 # load x3 with value 0x73d77af9
sw x3, 0(x2) # store 0x73d77af9 in memory
flh f18, 0(x2) # load 0x73d77af9 from memory into f18
la x2, scratch
li x3, 0xdc4ffade # load x3 with value 0xdc4ffade
sw x3, 0(x2) # store 0xdc4ffade in memory
flh f9, 0(x2) # load 0xdc4ffade from memory into f9
la x2, scratch
li x3, 0x01486699 # load x3 with value 0x01486699
sw x3, 0(x2) # store 0x01486699 in memory
flh f21, 0(x2) # load 0x01486699 from memory into f21
fnmadd.h f9, f18, f9, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
la x2, scratch
li x3, 0xb9838b81 # load x3 with value 0xb9838b81
sw x3, 0(x2) # store 0xb9838b81 in memory
flh f12, 0(x2) # load 0xb9838b81 from memory into f12
la x2, scratch
li x3, 0xd78ab07a # load x3 with value 0xd78ab07a
sw x3, 0(x2) # store 0xd78ab07a in memory
flh f10, 0(x2) # load 0xd78ab07a from memory into f10
la x2, scratch
li x3, 0xc9eeaeeb # load x3 with value 0xc9eeaeeb
sw x3, 0(x2) # store 0xc9eeaeeb in memory
flh f14, 0(x2) # load 0xc9eeaeeb from memory into f14
fnmadd.h f10, f12, f10, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
la x2, scratch
li x3, 0xdbd0c5bd # load x3 with value 0xdbd0c5bd
sw x3, 0(x2) # store 0xdbd0c5bd in memory
flh f9, 0(x2) # load 0xdbd0c5bd from memory into f9
la x2, scratch
li x3, 0xc3bd190e # load x3 with value 0xc3bd190e
sw x3, 0(x2) # store 0xc3bd190e in memory
flh f11, 0(x2) # load 0xc3bd190e from memory into f11
la x2, scratch
li x3, 0x64c13ffe # load x3 with value 0x64c13ffe
sw x3, 0(x2) # store 0x64c13ffe in memory
flh f17, 0(x2) # load 0x64c13ffe from memory into f17
fnmadd.h f11, f9, f11, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
la x2, scratch
li x3, 0x0c08127e # load x3 with value 0x0c08127e
sw x3, 0(x2) # store 0x0c08127e in memory
flh f18, 0(x2) # load 0x0c08127e from memory into f18
la x2, scratch
li x3, 0x7dee0d3b # load x3 with value 0x7dee0d3b
sw x3, 0(x2) # store 0x7dee0d3b in memory
flh f12, 0(x2) # load 0x7dee0d3b from memory into f12
la x2, scratch
li x3, 0x029416bc # load x3 with value 0x029416bc
sw x3, 0(x2) # store 0x029416bc in memory
flh f3, 0(x2) # load 0x029416bc from memory into f3
fnmadd.h f12, f18, f12, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
la x2, scratch
li x3, 0x41b564f7 # load x3 with value 0x41b564f7
sw x3, 0(x2) # store 0x41b564f7 in memory
flh f21, 0(x2) # load 0x41b564f7 from memory into f21
la x2, scratch
li x3, 0x7bb2ea82 # load x3 with value 0x7bb2ea82
sw x3, 0(x2) # store 0x7bb2ea82 in memory
flh f13, 0(x2) # load 0x7bb2ea82 from memory into f13
la x2, scratch
li x3, 0x68a21d53 # load x3 with value 0x68a21d53
sw x3, 0(x2) # store 0x68a21d53 in memory
flh f1, 0(x2) # load 0x68a21d53 from memory into f1
fnmadd.h f13, f21, f13, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
la x2, scratch
li x3, 0x66c796be # load x3 with value 0x66c796be
sw x3, 0(x2) # store 0x66c796be in memory
flh f22, 0(x2) # load 0x66c796be from memory into f22
la x2, scratch
li x3, 0x6e9193cf # load x3 with value 0x6e9193cf
sw x3, 0(x2) # store 0x6e9193cf in memory
flh f14, 0(x2) # load 0x6e9193cf from memory into f14
la x2, scratch
li x3, 0x1a148700 # load x3 with value 0x1a148700
sw x3, 0(x2) # store 0x1a148700 in memory
flh f7, 0(x2) # load 0x1a148700 from memory into f7
fnmadd.h f14, f22, f14, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
la x2, scratch
li x3, 0x496bcdb4 # load x3 with value 0x496bcdb4
sw x3, 0(x2) # store 0x496bcdb4 in memory
flh f12, 0(x2) # load 0x496bcdb4 from memory into f12
la x2, scratch
li x3, 0xfee7adf6 # load x3 with value 0xfee7adf6
sw x3, 0(x2) # store 0xfee7adf6 in memory
flh f15, 0(x2) # load 0xfee7adf6 from memory into f15
la x2, scratch
li x3, 0xeb2ece8b # load x3 with value 0xeb2ece8b
sw x3, 0(x2) # store 0xeb2ece8b in memory
flh f31, 0(x2) # load 0xeb2ece8b from memory into f31
fnmadd.h f15, f12, f15, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
la x2, scratch
li x3, 0x17d674a8 # load x3 with value 0x17d674a8
sw x3, 0(x2) # store 0x17d674a8 in memory
flh f20, 0(x2) # load 0x17d674a8 from memory into f20
la x2, scratch
li x3, 0xb4e6cad4 # load x3 with value 0xb4e6cad4
sw x3, 0(x2) # store 0xb4e6cad4 in memory
flh f16, 0(x2) # load 0xb4e6cad4 from memory into f16
la x2, scratch
li x3, 0xe78608db # load x3 with value 0xe78608db
sw x3, 0(x2) # store 0xe78608db in memory
flh f31, 0(x2) # load 0xe78608db from memory into f31
fnmadd.h f16, f20, f16, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
la x2, scratch
li x3, 0x8cbdf9c3 # load x3 with value 0x8cbdf9c3
sw x3, 0(x2) # store 0x8cbdf9c3 in memory
flh f8, 0(x2) # load 0x8cbdf9c3 from memory into f8
la x2, scratch
li x3, 0x277c975c # load x3 with value 0x277c975c
sw x3, 0(x2) # store 0x277c975c in memory
flh f17, 0(x2) # load 0x277c975c from memory into f17
la x2, scratch
li x3, 0x0ffd70f4 # load x3 with value 0x0ffd70f4
sw x3, 0(x2) # store 0x0ffd70f4 in memory
flh f10, 0(x2) # load 0x0ffd70f4 from memory into f10
fnmadd.h f17, f8, f17, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
la x2, scratch
li x3, 0x2c1d0b7e # load x3 with value 0x2c1d0b7e
sw x3, 0(x2) # store 0x2c1d0b7e in memory
flh f21, 0(x2) # load 0x2c1d0b7e from memory into f21
la x2, scratch
li x3, 0xcfe81c6b # load x3 with value 0xcfe81c6b
sw x3, 0(x2) # store 0xcfe81c6b in memory
flh f18, 0(x2) # load 0xcfe81c6b from memory into f18
la x2, scratch
li x3, 0x9e3b0963 # load x3 with value 0x9e3b0963
sw x3, 0(x2) # store 0x9e3b0963 in memory
flh f9, 0(x2) # load 0x9e3b0963 from memory into f9
fnmadd.h f18, f21, f18, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
la x2, scratch
li x3, 0x3fc6fca9 # load x3 with value 0x3fc6fca9
sw x3, 0(x2) # store 0x3fc6fca9 in memory
flh f16, 0(x2) # load 0x3fc6fca9 from memory into f16
la x2, scratch
li x3, 0xbeddd8b4 # load x3 with value 0xbeddd8b4
sw x3, 0(x2) # store 0xbeddd8b4 in memory
flh f19, 0(x2) # load 0xbeddd8b4 from memory into f19
la x2, scratch
li x3, 0xe23387a4 # load x3 with value 0xe23387a4
sw x3, 0(x2) # store 0xe23387a4 in memory
flh f21, 0(x2) # load 0xe23387a4 from memory into f21
fnmadd.h f19, f16, f19, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
la x2, scratch
li x3, 0x34ad18d7 # load x3 with value 0x34ad18d7
sw x3, 0(x2) # store 0x34ad18d7 in memory
flh f29, 0(x2) # load 0x34ad18d7 from memory into f29
la x2, scratch
li x3, 0x78608b0d # load x3 with value 0x78608b0d
sw x3, 0(x2) # store 0x78608b0d in memory
flh f20, 0(x2) # load 0x78608b0d from memory into f20
la x2, scratch
li x3, 0x1157540d # load x3 with value 0x1157540d
sw x3, 0(x2) # store 0x1157540d in memory
flh f6, 0(x2) # load 0x1157540d from memory into f6
fnmadd.h f20, f29, f20, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
la x2, scratch
li x3, 0x1dd745a6 # load x3 with value 0x1dd745a6
sw x3, 0(x2) # store 0x1dd745a6 in memory
flh f27, 0(x2) # load 0x1dd745a6 from memory into f27
la x2, scratch
li x3, 0x1f3c958a # load x3 with value 0x1f3c958a
sw x3, 0(x2) # store 0x1f3c958a in memory
flh f21, 0(x2) # load 0x1f3c958a from memory into f21
la x2, scratch
li x3, 0x1ec9fd57 # load x3 with value 0x1ec9fd57
sw x3, 0(x2) # store 0x1ec9fd57 in memory
flh f3, 0(x2) # load 0x1ec9fd57 from memory into f3
fnmadd.h f21, f27, f21, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
la x2, scratch
li x3, 0xaae5dc1b # load x3 with value 0xaae5dc1b
sw x3, 0(x2) # store 0xaae5dc1b in memory
flh f8, 0(x2) # load 0xaae5dc1b from memory into f8
la x2, scratch
li x3, 0xa0afa4e1 # load x3 with value 0xa0afa4e1
sw x3, 0(x2) # store 0xa0afa4e1 in memory
flh f22, 0(x2) # load 0xa0afa4e1 from memory into f22
la x2, scratch
li x3, 0x532f4fd1 # load x3 with value 0x532f4fd1
sw x3, 0(x2) # store 0x532f4fd1 in memory
flh f28, 0(x2) # load 0x532f4fd1 from memory into f28
fnmadd.h f22, f8, f22, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
la x2, scratch
li x3, 0xbe6858a3 # load x3 with value 0xbe6858a3
sw x3, 0(x2) # store 0xbe6858a3 in memory
flh f16, 0(x2) # load 0xbe6858a3 from memory into f16
la x2, scratch
li x3, 0x592e2708 # load x3 with value 0x592e2708
sw x3, 0(x2) # store 0x592e2708 in memory
flh f23, 0(x2) # load 0x592e2708 from memory into f23
la x2, scratch
li x3, 0x51f06a2f # load x3 with value 0x51f06a2f
sw x3, 0(x2) # store 0x51f06a2f in memory
flh f17, 0(x2) # load 0x51f06a2f from memory into f17
fnmadd.h f23, f16, f23, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
la x2, scratch
li x3, 0xfd4d679c # load x3 with value 0xfd4d679c
sw x3, 0(x2) # store 0xfd4d679c in memory
flh f26, 0(x2) # load 0xfd4d679c from memory into f26
la x2, scratch
li x3, 0x70836f19 # load x3 with value 0x70836f19
sw x3, 0(x2) # store 0x70836f19 in memory
flh f24, 0(x2) # load 0x70836f19 from memory into f24
la x2, scratch
li x3, 0x81804e6f # load x3 with value 0x81804e6f
sw x3, 0(x2) # store 0x81804e6f in memory
flh f7, 0(x2) # load 0x81804e6f from memory into f7
fnmadd.h f24, f26, f24, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
la x2, scratch
li x3, 0x34ead978 # load x3 with value 0x34ead978
sw x3, 0(x2) # store 0x34ead978 in memory
flh f21, 0(x2) # load 0x34ead978 from memory into f21
la x2, scratch
li x3, 0xe52a7be5 # load x3 with value 0xe52a7be5
sw x3, 0(x2) # store 0xe52a7be5 in memory
flh f25, 0(x2) # load 0xe52a7be5 from memory into f25
la x2, scratch
li x3, 0xeb732978 # load x3 with value 0xeb732978
sw x3, 0(x2) # store 0xeb732978 in memory
flh f26, 0(x2) # load 0xeb732978 from memory into f26
fnmadd.h f25, f21, f25, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
la x2, scratch
li x3, 0x1a393d74 # load x3 with value 0x1a393d74
sw x3, 0(x2) # store 0x1a393d74 in memory
flh f8, 0(x2) # load 0x1a393d74 from memory into f8
la x2, scratch
li x3, 0x8172da96 # load x3 with value 0x8172da96
sw x3, 0(x2) # store 0x8172da96 in memory
flh f26, 0(x2) # load 0x8172da96 from memory into f26
la x2, scratch
li x3, 0xaf008d0a # load x3 with value 0xaf008d0a
sw x3, 0(x2) # store 0xaf008d0a in memory
flh f14, 0(x2) # load 0xaf008d0a from memory into f14
fnmadd.h f26, f8, f26, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
la x2, scratch
li x3, 0x27c691f3 # load x3 with value 0x27c691f3
sw x3, 0(x2) # store 0x27c691f3 in memory
flh f9, 0(x2) # load 0x27c691f3 from memory into f9
la x2, scratch
li x3, 0x9eeda0b7 # load x3 with value 0x9eeda0b7
sw x3, 0(x2) # store 0x9eeda0b7 in memory
flh f27, 0(x2) # load 0x9eeda0b7 from memory into f27
la x2, scratch
li x3, 0x846bb24f # load x3 with value 0x846bb24f
sw x3, 0(x2) # store 0x846bb24f in memory
flh f2, 0(x2) # load 0x846bb24f from memory into f2
fnmadd.h f27, f9, f27, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
la x2, scratch
li x3, 0x33ec1fbe # load x3 with value 0x33ec1fbe
sw x3, 0(x2) # store 0x33ec1fbe in memory
flh f1, 0(x2) # load 0x33ec1fbe from memory into f1
la x2, scratch
li x3, 0x7a5ce168 # load x3 with value 0x7a5ce168
sw x3, 0(x2) # store 0x7a5ce168 in memory
flh f28, 0(x2) # load 0x7a5ce168 from memory into f28
la x2, scratch
li x3, 0x071aeba4 # load x3 with value 0x071aeba4
sw x3, 0(x2) # store 0x071aeba4 in memory
flh f2, 0(x2) # load 0x071aeba4 from memory into f2
fnmadd.h f28, f1, f28, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
la x2, scratch
li x3, 0x494a087b # load x3 with value 0x494a087b
sw x3, 0(x2) # store 0x494a087b in memory
flh f29, 0(x2) # load 0x494a087b from memory into f29
la x2, scratch
li x3, 0x5ab2d48b # load x3 with value 0x5ab2d48b
sw x3, 0(x2) # store 0x5ab2d48b in memory
flh f29, 0(x2) # load 0x5ab2d48b from memory into f29
la x2, scratch
li x3, 0xc94b7a82 # load x3 with value 0xc94b7a82
sw x3, 0(x2) # store 0xc94b7a82 in memory
flh f18, 0(x2) # load 0xc94b7a82 from memory into f18
fnmadd.h f29, f29, f29, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
la x2, scratch
li x3, 0x585406ed # load x3 with value 0x585406ed
sw x3, 0(x2) # store 0x585406ed in memory
flh f13, 0(x2) # load 0x585406ed from memory into f13
la x2, scratch
li x3, 0xc6eb8a6c # load x3 with value 0xc6eb8a6c
sw x3, 0(x2) # store 0xc6eb8a6c in memory
flh f30, 0(x2) # load 0xc6eb8a6c from memory into f30
la x2, scratch
li x3, 0x6ad037eb # load x3 with value 0x6ad037eb
sw x3, 0(x2) # store 0x6ad037eb in memory
flh f8, 0(x2) # load 0x6ad037eb from memory into f8
fnmadd.h f30, f13, f30, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
la x2, scratch
li x3, 0xd9c14f6f # load x3 with value 0xd9c14f6f
sw x3, 0(x2) # store 0xd9c14f6f in memory
flh f24, 0(x2) # load 0xd9c14f6f from memory into f24
la x2, scratch
li x3, 0xa656f854 # load x3 with value 0xa656f854
sw x3, 0(x2) # store 0xa656f854 in memory
flh f31, 0(x2) # load 0xa656f854 from memory into f31
la x2, scratch
li x3, 0x8505c9f9 # load x3 with value 0x8505c9f9
sw x3, 0(x2) # store 0x8505c9f9 in memory
flh f17, 0(x2) # load 0x8505c9f9 from memory into f17
fnmadd.h f31, f24, f31, f17 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f0)
la x2, scratch
li x3, 0x5d478a93 # load x3 with value 0x5d478a93
sw x3, 0(x2) # store 0x5d478a93 in memory
flh f14, 0(x2) # load 0x5d478a93 from memory into f14
la x2, scratch
li x3, 0xed6e73a5 # load x3 with value 0xed6e73a5
sw x3, 0(x2) # store 0xed6e73a5 in memory
flh f8, 0(x2) # load 0xed6e73a5 from memory into f8
la x2, scratch
li x3, 0xd81fb458 # load x3 with value 0xd81fb458
sw x3, 0(x2) # store 0xd81fb458 in memory
flh f0, 0(x2) # load 0xd81fb458 from memory into f0
fnmadd.h f0, f14, f8, f0 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f1)
la x2, scratch
li x3, 0x9990ca17 # load x3 with value 0x9990ca17
sw x3, 0(x2) # store 0x9990ca17 in memory
flh f10, 0(x2) # load 0x9990ca17 from memory into f10
la x2, scratch
li x3, 0x0995400d # load x3 with value 0x0995400d
sw x3, 0(x2) # store 0x0995400d in memory
flh f20, 0(x2) # load 0x0995400d from memory into f20
la x2, scratch
li x3, 0x627f68cc # load x3 with value 0x627f68cc
sw x3, 0(x2) # store 0x627f68cc in memory
flh f1, 0(x2) # load 0x627f68cc from memory into f1
fnmadd.h f1, f10, f20, f1 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f2)
la x2, scratch
li x3, 0xf6369b9d # load x3 with value 0xf6369b9d
sw x3, 0(x2) # store 0xf6369b9d in memory
flh f23, 0(x2) # load 0xf6369b9d from memory into f23
la x2, scratch
li x3, 0x66956626 # load x3 with value 0x66956626
sw x3, 0(x2) # store 0x66956626 in memory
flh f24, 0(x2) # load 0x66956626 from memory into f24
la x2, scratch
li x3, 0xafba2165 # load x3 with value 0xafba2165
sw x3, 0(x2) # store 0xafba2165 in memory
flh f2, 0(x2) # load 0xafba2165 from memory into f2
fnmadd.h f2, f23, f24, f2 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f3)
la x2, scratch
li x3, 0xc782049c # load x3 with value 0xc782049c
sw x3, 0(x2) # store 0xc782049c in memory
flh f12, 0(x2) # load 0xc782049c from memory into f12
la x2, scratch
li x3, 0x50083cfc # load x3 with value 0x50083cfc
sw x3, 0(x2) # store 0x50083cfc in memory
flh f1, 0(x2) # load 0x50083cfc from memory into f1
la x2, scratch
li x3, 0x5d86e5de # load x3 with value 0x5d86e5de
sw x3, 0(x2) # store 0x5d86e5de in memory
flh f3, 0(x2) # load 0x5d86e5de from memory into f3
fnmadd.h f3, f12, f1, f3 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xf75adda1 # load x3 with value 0xf75adda1
sw x3, 0(x2) # store 0xf75adda1 in memory
flh f14, 0(x2) # load 0xf75adda1 from memory into f14
la x2, scratch
li x3, 0xfb3964c6 # load x3 with value 0xfb3964c6
sw x3, 0(x2) # store 0xfb3964c6 in memory
flh f22, 0(x2) # load 0xfb3964c6 from memory into f22
la x2, scratch
li x3, 0xed231526 # load x3 with value 0xed231526
sw x3, 0(x2) # store 0xed231526 in memory
flh f4, 0(x2) # load 0xed231526 from memory into f4
fnmadd.h f4, f14, f22, f4 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x6c508fbc # load x3 with value 0x6c508fbc
sw x3, 0(x2) # store 0x6c508fbc in memory
flh f31, 0(x2) # load 0x6c508fbc from memory into f31
la x2, scratch
li x3, 0xc9e85474 # load x3 with value 0xc9e85474
sw x3, 0(x2) # store 0xc9e85474 in memory
flh f10, 0(x2) # load 0xc9e85474 from memory into f10
la x2, scratch
li x3, 0x6ef4f3cf # load x3 with value 0x6ef4f3cf
sw x3, 0(x2) # store 0x6ef4f3cf in memory
flh f5, 0(x2) # load 0x6ef4f3cf from memory into f5
fnmadd.h f5, f31, f10, f5 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x7085f49f # load x3 with value 0x7085f49f
sw x3, 0(x2) # store 0x7085f49f in memory
flh f8, 0(x2) # load 0x7085f49f from memory into f8
la x2, scratch
li x3, 0x4c876794 # load x3 with value 0x4c876794
sw x3, 0(x2) # store 0x4c876794 in memory
flh f31, 0(x2) # load 0x4c876794 from memory into f31
la x2, scratch
li x3, 0x481ab2ef # load x3 with value 0x481ab2ef
sw x3, 0(x2) # store 0x481ab2ef in memory
flh f6, 0(x2) # load 0x481ab2ef from memory into f6
fnmadd.h f6, f8, f31, f6 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x570ace89 # load x3 with value 0x570ace89
sw x3, 0(x2) # store 0x570ace89 in memory
flh f23, 0(x2) # load 0x570ace89 from memory into f23
la x2, scratch
li x3, 0x25f46bc3 # load x3 with value 0x25f46bc3
sw x3, 0(x2) # store 0x25f46bc3 in memory
flh f22, 0(x2) # load 0x25f46bc3 from memory into f22
la x2, scratch
li x3, 0x7f7d193a # load x3 with value 0x7f7d193a
sw x3, 0(x2) # store 0x7f7d193a in memory
flh f7, 0(x2) # load 0x7f7d193a from memory into f7
fnmadd.h f7, f23, f22, f7 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f8)
la x2, scratch
li x3, 0x7b9cac5c # load x3 with value 0x7b9cac5c
sw x3, 0(x2) # store 0x7b9cac5c in memory
flh f28, 0(x2) # load 0x7b9cac5c from memory into f28
la x2, scratch
li x3, 0x04886440 # load x3 with value 0x04886440
sw x3, 0(x2) # store 0x04886440 in memory
flh f5, 0(x2) # load 0x04886440 from memory into f5
la x2, scratch
li x3, 0xbf810202 # load x3 with value 0xbf810202
sw x3, 0(x2) # store 0xbf810202 in memory
flh f8, 0(x2) # load 0xbf810202 from memory into f8
fnmadd.h f8, f28, f5, f8 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f9)
la x2, scratch
li x3, 0x54456b50 # load x3 with value 0x54456b50
sw x3, 0(x2) # store 0x54456b50 in memory
flh f21, 0(x2) # load 0x54456b50 from memory into f21
la x2, scratch
li x3, 0xdfebea9c # load x3 with value 0xdfebea9c
sw x3, 0(x2) # store 0xdfebea9c in memory
flh f15, 0(x2) # load 0xdfebea9c from memory into f15
la x2, scratch
li x3, 0x71c11cca # load x3 with value 0x71c11cca
sw x3, 0(x2) # store 0x71c11cca in memory
flh f9, 0(x2) # load 0x71c11cca from memory into f9
fnmadd.h f9, f21, f15, f9 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f10)
la x2, scratch
li x3, 0xb4dd01c8 # load x3 with value 0xb4dd01c8
sw x3, 0(x2) # store 0xb4dd01c8 in memory
flh f2, 0(x2) # load 0xb4dd01c8 from memory into f2
la x2, scratch
li x3, 0x211d0a3a # load x3 with value 0x211d0a3a
sw x3, 0(x2) # store 0x211d0a3a in memory
flh f3, 0(x2) # load 0x211d0a3a from memory into f3
la x2, scratch
li x3, 0x619fe2cf # load x3 with value 0x619fe2cf
sw x3, 0(x2) # store 0x619fe2cf in memory
flh f10, 0(x2) # load 0x619fe2cf from memory into f10
fnmadd.h f10, f2, f3, f10 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f11)
la x2, scratch
li x3, 0x55f829df # load x3 with value 0x55f829df
sw x3, 0(x2) # store 0x55f829df in memory
flh f28, 0(x2) # load 0x55f829df from memory into f28
la x2, scratch
li x3, 0x8b27aa3a # load x3 with value 0x8b27aa3a
sw x3, 0(x2) # store 0x8b27aa3a in memory
flh f25, 0(x2) # load 0x8b27aa3a from memory into f25
la x2, scratch
li x3, 0x9d67d178 # load x3 with value 0x9d67d178
sw x3, 0(x2) # store 0x9d67d178 in memory
flh f11, 0(x2) # load 0x9d67d178 from memory into f11
fnmadd.h f11, f28, f25, f11 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f12)
la x2, scratch
li x3, 0x39232c84 # load x3 with value 0x39232c84
sw x3, 0(x2) # store 0x39232c84 in memory
flh f24, 0(x2) # load 0x39232c84 from memory into f24
la x2, scratch
li x3, 0x95c5f677 # load x3 with value 0x95c5f677
sw x3, 0(x2) # store 0x95c5f677 in memory
flh f8, 0(x2) # load 0x95c5f677 from memory into f8
la x2, scratch
li x3, 0x49fd13d9 # load x3 with value 0x49fd13d9
sw x3, 0(x2) # store 0x49fd13d9 in memory
flh f12, 0(x2) # load 0x49fd13d9 from memory into f12
fnmadd.h f12, f24, f8, f12 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f13)
la x2, scratch
li x3, 0xe92b9280 # load x3 with value 0xe92b9280
sw x3, 0(x2) # store 0xe92b9280 in memory
flh f28, 0(x2) # load 0xe92b9280 from memory into f28
la x2, scratch
li x3, 0x91ab340e # load x3 with value 0x91ab340e
sw x3, 0(x2) # store 0x91ab340e in memory
flh f27, 0(x2) # load 0x91ab340e from memory into f27
la x2, scratch
li x3, 0x56f40226 # load x3 with value 0x56f40226
sw x3, 0(x2) # store 0x56f40226 in memory
flh f13, 0(x2) # load 0x56f40226 from memory into f13
fnmadd.h f13, f28, f27, f13 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f14)
la x2, scratch
li x3, 0xe22615ba # load x3 with value 0xe22615ba
sw x3, 0(x2) # store 0xe22615ba in memory
flh f18, 0(x2) # load 0xe22615ba from memory into f18
la x2, scratch
li x3, 0xd6520858 # load x3 with value 0xd6520858
sw x3, 0(x2) # store 0xd6520858 in memory
flh f16, 0(x2) # load 0xd6520858 from memory into f16
la x2, scratch
li x3, 0xe628cf11 # load x3 with value 0xe628cf11
sw x3, 0(x2) # store 0xe628cf11 in memory
flh f14, 0(x2) # load 0xe628cf11 from memory into f14
fnmadd.h f14, f18, f16, f14 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f15)
la x2, scratch
li x3, 0x1777cfda # load x3 with value 0x1777cfda
sw x3, 0(x2) # store 0x1777cfda in memory
flh f12, 0(x2) # load 0x1777cfda from memory into f12
la x2, scratch
li x3, 0x4d2ab7c0 # load x3 with value 0x4d2ab7c0
sw x3, 0(x2) # store 0x4d2ab7c0 in memory
flh f26, 0(x2) # load 0x4d2ab7c0 from memory into f26
la x2, scratch
li x3, 0xcdf36650 # load x3 with value 0xcdf36650
sw x3, 0(x2) # store 0xcdf36650 in memory
flh f15, 0(x2) # load 0xcdf36650 from memory into f15
fnmadd.h f15, f12, f26, f15 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f16)
la x2, scratch
li x3, 0x5ce15b44 # load x3 with value 0x5ce15b44
sw x3, 0(x2) # store 0x5ce15b44 in memory
flh f16, 0(x2) # load 0x5ce15b44 from memory into f16
la x2, scratch
li x3, 0xc9e119b0 # load x3 with value 0xc9e119b0
sw x3, 0(x2) # store 0xc9e119b0 in memory
flh f14, 0(x2) # load 0xc9e119b0 from memory into f14
la x2, scratch
li x3, 0x900054d4 # load x3 with value 0x900054d4
sw x3, 0(x2) # store 0x900054d4 in memory
flh f16, 0(x2) # load 0x900054d4 from memory into f16
fnmadd.h f16, f16, f14, f16 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f17)
la x2, scratch
li x3, 0x3c0d14f1 # load x3 with value 0x3c0d14f1
sw x3, 0(x2) # store 0x3c0d14f1 in memory
flh f26, 0(x2) # load 0x3c0d14f1 from memory into f26
la x2, scratch
li x3, 0xf65d6439 # load x3 with value 0xf65d6439
sw x3, 0(x2) # store 0xf65d6439 in memory
flh f16, 0(x2) # load 0xf65d6439 from memory into f16
la x2, scratch
li x3, 0xef922f3c # load x3 with value 0xef922f3c
sw x3, 0(x2) # store 0xef922f3c in memory
flh f17, 0(x2) # load 0xef922f3c from memory into f17
fnmadd.h f17, f26, f16, f17 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f18)
la x2, scratch
li x3, 0xa2fb7a13 # load x3 with value 0xa2fb7a13
sw x3, 0(x2) # store 0xa2fb7a13 in memory
flh f11, 0(x2) # load 0xa2fb7a13 from memory into f11
la x2, scratch
li x3, 0x0a1bab42 # load x3 with value 0x0a1bab42
sw x3, 0(x2) # store 0x0a1bab42 in memory
flh f22, 0(x2) # load 0x0a1bab42 from memory into f22
la x2, scratch
li x3, 0x8fc45bbe # load x3 with value 0x8fc45bbe
sw x3, 0(x2) # store 0x8fc45bbe in memory
flh f18, 0(x2) # load 0x8fc45bbe from memory into f18
fnmadd.h f18, f11, f22, f18 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f19)
la x2, scratch
li x3, 0x00c3cb3d # load x3 with value 0x00c3cb3d
sw x3, 0(x2) # store 0x00c3cb3d in memory
flh f20, 0(x2) # load 0x00c3cb3d from memory into f20
la x2, scratch
li x3, 0xf8a880d1 # load x3 with value 0xf8a880d1
sw x3, 0(x2) # store 0xf8a880d1 in memory
flh f9, 0(x2) # load 0xf8a880d1 from memory into f9
la x2, scratch
li x3, 0xedb4b215 # load x3 with value 0xedb4b215
sw x3, 0(x2) # store 0xedb4b215 in memory
flh f19, 0(x2) # load 0xedb4b215 from memory into f19
fnmadd.h f19, f20, f9, f19 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f20)
la x2, scratch
li x3, 0x1aa6daeb # load x3 with value 0x1aa6daeb
sw x3, 0(x2) # store 0x1aa6daeb in memory
flh f5, 0(x2) # load 0x1aa6daeb from memory into f5
la x2, scratch
li x3, 0x1b1eda13 # load x3 with value 0x1b1eda13
sw x3, 0(x2) # store 0x1b1eda13 in memory
flh f23, 0(x2) # load 0x1b1eda13 from memory into f23
la x2, scratch
li x3, 0x20d0fe5c # load x3 with value 0x20d0fe5c
sw x3, 0(x2) # store 0x20d0fe5c in memory
flh f20, 0(x2) # load 0x20d0fe5c from memory into f20
fnmadd.h f20, f5, f23, f20 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f21)
la x2, scratch
li x3, 0x4950f423 # load x3 with value 0x4950f423
sw x3, 0(x2) # store 0x4950f423 in memory
flh f30, 0(x2) # load 0x4950f423 from memory into f30
la x2, scratch
li x3, 0x7e647cc1 # load x3 with value 0x7e647cc1
sw x3, 0(x2) # store 0x7e647cc1 in memory
flh f27, 0(x2) # load 0x7e647cc1 from memory into f27
la x2, scratch
li x3, 0x091d37ad # load x3 with value 0x091d37ad
sw x3, 0(x2) # store 0x091d37ad in memory
flh f21, 0(x2) # load 0x091d37ad from memory into f21
fnmadd.h f21, f30, f27, f21 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f22)
la x2, scratch
li x3, 0x7d003afa # load x3 with value 0x7d003afa
sw x3, 0(x2) # store 0x7d003afa in memory
flh f18, 0(x2) # load 0x7d003afa from memory into f18
la x2, scratch
li x3, 0x24138527 # load x3 with value 0x24138527
sw x3, 0(x2) # store 0x24138527 in memory
flh f19, 0(x2) # load 0x24138527 from memory into f19
la x2, scratch
li x3, 0x9a4b8067 # load x3 with value 0x9a4b8067
sw x3, 0(x2) # store 0x9a4b8067 in memory
flh f22, 0(x2) # load 0x9a4b8067 from memory into f22
fnmadd.h f22, f18, f19, f22 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f23)
la x2, scratch
li x3, 0xd973d0b0 # load x3 with value 0xd973d0b0
sw x3, 0(x2) # store 0xd973d0b0 in memory
flh f14, 0(x2) # load 0xd973d0b0 from memory into f14
la x2, scratch
li x3, 0x5f6b094d # load x3 with value 0x5f6b094d
sw x3, 0(x2) # store 0x5f6b094d in memory
flh f1, 0(x2) # load 0x5f6b094d from memory into f1
la x2, scratch
li x3, 0x674df8e0 # load x3 with value 0x674df8e0
sw x3, 0(x2) # store 0x674df8e0 in memory
flh f23, 0(x2) # load 0x674df8e0 from memory into f23
fnmadd.h f23, f14, f1, f23 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f24)
la x2, scratch
li x3, 0xf7e73cdb # load x3 with value 0xf7e73cdb
sw x3, 0(x2) # store 0xf7e73cdb in memory
flh f27, 0(x2) # load 0xf7e73cdb from memory into f27
la x2, scratch
li x3, 0x7998a71e # load x3 with value 0x7998a71e
sw x3, 0(x2) # store 0x7998a71e in memory
flh f3, 0(x2) # load 0x7998a71e from memory into f3
la x2, scratch
li x3, 0x960ac159 # load x3 with value 0x960ac159
sw x3, 0(x2) # store 0x960ac159 in memory
flh f24, 0(x2) # load 0x960ac159 from memory into f24
fnmadd.h f24, f27, f3, f24 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f25)
la x2, scratch
li x3, 0x2e2d79f8 # load x3 with value 0x2e2d79f8
sw x3, 0(x2) # store 0x2e2d79f8 in memory
flh f28, 0(x2) # load 0x2e2d79f8 from memory into f28
la x2, scratch
li x3, 0x61f2fec1 # load x3 with value 0x61f2fec1
sw x3, 0(x2) # store 0x61f2fec1 in memory
flh f19, 0(x2) # load 0x61f2fec1 from memory into f19
la x2, scratch
li x3, 0x89a34900 # load x3 with value 0x89a34900
sw x3, 0(x2) # store 0x89a34900 in memory
flh f25, 0(x2) # load 0x89a34900 from memory into f25
fnmadd.h f25, f28, f19, f25 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f26)
la x2, scratch
li x3, 0x9bf0708d # load x3 with value 0x9bf0708d
sw x3, 0(x2) # store 0x9bf0708d in memory
flh f18, 0(x2) # load 0x9bf0708d from memory into f18
la x2, scratch
li x3, 0xc7e15d34 # load x3 with value 0xc7e15d34
sw x3, 0(x2) # store 0xc7e15d34 in memory
flh f15, 0(x2) # load 0xc7e15d34 from memory into f15
la x2, scratch
li x3, 0xa5f23c1c # load x3 with value 0xa5f23c1c
sw x3, 0(x2) # store 0xa5f23c1c in memory
flh f26, 0(x2) # load 0xa5f23c1c from memory into f26
fnmadd.h f26, f18, f15, f26 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f27)
la x2, scratch
li x3, 0x06c0310b # load x3 with value 0x06c0310b
sw x3, 0(x2) # store 0x06c0310b in memory
flh f13, 0(x2) # load 0x06c0310b from memory into f13
la x2, scratch
li x3, 0xf4d85604 # load x3 with value 0xf4d85604
sw x3, 0(x2) # store 0xf4d85604 in memory
flh f14, 0(x2) # load 0xf4d85604 from memory into f14
la x2, scratch
li x3, 0x02172511 # load x3 with value 0x02172511
sw x3, 0(x2) # store 0x02172511 in memory
flh f27, 0(x2) # load 0x02172511 from memory into f27
fnmadd.h f27, f13, f14, f27 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f28)
la x2, scratch
li x3, 0x902f40ba # load x3 with value 0x902f40ba
sw x3, 0(x2) # store 0x902f40ba in memory
flh f21, 0(x2) # load 0x902f40ba from memory into f21
la x2, scratch
li x3, 0x513efd72 # load x3 with value 0x513efd72
sw x3, 0(x2) # store 0x513efd72 in memory
flh f22, 0(x2) # load 0x513efd72 from memory into f22
la x2, scratch
li x3, 0xc1722875 # load x3 with value 0xc1722875
sw x3, 0(x2) # store 0xc1722875 in memory
flh f28, 0(x2) # load 0xc1722875 from memory into f28
fnmadd.h f28, f21, f22, f28 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f29)
la x2, scratch
li x3, 0x6623c009 # load x3 with value 0x6623c009
sw x3, 0(x2) # store 0x6623c009 in memory
flh f3, 0(x2) # load 0x6623c009 from memory into f3
la x2, scratch
li x3, 0x12ea7538 # load x3 with value 0x12ea7538
sw x3, 0(x2) # store 0x12ea7538 in memory
flh f1, 0(x2) # load 0x12ea7538 from memory into f1
la x2, scratch
li x3, 0xced55f56 # load x3 with value 0xced55f56
sw x3, 0(x2) # store 0xced55f56 in memory
flh f29, 0(x2) # load 0xced55f56 from memory into f29
fnmadd.h f29, f3, f1, f29 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f30)
la x2, scratch
li x3, 0xaf1ba343 # load x3 with value 0xaf1ba343
sw x3, 0(x2) # store 0xaf1ba343 in memory
flh f8, 0(x2) # load 0xaf1ba343 from memory into f8
la x2, scratch
li x3, 0x627fe978 # load x3 with value 0x627fe978
sw x3, 0(x2) # store 0x627fe978 in memory
flh f16, 0(x2) # load 0x627fe978 from memory into f16
la x2, scratch
li x3, 0x1e3c4a3b # load x3 with value 0x1e3c4a3b
sw x3, 0(x2) # store 0x1e3c4a3b in memory
flh f30, 0(x2) # load 0x1e3c4a3b from memory into f30
fnmadd.h f30, f8, f16, f30 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f31)
la x2, scratch
li x3, 0x0e502542 # load x3 with value 0x0e502542
sw x3, 0(x2) # store 0x0e502542 in memory
flh f8, 0(x2) # load 0x0e502542 from memory into f8
la x2, scratch
li x3, 0x0d58fdf5 # load x3 with value 0x0d58fdf5
sw x3, 0(x2) # store 0x0d58fdf5 in memory
flh f16, 0(x2) # load 0x0d58fdf5 from memory into f16
la x2, scratch
li x3, 0x36580a68 # load x3 with value 0x36580a68
sw x3, 0(x2) # store 0x36580a68 in memory
flh f31, 0(x2) # load 0x36580a68 from memory into f31
fnmadd.h f31, f8, f16, f31 # perform operation

# Testcase cp_frm
la x2, scratch
li x3, 0x6e463d6e # load x3 with value 0x6e463d6e
sw x3, 0(x2) # store 0x6e463d6e in memory
flh f31, 0(x2) # load 0x6e463d6e from memory into f31
la x2, scratch
li x3, 0x481b501d # load x3 with value 0x481b501d
sw x3, 0(x2) # store 0x481b501d in memory
flh f28, 0(x2) # load 0x481b501d from memory into f28
la x2, scratch
li x3, 0x0000000f # load x3 with value 0x0000000f
sw x3, 0(x2) # store 0x0000000f in memory
flh f15, 0(x2) # load 0x0000000f from memory into f15
fnmadd.h f23, f31, f28, f15, dyn # perform operation
fnmadd.h f23, f31, f28, f15, rdn # perform operation
fnmadd.h f23, f31, f28, f15, rmm # perform operation
fnmadd.h f23, f31, f28, f15, rne # perform operation
fnmadd.h f23, f31, f28, f15, rtz # perform operation
fnmadd.h f23, f31, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f31, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f31, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f31, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f31, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f31, f28, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x222e3aaf # load x3 with value 0x222e3aaf
sw x3, 0(x2) # store 0x222e3aaf in memory
flh f17, 0(x2) # load 0x222e3aaf from memory into f17
fnmadd.h f2, f13, f5, f17, dyn # perform operation
fnmadd.h f2, f13, f5, f17, rdn # perform operation
fnmadd.h f2, f13, f5, f17, rmm # perform operation
fnmadd.h f2, f13, f5, f17, rne # perform operation
fnmadd.h f2, f13, f5, f17, rtz # perform operation
fnmadd.h f2, f13, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f13, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f13, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f13, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f13, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f13, f5, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f15, 0(x2) # load 0x00008000 from memory into f15
la x2, scratch
li x3, 0x99b4bc00 # load x3 with value 0x99b4bc00
sw x3, 0(x2) # store 0x99b4bc00 in memory
flh f5, 0(x2) # load 0x99b4bc00 from memory into f5
fnmadd.h f26, f16, f15, f5, dyn # perform operation
fnmadd.h f26, f16, f15, f5, rdn # perform operation
fnmadd.h f26, f16, f15, f5, rmm # perform operation
fnmadd.h f26, f16, f15, f5, rne # perform operation
fnmadd.h f26, f16, f15, f5, rtz # perform operation
fnmadd.h f26, f16, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f16, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f16, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f16, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f16, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f16, f15, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f10, 0(x2) # load 0x00003c00 from memory into f10
la x2, scratch
li x3, 0x8763277b # load x3 with value 0x8763277b
sw x3, 0(x2) # store 0x8763277b in memory
flh f14, 0(x2) # load 0x8763277b from memory into f14
fnmadd.h f24, f17, f10, f14, dyn # perform operation
fnmadd.h f24, f17, f10, f14, rdn # perform operation
fnmadd.h f24, f17, f10, f14, rmm # perform operation
fnmadd.h f24, f17, f10, f14, rne # perform operation
fnmadd.h f24, f17, f10, f14, rtz # perform operation
fnmadd.h f24, f17, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f17, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f17, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f17, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f17, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f17, f10, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
la x2, scratch
li x3, 0x2d8ed44b # load x3 with value 0x2d8ed44b
sw x3, 0(x2) # store 0x2d8ed44b in memory
flh f29, 0(x2) # load 0x2d8ed44b from memory into f29
fnmadd.h f27, f9, f11, f29, dyn # perform operation
fnmadd.h f27, f9, f11, f29, rdn # perform operation
fnmadd.h f27, f9, f11, f29, rmm # perform operation
fnmadd.h f27, f9, f11, f29, rne # perform operation
fnmadd.h f27, f9, f11, f29, rtz # perform operation
fnmadd.h f27, f9, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f9, f11, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f19, 0(x2) # load 0x00003e00 from memory into f19
la x2, scratch
li x3, 0x30d01423 # load x3 with value 0x30d01423
sw x3, 0(x2) # store 0x30d01423 in memory
flh f22, 0(x2) # load 0x30d01423 from memory into f22
fnmadd.h f5, f26, f19, f22, dyn # perform operation
fnmadd.h f5, f26, f19, f22, rdn # perform operation
fnmadd.h f5, f26, f19, f22, rmm # perform operation
fnmadd.h f5, f26, f19, f22, rne # perform operation
fnmadd.h f5, f26, f19, f22, rtz # perform operation
fnmadd.h f5, f26, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f26, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f26, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f26, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f26, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f26, f19, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f5, 0(x2) # load 0x0000be00 from memory into f5
la x2, scratch
li x3, 0x4afdaf05 # load x3 with value 0x4afdaf05
sw x3, 0(x2) # store 0x4afdaf05 in memory
flh f25, 0(x2) # load 0x4afdaf05 from memory into f25
fnmadd.h f14, f11, f5, f25, dyn # perform operation
fnmadd.h f14, f11, f5, f25, rdn # perform operation
fnmadd.h f14, f11, f5, f25, rmm # perform operation
fnmadd.h f14, f11, f5, f25, rne # perform operation
fnmadd.h f14, f11, f5, f25, rtz # perform operation
fnmadd.h f14, f11, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f11, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f11, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f11, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f11, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f11, f5, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f15, 0(x2) # load 0x00004000 from memory into f15
la x2, scratch
li x3, 0x60fa2b83 # load x3 with value 0x60fa2b83
sw x3, 0(x2) # store 0x60fa2b83 in memory
flh f1, 0(x2) # load 0x60fa2b83 from memory into f1
fnmadd.h f13, f10, f15, f1, dyn # perform operation
fnmadd.h f13, f10, f15, f1, rdn # perform operation
fnmadd.h f13, f10, f15, f1, rmm # perform operation
fnmadd.h f13, f10, f15, f1, rne # perform operation
fnmadd.h f13, f10, f15, f1, rtz # perform operation
fnmadd.h f13, f10, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f10, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f10, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f10, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f10, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f10, f15, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f13, 0(x2) # load 0x0000c000 from memory into f13
la x2, scratch
li x3, 0x443e13d6 # load x3 with value 0x443e13d6
sw x3, 0(x2) # store 0x443e13d6 in memory
flh f5, 0(x2) # load 0x443e13d6 from memory into f5
fnmadd.h f1, f27, f13, f5, dyn # perform operation
fnmadd.h f1, f27, f13, f5, rdn # perform operation
fnmadd.h f1, f27, f13, f5, rmm # perform operation
fnmadd.h f1, f27, f13, f5, rne # perform operation
fnmadd.h f1, f27, f13, f5, rtz # perform operation
fnmadd.h f1, f27, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f27, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f27, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f27, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f27, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f27, f13, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f10, 0(x2) # load 0x00000400 from memory into f10
la x2, scratch
li x3, 0xced3db67 # load x3 with value 0xced3db67
sw x3, 0(x2) # store 0xced3db67 in memory
flh f2, 0(x2) # load 0xced3db67 from memory into f2
fnmadd.h f16, f14, f10, f2, dyn # perform operation
fnmadd.h f16, f14, f10, f2, rdn # perform operation
fnmadd.h f16, f14, f10, f2, rmm # perform operation
fnmadd.h f16, f14, f10, f2, rne # perform operation
fnmadd.h f16, f14, f10, f2, rtz # perform operation
fnmadd.h f16, f14, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f14, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f14, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f14, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f14, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f14, f10, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f9, 0(x2) # load 0x00008400 from memory into f9
la x2, scratch
li x3, 0x738fba0b # load x3 with value 0x738fba0b
sw x3, 0(x2) # store 0x738fba0b in memory
flh f19, 0(x2) # load 0x738fba0b from memory into f19
fnmadd.h f8, f22, f9, f19, dyn # perform operation
fnmadd.h f8, f22, f9, f19, rdn # perform operation
fnmadd.h f8, f22, f9, f19, rmm # perform operation
fnmadd.h f8, f22, f9, f19, rne # perform operation
fnmadd.h f8, f22, f9, f19, rtz # perform operation
fnmadd.h f8, f22, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f22, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f22, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f22, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f22, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f22, f9, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f12, 0(x2) # load 0x00007bff from memory into f12
la x2, scratch
li x3, 0xb81e2bb0 # load x3 with value 0xb81e2bb0
sw x3, 0(x2) # store 0xb81e2bb0 in memory
flh f15, 0(x2) # load 0xb81e2bb0 from memory into f15
fnmadd.h f21, f14, f12, f15, dyn # perform operation
fnmadd.h f21, f14, f12, f15, rdn # perform operation
fnmadd.h f21, f14, f12, f15, rmm # perform operation
fnmadd.h f21, f14, f12, f15, rne # perform operation
fnmadd.h f21, f14, f12, f15, rtz # perform operation
fnmadd.h f21, f14, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f14, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f14, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f14, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f14, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f14, f12, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f26, 0(x2) # load 0x0000fbff from memory into f26
la x2, scratch
li x3, 0x35da3ced # load x3 with value 0x35da3ced
sw x3, 0(x2) # store 0x35da3ced in memory
flh f6, 0(x2) # load 0x35da3ced from memory into f6
fnmadd.h f7, f23, f26, f6, dyn # perform operation
fnmadd.h f7, f23, f26, f6, rdn # perform operation
fnmadd.h f7, f23, f26, f6, rmm # perform operation
fnmadd.h f7, f23, f26, f6, rne # perform operation
fnmadd.h f7, f23, f26, f6, rtz # perform operation
fnmadd.h f7, f23, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f23, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f23, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f23, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f23, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f23, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f11, 0(x2) # load 0x000003ff from memory into f11
la x2, scratch
li x3, 0xe9fe864d # load x3 with value 0xe9fe864d
sw x3, 0(x2) # store 0xe9fe864d in memory
flh f24, 0(x2) # load 0xe9fe864d from memory into f24
fnmadd.h f5, f12, f11, f24, dyn # perform operation
fnmadd.h f5, f12, f11, f24, rdn # perform operation
fnmadd.h f5, f12, f11, f24, rmm # perform operation
fnmadd.h f5, f12, f11, f24, rne # perform operation
fnmadd.h f5, f12, f11, f24, rtz # perform operation
fnmadd.h f5, f12, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f12, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f12, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f12, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f12, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f12, f11, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f28, 0(x2) # load 0x000083ff from memory into f28
la x2, scratch
li x3, 0x71804682 # load x3 with value 0x71804682
sw x3, 0(x2) # store 0x71804682 in memory
flh f24, 0(x2) # load 0x71804682 from memory into f24
fnmadd.h f11, f7, f28, f24, dyn # perform operation
fnmadd.h f11, f7, f28, f24, rdn # perform operation
fnmadd.h f11, f7, f28, f24, rmm # perform operation
fnmadd.h f11, f7, f28, f24, rne # perform operation
fnmadd.h f11, f7, f28, f24, rtz # perform operation
fnmadd.h f11, f7, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f7, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f7, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f7, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f7, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f7, f28, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f8, 0(x2) # load 0x00000200 from memory into f8
la x2, scratch
li x3, 0x95d78959 # load x3 with value 0x95d78959
sw x3, 0(x2) # store 0x95d78959 in memory
flh f30, 0(x2) # load 0x95d78959 from memory into f30
fnmadd.h f15, f31, f8, f30, dyn # perform operation
fnmadd.h f15, f31, f8, f30, rdn # perform operation
fnmadd.h f15, f31, f8, f30, rmm # perform operation
fnmadd.h f15, f31, f8, f30, rne # perform operation
fnmadd.h f15, f31, f8, f30, rtz # perform operation
fnmadd.h f15, f31, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f31, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f31, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f31, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f31, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f31, f8, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f7, 0(x2) # load 0x00008200 from memory into f7
la x2, scratch
li x3, 0x1a200b58 # load x3 with value 0x1a200b58
sw x3, 0(x2) # store 0x1a200b58 in memory
flh f14, 0(x2) # load 0x1a200b58 from memory into f14
fnmadd.h f10, f3, f7, f14, dyn # perform operation
fnmadd.h f10, f3, f7, f14, rdn # perform operation
fnmadd.h f10, f3, f7, f14, rmm # perform operation
fnmadd.h f10, f3, f7, f14, rne # perform operation
fnmadd.h f10, f3, f7, f14, rtz # perform operation
fnmadd.h f10, f3, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f3, f7, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f2, 0(x2) # load 0x00000001 from memory into f2
la x2, scratch
li x3, 0x3fd1e5ac # load x3 with value 0x3fd1e5ac
sw x3, 0(x2) # store 0x3fd1e5ac in memory
flh f23, 0(x2) # load 0x3fd1e5ac from memory into f23
fnmadd.h f6, f29, f2, f23, dyn # perform operation
fnmadd.h f6, f29, f2, f23, rdn # perform operation
fnmadd.h f6, f29, f2, f23, rmm # perform operation
fnmadd.h f6, f29, f2, f23, rne # perform operation
fnmadd.h f6, f29, f2, f23, rtz # perform operation
fnmadd.h f6, f29, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f29, f2, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f3, 0(x2) # load 0x00008001 from memory into f3
la x2, scratch
li x3, 0xb1b6c4c2 # load x3 with value 0xb1b6c4c2
sw x3, 0(x2) # store 0xb1b6c4c2 in memory
flh f25, 0(x2) # load 0xb1b6c4c2 from memory into f25
fnmadd.h f1, f28, f3, f25, dyn # perform operation
fnmadd.h f1, f28, f3, f25, rdn # perform operation
fnmadd.h f1, f28, f3, f25, rmm # perform operation
fnmadd.h f1, f28, f3, f25, rne # perform operation
fnmadd.h f1, f28, f3, f25, rtz # perform operation
fnmadd.h f1, f28, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f28, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f28, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f28, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f28, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f28, f3, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f10, 0(x2) # load 0x00007c00 from memory into f10
la x2, scratch
li x3, 0x8caab51a # load x3 with value 0x8caab51a
sw x3, 0(x2) # store 0x8caab51a in memory
flh f29, 0(x2) # load 0x8caab51a from memory into f29
fnmadd.h f21, f28, f10, f29, dyn # perform operation
fnmadd.h f21, f28, f10, f29, rdn # perform operation
fnmadd.h f21, f28, f10, f29, rmm # perform operation
fnmadd.h f21, f28, f10, f29, rne # perform operation
fnmadd.h f21, f28, f10, f29, rtz # perform operation
fnmadd.h f21, f28, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f28, f10, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f5, 0(x2) # load 0x0000fc00 from memory into f5
la x2, scratch
li x3, 0xc5e9ef86 # load x3 with value 0xc5e9ef86
sw x3, 0(x2) # store 0xc5e9ef86 in memory
flh f12, 0(x2) # load 0xc5e9ef86 from memory into f12
fnmadd.h f1, f17, f5, f12, dyn # perform operation
fnmadd.h f1, f17, f5, f12, rdn # perform operation
fnmadd.h f1, f17, f5, f12, rmm # perform operation
fnmadd.h f1, f17, f5, f12, rne # perform operation
fnmadd.h f1, f17, f5, f12, rtz # perform operation
fnmadd.h f1, f17, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f17, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f17, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f17, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f17, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f17, f5, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f9, 0(x2) # load 0x00007e00 from memory into f9
la x2, scratch
li x3, 0x3cde9d9c # load x3 with value 0x3cde9d9c
sw x3, 0(x2) # store 0x3cde9d9c in memory
flh f30, 0(x2) # load 0x3cde9d9c from memory into f30
fnmadd.h f24, f29, f9, f30, dyn # perform operation
fnmadd.h f24, f29, f9, f30, rdn # perform operation
fnmadd.h f24, f29, f9, f30, rmm # perform operation
fnmadd.h f24, f29, f9, f30, rne # perform operation
fnmadd.h f24, f29, f9, f30, rtz # perform operation
fnmadd.h f24, f29, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f29, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f29, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f29, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f29, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f29, f9, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f1, 0(x2) # load 0x00007fff from memory into f1
la x2, scratch
li x3, 0x986616c5 # load x3 with value 0x986616c5
sw x3, 0(x2) # store 0x986616c5 in memory
flh f14, 0(x2) # load 0x986616c5 from memory into f14
fnmadd.h f27, f8, f1, f14, dyn # perform operation
fnmadd.h f27, f8, f1, f14, rdn # perform operation
fnmadd.h f27, f8, f1, f14, rmm # perform operation
fnmadd.h f27, f8, f1, f14, rne # perform operation
fnmadd.h f27, f8, f1, f14, rtz # perform operation
fnmadd.h f27, f8, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f8, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f8, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f8, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f8, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f8, f1, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f16, 0(x2) # load 0x0000fe00 from memory into f16
la x2, scratch
li x3, 0x209bb41c # load x3 with value 0x209bb41c
sw x3, 0(x2) # store 0x209bb41c in memory
flh f17, 0(x2) # load 0x209bb41c from memory into f17
fnmadd.h f6, f29, f16, f17, dyn # perform operation
fnmadd.h f6, f29, f16, f17, rdn # perform operation
fnmadd.h f6, f29, f16, f17, rmm # perform operation
fnmadd.h f6, f29, f16, f17, rne # perform operation
fnmadd.h f6, f29, f16, f17, rtz # perform operation
fnmadd.h f6, f29, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f29, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f29, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f29, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f29, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f29, f16, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f8, 0(x2) # load 0x00007c01 from memory into f8
la x2, scratch
li x3, 0x49c426e7 # load x3 with value 0x49c426e7
sw x3, 0(x2) # store 0x49c426e7 in memory
flh f2, 0(x2) # load 0x49c426e7 from memory into f2
fnmadd.h f10, f25, f8, f2, dyn # perform operation
fnmadd.h f10, f25, f8, f2, rdn # perform operation
fnmadd.h f10, f25, f8, f2, rmm # perform operation
fnmadd.h f10, f25, f8, f2, rne # perform operation
fnmadd.h f10, f25, f8, f2, rtz # perform operation
fnmadd.h f10, f25, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f25, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f25, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f25, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f25, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f25, f8, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f7, 0(x2) # load 0x00007dff from memory into f7
la x2, scratch
li x3, 0x8030adde # load x3 with value 0x8030adde
sw x3, 0(x2) # store 0x8030adde in memory
flh f11, 0(x2) # load 0x8030adde from memory into f11
fnmadd.h f26, f17, f7, f11, dyn # perform operation
fnmadd.h f26, f17, f7, f11, rdn # perform operation
fnmadd.h f26, f17, f7, f11, rmm # perform operation
fnmadd.h f26, f17, f7, f11, rne # perform operation
fnmadd.h f26, f17, f7, f11, rtz # perform operation
fnmadd.h f26, f17, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f17, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f17, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f17, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f17, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f17, f7, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f16, 0(x2) # load 0x0000fc01 from memory into f16
la x2, scratch
li x3, 0x6b1158c9 # load x3 with value 0x6b1158c9
sw x3, 0(x2) # store 0x6b1158c9 in memory
flh f25, 0(x2) # load 0x6b1158c9 from memory into f25
fnmadd.h f22, f31, f16, f25, dyn # perform operation
fnmadd.h f22, f31, f16, f25, rdn # perform operation
fnmadd.h f22, f31, f16, f25, rmm # perform operation
fnmadd.h f22, f31, f16, f25, rne # perform operation
fnmadd.h f22, f31, f16, f25, rtz # perform operation
fnmadd.h f22, f31, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f31, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f31, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f31, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f31, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f31, f16, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f7, 0(x2) # load 0x000058b4 from memory into f7
la x2, scratch
li x3, 0x630f04ea # load x3 with value 0x630f04ea
sw x3, 0(x2) # store 0x630f04ea in memory
flh f19, 0(x2) # load 0x630f04ea from memory into f19
fnmadd.h f20, f10, f7, f19, dyn # perform operation
fnmadd.h f20, f10, f7, f19, rdn # perform operation
fnmadd.h f20, f10, f7, f19, rmm # perform operation
fnmadd.h f20, f10, f7, f19, rne # perform operation
fnmadd.h f20, f10, f7, f19, rtz # perform operation
fnmadd.h f20, f10, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f10, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f10, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f10, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f10, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f10, f7, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f28, 0(x2) # load 0x0000c93a from memory into f28
la x2, scratch
li x3, 0x1681f589 # load x3 with value 0x1681f589
sw x3, 0(x2) # store 0x1681f589 in memory
flh f20, 0(x2) # load 0x1681f589 from memory into f20
fnmadd.h f10, f31, f28, f20, dyn # perform operation
fnmadd.h f10, f31, f28, f20, rdn # perform operation
fnmadd.h f10, f31, f28, f20, rmm # perform operation
fnmadd.h f10, f31, f28, f20, rne # perform operation
fnmadd.h f10, f31, f28, f20, rtz # perform operation
fnmadd.h f10, f31, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f31, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f31, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f31, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f31, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f31, f28, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f14, 0(x2) # load 0x00008000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x392f4ff6 # load x3 with value 0x392f4ff6
sw x3, 0(x2) # store 0x392f4ff6 in memory
flh f11, 0(x2) # load 0x392f4ff6 from memory into f11
fnmadd.h f13, f14, f12, f11, dyn # perform operation
fnmadd.h f13, f14, f12, f11, rdn # perform operation
fnmadd.h f13, f14, f12, f11, rmm # perform operation
fnmadd.h f13, f14, f12, f11, rne # perform operation
fnmadd.h f13, f14, f12, f11, rtz # perform operation
fnmadd.h f13, f14, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f14, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f14, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f14, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f14, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f14, f12, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f21, 0(x2) # load 0x00008000 from memory into f21
la x2, scratch
li x3, 0x0a8a61bd # load x3 with value 0x0a8a61bd
sw x3, 0(x2) # store 0x0a8a61bd in memory
flh f22, 0(x2) # load 0x0a8a61bd from memory into f22
fnmadd.h f6, f12, f21, f22, dyn # perform operation
fnmadd.h f6, f12, f21, f22, rdn # perform operation
fnmadd.h f6, f12, f21, f22, rmm # perform operation
fnmadd.h f6, f12, f21, f22, rne # perform operation
fnmadd.h f6, f12, f21, f22, rtz # perform operation
fnmadd.h f6, f12, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f12, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f12, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f12, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f12, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f12, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f23, 0(x2) # load 0x00008000 from memory into f23
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
la x2, scratch
li x3, 0xfaba0283 # load x3 with value 0xfaba0283
sw x3, 0(x2) # store 0xfaba0283 in memory
flh f30, 0(x2) # load 0xfaba0283 from memory into f30
fnmadd.h f8, f23, f16, f30, dyn # perform operation
fnmadd.h f8, f23, f16, f30, rdn # perform operation
fnmadd.h f8, f23, f16, f30, rmm # perform operation
fnmadd.h f8, f23, f16, f30, rne # perform operation
fnmadd.h f8, f23, f16, f30, rtz # perform operation
fnmadd.h f8, f23, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f23, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f23, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f23, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f23, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f23, f16, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f30, 0(x2) # load 0x00008000 from memory into f30
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f5, 0(x2) # load 0x0000bc00 from memory into f5
la x2, scratch
li x3, 0xf4ca90b2 # load x3 with value 0xf4ca90b2
sw x3, 0(x2) # store 0xf4ca90b2 in memory
flh f13, 0(x2) # load 0xf4ca90b2 from memory into f13
fnmadd.h f29, f30, f5, f13, dyn # perform operation
fnmadd.h f29, f30, f5, f13, rdn # perform operation
fnmadd.h f29, f30, f5, f13, rmm # perform operation
fnmadd.h f29, f30, f5, f13, rne # perform operation
fnmadd.h f29, f30, f5, f13, rtz # perform operation
fnmadd.h f29, f30, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f30, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f30, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f30, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f30, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f30, f5, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f21, 0(x2) # load 0x00008000 from memory into f21
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f17, 0(x2) # load 0x00003e00 from memory into f17
la x2, scratch
li x3, 0x27635006 # load x3 with value 0x27635006
sw x3, 0(x2) # store 0x27635006 in memory
flh f29, 0(x2) # load 0x27635006 from memory into f29
fnmadd.h f19, f21, f17, f29, dyn # perform operation
fnmadd.h f19, f21, f17, f29, rdn # perform operation
fnmadd.h f19, f21, f17, f29, rmm # perform operation
fnmadd.h f19, f21, f17, f29, rne # perform operation
fnmadd.h f19, f21, f17, f29, rtz # perform operation
fnmadd.h f19, f21, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f21, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f21, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f21, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f21, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f21, f17, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f15, 0(x2) # load 0x00008000 from memory into f15
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
la x2, scratch
li x3, 0x7cce2e18 # load x3 with value 0x7cce2e18
sw x3, 0(x2) # store 0x7cce2e18 in memory
flh f21, 0(x2) # load 0x7cce2e18 from memory into f21
fnmadd.h f28, f15, f1, f21, dyn # perform operation
fnmadd.h f28, f15, f1, f21, rdn # perform operation
fnmadd.h f28, f15, f1, f21, rmm # perform operation
fnmadd.h f28, f15, f1, f21, rne # perform operation
fnmadd.h f28, f15, f1, f21, rtz # perform operation
fnmadd.h f28, f15, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f15, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f15, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f15, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f15, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f15, f1, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f10, 0(x2) # load 0x00008000 from memory into f10
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f29, 0(x2) # load 0x00004000 from memory into f29
la x2, scratch
li x3, 0x9cb5f7a1 # load x3 with value 0x9cb5f7a1
sw x3, 0(x2) # store 0x9cb5f7a1 in memory
flh f21, 0(x2) # load 0x9cb5f7a1 from memory into f21
fnmadd.h f16, f10, f29, f21, dyn # perform operation
fnmadd.h f16, f10, f29, f21, rdn # perform operation
fnmadd.h f16, f10, f29, f21, rmm # perform operation
fnmadd.h f16, f10, f29, f21, rne # perform operation
fnmadd.h f16, f10, f29, f21, rtz # perform operation
fnmadd.h f16, f10, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f10, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f10, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f10, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f10, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f10, f29, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f2, 0(x2) # load 0x00008000 from memory into f2
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f23, 0(x2) # load 0x0000c000 from memory into f23
la x2, scratch
li x3, 0x502cedf8 # load x3 with value 0x502cedf8
sw x3, 0(x2) # store 0x502cedf8 in memory
flh f15, 0(x2) # load 0x502cedf8 from memory into f15
fnmadd.h f28, f2, f23, f15, dyn # perform operation
fnmadd.h f28, f2, f23, f15, rdn # perform operation
fnmadd.h f28, f2, f23, f15, rmm # perform operation
fnmadd.h f28, f2, f23, f15, rne # perform operation
fnmadd.h f28, f2, f23, f15, rtz # perform operation
fnmadd.h f28, f2, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f2, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f2, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f2, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f2, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f2, f23, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f16, 0(x2) # load 0x00008000 from memory into f16
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f13, 0(x2) # load 0x00000400 from memory into f13
la x2, scratch
li x3, 0x8609cf79 # load x3 with value 0x8609cf79
sw x3, 0(x2) # store 0x8609cf79 in memory
flh f25, 0(x2) # load 0x8609cf79 from memory into f25
fnmadd.h f6, f16, f13, f25, dyn # perform operation
fnmadd.h f6, f16, f13, f25, rdn # perform operation
fnmadd.h f6, f16, f13, f25, rmm # perform operation
fnmadd.h f6, f16, f13, f25, rne # perform operation
fnmadd.h f6, f16, f13, f25, rtz # perform operation
fnmadd.h f6, f16, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f16, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f16, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f16, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f16, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f16, f13, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f24, 0(x2) # load 0x00008000 from memory into f24
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f20, 0(x2) # load 0x00008400 from memory into f20
la x2, scratch
li x3, 0xf4f747e6 # load x3 with value 0xf4f747e6
sw x3, 0(x2) # store 0xf4f747e6 in memory
flh f23, 0(x2) # load 0xf4f747e6 from memory into f23
fnmadd.h f30, f24, f20, f23, dyn # perform operation
fnmadd.h f30, f24, f20, f23, rdn # perform operation
fnmadd.h f30, f24, f20, f23, rmm # perform operation
fnmadd.h f30, f24, f20, f23, rne # perform operation
fnmadd.h f30, f24, f20, f23, rtz # perform operation
fnmadd.h f30, f24, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f24, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f24, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f24, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f24, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f24, f20, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f26, 0(x2) # load 0x00008000 from memory into f26
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f8, 0(x2) # load 0x00007bff from memory into f8
la x2, scratch
li x3, 0xc5a7b360 # load x3 with value 0xc5a7b360
sw x3, 0(x2) # store 0xc5a7b360 in memory
flh f10, 0(x2) # load 0xc5a7b360 from memory into f10
fnmadd.h f22, f26, f8, f10, dyn # perform operation
fnmadd.h f22, f26, f8, f10, rdn # perform operation
fnmadd.h f22, f26, f8, f10, rmm # perform operation
fnmadd.h f22, f26, f8, f10, rne # perform operation
fnmadd.h f22, f26, f8, f10, rtz # perform operation
fnmadd.h f22, f26, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f26, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f26, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f26, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f26, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f26, f8, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f22, 0(x2) # load 0x00008000 from memory into f22
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f27, 0(x2) # load 0x0000fbff from memory into f27
la x2, scratch
li x3, 0xd5bf397b # load x3 with value 0xd5bf397b
sw x3, 0(x2) # store 0xd5bf397b in memory
flh f18, 0(x2) # load 0xd5bf397b from memory into f18
fnmadd.h f20, f22, f27, f18, dyn # perform operation
fnmadd.h f20, f22, f27, f18, rdn # perform operation
fnmadd.h f20, f22, f27, f18, rmm # perform operation
fnmadd.h f20, f22, f27, f18, rne # perform operation
fnmadd.h f20, f22, f27, f18, rtz # perform operation
fnmadd.h f20, f22, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f22, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f22, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f22, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f22, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f22, f27, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f8, 0(x2) # load 0x00008000 from memory into f8
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f6, 0(x2) # load 0x000003ff from memory into f6
la x2, scratch
li x3, 0x17557e51 # load x3 with value 0x17557e51
sw x3, 0(x2) # store 0x17557e51 in memory
flh f19, 0(x2) # load 0x17557e51 from memory into f19
fnmadd.h f20, f8, f6, f19, dyn # perform operation
fnmadd.h f20, f8, f6, f19, rdn # perform operation
fnmadd.h f20, f8, f6, f19, rmm # perform operation
fnmadd.h f20, f8, f6, f19, rne # perform operation
fnmadd.h f20, f8, f6, f19, rtz # perform operation
fnmadd.h f20, f8, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f8, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f8, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f8, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f8, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f8, f6, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f1, 0(x2) # load 0x00008000 from memory into f1
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f25, 0(x2) # load 0x000083ff from memory into f25
la x2, scratch
li x3, 0x2a3d6c86 # load x3 with value 0x2a3d6c86
sw x3, 0(x2) # store 0x2a3d6c86 in memory
flh f8, 0(x2) # load 0x2a3d6c86 from memory into f8
fnmadd.h f24, f1, f25, f8, dyn # perform operation
fnmadd.h f24, f1, f25, f8, rdn # perform operation
fnmadd.h f24, f1, f25, f8, rmm # perform operation
fnmadd.h f24, f1, f25, f8, rne # perform operation
fnmadd.h f24, f1, f25, f8, rtz # perform operation
fnmadd.h f24, f1, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f1, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f1, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f1, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f1, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f1, f25, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f23, 0(x2) # load 0x00008000 from memory into f23
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
la x2, scratch
li x3, 0x50000278 # load x3 with value 0x50000278
sw x3, 0(x2) # store 0x50000278 in memory
flh f9, 0(x2) # load 0x50000278 from memory into f9
fnmadd.h f1, f23, f6, f9, dyn # perform operation
fnmadd.h f1, f23, f6, f9, rdn # perform operation
fnmadd.h f1, f23, f6, f9, rmm # perform operation
fnmadd.h f1, f23, f6, f9, rne # perform operation
fnmadd.h f1, f23, f6, f9, rtz # perform operation
fnmadd.h f1, f23, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f23, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f23, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f23, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f23, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f23, f6, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f25, 0(x2) # load 0x00008000 from memory into f25
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f20, 0(x2) # load 0x00008200 from memory into f20
la x2, scratch
li x3, 0xe510b2ef # load x3 with value 0xe510b2ef
sw x3, 0(x2) # store 0xe510b2ef in memory
flh f28, 0(x2) # load 0xe510b2ef from memory into f28
fnmadd.h f2, f25, f20, f28, dyn # perform operation
fnmadd.h f2, f25, f20, f28, rdn # perform operation
fnmadd.h f2, f25, f20, f28, rmm # perform operation
fnmadd.h f2, f25, f20, f28, rne # perform operation
fnmadd.h f2, f25, f20, f28, rtz # perform operation
fnmadd.h f2, f25, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f25, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f25, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f25, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f25, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f25, f20, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f1, 0(x2) # load 0x00008000 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0xc61800b6 # load x3 with value 0xc61800b6
sw x3, 0(x2) # store 0xc61800b6 in memory
flh f18, 0(x2) # load 0xc61800b6 from memory into f18
fnmadd.h f30, f1, f13, f18, dyn # perform operation
fnmadd.h f30, f1, f13, f18, rdn # perform operation
fnmadd.h f30, f1, f13, f18, rmm # perform operation
fnmadd.h f30, f1, f13, f18, rne # perform operation
fnmadd.h f30, f1, f13, f18, rtz # perform operation
fnmadd.h f30, f1, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f1, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f1, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f1, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f1, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f1, f13, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f22, 0(x2) # load 0x00008000 from memory into f22
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
la x2, scratch
li x3, 0x6f28a116 # load x3 with value 0x6f28a116
sw x3, 0(x2) # store 0x6f28a116 in memory
flh f13, 0(x2) # load 0x6f28a116 from memory into f13
fnmadd.h f31, f22, f14, f13, dyn # perform operation
fnmadd.h f31, f22, f14, f13, rdn # perform operation
fnmadd.h f31, f22, f14, f13, rmm # perform operation
fnmadd.h f31, f22, f14, f13, rne # perform operation
fnmadd.h f31, f22, f14, f13, rtz # perform operation
fnmadd.h f31, f22, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f22, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f22, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f22, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f22, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f22, f14, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f28, 0(x2) # load 0x00008000 from memory into f28
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f27, 0(x2) # load 0x00007c00 from memory into f27
la x2, scratch
li x3, 0x49ddfe20 # load x3 with value 0x49ddfe20
sw x3, 0(x2) # store 0x49ddfe20 in memory
flh f14, 0(x2) # load 0x49ddfe20 from memory into f14
fnmadd.h f10, f28, f27, f14, dyn # perform operation
fnmadd.h f10, f28, f27, f14, rdn # perform operation
fnmadd.h f10, f28, f27, f14, rmm # perform operation
fnmadd.h f10, f28, f27, f14, rne # perform operation
fnmadd.h f10, f28, f27, f14, rtz # perform operation
fnmadd.h f10, f28, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f28, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f28, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f28, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f28, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f28, f27, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f16, 0(x2) # load 0x00008000 from memory into f16
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f2, 0(x2) # load 0x0000fc00 from memory into f2
la x2, scratch
li x3, 0x998f711d # load x3 with value 0x998f711d
sw x3, 0(x2) # store 0x998f711d in memory
flh f10, 0(x2) # load 0x998f711d from memory into f10
fnmadd.h f20, f16, f2, f10, dyn # perform operation
fnmadd.h f20, f16, f2, f10, rdn # perform operation
fnmadd.h f20, f16, f2, f10, rmm # perform operation
fnmadd.h f20, f16, f2, f10, rne # perform operation
fnmadd.h f20, f16, f2, f10, rtz # perform operation
fnmadd.h f20, f16, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f16, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f16, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f16, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f16, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f16, f2, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f1, 0(x2) # load 0x00007e00 from memory into f1
la x2, scratch
li x3, 0x1be22f9b # load x3 with value 0x1be22f9b
sw x3, 0(x2) # store 0x1be22f9b in memory
flh f21, 0(x2) # load 0x1be22f9b from memory into f21
fnmadd.h f28, f12, f1, f21, dyn # perform operation
fnmadd.h f28, f12, f1, f21, rdn # perform operation
fnmadd.h f28, f12, f1, f21, rmm # perform operation
fnmadd.h f28, f12, f1, f21, rne # perform operation
fnmadd.h f28, f12, f1, f21, rtz # perform operation
fnmadd.h f28, f12, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f12, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f12, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f12, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f12, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f12, f1, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f6, 0(x2) # load 0x00008000 from memory into f6
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f29, 0(x2) # load 0x00007fff from memory into f29
la x2, scratch
li x3, 0x00d1c5d2 # load x3 with value 0x00d1c5d2
sw x3, 0(x2) # store 0x00d1c5d2 in memory
flh f10, 0(x2) # load 0x00d1c5d2 from memory into f10
fnmadd.h f11, f6, f29, f10, dyn # perform operation
fnmadd.h f11, f6, f29, f10, rdn # perform operation
fnmadd.h f11, f6, f29, f10, rmm # perform operation
fnmadd.h f11, f6, f29, f10, rne # perform operation
fnmadd.h f11, f6, f29, f10, rtz # perform operation
fnmadd.h f11, f6, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f6, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f6, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f6, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f6, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f6, f29, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f20, 0(x2) # load 0x00008000 from memory into f20
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f29, 0(x2) # load 0x0000fe00 from memory into f29
la x2, scratch
li x3, 0xbc7bbea6 # load x3 with value 0xbc7bbea6
sw x3, 0(x2) # store 0xbc7bbea6 in memory
flh f14, 0(x2) # load 0xbc7bbea6 from memory into f14
fnmadd.h f15, f20, f29, f14, dyn # perform operation
fnmadd.h f15, f20, f29, f14, rdn # perform operation
fnmadd.h f15, f20, f29, f14, rmm # perform operation
fnmadd.h f15, f20, f29, f14, rne # perform operation
fnmadd.h f15, f20, f29, f14, rtz # perform operation
fnmadd.h f15, f20, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f20, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f20, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f20, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f20, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f20, f29, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f14, 0(x2) # load 0x00008000 from memory into f14
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
la x2, scratch
li x3, 0xc1a3aa4a # load x3 with value 0xc1a3aa4a
sw x3, 0(x2) # store 0xc1a3aa4a in memory
flh f21, 0(x2) # load 0xc1a3aa4a from memory into f21
fnmadd.h f24, f14, f26, f21, dyn # perform operation
fnmadd.h f24, f14, f26, f21, rdn # perform operation
fnmadd.h f24, f14, f26, f21, rmm # perform operation
fnmadd.h f24, f14, f26, f21, rne # perform operation
fnmadd.h f24, f14, f26, f21, rtz # perform operation
fnmadd.h f24, f14, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f14, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f14, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f14, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f14, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f14, f26, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f25, 0(x2) # load 0x00008000 from memory into f25
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f9, 0(x2) # load 0x00007dff from memory into f9
la x2, scratch
li x3, 0x49e4fa2d # load x3 with value 0x49e4fa2d
sw x3, 0(x2) # store 0x49e4fa2d in memory
flh f1, 0(x2) # load 0x49e4fa2d from memory into f1
fnmadd.h f15, f25, f9, f1, dyn # perform operation
fnmadd.h f15, f25, f9, f1, rdn # perform operation
fnmadd.h f15, f25, f9, f1, rmm # perform operation
fnmadd.h f15, f25, f9, f1, rne # perform operation
fnmadd.h f15, f25, f9, f1, rtz # perform operation
fnmadd.h f15, f25, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f25, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f25, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f25, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f25, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f25, f9, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f16, 0(x2) # load 0x00008000 from memory into f16
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f21, 0(x2) # load 0x0000fc01 from memory into f21
la x2, scratch
li x3, 0x313bb30c # load x3 with value 0x313bb30c
sw x3, 0(x2) # store 0x313bb30c in memory
flh f20, 0(x2) # load 0x313bb30c from memory into f20
fnmadd.h f2, f16, f21, f20, dyn # perform operation
fnmadd.h f2, f16, f21, f20, rdn # perform operation
fnmadd.h f2, f16, f21, f20, rmm # perform operation
fnmadd.h f2, f16, f21, f20, rne # perform operation
fnmadd.h f2, f16, f21, f20, rtz # perform operation
fnmadd.h f2, f16, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f16, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f16, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f16, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f16, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f16, f21, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f7, 0(x2) # load 0x00008000 from memory into f7
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f17, 0(x2) # load 0x000058b4 from memory into f17
la x2, scratch
li x3, 0x4646be0d # load x3 with value 0x4646be0d
sw x3, 0(x2) # store 0x4646be0d in memory
flh f28, 0(x2) # load 0x4646be0d from memory into f28
fnmadd.h f5, f7, f17, f28, dyn # perform operation
fnmadd.h f5, f7, f17, f28, rdn # perform operation
fnmadd.h f5, f7, f17, f28, rmm # perform operation
fnmadd.h f5, f7, f17, f28, rne # perform operation
fnmadd.h f5, f7, f17, f28, rtz # perform operation
fnmadd.h f5, f7, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f7, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f7, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f7, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f7, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f7, f17, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f30, 0(x2) # load 0x00008000 from memory into f30
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f20, 0(x2) # load 0x0000c93a from memory into f20
la x2, scratch
li x3, 0x3066c408 # load x3 with value 0x3066c408
sw x3, 0(x2) # store 0x3066c408 in memory
flh f26, 0(x2) # load 0x3066c408 from memory into f26
fnmadd.h f7, f30, f20, f26, dyn # perform operation
fnmadd.h f7, f30, f20, f26, rdn # perform operation
fnmadd.h f7, f30, f20, f26, rmm # perform operation
fnmadd.h f7, f30, f20, f26, rne # perform operation
fnmadd.h f7, f30, f20, f26, rtz # perform operation
fnmadd.h f7, f30, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f30, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f30, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f30, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f30, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f30, f20, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0x8801d857 # load x3 with value 0x8801d857
sw x3, 0(x2) # store 0x8801d857 in memory
flh f3, 0(x2) # load 0x8801d857 from memory into f3
fnmadd.h f29, f16, f15, f3, dyn # perform operation
fnmadd.h f29, f16, f15, f3, rdn # perform operation
fnmadd.h f29, f16, f15, f3, rmm # perform operation
fnmadd.h f29, f16, f15, f3, rne # perform operation
fnmadd.h f29, f16, f15, f3, rtz # perform operation
fnmadd.h f29, f16, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f16, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f16, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f16, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f16, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f16, f15, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f27, 0(x2) # load 0x00003c00 from memory into f27
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f9, 0(x2) # load 0x00008000 from memory into f9
la x2, scratch
li x3, 0x62a67223 # load x3 with value 0x62a67223
sw x3, 0(x2) # store 0x62a67223 in memory
flh f12, 0(x2) # load 0x62a67223 from memory into f12
fnmadd.h f1, f27, f9, f12, dyn # perform operation
fnmadd.h f1, f27, f9, f12, rdn # perform operation
fnmadd.h f1, f27, f9, f12, rmm # perform operation
fnmadd.h f1, f27, f9, f12, rne # perform operation
fnmadd.h f1, f27, f9, f12, rtz # perform operation
fnmadd.h f1, f27, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f27, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f27, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f27, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f27, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f27, f9, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f10, 0(x2) # load 0x00003c00 from memory into f10
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f3, 0(x2) # load 0x00003c00 from memory into f3
la x2, scratch
li x3, 0x837c402d # load x3 with value 0x837c402d
sw x3, 0(x2) # store 0x837c402d in memory
flh f2, 0(x2) # load 0x837c402d from memory into f2
fnmadd.h f17, f10, f3, f2, dyn # perform operation
fnmadd.h f17, f10, f3, f2, rdn # perform operation
fnmadd.h f17, f10, f3, f2, rmm # perform operation
fnmadd.h f17, f10, f3, f2, rne # perform operation
fnmadd.h f17, f10, f3, f2, rtz # perform operation
fnmadd.h f17, f10, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f10, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f10, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f10, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f10, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f10, f3, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f3, 0(x2) # load 0x00003c00 from memory into f3
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f27, 0(x2) # load 0x0000bc00 from memory into f27
la x2, scratch
li x3, 0x18e776c8 # load x3 with value 0x18e776c8
sw x3, 0(x2) # store 0x18e776c8 in memory
flh f5, 0(x2) # load 0x18e776c8 from memory into f5
fnmadd.h f16, f3, f27, f5, dyn # perform operation
fnmadd.h f16, f3, f27, f5, rdn # perform operation
fnmadd.h f16, f3, f27, f5, rmm # perform operation
fnmadd.h f16, f3, f27, f5, rne # perform operation
fnmadd.h f16, f3, f27, f5, rtz # perform operation
fnmadd.h f16, f3, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f3, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f3, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f3, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f3, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f3, f27, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f28, 0(x2) # load 0x00003c00 from memory into f28
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
la x2, scratch
li x3, 0x4dd6144e # load x3 with value 0x4dd6144e
sw x3, 0(x2) # store 0x4dd6144e in memory
flh f31, 0(x2) # load 0x4dd6144e from memory into f31
fnmadd.h f10, f28, f21, f31, dyn # perform operation
fnmadd.h f10, f28, f21, f31, rdn # perform operation
fnmadd.h f10, f28, f21, f31, rmm # perform operation
fnmadd.h f10, f28, f21, f31, rne # perform operation
fnmadd.h f10, f28, f21, f31, rtz # perform operation
fnmadd.h f10, f28, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f28, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f28, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f28, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f28, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f28, f21, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f31, 0(x2) # load 0x00003c00 from memory into f31
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
la x2, scratch
li x3, 0xa8d0a44a # load x3 with value 0xa8d0a44a
sw x3, 0(x2) # store 0xa8d0a44a in memory
flh f7, 0(x2) # load 0xa8d0a44a from memory into f7
fnmadd.h f9, f31, f1, f7, dyn # perform operation
fnmadd.h f9, f31, f1, f7, rdn # perform operation
fnmadd.h f9, f31, f1, f7, rmm # perform operation
fnmadd.h f9, f31, f1, f7, rne # perform operation
fnmadd.h f9, f31, f1, f7, rtz # perform operation
fnmadd.h f9, f31, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f31, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f31, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f31, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f31, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f31, f1, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f20, 0(x2) # load 0x00003c00 from memory into f20
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
la x2, scratch
li x3, 0x5518e6b0 # load x3 with value 0x5518e6b0
sw x3, 0(x2) # store 0x5518e6b0 in memory
flh f17, 0(x2) # load 0x5518e6b0 from memory into f17
fnmadd.h f18, f20, f6, f17, dyn # perform operation
fnmadd.h f18, f20, f6, f17, rdn # perform operation
fnmadd.h f18, f20, f6, f17, rmm # perform operation
fnmadd.h f18, f20, f6, f17, rne # perform operation
fnmadd.h f18, f20, f6, f17, rtz # perform operation
fnmadd.h f18, f20, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f20, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f20, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f20, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f20, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f20, f6, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f14, 0(x2) # load 0x00003c00 from memory into f14
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f10, 0(x2) # load 0x0000c000 from memory into f10
la x2, scratch
li x3, 0xdb6a8bfe # load x3 with value 0xdb6a8bfe
sw x3, 0(x2) # store 0xdb6a8bfe in memory
flh f16, 0(x2) # load 0xdb6a8bfe from memory into f16
fnmadd.h f21, f14, f10, f16, dyn # perform operation
fnmadd.h f21, f14, f10, f16, rdn # perform operation
fnmadd.h f21, f14, f10, f16, rmm # perform operation
fnmadd.h f21, f14, f10, f16, rne # perform operation
fnmadd.h f21, f14, f10, f16, rtz # perform operation
fnmadd.h f21, f14, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f14, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f14, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f14, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f14, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f14, f10, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f19, 0(x2) # load 0x00003c00 from memory into f19
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f26, 0(x2) # load 0x00000400 from memory into f26
la x2, scratch
li x3, 0xcf2379d6 # load x3 with value 0xcf2379d6
sw x3, 0(x2) # store 0xcf2379d6 in memory
flh f13, 0(x2) # load 0xcf2379d6 from memory into f13
fnmadd.h f14, f19, f26, f13, dyn # perform operation
fnmadd.h f14, f19, f26, f13, rdn # perform operation
fnmadd.h f14, f19, f26, f13, rmm # perform operation
fnmadd.h f14, f19, f26, f13, rne # perform operation
fnmadd.h f14, f19, f26, f13, rtz # perform operation
fnmadd.h f14, f19, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f19, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f19, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f19, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f19, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f19, f26, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f22, 0(x2) # load 0x00008400 from memory into f22
la x2, scratch
li x3, 0x1d375681 # load x3 with value 0x1d375681
sw x3, 0(x2) # store 0x1d375681 in memory
flh f8, 0(x2) # load 0x1d375681 from memory into f8
fnmadd.h f29, f16, f22, f8, dyn # perform operation
fnmadd.h f29, f16, f22, f8, rdn # perform operation
fnmadd.h f29, f16, f22, f8, rmm # perform operation
fnmadd.h f29, f16, f22, f8, rne # perform operation
fnmadd.h f29, f16, f22, f8, rtz # perform operation
fnmadd.h f29, f16, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f16, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f16, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f16, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f16, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f16, f22, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f19, 0(x2) # load 0x00003c00 from memory into f19
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f29, 0(x2) # load 0x00007bff from memory into f29
la x2, scratch
li x3, 0x47d8065e # load x3 with value 0x47d8065e
sw x3, 0(x2) # store 0x47d8065e in memory
flh f9, 0(x2) # load 0x47d8065e from memory into f9
fnmadd.h f18, f19, f29, f9, dyn # perform operation
fnmadd.h f18, f19, f29, f9, rdn # perform operation
fnmadd.h f18, f19, f29, f9, rmm # perform operation
fnmadd.h f18, f19, f29, f9, rne # perform operation
fnmadd.h f18, f19, f29, f9, rtz # perform operation
fnmadd.h f18, f19, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f19, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f19, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f19, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f19, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f19, f29, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f10, 0(x2) # load 0x00003c00 from memory into f10
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f19, 0(x2) # load 0x0000fbff from memory into f19
la x2, scratch
li x3, 0x4b9729d4 # load x3 with value 0x4b9729d4
sw x3, 0(x2) # store 0x4b9729d4 in memory
flh f22, 0(x2) # load 0x4b9729d4 from memory into f22
fnmadd.h f15, f10, f19, f22, dyn # perform operation
fnmadd.h f15, f10, f19, f22, rdn # perform operation
fnmadd.h f15, f10, f19, f22, rmm # perform operation
fnmadd.h f15, f10, f19, f22, rne # perform operation
fnmadd.h f15, f10, f19, f22, rtz # perform operation
fnmadd.h f15, f10, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f10, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f10, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f10, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f10, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f10, f19, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f11, 0(x2) # load 0x000003ff from memory into f11
la x2, scratch
li x3, 0x651837e2 # load x3 with value 0x651837e2
sw x3, 0(x2) # store 0x651837e2 in memory
flh f22, 0(x2) # load 0x651837e2 from memory into f22
fnmadd.h f15, f8, f11, f22, dyn # perform operation
fnmadd.h f15, f8, f11, f22, rdn # perform operation
fnmadd.h f15, f8, f11, f22, rmm # perform operation
fnmadd.h f15, f8, f11, f22, rne # perform operation
fnmadd.h f15, f8, f11, f22, rtz # perform operation
fnmadd.h f15, f8, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f8, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f8, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f8, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f8, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f8, f11, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f11, 0(x2) # load 0x00003c00 from memory into f11
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f9, 0(x2) # load 0x000083ff from memory into f9
la x2, scratch
li x3, 0x7a449472 # load x3 with value 0x7a449472
sw x3, 0(x2) # store 0x7a449472 in memory
flh f7, 0(x2) # load 0x7a449472 from memory into f7
fnmadd.h f25, f11, f9, f7, dyn # perform operation
fnmadd.h f25, f11, f9, f7, rdn # perform operation
fnmadd.h f25, f11, f9, f7, rmm # perform operation
fnmadd.h f25, f11, f9, f7, rne # perform operation
fnmadd.h f25, f11, f9, f7, rtz # perform operation
fnmadd.h f25, f11, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f11, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f11, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f11, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f11, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f11, f9, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f11, 0(x2) # load 0x00003c00 from memory into f11
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f3, 0(x2) # load 0x00000200 from memory into f3
la x2, scratch
li x3, 0x8e484cf3 # load x3 with value 0x8e484cf3
sw x3, 0(x2) # store 0x8e484cf3 in memory
flh f19, 0(x2) # load 0x8e484cf3 from memory into f19
fnmadd.h f5, f11, f3, f19, dyn # perform operation
fnmadd.h f5, f11, f3, f19, rdn # perform operation
fnmadd.h f5, f11, f3, f19, rmm # perform operation
fnmadd.h f5, f11, f3, f19, rne # perform operation
fnmadd.h f5, f11, f3, f19, rtz # perform operation
fnmadd.h f5, f11, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f11, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f11, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f11, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f11, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f11, f3, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f1, 0(x2) # load 0x00008200 from memory into f1
la x2, scratch
li x3, 0x2ae3c6c2 # load x3 with value 0x2ae3c6c2
sw x3, 0(x2) # store 0x2ae3c6c2 in memory
flh f20, 0(x2) # load 0x2ae3c6c2 from memory into f20
fnmadd.h f9, f16, f1, f20, dyn # perform operation
fnmadd.h f9, f16, f1, f20, rdn # perform operation
fnmadd.h f9, f16, f1, f20, rmm # perform operation
fnmadd.h f9, f16, f1, f20, rne # perform operation
fnmadd.h f9, f16, f1, f20, rtz # perform operation
fnmadd.h f9, f16, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f16, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f16, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f16, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f16, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f16, f1, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f28, 0(x2) # load 0x00003c00 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x5da9ef5e # load x3 with value 0x5da9ef5e
sw x3, 0(x2) # store 0x5da9ef5e in memory
flh f22, 0(x2) # load 0x5da9ef5e from memory into f22
fnmadd.h f27, f28, f10, f22, dyn # perform operation
fnmadd.h f27, f28, f10, f22, rdn # perform operation
fnmadd.h f27, f28, f10, f22, rmm # perform operation
fnmadd.h f27, f28, f10, f22, rne # perform operation
fnmadd.h f27, f28, f10, f22, rtz # perform operation
fnmadd.h f27, f28, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f28, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f28, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f28, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f28, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f28, f10, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f28, 0(x2) # load 0x00003c00 from memory into f28
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f8, 0(x2) # load 0x00008001 from memory into f8
la x2, scratch
li x3, 0x314372a5 # load x3 with value 0x314372a5
sw x3, 0(x2) # store 0x314372a5 in memory
flh f3, 0(x2) # load 0x314372a5 from memory into f3
fnmadd.h f5, f28, f8, f3, dyn # perform operation
fnmadd.h f5, f28, f8, f3, rdn # perform operation
fnmadd.h f5, f28, f8, f3, rmm # perform operation
fnmadd.h f5, f28, f8, f3, rne # perform operation
fnmadd.h f5, f28, f8, f3, rtz # perform operation
fnmadd.h f5, f28, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f28, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f28, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f28, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f28, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f28, f8, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f15, 0(x2) # load 0x00003c00 from memory into f15
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
la x2, scratch
li x3, 0xaef103db # load x3 with value 0xaef103db
sw x3, 0(x2) # store 0xaef103db in memory
flh f24, 0(x2) # load 0xaef103db from memory into f24
fnmadd.h f29, f15, f19, f24, dyn # perform operation
fnmadd.h f29, f15, f19, f24, rdn # perform operation
fnmadd.h f29, f15, f19, f24, rmm # perform operation
fnmadd.h f29, f15, f19, f24, rne # perform operation
fnmadd.h f29, f15, f19, f24, rtz # perform operation
fnmadd.h f29, f15, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f15, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f15, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f15, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f15, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f15, f19, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f12, 0(x2) # load 0x00003c00 from memory into f12
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f10, 0(x2) # load 0x0000fc00 from memory into f10
la x2, scratch
li x3, 0xc3bb2744 # load x3 with value 0xc3bb2744
sw x3, 0(x2) # store 0xc3bb2744 in memory
flh f3, 0(x2) # load 0xc3bb2744 from memory into f3
fnmadd.h f2, f12, f10, f3, dyn # perform operation
fnmadd.h f2, f12, f10, f3, rdn # perform operation
fnmadd.h f2, f12, f10, f3, rmm # perform operation
fnmadd.h f2, f12, f10, f3, rne # perform operation
fnmadd.h f2, f12, f10, f3, rtz # perform operation
fnmadd.h f2, f12, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f12, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f12, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f12, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f12, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f12, f10, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f20, 0(x2) # load 0x00003c00 from memory into f20
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f2, 0(x2) # load 0x00007e00 from memory into f2
la x2, scratch
li x3, 0xc2d6c0d0 # load x3 with value 0xc2d6c0d0
sw x3, 0(x2) # store 0xc2d6c0d0 in memory
flh f24, 0(x2) # load 0xc2d6c0d0 from memory into f24
fnmadd.h f30, f20, f2, f24, dyn # perform operation
fnmadd.h f30, f20, f2, f24, rdn # perform operation
fnmadd.h f30, f20, f2, f24, rmm # perform operation
fnmadd.h f30, f20, f2, f24, rne # perform operation
fnmadd.h f30, f20, f2, f24, rtz # perform operation
fnmadd.h f30, f20, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f20, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f20, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f20, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f20, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f20, f2, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f26, 0(x2) # load 0x00003c00 from memory into f26
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f9, 0(x2) # load 0x00007fff from memory into f9
la x2, scratch
li x3, 0x662f09e7 # load x3 with value 0x662f09e7
sw x3, 0(x2) # store 0x662f09e7 in memory
flh f11, 0(x2) # load 0x662f09e7 from memory into f11
fnmadd.h f6, f26, f9, f11, dyn # perform operation
fnmadd.h f6, f26, f9, f11, rdn # perform operation
fnmadd.h f6, f26, f9, f11, rmm # perform operation
fnmadd.h f6, f26, f9, f11, rne # perform operation
fnmadd.h f6, f26, f9, f11, rtz # perform operation
fnmadd.h f6, f26, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f26, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f26, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f26, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f26, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f26, f9, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f20, 0(x2) # load 0x0000fe00 from memory into f20
la x2, scratch
li x3, 0x479cd2ce # load x3 with value 0x479cd2ce
sw x3, 0(x2) # store 0x479cd2ce in memory
flh f21, 0(x2) # load 0x479cd2ce from memory into f21
fnmadd.h f19, f8, f20, f21, dyn # perform operation
fnmadd.h f19, f8, f20, f21, rdn # perform operation
fnmadd.h f19, f8, f20, f21, rmm # perform operation
fnmadd.h f19, f8, f20, f21, rne # perform operation
fnmadd.h f19, f8, f20, f21, rtz # perform operation
fnmadd.h f19, f8, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f8, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f8, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f8, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f8, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f8, f20, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f26, 0(x2) # load 0x00003c00 from memory into f26
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f1, 0(x2) # load 0x00007c01 from memory into f1
la x2, scratch
li x3, 0xa88943cd # load x3 with value 0xa88943cd
sw x3, 0(x2) # store 0xa88943cd in memory
flh f19, 0(x2) # load 0xa88943cd from memory into f19
fnmadd.h f2, f26, f1, f19, dyn # perform operation
fnmadd.h f2, f26, f1, f19, rdn # perform operation
fnmadd.h f2, f26, f1, f19, rmm # perform operation
fnmadd.h f2, f26, f1, f19, rne # perform operation
fnmadd.h f2, f26, f1, f19, rtz # perform operation
fnmadd.h f2, f26, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f26, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f26, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f26, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f26, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f26, f1, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f22, 0(x2) # load 0x00003c00 from memory into f22
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f30, 0(x2) # load 0x00007dff from memory into f30
la x2, scratch
li x3, 0x810ed531 # load x3 with value 0x810ed531
sw x3, 0(x2) # store 0x810ed531 in memory
flh f20, 0(x2) # load 0x810ed531 from memory into f20
fnmadd.h f12, f22, f30, f20, dyn # perform operation
fnmadd.h f12, f22, f30, f20, rdn # perform operation
fnmadd.h f12, f22, f30, f20, rmm # perform operation
fnmadd.h f12, f22, f30, f20, rne # perform operation
fnmadd.h f12, f22, f30, f20, rtz # perform operation
fnmadd.h f12, f22, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f22, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f22, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f22, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f22, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f22, f30, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f21, 0(x2) # load 0x00003c00 from memory into f21
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f9, 0(x2) # load 0x0000fc01 from memory into f9
la x2, scratch
li x3, 0xfed3a1da # load x3 with value 0xfed3a1da
sw x3, 0(x2) # store 0xfed3a1da in memory
flh f29, 0(x2) # load 0xfed3a1da from memory into f29
fnmadd.h f13, f21, f9, f29, dyn # perform operation
fnmadd.h f13, f21, f9, f29, rdn # perform operation
fnmadd.h f13, f21, f9, f29, rmm # perform operation
fnmadd.h f13, f21, f9, f29, rne # perform operation
fnmadd.h f13, f21, f9, f29, rtz # perform operation
fnmadd.h f13, f21, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f21, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f21, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f21, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f21, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f21, f9, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f5, 0(x2) # load 0x00003c00 from memory into f5
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f10, 0(x2) # load 0x000058b4 from memory into f10
la x2, scratch
li x3, 0xc71ae7f1 # load x3 with value 0xc71ae7f1
sw x3, 0(x2) # store 0xc71ae7f1 in memory
flh f19, 0(x2) # load 0xc71ae7f1 from memory into f19
fnmadd.h f11, f5, f10, f19, dyn # perform operation
fnmadd.h f11, f5, f10, f19, rdn # perform operation
fnmadd.h f11, f5, f10, f19, rmm # perform operation
fnmadd.h f11, f5, f10, f19, rne # perform operation
fnmadd.h f11, f5, f10, f19, rtz # perform operation
fnmadd.h f11, f5, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f5, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f5, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f5, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f5, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f5, f10, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f28, 0(x2) # load 0x00003c00 from memory into f28
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f1, 0(x2) # load 0x0000c93a from memory into f1
la x2, scratch
li x3, 0x377cf14e # load x3 with value 0x377cf14e
sw x3, 0(x2) # store 0x377cf14e in memory
flh f11, 0(x2) # load 0x377cf14e from memory into f11
fnmadd.h f9, f28, f1, f11, dyn # perform operation
fnmadd.h f9, f28, f1, f11, rdn # perform operation
fnmadd.h f9, f28, f1, f11, rmm # perform operation
fnmadd.h f9, f28, f1, f11, rne # perform operation
fnmadd.h f9, f28, f1, f11, rtz # perform operation
fnmadd.h f9, f28, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f28, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f28, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f28, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f28, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f28, f1, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f28, 0(x2) # load 0x0000bc00 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x772ada4a # load x3 with value 0x772ada4a
sw x3, 0(x2) # store 0x772ada4a in memory
flh f15, 0(x2) # load 0x772ada4a from memory into f15
fnmadd.h f27, f28, f21, f15, dyn # perform operation
fnmadd.h f27, f28, f21, f15, rdn # perform operation
fnmadd.h f27, f28, f21, f15, rmm # perform operation
fnmadd.h f27, f28, f21, f15, rne # perform operation
fnmadd.h f27, f28, f21, f15, rtz # perform operation
fnmadd.h f27, f28, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f28, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f28, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f28, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f28, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f28, f21, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f19, 0(x2) # load 0x0000bc00 from memory into f19
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f24, 0(x2) # load 0x00008000 from memory into f24
la x2, scratch
li x3, 0x66a63bec # load x3 with value 0x66a63bec
sw x3, 0(x2) # store 0x66a63bec in memory
flh f22, 0(x2) # load 0x66a63bec from memory into f22
fnmadd.h f29, f19, f24, f22, dyn # perform operation
fnmadd.h f29, f19, f24, f22, rdn # perform operation
fnmadd.h f29, f19, f24, f22, rmm # perform operation
fnmadd.h f29, f19, f24, f22, rne # perform operation
fnmadd.h f29, f19, f24, f22, rtz # perform operation
fnmadd.h f29, f19, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f19, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f19, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f19, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f19, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f19, f24, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f18, 0(x2) # load 0x0000bc00 from memory into f18
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f30, 0(x2) # load 0x00003c00 from memory into f30
la x2, scratch
li x3, 0xd6fc6e37 # load x3 with value 0xd6fc6e37
sw x3, 0(x2) # store 0xd6fc6e37 in memory
flh f3, 0(x2) # load 0xd6fc6e37 from memory into f3
fnmadd.h f23, f18, f30, f3, dyn # perform operation
fnmadd.h f23, f18, f30, f3, rdn # perform operation
fnmadd.h f23, f18, f30, f3, rmm # perform operation
fnmadd.h f23, f18, f30, f3, rne # perform operation
fnmadd.h f23, f18, f30, f3, rtz # perform operation
fnmadd.h f23, f18, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f18, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f18, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f18, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f18, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f18, f30, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f29, 0(x2) # load 0x0000bc00 from memory into f29
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f16, 0(x2) # load 0x0000bc00 from memory into f16
la x2, scratch
li x3, 0xddd3c2a4 # load x3 with value 0xddd3c2a4
sw x3, 0(x2) # store 0xddd3c2a4 in memory
flh f27, 0(x2) # load 0xddd3c2a4 from memory into f27
fnmadd.h f23, f29, f16, f27, dyn # perform operation
fnmadd.h f23, f29, f16, f27, rdn # perform operation
fnmadd.h f23, f29, f16, f27, rmm # perform operation
fnmadd.h f23, f29, f16, f27, rne # perform operation
fnmadd.h f23, f29, f16, f27, rtz # perform operation
fnmadd.h f23, f29, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f29, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f29, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f29, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f29, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f29, f16, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f5, 0(x2) # load 0x0000bc00 from memory into f5
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f20, 0(x2) # load 0x00003e00 from memory into f20
la x2, scratch
li x3, 0x6fe14ea0 # load x3 with value 0x6fe14ea0
sw x3, 0(x2) # store 0x6fe14ea0 in memory
flh f10, 0(x2) # load 0x6fe14ea0 from memory into f10
fnmadd.h f16, f5, f20, f10, dyn # perform operation
fnmadd.h f16, f5, f20, f10, rdn # perform operation
fnmadd.h f16, f5, f20, f10, rmm # perform operation
fnmadd.h f16, f5, f20, f10, rne # perform operation
fnmadd.h f16, f5, f20, f10, rtz # perform operation
fnmadd.h f16, f5, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f5, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f5, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f5, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f5, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f5, f20, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f5, 0(x2) # load 0x0000be00 from memory into f5
la x2, scratch
li x3, 0x5409bb25 # load x3 with value 0x5409bb25
sw x3, 0(x2) # store 0x5409bb25 in memory
flh f16, 0(x2) # load 0x5409bb25 from memory into f16
fnmadd.h f27, f11, f5, f16, dyn # perform operation
fnmadd.h f27, f11, f5, f16, rdn # perform operation
fnmadd.h f27, f11, f5, f16, rmm # perform operation
fnmadd.h f27, f11, f5, f16, rne # perform operation
fnmadd.h f27, f11, f5, f16, rtz # perform operation
fnmadd.h f27, f11, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f11, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f11, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f11, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f11, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f11, f5, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f21, 0(x2) # load 0x00004000 from memory into f21
la x2, scratch
li x3, 0xbcd4aaf1 # load x3 with value 0xbcd4aaf1
sw x3, 0(x2) # store 0xbcd4aaf1 in memory
flh f7, 0(x2) # load 0xbcd4aaf1 from memory into f7
fnmadd.h f9, f6, f21, f7, dyn # perform operation
fnmadd.h f9, f6, f21, f7, rdn # perform operation
fnmadd.h f9, f6, f21, f7, rmm # perform operation
fnmadd.h f9, f6, f21, f7, rne # perform operation
fnmadd.h f9, f6, f21, f7, rtz # perform operation
fnmadd.h f9, f6, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f6, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f6, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f6, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f6, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f6, f21, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f30, 0(x2) # load 0x0000bc00 from memory into f30
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f11, 0(x2) # load 0x0000c000 from memory into f11
la x2, scratch
li x3, 0x916674d4 # load x3 with value 0x916674d4
sw x3, 0(x2) # store 0x916674d4 in memory
flh f7, 0(x2) # load 0x916674d4 from memory into f7
fnmadd.h f5, f30, f11, f7, dyn # perform operation
fnmadd.h f5, f30, f11, f7, rdn # perform operation
fnmadd.h f5, f30, f11, f7, rmm # perform operation
fnmadd.h f5, f30, f11, f7, rne # perform operation
fnmadd.h f5, f30, f11, f7, rtz # perform operation
fnmadd.h f5, f30, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f30, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f30, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f30, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f30, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f30, f11, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f13, 0(x2) # load 0x0000bc00 from memory into f13
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f9, 0(x2) # load 0x00000400 from memory into f9
la x2, scratch
li x3, 0x14917711 # load x3 with value 0x14917711
sw x3, 0(x2) # store 0x14917711 in memory
flh f2, 0(x2) # load 0x14917711 from memory into f2
fnmadd.h f1, f13, f9, f2, dyn # perform operation
fnmadd.h f1, f13, f9, f2, rdn # perform operation
fnmadd.h f1, f13, f9, f2, rmm # perform operation
fnmadd.h f1, f13, f9, f2, rne # perform operation
fnmadd.h f1, f13, f9, f2, rtz # perform operation
fnmadd.h f1, f13, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f13, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f13, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f13, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f13, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f13, f9, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f25, 0(x2) # load 0x00008400 from memory into f25
la x2, scratch
li x3, 0xde24b9d8 # load x3 with value 0xde24b9d8
sw x3, 0(x2) # store 0xde24b9d8 in memory
flh f9, 0(x2) # load 0xde24b9d8 from memory into f9
fnmadd.h f31, f11, f25, f9, dyn # perform operation
fnmadd.h f31, f11, f25, f9, rdn # perform operation
fnmadd.h f31, f11, f25, f9, rmm # perform operation
fnmadd.h f31, f11, f25, f9, rne # perform operation
fnmadd.h f31, f11, f25, f9, rtz # perform operation
fnmadd.h f31, f11, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f11, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f11, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f11, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f11, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f11, f25, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f5, 0(x2) # load 0x0000bc00 from memory into f5
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f20, 0(x2) # load 0x00007bff from memory into f20
la x2, scratch
li x3, 0x7bf2844a # load x3 with value 0x7bf2844a
sw x3, 0(x2) # store 0x7bf2844a in memory
flh f1, 0(x2) # load 0x7bf2844a from memory into f1
fnmadd.h f14, f5, f20, f1, dyn # perform operation
fnmadd.h f14, f5, f20, f1, rdn # perform operation
fnmadd.h f14, f5, f20, f1, rmm # perform operation
fnmadd.h f14, f5, f20, f1, rne # perform operation
fnmadd.h f14, f5, f20, f1, rtz # perform operation
fnmadd.h f14, f5, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f5, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f5, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f5, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f5, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f5, f20, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
la x2, scratch
li x3, 0xe5ab1ebf # load x3 with value 0xe5ab1ebf
sw x3, 0(x2) # store 0xe5ab1ebf in memory
flh f8, 0(x2) # load 0xe5ab1ebf from memory into f8
fnmadd.h f14, f6, f13, f8, dyn # perform operation
fnmadd.h f14, f6, f13, f8, rdn # perform operation
fnmadd.h f14, f6, f13, f8, rmm # perform operation
fnmadd.h f14, f6, f13, f8, rne # perform operation
fnmadd.h f14, f6, f13, f8, rtz # perform operation
fnmadd.h f14, f6, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f6, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f6, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f6, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f6, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f6, f13, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f5, 0(x2) # load 0x0000bc00 from memory into f5
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f28, 0(x2) # load 0x000003ff from memory into f28
la x2, scratch
li x3, 0x11d80e97 # load x3 with value 0x11d80e97
sw x3, 0(x2) # store 0x11d80e97 in memory
flh f8, 0(x2) # load 0x11d80e97 from memory into f8
fnmadd.h f25, f5, f28, f8, dyn # perform operation
fnmadd.h f25, f5, f28, f8, rdn # perform operation
fnmadd.h f25, f5, f28, f8, rmm # perform operation
fnmadd.h f25, f5, f28, f8, rne # perform operation
fnmadd.h f25, f5, f28, f8, rtz # perform operation
fnmadd.h f25, f5, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f5, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f5, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f5, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f5, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f5, f28, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f30, 0(x2) # load 0x0000bc00 from memory into f30
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f2, 0(x2) # load 0x000083ff from memory into f2
la x2, scratch
li x3, 0x37061e52 # load x3 with value 0x37061e52
sw x3, 0(x2) # store 0x37061e52 in memory
flh f9, 0(x2) # load 0x37061e52 from memory into f9
fnmadd.h f3, f30, f2, f9, dyn # perform operation
fnmadd.h f3, f30, f2, f9, rdn # perform operation
fnmadd.h f3, f30, f2, f9, rmm # perform operation
fnmadd.h f3, f30, f2, f9, rne # perform operation
fnmadd.h f3, f30, f2, f9, rtz # perform operation
fnmadd.h f3, f30, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f30, f2, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f23, 0(x2) # load 0x0000bc00 from memory into f23
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f7, 0(x2) # load 0x00000200 from memory into f7
la x2, scratch
li x3, 0xa519e174 # load x3 with value 0xa519e174
sw x3, 0(x2) # store 0xa519e174 in memory
flh f21, 0(x2) # load 0xa519e174 from memory into f21
fnmadd.h f10, f23, f7, f21, dyn # perform operation
fnmadd.h f10, f23, f7, f21, rdn # perform operation
fnmadd.h f10, f23, f7, f21, rmm # perform operation
fnmadd.h f10, f23, f7, f21, rne # perform operation
fnmadd.h f10, f23, f7, f21, rtz # perform operation
fnmadd.h f10, f23, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f23, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f23, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f23, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f23, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f23, f7, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f16, 0(x2) # load 0x0000bc00 from memory into f16
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
la x2, scratch
li x3, 0x28e50af3 # load x3 with value 0x28e50af3
sw x3, 0(x2) # store 0x28e50af3 in memory
flh f2, 0(x2) # load 0x28e50af3 from memory into f2
fnmadd.h f19, f16, f17, f2, dyn # perform operation
fnmadd.h f19, f16, f17, f2, rdn # perform operation
fnmadd.h f19, f16, f17, f2, rmm # perform operation
fnmadd.h f19, f16, f17, f2, rne # perform operation
fnmadd.h f19, f16, f17, f2, rtz # perform operation
fnmadd.h f19, f16, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f16, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f16, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f16, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f16, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f16, f17, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f22, 0(x2) # load 0x0000bc00 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0xf4035bec # load x3 with value 0xf4035bec
sw x3, 0(x2) # store 0xf4035bec in memory
flh f6, 0(x2) # load 0xf4035bec from memory into f6
fnmadd.h f14, f22, f3, f6, dyn # perform operation
fnmadd.h f14, f22, f3, f6, rdn # perform operation
fnmadd.h f14, f22, f3, f6, rmm # perform operation
fnmadd.h f14, f22, f3, f6, rne # perform operation
fnmadd.h f14, f22, f3, f6, rtz # perform operation
fnmadd.h f14, f22, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f22, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f22, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f22, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f22, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f22, f3, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f2, 0(x2) # load 0x0000bc00 from memory into f2
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f20, 0(x2) # load 0x00008001 from memory into f20
la x2, scratch
li x3, 0xae9a2ad1 # load x3 with value 0xae9a2ad1
sw x3, 0(x2) # store 0xae9a2ad1 in memory
flh f22, 0(x2) # load 0xae9a2ad1 from memory into f22
fnmadd.h f18, f2, f20, f22, dyn # perform operation
fnmadd.h f18, f2, f20, f22, rdn # perform operation
fnmadd.h f18, f2, f20, f22, rmm # perform operation
fnmadd.h f18, f2, f20, f22, rne # perform operation
fnmadd.h f18, f2, f20, f22, rtz # perform operation
fnmadd.h f18, f2, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f2, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f2, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f2, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f2, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f2, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f28, 0(x2) # load 0x0000bc00 from memory into f28
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f22, 0(x2) # load 0x00007c00 from memory into f22
la x2, scratch
li x3, 0x730656ea # load x3 with value 0x730656ea
sw x3, 0(x2) # store 0x730656ea in memory
flh f9, 0(x2) # load 0x730656ea from memory into f9
fnmadd.h f27, f28, f22, f9, dyn # perform operation
fnmadd.h f27, f28, f22, f9, rdn # perform operation
fnmadd.h f27, f28, f22, f9, rmm # perform operation
fnmadd.h f27, f28, f22, f9, rne # perform operation
fnmadd.h f27, f28, f22, f9, rtz # perform operation
fnmadd.h f27, f28, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f28, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f28, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f28, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f28, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f28, f22, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f22, 0(x2) # load 0x0000bc00 from memory into f22
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f16, 0(x2) # load 0x0000fc00 from memory into f16
la x2, scratch
li x3, 0x8b916999 # load x3 with value 0x8b916999
sw x3, 0(x2) # store 0x8b916999 in memory
flh f11, 0(x2) # load 0x8b916999 from memory into f11
fnmadd.h f23, f22, f16, f11, dyn # perform operation
fnmadd.h f23, f22, f16, f11, rdn # perform operation
fnmadd.h f23, f22, f16, f11, rmm # perform operation
fnmadd.h f23, f22, f16, f11, rne # perform operation
fnmadd.h f23, f22, f16, f11, rtz # perform operation
fnmadd.h f23, f22, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f22, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f22, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f22, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f22, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f22, f16, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f14, 0(x2) # load 0x0000bc00 from memory into f14
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f6, 0(x2) # load 0x00007e00 from memory into f6
la x2, scratch
li x3, 0x67abe8a1 # load x3 with value 0x67abe8a1
sw x3, 0(x2) # store 0x67abe8a1 in memory
flh f20, 0(x2) # load 0x67abe8a1 from memory into f20
fnmadd.h f31, f14, f6, f20, dyn # perform operation
fnmadd.h f31, f14, f6, f20, rdn # perform operation
fnmadd.h f31, f14, f6, f20, rmm # perform operation
fnmadd.h f31, f14, f6, f20, rne # perform operation
fnmadd.h f31, f14, f6, f20, rtz # perform operation
fnmadd.h f31, f14, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f14, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f14, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f14, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f14, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f14, f6, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f15, 0(x2) # load 0x00007fff from memory into f15
la x2, scratch
li x3, 0x07304a56 # load x3 with value 0x07304a56
sw x3, 0(x2) # store 0x07304a56 in memory
flh f12, 0(x2) # load 0x07304a56 from memory into f12
fnmadd.h f28, f11, f15, f12, dyn # perform operation
fnmadd.h f28, f11, f15, f12, rdn # perform operation
fnmadd.h f28, f11, f15, f12, rmm # perform operation
fnmadd.h f28, f11, f15, f12, rne # perform operation
fnmadd.h f28, f11, f15, f12, rtz # perform operation
fnmadd.h f28, f11, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f11, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f11, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f11, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f11, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f11, f15, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f3, 0(x2) # load 0x0000bc00 from memory into f3
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f18, 0(x2) # load 0x0000fe00 from memory into f18
la x2, scratch
li x3, 0x2cb01baf # load x3 with value 0x2cb01baf
sw x3, 0(x2) # store 0x2cb01baf in memory
flh f13, 0(x2) # load 0x2cb01baf from memory into f13
fnmadd.h f8, f3, f18, f13, dyn # perform operation
fnmadd.h f8, f3, f18, f13, rdn # perform operation
fnmadd.h f8, f3, f18, f13, rmm # perform operation
fnmadd.h f8, f3, f18, f13, rne # perform operation
fnmadd.h f8, f3, f18, f13, rtz # perform operation
fnmadd.h f8, f3, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f3, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f3, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f3, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f3, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f3, f18, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f9, 0(x2) # load 0x0000bc00 from memory into f9
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f25, 0(x2) # load 0x00007c01 from memory into f25
la x2, scratch
li x3, 0x7570e405 # load x3 with value 0x7570e405
sw x3, 0(x2) # store 0x7570e405 in memory
flh f23, 0(x2) # load 0x7570e405 from memory into f23
fnmadd.h f21, f9, f25, f23, dyn # perform operation
fnmadd.h f21, f9, f25, f23, rdn # perform operation
fnmadd.h f21, f9, f25, f23, rmm # perform operation
fnmadd.h f21, f9, f25, f23, rne # perform operation
fnmadd.h f21, f9, f25, f23, rtz # perform operation
fnmadd.h f21, f9, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f9, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f9, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f9, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f9, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f9, f25, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f17, 0(x2) # load 0x0000bc00 from memory into f17
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f31, 0(x2) # load 0x00007dff from memory into f31
la x2, scratch
li x3, 0xaafc382c # load x3 with value 0xaafc382c
sw x3, 0(x2) # store 0xaafc382c in memory
flh f29, 0(x2) # load 0xaafc382c from memory into f29
fnmadd.h f11, f17, f31, f29, dyn # perform operation
fnmadd.h f11, f17, f31, f29, rdn # perform operation
fnmadd.h f11, f17, f31, f29, rmm # perform operation
fnmadd.h f11, f17, f31, f29, rne # perform operation
fnmadd.h f11, f17, f31, f29, rtz # perform operation
fnmadd.h f11, f17, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f17, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f17, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f17, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f17, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f17, f31, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f8, 0(x2) # load 0x0000bc00 from memory into f8
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f17, 0(x2) # load 0x0000fc01 from memory into f17
la x2, scratch
li x3, 0xbafa518c # load x3 with value 0xbafa518c
sw x3, 0(x2) # store 0xbafa518c in memory
flh f10, 0(x2) # load 0xbafa518c from memory into f10
fnmadd.h f27, f8, f17, f10, dyn # perform operation
fnmadd.h f27, f8, f17, f10, rdn # perform operation
fnmadd.h f27, f8, f17, f10, rmm # perform operation
fnmadd.h f27, f8, f17, f10, rne # perform operation
fnmadd.h f27, f8, f17, f10, rtz # perform operation
fnmadd.h f27, f8, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f8, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f8, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f8, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f8, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f8, f17, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f12, 0(x2) # load 0x0000bc00 from memory into f12
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f15, 0(x2) # load 0x000058b4 from memory into f15
la x2, scratch
li x3, 0x85eb560a # load x3 with value 0x85eb560a
sw x3, 0(x2) # store 0x85eb560a in memory
flh f17, 0(x2) # load 0x85eb560a from memory into f17
fnmadd.h f25, f12, f15, f17, dyn # perform operation
fnmadd.h f25, f12, f15, f17, rdn # perform operation
fnmadd.h f25, f12, f15, f17, rmm # perform operation
fnmadd.h f25, f12, f15, f17, rne # perform operation
fnmadd.h f25, f12, f15, f17, rtz # perform operation
fnmadd.h f25, f12, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f12, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f12, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f12, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f12, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f12, f15, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f27, 0(x2) # load 0x0000c93a from memory into f27
la x2, scratch
li x3, 0x462f7758 # load x3 with value 0x462f7758
sw x3, 0(x2) # store 0x462f7758 in memory
flh f2, 0(x2) # load 0x462f7758 from memory into f2
fnmadd.h f12, f11, f27, f2, dyn # perform operation
fnmadd.h f12, f11, f27, f2, rdn # perform operation
fnmadd.h f12, f11, f27, f2, rmm # perform operation
fnmadd.h f12, f11, f27, f2, rne # perform operation
fnmadd.h f12, f11, f27, f2, rtz # perform operation
fnmadd.h f12, f11, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f11, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f11, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f11, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f11, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f11, f27, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f14, 0(x2) # load 0x00003e00 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x7f1b1d5a # load x3 with value 0x7f1b1d5a
sw x3, 0(x2) # store 0x7f1b1d5a in memory
flh f9, 0(x2) # load 0x7f1b1d5a from memory into f9
fnmadd.h f20, f14, f28, f9, dyn # perform operation
fnmadd.h f20, f14, f28, f9, rdn # perform operation
fnmadd.h f20, f14, f28, f9, rmm # perform operation
fnmadd.h f20, f14, f28, f9, rne # perform operation
fnmadd.h f20, f14, f28, f9, rtz # perform operation
fnmadd.h f20, f14, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f14, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f14, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f14, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f14, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f14, f28, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f19, 0(x2) # load 0x00003e00 from memory into f19
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f26, 0(x2) # load 0x00008000 from memory into f26
la x2, scratch
li x3, 0xbda0d6a7 # load x3 with value 0xbda0d6a7
sw x3, 0(x2) # store 0xbda0d6a7 in memory
flh f9, 0(x2) # load 0xbda0d6a7 from memory into f9
fnmadd.h f6, f19, f26, f9, dyn # perform operation
fnmadd.h f6, f19, f26, f9, rdn # perform operation
fnmadd.h f6, f19, f26, f9, rmm # perform operation
fnmadd.h f6, f19, f26, f9, rne # perform operation
fnmadd.h f6, f19, f26, f9, rtz # perform operation
fnmadd.h f6, f19, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f19, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f19, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f19, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f19, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f19, f26, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f27, 0(x2) # load 0x00003e00 from memory into f27
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f14, 0(x2) # load 0x00003c00 from memory into f14
la x2, scratch
li x3, 0xb5751c05 # load x3 with value 0xb5751c05
sw x3, 0(x2) # store 0xb5751c05 in memory
flh f8, 0(x2) # load 0xb5751c05 from memory into f8
fnmadd.h f2, f27, f14, f8, dyn # perform operation
fnmadd.h f2, f27, f14, f8, rdn # perform operation
fnmadd.h f2, f27, f14, f8, rmm # perform operation
fnmadd.h f2, f27, f14, f8, rne # perform operation
fnmadd.h f2, f27, f14, f8, rtz # perform operation
fnmadd.h f2, f27, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f27, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f27, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f27, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f27, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f27, f14, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f16, 0(x2) # load 0x00003e00 from memory into f16
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f23, 0(x2) # load 0x0000bc00 from memory into f23
la x2, scratch
li x3, 0x6e002e8b # load x3 with value 0x6e002e8b
sw x3, 0(x2) # store 0x6e002e8b in memory
flh f28, 0(x2) # load 0x6e002e8b from memory into f28
fnmadd.h f21, f16, f23, f28, dyn # perform operation
fnmadd.h f21, f16, f23, f28, rdn # perform operation
fnmadd.h f21, f16, f23, f28, rmm # perform operation
fnmadd.h f21, f16, f23, f28, rne # perform operation
fnmadd.h f21, f16, f23, f28, rtz # perform operation
fnmadd.h f21, f16, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f16, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f16, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f16, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f16, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f16, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f12, 0(x2) # load 0x00003e00 from memory into f12
la x2, scratch
li x3, 0x89c0e25b # load x3 with value 0x89c0e25b
sw x3, 0(x2) # store 0x89c0e25b in memory
flh f29, 0(x2) # load 0x89c0e25b from memory into f29
fnmadd.h f5, f10, f12, f29, dyn # perform operation
fnmadd.h f5, f10, f12, f29, rdn # perform operation
fnmadd.h f5, f10, f12, f29, rmm # perform operation
fnmadd.h f5, f10, f12, f29, rne # perform operation
fnmadd.h f5, f10, f12, f29, rtz # perform operation
fnmadd.h f5, f10, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f10, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f10, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f10, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f10, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f10, f12, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f24, 0(x2) # load 0x0000be00 from memory into f24
la x2, scratch
li x3, 0xe1b8ce04 # load x3 with value 0xe1b8ce04
sw x3, 0(x2) # store 0xe1b8ce04 in memory
flh f27, 0(x2) # load 0xe1b8ce04 from memory into f27
fnmadd.h f18, f10, f24, f27, dyn # perform operation
fnmadd.h f18, f10, f24, f27, rdn # perform operation
fnmadd.h f18, f10, f24, f27, rmm # perform operation
fnmadd.h f18, f10, f24, f27, rne # perform operation
fnmadd.h f18, f10, f24, f27, rtz # perform operation
fnmadd.h f18, f10, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f10, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f10, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f10, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f10, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f10, f24, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f8, 0(x2) # load 0x00003e00 from memory into f8
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f11, 0(x2) # load 0x00004000 from memory into f11
la x2, scratch
li x3, 0xc8dc4670 # load x3 with value 0xc8dc4670
sw x3, 0(x2) # store 0xc8dc4670 in memory
flh f28, 0(x2) # load 0xc8dc4670 from memory into f28
fnmadd.h f15, f8, f11, f28, dyn # perform operation
fnmadd.h f15, f8, f11, f28, rdn # perform operation
fnmadd.h f15, f8, f11, f28, rmm # perform operation
fnmadd.h f15, f8, f11, f28, rne # perform operation
fnmadd.h f15, f8, f11, f28, rtz # perform operation
fnmadd.h f15, f8, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f8, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f8, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f8, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f8, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f8, f11, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f6, 0(x2) # load 0x00003e00 from memory into f6
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f17, 0(x2) # load 0x0000c000 from memory into f17
la x2, scratch
li x3, 0x236ec93f # load x3 with value 0x236ec93f
sw x3, 0(x2) # store 0x236ec93f in memory
flh f29, 0(x2) # load 0x236ec93f from memory into f29
fnmadd.h f11, f6, f17, f29, dyn # perform operation
fnmadd.h f11, f6, f17, f29, rdn # perform operation
fnmadd.h f11, f6, f17, f29, rmm # perform operation
fnmadd.h f11, f6, f17, f29, rne # perform operation
fnmadd.h f11, f6, f17, f29, rtz # perform operation
fnmadd.h f11, f6, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f6, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f6, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f6, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f6, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f6, f17, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f11, 0(x2) # load 0x00003e00 from memory into f11
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f20, 0(x2) # load 0x00000400 from memory into f20
la x2, scratch
li x3, 0x76783412 # load x3 with value 0x76783412
sw x3, 0(x2) # store 0x76783412 in memory
flh f10, 0(x2) # load 0x76783412 from memory into f10
fnmadd.h f14, f11, f20, f10, dyn # perform operation
fnmadd.h f14, f11, f20, f10, rdn # perform operation
fnmadd.h f14, f11, f20, f10, rmm # perform operation
fnmadd.h f14, f11, f20, f10, rne # perform operation
fnmadd.h f14, f11, f20, f10, rtz # perform operation
fnmadd.h f14, f11, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f11, f20, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f22, 0(x2) # load 0x00003e00 from memory into f22
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f31, 0(x2) # load 0x00008400 from memory into f31
la x2, scratch
li x3, 0xd75f9ce2 # load x3 with value 0xd75f9ce2
sw x3, 0(x2) # store 0xd75f9ce2 in memory
flh f5, 0(x2) # load 0xd75f9ce2 from memory into f5
fnmadd.h f2, f22, f31, f5, dyn # perform operation
fnmadd.h f2, f22, f31, f5, rdn # perform operation
fnmadd.h f2, f22, f31, f5, rmm # perform operation
fnmadd.h f2, f22, f31, f5, rne # perform operation
fnmadd.h f2, f22, f31, f5, rtz # perform operation
fnmadd.h f2, f22, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f22, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f22, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f22, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f22, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f22, f31, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f17, 0(x2) # load 0x00003e00 from memory into f17
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f28, 0(x2) # load 0x00007bff from memory into f28
la x2, scratch
li x3, 0xb1f28e50 # load x3 with value 0xb1f28e50
sw x3, 0(x2) # store 0xb1f28e50 in memory
flh f22, 0(x2) # load 0xb1f28e50 from memory into f22
fnmadd.h f3, f17, f28, f22, dyn # perform operation
fnmadd.h f3, f17, f28, f22, rdn # perform operation
fnmadd.h f3, f17, f28, f22, rmm # perform operation
fnmadd.h f3, f17, f28, f22, rne # perform operation
fnmadd.h f3, f17, f28, f22, rtz # perform operation
fnmadd.h f3, f17, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f17, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f17, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f17, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f17, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f17, f28, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f22, 0(x2) # load 0x00003e00 from memory into f22
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
la x2, scratch
li x3, 0xf185d4ee # load x3 with value 0xf185d4ee
sw x3, 0(x2) # store 0xf185d4ee in memory
flh f3, 0(x2) # load 0xf185d4ee from memory into f3
fnmadd.h f27, f22, f15, f3, dyn # perform operation
fnmadd.h f27, f22, f15, f3, rdn # perform operation
fnmadd.h f27, f22, f15, f3, rmm # perform operation
fnmadd.h f27, f22, f15, f3, rne # perform operation
fnmadd.h f27, f22, f15, f3, rtz # perform operation
fnmadd.h f27, f22, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f22, f15, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f25, 0(x2) # load 0x00003e00 from memory into f25
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f19, 0(x2) # load 0x000003ff from memory into f19
la x2, scratch
li x3, 0x7c24034b # load x3 with value 0x7c24034b
sw x3, 0(x2) # store 0x7c24034b in memory
flh f8, 0(x2) # load 0x7c24034b from memory into f8
fnmadd.h f30, f25, f19, f8, dyn # perform operation
fnmadd.h f30, f25, f19, f8, rdn # perform operation
fnmadd.h f30, f25, f19, f8, rmm # perform operation
fnmadd.h f30, f25, f19, f8, rne # perform operation
fnmadd.h f30, f25, f19, f8, rtz # perform operation
fnmadd.h f30, f25, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f25, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f25, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f25, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f25, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f25, f19, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f2, 0(x2) # load 0x00003e00 from memory into f2
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f9, 0(x2) # load 0x000083ff from memory into f9
la x2, scratch
li x3, 0xd6b6def5 # load x3 with value 0xd6b6def5
sw x3, 0(x2) # store 0xd6b6def5 in memory
flh f23, 0(x2) # load 0xd6b6def5 from memory into f23
fnmadd.h f28, f2, f9, f23, dyn # perform operation
fnmadd.h f28, f2, f9, f23, rdn # perform operation
fnmadd.h f28, f2, f9, f23, rmm # perform operation
fnmadd.h f28, f2, f9, f23, rne # perform operation
fnmadd.h f28, f2, f9, f23, rtz # perform operation
fnmadd.h f28, f2, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f2, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f2, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f2, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f2, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f2, f9, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f2, 0(x2) # load 0x00003e00 from memory into f2
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
la x2, scratch
li x3, 0xd4014f83 # load x3 with value 0xd4014f83
sw x3, 0(x2) # store 0xd4014f83 in memory
flh f18, 0(x2) # load 0xd4014f83 from memory into f18
fnmadd.h f22, f2, f19, f18, dyn # perform operation
fnmadd.h f22, f2, f19, f18, rdn # perform operation
fnmadd.h f22, f2, f19, f18, rmm # perform operation
fnmadd.h f22, f2, f19, f18, rne # perform operation
fnmadd.h f22, f2, f19, f18, rtz # perform operation
fnmadd.h f22, f2, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f2, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f2, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f2, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f2, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f2, f19, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f13, 0(x2) # load 0x00003e00 from memory into f13
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f5, 0(x2) # load 0x00008200 from memory into f5
la x2, scratch
li x3, 0xa4f084e2 # load x3 with value 0xa4f084e2
sw x3, 0(x2) # store 0xa4f084e2 in memory
flh f12, 0(x2) # load 0xa4f084e2 from memory into f12
fnmadd.h f18, f13, f5, f12, dyn # perform operation
fnmadd.h f18, f13, f5, f12, rdn # perform operation
fnmadd.h f18, f13, f5, f12, rmm # perform operation
fnmadd.h f18, f13, f5, f12, rne # perform operation
fnmadd.h f18, f13, f5, f12, rtz # perform operation
fnmadd.h f18, f13, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f13, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f13, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f13, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f13, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f13, f5, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0x3bf3bf7e # load x3 with value 0x3bf3bf7e
sw x3, 0(x2) # store 0x3bf3bf7e in memory
flh f12, 0(x2) # load 0x3bf3bf7e from memory into f12
fnmadd.h f8, f7, f13, f12, dyn # perform operation
fnmadd.h f8, f7, f13, f12, rdn # perform operation
fnmadd.h f8, f7, f13, f12, rmm # perform operation
fnmadd.h f8, f7, f13, f12, rne # perform operation
fnmadd.h f8, f7, f13, f12, rtz # perform operation
fnmadd.h f8, f7, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f7, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f7, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f7, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f7, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f7, f13, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f16, 0(x2) # load 0x00003e00 from memory into f16
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f3, 0(x2) # load 0x00008001 from memory into f3
la x2, scratch
li x3, 0xdb9d7851 # load x3 with value 0xdb9d7851
sw x3, 0(x2) # store 0xdb9d7851 in memory
flh f29, 0(x2) # load 0xdb9d7851 from memory into f29
fnmadd.h f9, f16, f3, f29, dyn # perform operation
fnmadd.h f9, f16, f3, f29, rdn # perform operation
fnmadd.h f9, f16, f3, f29, rmm # perform operation
fnmadd.h f9, f16, f3, f29, rne # perform operation
fnmadd.h f9, f16, f3, f29, rtz # perform operation
fnmadd.h f9, f16, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f16, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f16, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f16, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f16, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f16, f3, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f1, 0(x2) # load 0x00003e00 from memory into f1
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f3, 0(x2) # load 0x00007c00 from memory into f3
la x2, scratch
li x3, 0x468a7e32 # load x3 with value 0x468a7e32
sw x3, 0(x2) # store 0x468a7e32 in memory
flh f26, 0(x2) # load 0x468a7e32 from memory into f26
fnmadd.h f29, f1, f3, f26, dyn # perform operation
fnmadd.h f29, f1, f3, f26, rdn # perform operation
fnmadd.h f29, f1, f3, f26, rmm # perform operation
fnmadd.h f29, f1, f3, f26, rne # perform operation
fnmadd.h f29, f1, f3, f26, rtz # perform operation
fnmadd.h f29, f1, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f1, f3, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f18, 0(x2) # load 0x00003e00 from memory into f18
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f2, 0(x2) # load 0x0000fc00 from memory into f2
la x2, scratch
li x3, 0xd07d7dd4 # load x3 with value 0xd07d7dd4
sw x3, 0(x2) # store 0xd07d7dd4 in memory
flh f19, 0(x2) # load 0xd07d7dd4 from memory into f19
fnmadd.h f7, f18, f2, f19, dyn # perform operation
fnmadd.h f7, f18, f2, f19, rdn # perform operation
fnmadd.h f7, f18, f2, f19, rmm # perform operation
fnmadd.h f7, f18, f2, f19, rne # perform operation
fnmadd.h f7, f18, f2, f19, rtz # perform operation
fnmadd.h f7, f18, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f18, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f18, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f18, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f18, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f18, f2, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
la x2, scratch
li x3, 0xd4efa983 # load x3 with value 0xd4efa983
sw x3, 0(x2) # store 0xd4efa983 in memory
flh f14, 0(x2) # load 0xd4efa983 from memory into f14
fnmadd.h f13, f21, f18, f14, dyn # perform operation
fnmadd.h f13, f21, f18, f14, rdn # perform operation
fnmadd.h f13, f21, f18, f14, rmm # perform operation
fnmadd.h f13, f21, f18, f14, rne # perform operation
fnmadd.h f13, f21, f18, f14, rtz # perform operation
fnmadd.h f13, f21, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f21, f18, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f24, 0(x2) # load 0x00007fff from memory into f24
la x2, scratch
li x3, 0x21a46ee6 # load x3 with value 0x21a46ee6
sw x3, 0(x2) # store 0x21a46ee6 in memory
flh f14, 0(x2) # load 0x21a46ee6 from memory into f14
fnmadd.h f2, f7, f24, f14, dyn # perform operation
fnmadd.h f2, f7, f24, f14, rdn # perform operation
fnmadd.h f2, f7, f24, f14, rmm # perform operation
fnmadd.h f2, f7, f24, f14, rne # perform operation
fnmadd.h f2, f7, f24, f14, rtz # perform operation
fnmadd.h f2, f7, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f7, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f7, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f7, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f7, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f7, f24, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f26, 0(x2) # load 0x00003e00 from memory into f26
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f28, 0(x2) # load 0x0000fe00 from memory into f28
la x2, scratch
li x3, 0xd2eb5eee # load x3 with value 0xd2eb5eee
sw x3, 0(x2) # store 0xd2eb5eee in memory
flh f31, 0(x2) # load 0xd2eb5eee from memory into f31
fnmadd.h f13, f26, f28, f31, dyn # perform operation
fnmadd.h f13, f26, f28, f31, rdn # perform operation
fnmadd.h f13, f26, f28, f31, rmm # perform operation
fnmadd.h f13, f26, f28, f31, rne # perform operation
fnmadd.h f13, f26, f28, f31, rtz # perform operation
fnmadd.h f13, f26, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f26, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f26, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f26, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f26, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f26, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f26, 0(x2) # load 0x00003e00 from memory into f26
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f12, 0(x2) # load 0x00007c01 from memory into f12
la x2, scratch
li x3, 0x3f1e8995 # load x3 with value 0x3f1e8995
sw x3, 0(x2) # store 0x3f1e8995 in memory
flh f10, 0(x2) # load 0x3f1e8995 from memory into f10
fnmadd.h f11, f26, f12, f10, dyn # perform operation
fnmadd.h f11, f26, f12, f10, rdn # perform operation
fnmadd.h f11, f26, f12, f10, rmm # perform operation
fnmadd.h f11, f26, f12, f10, rne # perform operation
fnmadd.h f11, f26, f12, f10, rtz # perform operation
fnmadd.h f11, f26, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f26, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f26, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f26, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f26, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f26, f12, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
la x2, scratch
li x3, 0x18918c52 # load x3 with value 0x18918c52
sw x3, 0(x2) # store 0x18918c52 in memory
flh f27, 0(x2) # load 0x18918c52 from memory into f27
fnmadd.h f18, f21, f26, f27, dyn # perform operation
fnmadd.h f18, f21, f26, f27, rdn # perform operation
fnmadd.h f18, f21, f26, f27, rmm # perform operation
fnmadd.h f18, f21, f26, f27, rne # perform operation
fnmadd.h f18, f21, f26, f27, rtz # perform operation
fnmadd.h f18, f21, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f21, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f21, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f21, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f21, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f21, f26, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f16, 0(x2) # load 0x00003e00 from memory into f16
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f5, 0(x2) # load 0x0000fc01 from memory into f5
la x2, scratch
li x3, 0xef7a2884 # load x3 with value 0xef7a2884
sw x3, 0(x2) # store 0xef7a2884 in memory
flh f24, 0(x2) # load 0xef7a2884 from memory into f24
fnmadd.h f15, f16, f5, f24, dyn # perform operation
fnmadd.h f15, f16, f5, f24, rdn # perform operation
fnmadd.h f15, f16, f5, f24, rmm # perform operation
fnmadd.h f15, f16, f5, f24, rne # perform operation
fnmadd.h f15, f16, f5, f24, rtz # perform operation
fnmadd.h f15, f16, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f16, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f16, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f16, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f16, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f16, f5, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f1, 0(x2) # load 0x00003e00 from memory into f1
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f7, 0(x2) # load 0x000058b4 from memory into f7
la x2, scratch
li x3, 0xaec55581 # load x3 with value 0xaec55581
sw x3, 0(x2) # store 0xaec55581 in memory
flh f2, 0(x2) # load 0xaec55581 from memory into f2
fnmadd.h f17, f1, f7, f2, dyn # perform operation
fnmadd.h f17, f1, f7, f2, rdn # perform operation
fnmadd.h f17, f1, f7, f2, rmm # perform operation
fnmadd.h f17, f1, f7, f2, rne # perform operation
fnmadd.h f17, f1, f7, f2, rtz # perform operation
fnmadd.h f17, f1, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f1, f7, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f18, 0(x2) # load 0x00003e00 from memory into f18
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f27, 0(x2) # load 0x0000c93a from memory into f27
la x2, scratch
li x3, 0x13a81df9 # load x3 with value 0x13a81df9
sw x3, 0(x2) # store 0x13a81df9 in memory
flh f16, 0(x2) # load 0x13a81df9 from memory into f16
fnmadd.h f22, f18, f27, f16, dyn # perform operation
fnmadd.h f22, f18, f27, f16, rdn # perform operation
fnmadd.h f22, f18, f27, f16, rmm # perform operation
fnmadd.h f22, f18, f27, f16, rne # perform operation
fnmadd.h f22, f18, f27, f16, rtz # perform operation
fnmadd.h f22, f18, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f18, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f18, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f18, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f18, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f18, f27, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f8, 0(x2) # load 0x0000be00 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0x4cfde4f2 # load x3 with value 0x4cfde4f2
sw x3, 0(x2) # store 0x4cfde4f2 in memory
flh f28, 0(x2) # load 0x4cfde4f2 from memory into f28
fnmadd.h f24, f8, f30, f28, dyn # perform operation
fnmadd.h f24, f8, f30, f28, rdn # perform operation
fnmadd.h f24, f8, f30, f28, rmm # perform operation
fnmadd.h f24, f8, f30, f28, rne # perform operation
fnmadd.h f24, f8, f30, f28, rtz # perform operation
fnmadd.h f24, f8, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f8, f30, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f9, 0(x2) # load 0x0000be00 from memory into f9
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f2, 0(x2) # load 0x00008000 from memory into f2
la x2, scratch
li x3, 0x2b348362 # load x3 with value 0x2b348362
sw x3, 0(x2) # store 0x2b348362 in memory
flh f22, 0(x2) # load 0x2b348362 from memory into f22
fnmadd.h f15, f9, f2, f22, dyn # perform operation
fnmadd.h f15, f9, f2, f22, rdn # perform operation
fnmadd.h f15, f9, f2, f22, rmm # perform operation
fnmadd.h f15, f9, f2, f22, rne # perform operation
fnmadd.h f15, f9, f2, f22, rtz # perform operation
fnmadd.h f15, f9, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f9, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f9, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f9, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f9, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f9, f2, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
la x2, scratch
li x3, 0x26997e70 # load x3 with value 0x26997e70
sw x3, 0(x2) # store 0x26997e70 in memory
flh f19, 0(x2) # load 0x26997e70 from memory into f19
fnmadd.h f3, f1, f8, f19, dyn # perform operation
fnmadd.h f3, f1, f8, f19, rdn # perform operation
fnmadd.h f3, f1, f8, f19, rmm # perform operation
fnmadd.h f3, f1, f8, f19, rne # perform operation
fnmadd.h f3, f1, f8, f19, rtz # perform operation
fnmadd.h f3, f1, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f1, f8, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f22, 0(x2) # load 0x0000be00 from memory into f22
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
la x2, scratch
li x3, 0xf73b1d8a # load x3 with value 0xf73b1d8a
sw x3, 0(x2) # store 0xf73b1d8a in memory
flh f26, 0(x2) # load 0xf73b1d8a from memory into f26
fnmadd.h f12, f22, f11, f26, dyn # perform operation
fnmadd.h f12, f22, f11, f26, rdn # perform operation
fnmadd.h f12, f22, f11, f26, rmm # perform operation
fnmadd.h f12, f22, f11, f26, rne # perform operation
fnmadd.h f12, f22, f11, f26, rtz # perform operation
fnmadd.h f12, f22, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f22, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f22, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f22, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f22, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f22, f11, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f2, 0(x2) # load 0x0000be00 from memory into f2
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f9, 0(x2) # load 0x00003e00 from memory into f9
la x2, scratch
li x3, 0xce5c23fa # load x3 with value 0xce5c23fa
sw x3, 0(x2) # store 0xce5c23fa in memory
flh f5, 0(x2) # load 0xce5c23fa from memory into f5
fnmadd.h f3, f2, f9, f5, dyn # perform operation
fnmadd.h f3, f2, f9, f5, rdn # perform operation
fnmadd.h f3, f2, f9, f5, rmm # perform operation
fnmadd.h f3, f2, f9, f5, rne # perform operation
fnmadd.h f3, f2, f9, f5, rtz # perform operation
fnmadd.h f3, f2, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f2, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f2, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f2, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f2, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f2, f9, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f29, 0(x2) # load 0x0000be00 from memory into f29
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
la x2, scratch
li x3, 0x0362f582 # load x3 with value 0x0362f582
sw x3, 0(x2) # store 0x0362f582 in memory
flh f22, 0(x2) # load 0x0362f582 from memory into f22
fnmadd.h f1, f29, f23, f22, dyn # perform operation
fnmadd.h f1, f29, f23, f22, rdn # perform operation
fnmadd.h f1, f29, f23, f22, rmm # perform operation
fnmadd.h f1, f29, f23, f22, rne # perform operation
fnmadd.h f1, f29, f23, f22, rtz # perform operation
fnmadd.h f1, f29, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f29, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f29, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f29, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f29, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f29, f23, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f8, 0(x2) # load 0x0000be00 from memory into f8
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f31, 0(x2) # load 0x00004000 from memory into f31
la x2, scratch
li x3, 0x53bbd70c # load x3 with value 0x53bbd70c
sw x3, 0(x2) # store 0x53bbd70c in memory
flh f11, 0(x2) # load 0x53bbd70c from memory into f11
fnmadd.h f23, f8, f31, f11, dyn # perform operation
fnmadd.h f23, f8, f31, f11, rdn # perform operation
fnmadd.h f23, f8, f31, f11, rmm # perform operation
fnmadd.h f23, f8, f31, f11, rne # perform operation
fnmadd.h f23, f8, f31, f11, rtz # perform operation
fnmadd.h f23, f8, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f8, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f8, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f8, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f8, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f8, f31, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f19, 0(x2) # load 0x0000be00 from memory into f19
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f24, 0(x2) # load 0x0000c000 from memory into f24
la x2, scratch
li x3, 0xd6c0c57a # load x3 with value 0xd6c0c57a
sw x3, 0(x2) # store 0xd6c0c57a in memory
flh f12, 0(x2) # load 0xd6c0c57a from memory into f12
fnmadd.h f2, f19, f24, f12, dyn # perform operation
fnmadd.h f2, f19, f24, f12, rdn # perform operation
fnmadd.h f2, f19, f24, f12, rmm # perform operation
fnmadd.h f2, f19, f24, f12, rne # perform operation
fnmadd.h f2, f19, f24, f12, rtz # perform operation
fnmadd.h f2, f19, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f19, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f19, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f19, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f19, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f19, f24, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f6, 0(x2) # load 0x0000be00 from memory into f6
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f24, 0(x2) # load 0x00000400 from memory into f24
la x2, scratch
li x3, 0x4cddf01b # load x3 with value 0x4cddf01b
sw x3, 0(x2) # store 0x4cddf01b in memory
flh f23, 0(x2) # load 0x4cddf01b from memory into f23
fnmadd.h f27, f6, f24, f23, dyn # perform operation
fnmadd.h f27, f6, f24, f23, rdn # perform operation
fnmadd.h f27, f6, f24, f23, rmm # perform operation
fnmadd.h f27, f6, f24, f23, rne # perform operation
fnmadd.h f27, f6, f24, f23, rtz # perform operation
fnmadd.h f27, f6, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f6, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f6, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f6, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f6, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f6, f24, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f18, 0(x2) # load 0x0000be00 from memory into f18
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f2, 0(x2) # load 0x00008400 from memory into f2
la x2, scratch
li x3, 0x64000c5f # load x3 with value 0x64000c5f
sw x3, 0(x2) # store 0x64000c5f in memory
flh f16, 0(x2) # load 0x64000c5f from memory into f16
fnmadd.h f28, f18, f2, f16, dyn # perform operation
fnmadd.h f28, f18, f2, f16, rdn # perform operation
fnmadd.h f28, f18, f2, f16, rmm # perform operation
fnmadd.h f28, f18, f2, f16, rne # perform operation
fnmadd.h f28, f18, f2, f16, rtz # perform operation
fnmadd.h f28, f18, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f18, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f18, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f18, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f18, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f18, f2, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f27, 0(x2) # load 0x0000be00 from memory into f27
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f7, 0(x2) # load 0x00007bff from memory into f7
la x2, scratch
li x3, 0x4376cb4a # load x3 with value 0x4376cb4a
sw x3, 0(x2) # store 0x4376cb4a in memory
flh f2, 0(x2) # load 0x4376cb4a from memory into f2
fnmadd.h f11, f27, f7, f2, dyn # perform operation
fnmadd.h f11, f27, f7, f2, rdn # perform operation
fnmadd.h f11, f27, f7, f2, rmm # perform operation
fnmadd.h f11, f27, f7, f2, rne # perform operation
fnmadd.h f11, f27, f7, f2, rtz # perform operation
fnmadd.h f11, f27, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f27, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f27, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f27, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f27, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f27, f7, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f7, 0(x2) # load 0x0000fbff from memory into f7
la x2, scratch
li x3, 0xc5b6a99a # load x3 with value 0xc5b6a99a
sw x3, 0(x2) # store 0xc5b6a99a in memory
flh f2, 0(x2) # load 0xc5b6a99a from memory into f2
fnmadd.h f15, f1, f7, f2, dyn # perform operation
fnmadd.h f15, f1, f7, f2, rdn # perform operation
fnmadd.h f15, f1, f7, f2, rmm # perform operation
fnmadd.h f15, f1, f7, f2, rne # perform operation
fnmadd.h f15, f1, f7, f2, rtz # perform operation
fnmadd.h f15, f1, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f1, f7, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f31, 0(x2) # load 0x0000be00 from memory into f31
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f8, 0(x2) # load 0x000003ff from memory into f8
la x2, scratch
li x3, 0xb4618b7f # load x3 with value 0xb4618b7f
sw x3, 0(x2) # store 0xb4618b7f in memory
flh f23, 0(x2) # load 0xb4618b7f from memory into f23
fnmadd.h f20, f31, f8, f23, dyn # perform operation
fnmadd.h f20, f31, f8, f23, rdn # perform operation
fnmadd.h f20, f31, f8, f23, rmm # perform operation
fnmadd.h f20, f31, f8, f23, rne # perform operation
fnmadd.h f20, f31, f8, f23, rtz # perform operation
fnmadd.h f20, f31, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f31, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f31, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f31, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f31, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f31, f8, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f29, 0(x2) # load 0x000083ff from memory into f29
la x2, scratch
li x3, 0xc7ac3dde # load x3 with value 0xc7ac3dde
sw x3, 0(x2) # store 0xc7ac3dde in memory
flh f11, 0(x2) # load 0xc7ac3dde from memory into f11
fnmadd.h f12, f23, f29, f11, dyn # perform operation
fnmadd.h f12, f23, f29, f11, rdn # perform operation
fnmadd.h f12, f23, f29, f11, rmm # perform operation
fnmadd.h f12, f23, f29, f11, rne # perform operation
fnmadd.h f12, f23, f29, f11, rtz # perform operation
fnmadd.h f12, f23, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f23, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f23, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f23, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f23, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f23, f29, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f23, 0(x2) # load 0x00000200 from memory into f23
la x2, scratch
li x3, 0x63589727 # load x3 with value 0x63589727
sw x3, 0(x2) # store 0x63589727 in memory
flh f6, 0(x2) # load 0x63589727 from memory into f6
fnmadd.h f21, f14, f23, f6, dyn # perform operation
fnmadd.h f21, f14, f23, f6, rdn # perform operation
fnmadd.h f21, f14, f23, f6, rmm # perform operation
fnmadd.h f21, f14, f23, f6, rne # perform operation
fnmadd.h f21, f14, f23, f6, rtz # perform operation
fnmadd.h f21, f14, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f14, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f14, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f14, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f14, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f14, f23, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f20, 0(x2) # load 0x0000be00 from memory into f20
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f23, 0(x2) # load 0x00008200 from memory into f23
la x2, scratch
li x3, 0x0ef6fb45 # load x3 with value 0x0ef6fb45
sw x3, 0(x2) # store 0x0ef6fb45 in memory
flh f9, 0(x2) # load 0x0ef6fb45 from memory into f9
fnmadd.h f2, f20, f23, f9, dyn # perform operation
fnmadd.h f2, f20, f23, f9, rdn # perform operation
fnmadd.h f2, f20, f23, f9, rmm # perform operation
fnmadd.h f2, f20, f23, f9, rne # perform operation
fnmadd.h f2, f20, f23, f9, rtz # perform operation
fnmadd.h f2, f20, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f20, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f20, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f20, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f20, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f20, f23, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f19, 0(x2) # load 0x0000be00 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0xc53bb734 # load x3 with value 0xc53bb734
sw x3, 0(x2) # store 0xc53bb734 in memory
flh f18, 0(x2) # load 0xc53bb734 from memory into f18
fnmadd.h f31, f19, f15, f18, dyn # perform operation
fnmadd.h f31, f19, f15, f18, rdn # perform operation
fnmadd.h f31, f19, f15, f18, rmm # perform operation
fnmadd.h f31, f19, f15, f18, rne # perform operation
fnmadd.h f31, f19, f15, f18, rtz # perform operation
fnmadd.h f31, f19, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f19, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f19, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f19, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f19, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f19, f15, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f28, 0(x2) # load 0x00008001 from memory into f28
la x2, scratch
li x3, 0x11727eda # load x3 with value 0x11727eda
sw x3, 0(x2) # store 0x11727eda in memory
flh f15, 0(x2) # load 0x11727eda from memory into f15
fnmadd.h f11, f14, f28, f15, dyn # perform operation
fnmadd.h f11, f14, f28, f15, rdn # perform operation
fnmadd.h f11, f14, f28, f15, rmm # perform operation
fnmadd.h f11, f14, f28, f15, rne # perform operation
fnmadd.h f11, f14, f28, f15, rtz # perform operation
fnmadd.h f11, f14, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f14, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f14, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f14, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f14, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f14, f28, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f10, 0(x2) # load 0x0000be00 from memory into f10
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f29, 0(x2) # load 0x00007c00 from memory into f29
la x2, scratch
li x3, 0x0ff78ef0 # load x3 with value 0x0ff78ef0
sw x3, 0(x2) # store 0x0ff78ef0 in memory
flh f24, 0(x2) # load 0x0ff78ef0 from memory into f24
fnmadd.h f5, f10, f29, f24, dyn # perform operation
fnmadd.h f5, f10, f29, f24, rdn # perform operation
fnmadd.h f5, f10, f29, f24, rmm # perform operation
fnmadd.h f5, f10, f29, f24, rne # perform operation
fnmadd.h f5, f10, f29, f24, rtz # perform operation
fnmadd.h f5, f10, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f10, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f10, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f10, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f10, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f10, f29, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f3, 0(x2) # load 0x0000be00 from memory into f3
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f24, 0(x2) # load 0x0000fc00 from memory into f24
la x2, scratch
li x3, 0xa076c569 # load x3 with value 0xa076c569
sw x3, 0(x2) # store 0xa076c569 in memory
flh f26, 0(x2) # load 0xa076c569 from memory into f26
fnmadd.h f12, f3, f24, f26, dyn # perform operation
fnmadd.h f12, f3, f24, f26, rdn # perform operation
fnmadd.h f12, f3, f24, f26, rmm # perform operation
fnmadd.h f12, f3, f24, f26, rne # perform operation
fnmadd.h f12, f3, f24, f26, rtz # perform operation
fnmadd.h f12, f3, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f3, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f3, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f3, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f3, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f3, f24, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f20, 0(x2) # load 0x0000be00 from memory into f20
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f16, 0(x2) # load 0x00007e00 from memory into f16
la x2, scratch
li x3, 0xb9638c7a # load x3 with value 0xb9638c7a
sw x3, 0(x2) # store 0xb9638c7a in memory
flh f22, 0(x2) # load 0xb9638c7a from memory into f22
fnmadd.h f8, f20, f16, f22, dyn # perform operation
fnmadd.h f8, f20, f16, f22, rdn # perform operation
fnmadd.h f8, f20, f16, f22, rmm # perform operation
fnmadd.h f8, f20, f16, f22, rne # perform operation
fnmadd.h f8, f20, f16, f22, rtz # perform operation
fnmadd.h f8, f20, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f20, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f21, 0(x2) # load 0x0000be00 from memory into f21
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f22, 0(x2) # load 0x00007fff from memory into f22
la x2, scratch
li x3, 0x7c1deb9b # load x3 with value 0x7c1deb9b
sw x3, 0(x2) # store 0x7c1deb9b in memory
flh f7, 0(x2) # load 0x7c1deb9b from memory into f7
fnmadd.h f6, f21, f22, f7, dyn # perform operation
fnmadd.h f6, f21, f22, f7, rdn # perform operation
fnmadd.h f6, f21, f22, f7, rmm # perform operation
fnmadd.h f6, f21, f22, f7, rne # perform operation
fnmadd.h f6, f21, f22, f7, rtz # perform operation
fnmadd.h f6, f21, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f21, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f21, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f21, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f21, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f21, f22, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f23, 0(x2) # load 0x0000fe00 from memory into f23
la x2, scratch
li x3, 0xe8ed9ec7 # load x3 with value 0xe8ed9ec7
sw x3, 0(x2) # store 0xe8ed9ec7 in memory
flh f11, 0(x2) # load 0xe8ed9ec7 from memory into f11
fnmadd.h f18, f14, f23, f11, dyn # perform operation
fnmadd.h f18, f14, f23, f11, rdn # perform operation
fnmadd.h f18, f14, f23, f11, rmm # perform operation
fnmadd.h f18, f14, f23, f11, rne # perform operation
fnmadd.h f18, f14, f23, f11, rtz # perform operation
fnmadd.h f18, f14, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f14, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f14, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f14, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f14, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f14, f23, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f5, 0(x2) # load 0x0000be00 from memory into f5
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f31, 0(x2) # load 0x00007c01 from memory into f31
la x2, scratch
li x3, 0x697f0542 # load x3 with value 0x697f0542
sw x3, 0(x2) # store 0x697f0542 in memory
flh f25, 0(x2) # load 0x697f0542 from memory into f25
fnmadd.h f6, f5, f31, f25, dyn # perform operation
fnmadd.h f6, f5, f31, f25, rdn # perform operation
fnmadd.h f6, f5, f31, f25, rmm # perform operation
fnmadd.h f6, f5, f31, f25, rne # perform operation
fnmadd.h f6, f5, f31, f25, rtz # perform operation
fnmadd.h f6, f5, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f5, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f5, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f5, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f5, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f5, f31, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f5, 0(x2) # load 0x0000be00 from memory into f5
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f27, 0(x2) # load 0x00007dff from memory into f27
la x2, scratch
li x3, 0x3baf9f57 # load x3 with value 0x3baf9f57
sw x3, 0(x2) # store 0x3baf9f57 in memory
flh f26, 0(x2) # load 0x3baf9f57 from memory into f26
fnmadd.h f28, f5, f27, f26, dyn # perform operation
fnmadd.h f28, f5, f27, f26, rdn # perform operation
fnmadd.h f28, f5, f27, f26, rmm # perform operation
fnmadd.h f28, f5, f27, f26, rne # perform operation
fnmadd.h f28, f5, f27, f26, rtz # perform operation
fnmadd.h f28, f5, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f5, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f5, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f5, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f5, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f5, f27, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f18, 0(x2) # load 0x0000be00 from memory into f18
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f15, 0(x2) # load 0x0000fc01 from memory into f15
la x2, scratch
li x3, 0xa188b18b # load x3 with value 0xa188b18b
sw x3, 0(x2) # store 0xa188b18b in memory
flh f12, 0(x2) # load 0xa188b18b from memory into f12
fnmadd.h f25, f18, f15, f12, dyn # perform operation
fnmadd.h f25, f18, f15, f12, rdn # perform operation
fnmadd.h f25, f18, f15, f12, rmm # perform operation
fnmadd.h f25, f18, f15, f12, rne # perform operation
fnmadd.h f25, f18, f15, f12, rtz # perform operation
fnmadd.h f25, f18, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f18, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f18, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f18, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f18, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f18, f15, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f5, 0(x2) # load 0x0000be00 from memory into f5
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
la x2, scratch
li x3, 0x35a5908c # load x3 with value 0x35a5908c
sw x3, 0(x2) # store 0x35a5908c in memory
flh f31, 0(x2) # load 0x35a5908c from memory into f31
fnmadd.h f24, f5, f21, f31, dyn # perform operation
fnmadd.h f24, f5, f21, f31, rdn # perform operation
fnmadd.h f24, f5, f21, f31, rmm # perform operation
fnmadd.h f24, f5, f21, f31, rne # perform operation
fnmadd.h f24, f5, f21, f31, rtz # perform operation
fnmadd.h f24, f5, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f5, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f5, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f5, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f5, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f5, f21, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f12, 0(x2) # load 0x0000be00 from memory into f12
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f31, 0(x2) # load 0x0000c93a from memory into f31
la x2, scratch
li x3, 0xb5bba073 # load x3 with value 0xb5bba073
sw x3, 0(x2) # store 0xb5bba073 in memory
flh f27, 0(x2) # load 0xb5bba073 from memory into f27
fnmadd.h f7, f12, f31, f27, dyn # perform operation
fnmadd.h f7, f12, f31, f27, rdn # perform operation
fnmadd.h f7, f12, f31, f27, rmm # perform operation
fnmadd.h f7, f12, f31, f27, rne # perform operation
fnmadd.h f7, f12, f31, f27, rtz # perform operation
fnmadd.h f7, f12, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f12, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f12, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f12, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f12, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f12, f31, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f24, 0(x2) # load 0x00004000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x3ef728c7 # load x3 with value 0x3ef728c7
sw x3, 0(x2) # store 0x3ef728c7 in memory
flh f18, 0(x2) # load 0x3ef728c7 from memory into f18
fnmadd.h f7, f24, f9, f18, dyn # perform operation
fnmadd.h f7, f24, f9, f18, rdn # perform operation
fnmadd.h f7, f24, f9, f18, rmm # perform operation
fnmadd.h f7, f24, f9, f18, rne # perform operation
fnmadd.h f7, f24, f9, f18, rtz # perform operation
fnmadd.h f7, f24, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f24, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f24, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f24, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f24, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f24, f9, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f13, 0(x2) # load 0x00004000 from memory into f13
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f3, 0(x2) # load 0x00008000 from memory into f3
la x2, scratch
li x3, 0x0170b9fc # load x3 with value 0x0170b9fc
sw x3, 0(x2) # store 0x0170b9fc in memory
flh f20, 0(x2) # load 0x0170b9fc from memory into f20
fnmadd.h f25, f13, f3, f20, dyn # perform operation
fnmadd.h f25, f13, f3, f20, rdn # perform operation
fnmadd.h f25, f13, f3, f20, rmm # perform operation
fnmadd.h f25, f13, f3, f20, rne # perform operation
fnmadd.h f25, f13, f3, f20, rtz # perform operation
fnmadd.h f25, f13, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f13, f3, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f7, 0(x2) # load 0x00004000 from memory into f7
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f14, 0(x2) # load 0x00003c00 from memory into f14
la x2, scratch
li x3, 0xf0b1b1b9 # load x3 with value 0xf0b1b1b9
sw x3, 0(x2) # store 0xf0b1b1b9 in memory
flh f2, 0(x2) # load 0xf0b1b1b9 from memory into f2
fnmadd.h f27, f7, f14, f2, dyn # perform operation
fnmadd.h f27, f7, f14, f2, rdn # perform operation
fnmadd.h f27, f7, f14, f2, rmm # perform operation
fnmadd.h f27, f7, f14, f2, rne # perform operation
fnmadd.h f27, f7, f14, f2, rtz # perform operation
fnmadd.h f27, f7, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f7, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f7, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f7, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f7, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f7, f14, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f2, 0(x2) # load 0x00004000 from memory into f2
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f17, 0(x2) # load 0x0000bc00 from memory into f17
la x2, scratch
li x3, 0x2540a632 # load x3 with value 0x2540a632
sw x3, 0(x2) # store 0x2540a632 in memory
flh f8, 0(x2) # load 0x2540a632 from memory into f8
fnmadd.h f28, f2, f17, f8, dyn # perform operation
fnmadd.h f28, f2, f17, f8, rdn # perform operation
fnmadd.h f28, f2, f17, f8, rmm # perform operation
fnmadd.h f28, f2, f17, f8, rne # perform operation
fnmadd.h f28, f2, f17, f8, rtz # perform operation
fnmadd.h f28, f2, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f2, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f2, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f2, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f2, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f2, f17, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f29, 0(x2) # load 0x00004000 from memory into f29
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f16, 0(x2) # load 0x00003e00 from memory into f16
la x2, scratch
li x3, 0x6dc1375a # load x3 with value 0x6dc1375a
sw x3, 0(x2) # store 0x6dc1375a in memory
flh f12, 0(x2) # load 0x6dc1375a from memory into f12
fnmadd.h f1, f29, f16, f12, dyn # perform operation
fnmadd.h f1, f29, f16, f12, rdn # perform operation
fnmadd.h f1, f29, f16, f12, rmm # perform operation
fnmadd.h f1, f29, f16, f12, rne # perform operation
fnmadd.h f1, f29, f16, f12, rtz # perform operation
fnmadd.h f1, f29, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f29, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f29, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f29, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f29, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f29, f16, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f24, 0(x2) # load 0x00004000 from memory into f24
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
la x2, scratch
li x3, 0x02de872f # load x3 with value 0x02de872f
sw x3, 0(x2) # store 0x02de872f in memory
flh f13, 0(x2) # load 0x02de872f from memory into f13
fnmadd.h f12, f24, f14, f13, dyn # perform operation
fnmadd.h f12, f24, f14, f13, rdn # perform operation
fnmadd.h f12, f24, f14, f13, rmm # perform operation
fnmadd.h f12, f24, f14, f13, rne # perform operation
fnmadd.h f12, f24, f14, f13, rtz # perform operation
fnmadd.h f12, f24, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f24, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f24, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f24, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f24, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f24, f14, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f18, 0(x2) # load 0x00004000 from memory into f18
la x2, scratch
li x3, 0x05a29cb7 # load x3 with value 0x05a29cb7
sw x3, 0(x2) # store 0x05a29cb7 in memory
flh f9, 0(x2) # load 0x05a29cb7 from memory into f9
fnmadd.h f7, f6, f18, f9, dyn # perform operation
fnmadd.h f7, f6, f18, f9, rdn # perform operation
fnmadd.h f7, f6, f18, f9, rmm # perform operation
fnmadd.h f7, f6, f18, f9, rne # perform operation
fnmadd.h f7, f6, f18, f9, rtz # perform operation
fnmadd.h f7, f6, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f6, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f6, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f6, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f6, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f6, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f16, 0(x2) # load 0x00004000 from memory into f16
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f10, 0(x2) # load 0x0000c000 from memory into f10
la x2, scratch
li x3, 0x7668c7e0 # load x3 with value 0x7668c7e0
sw x3, 0(x2) # store 0x7668c7e0 in memory
flh f6, 0(x2) # load 0x7668c7e0 from memory into f6
fnmadd.h f21, f16, f10, f6, dyn # perform operation
fnmadd.h f21, f16, f10, f6, rdn # perform operation
fnmadd.h f21, f16, f10, f6, rmm # perform operation
fnmadd.h f21, f16, f10, f6, rne # perform operation
fnmadd.h f21, f16, f10, f6, rtz # perform operation
fnmadd.h f21, f16, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f16, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f16, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f16, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f16, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f16, f10, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f2, 0(x2) # load 0x00000400 from memory into f2
la x2, scratch
li x3, 0xac5dac68 # load x3 with value 0xac5dac68
sw x3, 0(x2) # store 0xac5dac68 in memory
flh f28, 0(x2) # load 0xac5dac68 from memory into f28
fnmadd.h f31, f23, f2, f28, dyn # perform operation
fnmadd.h f31, f23, f2, f28, rdn # perform operation
fnmadd.h f31, f23, f2, f28, rmm # perform operation
fnmadd.h f31, f23, f2, f28, rne # perform operation
fnmadd.h f31, f23, f2, f28, rtz # perform operation
fnmadd.h f31, f23, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f23, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f23, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f23, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f23, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f23, f2, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f16, 0(x2) # load 0x00004000 from memory into f16
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f8, 0(x2) # load 0x00008400 from memory into f8
la x2, scratch
li x3, 0x0d04c155 # load x3 with value 0x0d04c155
sw x3, 0(x2) # store 0x0d04c155 in memory
flh f12, 0(x2) # load 0x0d04c155 from memory into f12
fnmadd.h f27, f16, f8, f12, dyn # perform operation
fnmadd.h f27, f16, f8, f12, rdn # perform operation
fnmadd.h f27, f16, f8, f12, rmm # perform operation
fnmadd.h f27, f16, f8, f12, rne # perform operation
fnmadd.h f27, f16, f8, f12, rtz # perform operation
fnmadd.h f27, f16, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f16, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f16, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f16, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f16, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f16, f8, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f9, 0(x2) # load 0x00004000 from memory into f9
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
la x2, scratch
li x3, 0x0783a3e3 # load x3 with value 0x0783a3e3
sw x3, 0(x2) # store 0x0783a3e3 in memory
flh f17, 0(x2) # load 0x0783a3e3 from memory into f17
fnmadd.h f19, f9, f24, f17, dyn # perform operation
fnmadd.h f19, f9, f24, f17, rdn # perform operation
fnmadd.h f19, f9, f24, f17, rmm # perform operation
fnmadd.h f19, f9, f24, f17, rne # perform operation
fnmadd.h f19, f9, f24, f17, rtz # perform operation
fnmadd.h f19, f9, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f9, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f9, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f9, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f9, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f9, f24, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f22, 0(x2) # load 0x00004000 from memory into f22
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f25, 0(x2) # load 0x0000fbff from memory into f25
la x2, scratch
li x3, 0xb3991720 # load x3 with value 0xb3991720
sw x3, 0(x2) # store 0xb3991720 in memory
flh f24, 0(x2) # load 0xb3991720 from memory into f24
fnmadd.h f16, f22, f25, f24, dyn # perform operation
fnmadd.h f16, f22, f25, f24, rdn # perform operation
fnmadd.h f16, f22, f25, f24, rmm # perform operation
fnmadd.h f16, f22, f25, f24, rne # perform operation
fnmadd.h f16, f22, f25, f24, rtz # perform operation
fnmadd.h f16, f22, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f22, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f22, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f22, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f22, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f22, f25, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f5, 0(x2) # load 0x00004000 from memory into f5
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
la x2, scratch
li x3, 0x8ab00dfb # load x3 with value 0x8ab00dfb
sw x3, 0(x2) # store 0x8ab00dfb in memory
flh f3, 0(x2) # load 0x8ab00dfb from memory into f3
fnmadd.h f7, f5, f20, f3, dyn # perform operation
fnmadd.h f7, f5, f20, f3, rdn # perform operation
fnmadd.h f7, f5, f20, f3, rmm # perform operation
fnmadd.h f7, f5, f20, f3, rne # perform operation
fnmadd.h f7, f5, f20, f3, rtz # perform operation
fnmadd.h f7, f5, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f5, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f5, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f5, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f5, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f5, f20, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f25, 0(x2) # load 0x00004000 from memory into f25
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f29, 0(x2) # load 0x000083ff from memory into f29
la x2, scratch
li x3, 0x0011f427 # load x3 with value 0x0011f427
sw x3, 0(x2) # store 0x0011f427 in memory
flh f7, 0(x2) # load 0x0011f427 from memory into f7
fnmadd.h f26, f25, f29, f7, dyn # perform operation
fnmadd.h f26, f25, f29, f7, rdn # perform operation
fnmadd.h f26, f25, f29, f7, rmm # perform operation
fnmadd.h f26, f25, f29, f7, rne # perform operation
fnmadd.h f26, f25, f29, f7, rtz # perform operation
fnmadd.h f26, f25, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f25, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f25, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f25, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f25, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f25, f29, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f28, 0(x2) # load 0x00004000 from memory into f28
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f17, 0(x2) # load 0x00000200 from memory into f17
la x2, scratch
li x3, 0x1b372e13 # load x3 with value 0x1b372e13
sw x3, 0(x2) # store 0x1b372e13 in memory
flh f22, 0(x2) # load 0x1b372e13 from memory into f22
fnmadd.h f21, f28, f17, f22, dyn # perform operation
fnmadd.h f21, f28, f17, f22, rdn # perform operation
fnmadd.h f21, f28, f17, f22, rmm # perform operation
fnmadd.h f21, f28, f17, f22, rne # perform operation
fnmadd.h f21, f28, f17, f22, rtz # perform operation
fnmadd.h f21, f28, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f28, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f28, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f28, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f28, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f28, f17, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f7, 0(x2) # load 0x00004000 from memory into f7
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f9, 0(x2) # load 0x00008200 from memory into f9
la x2, scratch
li x3, 0xb6ada58e # load x3 with value 0xb6ada58e
sw x3, 0(x2) # store 0xb6ada58e in memory
flh f24, 0(x2) # load 0xb6ada58e from memory into f24
fnmadd.h f6, f7, f9, f24, dyn # perform operation
fnmadd.h f6, f7, f9, f24, rdn # perform operation
fnmadd.h f6, f7, f9, f24, rmm # perform operation
fnmadd.h f6, f7, f9, f24, rne # perform operation
fnmadd.h f6, f7, f9, f24, rtz # perform operation
fnmadd.h f6, f7, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f7, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f7, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f7, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f7, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f7, f9, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f22, 0(x2) # load 0x00004000 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0xce0b1534 # load x3 with value 0xce0b1534
sw x3, 0(x2) # store 0xce0b1534 in memory
flh f6, 0(x2) # load 0xce0b1534 from memory into f6
fnmadd.h f13, f22, f20, f6, dyn # perform operation
fnmadd.h f13, f22, f20, f6, rdn # perform operation
fnmadd.h f13, f22, f20, f6, rmm # perform operation
fnmadd.h f13, f22, f20, f6, rne # perform operation
fnmadd.h f13, f22, f20, f6, rtz # perform operation
fnmadd.h f13, f22, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f22, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f22, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f22, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f22, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f22, f20, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f18, 0(x2) # load 0x00004000 from memory into f18
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f6, 0(x2) # load 0x00008001 from memory into f6
la x2, scratch
li x3, 0x467f6b7f # load x3 with value 0x467f6b7f
sw x3, 0(x2) # store 0x467f6b7f in memory
flh f5, 0(x2) # load 0x467f6b7f from memory into f5
fnmadd.h f19, f18, f6, f5, dyn # perform operation
fnmadd.h f19, f18, f6, f5, rdn # perform operation
fnmadd.h f19, f18, f6, f5, rmm # perform operation
fnmadd.h f19, f18, f6, f5, rne # perform operation
fnmadd.h f19, f18, f6, f5, rtz # perform operation
fnmadd.h f19, f18, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f18, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f18, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f18, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f18, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f18, f6, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f21, 0(x2) # load 0x00004000 from memory into f21
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
la x2, scratch
li x3, 0xbad840fe # load x3 with value 0xbad840fe
sw x3, 0(x2) # store 0xbad840fe in memory
flh f22, 0(x2) # load 0xbad840fe from memory into f22
fnmadd.h f3, f21, f9, f22, dyn # perform operation
fnmadd.h f3, f21, f9, f22, rdn # perform operation
fnmadd.h f3, f21, f9, f22, rmm # perform operation
fnmadd.h f3, f21, f9, f22, rne # perform operation
fnmadd.h f3, f21, f9, f22, rtz # perform operation
fnmadd.h f3, f21, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f21, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f21, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f21, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f21, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f21, f9, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f29, 0(x2) # load 0x00004000 from memory into f29
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f16, 0(x2) # load 0x0000fc00 from memory into f16
la x2, scratch
li x3, 0x626f023b # load x3 with value 0x626f023b
sw x3, 0(x2) # store 0x626f023b in memory
flh f1, 0(x2) # load 0x626f023b from memory into f1
fnmadd.h f7, f29, f16, f1, dyn # perform operation
fnmadd.h f7, f29, f16, f1, rdn # perform operation
fnmadd.h f7, f29, f16, f1, rmm # perform operation
fnmadd.h f7, f29, f16, f1, rne # perform operation
fnmadd.h f7, f29, f16, f1, rtz # perform operation
fnmadd.h f7, f29, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f29, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f29, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f29, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f29, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f29, f16, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f8, 0(x2) # load 0x00004000 from memory into f8
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
la x2, scratch
li x3, 0x13e11dd2 # load x3 with value 0x13e11dd2
sw x3, 0(x2) # store 0x13e11dd2 in memory
flh f5, 0(x2) # load 0x13e11dd2 from memory into f5
fnmadd.h f7, f8, f24, f5, dyn # perform operation
fnmadd.h f7, f8, f24, f5, rdn # perform operation
fnmadd.h f7, f8, f24, f5, rmm # perform operation
fnmadd.h f7, f8, f24, f5, rne # perform operation
fnmadd.h f7, f8, f24, f5, rtz # perform operation
fnmadd.h f7, f8, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f8, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f8, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f8, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f8, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f8, f24, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f27, 0(x2) # load 0x00004000 from memory into f27
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
la x2, scratch
li x3, 0x6b3c6ad7 # load x3 with value 0x6b3c6ad7
sw x3, 0(x2) # store 0x6b3c6ad7 in memory
flh f11, 0(x2) # load 0x6b3c6ad7 from memory into f11
fnmadd.h f16, f27, f23, f11, dyn # perform operation
fnmadd.h f16, f27, f23, f11, rdn # perform operation
fnmadd.h f16, f27, f23, f11, rmm # perform operation
fnmadd.h f16, f27, f23, f11, rne # perform operation
fnmadd.h f16, f27, f23, f11, rtz # perform operation
fnmadd.h f16, f27, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f27, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f27, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f27, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f27, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f27, f23, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f31, 0(x2) # load 0x00004000 from memory into f31
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f14, 0(x2) # load 0x0000fe00 from memory into f14
la x2, scratch
li x3, 0xef2b8cf6 # load x3 with value 0xef2b8cf6
sw x3, 0(x2) # store 0xef2b8cf6 in memory
flh f16, 0(x2) # load 0xef2b8cf6 from memory into f16
fnmadd.h f5, f31, f14, f16, dyn # perform operation
fnmadd.h f5, f31, f14, f16, rdn # perform operation
fnmadd.h f5, f31, f14, f16, rmm # perform operation
fnmadd.h f5, f31, f14, f16, rne # perform operation
fnmadd.h f5, f31, f14, f16, rtz # perform operation
fnmadd.h f5, f31, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f31, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f31, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f31, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f31, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f31, f14, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f1, 0(x2) # load 0x00004000 from memory into f1
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f9, 0(x2) # load 0x00007c01 from memory into f9
la x2, scratch
li x3, 0xcedf02d8 # load x3 with value 0xcedf02d8
sw x3, 0(x2) # store 0xcedf02d8 in memory
flh f24, 0(x2) # load 0xcedf02d8 from memory into f24
fnmadd.h f14, f1, f9, f24, dyn # perform operation
fnmadd.h f14, f1, f9, f24, rdn # perform operation
fnmadd.h f14, f1, f9, f24, rmm # perform operation
fnmadd.h f14, f1, f9, f24, rne # perform operation
fnmadd.h f14, f1, f9, f24, rtz # perform operation
fnmadd.h f14, f1, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f1, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f1, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f1, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f1, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f1, f9, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f21, 0(x2) # load 0x00004000 from memory into f21
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f16, 0(x2) # load 0x00007dff from memory into f16
la x2, scratch
li x3, 0x29fe675c # load x3 with value 0x29fe675c
sw x3, 0(x2) # store 0x29fe675c in memory
flh f30, 0(x2) # load 0x29fe675c from memory into f30
fnmadd.h f7, f21, f16, f30, dyn # perform operation
fnmadd.h f7, f21, f16, f30, rdn # perform operation
fnmadd.h f7, f21, f16, f30, rmm # perform operation
fnmadd.h f7, f21, f16, f30, rne # perform operation
fnmadd.h f7, f21, f16, f30, rtz # perform operation
fnmadd.h f7, f21, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f21, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f21, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f21, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f21, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f21, f16, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f3, 0(x2) # load 0x00004000 from memory into f3
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f11, 0(x2) # load 0x0000fc01 from memory into f11
la x2, scratch
li x3, 0x3bfb7ce4 # load x3 with value 0x3bfb7ce4
sw x3, 0(x2) # store 0x3bfb7ce4 in memory
flh f6, 0(x2) # load 0x3bfb7ce4 from memory into f6
fnmadd.h f14, f3, f11, f6, dyn # perform operation
fnmadd.h f14, f3, f11, f6, rdn # perform operation
fnmadd.h f14, f3, f11, f6, rmm # perform operation
fnmadd.h f14, f3, f11, f6, rne # perform operation
fnmadd.h f14, f3, f11, f6, rtz # perform operation
fnmadd.h f14, f3, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f3, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f17, 0(x2) # load 0x00004000 from memory into f17
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f20, 0(x2) # load 0x000058b4 from memory into f20
la x2, scratch
li x3, 0x8a7881e2 # load x3 with value 0x8a7881e2
sw x3, 0(x2) # store 0x8a7881e2 in memory
flh f5, 0(x2) # load 0x8a7881e2 from memory into f5
fnmadd.h f16, f17, f20, f5, dyn # perform operation
fnmadd.h f16, f17, f20, f5, rdn # perform operation
fnmadd.h f16, f17, f20, f5, rmm # perform operation
fnmadd.h f16, f17, f20, f5, rne # perform operation
fnmadd.h f16, f17, f20, f5, rtz # perform operation
fnmadd.h f16, f17, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f17, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f17, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f17, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f17, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f17, f20, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f15, 0(x2) # load 0x00004000 from memory into f15
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
la x2, scratch
li x3, 0xcd87a493 # load x3 with value 0xcd87a493
sw x3, 0(x2) # store 0xcd87a493 in memory
flh f31, 0(x2) # load 0xcd87a493 from memory into f31
fnmadd.h f10, f15, f16, f31, dyn # perform operation
fnmadd.h f10, f15, f16, f31, rdn # perform operation
fnmadd.h f10, f15, f16, f31, rmm # perform operation
fnmadd.h f10, f15, f16, f31, rne # perform operation
fnmadd.h f10, f15, f16, f31, rtz # perform operation
fnmadd.h f10, f15, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f15, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f15, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f15, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f15, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f15, f16, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f7, 0(x2) # load 0x0000c000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0xd28a5a3a # load x3 with value 0xd28a5a3a
sw x3, 0(x2) # store 0xd28a5a3a in memory
flh f15, 0(x2) # load 0xd28a5a3a from memory into f15
fnmadd.h f27, f7, f8, f15, dyn # perform operation
fnmadd.h f27, f7, f8, f15, rdn # perform operation
fnmadd.h f27, f7, f8, f15, rmm # perform operation
fnmadd.h f27, f7, f8, f15, rne # perform operation
fnmadd.h f27, f7, f8, f15, rtz # perform operation
fnmadd.h f27, f7, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f7, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f7, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f7, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f7, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f7, f8, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f13, 0(x2) # load 0x0000c000 from memory into f13
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f10, 0(x2) # load 0x00008000 from memory into f10
la x2, scratch
li x3, 0x525ed65d # load x3 with value 0x525ed65d
sw x3, 0(x2) # store 0x525ed65d in memory
flh f3, 0(x2) # load 0x525ed65d from memory into f3
fnmadd.h f7, f13, f10, f3, dyn # perform operation
fnmadd.h f7, f13, f10, f3, rdn # perform operation
fnmadd.h f7, f13, f10, f3, rmm # perform operation
fnmadd.h f7, f13, f10, f3, rne # perform operation
fnmadd.h f7, f13, f10, f3, rtz # perform operation
fnmadd.h f7, f13, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f13, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f13, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f13, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f13, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f13, f10, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f10, 0(x2) # load 0x0000c000 from memory into f10
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f24, 0(x2) # load 0x00003c00 from memory into f24
la x2, scratch
li x3, 0xa3ebd944 # load x3 with value 0xa3ebd944
sw x3, 0(x2) # store 0xa3ebd944 in memory
flh f21, 0(x2) # load 0xa3ebd944 from memory into f21
fnmadd.h f12, f10, f24, f21, dyn # perform operation
fnmadd.h f12, f10, f24, f21, rdn # perform operation
fnmadd.h f12, f10, f24, f21, rmm # perform operation
fnmadd.h f12, f10, f24, f21, rne # perform operation
fnmadd.h f12, f10, f24, f21, rtz # perform operation
fnmadd.h f12, f10, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f10, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f10, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f10, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f10, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f10, f24, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f22, 0(x2) # load 0x0000c000 from memory into f22
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f25, 0(x2) # load 0x0000bc00 from memory into f25
la x2, scratch
li x3, 0x0493c110 # load x3 with value 0x0493c110
sw x3, 0(x2) # store 0x0493c110 in memory
flh f15, 0(x2) # load 0x0493c110 from memory into f15
fnmadd.h f20, f22, f25, f15, dyn # perform operation
fnmadd.h f20, f22, f25, f15, rdn # perform operation
fnmadd.h f20, f22, f25, f15, rmm # perform operation
fnmadd.h f20, f22, f25, f15, rne # perform operation
fnmadd.h f20, f22, f25, f15, rtz # perform operation
fnmadd.h f20, f22, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f22, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f22, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f22, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f22, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f22, f25, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f19, 0(x2) # load 0x0000c000 from memory into f19
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f26, 0(x2) # load 0x00003e00 from memory into f26
la x2, scratch
li x3, 0x3b74b2a4 # load x3 with value 0x3b74b2a4
sw x3, 0(x2) # store 0x3b74b2a4 in memory
flh f15, 0(x2) # load 0x3b74b2a4 from memory into f15
fnmadd.h f24, f19, f26, f15, dyn # perform operation
fnmadd.h f24, f19, f26, f15, rdn # perform operation
fnmadd.h f24, f19, f26, f15, rmm # perform operation
fnmadd.h f24, f19, f26, f15, rne # perform operation
fnmadd.h f24, f19, f26, f15, rtz # perform operation
fnmadd.h f24, f19, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f19, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f19, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f19, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f19, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f19, f26, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f9, 0(x2) # load 0x0000c000 from memory into f9
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f6, 0(x2) # load 0x0000be00 from memory into f6
la x2, scratch
li x3, 0x74700926 # load x3 with value 0x74700926
sw x3, 0(x2) # store 0x74700926 in memory
flh f27, 0(x2) # load 0x74700926 from memory into f27
fnmadd.h f22, f9, f6, f27, dyn # perform operation
fnmadd.h f22, f9, f6, f27, rdn # perform operation
fnmadd.h f22, f9, f6, f27, rmm # perform operation
fnmadd.h f22, f9, f6, f27, rne # perform operation
fnmadd.h f22, f9, f6, f27, rtz # perform operation
fnmadd.h f22, f9, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f9, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f9, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f9, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f9, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f9, f6, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f13, 0(x2) # load 0x0000c000 from memory into f13
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f28, 0(x2) # load 0x00004000 from memory into f28
la x2, scratch
li x3, 0x1138eb62 # load x3 with value 0x1138eb62
sw x3, 0(x2) # store 0x1138eb62 in memory
flh f16, 0(x2) # load 0x1138eb62 from memory into f16
fnmadd.h f10, f13, f28, f16, dyn # perform operation
fnmadd.h f10, f13, f28, f16, rdn # perform operation
fnmadd.h f10, f13, f28, f16, rmm # perform operation
fnmadd.h f10, f13, f28, f16, rne # perform operation
fnmadd.h f10, f13, f28, f16, rtz # perform operation
fnmadd.h f10, f13, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f13, f28, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f21, 0(x2) # load 0x0000c000 from memory into f21
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f28, 0(x2) # load 0x0000c000 from memory into f28
la x2, scratch
li x3, 0xd1805205 # load x3 with value 0xd1805205
sw x3, 0(x2) # store 0xd1805205 in memory
flh f30, 0(x2) # load 0xd1805205 from memory into f30
fnmadd.h f24, f21, f28, f30, dyn # perform operation
fnmadd.h f24, f21, f28, f30, rdn # perform operation
fnmadd.h f24, f21, f28, f30, rmm # perform operation
fnmadd.h f24, f21, f28, f30, rne # perform operation
fnmadd.h f24, f21, f28, f30, rtz # perform operation
fnmadd.h f24, f21, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f21, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f21, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f21, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f21, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f21, f28, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f14, 0(x2) # load 0x0000c000 from memory into f14
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
la x2, scratch
li x3, 0x135d5342 # load x3 with value 0x135d5342
sw x3, 0(x2) # store 0x135d5342 in memory
flh f1, 0(x2) # load 0x135d5342 from memory into f1
fnmadd.h f29, f14, f18, f1, dyn # perform operation
fnmadd.h f29, f14, f18, f1, rdn # perform operation
fnmadd.h f29, f14, f18, f1, rmm # perform operation
fnmadd.h f29, f14, f18, f1, rne # perform operation
fnmadd.h f29, f14, f18, f1, rtz # perform operation
fnmadd.h f29, f14, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f14, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f14, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f14, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f14, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f14, f18, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f18, 0(x2) # load 0x0000c000 from memory into f18
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f8, 0(x2) # load 0x00008400 from memory into f8
la x2, scratch
li x3, 0xd7eeccc9 # load x3 with value 0xd7eeccc9
sw x3, 0(x2) # store 0xd7eeccc9 in memory
flh f21, 0(x2) # load 0xd7eeccc9 from memory into f21
fnmadd.h f17, f18, f8, f21, dyn # perform operation
fnmadd.h f17, f18, f8, f21, rdn # perform operation
fnmadd.h f17, f18, f8, f21, rmm # perform operation
fnmadd.h f17, f18, f8, f21, rne # perform operation
fnmadd.h f17, f18, f8, f21, rtz # perform operation
fnmadd.h f17, f18, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f18, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f18, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f18, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f18, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f18, f8, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f16, 0(x2) # load 0x0000c000 from memory into f16
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f19, 0(x2) # load 0x00007bff from memory into f19
la x2, scratch
li x3, 0x702099cb # load x3 with value 0x702099cb
sw x3, 0(x2) # store 0x702099cb in memory
flh f10, 0(x2) # load 0x702099cb from memory into f10
fnmadd.h f11, f16, f19, f10, dyn # perform operation
fnmadd.h f11, f16, f19, f10, rdn # perform operation
fnmadd.h f11, f16, f19, f10, rmm # perform operation
fnmadd.h f11, f16, f19, f10, rne # perform operation
fnmadd.h f11, f16, f19, f10, rtz # perform operation
fnmadd.h f11, f16, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f16, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f16, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f16, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f16, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f16, f19, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f28, 0(x2) # load 0x0000fbff from memory into f28
la x2, scratch
li x3, 0x44ef45d8 # load x3 with value 0x44ef45d8
sw x3, 0(x2) # store 0x44ef45d8 in memory
flh f20, 0(x2) # load 0x44ef45d8 from memory into f20
fnmadd.h f25, f2, f28, f20, dyn # perform operation
fnmadd.h f25, f2, f28, f20, rdn # perform operation
fnmadd.h f25, f2, f28, f20, rmm # perform operation
fnmadd.h f25, f2, f28, f20, rne # perform operation
fnmadd.h f25, f2, f28, f20, rtz # perform operation
fnmadd.h f25, f2, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f2, f28, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f28, 0(x2) # load 0x0000c000 from memory into f28
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f31, 0(x2) # load 0x000003ff from memory into f31
la x2, scratch
li x3, 0x8757afe2 # load x3 with value 0x8757afe2
sw x3, 0(x2) # store 0x8757afe2 in memory
flh f16, 0(x2) # load 0x8757afe2 from memory into f16
fnmadd.h f22, f28, f31, f16, dyn # perform operation
fnmadd.h f22, f28, f31, f16, rdn # perform operation
fnmadd.h f22, f28, f31, f16, rmm # perform operation
fnmadd.h f22, f28, f31, f16, rne # perform operation
fnmadd.h f22, f28, f31, f16, rtz # perform operation
fnmadd.h f22, f28, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f28, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f28, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f28, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f28, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f28, f31, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f1, 0(x2) # load 0x0000c000 from memory into f1
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
la x2, scratch
li x3, 0xb0d94e65 # load x3 with value 0xb0d94e65
sw x3, 0(x2) # store 0xb0d94e65 in memory
flh f31, 0(x2) # load 0xb0d94e65 from memory into f31
fnmadd.h f16, f1, f19, f31, dyn # perform operation
fnmadd.h f16, f1, f19, f31, rdn # perform operation
fnmadd.h f16, f1, f19, f31, rmm # perform operation
fnmadd.h f16, f1, f19, f31, rne # perform operation
fnmadd.h f16, f1, f19, f31, rtz # perform operation
fnmadd.h f16, f1, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f1, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f1, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f1, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f1, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f1, f19, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f21, 0(x2) # load 0x0000c000 from memory into f21
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f12, 0(x2) # load 0x00000200 from memory into f12
la x2, scratch
li x3, 0x557655c8 # load x3 with value 0x557655c8
sw x3, 0(x2) # store 0x557655c8 in memory
flh f30, 0(x2) # load 0x557655c8 from memory into f30
fnmadd.h f7, f21, f12, f30, dyn # perform operation
fnmadd.h f7, f21, f12, f30, rdn # perform operation
fnmadd.h f7, f21, f12, f30, rmm # perform operation
fnmadd.h f7, f21, f12, f30, rne # perform operation
fnmadd.h f7, f21, f12, f30, rtz # perform operation
fnmadd.h f7, f21, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f21, f12, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f23, 0(x2) # load 0x0000c000 from memory into f23
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f16, 0(x2) # load 0x00008200 from memory into f16
la x2, scratch
li x3, 0xf5616e23 # load x3 with value 0xf5616e23
sw x3, 0(x2) # store 0xf5616e23 in memory
flh f25, 0(x2) # load 0xf5616e23 from memory into f25
fnmadd.h f12, f23, f16, f25, dyn # perform operation
fnmadd.h f12, f23, f16, f25, rdn # perform operation
fnmadd.h f12, f23, f16, f25, rmm # perform operation
fnmadd.h f12, f23, f16, f25, rne # perform operation
fnmadd.h f12, f23, f16, f25, rtz # perform operation
fnmadd.h f12, f23, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f23, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f23, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f23, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f23, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f23, f16, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0x13758be3 # load x3 with value 0x13758be3
sw x3, 0(x2) # store 0x13758be3 in memory
flh f20, 0(x2) # load 0x13758be3 from memory into f20
fnmadd.h f30, f2, f3, f20, dyn # perform operation
fnmadd.h f30, f2, f3, f20, rdn # perform operation
fnmadd.h f30, f2, f3, f20, rmm # perform operation
fnmadd.h f30, f2, f3, f20, rne # perform operation
fnmadd.h f30, f2, f3, f20, rtz # perform operation
fnmadd.h f30, f2, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f2, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f2, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f2, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f2, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f2, f3, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f9, 0(x2) # load 0x0000c000 from memory into f9
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f13, 0(x2) # load 0x00008001 from memory into f13
la x2, scratch
li x3, 0x752cc76e # load x3 with value 0x752cc76e
sw x3, 0(x2) # store 0x752cc76e in memory
flh f8, 0(x2) # load 0x752cc76e from memory into f8
fnmadd.h f16, f9, f13, f8, dyn # perform operation
fnmadd.h f16, f9, f13, f8, rdn # perform operation
fnmadd.h f16, f9, f13, f8, rmm # perform operation
fnmadd.h f16, f9, f13, f8, rne # perform operation
fnmadd.h f16, f9, f13, f8, rtz # perform operation
fnmadd.h f16, f9, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f9, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f9, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f9, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f9, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f9, f13, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f2, 0(x2) # load 0x00007c00 from memory into f2
la x2, scratch
li x3, 0xe321aee4 # load x3 with value 0xe321aee4
sw x3, 0(x2) # store 0xe321aee4 in memory
flh f9, 0(x2) # load 0xe321aee4 from memory into f9
fnmadd.h f6, f30, f2, f9, dyn # perform operation
fnmadd.h f6, f30, f2, f9, rdn # perform operation
fnmadd.h f6, f30, f2, f9, rmm # perform operation
fnmadd.h f6, f30, f2, f9, rne # perform operation
fnmadd.h f6, f30, f2, f9, rtz # perform operation
fnmadd.h f6, f30, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f30, f2, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f22, 0(x2) # load 0x0000fc00 from memory into f22
la x2, scratch
li x3, 0x282552e1 # load x3 with value 0x282552e1
sw x3, 0(x2) # store 0x282552e1 in memory
flh f28, 0(x2) # load 0x282552e1 from memory into f28
fnmadd.h f9, f20, f22, f28, dyn # perform operation
fnmadd.h f9, f20, f22, f28, rdn # perform operation
fnmadd.h f9, f20, f22, f28, rmm # perform operation
fnmadd.h f9, f20, f22, f28, rne # perform operation
fnmadd.h f9, f20, f22, f28, rtz # perform operation
fnmadd.h f9, f20, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f20, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f20, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f20, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f20, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f20, f22, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f27, 0(x2) # load 0x0000c000 from memory into f27
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f16, 0(x2) # load 0x00007e00 from memory into f16
la x2, scratch
li x3, 0x4b23277e # load x3 with value 0x4b23277e
sw x3, 0(x2) # store 0x4b23277e in memory
flh f22, 0(x2) # load 0x4b23277e from memory into f22
fnmadd.h f17, f27, f16, f22, dyn # perform operation
fnmadd.h f17, f27, f16, f22, rdn # perform operation
fnmadd.h f17, f27, f16, f22, rmm # perform operation
fnmadd.h f17, f27, f16, f22, rne # perform operation
fnmadd.h f17, f27, f16, f22, rtz # perform operation
fnmadd.h f17, f27, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f27, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f1, 0(x2) # load 0x0000c000 from memory into f1
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f27, 0(x2) # load 0x00007fff from memory into f27
la x2, scratch
li x3, 0x726ccd43 # load x3 with value 0x726ccd43
sw x3, 0(x2) # store 0x726ccd43 in memory
flh f11, 0(x2) # load 0x726ccd43 from memory into f11
fnmadd.h f8, f1, f27, f11, dyn # perform operation
fnmadd.h f8, f1, f27, f11, rdn # perform operation
fnmadd.h f8, f1, f27, f11, rmm # perform operation
fnmadd.h f8, f1, f27, f11, rne # perform operation
fnmadd.h f8, f1, f27, f11, rtz # perform operation
fnmadd.h f8, f1, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f1, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f1, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f1, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f1, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f1, f27, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f10, 0(x2) # load 0x0000c000 from memory into f10
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f14, 0(x2) # load 0x0000fe00 from memory into f14
la x2, scratch
li x3, 0xdf72573a # load x3 with value 0xdf72573a
sw x3, 0(x2) # store 0xdf72573a in memory
flh f23, 0(x2) # load 0xdf72573a from memory into f23
fnmadd.h f19, f10, f14, f23, dyn # perform operation
fnmadd.h f19, f10, f14, f23, rdn # perform operation
fnmadd.h f19, f10, f14, f23, rmm # perform operation
fnmadd.h f19, f10, f14, f23, rne # perform operation
fnmadd.h f19, f10, f14, f23, rtz # perform operation
fnmadd.h f19, f10, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f10, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f10, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f10, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f10, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f10, f14, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
la x2, scratch
li x3, 0xdf1abe32 # load x3 with value 0xdf1abe32
sw x3, 0(x2) # store 0xdf1abe32 in memory
flh f9, 0(x2) # load 0xdf1abe32 from memory into f9
fnmadd.h f3, f2, f30, f9, dyn # perform operation
fnmadd.h f3, f2, f30, f9, rdn # perform operation
fnmadd.h f3, f2, f30, f9, rmm # perform operation
fnmadd.h f3, f2, f30, f9, rne # perform operation
fnmadd.h f3, f2, f30, f9, rtz # perform operation
fnmadd.h f3, f2, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f2, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f2, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f2, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f2, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f2, f30, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f18, 0(x2) # load 0x0000c000 from memory into f18
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f30, 0(x2) # load 0x00007dff from memory into f30
la x2, scratch
li x3, 0x59800a2e # load x3 with value 0x59800a2e
sw x3, 0(x2) # store 0x59800a2e in memory
flh f5, 0(x2) # load 0x59800a2e from memory into f5
fnmadd.h f12, f18, f30, f5, dyn # perform operation
fnmadd.h f12, f18, f30, f5, rdn # perform operation
fnmadd.h f12, f18, f30, f5, rmm # perform operation
fnmadd.h f12, f18, f30, f5, rne # perform operation
fnmadd.h f12, f18, f30, f5, rtz # perform operation
fnmadd.h f12, f18, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f18, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f18, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f18, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f18, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f18, f30, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f14, 0(x2) # load 0x0000c000 from memory into f14
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f18, 0(x2) # load 0x0000fc01 from memory into f18
la x2, scratch
li x3, 0xf17f534e # load x3 with value 0xf17f534e
sw x3, 0(x2) # store 0xf17f534e in memory
flh f9, 0(x2) # load 0xf17f534e from memory into f9
fnmadd.h f17, f14, f18, f9, dyn # perform operation
fnmadd.h f17, f14, f18, f9, rdn # perform operation
fnmadd.h f17, f14, f18, f9, rmm # perform operation
fnmadd.h f17, f14, f18, f9, rne # perform operation
fnmadd.h f17, f14, f18, f9, rtz # perform operation
fnmadd.h f17, f14, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f14, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f14, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f14, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f14, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f14, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f24, 0(x2) # load 0x0000c000 from memory into f24
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f8, 0(x2) # load 0x000058b4 from memory into f8
la x2, scratch
li x3, 0x057cac06 # load x3 with value 0x057cac06
sw x3, 0(x2) # store 0x057cac06 in memory
flh f23, 0(x2) # load 0x057cac06 from memory into f23
fnmadd.h f11, f24, f8, f23, dyn # perform operation
fnmadd.h f11, f24, f8, f23, rdn # perform operation
fnmadd.h f11, f24, f8, f23, rmm # perform operation
fnmadd.h f11, f24, f8, f23, rne # perform operation
fnmadd.h f11, f24, f8, f23, rtz # perform operation
fnmadd.h f11, f24, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f24, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f24, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f24, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f24, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f24, f8, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f9, 0(x2) # load 0x0000c000 from memory into f9
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f6, 0(x2) # load 0x0000c93a from memory into f6
la x2, scratch
li x3, 0x00541cb3 # load x3 with value 0x00541cb3
sw x3, 0(x2) # store 0x00541cb3 in memory
flh f11, 0(x2) # load 0x00541cb3 from memory into f11
fnmadd.h f24, f9, f6, f11, dyn # perform operation
fnmadd.h f24, f9, f6, f11, rdn # perform operation
fnmadd.h f24, f9, f6, f11, rmm # perform operation
fnmadd.h f24, f9, f6, f11, rne # perform operation
fnmadd.h f24, f9, f6, f11, rtz # perform operation
fnmadd.h f24, f9, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f9, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f9, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f9, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f9, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f9, f6, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f15, 0(x2) # load 0x00000400 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x388c7007 # load x3 with value 0x388c7007
sw x3, 0(x2) # store 0x388c7007 in memory
flh f23, 0(x2) # load 0x388c7007 from memory into f23
fnmadd.h f6, f15, f1, f23, dyn # perform operation
fnmadd.h f6, f15, f1, f23, rdn # perform operation
fnmadd.h f6, f15, f1, f23, rmm # perform operation
fnmadd.h f6, f15, f1, f23, rne # perform operation
fnmadd.h f6, f15, f1, f23, rtz # perform operation
fnmadd.h f6, f15, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f15, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f15, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f15, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f15, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f15, f1, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f3, 0(x2) # load 0x00000400 from memory into f3
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f27, 0(x2) # load 0x00008000 from memory into f27
la x2, scratch
li x3, 0x2727fd97 # load x3 with value 0x2727fd97
sw x3, 0(x2) # store 0x2727fd97 in memory
flh f7, 0(x2) # load 0x2727fd97 from memory into f7
fnmadd.h f15, f3, f27, f7, dyn # perform operation
fnmadd.h f15, f3, f27, f7, rdn # perform operation
fnmadd.h f15, f3, f27, f7, rmm # perform operation
fnmadd.h f15, f3, f27, f7, rne # perform operation
fnmadd.h f15, f3, f27, f7, rtz # perform operation
fnmadd.h f15, f3, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f3, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f3, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f3, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f3, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f3, f27, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f27, 0(x2) # load 0x00000400 from memory into f27
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f13, 0(x2) # load 0x00003c00 from memory into f13
la x2, scratch
li x3, 0x0d5eaebf # load x3 with value 0x0d5eaebf
sw x3, 0(x2) # store 0x0d5eaebf in memory
flh f22, 0(x2) # load 0x0d5eaebf from memory into f22
fnmadd.h f1, f27, f13, f22, dyn # perform operation
fnmadd.h f1, f27, f13, f22, rdn # perform operation
fnmadd.h f1, f27, f13, f22, rmm # perform operation
fnmadd.h f1, f27, f13, f22, rne # perform operation
fnmadd.h f1, f27, f13, f22, rtz # perform operation
fnmadd.h f1, f27, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f27, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f27, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f27, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f27, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f27, f13, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
la x2, scratch
li x3, 0x5d06aeaf # load x3 with value 0x5d06aeaf
sw x3, 0(x2) # store 0x5d06aeaf in memory
flh f11, 0(x2) # load 0x5d06aeaf from memory into f11
fnmadd.h f27, f18, f24, f11, dyn # perform operation
fnmadd.h f27, f18, f24, f11, rdn # perform operation
fnmadd.h f27, f18, f24, f11, rmm # perform operation
fnmadd.h f27, f18, f24, f11, rne # perform operation
fnmadd.h f27, f18, f24, f11, rtz # perform operation
fnmadd.h f27, f18, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f18, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f18, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f18, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f18, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f18, f24, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f22, 0(x2) # load 0x00000400 from memory into f22
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f30, 0(x2) # load 0x00003e00 from memory into f30
la x2, scratch
li x3, 0x5976f32d # load x3 with value 0x5976f32d
sw x3, 0(x2) # store 0x5976f32d in memory
flh f19, 0(x2) # load 0x5976f32d from memory into f19
fnmadd.h f25, f22, f30, f19, dyn # perform operation
fnmadd.h f25, f22, f30, f19, rdn # perform operation
fnmadd.h f25, f22, f30, f19, rmm # perform operation
fnmadd.h f25, f22, f30, f19, rne # perform operation
fnmadd.h f25, f22, f30, f19, rtz # perform operation
fnmadd.h f25, f22, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f22, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f22, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f22, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f22, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f22, f30, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f23, 0(x2) # load 0x00000400 from memory into f23
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f6, 0(x2) # load 0x0000be00 from memory into f6
la x2, scratch
li x3, 0x98a00fd6 # load x3 with value 0x98a00fd6
sw x3, 0(x2) # store 0x98a00fd6 in memory
flh f12, 0(x2) # load 0x98a00fd6 from memory into f12
fnmadd.h f7, f23, f6, f12, dyn # perform operation
fnmadd.h f7, f23, f6, f12, rdn # perform operation
fnmadd.h f7, f23, f6, f12, rmm # perform operation
fnmadd.h f7, f23, f6, f12, rne # perform operation
fnmadd.h f7, f23, f6, f12, rtz # perform operation
fnmadd.h f7, f23, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f23, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f23, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f23, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f23, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f23, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f8, 0(x2) # load 0x00000400 from memory into f8
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f20, 0(x2) # load 0x00004000 from memory into f20
la x2, scratch
li x3, 0x4241d525 # load x3 with value 0x4241d525
sw x3, 0(x2) # store 0x4241d525 in memory
flh f16, 0(x2) # load 0x4241d525 from memory into f16
fnmadd.h f15, f8, f20, f16, dyn # perform operation
fnmadd.h f15, f8, f20, f16, rdn # perform operation
fnmadd.h f15, f8, f20, f16, rmm # perform operation
fnmadd.h f15, f8, f20, f16, rne # perform operation
fnmadd.h f15, f8, f20, f16, rtz # perform operation
fnmadd.h f15, f8, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f8, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f8, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f8, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f8, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f8, f20, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f1, 0(x2) # load 0x0000c000 from memory into f1
la x2, scratch
li x3, 0xb6f495e0 # load x3 with value 0xb6f495e0
sw x3, 0(x2) # store 0xb6f495e0 in memory
flh f14, 0(x2) # load 0xb6f495e0 from memory into f14
fnmadd.h f26, f18, f1, f14, dyn # perform operation
fnmadd.h f26, f18, f1, f14, rdn # perform operation
fnmadd.h f26, f18, f1, f14, rmm # perform operation
fnmadd.h f26, f18, f1, f14, rne # perform operation
fnmadd.h f26, f18, f1, f14, rtz # perform operation
fnmadd.h f26, f18, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f18, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f18, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f18, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f18, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f18, f1, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f8, 0(x2) # load 0x00000400 from memory into f8
la x2, scratch
li x3, 0x00984d44 # load x3 with value 0x00984d44
sw x3, 0(x2) # store 0x00984d44 in memory
flh f9, 0(x2) # load 0x00984d44 from memory into f9
fnmadd.h f30, f18, f8, f9, dyn # perform operation
fnmadd.h f30, f18, f8, f9, rdn # perform operation
fnmadd.h f30, f18, f8, f9, rmm # perform operation
fnmadd.h f30, f18, f8, f9, rne # perform operation
fnmadd.h f30, f18, f8, f9, rtz # perform operation
fnmadd.h f30, f18, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f18, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f18, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f18, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f18, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f18, f8, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f12, 0(x2) # load 0x00000400 from memory into f12
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f19, 0(x2) # load 0x00008400 from memory into f19
la x2, scratch
li x3, 0x11807322 # load x3 with value 0x11807322
sw x3, 0(x2) # store 0x11807322 in memory
flh f20, 0(x2) # load 0x11807322 from memory into f20
fnmadd.h f26, f12, f19, f20, dyn # perform operation
fnmadd.h f26, f12, f19, f20, rdn # perform operation
fnmadd.h f26, f12, f19, f20, rmm # perform operation
fnmadd.h f26, f12, f19, f20, rne # perform operation
fnmadd.h f26, f12, f19, f20, rtz # perform operation
fnmadd.h f26, f12, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f12, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f12, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f12, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f12, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f12, f19, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f19, 0(x2) # load 0x00000400 from memory into f19
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f27, 0(x2) # load 0x00007bff from memory into f27
la x2, scratch
li x3, 0xcb08bfd6 # load x3 with value 0xcb08bfd6
sw x3, 0(x2) # store 0xcb08bfd6 in memory
flh f22, 0(x2) # load 0xcb08bfd6 from memory into f22
fnmadd.h f24, f19, f27, f22, dyn # perform operation
fnmadd.h f24, f19, f27, f22, rdn # perform operation
fnmadd.h f24, f19, f27, f22, rmm # perform operation
fnmadd.h f24, f19, f27, f22, rne # perform operation
fnmadd.h f24, f19, f27, f22, rtz # perform operation
fnmadd.h f24, f19, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f19, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f19, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f19, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f19, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f19, f27, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f7, 0(x2) # load 0x00000400 from memory into f7
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f2, 0(x2) # load 0x0000fbff from memory into f2
la x2, scratch
li x3, 0x3b22dbe9 # load x3 with value 0x3b22dbe9
sw x3, 0(x2) # store 0x3b22dbe9 in memory
flh f23, 0(x2) # load 0x3b22dbe9 from memory into f23
fnmadd.h f25, f7, f2, f23, dyn # perform operation
fnmadd.h f25, f7, f2, f23, rdn # perform operation
fnmadd.h f25, f7, f2, f23, rmm # perform operation
fnmadd.h f25, f7, f2, f23, rne # perform operation
fnmadd.h f25, f7, f2, f23, rtz # perform operation
fnmadd.h f25, f7, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f7, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f7, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f7, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f7, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f7, f2, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f28, 0(x2) # load 0x00000400 from memory into f28
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f14, 0(x2) # load 0x000003ff from memory into f14
la x2, scratch
li x3, 0xa30b170e # load x3 with value 0xa30b170e
sw x3, 0(x2) # store 0xa30b170e in memory
flh f19, 0(x2) # load 0xa30b170e from memory into f19
fnmadd.h f21, f28, f14, f19, dyn # perform operation
fnmadd.h f21, f28, f14, f19, rdn # perform operation
fnmadd.h f21, f28, f14, f19, rmm # perform operation
fnmadd.h f21, f28, f14, f19, rne # perform operation
fnmadd.h f21, f28, f14, f19, rtz # perform operation
fnmadd.h f21, f28, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f28, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f28, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f28, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f28, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f28, f14, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f9, 0(x2) # load 0x00000400 from memory into f9
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f21, 0(x2) # load 0x000083ff from memory into f21
la x2, scratch
li x3, 0x8a22db3e # load x3 with value 0x8a22db3e
sw x3, 0(x2) # store 0x8a22db3e in memory
flh f20, 0(x2) # load 0x8a22db3e from memory into f20
fnmadd.h f6, f9, f21, f20, dyn # perform operation
fnmadd.h f6, f9, f21, f20, rdn # perform operation
fnmadd.h f6, f9, f21, f20, rmm # perform operation
fnmadd.h f6, f9, f21, f20, rne # perform operation
fnmadd.h f6, f9, f21, f20, rtz # perform operation
fnmadd.h f6, f9, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f9, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f9, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f9, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f9, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f9, f21, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f26, 0(x2) # load 0x00000400 from memory into f26
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f1, 0(x2) # load 0x00000200 from memory into f1
la x2, scratch
li x3, 0xfce63668 # load x3 with value 0xfce63668
sw x3, 0(x2) # store 0xfce63668 in memory
flh f31, 0(x2) # load 0xfce63668 from memory into f31
fnmadd.h f19, f26, f1, f31, dyn # perform operation
fnmadd.h f19, f26, f1, f31, rdn # perform operation
fnmadd.h f19, f26, f1, f31, rmm # perform operation
fnmadd.h f19, f26, f1, f31, rne # perform operation
fnmadd.h f19, f26, f1, f31, rtz # perform operation
fnmadd.h f19, f26, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f26, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f26, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f26, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f26, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f26, f1, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f15, 0(x2) # load 0x00000400 from memory into f15
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f14, 0(x2) # load 0x00008200 from memory into f14
la x2, scratch
li x3, 0x091a06ff # load x3 with value 0x091a06ff
sw x3, 0(x2) # store 0x091a06ff in memory
flh f1, 0(x2) # load 0x091a06ff from memory into f1
fnmadd.h f19, f15, f14, f1, dyn # perform operation
fnmadd.h f19, f15, f14, f1, rdn # perform operation
fnmadd.h f19, f15, f14, f1, rmm # perform operation
fnmadd.h f19, f15, f14, f1, rne # perform operation
fnmadd.h f19, f15, f14, f1, rtz # perform operation
fnmadd.h f19, f15, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f15, f14, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f24, 0(x2) # load 0x00000400 from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0xcc66f621 # load x3 with value 0xcc66f621
sw x3, 0(x2) # store 0xcc66f621 in memory
flh f8, 0(x2) # load 0xcc66f621 from memory into f8
fnmadd.h f16, f24, f28, f8, dyn # perform operation
fnmadd.h f16, f24, f28, f8, rdn # perform operation
fnmadd.h f16, f24, f28, f8, rmm # perform operation
fnmadd.h f16, f24, f28, f8, rne # perform operation
fnmadd.h f16, f24, f28, f8, rtz # perform operation
fnmadd.h f16, f24, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f24, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f24, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f24, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f24, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f24, f28, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f27, 0(x2) # load 0x00000400 from memory into f27
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f19, 0(x2) # load 0x00008001 from memory into f19
la x2, scratch
li x3, 0x3b32300f # load x3 with value 0x3b32300f
sw x3, 0(x2) # store 0x3b32300f in memory
flh f31, 0(x2) # load 0x3b32300f from memory into f31
fnmadd.h f16, f27, f19, f31, dyn # perform operation
fnmadd.h f16, f27, f19, f31, rdn # perform operation
fnmadd.h f16, f27, f19, f31, rmm # perform operation
fnmadd.h f16, f27, f19, f31, rne # perform operation
fnmadd.h f16, f27, f19, f31, rtz # perform operation
fnmadd.h f16, f27, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f27, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f27, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f27, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f27, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f27, f19, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f27, 0(x2) # load 0x00000400 from memory into f27
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f22, 0(x2) # load 0x00007c00 from memory into f22
la x2, scratch
li x3, 0x903ee1a4 # load x3 with value 0x903ee1a4
sw x3, 0(x2) # store 0x903ee1a4 in memory
flh f30, 0(x2) # load 0x903ee1a4 from memory into f30
fnmadd.h f18, f27, f22, f30, dyn # perform operation
fnmadd.h f18, f27, f22, f30, rdn # perform operation
fnmadd.h f18, f27, f22, f30, rmm # perform operation
fnmadd.h f18, f27, f22, f30, rne # perform operation
fnmadd.h f18, f27, f22, f30, rtz # perform operation
fnmadd.h f18, f27, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f27, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f27, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f27, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f27, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f27, f22, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f29, 0(x2) # load 0x00000400 from memory into f29
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f28, 0(x2) # load 0x0000fc00 from memory into f28
la x2, scratch
li x3, 0x33b82856 # load x3 with value 0x33b82856
sw x3, 0(x2) # store 0x33b82856 in memory
flh f8, 0(x2) # load 0x33b82856 from memory into f8
fnmadd.h f16, f29, f28, f8, dyn # perform operation
fnmadd.h f16, f29, f28, f8, rdn # perform operation
fnmadd.h f16, f29, f28, f8, rmm # perform operation
fnmadd.h f16, f29, f28, f8, rne # perform operation
fnmadd.h f16, f29, f28, f8, rtz # perform operation
fnmadd.h f16, f29, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f29, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f29, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f29, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f29, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f29, f28, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f22, 0(x2) # load 0x00000400 from memory into f22
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f26, 0(x2) # load 0x00007e00 from memory into f26
la x2, scratch
li x3, 0x3d69797c # load x3 with value 0x3d69797c
sw x3, 0(x2) # store 0x3d69797c in memory
flh f21, 0(x2) # load 0x3d69797c from memory into f21
fnmadd.h f10, f22, f26, f21, dyn # perform operation
fnmadd.h f10, f22, f26, f21, rdn # perform operation
fnmadd.h f10, f22, f26, f21, rmm # perform operation
fnmadd.h f10, f22, f26, f21, rne # perform operation
fnmadd.h f10, f22, f26, f21, rtz # perform operation
fnmadd.h f10, f22, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f22, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f22, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f22, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f22, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f22, f26, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f11, 0(x2) # load 0x00000400 from memory into f11
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f6, 0(x2) # load 0x00007fff from memory into f6
la x2, scratch
li x3, 0xad8592bb # load x3 with value 0xad8592bb
sw x3, 0(x2) # store 0xad8592bb in memory
flh f9, 0(x2) # load 0xad8592bb from memory into f9
fnmadd.h f22, f11, f6, f9, dyn # perform operation
fnmadd.h f22, f11, f6, f9, rdn # perform operation
fnmadd.h f22, f11, f6, f9, rmm # perform operation
fnmadd.h f22, f11, f6, f9, rne # perform operation
fnmadd.h f22, f11, f6, f9, rtz # perform operation
fnmadd.h f22, f11, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f11, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f11, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f11, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f11, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f11, f6, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f31, 0(x2) # load 0x0000fe00 from memory into f31
la x2, scratch
li x3, 0x1c4288c2 # load x3 with value 0x1c4288c2
sw x3, 0(x2) # store 0x1c4288c2 in memory
flh f9, 0(x2) # load 0x1c4288c2 from memory into f9
fnmadd.h f11, f1, f31, f9, dyn # perform operation
fnmadd.h f11, f1, f31, f9, rdn # perform operation
fnmadd.h f11, f1, f31, f9, rmm # perform operation
fnmadd.h f11, f1, f31, f9, rne # perform operation
fnmadd.h f11, f1, f31, f9, rtz # perform operation
fnmadd.h f11, f1, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f1, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f1, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f1, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f1, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f1, f31, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f23, 0(x2) # load 0x00000400 from memory into f23
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f18, 0(x2) # load 0x00007c01 from memory into f18
la x2, scratch
li x3, 0xcf195000 # load x3 with value 0xcf195000
sw x3, 0(x2) # store 0xcf195000 in memory
flh f14, 0(x2) # load 0xcf195000 from memory into f14
fnmadd.h f15, f23, f18, f14, dyn # perform operation
fnmadd.h f15, f23, f18, f14, rdn # perform operation
fnmadd.h f15, f23, f18, f14, rmm # perform operation
fnmadd.h f15, f23, f18, f14, rne # perform operation
fnmadd.h f15, f23, f18, f14, rtz # perform operation
fnmadd.h f15, f23, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f23, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f23, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f23, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f23, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f23, f18, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f17, 0(x2) # load 0x00000400 from memory into f17
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f16, 0(x2) # load 0x00007dff from memory into f16
la x2, scratch
li x3, 0x4f7bf508 # load x3 with value 0x4f7bf508
sw x3, 0(x2) # store 0x4f7bf508 in memory
flh f27, 0(x2) # load 0x4f7bf508 from memory into f27
fnmadd.h f23, f17, f16, f27, dyn # perform operation
fnmadd.h f23, f17, f16, f27, rdn # perform operation
fnmadd.h f23, f17, f16, f27, rmm # perform operation
fnmadd.h f23, f17, f16, f27, rne # perform operation
fnmadd.h f23, f17, f16, f27, rtz # perform operation
fnmadd.h f23, f17, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f17, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f17, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f17, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f17, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f17, f16, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f25, 0(x2) # load 0x00000400 from memory into f25
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f5, 0(x2) # load 0x0000fc01 from memory into f5
la x2, scratch
li x3, 0xc5a67809 # load x3 with value 0xc5a67809
sw x3, 0(x2) # store 0xc5a67809 in memory
flh f13, 0(x2) # load 0xc5a67809 from memory into f13
fnmadd.h f14, f25, f5, f13, dyn # perform operation
fnmadd.h f14, f25, f5, f13, rdn # perform operation
fnmadd.h f14, f25, f5, f13, rmm # perform operation
fnmadd.h f14, f25, f5, f13, rne # perform operation
fnmadd.h f14, f25, f5, f13, rtz # perform operation
fnmadd.h f14, f25, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f25, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f25, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f25, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f25, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f25, f5, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f16, 0(x2) # load 0x00000400 from memory into f16
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f12, 0(x2) # load 0x000058b4 from memory into f12
la x2, scratch
li x3, 0x23ada5f4 # load x3 with value 0x23ada5f4
sw x3, 0(x2) # store 0x23ada5f4 in memory
flh f29, 0(x2) # load 0x23ada5f4 from memory into f29
fnmadd.h f24, f16, f12, f29, dyn # perform operation
fnmadd.h f24, f16, f12, f29, rdn # perform operation
fnmadd.h f24, f16, f12, f29, rmm # perform operation
fnmadd.h f24, f16, f12, f29, rne # perform operation
fnmadd.h f24, f16, f12, f29, rtz # perform operation
fnmadd.h f24, f16, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f16, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f16, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f16, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f16, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f16, f12, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f27, 0(x2) # load 0x00000400 from memory into f27
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f19, 0(x2) # load 0x0000c93a from memory into f19
la x2, scratch
li x3, 0x2f85dbc5 # load x3 with value 0x2f85dbc5
sw x3, 0(x2) # store 0x2f85dbc5 in memory
flh f5, 0(x2) # load 0x2f85dbc5 from memory into f5
fnmadd.h f31, f27, f19, f5, dyn # perform operation
fnmadd.h f31, f27, f19, f5, rdn # perform operation
fnmadd.h f31, f27, f19, f5, rmm # perform operation
fnmadd.h f31, f27, f19, f5, rne # perform operation
fnmadd.h f31, f27, f19, f5, rtz # perform operation
fnmadd.h f31, f27, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f27, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f27, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f27, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f27, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f27, f19, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f14, 0(x2) # load 0x00008400 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x11da9c5e # load x3 with value 0x11da9c5e
sw x3, 0(x2) # store 0x11da9c5e in memory
flh f31, 0(x2) # load 0x11da9c5e from memory into f31
fnmadd.h f3, f14, f11, f31, dyn # perform operation
fnmadd.h f3, f14, f11, f31, rdn # perform operation
fnmadd.h f3, f14, f11, f31, rmm # perform operation
fnmadd.h f3, f14, f11, f31, rne # perform operation
fnmadd.h f3, f14, f11, f31, rtz # perform operation
fnmadd.h f3, f14, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f14, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f14, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f14, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f14, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f14, f11, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f6, 0(x2) # load 0x00008400 from memory into f6
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f30, 0(x2) # load 0x00008000 from memory into f30
la x2, scratch
li x3, 0x7d45d3f9 # load x3 with value 0x7d45d3f9
sw x3, 0(x2) # store 0x7d45d3f9 in memory
flh f13, 0(x2) # load 0x7d45d3f9 from memory into f13
fnmadd.h f26, f6, f30, f13, dyn # perform operation
fnmadd.h f26, f6, f30, f13, rdn # perform operation
fnmadd.h f26, f6, f30, f13, rmm # perform operation
fnmadd.h f26, f6, f30, f13, rne # perform operation
fnmadd.h f26, f6, f30, f13, rtz # perform operation
fnmadd.h f26, f6, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f6, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f6, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f6, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f6, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f6, f30, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f27, 0(x2) # load 0x00008400 from memory into f27
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f9, 0(x2) # load 0x00003c00 from memory into f9
la x2, scratch
li x3, 0x9b105820 # load x3 with value 0x9b105820
sw x3, 0(x2) # store 0x9b105820 in memory
flh f15, 0(x2) # load 0x9b105820 from memory into f15
fnmadd.h f23, f27, f9, f15, dyn # perform operation
fnmadd.h f23, f27, f9, f15, rdn # perform operation
fnmadd.h f23, f27, f9, f15, rmm # perform operation
fnmadd.h f23, f27, f9, f15, rne # perform operation
fnmadd.h f23, f27, f9, f15, rtz # perform operation
fnmadd.h f23, f27, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f27, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f27, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f27, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f27, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f27, f9, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f8, 0(x2) # load 0x00008400 from memory into f8
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f30, 0(x2) # load 0x0000bc00 from memory into f30
la x2, scratch
li x3, 0x69926a42 # load x3 with value 0x69926a42
sw x3, 0(x2) # store 0x69926a42 in memory
flh f14, 0(x2) # load 0x69926a42 from memory into f14
fnmadd.h f5, f8, f30, f14, dyn # perform operation
fnmadd.h f5, f8, f30, f14, rdn # perform operation
fnmadd.h f5, f8, f30, f14, rmm # perform operation
fnmadd.h f5, f8, f30, f14, rne # perform operation
fnmadd.h f5, f8, f30, f14, rtz # perform operation
fnmadd.h f5, f8, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f8, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f8, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f8, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f8, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f8, f30, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f28, 0(x2) # load 0x00008400 from memory into f28
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f26, 0(x2) # load 0x00003e00 from memory into f26
la x2, scratch
li x3, 0xd6f49c48 # load x3 with value 0xd6f49c48
sw x3, 0(x2) # store 0xd6f49c48 in memory
flh f8, 0(x2) # load 0xd6f49c48 from memory into f8
fnmadd.h f18, f28, f26, f8, dyn # perform operation
fnmadd.h f18, f28, f26, f8, rdn # perform operation
fnmadd.h f18, f28, f26, f8, rmm # perform operation
fnmadd.h f18, f28, f26, f8, rne # perform operation
fnmadd.h f18, f28, f26, f8, rtz # perform operation
fnmadd.h f18, f28, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f28, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f28, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f28, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f28, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f28, f26, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f31, 0(x2) # load 0x00008400 from memory into f31
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f2, 0(x2) # load 0x0000be00 from memory into f2
la x2, scratch
li x3, 0xb29ecb9e # load x3 with value 0xb29ecb9e
sw x3, 0(x2) # store 0xb29ecb9e in memory
flh f9, 0(x2) # load 0xb29ecb9e from memory into f9
fnmadd.h f22, f31, f2, f9, dyn # perform operation
fnmadd.h f22, f31, f2, f9, rdn # perform operation
fnmadd.h f22, f31, f2, f9, rmm # perform operation
fnmadd.h f22, f31, f2, f9, rne # perform operation
fnmadd.h f22, f31, f2, f9, rtz # perform operation
fnmadd.h f22, f31, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f31, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f31, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f31, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f31, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f31, f2, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f31, 0(x2) # load 0x00008400 from memory into f31
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f25, 0(x2) # load 0x00004000 from memory into f25
la x2, scratch
li x3, 0x47935014 # load x3 with value 0x47935014
sw x3, 0(x2) # store 0x47935014 in memory
flh f11, 0(x2) # load 0x47935014 from memory into f11
fnmadd.h f9, f31, f25, f11, dyn # perform operation
fnmadd.h f9, f31, f25, f11, rdn # perform operation
fnmadd.h f9, f31, f25, f11, rmm # perform operation
fnmadd.h f9, f31, f25, f11, rne # perform operation
fnmadd.h f9, f31, f25, f11, rtz # perform operation
fnmadd.h f9, f31, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f31, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f31, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f31, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f31, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f31, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f16, 0(x2) # load 0x0000c000 from memory into f16
la x2, scratch
li x3, 0x637583c8 # load x3 with value 0x637583c8
sw x3, 0(x2) # store 0x637583c8 in memory
flh f23, 0(x2) # load 0x637583c8 from memory into f23
fnmadd.h f31, f15, f16, f23, dyn # perform operation
fnmadd.h f31, f15, f16, f23, rdn # perform operation
fnmadd.h f31, f15, f16, f23, rmm # perform operation
fnmadd.h f31, f15, f16, f23, rne # perform operation
fnmadd.h f31, f15, f16, f23, rtz # perform operation
fnmadd.h f31, f15, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f15, f16, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f6, 0(x2) # load 0x00008400 from memory into f6
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f17, 0(x2) # load 0x00000400 from memory into f17
la x2, scratch
li x3, 0xf5cff578 # load x3 with value 0xf5cff578
sw x3, 0(x2) # store 0xf5cff578 in memory
flh f28, 0(x2) # load 0xf5cff578 from memory into f28
fnmadd.h f23, f6, f17, f28, dyn # perform operation
fnmadd.h f23, f6, f17, f28, rdn # perform operation
fnmadd.h f23, f6, f17, f28, rmm # perform operation
fnmadd.h f23, f6, f17, f28, rne # perform operation
fnmadd.h f23, f6, f17, f28, rtz # perform operation
fnmadd.h f23, f6, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f6, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f6, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f6, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f6, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f6, f17, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f22, 0(x2) # load 0x00008400 from memory into f22
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f2, 0(x2) # load 0x00008400 from memory into f2
la x2, scratch
li x3, 0x4c57377b # load x3 with value 0x4c57377b
sw x3, 0(x2) # store 0x4c57377b in memory
flh f9, 0(x2) # load 0x4c57377b from memory into f9
fnmadd.h f18, f22, f2, f9, dyn # perform operation
fnmadd.h f18, f22, f2, f9, rdn # perform operation
fnmadd.h f18, f22, f2, f9, rmm # perform operation
fnmadd.h f18, f22, f2, f9, rne # perform operation
fnmadd.h f18, f22, f2, f9, rtz # perform operation
fnmadd.h f18, f22, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f22, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f22, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f22, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f22, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f22, f2, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f30, 0(x2) # load 0x00008400 from memory into f30
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f22, 0(x2) # load 0x00007bff from memory into f22
la x2, scratch
li x3, 0x831df53c # load x3 with value 0x831df53c
sw x3, 0(x2) # store 0x831df53c in memory
flh f28, 0(x2) # load 0x831df53c from memory into f28
fnmadd.h f10, f30, f22, f28, dyn # perform operation
fnmadd.h f10, f30, f22, f28, rdn # perform operation
fnmadd.h f10, f30, f22, f28, rmm # perform operation
fnmadd.h f10, f30, f22, f28, rne # perform operation
fnmadd.h f10, f30, f22, f28, rtz # perform operation
fnmadd.h f10, f30, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f30, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f30, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f30, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f30, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f30, f22, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f19, 0(x2) # load 0x00008400 from memory into f19
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f16, 0(x2) # load 0x0000fbff from memory into f16
la x2, scratch
li x3, 0xec67639d # load x3 with value 0xec67639d
sw x3, 0(x2) # store 0xec67639d in memory
flh f23, 0(x2) # load 0xec67639d from memory into f23
fnmadd.h f27, f19, f16, f23, dyn # perform operation
fnmadd.h f27, f19, f16, f23, rdn # perform operation
fnmadd.h f27, f19, f16, f23, rmm # perform operation
fnmadd.h f27, f19, f16, f23, rne # perform operation
fnmadd.h f27, f19, f16, f23, rtz # perform operation
fnmadd.h f27, f19, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f19, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f19, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f19, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f19, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f19, f16, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f20, 0(x2) # load 0x00008400 from memory into f20
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f18, 0(x2) # load 0x000003ff from memory into f18
la x2, scratch
li x3, 0xd04f0908 # load x3 with value 0xd04f0908
sw x3, 0(x2) # store 0xd04f0908 in memory
flh f2, 0(x2) # load 0xd04f0908 from memory into f2
fnmadd.h f24, f20, f18, f2, dyn # perform operation
fnmadd.h f24, f20, f18, f2, rdn # perform operation
fnmadd.h f24, f20, f18, f2, rmm # perform operation
fnmadd.h f24, f20, f18, f2, rne # perform operation
fnmadd.h f24, f20, f18, f2, rtz # perform operation
fnmadd.h f24, f20, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f20, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f20, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f20, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f20, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f20, f18, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f17, 0(x2) # load 0x00008400 from memory into f17
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f14, 0(x2) # load 0x000083ff from memory into f14
la x2, scratch
li x3, 0x1a2255ec # load x3 with value 0x1a2255ec
sw x3, 0(x2) # store 0x1a2255ec in memory
flh f19, 0(x2) # load 0x1a2255ec from memory into f19
fnmadd.h f27, f17, f14, f19, dyn # perform operation
fnmadd.h f27, f17, f14, f19, rdn # perform operation
fnmadd.h f27, f17, f14, f19, rmm # perform operation
fnmadd.h f27, f17, f14, f19, rne # perform operation
fnmadd.h f27, f17, f14, f19, rtz # perform operation
fnmadd.h f27, f17, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f17, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f17, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f17, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f17, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f17, f14, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f2, 0(x2) # load 0x00008400 from memory into f2
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f10, 0(x2) # load 0x00000200 from memory into f10
la x2, scratch
li x3, 0xd691c0f7 # load x3 with value 0xd691c0f7
sw x3, 0(x2) # store 0xd691c0f7 in memory
flh f21, 0(x2) # load 0xd691c0f7 from memory into f21
fnmadd.h f18, f2, f10, f21, dyn # perform operation
fnmadd.h f18, f2, f10, f21, rdn # perform operation
fnmadd.h f18, f2, f10, f21, rmm # perform operation
fnmadd.h f18, f2, f10, f21, rne # perform operation
fnmadd.h f18, f2, f10, f21, rtz # perform operation
fnmadd.h f18, f2, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f2, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f2, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f2, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f2, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f2, f10, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f8, 0(x2) # load 0x00008400 from memory into f8
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f29, 0(x2) # load 0x00008200 from memory into f29
la x2, scratch
li x3, 0x6bdbb235 # load x3 with value 0x6bdbb235
sw x3, 0(x2) # store 0x6bdbb235 in memory
flh f12, 0(x2) # load 0x6bdbb235 from memory into f12
fnmadd.h f10, f8, f29, f12, dyn # perform operation
fnmadd.h f10, f8, f29, f12, rdn # perform operation
fnmadd.h f10, f8, f29, f12, rmm # perform operation
fnmadd.h f10, f8, f29, f12, rne # perform operation
fnmadd.h f10, f8, f29, f12, rtz # perform operation
fnmadd.h f10, f8, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f8, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f8, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f8, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f8, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f8, f29, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f14, 0(x2) # load 0x00008400 from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0x5bb1963b # load x3 with value 0x5bb1963b
sw x3, 0(x2) # store 0x5bb1963b in memory
flh f11, 0(x2) # load 0x5bb1963b from memory into f11
fnmadd.h f10, f14, f26, f11, dyn # perform operation
fnmadd.h f10, f14, f26, f11, rdn # perform operation
fnmadd.h f10, f14, f26, f11, rmm # perform operation
fnmadd.h f10, f14, f26, f11, rne # perform operation
fnmadd.h f10, f14, f26, f11, rtz # perform operation
fnmadd.h f10, f14, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f14, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f14, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f14, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f14, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f14, f26, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f5, 0(x2) # load 0x00008400 from memory into f5
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
la x2, scratch
li x3, 0xc204151e # load x3 with value 0xc204151e
sw x3, 0(x2) # store 0xc204151e in memory
flh f16, 0(x2) # load 0xc204151e from memory into f16
fnmadd.h f1, f5, f22, f16, dyn # perform operation
fnmadd.h f1, f5, f22, f16, rdn # perform operation
fnmadd.h f1, f5, f22, f16, rmm # perform operation
fnmadd.h f1, f5, f22, f16, rne # perform operation
fnmadd.h f1, f5, f22, f16, rtz # perform operation
fnmadd.h f1, f5, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f5, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f5, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f5, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f5, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f5, f22, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f22, 0(x2) # load 0x00008400 from memory into f22
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f2, 0(x2) # load 0x00007c00 from memory into f2
la x2, scratch
li x3, 0x803b236d # load x3 with value 0x803b236d
sw x3, 0(x2) # store 0x803b236d in memory
flh f5, 0(x2) # load 0x803b236d from memory into f5
fnmadd.h f25, f22, f2, f5, dyn # perform operation
fnmadd.h f25, f22, f2, f5, rdn # perform operation
fnmadd.h f25, f22, f2, f5, rmm # perform operation
fnmadd.h f25, f22, f2, f5, rne # perform operation
fnmadd.h f25, f22, f2, f5, rtz # perform operation
fnmadd.h f25, f22, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f22, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f22, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f22, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f22, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f22, f2, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f16, 0(x2) # load 0x00008400 from memory into f16
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f28, 0(x2) # load 0x0000fc00 from memory into f28
la x2, scratch
li x3, 0xc0ae64d5 # load x3 with value 0xc0ae64d5
sw x3, 0(x2) # store 0xc0ae64d5 in memory
flh f19, 0(x2) # load 0xc0ae64d5 from memory into f19
fnmadd.h f13, f16, f28, f19, dyn # perform operation
fnmadd.h f13, f16, f28, f19, rdn # perform operation
fnmadd.h f13, f16, f28, f19, rmm # perform operation
fnmadd.h f13, f16, f28, f19, rne # perform operation
fnmadd.h f13, f16, f28, f19, rtz # perform operation
fnmadd.h f13, f16, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f16, f28, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f20, 0(x2) # load 0x00008400 from memory into f20
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f1, 0(x2) # load 0x00007e00 from memory into f1
la x2, scratch
li x3, 0xc2af6db7 # load x3 with value 0xc2af6db7
sw x3, 0(x2) # store 0xc2af6db7 in memory
flh f19, 0(x2) # load 0xc2af6db7 from memory into f19
fnmadd.h f3, f20, f1, f19, dyn # perform operation
fnmadd.h f3, f20, f1, f19, rdn # perform operation
fnmadd.h f3, f20, f1, f19, rmm # perform operation
fnmadd.h f3, f20, f1, f19, rne # perform operation
fnmadd.h f3, f20, f1, f19, rtz # perform operation
fnmadd.h f3, f20, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f20, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f20, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f20, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f20, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f20, f1, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f6, 0(x2) # load 0x00008400 from memory into f6
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f27, 0(x2) # load 0x00007fff from memory into f27
la x2, scratch
li x3, 0xac897ed7 # load x3 with value 0xac897ed7
sw x3, 0(x2) # store 0xac897ed7 in memory
flh f21, 0(x2) # load 0xac897ed7 from memory into f21
fnmadd.h f5, f6, f27, f21, dyn # perform operation
fnmadd.h f5, f6, f27, f21, rdn # perform operation
fnmadd.h f5, f6, f27, f21, rmm # perform operation
fnmadd.h f5, f6, f27, f21, rne # perform operation
fnmadd.h f5, f6, f27, f21, rtz # perform operation
fnmadd.h f5, f6, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f6, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f6, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f6, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f6, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f6, f27, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f1, 0(x2) # load 0x00008400 from memory into f1
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f25, 0(x2) # load 0x0000fe00 from memory into f25
la x2, scratch
li x3, 0xd1cddc81 # load x3 with value 0xd1cddc81
sw x3, 0(x2) # store 0xd1cddc81 in memory
flh f31, 0(x2) # load 0xd1cddc81 from memory into f31
fnmadd.h f23, f1, f25, f31, dyn # perform operation
fnmadd.h f23, f1, f25, f31, rdn # perform operation
fnmadd.h f23, f1, f25, f31, rmm # perform operation
fnmadd.h f23, f1, f25, f31, rne # perform operation
fnmadd.h f23, f1, f25, f31, rtz # perform operation
fnmadd.h f23, f1, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f1, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f1, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f1, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f1, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f1, f25, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f12, 0(x2) # load 0x00008400 from memory into f12
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
la x2, scratch
li x3, 0xaca6f3c6 # load x3 with value 0xaca6f3c6
sw x3, 0(x2) # store 0xaca6f3c6 in memory
flh f9, 0(x2) # load 0xaca6f3c6 from memory into f9
fnmadd.h f8, f12, f26, f9, dyn # perform operation
fnmadd.h f8, f12, f26, f9, rdn # perform operation
fnmadd.h f8, f12, f26, f9, rmm # perform operation
fnmadd.h f8, f12, f26, f9, rne # perform operation
fnmadd.h f8, f12, f26, f9, rtz # perform operation
fnmadd.h f8, f12, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f12, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f12, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f12, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f12, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f12, f26, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f17, 0(x2) # load 0x00008400 from memory into f17
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f25, 0(x2) # load 0x00007dff from memory into f25
la x2, scratch
li x3, 0xd40ceeef # load x3 with value 0xd40ceeef
sw x3, 0(x2) # store 0xd40ceeef in memory
flh f9, 0(x2) # load 0xd40ceeef from memory into f9
fnmadd.h f7, f17, f25, f9, dyn # perform operation
fnmadd.h f7, f17, f25, f9, rdn # perform operation
fnmadd.h f7, f17, f25, f9, rmm # perform operation
fnmadd.h f7, f17, f25, f9, rne # perform operation
fnmadd.h f7, f17, f25, f9, rtz # perform operation
fnmadd.h f7, f17, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f17, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f17, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f17, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f17, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f17, f25, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f9, 0(x2) # load 0x00008400 from memory into f9
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f15, 0(x2) # load 0x0000fc01 from memory into f15
la x2, scratch
li x3, 0xd99dae6a # load x3 with value 0xd99dae6a
sw x3, 0(x2) # store 0xd99dae6a in memory
flh f17, 0(x2) # load 0xd99dae6a from memory into f17
fnmadd.h f31, f9, f15, f17, dyn # perform operation
fnmadd.h f31, f9, f15, f17, rdn # perform operation
fnmadd.h f31, f9, f15, f17, rmm # perform operation
fnmadd.h f31, f9, f15, f17, rne # perform operation
fnmadd.h f31, f9, f15, f17, rtz # perform operation
fnmadd.h f31, f9, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f9, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f9, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f9, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f9, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f9, f15, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f6, 0(x2) # load 0x00008400 from memory into f6
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f8, 0(x2) # load 0x000058b4 from memory into f8
la x2, scratch
li x3, 0xee1158b1 # load x3 with value 0xee1158b1
sw x3, 0(x2) # store 0xee1158b1 in memory
flh f23, 0(x2) # load 0xee1158b1 from memory into f23
fnmadd.h f7, f6, f8, f23, dyn # perform operation
fnmadd.h f7, f6, f8, f23, rdn # perform operation
fnmadd.h f7, f6, f8, f23, rmm # perform operation
fnmadd.h f7, f6, f8, f23, rne # perform operation
fnmadd.h f7, f6, f8, f23, rtz # perform operation
fnmadd.h f7, f6, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f6, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f6, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f6, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f6, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f6, f8, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f8, 0(x2) # load 0x00008400 from memory into f8
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f1, 0(x2) # load 0x0000c93a from memory into f1
la x2, scratch
li x3, 0xa65092da # load x3 with value 0xa65092da
sw x3, 0(x2) # store 0xa65092da in memory
flh f7, 0(x2) # load 0xa65092da from memory into f7
fnmadd.h f16, f8, f1, f7, dyn # perform operation
fnmadd.h f16, f8, f1, f7, rdn # perform operation
fnmadd.h f16, f8, f1, f7, rmm # perform operation
fnmadd.h f16, f8, f1, f7, rne # perform operation
fnmadd.h f16, f8, f1, f7, rtz # perform operation
fnmadd.h f16, f8, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f8, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f8, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f8, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f8, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f8, f1, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f12, 0(x2) # load 0x00007bff from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0xd7b56973 # load x3 with value 0xd7b56973
sw x3, 0(x2) # store 0xd7b56973 in memory
flh f1, 0(x2) # load 0xd7b56973 from memory into f1
fnmadd.h f6, f12, f15, f1, dyn # perform operation
fnmadd.h f6, f12, f15, f1, rdn # perform operation
fnmadd.h f6, f12, f15, f1, rmm # perform operation
fnmadd.h f6, f12, f15, f1, rne # perform operation
fnmadd.h f6, f12, f15, f1, rtz # perform operation
fnmadd.h f6, f12, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f12, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f12, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f12, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f12, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f12, f15, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f16, 0(x2) # load 0x00007bff from memory into f16
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f27, 0(x2) # load 0x00008000 from memory into f27
la x2, scratch
li x3, 0xd925196e # load x3 with value 0xd925196e
sw x3, 0(x2) # store 0xd925196e in memory
flh f6, 0(x2) # load 0xd925196e from memory into f6
fnmadd.h f24, f16, f27, f6, dyn # perform operation
fnmadd.h f24, f16, f27, f6, rdn # perform operation
fnmadd.h f24, f16, f27, f6, rmm # perform operation
fnmadd.h f24, f16, f27, f6, rne # perform operation
fnmadd.h f24, f16, f27, f6, rtz # perform operation
fnmadd.h f24, f16, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f16, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f16, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f16, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f16, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f16, f27, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f30, 0(x2) # load 0x00007bff from memory into f30
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f29, 0(x2) # load 0x00003c00 from memory into f29
la x2, scratch
li x3, 0xe25d1923 # load x3 with value 0xe25d1923
sw x3, 0(x2) # store 0xe25d1923 in memory
flh f27, 0(x2) # load 0xe25d1923 from memory into f27
fnmadd.h f1, f30, f29, f27, dyn # perform operation
fnmadd.h f1, f30, f29, f27, rdn # perform operation
fnmadd.h f1, f30, f29, f27, rmm # perform operation
fnmadd.h f1, f30, f29, f27, rne # perform operation
fnmadd.h f1, f30, f29, f27, rtz # perform operation
fnmadd.h f1, f30, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f30, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f30, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f30, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f30, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f30, f29, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f9, 0(x2) # load 0x00007bff from memory into f9
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f17, 0(x2) # load 0x0000bc00 from memory into f17
la x2, scratch
li x3, 0x914c03f3 # load x3 with value 0x914c03f3
sw x3, 0(x2) # store 0x914c03f3 in memory
flh f26, 0(x2) # load 0x914c03f3 from memory into f26
fnmadd.h f27, f9, f17, f26, dyn # perform operation
fnmadd.h f27, f9, f17, f26, rdn # perform operation
fnmadd.h f27, f9, f17, f26, rmm # perform operation
fnmadd.h f27, f9, f17, f26, rne # perform operation
fnmadd.h f27, f9, f17, f26, rtz # perform operation
fnmadd.h f27, f9, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f9, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f9, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f9, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f9, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f9, f17, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f26, 0(x2) # load 0x00007bff from memory into f26
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
la x2, scratch
li x3, 0xed562595 # load x3 with value 0xed562595
sw x3, 0(x2) # store 0xed562595 in memory
flh f24, 0(x2) # load 0xed562595 from memory into f24
fnmadd.h f18, f26, f7, f24, dyn # perform operation
fnmadd.h f18, f26, f7, f24, rdn # perform operation
fnmadd.h f18, f26, f7, f24, rmm # perform operation
fnmadd.h f18, f26, f7, f24, rne # perform operation
fnmadd.h f18, f26, f7, f24, rtz # perform operation
fnmadd.h f18, f26, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f26, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f26, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f26, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f26, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f26, f7, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f12, 0(x2) # load 0x00007bff from memory into f12
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f30, 0(x2) # load 0x0000be00 from memory into f30
la x2, scratch
li x3, 0x2319e3c1 # load x3 with value 0x2319e3c1
sw x3, 0(x2) # store 0x2319e3c1 in memory
flh f5, 0(x2) # load 0x2319e3c1 from memory into f5
fnmadd.h f21, f12, f30, f5, dyn # perform operation
fnmadd.h f21, f12, f30, f5, rdn # perform operation
fnmadd.h f21, f12, f30, f5, rmm # perform operation
fnmadd.h f21, f12, f30, f5, rne # perform operation
fnmadd.h f21, f12, f30, f5, rtz # perform operation
fnmadd.h f21, f12, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f12, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f12, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f12, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f12, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f12, f30, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f25, 0(x2) # load 0x00007bff from memory into f25
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f11, 0(x2) # load 0x00004000 from memory into f11
la x2, scratch
li x3, 0xd3ee55b6 # load x3 with value 0xd3ee55b6
sw x3, 0(x2) # store 0xd3ee55b6 in memory
flh f6, 0(x2) # load 0xd3ee55b6 from memory into f6
fnmadd.h f13, f25, f11, f6, dyn # perform operation
fnmadd.h f13, f25, f11, f6, rdn # perform operation
fnmadd.h f13, f25, f11, f6, rmm # perform operation
fnmadd.h f13, f25, f11, f6, rne # perform operation
fnmadd.h f13, f25, f11, f6, rtz # perform operation
fnmadd.h f13, f25, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f25, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f25, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f25, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f25, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f25, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f6, 0(x2) # load 0x00007bff from memory into f6
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f31, 0(x2) # load 0x0000c000 from memory into f31
la x2, scratch
li x3, 0x677b97fc # load x3 with value 0x677b97fc
sw x3, 0(x2) # store 0x677b97fc in memory
flh f20, 0(x2) # load 0x677b97fc from memory into f20
fnmadd.h f28, f6, f31, f20, dyn # perform operation
fnmadd.h f28, f6, f31, f20, rdn # perform operation
fnmadd.h f28, f6, f31, f20, rmm # perform operation
fnmadd.h f28, f6, f31, f20, rne # perform operation
fnmadd.h f28, f6, f31, f20, rtz # perform operation
fnmadd.h f28, f6, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f6, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f6, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f6, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f6, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f6, f31, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f3, 0(x2) # load 0x00007bff from memory into f3
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f21, 0(x2) # load 0x00000400 from memory into f21
la x2, scratch
li x3, 0x6042d5cb # load x3 with value 0x6042d5cb
sw x3, 0(x2) # store 0x6042d5cb in memory
flh f26, 0(x2) # load 0x6042d5cb from memory into f26
fnmadd.h f7, f3, f21, f26, dyn # perform operation
fnmadd.h f7, f3, f21, f26, rdn # perform operation
fnmadd.h f7, f3, f21, f26, rmm # perform operation
fnmadd.h f7, f3, f21, f26, rne # perform operation
fnmadd.h f7, f3, f21, f26, rtz # perform operation
fnmadd.h f7, f3, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f3, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f3, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f3, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f3, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f3, f21, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f5, 0(x2) # load 0x00007bff from memory into f5
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
la x2, scratch
li x3, 0xcb69a01a # load x3 with value 0xcb69a01a
sw x3, 0(x2) # store 0xcb69a01a in memory
flh f14, 0(x2) # load 0xcb69a01a from memory into f14
fnmadd.h f9, f5, f13, f14, dyn # perform operation
fnmadd.h f9, f5, f13, f14, rdn # perform operation
fnmadd.h f9, f5, f13, f14, rmm # perform operation
fnmadd.h f9, f5, f13, f14, rne # perform operation
fnmadd.h f9, f5, f13, f14, rtz # perform operation
fnmadd.h f9, f5, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f5, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f5, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f5, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f5, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f5, f13, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f5, 0(x2) # load 0x00007bff from memory into f5
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f27, 0(x2) # load 0x00007bff from memory into f27
la x2, scratch
li x3, 0xdd62f13c # load x3 with value 0xdd62f13c
sw x3, 0(x2) # store 0xdd62f13c in memory
flh f16, 0(x2) # load 0xdd62f13c from memory into f16
fnmadd.h f7, f5, f27, f16, dyn # perform operation
fnmadd.h f7, f5, f27, f16, rdn # perform operation
fnmadd.h f7, f5, f27, f16, rmm # perform operation
fnmadd.h f7, f5, f27, f16, rne # perform operation
fnmadd.h f7, f5, f27, f16, rtz # perform operation
fnmadd.h f7, f5, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f5, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f5, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f5, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f5, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f5, f27, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f25, 0(x2) # load 0x00007bff from memory into f25
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
la x2, scratch
li x3, 0x7d02267f # load x3 with value 0x7d02267f
sw x3, 0(x2) # store 0x7d02267f in memory
flh f17, 0(x2) # load 0x7d02267f from memory into f17
fnmadd.h f30, f25, f13, f17, dyn # perform operation
fnmadd.h f30, f25, f13, f17, rdn # perform operation
fnmadd.h f30, f25, f13, f17, rmm # perform operation
fnmadd.h f30, f25, f13, f17, rne # perform operation
fnmadd.h f30, f25, f13, f17, rtz # perform operation
fnmadd.h f30, f25, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f25, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f25, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f25, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f25, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f25, f13, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f22, 0(x2) # load 0x00007bff from memory into f22
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f6, 0(x2) # load 0x000003ff from memory into f6
la x2, scratch
li x3, 0x2436d0ea # load x3 with value 0x2436d0ea
sw x3, 0(x2) # store 0x2436d0ea in memory
flh f19, 0(x2) # load 0x2436d0ea from memory into f19
fnmadd.h f24, f22, f6, f19, dyn # perform operation
fnmadd.h f24, f22, f6, f19, rdn # perform operation
fnmadd.h f24, f22, f6, f19, rmm # perform operation
fnmadd.h f24, f22, f6, f19, rne # perform operation
fnmadd.h f24, f22, f6, f19, rtz # perform operation
fnmadd.h f24, f22, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f22, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f22, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f22, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f22, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f22, f6, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f23, 0(x2) # load 0x00007bff from memory into f23
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f12, 0(x2) # load 0x000083ff from memory into f12
la x2, scratch
li x3, 0x5b1fe04a # load x3 with value 0x5b1fe04a
sw x3, 0(x2) # store 0x5b1fe04a in memory
flh f21, 0(x2) # load 0x5b1fe04a from memory into f21
fnmadd.h f3, f23, f12, f21, dyn # perform operation
fnmadd.h f3, f23, f12, f21, rdn # perform operation
fnmadd.h f3, f23, f12, f21, rmm # perform operation
fnmadd.h f3, f23, f12, f21, rne # perform operation
fnmadd.h f3, f23, f12, f21, rtz # perform operation
fnmadd.h f3, f23, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f23, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f23, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f23, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f23, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f23, f12, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f30, 0(x2) # load 0x00007bff from memory into f30
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
la x2, scratch
li x3, 0x911dd35c # load x3 with value 0x911dd35c
sw x3, 0(x2) # store 0x911dd35c in memory
flh f10, 0(x2) # load 0x911dd35c from memory into f10
fnmadd.h f27, f30, f19, f10, dyn # perform operation
fnmadd.h f27, f30, f19, f10, rdn # perform operation
fnmadd.h f27, f30, f19, f10, rmm # perform operation
fnmadd.h f27, f30, f19, f10, rne # perform operation
fnmadd.h f27, f30, f19, f10, rtz # perform operation
fnmadd.h f27, f30, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f30, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f30, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f30, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f30, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f30, f19, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f11, 0(x2) # load 0x00007bff from memory into f11
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f23, 0(x2) # load 0x00008200 from memory into f23
la x2, scratch
li x3, 0xa2db0158 # load x3 with value 0xa2db0158
sw x3, 0(x2) # store 0xa2db0158 in memory
flh f28, 0(x2) # load 0xa2db0158 from memory into f28
fnmadd.h f1, f11, f23, f28, dyn # perform operation
fnmadd.h f1, f11, f23, f28, rdn # perform operation
fnmadd.h f1, f11, f23, f28, rmm # perform operation
fnmadd.h f1, f11, f23, f28, rne # perform operation
fnmadd.h f1, f11, f23, f28, rtz # perform operation
fnmadd.h f1, f11, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f11, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f7, 0(x2) # load 0x00007bff from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x43c28e2c # load x3 with value 0x43c28e2c
sw x3, 0(x2) # store 0x43c28e2c in memory
flh f6, 0(x2) # load 0x43c28e2c from memory into f6
fnmadd.h f27, f7, f9, f6, dyn # perform operation
fnmadd.h f27, f7, f9, f6, rdn # perform operation
fnmadd.h f27, f7, f9, f6, rmm # perform operation
fnmadd.h f27, f7, f9, f6, rne # perform operation
fnmadd.h f27, f7, f9, f6, rtz # perform operation
fnmadd.h f27, f7, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f7, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f7, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f7, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f7, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f7, f9, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f23, 0(x2) # load 0x00007bff from memory into f23
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
la x2, scratch
li x3, 0x7a54ab23 # load x3 with value 0x7a54ab23
sw x3, 0(x2) # store 0x7a54ab23 in memory
flh f15, 0(x2) # load 0x7a54ab23 from memory into f15
fnmadd.h f8, f23, f14, f15, dyn # perform operation
fnmadd.h f8, f23, f14, f15, rdn # perform operation
fnmadd.h f8, f23, f14, f15, rmm # perform operation
fnmadd.h f8, f23, f14, f15, rne # perform operation
fnmadd.h f8, f23, f14, f15, rtz # perform operation
fnmadd.h f8, f23, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f23, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f23, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f23, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f23, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f23, f14, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f30, 0(x2) # load 0x00007bff from memory into f30
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f11, 0(x2) # load 0x00007c00 from memory into f11
la x2, scratch
li x3, 0x5c164826 # load x3 with value 0x5c164826
sw x3, 0(x2) # store 0x5c164826 in memory
flh f26, 0(x2) # load 0x5c164826 from memory into f26
fnmadd.h f12, f30, f11, f26, dyn # perform operation
fnmadd.h f12, f30, f11, f26, rdn # perform operation
fnmadd.h f12, f30, f11, f26, rmm # perform operation
fnmadd.h f12, f30, f11, f26, rne # perform operation
fnmadd.h f12, f30, f11, f26, rtz # perform operation
fnmadd.h f12, f30, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f30, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f30, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f30, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f30, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f30, f11, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f18, 0(x2) # load 0x00007bff from memory into f18
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f7, 0(x2) # load 0x0000fc00 from memory into f7
la x2, scratch
li x3, 0x41aa6729 # load x3 with value 0x41aa6729
sw x3, 0(x2) # store 0x41aa6729 in memory
flh f3, 0(x2) # load 0x41aa6729 from memory into f3
fnmadd.h f27, f18, f7, f3, dyn # perform operation
fnmadd.h f27, f18, f7, f3, rdn # perform operation
fnmadd.h f27, f18, f7, f3, rmm # perform operation
fnmadd.h f27, f18, f7, f3, rne # perform operation
fnmadd.h f27, f18, f7, f3, rtz # perform operation
fnmadd.h f27, f18, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f18, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f18, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f18, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f18, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f18, f7, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f14, 0(x2) # load 0x00007e00 from memory into f14
la x2, scratch
li x3, 0xbbbd0754 # load x3 with value 0xbbbd0754
sw x3, 0(x2) # store 0xbbbd0754 in memory
flh f10, 0(x2) # load 0xbbbd0754 from memory into f10
fnmadd.h f19, f15, f14, f10, dyn # perform operation
fnmadd.h f19, f15, f14, f10, rdn # perform operation
fnmadd.h f19, f15, f14, f10, rmm # perform operation
fnmadd.h f19, f15, f14, f10, rne # perform operation
fnmadd.h f19, f15, f14, f10, rtz # perform operation
fnmadd.h f19, f15, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f15, f14, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f30, 0(x2) # load 0x00007bff from memory into f30
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f20, 0(x2) # load 0x00007fff from memory into f20
la x2, scratch
li x3, 0x48fc1469 # load x3 with value 0x48fc1469
sw x3, 0(x2) # store 0x48fc1469 in memory
flh f3, 0(x2) # load 0x48fc1469 from memory into f3
fnmadd.h f18, f30, f20, f3, dyn # perform operation
fnmadd.h f18, f30, f20, f3, rdn # perform operation
fnmadd.h f18, f30, f20, f3, rmm # perform operation
fnmadd.h f18, f30, f20, f3, rne # perform operation
fnmadd.h f18, f30, f20, f3, rtz # perform operation
fnmadd.h f18, f30, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f30, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f30, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f30, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f30, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f30, f20, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f11, 0(x2) # load 0x00007bff from memory into f11
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f29, 0(x2) # load 0x0000fe00 from memory into f29
la x2, scratch
li x3, 0x108aaa9e # load x3 with value 0x108aaa9e
sw x3, 0(x2) # store 0x108aaa9e in memory
flh f19, 0(x2) # load 0x108aaa9e from memory into f19
fnmadd.h f23, f11, f29, f19, dyn # perform operation
fnmadd.h f23, f11, f29, f19, rdn # perform operation
fnmadd.h f23, f11, f29, f19, rmm # perform operation
fnmadd.h f23, f11, f29, f19, rne # perform operation
fnmadd.h f23, f11, f29, f19, rtz # perform operation
fnmadd.h f23, f11, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f11, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f11, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f11, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f11, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f11, f29, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f31, 0(x2) # load 0x00007bff from memory into f31
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f23, 0(x2) # load 0x00007c01 from memory into f23
la x2, scratch
li x3, 0xc31a2ccc # load x3 with value 0xc31a2ccc
sw x3, 0(x2) # store 0xc31a2ccc in memory
flh f28, 0(x2) # load 0xc31a2ccc from memory into f28
fnmadd.h f12, f31, f23, f28, dyn # perform operation
fnmadd.h f12, f31, f23, f28, rdn # perform operation
fnmadd.h f12, f31, f23, f28, rmm # perform operation
fnmadd.h f12, f31, f23, f28, rne # perform operation
fnmadd.h f12, f31, f23, f28, rtz # perform operation
fnmadd.h f12, f31, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f31, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f31, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f31, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f31, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f31, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f17, 0(x2) # load 0x00007bff from memory into f17
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f22, 0(x2) # load 0x00007dff from memory into f22
la x2, scratch
li x3, 0xa4b4aa9c # load x3 with value 0xa4b4aa9c
sw x3, 0(x2) # store 0xa4b4aa9c in memory
flh f28, 0(x2) # load 0xa4b4aa9c from memory into f28
fnmadd.h f9, f17, f22, f28, dyn # perform operation
fnmadd.h f9, f17, f22, f28, rdn # perform operation
fnmadd.h f9, f17, f22, f28, rmm # perform operation
fnmadd.h f9, f17, f22, f28, rne # perform operation
fnmadd.h f9, f17, f22, f28, rtz # perform operation
fnmadd.h f9, f17, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f17, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f17, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f17, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f17, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f17, f22, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f27, 0(x2) # load 0x00007bff from memory into f27
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f1, 0(x2) # load 0x0000fc01 from memory into f1
la x2, scratch
li x3, 0x6bf77321 # load x3 with value 0x6bf77321
sw x3, 0(x2) # store 0x6bf77321 in memory
flh f8, 0(x2) # load 0x6bf77321 from memory into f8
fnmadd.h f6, f27, f1, f8, dyn # perform operation
fnmadd.h f6, f27, f1, f8, rdn # perform operation
fnmadd.h f6, f27, f1, f8, rmm # perform operation
fnmadd.h f6, f27, f1, f8, rne # perform operation
fnmadd.h f6, f27, f1, f8, rtz # perform operation
fnmadd.h f6, f27, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f27, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f27, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f27, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f27, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f27, f1, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
la x2, scratch
li x3, 0x40d7f784 # load x3 with value 0x40d7f784
sw x3, 0(x2) # store 0x40d7f784 in memory
flh f12, 0(x2) # load 0x40d7f784 from memory into f12
fnmadd.h f17, f15, f21, f12, dyn # perform operation
fnmadd.h f17, f15, f21, f12, rdn # perform operation
fnmadd.h f17, f15, f21, f12, rmm # perform operation
fnmadd.h f17, f15, f21, f12, rne # perform operation
fnmadd.h f17, f15, f21, f12, rtz # perform operation
fnmadd.h f17, f15, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f15, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f15, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f15, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f15, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f15, f21, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f13, 0(x2) # load 0x00007bff from memory into f13
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
la x2, scratch
li x3, 0xf0cb690a # load x3 with value 0xf0cb690a
sw x3, 0(x2) # store 0xf0cb690a in memory
flh f20, 0(x2) # load 0xf0cb690a from memory into f20
fnmadd.h f24, f13, f3, f20, dyn # perform operation
fnmadd.h f24, f13, f3, f20, rdn # perform operation
fnmadd.h f24, f13, f3, f20, rmm # perform operation
fnmadd.h f24, f13, f3, f20, rne # perform operation
fnmadd.h f24, f13, f3, f20, rtz # perform operation
fnmadd.h f24, f13, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f13, f3, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f8, 0(x2) # load 0x0000fbff from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0x8fdcc974 # load x3 with value 0x8fdcc974
sw x3, 0(x2) # store 0x8fdcc974 in memory
flh f24, 0(x2) # load 0x8fdcc974 from memory into f24
fnmadd.h f15, f8, f23, f24, dyn # perform operation
fnmadd.h f15, f8, f23, f24, rdn # perform operation
fnmadd.h f15, f8, f23, f24, rmm # perform operation
fnmadd.h f15, f8, f23, f24, rne # perform operation
fnmadd.h f15, f8, f23, f24, rtz # perform operation
fnmadd.h f15, f8, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f8, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f8, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f8, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f8, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f8, f23, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f6, 0(x2) # load 0x0000fbff from memory into f6
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f28, 0(x2) # load 0x00008000 from memory into f28
la x2, scratch
li x3, 0xa0e72823 # load x3 with value 0xa0e72823
sw x3, 0(x2) # store 0xa0e72823 in memory
flh f31, 0(x2) # load 0xa0e72823 from memory into f31
fnmadd.h f8, f6, f28, f31, dyn # perform operation
fnmadd.h f8, f6, f28, f31, rdn # perform operation
fnmadd.h f8, f6, f28, f31, rmm # perform operation
fnmadd.h f8, f6, f28, f31, rne # perform operation
fnmadd.h f8, f6, f28, f31, rtz # perform operation
fnmadd.h f8, f6, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f6, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f6, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f6, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f6, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f6, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f24, 0(x2) # load 0x0000fbff from memory into f24
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
la x2, scratch
li x3, 0xf639c8a8 # load x3 with value 0xf639c8a8
sw x3, 0(x2) # store 0xf639c8a8 in memory
flh f21, 0(x2) # load 0xf639c8a8 from memory into f21
fnmadd.h f2, f24, f16, f21, dyn # perform operation
fnmadd.h f2, f24, f16, f21, rdn # perform operation
fnmadd.h f2, f24, f16, f21, rmm # perform operation
fnmadd.h f2, f24, f16, f21, rne # perform operation
fnmadd.h f2, f24, f16, f21, rtz # perform operation
fnmadd.h f2, f24, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f24, f16, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f17, 0(x2) # load 0x0000fbff from memory into f17
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
la x2, scratch
li x3, 0x6bde4f66 # load x3 with value 0x6bde4f66
sw x3, 0(x2) # store 0x6bde4f66 in memory
flh f7, 0(x2) # load 0x6bde4f66 from memory into f7
fnmadd.h f11, f17, f6, f7, dyn # perform operation
fnmadd.h f11, f17, f6, f7, rdn # perform operation
fnmadd.h f11, f17, f6, f7, rmm # perform operation
fnmadd.h f11, f17, f6, f7, rne # perform operation
fnmadd.h f11, f17, f6, f7, rtz # perform operation
fnmadd.h f11, f17, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f17, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f17, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f17, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f17, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f17, f6, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f25, 0(x2) # load 0x00003e00 from memory into f25
la x2, scratch
li x3, 0x3cd171a1 # load x3 with value 0x3cd171a1
sw x3, 0(x2) # store 0x3cd171a1 in memory
flh f14, 0(x2) # load 0x3cd171a1 from memory into f14
fnmadd.h f2, f15, f25, f14, dyn # perform operation
fnmadd.h f2, f15, f25, f14, rdn # perform operation
fnmadd.h f2, f15, f25, f14, rmm # perform operation
fnmadd.h f2, f15, f25, f14, rne # perform operation
fnmadd.h f2, f15, f25, f14, rtz # perform operation
fnmadd.h f2, f15, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f15, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f15, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f15, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f15, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f15, f25, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f25, 0(x2) # load 0x0000fbff from memory into f25
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f26, 0(x2) # load 0x0000be00 from memory into f26
la x2, scratch
li x3, 0x21ded11a # load x3 with value 0x21ded11a
sw x3, 0(x2) # store 0x21ded11a in memory
flh f3, 0(x2) # load 0x21ded11a from memory into f3
fnmadd.h f13, f25, f26, f3, dyn # perform operation
fnmadd.h f13, f25, f26, f3, rdn # perform operation
fnmadd.h f13, f25, f26, f3, rmm # perform operation
fnmadd.h f13, f25, f26, f3, rne # perform operation
fnmadd.h f13, f25, f26, f3, rtz # perform operation
fnmadd.h f13, f25, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f25, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f25, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f25, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f25, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f25, f26, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f1, 0(x2) # load 0x0000fbff from memory into f1
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f18, 0(x2) # load 0x00004000 from memory into f18
la x2, scratch
li x3, 0x705e9e18 # load x3 with value 0x705e9e18
sw x3, 0(x2) # store 0x705e9e18 in memory
flh f30, 0(x2) # load 0x705e9e18 from memory into f30
fnmadd.h f22, f1, f18, f30, dyn # perform operation
fnmadd.h f22, f1, f18, f30, rdn # perform operation
fnmadd.h f22, f1, f18, f30, rmm # perform operation
fnmadd.h f22, f1, f18, f30, rne # perform operation
fnmadd.h f22, f1, f18, f30, rtz # perform operation
fnmadd.h f22, f1, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f1, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f1, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f1, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f1, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f1, f18, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f16, 0(x2) # load 0x0000fbff from memory into f16
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
la x2, scratch
li x3, 0x7e4e4181 # load x3 with value 0x7e4e4181
sw x3, 0(x2) # store 0x7e4e4181 in memory
flh f22, 0(x2) # load 0x7e4e4181 from memory into f22
fnmadd.h f2, f16, f20, f22, dyn # perform operation
fnmadd.h f2, f16, f20, f22, rdn # perform operation
fnmadd.h f2, f16, f20, f22, rmm # perform operation
fnmadd.h f2, f16, f20, f22, rne # perform operation
fnmadd.h f2, f16, f20, f22, rtz # perform operation
fnmadd.h f2, f16, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f16, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f12, 0(x2) # load 0x0000fbff from memory into f12
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f27, 0(x2) # load 0x00000400 from memory into f27
la x2, scratch
li x3, 0x3da650b0 # load x3 with value 0x3da650b0
sw x3, 0(x2) # store 0x3da650b0 in memory
flh f8, 0(x2) # load 0x3da650b0 from memory into f8
fnmadd.h f30, f12, f27, f8, dyn # perform operation
fnmadd.h f30, f12, f27, f8, rdn # perform operation
fnmadd.h f30, f12, f27, f8, rmm # perform operation
fnmadd.h f30, f12, f27, f8, rne # perform operation
fnmadd.h f30, f12, f27, f8, rtz # perform operation
fnmadd.h f30, f12, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f12, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f12, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f12, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f12, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f12, f27, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f9, 0(x2) # load 0x0000fbff from memory into f9
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f2, 0(x2) # load 0x00008400 from memory into f2
la x2, scratch
li x3, 0x204361b9 # load x3 with value 0x204361b9
sw x3, 0(x2) # store 0x204361b9 in memory
flh f6, 0(x2) # load 0x204361b9 from memory into f6
fnmadd.h f27, f9, f2, f6, dyn # perform operation
fnmadd.h f27, f9, f2, f6, rdn # perform operation
fnmadd.h f27, f9, f2, f6, rmm # perform operation
fnmadd.h f27, f9, f2, f6, rne # perform operation
fnmadd.h f27, f9, f2, f6, rtz # perform operation
fnmadd.h f27, f9, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f9, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f9, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f9, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f9, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f9, f2, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f7, 0(x2) # load 0x0000fbff from memory into f7
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f8, 0(x2) # load 0x00007bff from memory into f8
la x2, scratch
li x3, 0xfa02c5f4 # load x3 with value 0xfa02c5f4
sw x3, 0(x2) # store 0xfa02c5f4 in memory
flh f18, 0(x2) # load 0xfa02c5f4 from memory into f18
fnmadd.h f31, f7, f8, f18, dyn # perform operation
fnmadd.h f31, f7, f8, f18, rdn # perform operation
fnmadd.h f31, f7, f8, f18, rmm # perform operation
fnmadd.h f31, f7, f8, f18, rne # perform operation
fnmadd.h f31, f7, f8, f18, rtz # perform operation
fnmadd.h f31, f7, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f7, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f7, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f7, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f7, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f7, f8, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f28, 0(x2) # load 0x0000fbff from memory into f28
la x2, scratch
li x3, 0x793377ff # load x3 with value 0x793377ff
sw x3, 0(x2) # store 0x793377ff in memory
flh f17, 0(x2) # load 0x793377ff from memory into f17
fnmadd.h f22, f13, f28, f17, dyn # perform operation
fnmadd.h f22, f13, f28, f17, rdn # perform operation
fnmadd.h f22, f13, f28, f17, rmm # perform operation
fnmadd.h f22, f13, f28, f17, rne # perform operation
fnmadd.h f22, f13, f28, f17, rtz # perform operation
fnmadd.h f22, f13, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f13, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f13, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f13, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f13, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f13, f28, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f29, 0(x2) # load 0x0000fbff from memory into f29
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f19, 0(x2) # load 0x000003ff from memory into f19
la x2, scratch
li x3, 0xb318df65 # load x3 with value 0xb318df65
sw x3, 0(x2) # store 0xb318df65 in memory
flh f14, 0(x2) # load 0xb318df65 from memory into f14
fnmadd.h f2, f29, f19, f14, dyn # perform operation
fnmadd.h f2, f29, f19, f14, rdn # perform operation
fnmadd.h f2, f29, f19, f14, rmm # perform operation
fnmadd.h f2, f29, f19, f14, rne # perform operation
fnmadd.h f2, f29, f19, f14, rtz # perform operation
fnmadd.h f2, f29, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f29, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f29, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f29, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f29, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f29, f19, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f26, 0(x2) # load 0x0000fbff from memory into f26
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f30, 0(x2) # load 0x000083ff from memory into f30
la x2, scratch
li x3, 0x74d6e91d # load x3 with value 0x74d6e91d
sw x3, 0(x2) # store 0x74d6e91d in memory
flh f3, 0(x2) # load 0x74d6e91d from memory into f3
fnmadd.h f15, f26, f30, f3, dyn # perform operation
fnmadd.h f15, f26, f30, f3, rdn # perform operation
fnmadd.h f15, f26, f30, f3, rmm # perform operation
fnmadd.h f15, f26, f30, f3, rne # perform operation
fnmadd.h f15, f26, f30, f3, rtz # perform operation
fnmadd.h f15, f26, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f26, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f26, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f26, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f26, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f26, f30, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f31, 0(x2) # load 0x0000fbff from memory into f31
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f29, 0(x2) # load 0x00000200 from memory into f29
la x2, scratch
li x3, 0x79fa3b6d # load x3 with value 0x79fa3b6d
sw x3, 0(x2) # store 0x79fa3b6d in memory
flh f26, 0(x2) # load 0x79fa3b6d from memory into f26
fnmadd.h f2, f31, f29, f26, dyn # perform operation
fnmadd.h f2, f31, f29, f26, rdn # perform operation
fnmadd.h f2, f31, f29, f26, rmm # perform operation
fnmadd.h f2, f31, f29, f26, rne # perform operation
fnmadd.h f2, f31, f29, f26, rtz # perform operation
fnmadd.h f2, f31, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f31, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f31, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f31, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f31, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f31, f29, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f6, 0(x2) # load 0x0000fbff from memory into f6
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f24, 0(x2) # load 0x00008200 from memory into f24
la x2, scratch
li x3, 0x38d3c1f3 # load x3 with value 0x38d3c1f3
sw x3, 0(x2) # store 0x38d3c1f3 in memory
flh f11, 0(x2) # load 0x38d3c1f3 from memory into f11
fnmadd.h f31, f6, f24, f11, dyn # perform operation
fnmadd.h f31, f6, f24, f11, rdn # perform operation
fnmadd.h f31, f6, f24, f11, rmm # perform operation
fnmadd.h f31, f6, f24, f11, rne # perform operation
fnmadd.h f31, f6, f24, f11, rtz # perform operation
fnmadd.h f31, f6, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f6, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f6, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f6, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f6, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f6, f24, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f5, 0(x2) # load 0x0000fbff from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0xc70cdef7 # load x3 with value 0xc70cdef7
sw x3, 0(x2) # store 0xc70cdef7 in memory
flh f29, 0(x2) # load 0xc70cdef7 from memory into f29
fnmadd.h f20, f5, f22, f29, dyn # perform operation
fnmadd.h f20, f5, f22, f29, rdn # perform operation
fnmadd.h f20, f5, f22, f29, rmm # perform operation
fnmadd.h f20, f5, f22, f29, rne # perform operation
fnmadd.h f20, f5, f22, f29, rtz # perform operation
fnmadd.h f20, f5, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f5, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f5, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f5, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f5, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f5, f22, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f25, 0(x2) # load 0x0000fbff from memory into f25
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f15, 0(x2) # load 0x00008001 from memory into f15
la x2, scratch
li x3, 0x22f9f309 # load x3 with value 0x22f9f309
sw x3, 0(x2) # store 0x22f9f309 in memory
flh f28, 0(x2) # load 0x22f9f309 from memory into f28
fnmadd.h f3, f25, f15, f28, dyn # perform operation
fnmadd.h f3, f25, f15, f28, rdn # perform operation
fnmadd.h f3, f25, f15, f28, rmm # perform operation
fnmadd.h f3, f25, f15, f28, rne # perform operation
fnmadd.h f3, f25, f15, f28, rtz # perform operation
fnmadd.h f3, f25, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f25, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f25, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f25, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f25, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f25, f15, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f3, 0(x2) # load 0x0000fbff from memory into f3
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f8, 0(x2) # load 0x00007c00 from memory into f8
la x2, scratch
li x3, 0xc34c8d14 # load x3 with value 0xc34c8d14
sw x3, 0(x2) # store 0xc34c8d14 in memory
flh f23, 0(x2) # load 0xc34c8d14 from memory into f23
fnmadd.h f14, f3, f8, f23, dyn # perform operation
fnmadd.h f14, f3, f8, f23, rdn # perform operation
fnmadd.h f14, f3, f8, f23, rmm # perform operation
fnmadd.h f14, f3, f8, f23, rne # perform operation
fnmadd.h f14, f3, f8, f23, rtz # perform operation
fnmadd.h f14, f3, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f3, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f3, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f3, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f3, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f3, f8, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f12, 0(x2) # load 0x0000fbff from memory into f12
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f19, 0(x2) # load 0x0000fc00 from memory into f19
la x2, scratch
li x3, 0x3529deaf # load x3 with value 0x3529deaf
sw x3, 0(x2) # store 0x3529deaf in memory
flh f18, 0(x2) # load 0x3529deaf from memory into f18
fnmadd.h f8, f12, f19, f18, dyn # perform operation
fnmadd.h f8, f12, f19, f18, rdn # perform operation
fnmadd.h f8, f12, f19, f18, rmm # perform operation
fnmadd.h f8, f12, f19, f18, rne # perform operation
fnmadd.h f8, f12, f19, f18, rtz # perform operation
fnmadd.h f8, f12, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f12, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f12, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f12, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f12, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f12, f19, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f5, 0(x2) # load 0x0000fbff from memory into f5
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f2, 0(x2) # load 0x00007e00 from memory into f2
la x2, scratch
li x3, 0x53381c42 # load x3 with value 0x53381c42
sw x3, 0(x2) # store 0x53381c42 in memory
flh f21, 0(x2) # load 0x53381c42 from memory into f21
fnmadd.h f3, f5, f2, f21, dyn # perform operation
fnmadd.h f3, f5, f2, f21, rdn # perform operation
fnmadd.h f3, f5, f2, f21, rmm # perform operation
fnmadd.h f3, f5, f2, f21, rne # perform operation
fnmadd.h f3, f5, f2, f21, rtz # perform operation
fnmadd.h f3, f5, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f5, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f5, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f5, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f5, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f5, f2, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f12, 0(x2) # load 0x00007fff from memory into f12
la x2, scratch
li x3, 0x343f7761 # load x3 with value 0x343f7761
sw x3, 0(x2) # store 0x343f7761 in memory
flh f1, 0(x2) # load 0x343f7761 from memory into f1
fnmadd.h f22, f13, f12, f1, dyn # perform operation
fnmadd.h f22, f13, f12, f1, rdn # perform operation
fnmadd.h f22, f13, f12, f1, rmm # perform operation
fnmadd.h f22, f13, f12, f1, rne # perform operation
fnmadd.h f22, f13, f12, f1, rtz # perform operation
fnmadd.h f22, f13, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f13, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f13, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f13, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f13, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f13, f12, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f29, 0(x2) # load 0x0000fe00 from memory into f29
la x2, scratch
li x3, 0x8f96b4cc # load x3 with value 0x8f96b4cc
sw x3, 0(x2) # store 0x8f96b4cc in memory
flh f14, 0(x2) # load 0x8f96b4cc from memory into f14
fnmadd.h f17, f15, f29, f14, dyn # perform operation
fnmadd.h f17, f15, f29, f14, rdn # perform operation
fnmadd.h f17, f15, f29, f14, rmm # perform operation
fnmadd.h f17, f15, f29, f14, rne # perform operation
fnmadd.h f17, f15, f29, f14, rtz # perform operation
fnmadd.h f17, f15, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f15, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f15, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f15, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f15, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f15, f29, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f31, 0(x2) # load 0x0000fbff from memory into f31
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f3, 0(x2) # load 0x00007c01 from memory into f3
la x2, scratch
li x3, 0xe0fa01ba # load x3 with value 0xe0fa01ba
sw x3, 0(x2) # store 0xe0fa01ba in memory
flh f23, 0(x2) # load 0xe0fa01ba from memory into f23
fnmadd.h f26, f31, f3, f23, dyn # perform operation
fnmadd.h f26, f31, f3, f23, rdn # perform operation
fnmadd.h f26, f31, f3, f23, rmm # perform operation
fnmadd.h f26, f31, f3, f23, rne # perform operation
fnmadd.h f26, f31, f3, f23, rtz # perform operation
fnmadd.h f26, f31, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f31, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f31, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f31, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f31, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f31, f3, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f10, 0(x2) # load 0x0000fbff from memory into f10
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f22, 0(x2) # load 0x00007dff from memory into f22
la x2, scratch
li x3, 0xe78cba03 # load x3 with value 0xe78cba03
sw x3, 0(x2) # store 0xe78cba03 in memory
flh f9, 0(x2) # load 0xe78cba03 from memory into f9
fnmadd.h f28, f10, f22, f9, dyn # perform operation
fnmadd.h f28, f10, f22, f9, rdn # perform operation
fnmadd.h f28, f10, f22, f9, rmm # perform operation
fnmadd.h f28, f10, f22, f9, rne # perform operation
fnmadd.h f28, f10, f22, f9, rtz # perform operation
fnmadd.h f28, f10, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f10, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f10, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f10, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f10, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f10, f22, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f3, 0(x2) # load 0x0000fbff from memory into f3
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f1, 0(x2) # load 0x0000fc01 from memory into f1
la x2, scratch
li x3, 0xe9bee14d # load x3 with value 0xe9bee14d
sw x3, 0(x2) # store 0xe9bee14d in memory
flh f2, 0(x2) # load 0xe9bee14d from memory into f2
fnmadd.h f14, f3, f1, f2, dyn # perform operation
fnmadd.h f14, f3, f1, f2, rdn # perform operation
fnmadd.h f14, f3, f1, f2, rmm # perform operation
fnmadd.h f14, f3, f1, f2, rne # perform operation
fnmadd.h f14, f3, f1, f2, rtz # perform operation
fnmadd.h f14, f3, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f3, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f3, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f3, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f3, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f3, f1, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f6, 0(x2) # load 0x000058b4 from memory into f6
la x2, scratch
li x3, 0x9a94a38f # load x3 with value 0x9a94a38f
sw x3, 0(x2) # store 0x9a94a38f in memory
flh f28, 0(x2) # load 0x9a94a38f from memory into f28
fnmadd.h f22, f13, f6, f28, dyn # perform operation
fnmadd.h f22, f13, f6, f28, rdn # perform operation
fnmadd.h f22, f13, f6, f28, rmm # perform operation
fnmadd.h f22, f13, f6, f28, rne # perform operation
fnmadd.h f22, f13, f6, f28, rtz # perform operation
fnmadd.h f22, f13, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f13, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f13, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f13, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f13, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f13, f6, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f30, 0(x2) # load 0x0000fbff from memory into f30
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f7, 0(x2) # load 0x0000c93a from memory into f7
la x2, scratch
li x3, 0x1ad1acc7 # load x3 with value 0x1ad1acc7
sw x3, 0(x2) # store 0x1ad1acc7 in memory
flh f3, 0(x2) # load 0x1ad1acc7 from memory into f3
fnmadd.h f25, f30, f7, f3, dyn # perform operation
fnmadd.h f25, f30, f7, f3, rdn # perform operation
fnmadd.h f25, f30, f7, f3, rmm # perform operation
fnmadd.h f25, f30, f7, f3, rne # perform operation
fnmadd.h f25, f30, f7, f3, rtz # perform operation
fnmadd.h f25, f30, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f30, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f30, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f30, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f30, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f30, f7, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f2, 0(x2) # load 0x000003ff from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0xacf7e0c3 # load x3 with value 0xacf7e0c3
sw x3, 0(x2) # store 0xacf7e0c3 in memory
flh f15, 0(x2) # load 0xacf7e0c3 from memory into f15
fnmadd.h f8, f2, f17, f15, dyn # perform operation
fnmadd.h f8, f2, f17, f15, rdn # perform operation
fnmadd.h f8, f2, f17, f15, rmm # perform operation
fnmadd.h f8, f2, f17, f15, rne # perform operation
fnmadd.h f8, f2, f17, f15, rtz # perform operation
fnmadd.h f8, f2, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f2, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f2, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f2, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f2, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f2, f17, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f29, 0(x2) # load 0x000003ff from memory into f29
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f19, 0(x2) # load 0x00008000 from memory into f19
la x2, scratch
li x3, 0xe5e0c74e # load x3 with value 0xe5e0c74e
sw x3, 0(x2) # store 0xe5e0c74e in memory
flh f5, 0(x2) # load 0xe5e0c74e from memory into f5
fnmadd.h f9, f29, f19, f5, dyn # perform operation
fnmadd.h f9, f29, f19, f5, rdn # perform operation
fnmadd.h f9, f29, f19, f5, rmm # perform operation
fnmadd.h f9, f29, f19, f5, rne # perform operation
fnmadd.h f9, f29, f19, f5, rtz # perform operation
fnmadd.h f9, f29, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f29, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f29, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f29, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f29, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f29, f19, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f29, 0(x2) # load 0x00003c00 from memory into f29
la x2, scratch
li x3, 0xb0b636ab # load x3 with value 0xb0b636ab
sw x3, 0(x2) # store 0xb0b636ab in memory
flh f24, 0(x2) # load 0xb0b636ab from memory into f24
fnmadd.h f23, f20, f29, f24, dyn # perform operation
fnmadd.h f23, f20, f29, f24, rdn # perform operation
fnmadd.h f23, f20, f29, f24, rmm # perform operation
fnmadd.h f23, f20, f29, f24, rne # perform operation
fnmadd.h f23, f20, f29, f24, rtz # perform operation
fnmadd.h f23, f20, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f20, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f20, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f20, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f20, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f20, f29, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f25, 0(x2) # load 0x000003ff from memory into f25
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f18, 0(x2) # load 0x0000bc00 from memory into f18
la x2, scratch
li x3, 0xbfa17040 # load x3 with value 0xbfa17040
sw x3, 0(x2) # store 0xbfa17040 in memory
flh f28, 0(x2) # load 0xbfa17040 from memory into f28
fnmadd.h f10, f25, f18, f28, dyn # perform operation
fnmadd.h f10, f25, f18, f28, rdn # perform operation
fnmadd.h f10, f25, f18, f28, rmm # perform operation
fnmadd.h f10, f25, f18, f28, rne # perform operation
fnmadd.h f10, f25, f18, f28, rtz # perform operation
fnmadd.h f10, f25, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f25, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f25, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f25, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f25, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f25, f18, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f27, 0(x2) # load 0x000003ff from memory into f27
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f29, 0(x2) # load 0x00003e00 from memory into f29
la x2, scratch
li x3, 0xf381438c # load x3 with value 0xf381438c
sw x3, 0(x2) # store 0xf381438c in memory
flh f1, 0(x2) # load 0xf381438c from memory into f1
fnmadd.h f6, f27, f29, f1, dyn # perform operation
fnmadd.h f6, f27, f29, f1, rdn # perform operation
fnmadd.h f6, f27, f29, f1, rmm # perform operation
fnmadd.h f6, f27, f29, f1, rne # perform operation
fnmadd.h f6, f27, f29, f1, rtz # perform operation
fnmadd.h f6, f27, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f27, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f27, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f27, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f27, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f27, f29, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f29, 0(x2) # load 0x000003ff from memory into f29
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f16, 0(x2) # load 0x0000be00 from memory into f16
la x2, scratch
li x3, 0xde08bb9a # load x3 with value 0xde08bb9a
sw x3, 0(x2) # store 0xde08bb9a in memory
flh f14, 0(x2) # load 0xde08bb9a from memory into f14
fnmadd.h f2, f29, f16, f14, dyn # perform operation
fnmadd.h f2, f29, f16, f14, rdn # perform operation
fnmadd.h f2, f29, f16, f14, rmm # perform operation
fnmadd.h f2, f29, f16, f14, rne # perform operation
fnmadd.h f2, f29, f16, f14, rtz # perform operation
fnmadd.h f2, f29, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f29, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f29, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f29, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f29, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f29, f16, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f9, 0(x2) # load 0x000003ff from memory into f9
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f21, 0(x2) # load 0x00004000 from memory into f21
la x2, scratch
li x3, 0x486126e9 # load x3 with value 0x486126e9
sw x3, 0(x2) # store 0x486126e9 in memory
flh f30, 0(x2) # load 0x486126e9 from memory into f30
fnmadd.h f13, f9, f21, f30, dyn # perform operation
fnmadd.h f13, f9, f21, f30, rdn # perform operation
fnmadd.h f13, f9, f21, f30, rmm # perform operation
fnmadd.h f13, f9, f21, f30, rne # perform operation
fnmadd.h f13, f9, f21, f30, rtz # perform operation
fnmadd.h f13, f9, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f9, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f9, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f9, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f9, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f9, f21, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f26, 0(x2) # load 0x000003ff from memory into f26
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
la x2, scratch
li x3, 0x79173ccc # load x3 with value 0x79173ccc
sw x3, 0(x2) # store 0x79173ccc in memory
flh f23, 0(x2) # load 0x79173ccc from memory into f23
fnmadd.h f27, f26, f30, f23, dyn # perform operation
fnmadd.h f27, f26, f30, f23, rdn # perform operation
fnmadd.h f27, f26, f30, f23, rmm # perform operation
fnmadd.h f27, f26, f30, f23, rne # perform operation
fnmadd.h f27, f26, f30, f23, rtz # perform operation
fnmadd.h f27, f26, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f26, f30, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f24, 0(x2) # load 0x000003ff from memory into f24
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f15, 0(x2) # load 0x00000400 from memory into f15
la x2, scratch
li x3, 0x526ab95a # load x3 with value 0x526ab95a
sw x3, 0(x2) # store 0x526ab95a in memory
flh f2, 0(x2) # load 0x526ab95a from memory into f2
fnmadd.h f6, f24, f15, f2, dyn # perform operation
fnmadd.h f6, f24, f15, f2, rdn # perform operation
fnmadd.h f6, f24, f15, f2, rmm # perform operation
fnmadd.h f6, f24, f15, f2, rne # perform operation
fnmadd.h f6, f24, f15, f2, rtz # perform operation
fnmadd.h f6, f24, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f24, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f24, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f24, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f24, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f24, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
la x2, scratch
li x3, 0xb0786797 # load x3 with value 0xb0786797
sw x3, 0(x2) # store 0xb0786797 in memory
flh f17, 0(x2) # load 0xb0786797 from memory into f17
fnmadd.h f12, f15, f13, f17, dyn # perform operation
fnmadd.h f12, f15, f13, f17, rdn # perform operation
fnmadd.h f12, f15, f13, f17, rmm # perform operation
fnmadd.h f12, f15, f13, f17, rne # perform operation
fnmadd.h f12, f15, f13, f17, rtz # perform operation
fnmadd.h f12, f15, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f15, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f15, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f15, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f15, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f15, f13, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f17, 0(x2) # load 0x00007bff from memory into f17
la x2, scratch
li x3, 0x26b68303 # load x3 with value 0x26b68303
sw x3, 0(x2) # store 0x26b68303 in memory
flh f21, 0(x2) # load 0x26b68303 from memory into f21
fnmadd.h f26, f20, f17, f21, dyn # perform operation
fnmadd.h f26, f20, f17, f21, rdn # perform operation
fnmadd.h f26, f20, f17, f21, rmm # perform operation
fnmadd.h f26, f20, f17, f21, rne # perform operation
fnmadd.h f26, f20, f17, f21, rtz # perform operation
fnmadd.h f26, f20, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f20, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f20, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f20, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f20, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f20, f17, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f27, 0(x2) # load 0x000003ff from memory into f27
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f10, 0(x2) # load 0x0000fbff from memory into f10
la x2, scratch
li x3, 0x93834545 # load x3 with value 0x93834545
sw x3, 0(x2) # store 0x93834545 in memory
flh f5, 0(x2) # load 0x93834545 from memory into f5
fnmadd.h f6, f27, f10, f5, dyn # perform operation
fnmadd.h f6, f27, f10, f5, rdn # perform operation
fnmadd.h f6, f27, f10, f5, rmm # perform operation
fnmadd.h f6, f27, f10, f5, rne # perform operation
fnmadd.h f6, f27, f10, f5, rtz # perform operation
fnmadd.h f6, f27, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f27, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f27, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f27, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f27, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f27, f10, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f5, 0(x2) # load 0x000003ff from memory into f5
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
la x2, scratch
li x3, 0xab49ed4c # load x3 with value 0xab49ed4c
sw x3, 0(x2) # store 0xab49ed4c in memory
flh f29, 0(x2) # load 0xab49ed4c from memory into f29
fnmadd.h f26, f5, f15, f29, dyn # perform operation
fnmadd.h f26, f5, f15, f29, rdn # perform operation
fnmadd.h f26, f5, f15, f29, rmm # perform operation
fnmadd.h f26, f5, f15, f29, rne # perform operation
fnmadd.h f26, f5, f15, f29, rtz # perform operation
fnmadd.h f26, f5, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f5, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f5, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f5, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f5, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f5, f15, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f30, 0(x2) # load 0x000003ff from memory into f30
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f5, 0(x2) # load 0x000083ff from memory into f5
la x2, scratch
li x3, 0x596cc61f # load x3 with value 0x596cc61f
sw x3, 0(x2) # store 0x596cc61f in memory
flh f29, 0(x2) # load 0x596cc61f from memory into f29
fnmadd.h f13, f30, f5, f29, dyn # perform operation
fnmadd.h f13, f30, f5, f29, rdn # perform operation
fnmadd.h f13, f30, f5, f29, rmm # perform operation
fnmadd.h f13, f30, f5, f29, rne # perform operation
fnmadd.h f13, f30, f5, f29, rtz # perform operation
fnmadd.h f13, f30, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f30, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f30, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f30, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f30, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f30, f5, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f31, 0(x2) # load 0x000003ff from memory into f31
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f1, 0(x2) # load 0x00000200 from memory into f1
la x2, scratch
li x3, 0x8d108073 # load x3 with value 0x8d108073
sw x3, 0(x2) # store 0x8d108073 in memory
flh f25, 0(x2) # load 0x8d108073 from memory into f25
fnmadd.h f24, f31, f1, f25, dyn # perform operation
fnmadd.h f24, f31, f1, f25, rdn # perform operation
fnmadd.h f24, f31, f1, f25, rmm # perform operation
fnmadd.h f24, f31, f1, f25, rne # perform operation
fnmadd.h f24, f31, f1, f25, rtz # perform operation
fnmadd.h f24, f31, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f31, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f31, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f31, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f31, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f31, f1, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f23, 0(x2) # load 0x000003ff from memory into f23
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f7, 0(x2) # load 0x00008200 from memory into f7
la x2, scratch
li x3, 0x6490b94a # load x3 with value 0x6490b94a
sw x3, 0(x2) # store 0x6490b94a in memory
flh f29, 0(x2) # load 0x6490b94a from memory into f29
fnmadd.h f3, f23, f7, f29, dyn # perform operation
fnmadd.h f3, f23, f7, f29, rdn # perform operation
fnmadd.h f3, f23, f7, f29, rmm # perform operation
fnmadd.h f3, f23, f7, f29, rne # perform operation
fnmadd.h f3, f23, f7, f29, rtz # perform operation
fnmadd.h f3, f23, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f23, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f23, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f23, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f23, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f23, f7, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0xc0a80c0a # load x3 with value 0xc0a80c0a
sw x3, 0(x2) # store 0xc0a80c0a in memory
flh f30, 0(x2) # load 0xc0a80c0a from memory into f30
fnmadd.h f6, f20, f9, f30, dyn # perform operation
fnmadd.h f6, f20, f9, f30, rdn # perform operation
fnmadd.h f6, f20, f9, f30, rmm # perform operation
fnmadd.h f6, f20, f9, f30, rne # perform operation
fnmadd.h f6, f20, f9, f30, rtz # perform operation
fnmadd.h f6, f20, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f20, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f20, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f20, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f20, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f20, f9, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f19, 0(x2) # load 0x000003ff from memory into f19
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f20, 0(x2) # load 0x00008001 from memory into f20
la x2, scratch
li x3, 0x2b63371f # load x3 with value 0x2b63371f
sw x3, 0(x2) # store 0x2b63371f in memory
flh f2, 0(x2) # load 0x2b63371f from memory into f2
fnmadd.h f6, f19, f20, f2, dyn # perform operation
fnmadd.h f6, f19, f20, f2, rdn # perform operation
fnmadd.h f6, f19, f20, f2, rmm # perform operation
fnmadd.h f6, f19, f20, f2, rne # perform operation
fnmadd.h f6, f19, f20, f2, rtz # perform operation
fnmadd.h f6, f19, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f19, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f19, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f19, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f19, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f19, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f1, 0(x2) # load 0x000003ff from memory into f1
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f10, 0(x2) # load 0x00007c00 from memory into f10
la x2, scratch
li x3, 0x84f7fb14 # load x3 with value 0x84f7fb14
sw x3, 0(x2) # store 0x84f7fb14 in memory
flh f14, 0(x2) # load 0x84f7fb14 from memory into f14
fnmadd.h f17, f1, f10, f14, dyn # perform operation
fnmadd.h f17, f1, f10, f14, rdn # perform operation
fnmadd.h f17, f1, f10, f14, rmm # perform operation
fnmadd.h f17, f1, f10, f14, rne # perform operation
fnmadd.h f17, f1, f10, f14, rtz # perform operation
fnmadd.h f17, f1, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f1, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f1, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f1, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f1, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f1, f10, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f25, 0(x2) # load 0x000003ff from memory into f25
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f30, 0(x2) # load 0x0000fc00 from memory into f30
la x2, scratch
li x3, 0x87b6daf3 # load x3 with value 0x87b6daf3
sw x3, 0(x2) # store 0x87b6daf3 in memory
flh f15, 0(x2) # load 0x87b6daf3 from memory into f15
fnmadd.h f16, f25, f30, f15, dyn # perform operation
fnmadd.h f16, f25, f30, f15, rdn # perform operation
fnmadd.h f16, f25, f30, f15, rmm # perform operation
fnmadd.h f16, f25, f30, f15, rne # perform operation
fnmadd.h f16, f25, f30, f15, rtz # perform operation
fnmadd.h f16, f25, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f25, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f25, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f25, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f25, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f25, f30, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f22, 0(x2) # load 0x000003ff from memory into f22
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f2, 0(x2) # load 0x00007e00 from memory into f2
la x2, scratch
li x3, 0x4540ebcc # load x3 with value 0x4540ebcc
sw x3, 0(x2) # store 0x4540ebcc in memory
flh f17, 0(x2) # load 0x4540ebcc from memory into f17
fnmadd.h f11, f22, f2, f17, dyn # perform operation
fnmadd.h f11, f22, f2, f17, rdn # perform operation
fnmadd.h f11, f22, f2, f17, rmm # perform operation
fnmadd.h f11, f22, f2, f17, rne # perform operation
fnmadd.h f11, f22, f2, f17, rtz # perform operation
fnmadd.h f11, f22, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f22, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f22, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f22, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f22, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f22, f2, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f22, 0(x2) # load 0x000003ff from memory into f22
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f16, 0(x2) # load 0x00007fff from memory into f16
la x2, scratch
li x3, 0xb5b3ad4d # load x3 with value 0xb5b3ad4d
sw x3, 0(x2) # store 0xb5b3ad4d in memory
flh f13, 0(x2) # load 0xb5b3ad4d from memory into f13
fnmadd.h f23, f22, f16, f13, dyn # perform operation
fnmadd.h f23, f22, f16, f13, rdn # perform operation
fnmadd.h f23, f22, f16, f13, rmm # perform operation
fnmadd.h f23, f22, f16, f13, rne # perform operation
fnmadd.h f23, f22, f16, f13, rtz # perform operation
fnmadd.h f23, f22, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f22, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f22, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f22, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f22, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f22, f16, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f14, 0(x2) # load 0x000003ff from memory into f14
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f9, 0(x2) # load 0x0000fe00 from memory into f9
la x2, scratch
li x3, 0x25d62969 # load x3 with value 0x25d62969
sw x3, 0(x2) # store 0x25d62969 in memory
flh f10, 0(x2) # load 0x25d62969 from memory into f10
fnmadd.h f27, f14, f9, f10, dyn # perform operation
fnmadd.h f27, f14, f9, f10, rdn # perform operation
fnmadd.h f27, f14, f9, f10, rmm # perform operation
fnmadd.h f27, f14, f9, f10, rne # perform operation
fnmadd.h f27, f14, f9, f10, rtz # perform operation
fnmadd.h f27, f14, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f14, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f14, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f14, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f14, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f14, f9, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f13, 0(x2) # load 0x000003ff from memory into f13
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f16, 0(x2) # load 0x00007c01 from memory into f16
la x2, scratch
li x3, 0x7922fbe8 # load x3 with value 0x7922fbe8
sw x3, 0(x2) # store 0x7922fbe8 in memory
flh f8, 0(x2) # load 0x7922fbe8 from memory into f8
fnmadd.h f21, f13, f16, f8, dyn # perform operation
fnmadd.h f21, f13, f16, f8, rdn # perform operation
fnmadd.h f21, f13, f16, f8, rmm # perform operation
fnmadd.h f21, f13, f16, f8, rne # perform operation
fnmadd.h f21, f13, f16, f8, rtz # perform operation
fnmadd.h f21, f13, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f13, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f13, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f13, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f13, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f13, f16, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f13, 0(x2) # load 0x000003ff from memory into f13
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f25, 0(x2) # load 0x00007dff from memory into f25
la x2, scratch
li x3, 0x1a0876f5 # load x3 with value 0x1a0876f5
sw x3, 0(x2) # store 0x1a0876f5 in memory
flh f31, 0(x2) # load 0x1a0876f5 from memory into f31
fnmadd.h f5, f13, f25, f31, dyn # perform operation
fnmadd.h f5, f13, f25, f31, rdn # perform operation
fnmadd.h f5, f13, f25, f31, rmm # perform operation
fnmadd.h f5, f13, f25, f31, rne # perform operation
fnmadd.h f5, f13, f25, f31, rtz # perform operation
fnmadd.h f5, f13, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f13, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f13, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f13, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f13, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f13, f25, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f10, 0(x2) # load 0x000003ff from memory into f10
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f19, 0(x2) # load 0x0000fc01 from memory into f19
la x2, scratch
li x3, 0x1fd2ddcf # load x3 with value 0x1fd2ddcf
sw x3, 0(x2) # store 0x1fd2ddcf in memory
flh f20, 0(x2) # load 0x1fd2ddcf from memory into f20
fnmadd.h f5, f10, f19, f20, dyn # perform operation
fnmadd.h f5, f10, f19, f20, rdn # perform operation
fnmadd.h f5, f10, f19, f20, rmm # perform operation
fnmadd.h f5, f10, f19, f20, rne # perform operation
fnmadd.h f5, f10, f19, f20, rtz # perform operation
fnmadd.h f5, f10, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f10, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f10, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f10, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f10, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f10, f19, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f22, 0(x2) # load 0x000003ff from memory into f22
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f3, 0(x2) # load 0x000058b4 from memory into f3
la x2, scratch
li x3, 0x51d6f027 # load x3 with value 0x51d6f027
sw x3, 0(x2) # store 0x51d6f027 in memory
flh f13, 0(x2) # load 0x51d6f027 from memory into f13
fnmadd.h f27, f22, f3, f13, dyn # perform operation
fnmadd.h f27, f22, f3, f13, rdn # perform operation
fnmadd.h f27, f22, f3, f13, rmm # perform operation
fnmadd.h f27, f22, f3, f13, rne # perform operation
fnmadd.h f27, f22, f3, f13, rtz # perform operation
fnmadd.h f27, f22, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f22, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f22, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f22, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f22, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f22, f3, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f3, 0(x2) # load 0x000003ff from memory into f3
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f24, 0(x2) # load 0x0000c93a from memory into f24
la x2, scratch
li x3, 0x2d58ac35 # load x3 with value 0x2d58ac35
sw x3, 0(x2) # store 0x2d58ac35 in memory
flh f15, 0(x2) # load 0x2d58ac35 from memory into f15
fnmadd.h f13, f3, f24, f15, dyn # perform operation
fnmadd.h f13, f3, f24, f15, rdn # perform operation
fnmadd.h f13, f3, f24, f15, rmm # perform operation
fnmadd.h f13, f3, f24, f15, rne # perform operation
fnmadd.h f13, f3, f24, f15, rtz # perform operation
fnmadd.h f13, f3, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f3, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f3, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f3, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f3, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f3, f24, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f14, 0(x2) # load 0x000083ff from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0xc1de9189 # load x3 with value 0xc1de9189
sw x3, 0(x2) # store 0xc1de9189 in memory
flh f12, 0(x2) # load 0xc1de9189 from memory into f12
fnmadd.h f31, f14, f9, f12, dyn # perform operation
fnmadd.h f31, f14, f9, f12, rdn # perform operation
fnmadd.h f31, f14, f9, f12, rmm # perform operation
fnmadd.h f31, f14, f9, f12, rne # perform operation
fnmadd.h f31, f14, f9, f12, rtz # perform operation
fnmadd.h f31, f14, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f14, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f14, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f14, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f14, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f14, f9, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f13, 0(x2) # load 0x000083ff from memory into f13
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f26, 0(x2) # load 0x00008000 from memory into f26
la x2, scratch
li x3, 0xf6a57cb8 # load x3 with value 0xf6a57cb8
sw x3, 0(x2) # store 0xf6a57cb8 in memory
flh f2, 0(x2) # load 0xf6a57cb8 from memory into f2
fnmadd.h f3, f13, f26, f2, dyn # perform operation
fnmadd.h f3, f13, f26, f2, rdn # perform operation
fnmadd.h f3, f13, f26, f2, rmm # perform operation
fnmadd.h f3, f13, f26, f2, rne # perform operation
fnmadd.h f3, f13, f26, f2, rtz # perform operation
fnmadd.h f3, f13, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f13, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f13, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f13, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f13, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f13, f26, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f15, 0(x2) # load 0x000083ff from memory into f15
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f1, 0(x2) # load 0x00003c00 from memory into f1
la x2, scratch
li x3, 0x8cbce6c6 # load x3 with value 0x8cbce6c6
sw x3, 0(x2) # store 0x8cbce6c6 in memory
flh f2, 0(x2) # load 0x8cbce6c6 from memory into f2
fnmadd.h f7, f15, f1, f2, dyn # perform operation
fnmadd.h f7, f15, f1, f2, rdn # perform operation
fnmadd.h f7, f15, f1, f2, rmm # perform operation
fnmadd.h f7, f15, f1, f2, rne # perform operation
fnmadd.h f7, f15, f1, f2, rtz # perform operation
fnmadd.h f7, f15, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f15, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f15, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f15, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f15, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f15, f1, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f26, 0(x2) # load 0x000083ff from memory into f26
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f30, 0(x2) # load 0x0000bc00 from memory into f30
la x2, scratch
li x3, 0x746512d1 # load x3 with value 0x746512d1
sw x3, 0(x2) # store 0x746512d1 in memory
flh f23, 0(x2) # load 0x746512d1 from memory into f23
fnmadd.h f22, f26, f30, f23, dyn # perform operation
fnmadd.h f22, f26, f30, f23, rdn # perform operation
fnmadd.h f22, f26, f30, f23, rmm # perform operation
fnmadd.h f22, f26, f30, f23, rne # perform operation
fnmadd.h f22, f26, f30, f23, rtz # perform operation
fnmadd.h f22, f26, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f26, f30, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f20, 0(x2) # load 0x000083ff from memory into f20
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
la x2, scratch
li x3, 0xbc8e13ca # load x3 with value 0xbc8e13ca
sw x3, 0(x2) # store 0xbc8e13ca in memory
flh f14, 0(x2) # load 0xbc8e13ca from memory into f14
fnmadd.h f28, f20, f10, f14, dyn # perform operation
fnmadd.h f28, f20, f10, f14, rdn # perform operation
fnmadd.h f28, f20, f10, f14, rmm # perform operation
fnmadd.h f28, f20, f10, f14, rne # perform operation
fnmadd.h f28, f20, f10, f14, rtz # perform operation
fnmadd.h f28, f20, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f20, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f20, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f20, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f20, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f20, f10, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f13, 0(x2) # load 0x000083ff from memory into f13
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
la x2, scratch
li x3, 0x8f8aeb02 # load x3 with value 0x8f8aeb02
sw x3, 0(x2) # store 0x8f8aeb02 in memory
flh f7, 0(x2) # load 0x8f8aeb02 from memory into f7
fnmadd.h f16, f13, f1, f7, dyn # perform operation
fnmadd.h f16, f13, f1, f7, rdn # perform operation
fnmadd.h f16, f13, f1, f7, rmm # perform operation
fnmadd.h f16, f13, f1, f7, rne # perform operation
fnmadd.h f16, f13, f1, f7, rtz # perform operation
fnmadd.h f16, f13, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f13, f1, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f28, 0(x2) # load 0x000083ff from memory into f28
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f7, 0(x2) # load 0x00004000 from memory into f7
la x2, scratch
li x3, 0x9ba76388 # load x3 with value 0x9ba76388
sw x3, 0(x2) # store 0x9ba76388 in memory
flh f19, 0(x2) # load 0x9ba76388 from memory into f19
fnmadd.h f22, f28, f7, f19, dyn # perform operation
fnmadd.h f22, f28, f7, f19, rdn # perform operation
fnmadd.h f22, f28, f7, f19, rmm # perform operation
fnmadd.h f22, f28, f7, f19, rne # perform operation
fnmadd.h f22, f28, f7, f19, rtz # perform operation
fnmadd.h f22, f28, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f28, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f28, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f28, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f28, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f28, f7, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f22, 0(x2) # load 0x000083ff from memory into f22
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f19, 0(x2) # load 0x0000c000 from memory into f19
la x2, scratch
li x3, 0xb58067d7 # load x3 with value 0xb58067d7
sw x3, 0(x2) # store 0xb58067d7 in memory
flh f2, 0(x2) # load 0xb58067d7 from memory into f2
fnmadd.h f5, f22, f19, f2, dyn # perform operation
fnmadd.h f5, f22, f19, f2, rdn # perform operation
fnmadd.h f5, f22, f19, f2, rmm # perform operation
fnmadd.h f5, f22, f19, f2, rne # perform operation
fnmadd.h f5, f22, f19, f2, rtz # perform operation
fnmadd.h f5, f22, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f22, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f22, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f22, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f22, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f22, f19, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f8, 0(x2) # load 0x000083ff from memory into f8
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f12, 0(x2) # load 0x00000400 from memory into f12
la x2, scratch
li x3, 0x89550890 # load x3 with value 0x89550890
sw x3, 0(x2) # store 0x89550890 in memory
flh f11, 0(x2) # load 0x89550890 from memory into f11
fnmadd.h f30, f8, f12, f11, dyn # perform operation
fnmadd.h f30, f8, f12, f11, rdn # perform operation
fnmadd.h f30, f8, f12, f11, rmm # perform operation
fnmadd.h f30, f8, f12, f11, rne # perform operation
fnmadd.h f30, f8, f12, f11, rtz # perform operation
fnmadd.h f30, f8, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f8, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f8, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f8, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f8, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f8, f12, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f12, 0(x2) # load 0x000083ff from memory into f12
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f6, 0(x2) # load 0x00008400 from memory into f6
la x2, scratch
li x3, 0x185d73be # load x3 with value 0x185d73be
sw x3, 0(x2) # store 0x185d73be in memory
flh f15, 0(x2) # load 0x185d73be from memory into f15
fnmadd.h f16, f12, f6, f15, dyn # perform operation
fnmadd.h f16, f12, f6, f15, rdn # perform operation
fnmadd.h f16, f12, f6, f15, rmm # perform operation
fnmadd.h f16, f12, f6, f15, rne # perform operation
fnmadd.h f16, f12, f6, f15, rtz # perform operation
fnmadd.h f16, f12, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f12, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f12, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f12, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f12, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f12, f6, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f23, 0(x2) # load 0x000083ff from memory into f23
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f13, 0(x2) # load 0x00007bff from memory into f13
la x2, scratch
li x3, 0xfff98635 # load x3 with value 0xfff98635
sw x3, 0(x2) # store 0xfff98635 in memory
flh f16, 0(x2) # load 0xfff98635 from memory into f16
fnmadd.h f25, f23, f13, f16, dyn # perform operation
fnmadd.h f25, f23, f13, f16, rdn # perform operation
fnmadd.h f25, f23, f13, f16, rmm # perform operation
fnmadd.h f25, f23, f13, f16, rne # perform operation
fnmadd.h f25, f23, f13, f16, rtz # perform operation
fnmadd.h f25, f23, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f23, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f23, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f23, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f23, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f23, f13, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f28, 0(x2) # load 0x000083ff from memory into f28
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f20, 0(x2) # load 0x0000fbff from memory into f20
la x2, scratch
li x3, 0xebb3d96b # load x3 with value 0xebb3d96b
sw x3, 0(x2) # store 0xebb3d96b in memory
flh f12, 0(x2) # load 0xebb3d96b from memory into f12
fnmadd.h f16, f28, f20, f12, dyn # perform operation
fnmadd.h f16, f28, f20, f12, rdn # perform operation
fnmadd.h f16, f28, f20, f12, rmm # perform operation
fnmadd.h f16, f28, f20, f12, rne # perform operation
fnmadd.h f16, f28, f20, f12, rtz # perform operation
fnmadd.h f16, f28, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f28, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f28, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f28, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f28, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f28, f20, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f28, 0(x2) # load 0x000003ff from memory into f28
la x2, scratch
li x3, 0x3e517500 # load x3 with value 0x3e517500
sw x3, 0(x2) # store 0x3e517500 in memory
flh f20, 0(x2) # load 0x3e517500 from memory into f20
fnmadd.h f21, f18, f28, f20, dyn # perform operation
fnmadd.h f21, f18, f28, f20, rdn # perform operation
fnmadd.h f21, f18, f28, f20, rmm # perform operation
fnmadd.h f21, f18, f28, f20, rne # perform operation
fnmadd.h f21, f18, f28, f20, rtz # perform operation
fnmadd.h f21, f18, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f18, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f18, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f18, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f18, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f18, f28, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f11, 0(x2) # load 0x000083ff from memory into f11
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
la x2, scratch
li x3, 0x0fc1343b # load x3 with value 0x0fc1343b
sw x3, 0(x2) # store 0x0fc1343b in memory
flh f30, 0(x2) # load 0x0fc1343b from memory into f30
fnmadd.h f9, f11, f19, f30, dyn # perform operation
fnmadd.h f9, f11, f19, f30, rdn # perform operation
fnmadd.h f9, f11, f19, f30, rmm # perform operation
fnmadd.h f9, f11, f19, f30, rne # perform operation
fnmadd.h f9, f11, f19, f30, rtz # perform operation
fnmadd.h f9, f11, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f11, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f11, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f11, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f11, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f11, f19, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f12, 0(x2) # load 0x000083ff from memory into f12
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f22, 0(x2) # load 0x00000200 from memory into f22
la x2, scratch
li x3, 0xea5bd90a # load x3 with value 0xea5bd90a
sw x3, 0(x2) # store 0xea5bd90a in memory
flh f8, 0(x2) # load 0xea5bd90a from memory into f8
fnmadd.h f15, f12, f22, f8, dyn # perform operation
fnmadd.h f15, f12, f22, f8, rdn # perform operation
fnmadd.h f15, f12, f22, f8, rmm # perform operation
fnmadd.h f15, f12, f22, f8, rne # perform operation
fnmadd.h f15, f12, f22, f8, rtz # perform operation
fnmadd.h f15, f12, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f12, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f12, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f12, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f12, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f12, f22, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f21, 0(x2) # load 0x000083ff from memory into f21
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f29, 0(x2) # load 0x00008200 from memory into f29
la x2, scratch
li x3, 0x484a407b # load x3 with value 0x484a407b
sw x3, 0(x2) # store 0x484a407b in memory
flh f1, 0(x2) # load 0x484a407b from memory into f1
fnmadd.h f7, f21, f29, f1, dyn # perform operation
fnmadd.h f7, f21, f29, f1, rdn # perform operation
fnmadd.h f7, f21, f29, f1, rmm # perform operation
fnmadd.h f7, f21, f29, f1, rne # perform operation
fnmadd.h f7, f21, f29, f1, rtz # perform operation
fnmadd.h f7, f21, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f21, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f21, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f21, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f21, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f21, f29, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f29, 0(x2) # load 0x000083ff from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0xf3efd957 # load x3 with value 0xf3efd957
sw x3, 0(x2) # store 0xf3efd957 in memory
flh f8, 0(x2) # load 0xf3efd957 from memory into f8
fnmadd.h f23, f29, f19, f8, dyn # perform operation
fnmadd.h f23, f29, f19, f8, rdn # perform operation
fnmadd.h f23, f29, f19, f8, rmm # perform operation
fnmadd.h f23, f29, f19, f8, rne # perform operation
fnmadd.h f23, f29, f19, f8, rtz # perform operation
fnmadd.h f23, f29, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f29, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f29, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f29, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f29, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f29, f19, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f10, 0(x2) # load 0x000083ff from memory into f10
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f17, 0(x2) # load 0x00008001 from memory into f17
la x2, scratch
li x3, 0x1ff42b9d # load x3 with value 0x1ff42b9d
sw x3, 0(x2) # store 0x1ff42b9d in memory
flh f13, 0(x2) # load 0x1ff42b9d from memory into f13
fnmadd.h f1, f10, f17, f13, dyn # perform operation
fnmadd.h f1, f10, f17, f13, rdn # perform operation
fnmadd.h f1, f10, f17, f13, rmm # perform operation
fnmadd.h f1, f10, f17, f13, rne # perform operation
fnmadd.h f1, f10, f17, f13, rtz # perform operation
fnmadd.h f1, f10, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f10, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f10, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f10, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f10, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f10, f17, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f22, 0(x2) # load 0x00007c00 from memory into f22
la x2, scratch
li x3, 0x7572f2bc # load x3 with value 0x7572f2bc
sw x3, 0(x2) # store 0x7572f2bc in memory
flh f7, 0(x2) # load 0x7572f2bc from memory into f7
fnmadd.h f30, f18, f22, f7, dyn # perform operation
fnmadd.h f30, f18, f22, f7, rdn # perform operation
fnmadd.h f30, f18, f22, f7, rmm # perform operation
fnmadd.h f30, f18, f22, f7, rne # perform operation
fnmadd.h f30, f18, f22, f7, rtz # perform operation
fnmadd.h f30, f18, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f18, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f18, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f18, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f18, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f18, f22, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f30, 0(x2) # load 0x000083ff from memory into f30
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f1, 0(x2) # load 0x0000fc00 from memory into f1
la x2, scratch
li x3, 0x1ff04794 # load x3 with value 0x1ff04794
sw x3, 0(x2) # store 0x1ff04794 in memory
flh f7, 0(x2) # load 0x1ff04794 from memory into f7
fnmadd.h f8, f30, f1, f7, dyn # perform operation
fnmadd.h f8, f30, f1, f7, rdn # perform operation
fnmadd.h f8, f30, f1, f7, rmm # perform operation
fnmadd.h f8, f30, f1, f7, rne # perform operation
fnmadd.h f8, f30, f1, f7, rtz # perform operation
fnmadd.h f8, f30, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f30, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f30, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f30, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f30, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f30, f1, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f1, 0(x2) # load 0x000083ff from memory into f1
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f19, 0(x2) # load 0x00007e00 from memory into f19
la x2, scratch
li x3, 0xbed1f34f # load x3 with value 0xbed1f34f
sw x3, 0(x2) # store 0xbed1f34f in memory
flh f5, 0(x2) # load 0xbed1f34f from memory into f5
fnmadd.h f10, f1, f19, f5, dyn # perform operation
fnmadd.h f10, f1, f19, f5, rdn # perform operation
fnmadd.h f10, f1, f19, f5, rmm # perform operation
fnmadd.h f10, f1, f19, f5, rne # perform operation
fnmadd.h f10, f1, f19, f5, rtz # perform operation
fnmadd.h f10, f1, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f1, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f1, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f1, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f1, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f1, f19, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f26, 0(x2) # load 0x00007fff from memory into f26
la x2, scratch
li x3, 0x846ae11b # load x3 with value 0x846ae11b
sw x3, 0(x2) # store 0x846ae11b in memory
flh f27, 0(x2) # load 0x846ae11b from memory into f27
fnmadd.h f1, f19, f26, f27, dyn # perform operation
fnmadd.h f1, f19, f26, f27, rdn # perform operation
fnmadd.h f1, f19, f26, f27, rmm # perform operation
fnmadd.h f1, f19, f26, f27, rne # perform operation
fnmadd.h f1, f19, f26, f27, rtz # perform operation
fnmadd.h f1, f19, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f19, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f19, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f19, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f19, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f19, f26, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f25, 0(x2) # load 0x000083ff from memory into f25
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f19, 0(x2) # load 0x0000fe00 from memory into f19
la x2, scratch
li x3, 0xaa771bb1 # load x3 with value 0xaa771bb1
sw x3, 0(x2) # store 0xaa771bb1 in memory
flh f1, 0(x2) # load 0xaa771bb1 from memory into f1
fnmadd.h f8, f25, f19, f1, dyn # perform operation
fnmadd.h f8, f25, f19, f1, rdn # perform operation
fnmadd.h f8, f25, f19, f1, rmm # perform operation
fnmadd.h f8, f25, f19, f1, rne # perform operation
fnmadd.h f8, f25, f19, f1, rtz # perform operation
fnmadd.h f8, f25, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f25, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f25, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f25, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f25, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f25, f19, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f6, 0(x2) # load 0x000083ff from memory into f6
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f17, 0(x2) # load 0x00007c01 from memory into f17
la x2, scratch
li x3, 0x7dc2c998 # load x3 with value 0x7dc2c998
sw x3, 0(x2) # store 0x7dc2c998 in memory
flh f14, 0(x2) # load 0x7dc2c998 from memory into f14
fnmadd.h f25, f6, f17, f14, dyn # perform operation
fnmadd.h f25, f6, f17, f14, rdn # perform operation
fnmadd.h f25, f6, f17, f14, rmm # perform operation
fnmadd.h f25, f6, f17, f14, rne # perform operation
fnmadd.h f25, f6, f17, f14, rtz # perform operation
fnmadd.h f25, f6, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f6, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f6, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f6, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f6, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f6, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f24, 0(x2) # load 0x000083ff from memory into f24
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f25, 0(x2) # load 0x00007dff from memory into f25
la x2, scratch
li x3, 0xaa6fde22 # load x3 with value 0xaa6fde22
sw x3, 0(x2) # store 0xaa6fde22 in memory
flh f28, 0(x2) # load 0xaa6fde22 from memory into f28
fnmadd.h f31, f24, f25, f28, dyn # perform operation
fnmadd.h f31, f24, f25, f28, rdn # perform operation
fnmadd.h f31, f24, f25, f28, rmm # perform operation
fnmadd.h f31, f24, f25, f28, rne # perform operation
fnmadd.h f31, f24, f25, f28, rtz # perform operation
fnmadd.h f31, f24, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f24, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f24, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f24, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f24, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f24, f25, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f27, 0(x2) # load 0x000083ff from memory into f27
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f28, 0(x2) # load 0x0000fc01 from memory into f28
la x2, scratch
li x3, 0xffd2f909 # load x3 with value 0xffd2f909
sw x3, 0(x2) # store 0xffd2f909 in memory
flh f11, 0(x2) # load 0xffd2f909 from memory into f11
fnmadd.h f21, f27, f28, f11, dyn # perform operation
fnmadd.h f21, f27, f28, f11, rdn # perform operation
fnmadd.h f21, f27, f28, f11, rmm # perform operation
fnmadd.h f21, f27, f28, f11, rne # perform operation
fnmadd.h f21, f27, f28, f11, rtz # perform operation
fnmadd.h f21, f27, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f27, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f27, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f27, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f27, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f27, f28, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f24, 0(x2) # load 0x000083ff from memory into f24
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
la x2, scratch
li x3, 0x40ade7b5 # load x3 with value 0x40ade7b5
sw x3, 0(x2) # store 0x40ade7b5 in memory
flh f22, 0(x2) # load 0x40ade7b5 from memory into f22
fnmadd.h f6, f24, f29, f22, dyn # perform operation
fnmadd.h f6, f24, f29, f22, rdn # perform operation
fnmadd.h f6, f24, f29, f22, rmm # perform operation
fnmadd.h f6, f24, f29, f22, rne # perform operation
fnmadd.h f6, f24, f29, f22, rtz # perform operation
fnmadd.h f6, f24, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f24, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f24, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f24, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f24, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f24, f29, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f3, 0(x2) # load 0x000083ff from memory into f3
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f13, 0(x2) # load 0x0000c93a from memory into f13
la x2, scratch
li x3, 0x07baa443 # load x3 with value 0x07baa443
sw x3, 0(x2) # store 0x07baa443 in memory
flh f14, 0(x2) # load 0x07baa443 from memory into f14
fnmadd.h f8, f3, f13, f14, dyn # perform operation
fnmadd.h f8, f3, f13, f14, rdn # perform operation
fnmadd.h f8, f3, f13, f14, rmm # perform operation
fnmadd.h f8, f3, f13, f14, rne # perform operation
fnmadd.h f8, f3, f13, f14, rtz # perform operation
fnmadd.h f8, f3, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f3, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f3, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f3, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f3, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f3, f13, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f28, 0(x2) # load 0x00000200 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0x1c550556 # load x3 with value 0x1c550556
sw x3, 0(x2) # store 0x1c550556 in memory
flh f11, 0(x2) # load 0x1c550556 from memory into f11
fnmadd.h f21, f28, f24, f11, dyn # perform operation
fnmadd.h f21, f28, f24, f11, rdn # perform operation
fnmadd.h f21, f28, f24, f11, rmm # perform operation
fnmadd.h f21, f28, f24, f11, rne # perform operation
fnmadd.h f21, f28, f24, f11, rtz # perform operation
fnmadd.h f21, f28, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f28, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f28, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f28, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f28, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f28, f24, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f30, 0(x2) # load 0x00000200 from memory into f30
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f24, 0(x2) # load 0x00008000 from memory into f24
la x2, scratch
li x3, 0x58b276a0 # load x3 with value 0x58b276a0
sw x3, 0(x2) # store 0x58b276a0 in memory
flh f18, 0(x2) # load 0x58b276a0 from memory into f18
fnmadd.h f20, f30, f24, f18, dyn # perform operation
fnmadd.h f20, f30, f24, f18, rdn # perform operation
fnmadd.h f20, f30, f24, f18, rmm # perform operation
fnmadd.h f20, f30, f24, f18, rne # perform operation
fnmadd.h f20, f30, f24, f18, rtz # perform operation
fnmadd.h f20, f30, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f30, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f30, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f30, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f30, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f30, f24, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f17, 0(x2) # load 0x00003c00 from memory into f17
la x2, scratch
li x3, 0x25927a0a # load x3 with value 0x25927a0a
sw x3, 0(x2) # store 0x25927a0a in memory
flh f29, 0(x2) # load 0x25927a0a from memory into f29
fnmadd.h f8, f13, f17, f29, dyn # perform operation
fnmadd.h f8, f13, f17, f29, rdn # perform operation
fnmadd.h f8, f13, f17, f29, rmm # perform operation
fnmadd.h f8, f13, f17, f29, rne # perform operation
fnmadd.h f8, f13, f17, f29, rtz # perform operation
fnmadd.h f8, f13, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f13, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f13, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f13, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f13, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f13, f17, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f31, 0(x2) # load 0x0000bc00 from memory into f31
la x2, scratch
li x3, 0x34a48eed # load x3 with value 0x34a48eed
sw x3, 0(x2) # store 0x34a48eed in memory
flh f15, 0(x2) # load 0x34a48eed from memory into f15
fnmadd.h f30, f24, f31, f15, dyn # perform operation
fnmadd.h f30, f24, f31, f15, rdn # perform operation
fnmadd.h f30, f24, f31, f15, rmm # perform operation
fnmadd.h f30, f24, f31, f15, rne # perform operation
fnmadd.h f30, f24, f31, f15, rtz # perform operation
fnmadd.h f30, f24, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f24, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f24, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f24, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f24, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f24, f31, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f13, 0(x2) # load 0x00003e00 from memory into f13
la x2, scratch
li x3, 0x174c8254 # load x3 with value 0x174c8254
sw x3, 0(x2) # store 0x174c8254 in memory
flh f12, 0(x2) # load 0x174c8254 from memory into f12
fnmadd.h f27, f24, f13, f12, dyn # perform operation
fnmadd.h f27, f24, f13, f12, rdn # perform operation
fnmadd.h f27, f24, f13, f12, rmm # perform operation
fnmadd.h f27, f24, f13, f12, rne # perform operation
fnmadd.h f27, f24, f13, f12, rtz # perform operation
fnmadd.h f27, f24, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f24, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f24, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f24, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f24, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f24, f13, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f8, 0(x2) # load 0x00000200 from memory into f8
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f3, 0(x2) # load 0x0000be00 from memory into f3
la x2, scratch
li x3, 0x73088c06 # load x3 with value 0x73088c06
sw x3, 0(x2) # store 0x73088c06 in memory
flh f24, 0(x2) # load 0x73088c06 from memory into f24
fnmadd.h f5, f8, f3, f24, dyn # perform operation
fnmadd.h f5, f8, f3, f24, rdn # perform operation
fnmadd.h f5, f8, f3, f24, rmm # perform operation
fnmadd.h f5, f8, f3, f24, rne # perform operation
fnmadd.h f5, f8, f3, f24, rtz # perform operation
fnmadd.h f5, f8, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f8, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f8, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f8, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f8, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f8, f3, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f30, 0(x2) # load 0x00004000 from memory into f30
la x2, scratch
li x3, 0x0e98d835 # load x3 with value 0x0e98d835
sw x3, 0(x2) # store 0x0e98d835 in memory
flh f29, 0(x2) # load 0x0e98d835 from memory into f29
fnmadd.h f11, f6, f30, f29, dyn # perform operation
fnmadd.h f11, f6, f30, f29, rdn # perform operation
fnmadd.h f11, f6, f30, f29, rmm # perform operation
fnmadd.h f11, f6, f30, f29, rne # perform operation
fnmadd.h f11, f6, f30, f29, rtz # perform operation
fnmadd.h f11, f6, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f6, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f6, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f6, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f6, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f6, f30, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
la x2, scratch
li x3, 0xf98c1c97 # load x3 with value 0xf98c1c97
sw x3, 0(x2) # store 0xf98c1c97 in memory
flh f15, 0(x2) # load 0xf98c1c97 from memory into f15
fnmadd.h f30, f24, f12, f15, dyn # perform operation
fnmadd.h f30, f24, f12, f15, rdn # perform operation
fnmadd.h f30, f24, f12, f15, rmm # perform operation
fnmadd.h f30, f24, f12, f15, rne # perform operation
fnmadd.h f30, f24, f12, f15, rtz # perform operation
fnmadd.h f30, f24, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f24, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f24, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f24, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f24, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f24, f12, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f7, 0(x2) # load 0x00000200 from memory into f7
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
la x2, scratch
li x3, 0x48595347 # load x3 with value 0x48595347
sw x3, 0(x2) # store 0x48595347 in memory
flh f20, 0(x2) # load 0x48595347 from memory into f20
fnmadd.h f6, f7, f1, f20, dyn # perform operation
fnmadd.h f6, f7, f1, f20, rdn # perform operation
fnmadd.h f6, f7, f1, f20, rmm # perform operation
fnmadd.h f6, f7, f1, f20, rne # perform operation
fnmadd.h f6, f7, f1, f20, rtz # perform operation
fnmadd.h f6, f7, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f7, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f7, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f7, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f7, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f7, f1, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f30, 0(x2) # load 0x00000200 from memory into f30
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f21, 0(x2) # load 0x00008400 from memory into f21
la x2, scratch
li x3, 0xa7f6dc35 # load x3 with value 0xa7f6dc35
sw x3, 0(x2) # store 0xa7f6dc35 in memory
flh f3, 0(x2) # load 0xa7f6dc35 from memory into f3
fnmadd.h f29, f30, f21, f3, dyn # perform operation
fnmadd.h f29, f30, f21, f3, rdn # perform operation
fnmadd.h f29, f30, f21, f3, rmm # perform operation
fnmadd.h f29, f30, f21, f3, rne # perform operation
fnmadd.h f29, f30, f21, f3, rtz # perform operation
fnmadd.h f29, f30, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f30, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f30, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f30, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f30, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f30, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f30, 0(x2) # load 0x00000200 from memory into f30
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f12, 0(x2) # load 0x00007bff from memory into f12
la x2, scratch
li x3, 0x237a6044 # load x3 with value 0x237a6044
sw x3, 0(x2) # store 0x237a6044 in memory
flh f18, 0(x2) # load 0x237a6044 from memory into f18
fnmadd.h f27, f30, f12, f18, dyn # perform operation
fnmadd.h f27, f30, f12, f18, rdn # perform operation
fnmadd.h f27, f30, f12, f18, rmm # perform operation
fnmadd.h f27, f30, f12, f18, rne # perform operation
fnmadd.h f27, f30, f12, f18, rtz # perform operation
fnmadd.h f27, f30, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f30, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f30, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f30, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f30, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f30, f12, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f9, 0(x2) # load 0x00000200 from memory into f9
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f1, 0(x2) # load 0x0000fbff from memory into f1
la x2, scratch
li x3, 0x20163d65 # load x3 with value 0x20163d65
sw x3, 0(x2) # store 0x20163d65 in memory
flh f2, 0(x2) # load 0x20163d65 from memory into f2
fnmadd.h f8, f9, f1, f2, dyn # perform operation
fnmadd.h f8, f9, f1, f2, rdn # perform operation
fnmadd.h f8, f9, f1, f2, rmm # perform operation
fnmadd.h f8, f9, f1, f2, rne # perform operation
fnmadd.h f8, f9, f1, f2, rtz # perform operation
fnmadd.h f8, f9, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f9, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f9, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f9, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f9, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f9, f1, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f7, 0(x2) # load 0x000003ff from memory into f7
la x2, scratch
li x3, 0x8d303231 # load x3 with value 0x8d303231
sw x3, 0(x2) # store 0x8d303231 in memory
flh f14, 0(x2) # load 0x8d303231 from memory into f14
fnmadd.h f10, f13, f7, f14, dyn # perform operation
fnmadd.h f10, f13, f7, f14, rdn # perform operation
fnmadd.h f10, f13, f7, f14, rmm # perform operation
fnmadd.h f10, f13, f7, f14, rne # perform operation
fnmadd.h f10, f13, f7, f14, rtz # perform operation
fnmadd.h f10, f13, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f13, f7, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f31, 0(x2) # load 0x00000200 from memory into f31
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f5, 0(x2) # load 0x000083ff from memory into f5
la x2, scratch
li x3, 0xc0ec12df # load x3 with value 0xc0ec12df
sw x3, 0(x2) # store 0xc0ec12df in memory
flh f1, 0(x2) # load 0xc0ec12df from memory into f1
fnmadd.h f15, f31, f5, f1, dyn # perform operation
fnmadd.h f15, f31, f5, f1, rdn # perform operation
fnmadd.h f15, f31, f5, f1, rmm # perform operation
fnmadd.h f15, f31, f5, f1, rne # perform operation
fnmadd.h f15, f31, f5, f1, rtz # perform operation
fnmadd.h f15, f31, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f31, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f31, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f31, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f31, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f31, f5, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f16, 0(x2) # load 0x00000200 from memory into f16
la x2, scratch
li x3, 0xb8ddba0f # load x3 with value 0xb8ddba0f
sw x3, 0(x2) # store 0xb8ddba0f in memory
flh f22, 0(x2) # load 0xb8ddba0f from memory into f22
fnmadd.h f1, f19, f16, f22, dyn # perform operation
fnmadd.h f1, f19, f16, f22, rdn # perform operation
fnmadd.h f1, f19, f16, f22, rmm # perform operation
fnmadd.h f1, f19, f16, f22, rne # perform operation
fnmadd.h f1, f19, f16, f22, rtz # perform operation
fnmadd.h f1, f19, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f19, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f19, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f19, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f19, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f19, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f8, 0(x2) # load 0x00000200 from memory into f8
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f21, 0(x2) # load 0x00008200 from memory into f21
la x2, scratch
li x3, 0x460fe89f # load x3 with value 0x460fe89f
sw x3, 0(x2) # store 0x460fe89f in memory
flh f25, 0(x2) # load 0x460fe89f from memory into f25
fnmadd.h f17, f8, f21, f25, dyn # perform operation
fnmadd.h f17, f8, f21, f25, rdn # perform operation
fnmadd.h f17, f8, f21, f25, rmm # perform operation
fnmadd.h f17, f8, f21, f25, rne # perform operation
fnmadd.h f17, f8, f21, f25, rtz # perform operation
fnmadd.h f17, f8, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f8, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f8, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f8, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f8, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f8, f21, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f7, 0(x2) # load 0x00000200 from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x77bfe0b0 # load x3 with value 0x77bfe0b0
sw x3, 0(x2) # store 0x77bfe0b0 in memory
flh f18, 0(x2) # load 0x77bfe0b0 from memory into f18
fnmadd.h f12, f7, f17, f18, dyn # perform operation
fnmadd.h f12, f7, f17, f18, rdn # perform operation
fnmadd.h f12, f7, f17, f18, rmm # perform operation
fnmadd.h f12, f7, f17, f18, rne # perform operation
fnmadd.h f12, f7, f17, f18, rtz # perform operation
fnmadd.h f12, f7, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f7, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f7, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f7, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f7, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f7, f17, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f23, 0(x2) # load 0x00000200 from memory into f23
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f25, 0(x2) # load 0x00008001 from memory into f25
la x2, scratch
li x3, 0x5f2b0904 # load x3 with value 0x5f2b0904
sw x3, 0(x2) # store 0x5f2b0904 in memory
flh f14, 0(x2) # load 0x5f2b0904 from memory into f14
fnmadd.h f5, f23, f25, f14, dyn # perform operation
fnmadd.h f5, f23, f25, f14, rdn # perform operation
fnmadd.h f5, f23, f25, f14, rmm # perform operation
fnmadd.h f5, f23, f25, f14, rne # perform operation
fnmadd.h f5, f23, f25, f14, rtz # perform operation
fnmadd.h f5, f23, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f23, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f23, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f23, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f23, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f23, f25, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f9, 0(x2) # load 0x00000200 from memory into f9
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f31, 0(x2) # load 0x00007c00 from memory into f31
la x2, scratch
li x3, 0x2203864b # load x3 with value 0x2203864b
sw x3, 0(x2) # store 0x2203864b in memory
flh f22, 0(x2) # load 0x2203864b from memory into f22
fnmadd.h f20, f9, f31, f22, dyn # perform operation
fnmadd.h f20, f9, f31, f22, rdn # perform operation
fnmadd.h f20, f9, f31, f22, rmm # perform operation
fnmadd.h f20, f9, f31, f22, rne # perform operation
fnmadd.h f20, f9, f31, f22, rtz # perform operation
fnmadd.h f20, f9, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f9, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f9, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f9, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f9, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f9, f31, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f30, 0(x2) # load 0x00000200 from memory into f30
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f8, 0(x2) # load 0x0000fc00 from memory into f8
la x2, scratch
li x3, 0xa5e8ce3b # load x3 with value 0xa5e8ce3b
sw x3, 0(x2) # store 0xa5e8ce3b in memory
flh f23, 0(x2) # load 0xa5e8ce3b from memory into f23
fnmadd.h f24, f30, f8, f23, dyn # perform operation
fnmadd.h f24, f30, f8, f23, rdn # perform operation
fnmadd.h f24, f30, f8, f23, rmm # perform operation
fnmadd.h f24, f30, f8, f23, rne # perform operation
fnmadd.h f24, f30, f8, f23, rtz # perform operation
fnmadd.h f24, f30, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f30, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f30, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f30, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f30, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f30, f8, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f30, 0(x2) # load 0x00000200 from memory into f30
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
la x2, scratch
li x3, 0x3c2cab99 # load x3 with value 0x3c2cab99
sw x3, 0(x2) # store 0x3c2cab99 in memory
flh f23, 0(x2) # load 0x3c2cab99 from memory into f23
fnmadd.h f11, f30, f24, f23, dyn # perform operation
fnmadd.h f11, f30, f24, f23, rdn # perform operation
fnmadd.h f11, f30, f24, f23, rmm # perform operation
fnmadd.h f11, f30, f24, f23, rne # perform operation
fnmadd.h f11, f30, f24, f23, rtz # perform operation
fnmadd.h f11, f30, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f30, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f30, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f30, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f30, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f30, f24, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f29, 0(x2) # load 0x00000200 from memory into f29
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f22, 0(x2) # load 0x00007fff from memory into f22
la x2, scratch
li x3, 0x3aacebe9 # load x3 with value 0x3aacebe9
sw x3, 0(x2) # store 0x3aacebe9 in memory
flh f23, 0(x2) # load 0x3aacebe9 from memory into f23
fnmadd.h f14, f29, f22, f23, dyn # perform operation
fnmadd.h f14, f29, f22, f23, rdn # perform operation
fnmadd.h f14, f29, f22, f23, rmm # perform operation
fnmadd.h f14, f29, f22, f23, rne # perform operation
fnmadd.h f14, f29, f22, f23, rtz # perform operation
fnmadd.h f14, f29, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f29, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f29, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f29, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f29, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f29, f22, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f3, 0(x2) # load 0x00000200 from memory into f3
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f20, 0(x2) # load 0x0000fe00 from memory into f20
la x2, scratch
li x3, 0x0328c516 # load x3 with value 0x0328c516
sw x3, 0(x2) # store 0x0328c516 in memory
flh f29, 0(x2) # load 0x0328c516 from memory into f29
fnmadd.h f19, f3, f20, f29, dyn # perform operation
fnmadd.h f19, f3, f20, f29, rdn # perform operation
fnmadd.h f19, f3, f20, f29, rmm # perform operation
fnmadd.h f19, f3, f20, f29, rne # perform operation
fnmadd.h f19, f3, f20, f29, rtz # perform operation
fnmadd.h f19, f3, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f3, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f3, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f3, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f3, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f3, f20, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f26, 0(x2) # load 0x00000200 from memory into f26
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f5, 0(x2) # load 0x00007c01 from memory into f5
la x2, scratch
li x3, 0xf10bba15 # load x3 with value 0xf10bba15
sw x3, 0(x2) # store 0xf10bba15 in memory
flh f20, 0(x2) # load 0xf10bba15 from memory into f20
fnmadd.h f6, f26, f5, f20, dyn # perform operation
fnmadd.h f6, f26, f5, f20, rdn # perform operation
fnmadd.h f6, f26, f5, f20, rmm # perform operation
fnmadd.h f6, f26, f5, f20, rne # perform operation
fnmadd.h f6, f26, f5, f20, rtz # perform operation
fnmadd.h f6, f26, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f26, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f26, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f26, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f26, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f26, f5, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f11, 0(x2) # load 0x00000200 from memory into f11
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f15, 0(x2) # load 0x00007dff from memory into f15
la x2, scratch
li x3, 0x4b54ee27 # load x3 with value 0x4b54ee27
sw x3, 0(x2) # store 0x4b54ee27 in memory
flh f30, 0(x2) # load 0x4b54ee27 from memory into f30
fnmadd.h f29, f11, f15, f30, dyn # perform operation
fnmadd.h f29, f11, f15, f30, rdn # perform operation
fnmadd.h f29, f11, f15, f30, rmm # perform operation
fnmadd.h f29, f11, f15, f30, rne # perform operation
fnmadd.h f29, f11, f15, f30, rtz # perform operation
fnmadd.h f29, f11, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f11, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f11, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f11, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f11, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f11, f15, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f3, 0(x2) # load 0x00000200 from memory into f3
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f28, 0(x2) # load 0x0000fc01 from memory into f28
la x2, scratch
li x3, 0x85d04587 # load x3 with value 0x85d04587
sw x3, 0(x2) # store 0x85d04587 in memory
flh f29, 0(x2) # load 0x85d04587 from memory into f29
fnmadd.h f14, f3, f28, f29, dyn # perform operation
fnmadd.h f14, f3, f28, f29, rdn # perform operation
fnmadd.h f14, f3, f28, f29, rmm # perform operation
fnmadd.h f14, f3, f28, f29, rne # perform operation
fnmadd.h f14, f3, f28, f29, rtz # perform operation
fnmadd.h f14, f3, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f3, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f3, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f3, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f3, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f3, f28, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f1, 0(x2) # load 0x00000200 from memory into f1
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f11, 0(x2) # load 0x000058b4 from memory into f11
la x2, scratch
li x3, 0xeae39aec # load x3 with value 0xeae39aec
sw x3, 0(x2) # store 0xeae39aec in memory
flh f3, 0(x2) # load 0xeae39aec from memory into f3
fnmadd.h f30, f1, f11, f3, dyn # perform operation
fnmadd.h f30, f1, f11, f3, rdn # perform operation
fnmadd.h f30, f1, f11, f3, rmm # perform operation
fnmadd.h f30, f1, f11, f3, rne # perform operation
fnmadd.h f30, f1, f11, f3, rtz # perform operation
fnmadd.h f30, f1, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f1, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f1, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f1, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f1, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f1, f11, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f29, 0(x2) # load 0x00000200 from memory into f29
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
la x2, scratch
li x3, 0xf7b24693 # load x3 with value 0xf7b24693
sw x3, 0(x2) # store 0xf7b24693 in memory
flh f15, 0(x2) # load 0xf7b24693 from memory into f15
fnmadd.h f14, f29, f16, f15, dyn # perform operation
fnmadd.h f14, f29, f16, f15, rdn # perform operation
fnmadd.h f14, f29, f16, f15, rmm # perform operation
fnmadd.h f14, f29, f16, f15, rne # perform operation
fnmadd.h f14, f29, f16, f15, rtz # perform operation
fnmadd.h f14, f29, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f29, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f29, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f29, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f29, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f29, f16, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f3, 0(x2) # load 0x00008200 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x71353ca7 # load x3 with value 0x71353ca7
sw x3, 0(x2) # store 0x71353ca7 in memory
flh f14, 0(x2) # load 0x71353ca7 from memory into f14
fnmadd.h f7, f3, f11, f14, dyn # perform operation
fnmadd.h f7, f3, f11, f14, rdn # perform operation
fnmadd.h f7, f3, f11, f14, rmm # perform operation
fnmadd.h f7, f3, f11, f14, rne # perform operation
fnmadd.h f7, f3, f11, f14, rtz # perform operation
fnmadd.h f7, f3, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f3, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f3, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f3, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f3, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f3, f11, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f15, 0(x2) # load 0x00008000 from memory into f15
la x2, scratch
li x3, 0x7a64ebad # load x3 with value 0x7a64ebad
sw x3, 0(x2) # store 0x7a64ebad in memory
flh f27, 0(x2) # load 0x7a64ebad from memory into f27
fnmadd.h f19, f6, f15, f27, dyn # perform operation
fnmadd.h f19, f6, f15, f27, rdn # perform operation
fnmadd.h f19, f6, f15, f27, rmm # perform operation
fnmadd.h f19, f6, f15, f27, rne # perform operation
fnmadd.h f19, f6, f15, f27, rtz # perform operation
fnmadd.h f19, f6, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f6, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f6, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f6, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f6, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f6, f15, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f24, 0(x2) # load 0x00008200 from memory into f24
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f11, 0(x2) # load 0x00003c00 from memory into f11
la x2, scratch
li x3, 0x1cfa4af6 # load x3 with value 0x1cfa4af6
sw x3, 0(x2) # store 0x1cfa4af6 in memory
flh f1, 0(x2) # load 0x1cfa4af6 from memory into f1
fnmadd.h f22, f24, f11, f1, dyn # perform operation
fnmadd.h f22, f24, f11, f1, rdn # perform operation
fnmadd.h f22, f24, f11, f1, rmm # perform operation
fnmadd.h f22, f24, f11, f1, rne # perform operation
fnmadd.h f22, f24, f11, f1, rtz # perform operation
fnmadd.h f22, f24, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f24, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f24, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f24, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f24, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f24, f11, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f18, 0(x2) # load 0x00008200 from memory into f18
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f22, 0(x2) # load 0x0000bc00 from memory into f22
la x2, scratch
li x3, 0xc167ed84 # load x3 with value 0xc167ed84
sw x3, 0(x2) # store 0xc167ed84 in memory
flh f8, 0(x2) # load 0xc167ed84 from memory into f8
fnmadd.h f5, f18, f22, f8, dyn # perform operation
fnmadd.h f5, f18, f22, f8, rdn # perform operation
fnmadd.h f5, f18, f22, f8, rmm # perform operation
fnmadd.h f5, f18, f22, f8, rne # perform operation
fnmadd.h f5, f18, f22, f8, rtz # perform operation
fnmadd.h f5, f18, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f18, f22, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f23, 0(x2) # load 0x00008200 from memory into f23
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f30, 0(x2) # load 0x00003e00 from memory into f30
la x2, scratch
li x3, 0x74ae6c06 # load x3 with value 0x74ae6c06
sw x3, 0(x2) # store 0x74ae6c06 in memory
flh f16, 0(x2) # load 0x74ae6c06 from memory into f16
fnmadd.h f8, f23, f30, f16, dyn # perform operation
fnmadd.h f8, f23, f30, f16, rdn # perform operation
fnmadd.h f8, f23, f30, f16, rmm # perform operation
fnmadd.h f8, f23, f30, f16, rne # perform operation
fnmadd.h f8, f23, f30, f16, rtz # perform operation
fnmadd.h f8, f23, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f23, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f23, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f23, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f23, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f23, f30, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f15, 0(x2) # load 0x00008200 from memory into f15
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
la x2, scratch
li x3, 0x727950d1 # load x3 with value 0x727950d1
sw x3, 0(x2) # store 0x727950d1 in memory
flh f21, 0(x2) # load 0x727950d1 from memory into f21
fnmadd.h f29, f15, f23, f21, dyn # perform operation
fnmadd.h f29, f15, f23, f21, rdn # perform operation
fnmadd.h f29, f15, f23, f21, rmm # perform operation
fnmadd.h f29, f15, f23, f21, rne # perform operation
fnmadd.h f29, f15, f23, f21, rtz # perform operation
fnmadd.h f29, f15, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f15, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f15, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f15, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f15, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f15, f23, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f13, 0(x2) # load 0x00008200 from memory into f13
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f1, 0(x2) # load 0x00004000 from memory into f1
la x2, scratch
li x3, 0x9152e803 # load x3 with value 0x9152e803
sw x3, 0(x2) # store 0x9152e803 in memory
flh f6, 0(x2) # load 0x9152e803 from memory into f6
fnmadd.h f20, f13, f1, f6, dyn # perform operation
fnmadd.h f20, f13, f1, f6, rdn # perform operation
fnmadd.h f20, f13, f1, f6, rmm # perform operation
fnmadd.h f20, f13, f1, f6, rne # perform operation
fnmadd.h f20, f13, f1, f6, rtz # perform operation
fnmadd.h f20, f13, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f13, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f13, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f13, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f13, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f13, f1, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f28, 0(x2) # load 0x00008200 from memory into f28
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f14, 0(x2) # load 0x0000c000 from memory into f14
la x2, scratch
li x3, 0x0fcec218 # load x3 with value 0x0fcec218
sw x3, 0(x2) # store 0x0fcec218 in memory
flh f23, 0(x2) # load 0x0fcec218 from memory into f23
fnmadd.h f22, f28, f14, f23, dyn # perform operation
fnmadd.h f22, f28, f14, f23, rdn # perform operation
fnmadd.h f22, f28, f14, f23, rmm # perform operation
fnmadd.h f22, f28, f14, f23, rne # perform operation
fnmadd.h f22, f28, f14, f23, rtz # perform operation
fnmadd.h f22, f28, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f28, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f28, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f28, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f28, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f28, f14, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f2, 0(x2) # load 0x00008200 from memory into f2
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f6, 0(x2) # load 0x00000400 from memory into f6
la x2, scratch
li x3, 0x7bde6bf6 # load x3 with value 0x7bde6bf6
sw x3, 0(x2) # store 0x7bde6bf6 in memory
flh f9, 0(x2) # load 0x7bde6bf6 from memory into f9
fnmadd.h f27, f2, f6, f9, dyn # perform operation
fnmadd.h f27, f2, f6, f9, rdn # perform operation
fnmadd.h f27, f2, f6, f9, rmm # perform operation
fnmadd.h f27, f2, f6, f9, rne # perform operation
fnmadd.h f27, f2, f6, f9, rtz # perform operation
fnmadd.h f27, f2, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f2, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f2, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f2, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f2, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f2, f6, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f8, 0(x2) # load 0x00008200 from memory into f8
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f31, 0(x2) # load 0x00008400 from memory into f31
la x2, scratch
li x3, 0xa452172e # load x3 with value 0xa452172e
sw x3, 0(x2) # store 0xa452172e in memory
flh f24, 0(x2) # load 0xa452172e from memory into f24
fnmadd.h f10, f8, f31, f24, dyn # perform operation
fnmadd.h f10, f8, f31, f24, rdn # perform operation
fnmadd.h f10, f8, f31, f24, rmm # perform operation
fnmadd.h f10, f8, f31, f24, rne # perform operation
fnmadd.h f10, f8, f31, f24, rtz # perform operation
fnmadd.h f10, f8, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f8, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f8, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f8, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f8, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f8, f31, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f26, 0(x2) # load 0x00008200 from memory into f26
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f25, 0(x2) # load 0x00007bff from memory into f25
la x2, scratch
li x3, 0xb6f282a9 # load x3 with value 0xb6f282a9
sw x3, 0(x2) # store 0xb6f282a9 in memory
flh f9, 0(x2) # load 0xb6f282a9 from memory into f9
fnmadd.h f3, f26, f25, f9, dyn # perform operation
fnmadd.h f3, f26, f25, f9, rdn # perform operation
fnmadd.h f3, f26, f25, f9, rmm # perform operation
fnmadd.h f3, f26, f25, f9, rne # perform operation
fnmadd.h f3, f26, f25, f9, rtz # perform operation
fnmadd.h f3, f26, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f26, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f26, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f26, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f26, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f26, f25, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f31, 0(x2) # load 0x00008200 from memory into f31
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f3, 0(x2) # load 0x0000fbff from memory into f3
la x2, scratch
li x3, 0x16b9f375 # load x3 with value 0x16b9f375
sw x3, 0(x2) # store 0x16b9f375 in memory
flh f8, 0(x2) # load 0x16b9f375 from memory into f8
fnmadd.h f1, f31, f3, f8, dyn # perform operation
fnmadd.h f1, f31, f3, f8, rdn # perform operation
fnmadd.h f1, f31, f3, f8, rmm # perform operation
fnmadd.h f1, f31, f3, f8, rne # perform operation
fnmadd.h f1, f31, f3, f8, rtz # perform operation
fnmadd.h f1, f31, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f31, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f31, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f31, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f31, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f31, f3, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f3, 0(x2) # load 0x00008200 from memory into f3
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f16, 0(x2) # load 0x000003ff from memory into f16
la x2, scratch
li x3, 0xef828fdb # load x3 with value 0xef828fdb
sw x3, 0(x2) # store 0xef828fdb in memory
flh f20, 0(x2) # load 0xef828fdb from memory into f20
fnmadd.h f25, f3, f16, f20, dyn # perform operation
fnmadd.h f25, f3, f16, f20, rdn # perform operation
fnmadd.h f25, f3, f16, f20, rmm # perform operation
fnmadd.h f25, f3, f16, f20, rne # perform operation
fnmadd.h f25, f3, f16, f20, rtz # perform operation
fnmadd.h f25, f3, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f3, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f3, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f3, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f3, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f3, f16, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
la x2, scratch
li x3, 0xdc7871a9 # load x3 with value 0xdc7871a9
sw x3, 0(x2) # store 0xdc7871a9 in memory
flh f17, 0(x2) # load 0xdc7871a9 from memory into f17
fnmadd.h f28, f6, f18, f17, dyn # perform operation
fnmadd.h f28, f6, f18, f17, rdn # perform operation
fnmadd.h f28, f6, f18, f17, rmm # perform operation
fnmadd.h f28, f6, f18, f17, rne # perform operation
fnmadd.h f28, f6, f18, f17, rtz # perform operation
fnmadd.h f28, f6, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f6, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f6, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f6, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f6, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f6, f18, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f9, 0(x2) # load 0x00008200 from memory into f9
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f18, 0(x2) # load 0x00000200 from memory into f18
la x2, scratch
li x3, 0x6e808daa # load x3 with value 0x6e808daa
sw x3, 0(x2) # store 0x6e808daa in memory
flh f5, 0(x2) # load 0x6e808daa from memory into f5
fnmadd.h f28, f9, f18, f5, dyn # perform operation
fnmadd.h f28, f9, f18, f5, rdn # perform operation
fnmadd.h f28, f9, f18, f5, rmm # perform operation
fnmadd.h f28, f9, f18, f5, rne # perform operation
fnmadd.h f28, f9, f18, f5, rtz # perform operation
fnmadd.h f28, f9, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f9, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f9, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f9, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f9, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f9, f18, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f1, 0(x2) # load 0x00008200 from memory into f1
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f22, 0(x2) # load 0x00008200 from memory into f22
la x2, scratch
li x3, 0x5de942a3 # load x3 with value 0x5de942a3
sw x3, 0(x2) # store 0x5de942a3 in memory
flh f28, 0(x2) # load 0x5de942a3 from memory into f28
fnmadd.h f16, f1, f22, f28, dyn # perform operation
fnmadd.h f16, f1, f22, f28, rdn # perform operation
fnmadd.h f16, f1, f22, f28, rmm # perform operation
fnmadd.h f16, f1, f22, f28, rne # perform operation
fnmadd.h f16, f1, f22, f28, rtz # perform operation
fnmadd.h f16, f1, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f1, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f1, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f1, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f1, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f1, f22, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x399904b0 # load x3 with value 0x399904b0
sw x3, 0(x2) # store 0x399904b0 in memory
flh f2, 0(x2) # load 0x399904b0 from memory into f2
fnmadd.h f10, f6, f15, f2, dyn # perform operation
fnmadd.h f10, f6, f15, f2, rdn # perform operation
fnmadd.h f10, f6, f15, f2, rmm # perform operation
fnmadd.h f10, f6, f15, f2, rne # perform operation
fnmadd.h f10, f6, f15, f2, rtz # perform operation
fnmadd.h f10, f6, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f6, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f6, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f6, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f6, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f6, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f20, 0(x2) # load 0x00008200 from memory into f20
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f8, 0(x2) # load 0x00008001 from memory into f8
la x2, scratch
li x3, 0x74290de6 # load x3 with value 0x74290de6
sw x3, 0(x2) # store 0x74290de6 in memory
flh f26, 0(x2) # load 0x74290de6 from memory into f26
fnmadd.h f7, f20, f8, f26, dyn # perform operation
fnmadd.h f7, f20, f8, f26, rdn # perform operation
fnmadd.h f7, f20, f8, f26, rmm # perform operation
fnmadd.h f7, f20, f8, f26, rne # perform operation
fnmadd.h f7, f20, f8, f26, rtz # perform operation
fnmadd.h f7, f20, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f20, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f20, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f20, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f20, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f20, f8, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f10, 0(x2) # load 0x00008200 from memory into f10
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
la x2, scratch
li x3, 0xf35d283b # load x3 with value 0xf35d283b
sw x3, 0(x2) # store 0xf35d283b in memory
flh f13, 0(x2) # load 0xf35d283b from memory into f13
fnmadd.h f25, f10, f19, f13, dyn # perform operation
fnmadd.h f25, f10, f19, f13, rdn # perform operation
fnmadd.h f25, f10, f19, f13, rmm # perform operation
fnmadd.h f25, f10, f19, f13, rne # perform operation
fnmadd.h f25, f10, f19, f13, rtz # perform operation
fnmadd.h f25, f10, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f10, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f10, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f10, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f10, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f10, f19, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f15, 0(x2) # load 0x0000fc00 from memory into f15
la x2, scratch
li x3, 0xa83f2780 # load x3 with value 0xa83f2780
sw x3, 0(x2) # store 0xa83f2780 in memory
flh f24, 0(x2) # load 0xa83f2780 from memory into f24
fnmadd.h f23, f6, f15, f24, dyn # perform operation
fnmadd.h f23, f6, f15, f24, rdn # perform operation
fnmadd.h f23, f6, f15, f24, rmm # perform operation
fnmadd.h f23, f6, f15, f24, rne # perform operation
fnmadd.h f23, f6, f15, f24, rtz # perform operation
fnmadd.h f23, f6, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f6, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f6, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f6, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f6, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f6, f15, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f31, 0(x2) # load 0x00007e00 from memory into f31
la x2, scratch
li x3, 0x60b6b9d9 # load x3 with value 0x60b6b9d9
sw x3, 0(x2) # store 0x60b6b9d9 in memory
flh f30, 0(x2) # load 0x60b6b9d9 from memory into f30
fnmadd.h f9, f6, f31, f30, dyn # perform operation
fnmadd.h f9, f6, f31, f30, rdn # perform operation
fnmadd.h f9, f6, f31, f30, rmm # perform operation
fnmadd.h f9, f6, f31, f30, rne # perform operation
fnmadd.h f9, f6, f31, f30, rtz # perform operation
fnmadd.h f9, f6, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f6, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f6, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f6, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f6, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f6, f31, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f11, 0(x2) # load 0x00008200 from memory into f11
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f24, 0(x2) # load 0x00007fff from memory into f24
la x2, scratch
li x3, 0x8eaa0584 # load x3 with value 0x8eaa0584
sw x3, 0(x2) # store 0x8eaa0584 in memory
flh f23, 0(x2) # load 0x8eaa0584 from memory into f23
fnmadd.h f22, f11, f24, f23, dyn # perform operation
fnmadd.h f22, f11, f24, f23, rdn # perform operation
fnmadd.h f22, f11, f24, f23, rmm # perform operation
fnmadd.h f22, f11, f24, f23, rne # perform operation
fnmadd.h f22, f11, f24, f23, rtz # perform operation
fnmadd.h f22, f11, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f11, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f11, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f11, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f11, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f11, f24, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f5, 0(x2) # load 0x00008200 from memory into f5
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f21, 0(x2) # load 0x0000fe00 from memory into f21
la x2, scratch
li x3, 0x779f4187 # load x3 with value 0x779f4187
sw x3, 0(x2) # store 0x779f4187 in memory
flh f22, 0(x2) # load 0x779f4187 from memory into f22
fnmadd.h f3, f5, f21, f22, dyn # perform operation
fnmadd.h f3, f5, f21, f22, rdn # perform operation
fnmadd.h f3, f5, f21, f22, rmm # perform operation
fnmadd.h f3, f5, f21, f22, rne # perform operation
fnmadd.h f3, f5, f21, f22, rtz # perform operation
fnmadd.h f3, f5, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f5, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f5, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f5, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f5, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f5, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f29, 0(x2) # load 0x00007c01 from memory into f29
la x2, scratch
li x3, 0xa43044f5 # load x3 with value 0xa43044f5
sw x3, 0(x2) # store 0xa43044f5 in memory
flh f15, 0(x2) # load 0xa43044f5 from memory into f15
fnmadd.h f18, f17, f29, f15, dyn # perform operation
fnmadd.h f18, f17, f29, f15, rdn # perform operation
fnmadd.h f18, f17, f29, f15, rmm # perform operation
fnmadd.h f18, f17, f29, f15, rne # perform operation
fnmadd.h f18, f17, f29, f15, rtz # perform operation
fnmadd.h f18, f17, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f17, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f17, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f17, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f17, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f17, f29, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f27, 0(x2) # load 0x00008200 from memory into f27
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f25, 0(x2) # load 0x00007dff from memory into f25
la x2, scratch
li x3, 0x773c1986 # load x3 with value 0x773c1986
sw x3, 0(x2) # store 0x773c1986 in memory
flh f16, 0(x2) # load 0x773c1986 from memory into f16
fnmadd.h f21, f27, f25, f16, dyn # perform operation
fnmadd.h f21, f27, f25, f16, rdn # perform operation
fnmadd.h f21, f27, f25, f16, rmm # perform operation
fnmadd.h f21, f27, f25, f16, rne # perform operation
fnmadd.h f21, f27, f25, f16, rtz # perform operation
fnmadd.h f21, f27, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f27, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f27, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f27, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f27, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f27, f25, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f13, 0(x2) # load 0x0000fc01 from memory into f13
la x2, scratch
li x3, 0xb8bfc5ed # load x3 with value 0xb8bfc5ed
sw x3, 0(x2) # store 0xb8bfc5ed in memory
flh f8, 0(x2) # load 0xb8bfc5ed from memory into f8
fnmadd.h f30, f17, f13, f8, dyn # perform operation
fnmadd.h f30, f17, f13, f8, rdn # perform operation
fnmadd.h f30, f17, f13, f8, rmm # perform operation
fnmadd.h f30, f17, f13, f8, rne # perform operation
fnmadd.h f30, f17, f13, f8, rtz # perform operation
fnmadd.h f30, f17, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f17, f13, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f13, 0(x2) # load 0x00008200 from memory into f13
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f31, 0(x2) # load 0x000058b4 from memory into f31
la x2, scratch
li x3, 0x8ebce282 # load x3 with value 0x8ebce282
sw x3, 0(x2) # store 0x8ebce282 in memory
flh f8, 0(x2) # load 0x8ebce282 from memory into f8
fnmadd.h f18, f13, f31, f8, dyn # perform operation
fnmadd.h f18, f13, f31, f8, rdn # perform operation
fnmadd.h f18, f13, f31, f8, rmm # perform operation
fnmadd.h f18, f13, f31, f8, rne # perform operation
fnmadd.h f18, f13, f31, f8, rtz # perform operation
fnmadd.h f18, f13, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f13, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f13, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f13, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f13, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f13, f31, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f20, 0(x2) # load 0x00008200 from memory into f20
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f26, 0(x2) # load 0x0000c93a from memory into f26
la x2, scratch
li x3, 0xf84a3a16 # load x3 with value 0xf84a3a16
sw x3, 0(x2) # store 0xf84a3a16 in memory
flh f15, 0(x2) # load 0xf84a3a16 from memory into f15
fnmadd.h f10, f20, f26, f15, dyn # perform operation
fnmadd.h f10, f20, f26, f15, rdn # perform operation
fnmadd.h f10, f20, f26, f15, rmm # perform operation
fnmadd.h f10, f20, f26, f15, rne # perform operation
fnmadd.h f10, f20, f26, f15, rtz # perform operation
fnmadd.h f10, f20, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f20, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f20, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f20, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f20, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f20, f26, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0x1104de64 # load x3 with value 0x1104de64
sw x3, 0(x2) # store 0x1104de64 in memory
flh f28, 0(x2) # load 0x1104de64 from memory into f28
fnmadd.h f13, f15, f3, f28, dyn # perform operation
fnmadd.h f13, f15, f3, f28, rdn # perform operation
fnmadd.h f13, f15, f3, f28, rmm # perform operation
fnmadd.h f13, f15, f3, f28, rne # perform operation
fnmadd.h f13, f15, f3, f28, rtz # perform operation
fnmadd.h f13, f15, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f15, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f15, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f15, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f15, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f15, f3, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f20, 0(x2) # load 0x00008000 from memory into f20
la x2, scratch
li x3, 0x162c2d8f # load x3 with value 0x162c2d8f
sw x3, 0(x2) # store 0x162c2d8f in memory
flh f3, 0(x2) # load 0x162c2d8f from memory into f3
fnmadd.h f23, f16, f20, f3, dyn # perform operation
fnmadd.h f23, f16, f20, f3, rdn # perform operation
fnmadd.h f23, f16, f20, f3, rmm # perform operation
fnmadd.h f23, f16, f20, f3, rne # perform operation
fnmadd.h f23, f16, f20, f3, rtz # perform operation
fnmadd.h f23, f16, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f16, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f16, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f16, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f16, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f16, f20, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f7, 0(x2) # load 0x00003c00 from memory into f7
la x2, scratch
li x3, 0x612d158b # load x3 with value 0x612d158b
sw x3, 0(x2) # store 0x612d158b in memory
flh f15, 0(x2) # load 0x612d158b from memory into f15
fnmadd.h f26, f10, f7, f15, dyn # perform operation
fnmadd.h f26, f10, f7, f15, rdn # perform operation
fnmadd.h f26, f10, f7, f15, rmm # perform operation
fnmadd.h f26, f10, f7, f15, rne # perform operation
fnmadd.h f26, f10, f7, f15, rtz # perform operation
fnmadd.h f26, f10, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f10, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f10, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f10, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f10, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f10, f7, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f23, 0(x2) # load 0x0000bc00 from memory into f23
la x2, scratch
li x3, 0x96656280 # load x3 with value 0x96656280
sw x3, 0(x2) # store 0x96656280 in memory
flh f18, 0(x2) # load 0x96656280 from memory into f18
fnmadd.h f31, f6, f23, f18, dyn # perform operation
fnmadd.h f31, f6, f23, f18, rdn # perform operation
fnmadd.h f31, f6, f23, f18, rmm # perform operation
fnmadd.h f31, f6, f23, f18, rne # perform operation
fnmadd.h f31, f6, f23, f18, rtz # perform operation
fnmadd.h f31, f6, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f6, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f6, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f6, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f6, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f6, f23, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
la x2, scratch
li x3, 0x52236c5a # load x3 with value 0x52236c5a
sw x3, 0(x2) # store 0x52236c5a in memory
flh f14, 0(x2) # load 0x52236c5a from memory into f14
fnmadd.h f24, f31, f10, f14, dyn # perform operation
fnmadd.h f24, f31, f10, f14, rdn # perform operation
fnmadd.h f24, f31, f10, f14, rmm # perform operation
fnmadd.h f24, f31, f10, f14, rne # perform operation
fnmadd.h f24, f31, f10, f14, rtz # perform operation
fnmadd.h f24, f31, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f31, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f31, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f31, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f31, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f31, f10, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f5, 0(x2) # load 0x0000be00 from memory into f5
la x2, scratch
li x3, 0x6bf3e32c # load x3 with value 0x6bf3e32c
sw x3, 0(x2) # store 0x6bf3e32c in memory
flh f26, 0(x2) # load 0x6bf3e32c from memory into f26
fnmadd.h f7, f25, f5, f26, dyn # perform operation
fnmadd.h f7, f25, f5, f26, rdn # perform operation
fnmadd.h f7, f25, f5, f26, rmm # perform operation
fnmadd.h f7, f25, f5, f26, rne # perform operation
fnmadd.h f7, f25, f5, f26, rtz # perform operation
fnmadd.h f7, f25, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f25, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f25, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f25, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f25, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f25, f5, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f14, 0(x2) # load 0x00004000 from memory into f14
la x2, scratch
li x3, 0xaac68283 # load x3 with value 0xaac68283
sw x3, 0(x2) # store 0xaac68283 in memory
flh f20, 0(x2) # load 0xaac68283 from memory into f20
fnmadd.h f27, f28, f14, f20, dyn # perform operation
fnmadd.h f27, f28, f14, f20, rdn # perform operation
fnmadd.h f27, f28, f14, f20, rmm # perform operation
fnmadd.h f27, f28, f14, f20, rne # perform operation
fnmadd.h f27, f28, f14, f20, rtz # perform operation
fnmadd.h f27, f28, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f28, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f28, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f28, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f28, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f28, f14, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f16, 0(x2) # load 0x0000c000 from memory into f16
la x2, scratch
li x3, 0x9051519d # load x3 with value 0x9051519d
sw x3, 0(x2) # store 0x9051519d in memory
flh f7, 0(x2) # load 0x9051519d from memory into f7
fnmadd.h f23, f25, f16, f7, dyn # perform operation
fnmadd.h f23, f25, f16, f7, rdn # perform operation
fnmadd.h f23, f25, f16, f7, rmm # perform operation
fnmadd.h f23, f25, f16, f7, rne # perform operation
fnmadd.h f23, f25, f16, f7, rtz # perform operation
fnmadd.h f23, f25, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f25, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f25, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f25, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f25, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f25, f16, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f11, 0(x2) # load 0x00000400 from memory into f11
la x2, scratch
li x3, 0x8b74f44f # load x3 with value 0x8b74f44f
sw x3, 0(x2) # store 0x8b74f44f in memory
flh f5, 0(x2) # load 0x8b74f44f from memory into f5
fnmadd.h f9, f7, f11, f5, dyn # perform operation
fnmadd.h f9, f7, f11, f5, rdn # perform operation
fnmadd.h f9, f7, f11, f5, rmm # perform operation
fnmadd.h f9, f7, f11, f5, rne # perform operation
fnmadd.h f9, f7, f11, f5, rtz # perform operation
fnmadd.h f9, f7, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f7, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f7, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f7, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f7, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f7, f11, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f7, 0(x2) # load 0x00008400 from memory into f7
la x2, scratch
li x3, 0xa7abd6e3 # load x3 with value 0xa7abd6e3
sw x3, 0(x2) # store 0xa7abd6e3 in memory
flh f26, 0(x2) # load 0xa7abd6e3 from memory into f26
fnmadd.h f19, f14, f7, f26, dyn # perform operation
fnmadd.h f19, f14, f7, f26, rdn # perform operation
fnmadd.h f19, f14, f7, f26, rmm # perform operation
fnmadd.h f19, f14, f7, f26, rne # perform operation
fnmadd.h f19, f14, f7, f26, rtz # perform operation
fnmadd.h f19, f14, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f14, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f14, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f14, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f14, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f14, f7, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f29, 0(x2) # load 0x00007bff from memory into f29
la x2, scratch
li x3, 0xd4fae6e8 # load x3 with value 0xd4fae6e8
sw x3, 0(x2) # store 0xd4fae6e8 in memory
flh f1, 0(x2) # load 0xd4fae6e8 from memory into f1
fnmadd.h f25, f16, f29, f1, dyn # perform operation
fnmadd.h f25, f16, f29, f1, rdn # perform operation
fnmadd.h f25, f16, f29, f1, rmm # perform operation
fnmadd.h f25, f16, f29, f1, rne # perform operation
fnmadd.h f25, f16, f29, f1, rtz # perform operation
fnmadd.h f25, f16, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f16, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f16, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f16, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f16, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f16, f29, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
la x2, scratch
li x3, 0x76220458 # load x3 with value 0x76220458
sw x3, 0(x2) # store 0x76220458 in memory
flh f25, 0(x2) # load 0x76220458 from memory into f25
fnmadd.h f1, f26, f13, f25, dyn # perform operation
fnmadd.h f1, f26, f13, f25, rdn # perform operation
fnmadd.h f1, f26, f13, f25, rmm # perform operation
fnmadd.h f1, f26, f13, f25, rne # perform operation
fnmadd.h f1, f26, f13, f25, rtz # perform operation
fnmadd.h f1, f26, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f26, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f26, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f26, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f26, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f26, f13, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f3, 0(x2) # load 0x000003ff from memory into f3
la x2, scratch
li x3, 0x8f95296b # load x3 with value 0x8f95296b
sw x3, 0(x2) # store 0x8f95296b in memory
flh f5, 0(x2) # load 0x8f95296b from memory into f5
fnmadd.h f1, f20, f3, f5, dyn # perform operation
fnmadd.h f1, f20, f3, f5, rdn # perform operation
fnmadd.h f1, f20, f3, f5, rmm # perform operation
fnmadd.h f1, f20, f3, f5, rne # perform operation
fnmadd.h f1, f20, f3, f5, rtz # perform operation
fnmadd.h f1, f20, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f20, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f20, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f20, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f20, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f20, f3, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f2, 0(x2) # load 0x000083ff from memory into f2
la x2, scratch
li x3, 0x84fa4b2b # load x3 with value 0x84fa4b2b
sw x3, 0(x2) # store 0x84fa4b2b in memory
flh f31, 0(x2) # load 0x84fa4b2b from memory into f31
fnmadd.h f15, f14, f2, f31, dyn # perform operation
fnmadd.h f15, f14, f2, f31, rdn # perform operation
fnmadd.h f15, f14, f2, f31, rmm # perform operation
fnmadd.h f15, f14, f2, f31, rne # perform operation
fnmadd.h f15, f14, f2, f31, rtz # perform operation
fnmadd.h f15, f14, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f14, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f14, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f14, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f14, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f14, f2, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f26, 0(x2) # load 0x00000200 from memory into f26
la x2, scratch
li x3, 0x4a4e765d # load x3 with value 0x4a4e765d
sw x3, 0(x2) # store 0x4a4e765d in memory
flh f19, 0(x2) # load 0x4a4e765d from memory into f19
fnmadd.h f24, f16, f26, f19, dyn # perform operation
fnmadd.h f24, f16, f26, f19, rdn # perform operation
fnmadd.h f24, f16, f26, f19, rmm # perform operation
fnmadd.h f24, f16, f26, f19, rne # perform operation
fnmadd.h f24, f16, f26, f19, rtz # perform operation
fnmadd.h f24, f16, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f16, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f16, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f16, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f16, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f16, f26, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f11, 0(x2) # load 0x00008200 from memory into f11
la x2, scratch
li x3, 0xb35dd6ed # load x3 with value 0xb35dd6ed
sw x3, 0(x2) # store 0xb35dd6ed in memory
flh f13, 0(x2) # load 0xb35dd6ed from memory into f13
fnmadd.h f14, f22, f11, f13, dyn # perform operation
fnmadd.h f14, f22, f11, f13, rdn # perform operation
fnmadd.h f14, f22, f11, f13, rmm # perform operation
fnmadd.h f14, f22, f11, f13, rne # perform operation
fnmadd.h f14, f22, f11, f13, rtz # perform operation
fnmadd.h f14, f22, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f22, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f22, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f22, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f22, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f22, f11, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x60806365 # load x3 with value 0x60806365
sw x3, 0(x2) # store 0x60806365 in memory
flh f9, 0(x2) # load 0x60806365 from memory into f9
fnmadd.h f7, f27, f11, f9, dyn # perform operation
fnmadd.h f7, f27, f11, f9, rdn # perform operation
fnmadd.h f7, f27, f11, f9, rmm # perform operation
fnmadd.h f7, f27, f11, f9, rne # perform operation
fnmadd.h f7, f27, f11, f9, rtz # perform operation
fnmadd.h f7, f27, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f27, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f27, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f27, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f27, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f27, f11, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f2, 0(x2) # load 0x00000001 from memory into f2
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f9, 0(x2) # load 0x00008001 from memory into f9
la x2, scratch
li x3, 0xbf034c51 # load x3 with value 0xbf034c51
sw x3, 0(x2) # store 0xbf034c51 in memory
flh f15, 0(x2) # load 0xbf034c51 from memory into f15
fnmadd.h f31, f2, f9, f15, dyn # perform operation
fnmadd.h f31, f2, f9, f15, rdn # perform operation
fnmadd.h f31, f2, f9, f15, rmm # perform operation
fnmadd.h f31, f2, f9, f15, rne # perform operation
fnmadd.h f31, f2, f9, f15, rtz # perform operation
fnmadd.h f31, f2, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f2, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f2, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f2, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f2, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f2, f9, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f27, 0(x2) # load 0x00007c00 from memory into f27
la x2, scratch
li x3, 0x7d873c15 # load x3 with value 0x7d873c15
sw x3, 0(x2) # store 0x7d873c15 in memory
flh f22, 0(x2) # load 0x7d873c15 from memory into f22
fnmadd.h f9, f29, f27, f22, dyn # perform operation
fnmadd.h f9, f29, f27, f22, rdn # perform operation
fnmadd.h f9, f29, f27, f22, rmm # perform operation
fnmadd.h f9, f29, f27, f22, rne # perform operation
fnmadd.h f9, f29, f27, f22, rtz # perform operation
fnmadd.h f9, f29, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f29, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f29, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f29, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f29, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f29, f27, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f11, 0(x2) # load 0x0000fc00 from memory into f11
la x2, scratch
li x3, 0xd3f83498 # load x3 with value 0xd3f83498
sw x3, 0(x2) # store 0xd3f83498 in memory
flh f13, 0(x2) # load 0xd3f83498 from memory into f13
fnmadd.h f9, f27, f11, f13, dyn # perform operation
fnmadd.h f9, f27, f11, f13, rdn # perform operation
fnmadd.h f9, f27, f11, f13, rmm # perform operation
fnmadd.h f9, f27, f11, f13, rne # perform operation
fnmadd.h f9, f27, f11, f13, rtz # perform operation
fnmadd.h f9, f27, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f27, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f27, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f27, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f27, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f27, f11, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f22, 0(x2) # load 0x00007e00 from memory into f22
la x2, scratch
li x3, 0xfcd462ab # load x3 with value 0xfcd462ab
sw x3, 0(x2) # store 0xfcd462ab in memory
flh f9, 0(x2) # load 0xfcd462ab from memory into f9
fnmadd.h f27, f26, f22, f9, dyn # perform operation
fnmadd.h f27, f26, f22, f9, rdn # perform operation
fnmadd.h f27, f26, f22, f9, rmm # perform operation
fnmadd.h f27, f26, f22, f9, rne # perform operation
fnmadd.h f27, f26, f22, f9, rtz # perform operation
fnmadd.h f27, f26, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f26, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f26, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f26, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f26, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f26, f22, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f30, 0(x2) # load 0x00007fff from memory into f30
la x2, scratch
li x3, 0xf711c132 # load x3 with value 0xf711c132
sw x3, 0(x2) # store 0xf711c132 in memory
flh f26, 0(x2) # load 0xf711c132 from memory into f26
fnmadd.h f1, f8, f30, f26, dyn # perform operation
fnmadd.h f1, f8, f30, f26, rdn # perform operation
fnmadd.h f1, f8, f30, f26, rmm # perform operation
fnmadd.h f1, f8, f30, f26, rne # perform operation
fnmadd.h f1, f8, f30, f26, rtz # perform operation
fnmadd.h f1, f8, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f8, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f8, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f8, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f8, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f8, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f5, 0(x2) # load 0x0000fe00 from memory into f5
la x2, scratch
li x3, 0xb0216c0d # load x3 with value 0xb0216c0d
sw x3, 0(x2) # store 0xb0216c0d in memory
flh f15, 0(x2) # load 0xb0216c0d from memory into f15
fnmadd.h f2, f11, f5, f15, dyn # perform operation
fnmadd.h f2, f11, f5, f15, rdn # perform operation
fnmadd.h f2, f11, f5, f15, rmm # perform operation
fnmadd.h f2, f11, f5, f15, rne # perform operation
fnmadd.h f2, f11, f5, f15, rtz # perform operation
fnmadd.h f2, f11, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f11, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f11, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f11, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f11, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f11, f5, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f3, 0(x2) # load 0x00007c01 from memory into f3
la x2, scratch
li x3, 0x696d7431 # load x3 with value 0x696d7431
sw x3, 0(x2) # store 0x696d7431 in memory
flh f15, 0(x2) # load 0x696d7431 from memory into f15
fnmadd.h f17, f9, f3, f15, dyn # perform operation
fnmadd.h f17, f9, f3, f15, rdn # perform operation
fnmadd.h f17, f9, f3, f15, rmm # perform operation
fnmadd.h f17, f9, f3, f15, rne # perform operation
fnmadd.h f17, f9, f3, f15, rtz # perform operation
fnmadd.h f17, f9, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f9, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f9, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f9, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f9, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f9, f3, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f27, 0(x2) # load 0x00007dff from memory into f27
la x2, scratch
li x3, 0x3a83676a # load x3 with value 0x3a83676a
sw x3, 0(x2) # store 0x3a83676a in memory
flh f18, 0(x2) # load 0x3a83676a from memory into f18
fnmadd.h f1, f13, f27, f18, dyn # perform operation
fnmadd.h f1, f13, f27, f18, rdn # perform operation
fnmadd.h f1, f13, f27, f18, rmm # perform operation
fnmadd.h f1, f13, f27, f18, rne # perform operation
fnmadd.h f1, f13, f27, f18, rtz # perform operation
fnmadd.h f1, f13, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f13, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f13, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f13, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f13, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f13, f27, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f6, 0(x2) # load 0x0000fc01 from memory into f6
la x2, scratch
li x3, 0xc61e4c8a # load x3 with value 0xc61e4c8a
sw x3, 0(x2) # store 0xc61e4c8a in memory
flh f8, 0(x2) # load 0xc61e4c8a from memory into f8
fnmadd.h f16, f30, f6, f8, dyn # perform operation
fnmadd.h f16, f30, f6, f8, rdn # perform operation
fnmadd.h f16, f30, f6, f8, rmm # perform operation
fnmadd.h f16, f30, f6, f8, rne # perform operation
fnmadd.h f16, f30, f6, f8, rtz # perform operation
fnmadd.h f16, f30, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f30, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f30, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f30, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f30, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f30, f6, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
la x2, scratch
li x3, 0x77a78bda # load x3 with value 0x77a78bda
sw x3, 0(x2) # store 0x77a78bda in memory
flh f21, 0(x2) # load 0x77a78bda from memory into f21
fnmadd.h f19, f20, f29, f21, dyn # perform operation
fnmadd.h f19, f20, f29, f21, rdn # perform operation
fnmadd.h f19, f20, f29, f21, rmm # perform operation
fnmadd.h f19, f20, f29, f21, rne # perform operation
fnmadd.h f19, f20, f29, f21, rtz # perform operation
fnmadd.h f19, f20, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f20, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f20, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f20, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f20, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f20, f29, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f7, 0(x2) # load 0x0000c93a from memory into f7
la x2, scratch
li x3, 0xd83c30f1 # load x3 with value 0xd83c30f1
sw x3, 0(x2) # store 0xd83c30f1 in memory
flh f6, 0(x2) # load 0xd83c30f1 from memory into f6
fnmadd.h f28, f25, f7, f6, dyn # perform operation
fnmadd.h f28, f25, f7, f6, rdn # perform operation
fnmadd.h f28, f25, f7, f6, rmm # perform operation
fnmadd.h f28, f25, f7, f6, rne # perform operation
fnmadd.h f28, f25, f7, f6, rtz # perform operation
fnmadd.h f28, f25, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f25, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f25, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f25, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f25, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f25, f7, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f8, 0(x2) # load 0x00008001 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0x0630f786 # load x3 with value 0x0630f786
sw x3, 0(x2) # store 0x0630f786 in memory
flh f17, 0(x2) # load 0x0630f786 from memory into f17
fnmadd.h f20, f8, f23, f17, dyn # perform operation
fnmadd.h f20, f8, f23, f17, rdn # perform operation
fnmadd.h f20, f8, f23, f17, rmm # perform operation
fnmadd.h f20, f8, f23, f17, rne # perform operation
fnmadd.h f20, f8, f23, f17, rtz # perform operation
fnmadd.h f20, f8, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f8, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f8, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f8, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f8, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f8, f23, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f16, 0(x2) # load 0x00008001 from memory into f16
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f3, 0(x2) # load 0x00008000 from memory into f3
la x2, scratch
li x3, 0xeb6cb4b4 # load x3 with value 0xeb6cb4b4
sw x3, 0(x2) # store 0xeb6cb4b4 in memory
flh f1, 0(x2) # load 0xeb6cb4b4 from memory into f1
fnmadd.h f28, f16, f3, f1, dyn # perform operation
fnmadd.h f28, f16, f3, f1, rdn # perform operation
fnmadd.h f28, f16, f3, f1, rmm # perform operation
fnmadd.h f28, f16, f3, f1, rne # perform operation
fnmadd.h f28, f16, f3, f1, rtz # perform operation
fnmadd.h f28, f16, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f16, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f16, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f16, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f16, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f16, f3, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f2, 0(x2) # load 0x00008001 from memory into f2
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f10, 0(x2) # load 0x00003c00 from memory into f10
la x2, scratch
li x3, 0xc313df41 # load x3 with value 0xc313df41
sw x3, 0(x2) # store 0xc313df41 in memory
flh f24, 0(x2) # load 0xc313df41 from memory into f24
fnmadd.h f1, f2, f10, f24, dyn # perform operation
fnmadd.h f1, f2, f10, f24, rdn # perform operation
fnmadd.h f1, f2, f10, f24, rmm # perform operation
fnmadd.h f1, f2, f10, f24, rne # perform operation
fnmadd.h f1, f2, f10, f24, rtz # perform operation
fnmadd.h f1, f2, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f2, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f2, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f2, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f2, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f2, f10, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f17, 0(x2) # load 0x0000bc00 from memory into f17
la x2, scratch
li x3, 0xfacb5dc0 # load x3 with value 0xfacb5dc0
sw x3, 0(x2) # store 0xfacb5dc0 in memory
flh f1, 0(x2) # load 0xfacb5dc0 from memory into f1
fnmadd.h f11, f14, f17, f1, dyn # perform operation
fnmadd.h f11, f14, f17, f1, rdn # perform operation
fnmadd.h f11, f14, f17, f1, rmm # perform operation
fnmadd.h f11, f14, f17, f1, rne # perform operation
fnmadd.h f11, f14, f17, f1, rtz # perform operation
fnmadd.h f11, f14, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f14, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f14, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f14, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f14, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f14, f17, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f12, 0(x2) # load 0x00008001 from memory into f12
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f1, 0(x2) # load 0x00003e00 from memory into f1
la x2, scratch
li x3, 0xa4c6f36c # load x3 with value 0xa4c6f36c
sw x3, 0(x2) # store 0xa4c6f36c in memory
flh f20, 0(x2) # load 0xa4c6f36c from memory into f20
fnmadd.h f16, f12, f1, f20, dyn # perform operation
fnmadd.h f16, f12, f1, f20, rdn # perform operation
fnmadd.h f16, f12, f1, f20, rmm # perform operation
fnmadd.h f16, f12, f1, f20, rne # perform operation
fnmadd.h f16, f12, f1, f20, rtz # perform operation
fnmadd.h f16, f12, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f12, f1, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f27, 0(x2) # load 0x0000be00 from memory into f27
la x2, scratch
li x3, 0x31706704 # load x3 with value 0x31706704
sw x3, 0(x2) # store 0x31706704 in memory
flh f24, 0(x2) # load 0x31706704 from memory into f24
fnmadd.h f29, f22, f27, f24, dyn # perform operation
fnmadd.h f29, f22, f27, f24, rdn # perform operation
fnmadd.h f29, f22, f27, f24, rmm # perform operation
fnmadd.h f29, f22, f27, f24, rne # perform operation
fnmadd.h f29, f22, f27, f24, rtz # perform operation
fnmadd.h f29, f22, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f22, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f22, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f22, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f22, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f22, f27, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f30, 0(x2) # load 0x00008001 from memory into f30
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f5, 0(x2) # load 0x00004000 from memory into f5
la x2, scratch
li x3, 0x833335ef # load x3 with value 0x833335ef
sw x3, 0(x2) # store 0x833335ef in memory
flh f11, 0(x2) # load 0x833335ef from memory into f11
fnmadd.h f17, f30, f5, f11, dyn # perform operation
fnmadd.h f17, f30, f5, f11, rdn # perform operation
fnmadd.h f17, f30, f5, f11, rmm # perform operation
fnmadd.h f17, f30, f5, f11, rne # perform operation
fnmadd.h f17, f30, f5, f11, rtz # perform operation
fnmadd.h f17, f30, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f30, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f30, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f30, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f30, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f30, f5, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f26, 0(x2) # load 0x00008001 from memory into f26
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f29, 0(x2) # load 0x0000c000 from memory into f29
la x2, scratch
li x3, 0x11114b78 # load x3 with value 0x11114b78
sw x3, 0(x2) # store 0x11114b78 in memory
flh f7, 0(x2) # load 0x11114b78 from memory into f7
fnmadd.h f17, f26, f29, f7, dyn # perform operation
fnmadd.h f17, f26, f29, f7, rdn # perform operation
fnmadd.h f17, f26, f29, f7, rmm # perform operation
fnmadd.h f17, f26, f29, f7, rne # perform operation
fnmadd.h f17, f26, f29, f7, rtz # perform operation
fnmadd.h f17, f26, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f26, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f26, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f26, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f26, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f26, f29, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f3, 0(x2) # load 0x00008001 from memory into f3
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f31, 0(x2) # load 0x00000400 from memory into f31
la x2, scratch
li x3, 0x82c80c12 # load x3 with value 0x82c80c12
sw x3, 0(x2) # store 0x82c80c12 in memory
flh f27, 0(x2) # load 0x82c80c12 from memory into f27
fnmadd.h f7, f3, f31, f27, dyn # perform operation
fnmadd.h f7, f3, f31, f27, rdn # perform operation
fnmadd.h f7, f3, f31, f27, rmm # perform operation
fnmadd.h f7, f3, f31, f27, rne # perform operation
fnmadd.h f7, f3, f31, f27, rtz # perform operation
fnmadd.h f7, f3, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f3, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f3, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f3, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f3, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f3, f31, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f17, 0(x2) # load 0x00008001 from memory into f17
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f10, 0(x2) # load 0x00008400 from memory into f10
la x2, scratch
li x3, 0xecaaecf6 # load x3 with value 0xecaaecf6
sw x3, 0(x2) # store 0xecaaecf6 in memory
flh f23, 0(x2) # load 0xecaaecf6 from memory into f23
fnmadd.h f9, f17, f10, f23, dyn # perform operation
fnmadd.h f9, f17, f10, f23, rdn # perform operation
fnmadd.h f9, f17, f10, f23, rmm # perform operation
fnmadd.h f9, f17, f10, f23, rne # perform operation
fnmadd.h f9, f17, f10, f23, rtz # perform operation
fnmadd.h f9, f17, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f17, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f17, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f17, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f17, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f17, f10, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f15, 0(x2) # load 0x00008001 from memory into f15
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f20, 0(x2) # load 0x00007bff from memory into f20
la x2, scratch
li x3, 0x50f93891 # load x3 with value 0x50f93891
sw x3, 0(x2) # store 0x50f93891 in memory
flh f27, 0(x2) # load 0x50f93891 from memory into f27
fnmadd.h f3, f15, f20, f27, dyn # perform operation
fnmadd.h f3, f15, f20, f27, rdn # perform operation
fnmadd.h f3, f15, f20, f27, rmm # perform operation
fnmadd.h f3, f15, f20, f27, rne # perform operation
fnmadd.h f3, f15, f20, f27, rtz # perform operation
fnmadd.h f3, f15, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f15, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f15, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f15, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f15, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f15, f20, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f1, 0(x2) # load 0x0000fbff from memory into f1
la x2, scratch
li x3, 0x08d7c897 # load x3 with value 0x08d7c897
sw x3, 0(x2) # store 0x08d7c897 in memory
flh f7, 0(x2) # load 0x08d7c897 from memory into f7
fnmadd.h f17, f14, f1, f7, dyn # perform operation
fnmadd.h f17, f14, f1, f7, rdn # perform operation
fnmadd.h f17, f14, f1, f7, rmm # perform operation
fnmadd.h f17, f14, f1, f7, rne # perform operation
fnmadd.h f17, f14, f1, f7, rtz # perform operation
fnmadd.h f17, f14, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f14, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f14, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f14, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f14, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f14, f1, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f21, 0(x2) # load 0x00008001 from memory into f21
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f30, 0(x2) # load 0x000003ff from memory into f30
la x2, scratch
li x3, 0x7b9e9d45 # load x3 with value 0x7b9e9d45
sw x3, 0(x2) # store 0x7b9e9d45 in memory
flh f1, 0(x2) # load 0x7b9e9d45 from memory into f1
fnmadd.h f13, f21, f30, f1, dyn # perform operation
fnmadd.h f13, f21, f30, f1, rdn # perform operation
fnmadd.h f13, f21, f30, f1, rmm # perform operation
fnmadd.h f13, f21, f30, f1, rne # perform operation
fnmadd.h f13, f21, f30, f1, rtz # perform operation
fnmadd.h f13, f21, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f21, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f21, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f21, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f21, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f21, f30, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f6, 0(x2) # load 0x00008001 from memory into f6
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f25, 0(x2) # load 0x000083ff from memory into f25
la x2, scratch
li x3, 0x3f590e64 # load x3 with value 0x3f590e64
sw x3, 0(x2) # store 0x3f590e64 in memory
flh f21, 0(x2) # load 0x3f590e64 from memory into f21
fnmadd.h f11, f6, f25, f21, dyn # perform operation
fnmadd.h f11, f6, f25, f21, rdn # perform operation
fnmadd.h f11, f6, f25, f21, rmm # perform operation
fnmadd.h f11, f6, f25, f21, rne # perform operation
fnmadd.h f11, f6, f25, f21, rtz # perform operation
fnmadd.h f11, f6, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f6, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f6, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f6, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f6, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f6, f25, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f2, 0(x2) # load 0x00008001 from memory into f2
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
la x2, scratch
li x3, 0x1e08a3d8 # load x3 with value 0x1e08a3d8
sw x3, 0(x2) # store 0x1e08a3d8 in memory
flh f12, 0(x2) # load 0x1e08a3d8 from memory into f12
fnmadd.h f31, f2, f6, f12, dyn # perform operation
fnmadd.h f31, f2, f6, f12, rdn # perform operation
fnmadd.h f31, f2, f6, f12, rmm # perform operation
fnmadd.h f31, f2, f6, f12, rne # perform operation
fnmadd.h f31, f2, f6, f12, rtz # perform operation
fnmadd.h f31, f2, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f2, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f2, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f2, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f2, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f2, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f15, 0(x2) # load 0x00008001 from memory into f15
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f12, 0(x2) # load 0x00008200 from memory into f12
la x2, scratch
li x3, 0x4dbd4c0f # load x3 with value 0x4dbd4c0f
sw x3, 0(x2) # store 0x4dbd4c0f in memory
flh f8, 0(x2) # load 0x4dbd4c0f from memory into f8
fnmadd.h f16, f15, f12, f8, dyn # perform operation
fnmadd.h f16, f15, f12, f8, rdn # perform operation
fnmadd.h f16, f15, f12, f8, rmm # perform operation
fnmadd.h f16, f15, f12, f8, rne # perform operation
fnmadd.h f16, f15, f12, f8, rtz # perform operation
fnmadd.h f16, f15, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f15, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f15, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f15, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f15, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f15, f12, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0xfe7ef5a6 # load x3 with value 0xfe7ef5a6
sw x3, 0(x2) # store 0xfe7ef5a6 in memory
flh f19, 0(x2) # load 0xfe7ef5a6 from memory into f19
fnmadd.h f17, f7, f31, f19, dyn # perform operation
fnmadd.h f17, f7, f31, f19, rdn # perform operation
fnmadd.h f17, f7, f31, f19, rmm # perform operation
fnmadd.h f17, f7, f31, f19, rne # perform operation
fnmadd.h f17, f7, f31, f19, rtz # perform operation
fnmadd.h f17, f7, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f7, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f7, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f7, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f7, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f7, f31, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f1, 0(x2) # load 0x00008001 from memory into f1
la x2, scratch
li x3, 0xa1ad26bd # load x3 with value 0xa1ad26bd
sw x3, 0(x2) # store 0xa1ad26bd in memory
flh f9, 0(x2) # load 0xa1ad26bd from memory into f9
fnmadd.h f30, f14, f1, f9, dyn # perform operation
fnmadd.h f30, f14, f1, f9, rdn # perform operation
fnmadd.h f30, f14, f1, f9, rmm # perform operation
fnmadd.h f30, f14, f1, f9, rne # perform operation
fnmadd.h f30, f14, f1, f9, rtz # perform operation
fnmadd.h f30, f14, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f14, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f14, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f14, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f14, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f14, f1, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f1, 0(x2) # load 0x00008001 from memory into f1
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f8, 0(x2) # load 0x00007c00 from memory into f8
la x2, scratch
li x3, 0xa75b7233 # load x3 with value 0xa75b7233
sw x3, 0(x2) # store 0xa75b7233 in memory
flh f22, 0(x2) # load 0xa75b7233 from memory into f22
fnmadd.h f14, f1, f8, f22, dyn # perform operation
fnmadd.h f14, f1, f8, f22, rdn # perform operation
fnmadd.h f14, f1, f8, f22, rmm # perform operation
fnmadd.h f14, f1, f8, f22, rne # perform operation
fnmadd.h f14, f1, f8, f22, rtz # perform operation
fnmadd.h f14, f1, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f1, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f1, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f1, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f1, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f1, f8, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f11, 0(x2) # load 0x00008001 from memory into f11
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f22, 0(x2) # load 0x0000fc00 from memory into f22
la x2, scratch
li x3, 0x2bf64310 # load x3 with value 0x2bf64310
sw x3, 0(x2) # store 0x2bf64310 in memory
flh f3, 0(x2) # load 0x2bf64310 from memory into f3
fnmadd.h f19, f11, f22, f3, dyn # perform operation
fnmadd.h f19, f11, f22, f3, rdn # perform operation
fnmadd.h f19, f11, f22, f3, rmm # perform operation
fnmadd.h f19, f11, f22, f3, rne # perform operation
fnmadd.h f19, f11, f22, f3, rtz # perform operation
fnmadd.h f19, f11, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f11, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f11, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f11, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f11, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f11, f22, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f17, 0(x2) # load 0x00008001 from memory into f17
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f30, 0(x2) # load 0x00007e00 from memory into f30
la x2, scratch
li x3, 0x210167a4 # load x3 with value 0x210167a4
sw x3, 0(x2) # store 0x210167a4 in memory
flh f19, 0(x2) # load 0x210167a4 from memory into f19
fnmadd.h f15, f17, f30, f19, dyn # perform operation
fnmadd.h f15, f17, f30, f19, rdn # perform operation
fnmadd.h f15, f17, f30, f19, rmm # perform operation
fnmadd.h f15, f17, f30, f19, rne # perform operation
fnmadd.h f15, f17, f30, f19, rtz # perform operation
fnmadd.h f15, f17, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f17, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f17, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f17, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f17, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f17, f30, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f26, 0(x2) # load 0x00008001 from memory into f26
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f8, 0(x2) # load 0x00007fff from memory into f8
la x2, scratch
li x3, 0x63e6aa25 # load x3 with value 0x63e6aa25
sw x3, 0(x2) # store 0x63e6aa25 in memory
flh f12, 0(x2) # load 0x63e6aa25 from memory into f12
fnmadd.h f10, f26, f8, f12, dyn # perform operation
fnmadd.h f10, f26, f8, f12, rdn # perform operation
fnmadd.h f10, f26, f8, f12, rmm # perform operation
fnmadd.h f10, f26, f8, f12, rne # perform operation
fnmadd.h f10, f26, f8, f12, rtz # perform operation
fnmadd.h f10, f26, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f26, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f26, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f26, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f26, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f26, f8, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f6, 0(x2) # load 0x00008001 from memory into f6
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f20, 0(x2) # load 0x0000fe00 from memory into f20
la x2, scratch
li x3, 0x0db3062d # load x3 with value 0x0db3062d
sw x3, 0(x2) # store 0x0db3062d in memory
flh f2, 0(x2) # load 0x0db3062d from memory into f2
fnmadd.h f7, f6, f20, f2, dyn # perform operation
fnmadd.h f7, f6, f20, f2, rdn # perform operation
fnmadd.h f7, f6, f20, f2, rmm # perform operation
fnmadd.h f7, f6, f20, f2, rne # perform operation
fnmadd.h f7, f6, f20, f2, rtz # perform operation
fnmadd.h f7, f6, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f6, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f6, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f6, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f6, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f6, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f11, 0(x2) # load 0x00008001 from memory into f11
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f19, 0(x2) # load 0x00007c01 from memory into f19
la x2, scratch
li x3, 0xeeb6ae6c # load x3 with value 0xeeb6ae6c
sw x3, 0(x2) # store 0xeeb6ae6c in memory
flh f12, 0(x2) # load 0xeeb6ae6c from memory into f12
fnmadd.h f15, f11, f19, f12, dyn # perform operation
fnmadd.h f15, f11, f19, f12, rdn # perform operation
fnmadd.h f15, f11, f19, f12, rmm # perform operation
fnmadd.h f15, f11, f19, f12, rne # perform operation
fnmadd.h f15, f11, f19, f12, rtz # perform operation
fnmadd.h f15, f11, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f11, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f11, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f11, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f11, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f11, f19, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f2, 0(x2) # load 0x00007dff from memory into f2
la x2, scratch
li x3, 0x63011a3e # load x3 with value 0x63011a3e
sw x3, 0(x2) # store 0x63011a3e in memory
flh f20, 0(x2) # load 0x63011a3e from memory into f20
fnmadd.h f13, f22, f2, f20, dyn # perform operation
fnmadd.h f13, f22, f2, f20, rdn # perform operation
fnmadd.h f13, f22, f2, f20, rmm # perform operation
fnmadd.h f13, f22, f2, f20, rne # perform operation
fnmadd.h f13, f22, f2, f20, rtz # perform operation
fnmadd.h f13, f22, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f22, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f22, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f22, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f22, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f22, f2, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f11, 0(x2) # load 0x00008001 from memory into f11
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f5, 0(x2) # load 0x0000fc01 from memory into f5
la x2, scratch
li x3, 0x327ad000 # load x3 with value 0x327ad000
sw x3, 0(x2) # store 0x327ad000 in memory
flh f26, 0(x2) # load 0x327ad000 from memory into f26
fnmadd.h f7, f11, f5, f26, dyn # perform operation
fnmadd.h f7, f11, f5, f26, rdn # perform operation
fnmadd.h f7, f11, f5, f26, rmm # perform operation
fnmadd.h f7, f11, f5, f26, rne # perform operation
fnmadd.h f7, f11, f5, f26, rtz # perform operation
fnmadd.h f7, f11, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f11, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f11, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f11, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f11, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f11, f5, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f11, 0(x2) # load 0x00008001 from memory into f11
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
la x2, scratch
li x3, 0xf8dd0853 # load x3 with value 0xf8dd0853
sw x3, 0(x2) # store 0xf8dd0853 in memory
flh f7, 0(x2) # load 0xf8dd0853 from memory into f7
fnmadd.h f31, f11, f25, f7, dyn # perform operation
fnmadd.h f31, f11, f25, f7, rdn # perform operation
fnmadd.h f31, f11, f25, f7, rmm # perform operation
fnmadd.h f31, f11, f25, f7, rne # perform operation
fnmadd.h f31, f11, f25, f7, rtz # perform operation
fnmadd.h f31, f11, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f11, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f11, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f11, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f11, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f11, f25, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f23, 0(x2) # load 0x00008001 from memory into f23
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f15, 0(x2) # load 0x0000c93a from memory into f15
la x2, scratch
li x3, 0x438d4d73 # load x3 with value 0x438d4d73
sw x3, 0(x2) # store 0x438d4d73 in memory
flh f29, 0(x2) # load 0x438d4d73 from memory into f29
fnmadd.h f10, f23, f15, f29, dyn # perform operation
fnmadd.h f10, f23, f15, f29, rdn # perform operation
fnmadd.h f10, f23, f15, f29, rmm # perform operation
fnmadd.h f10, f23, f15, f29, rne # perform operation
fnmadd.h f10, f23, f15, f29, rtz # perform operation
fnmadd.h f10, f23, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f23, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f23, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f23, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f23, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f23, f15, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f23, 0(x2) # load 0x00007c00 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0x1da0c1eb # load x3 with value 0x1da0c1eb
sw x3, 0(x2) # store 0x1da0c1eb in memory
flh f8, 0(x2) # load 0x1da0c1eb from memory into f8
fnmadd.h f3, f23, f10, f8, dyn # perform operation
fnmadd.h f3, f23, f10, f8, rdn # perform operation
fnmadd.h f3, f23, f10, f8, rmm # perform operation
fnmadd.h f3, f23, f10, f8, rne # perform operation
fnmadd.h f3, f23, f10, f8, rtz # perform operation
fnmadd.h f3, f23, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f23, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f23, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f23, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f23, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f23, f10, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f15, 0(x2) # load 0x00008000 from memory into f15
la x2, scratch
li x3, 0x5c5f0a33 # load x3 with value 0x5c5f0a33
sw x3, 0(x2) # store 0x5c5f0a33 in memory
flh f5, 0(x2) # load 0x5c5f0a33 from memory into f5
fnmadd.h f26, f9, f15, f5, dyn # perform operation
fnmadd.h f26, f9, f15, f5, rdn # perform operation
fnmadd.h f26, f9, f15, f5, rmm # perform operation
fnmadd.h f26, f9, f15, f5, rne # perform operation
fnmadd.h f26, f9, f15, f5, rtz # perform operation
fnmadd.h f26, f9, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f9, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f9, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f9, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f9, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f9, f15, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f20, 0(x2) # load 0x00007c00 from memory into f20
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f31, 0(x2) # load 0x00003c00 from memory into f31
la x2, scratch
li x3, 0xce34642b # load x3 with value 0xce34642b
sw x3, 0(x2) # store 0xce34642b in memory
flh f22, 0(x2) # load 0xce34642b from memory into f22
fnmadd.h f10, f20, f31, f22, dyn # perform operation
fnmadd.h f10, f20, f31, f22, rdn # perform operation
fnmadd.h f10, f20, f31, f22, rmm # perform operation
fnmadd.h f10, f20, f31, f22, rne # perform operation
fnmadd.h f10, f20, f31, f22, rtz # perform operation
fnmadd.h f10, f20, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f20, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f20, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f20, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f20, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f20, f31, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f11, 0(x2) # load 0x00007c00 from memory into f11
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f29, 0(x2) # load 0x0000bc00 from memory into f29
la x2, scratch
li x3, 0x663074b0 # load x3 with value 0x663074b0
sw x3, 0(x2) # store 0x663074b0 in memory
flh f30, 0(x2) # load 0x663074b0 from memory into f30
fnmadd.h f17, f11, f29, f30, dyn # perform operation
fnmadd.h f17, f11, f29, f30, rdn # perform operation
fnmadd.h f17, f11, f29, f30, rmm # perform operation
fnmadd.h f17, f11, f29, f30, rne # perform operation
fnmadd.h f17, f11, f29, f30, rtz # perform operation
fnmadd.h f17, f11, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f11, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f11, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f11, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f11, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f11, f29, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f12, 0(x2) # load 0x00007c00 from memory into f12
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f17, 0(x2) # load 0x00003e00 from memory into f17
la x2, scratch
li x3, 0x197d783e # load x3 with value 0x197d783e
sw x3, 0(x2) # store 0x197d783e in memory
flh f2, 0(x2) # load 0x197d783e from memory into f2
fnmadd.h f15, f12, f17, f2, dyn # perform operation
fnmadd.h f15, f12, f17, f2, rdn # perform operation
fnmadd.h f15, f12, f17, f2, rmm # perform operation
fnmadd.h f15, f12, f17, f2, rne # perform operation
fnmadd.h f15, f12, f17, f2, rtz # perform operation
fnmadd.h f15, f12, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f12, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f12, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f12, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f12, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f12, f17, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f16, 0(x2) # load 0x00007c00 from memory into f16
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
la x2, scratch
li x3, 0x00523f1f # load x3 with value 0x00523f1f
sw x3, 0(x2) # store 0x00523f1f in memory
flh f18, 0(x2) # load 0x00523f1f from memory into f18
fnmadd.h f29, f16, f1, f18, dyn # perform operation
fnmadd.h f29, f16, f1, f18, rdn # perform operation
fnmadd.h f29, f16, f1, f18, rmm # perform operation
fnmadd.h f29, f16, f1, f18, rne # perform operation
fnmadd.h f29, f16, f1, f18, rtz # perform operation
fnmadd.h f29, f16, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f16, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f16, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f16, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f16, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f16, f1, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f3, 0(x2) # load 0x00004000 from memory into f3
la x2, scratch
li x3, 0x8d0e913e # load x3 with value 0x8d0e913e
sw x3, 0(x2) # store 0x8d0e913e in memory
flh f2, 0(x2) # load 0x8d0e913e from memory into f2
fnmadd.h f26, f19, f3, f2, dyn # perform operation
fnmadd.h f26, f19, f3, f2, rdn # perform operation
fnmadd.h f26, f19, f3, f2, rmm # perform operation
fnmadd.h f26, f19, f3, f2, rne # perform operation
fnmadd.h f26, f19, f3, f2, rtz # perform operation
fnmadd.h f26, f19, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f19, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f19, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f19, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f19, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f19, f3, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f16, 0(x2) # load 0x00007c00 from memory into f16
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f29, 0(x2) # load 0x0000c000 from memory into f29
la x2, scratch
li x3, 0x679b3887 # load x3 with value 0x679b3887
sw x3, 0(x2) # store 0x679b3887 in memory
flh f21, 0(x2) # load 0x679b3887 from memory into f21
fnmadd.h f17, f16, f29, f21, dyn # perform operation
fnmadd.h f17, f16, f29, f21, rdn # perform operation
fnmadd.h f17, f16, f29, f21, rmm # perform operation
fnmadd.h f17, f16, f29, f21, rne # perform operation
fnmadd.h f17, f16, f29, f21, rtz # perform operation
fnmadd.h f17, f16, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f16, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f16, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f16, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f16, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f16, f29, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f25, 0(x2) # load 0x00007c00 from memory into f25
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f2, 0(x2) # load 0x00000400 from memory into f2
la x2, scratch
li x3, 0x8aeb59a0 # load x3 with value 0x8aeb59a0
sw x3, 0(x2) # store 0x8aeb59a0 in memory
flh f19, 0(x2) # load 0x8aeb59a0 from memory into f19
fnmadd.h f18, f25, f2, f19, dyn # perform operation
fnmadd.h f18, f25, f2, f19, rdn # perform operation
fnmadd.h f18, f25, f2, f19, rmm # perform operation
fnmadd.h f18, f25, f2, f19, rne # perform operation
fnmadd.h f18, f25, f2, f19, rtz # perform operation
fnmadd.h f18, f25, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f25, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f25, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f25, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f25, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f25, f2, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f13, 0(x2) # load 0x00007c00 from memory into f13
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f21, 0(x2) # load 0x00008400 from memory into f21
la x2, scratch
li x3, 0x76708310 # load x3 with value 0x76708310
sw x3, 0(x2) # store 0x76708310 in memory
flh f18, 0(x2) # load 0x76708310 from memory into f18
fnmadd.h f5, f13, f21, f18, dyn # perform operation
fnmadd.h f5, f13, f21, f18, rdn # perform operation
fnmadd.h f5, f13, f21, f18, rmm # perform operation
fnmadd.h f5, f13, f21, f18, rne # perform operation
fnmadd.h f5, f13, f21, f18, rtz # perform operation
fnmadd.h f5, f13, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f13, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f13, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f13, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f13, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f13, f21, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f14, 0(x2) # load 0x00007c00 from memory into f14
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f17, 0(x2) # load 0x00007bff from memory into f17
la x2, scratch
li x3, 0xce43fe6a # load x3 with value 0xce43fe6a
sw x3, 0(x2) # store 0xce43fe6a in memory
flh f23, 0(x2) # load 0xce43fe6a from memory into f23
fnmadd.h f21, f14, f17, f23, dyn # perform operation
fnmadd.h f21, f14, f17, f23, rdn # perform operation
fnmadd.h f21, f14, f17, f23, rmm # perform operation
fnmadd.h f21, f14, f17, f23, rne # perform operation
fnmadd.h f21, f14, f17, f23, rtz # perform operation
fnmadd.h f21, f14, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f14, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f14, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f14, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f14, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f14, f17, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f30, 0(x2) # load 0x00007c00 from memory into f30
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f22, 0(x2) # load 0x0000fbff from memory into f22
la x2, scratch
li x3, 0xb08008a8 # load x3 with value 0xb08008a8
sw x3, 0(x2) # store 0xb08008a8 in memory
flh f27, 0(x2) # load 0xb08008a8 from memory into f27
fnmadd.h f21, f30, f22, f27, dyn # perform operation
fnmadd.h f21, f30, f22, f27, rdn # perform operation
fnmadd.h f21, f30, f22, f27, rmm # perform operation
fnmadd.h f21, f30, f22, f27, rne # perform operation
fnmadd.h f21, f30, f22, f27, rtz # perform operation
fnmadd.h f21, f30, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f30, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f30, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f30, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f30, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f30, f22, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f7, 0(x2) # load 0x00007c00 from memory into f7
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f25, 0(x2) # load 0x000003ff from memory into f25
la x2, scratch
li x3, 0x4f04c713 # load x3 with value 0x4f04c713
sw x3, 0(x2) # store 0x4f04c713 in memory
flh f2, 0(x2) # load 0x4f04c713 from memory into f2
fnmadd.h f23, f7, f25, f2, dyn # perform operation
fnmadd.h f23, f7, f25, f2, rdn # perform operation
fnmadd.h f23, f7, f25, f2, rmm # perform operation
fnmadd.h f23, f7, f25, f2, rne # perform operation
fnmadd.h f23, f7, f25, f2, rtz # perform operation
fnmadd.h f23, f7, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f7, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f7, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f7, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f7, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f7, f25, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f24, 0(x2) # load 0x000083ff from memory into f24
la x2, scratch
li x3, 0xce5df686 # load x3 with value 0xce5df686
sw x3, 0(x2) # store 0xce5df686 in memory
flh f20, 0(x2) # load 0xce5df686 from memory into f20
fnmadd.h f28, f9, f24, f20, dyn # perform operation
fnmadd.h f28, f9, f24, f20, rdn # perform operation
fnmadd.h f28, f9, f24, f20, rmm # perform operation
fnmadd.h f28, f9, f24, f20, rne # perform operation
fnmadd.h f28, f9, f24, f20, rtz # perform operation
fnmadd.h f28, f9, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f9, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f9, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f9, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f9, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f9, f24, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f31, 0(x2) # load 0x00007c00 from memory into f31
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f14, 0(x2) # load 0x00000200 from memory into f14
la x2, scratch
li x3, 0x844070c6 # load x3 with value 0x844070c6
sw x3, 0(x2) # store 0x844070c6 in memory
flh f7, 0(x2) # load 0x844070c6 from memory into f7
fnmadd.h f21, f31, f14, f7, dyn # perform operation
fnmadd.h f21, f31, f14, f7, rdn # perform operation
fnmadd.h f21, f31, f14, f7, rmm # perform operation
fnmadd.h f21, f31, f14, f7, rne # perform operation
fnmadd.h f21, f31, f14, f7, rtz # perform operation
fnmadd.h f21, f31, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f31, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f31, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f31, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f31, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f31, f14, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f25, 0(x2) # load 0x00007c00 from memory into f25
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f11, 0(x2) # load 0x00008200 from memory into f11
la x2, scratch
li x3, 0x85840e52 # load x3 with value 0x85840e52
sw x3, 0(x2) # store 0x85840e52 in memory
flh f8, 0(x2) # load 0x85840e52 from memory into f8
fnmadd.h f27, f25, f11, f8, dyn # perform operation
fnmadd.h f27, f25, f11, f8, rdn # perform operation
fnmadd.h f27, f25, f11, f8, rmm # perform operation
fnmadd.h f27, f25, f11, f8, rne # perform operation
fnmadd.h f27, f25, f11, f8, rtz # perform operation
fnmadd.h f27, f25, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f25, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f25, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f25, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f25, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f25, f11, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0xebd23cd4 # load x3 with value 0xebd23cd4
sw x3, 0(x2) # store 0xebd23cd4 in memory
flh f20, 0(x2) # load 0xebd23cd4 from memory into f20
fnmadd.h f17, f9, f30, f20, dyn # perform operation
fnmadd.h f17, f9, f30, f20, rdn # perform operation
fnmadd.h f17, f9, f30, f20, rmm # perform operation
fnmadd.h f17, f9, f30, f20, rne # perform operation
fnmadd.h f17, f9, f30, f20, rtz # perform operation
fnmadd.h f17, f9, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f9, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f9, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f9, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f9, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f9, f30, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f17, 0(x2) # load 0x00008001 from memory into f17
la x2, scratch
li x3, 0x820c8eb2 # load x3 with value 0x820c8eb2
sw x3, 0(x2) # store 0x820c8eb2 in memory
flh f11, 0(x2) # load 0x820c8eb2 from memory into f11
fnmadd.h f16, f9, f17, f11, dyn # perform operation
fnmadd.h f16, f9, f17, f11, rdn # perform operation
fnmadd.h f16, f9, f17, f11, rmm # perform operation
fnmadd.h f16, f9, f17, f11, rne # perform operation
fnmadd.h f16, f9, f17, f11, rtz # perform operation
fnmadd.h f16, f9, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f9, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f9, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f9, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f9, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f9, f17, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f23, 0(x2) # load 0x00007c00 from memory into f23
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f2, 0(x2) # load 0x00007c00 from memory into f2
la x2, scratch
li x3, 0x45db9440 # load x3 with value 0x45db9440
sw x3, 0(x2) # store 0x45db9440 in memory
flh f27, 0(x2) # load 0x45db9440 from memory into f27
fnmadd.h f16, f23, f2, f27, dyn # perform operation
fnmadd.h f16, f23, f2, f27, rdn # perform operation
fnmadd.h f16, f23, f2, f27, rmm # perform operation
fnmadd.h f16, f23, f2, f27, rne # perform operation
fnmadd.h f16, f23, f2, f27, rtz # perform operation
fnmadd.h f16, f23, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f23, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f23, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f23, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f23, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f23, f2, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f17, 0(x2) # load 0x00007c00 from memory into f17
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f12, 0(x2) # load 0x0000fc00 from memory into f12
la x2, scratch
li x3, 0x67bbdaaa # load x3 with value 0x67bbdaaa
sw x3, 0(x2) # store 0x67bbdaaa in memory
flh f22, 0(x2) # load 0x67bbdaaa from memory into f22
fnmadd.h f25, f17, f12, f22, dyn # perform operation
fnmadd.h f25, f17, f12, f22, rdn # perform operation
fnmadd.h f25, f17, f12, f22, rmm # perform operation
fnmadd.h f25, f17, f12, f22, rne # perform operation
fnmadd.h f25, f17, f12, f22, rtz # perform operation
fnmadd.h f25, f17, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f17, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f17, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f17, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f17, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f17, f12, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f17, 0(x2) # load 0x00007c00 from memory into f17
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f27, 0(x2) # load 0x00007e00 from memory into f27
la x2, scratch
li x3, 0x647fab38 # load x3 with value 0x647fab38
sw x3, 0(x2) # store 0x647fab38 in memory
flh f30, 0(x2) # load 0x647fab38 from memory into f30
fnmadd.h f5, f17, f27, f30, dyn # perform operation
fnmadd.h f5, f17, f27, f30, rdn # perform operation
fnmadd.h f5, f17, f27, f30, rmm # perform operation
fnmadd.h f5, f17, f27, f30, rne # perform operation
fnmadd.h f5, f17, f27, f30, rtz # perform operation
fnmadd.h f5, f17, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f17, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f17, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f17, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f17, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f17, f27, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f7, 0(x2) # load 0x00007c00 from memory into f7
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f27, 0(x2) # load 0x00007fff from memory into f27
la x2, scratch
li x3, 0xe0ce55b9 # load x3 with value 0xe0ce55b9
sw x3, 0(x2) # store 0xe0ce55b9 in memory
flh f14, 0(x2) # load 0xe0ce55b9 from memory into f14
fnmadd.h f30, f7, f27, f14, dyn # perform operation
fnmadd.h f30, f7, f27, f14, rdn # perform operation
fnmadd.h f30, f7, f27, f14, rmm # perform operation
fnmadd.h f30, f7, f27, f14, rne # perform operation
fnmadd.h f30, f7, f27, f14, rtz # perform operation
fnmadd.h f30, f7, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f7, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f7, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f7, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f7, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f7, f27, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f31, 0(x2) # load 0x00007c00 from memory into f31
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f22, 0(x2) # load 0x0000fe00 from memory into f22
la x2, scratch
li x3, 0x015221a4 # load x3 with value 0x015221a4
sw x3, 0(x2) # store 0x015221a4 in memory
flh f29, 0(x2) # load 0x015221a4 from memory into f29
fnmadd.h f12, f31, f22, f29, dyn # perform operation
fnmadd.h f12, f31, f22, f29, rdn # perform operation
fnmadd.h f12, f31, f22, f29, rmm # perform operation
fnmadd.h f12, f31, f22, f29, rne # perform operation
fnmadd.h f12, f31, f22, f29, rtz # perform operation
fnmadd.h f12, f31, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f31, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f31, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f31, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f31, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f31, f22, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f23, 0(x2) # load 0x00007c00 from memory into f23
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f7, 0(x2) # load 0x00007c01 from memory into f7
la x2, scratch
li x3, 0x6c4cb5d1 # load x3 with value 0x6c4cb5d1
sw x3, 0(x2) # store 0x6c4cb5d1 in memory
flh f10, 0(x2) # load 0x6c4cb5d1 from memory into f10
fnmadd.h f20, f23, f7, f10, dyn # perform operation
fnmadd.h f20, f23, f7, f10, rdn # perform operation
fnmadd.h f20, f23, f7, f10, rmm # perform operation
fnmadd.h f20, f23, f7, f10, rne # perform operation
fnmadd.h f20, f23, f7, f10, rtz # perform operation
fnmadd.h f20, f23, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f23, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f23, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f23, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f23, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f23, f7, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f20, 0(x2) # load 0x00007c00 from memory into f20
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f10, 0(x2) # load 0x00007dff from memory into f10
la x2, scratch
li x3, 0x5e836db2 # load x3 with value 0x5e836db2
sw x3, 0(x2) # store 0x5e836db2 in memory
flh f24, 0(x2) # load 0x5e836db2 from memory into f24
fnmadd.h f11, f20, f10, f24, dyn # perform operation
fnmadd.h f11, f20, f10, f24, rdn # perform operation
fnmadd.h f11, f20, f10, f24, rmm # perform operation
fnmadd.h f11, f20, f10, f24, rne # perform operation
fnmadd.h f11, f20, f10, f24, rtz # perform operation
fnmadd.h f11, f20, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f20, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f20, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f20, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f20, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f20, f10, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f22, 0(x2) # load 0x00007c00 from memory into f22
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f21, 0(x2) # load 0x0000fc01 from memory into f21
la x2, scratch
li x3, 0xbdc3148f # load x3 with value 0xbdc3148f
sw x3, 0(x2) # store 0xbdc3148f in memory
flh f2, 0(x2) # load 0xbdc3148f from memory into f2
fnmadd.h f5, f22, f21, f2, dyn # perform operation
fnmadd.h f5, f22, f21, f2, rdn # perform operation
fnmadd.h f5, f22, f21, f2, rmm # perform operation
fnmadd.h f5, f22, f21, f2, rne # perform operation
fnmadd.h f5, f22, f21, f2, rtz # perform operation
fnmadd.h f5, f22, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f22, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f22, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f22, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f22, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f22, f21, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f17, 0(x2) # load 0x000058b4 from memory into f17
la x2, scratch
li x3, 0xa45fbf63 # load x3 with value 0xa45fbf63
sw x3, 0(x2) # store 0xa45fbf63 in memory
flh f30, 0(x2) # load 0xa45fbf63 from memory into f30
fnmadd.h f27, f19, f17, f30, dyn # perform operation
fnmadd.h f27, f19, f17, f30, rdn # perform operation
fnmadd.h f27, f19, f17, f30, rmm # perform operation
fnmadd.h f27, f19, f17, f30, rne # perform operation
fnmadd.h f27, f19, f17, f30, rtz # perform operation
fnmadd.h f27, f19, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f19, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f19, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f19, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f19, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f19, f17, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f30, 0(x2) # load 0x00007c00 from memory into f30
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f2, 0(x2) # load 0x0000c93a from memory into f2
la x2, scratch
li x3, 0xd0058536 # load x3 with value 0xd0058536
sw x3, 0(x2) # store 0xd0058536 in memory
flh f14, 0(x2) # load 0xd0058536 from memory into f14
fnmadd.h f23, f30, f2, f14, dyn # perform operation
fnmadd.h f23, f30, f2, f14, rdn # perform operation
fnmadd.h f23, f30, f2, f14, rmm # perform operation
fnmadd.h f23, f30, f2, f14, rne # perform operation
fnmadd.h f23, f30, f2, f14, rtz # perform operation
fnmadd.h f23, f30, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f30, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f30, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f30, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f30, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f30, f2, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f11, 0(x2) # load 0x0000fc00 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0xfd4309d2 # load x3 with value 0xfd4309d2
sw x3, 0(x2) # store 0xfd4309d2 in memory
flh f21, 0(x2) # load 0xfd4309d2 from memory into f21
fnmadd.h f13, f11, f6, f21, dyn # perform operation
fnmadd.h f13, f11, f6, f21, rdn # perform operation
fnmadd.h f13, f11, f6, f21, rmm # perform operation
fnmadd.h f13, f11, f6, f21, rne # perform operation
fnmadd.h f13, f11, f6, f21, rtz # perform operation
fnmadd.h f13, f11, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f11, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f11, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f11, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f11, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f11, f6, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f21, 0(x2) # load 0x0000fc00 from memory into f21
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f7, 0(x2) # load 0x00008000 from memory into f7
la x2, scratch
li x3, 0xed086e0b # load x3 with value 0xed086e0b
sw x3, 0(x2) # store 0xed086e0b in memory
flh f24, 0(x2) # load 0xed086e0b from memory into f24
fnmadd.h f1, f21, f7, f24, dyn # perform operation
fnmadd.h f1, f21, f7, f24, rdn # perform operation
fnmadd.h f1, f21, f7, f24, rmm # perform operation
fnmadd.h f1, f21, f7, f24, rne # perform operation
fnmadd.h f1, f21, f7, f24, rtz # perform operation
fnmadd.h f1, f21, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f21, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f21, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f21, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f21, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f21, f7, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f27, 0(x2) # load 0x0000fc00 from memory into f27
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f2, 0(x2) # load 0x00003c00 from memory into f2
la x2, scratch
li x3, 0x3561b245 # load x3 with value 0x3561b245
sw x3, 0(x2) # store 0x3561b245 in memory
flh f26, 0(x2) # load 0x3561b245 from memory into f26
fnmadd.h f25, f27, f2, f26, dyn # perform operation
fnmadd.h f25, f27, f2, f26, rdn # perform operation
fnmadd.h f25, f27, f2, f26, rmm # perform operation
fnmadd.h f25, f27, f2, f26, rne # perform operation
fnmadd.h f25, f27, f2, f26, rtz # perform operation
fnmadd.h f25, f27, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f27, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f27, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f27, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f27, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f27, f2, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f28, 0(x2) # load 0x0000fc00 from memory into f28
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f31, 0(x2) # load 0x0000bc00 from memory into f31
la x2, scratch
li x3, 0x88efc65d # load x3 with value 0x88efc65d
sw x3, 0(x2) # store 0x88efc65d in memory
flh f1, 0(x2) # load 0x88efc65d from memory into f1
fnmadd.h f6, f28, f31, f1, dyn # perform operation
fnmadd.h f6, f28, f31, f1, rdn # perform operation
fnmadd.h f6, f28, f31, f1, rmm # perform operation
fnmadd.h f6, f28, f31, f1, rne # perform operation
fnmadd.h f6, f28, f31, f1, rtz # perform operation
fnmadd.h f6, f28, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f28, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f28, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f28, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f28, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f28, f31, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f8, 0(x2) # load 0x0000fc00 from memory into f8
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f15, 0(x2) # load 0x00003e00 from memory into f15
la x2, scratch
li x3, 0x6dd87f47 # load x3 with value 0x6dd87f47
sw x3, 0(x2) # store 0x6dd87f47 in memory
flh f30, 0(x2) # load 0x6dd87f47 from memory into f30
fnmadd.h f21, f8, f15, f30, dyn # perform operation
fnmadd.h f21, f8, f15, f30, rdn # perform operation
fnmadd.h f21, f8, f15, f30, rmm # perform operation
fnmadd.h f21, f8, f15, f30, rne # perform operation
fnmadd.h f21, f8, f15, f30, rtz # perform operation
fnmadd.h f21, f8, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f8, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f8, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f8, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f8, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f8, f15, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f11, 0(x2) # load 0x0000fc00 from memory into f11
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f27, 0(x2) # load 0x0000be00 from memory into f27
la x2, scratch
li x3, 0x0f48a644 # load x3 with value 0x0f48a644
sw x3, 0(x2) # store 0x0f48a644 in memory
flh f10, 0(x2) # load 0x0f48a644 from memory into f10
fnmadd.h f28, f11, f27, f10, dyn # perform operation
fnmadd.h f28, f11, f27, f10, rdn # perform operation
fnmadd.h f28, f11, f27, f10, rmm # perform operation
fnmadd.h f28, f11, f27, f10, rne # perform operation
fnmadd.h f28, f11, f27, f10, rtz # perform operation
fnmadd.h f28, f11, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f11, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f11, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f11, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f11, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f11, f27, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f31, 0(x2) # load 0x0000fc00 from memory into f31
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f22, 0(x2) # load 0x00004000 from memory into f22
la x2, scratch
li x3, 0xe71137df # load x3 with value 0xe71137df
sw x3, 0(x2) # store 0xe71137df in memory
flh f28, 0(x2) # load 0xe71137df from memory into f28
fnmadd.h f12, f31, f22, f28, dyn # perform operation
fnmadd.h f12, f31, f22, f28, rdn # perform operation
fnmadd.h f12, f31, f22, f28, rmm # perform operation
fnmadd.h f12, f31, f22, f28, rne # perform operation
fnmadd.h f12, f31, f22, f28, rtz # perform operation
fnmadd.h f12, f31, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f31, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f31, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f31, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f31, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f31, f22, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f29, 0(x2) # load 0x0000fc00 from memory into f29
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f26, 0(x2) # load 0x0000c000 from memory into f26
la x2, scratch
li x3, 0x279be35f # load x3 with value 0x279be35f
sw x3, 0(x2) # store 0x279be35f in memory
flh f11, 0(x2) # load 0x279be35f from memory into f11
fnmadd.h f10, f29, f26, f11, dyn # perform operation
fnmadd.h f10, f29, f26, f11, rdn # perform operation
fnmadd.h f10, f29, f26, f11, rmm # perform operation
fnmadd.h f10, f29, f26, f11, rne # perform operation
fnmadd.h f10, f29, f26, f11, rtz # perform operation
fnmadd.h f10, f29, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f29, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f29, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f29, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f29, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f29, f26, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f14, 0(x2) # load 0x0000fc00 from memory into f14
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
la x2, scratch
li x3, 0xca0ff77b # load x3 with value 0xca0ff77b
sw x3, 0(x2) # store 0xca0ff77b in memory
flh f27, 0(x2) # load 0xca0ff77b from memory into f27
fnmadd.h f1, f14, f18, f27, dyn # perform operation
fnmadd.h f1, f14, f18, f27, rdn # perform operation
fnmadd.h f1, f14, f18, f27, rmm # perform operation
fnmadd.h f1, f14, f18, f27, rne # perform operation
fnmadd.h f1, f14, f18, f27, rtz # perform operation
fnmadd.h f1, f14, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f14, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f14, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f14, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f14, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f14, f18, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f10, 0(x2) # load 0x0000fc00 from memory into f10
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f12, 0(x2) # load 0x00008400 from memory into f12
la x2, scratch
li x3, 0xb6a26a9b # load x3 with value 0xb6a26a9b
sw x3, 0(x2) # store 0xb6a26a9b in memory
flh f14, 0(x2) # load 0xb6a26a9b from memory into f14
fnmadd.h f15, f10, f12, f14, dyn # perform operation
fnmadd.h f15, f10, f12, f14, rdn # perform operation
fnmadd.h f15, f10, f12, f14, rmm # perform operation
fnmadd.h f15, f10, f12, f14, rne # perform operation
fnmadd.h f15, f10, f12, f14, rtz # perform operation
fnmadd.h f15, f10, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f10, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f10, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f10, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f10, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f10, f12, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f27, 0(x2) # load 0x0000fc00 from memory into f27
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f26, 0(x2) # load 0x00007bff from memory into f26
la x2, scratch
li x3, 0x34a0cdc1 # load x3 with value 0x34a0cdc1
sw x3, 0(x2) # store 0x34a0cdc1 in memory
flh f31, 0(x2) # load 0x34a0cdc1 from memory into f31
fnmadd.h f5, f27, f26, f31, dyn # perform operation
fnmadd.h f5, f27, f26, f31, rdn # perform operation
fnmadd.h f5, f27, f26, f31, rmm # perform operation
fnmadd.h f5, f27, f26, f31, rne # perform operation
fnmadd.h f5, f27, f26, f31, rtz # perform operation
fnmadd.h f5, f27, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f27, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f27, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f27, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f27, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f27, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f3, 0(x2) # load 0x0000fc00 from memory into f3
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f25, 0(x2) # load 0x0000fbff from memory into f25
la x2, scratch
li x3, 0x764140cb # load x3 with value 0x764140cb
sw x3, 0(x2) # store 0x764140cb in memory
flh f18, 0(x2) # load 0x764140cb from memory into f18
fnmadd.h f21, f3, f25, f18, dyn # perform operation
fnmadd.h f21, f3, f25, f18, rdn # perform operation
fnmadd.h f21, f3, f25, f18, rmm # perform operation
fnmadd.h f21, f3, f25, f18, rne # perform operation
fnmadd.h f21, f3, f25, f18, rtz # perform operation
fnmadd.h f21, f3, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f3, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f3, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f3, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f3, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f3, f25, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f29, 0(x2) # load 0x0000fc00 from memory into f29
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f27, 0(x2) # load 0x000003ff from memory into f27
la x2, scratch
li x3, 0x80ca15bd # load x3 with value 0x80ca15bd
sw x3, 0(x2) # store 0x80ca15bd in memory
flh f9, 0(x2) # load 0x80ca15bd from memory into f9
fnmadd.h f30, f29, f27, f9, dyn # perform operation
fnmadd.h f30, f29, f27, f9, rdn # perform operation
fnmadd.h f30, f29, f27, f9, rmm # perform operation
fnmadd.h f30, f29, f27, f9, rne # perform operation
fnmadd.h f30, f29, f27, f9, rtz # perform operation
fnmadd.h f30, f29, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f29, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f29, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f29, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f29, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f29, f27, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f11, 0(x2) # load 0x0000fc00 from memory into f11
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f3, 0(x2) # load 0x000083ff from memory into f3
la x2, scratch
li x3, 0xcc3efe09 # load x3 with value 0xcc3efe09
sw x3, 0(x2) # store 0xcc3efe09 in memory
flh f25, 0(x2) # load 0xcc3efe09 from memory into f25
fnmadd.h f18, f11, f3, f25, dyn # perform operation
fnmadd.h f18, f11, f3, f25, rdn # perform operation
fnmadd.h f18, f11, f3, f25, rmm # perform operation
fnmadd.h f18, f11, f3, f25, rne # perform operation
fnmadd.h f18, f11, f3, f25, rtz # perform operation
fnmadd.h f18, f11, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f11, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f11, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f11, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f11, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f11, f3, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f3, 0(x2) # load 0x0000fc00 from memory into f3
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f11, 0(x2) # load 0x00000200 from memory into f11
la x2, scratch
li x3, 0x511a635d # load x3 with value 0x511a635d
sw x3, 0(x2) # store 0x511a635d in memory
flh f17, 0(x2) # load 0x511a635d from memory into f17
fnmadd.h f2, f3, f11, f17, dyn # perform operation
fnmadd.h f2, f3, f11, f17, rdn # perform operation
fnmadd.h f2, f3, f11, f17, rmm # perform operation
fnmadd.h f2, f3, f11, f17, rne # perform operation
fnmadd.h f2, f3, f11, f17, rtz # perform operation
fnmadd.h f2, f3, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f3, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f3, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f3, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f3, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f3, f11, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f7, 0(x2) # load 0x0000fc00 from memory into f7
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f27, 0(x2) # load 0x00008200 from memory into f27
la x2, scratch
li x3, 0xae156da8 # load x3 with value 0xae156da8
sw x3, 0(x2) # store 0xae156da8 in memory
flh f25, 0(x2) # load 0xae156da8 from memory into f25
fnmadd.h f21, f7, f27, f25, dyn # perform operation
fnmadd.h f21, f7, f27, f25, rdn # perform operation
fnmadd.h f21, f7, f27, f25, rmm # perform operation
fnmadd.h f21, f7, f27, f25, rne # perform operation
fnmadd.h f21, f7, f27, f25, rtz # perform operation
fnmadd.h f21, f7, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f7, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f7, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f7, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f7, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f7, f27, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f1, 0(x2) # load 0x0000fc00 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x07ddc211 # load x3 with value 0x07ddc211
sw x3, 0(x2) # store 0x07ddc211 in memory
flh f25, 0(x2) # load 0x07ddc211 from memory into f25
fnmadd.h f20, f1, f16, f25, dyn # perform operation
fnmadd.h f20, f1, f16, f25, rdn # perform operation
fnmadd.h f20, f1, f16, f25, rmm # perform operation
fnmadd.h f20, f1, f16, f25, rne # perform operation
fnmadd.h f20, f1, f16, f25, rtz # perform operation
fnmadd.h f20, f1, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f1, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f1, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f1, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f1, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f1, f16, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f18, 0(x2) # load 0x0000fc00 from memory into f18
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f3, 0(x2) # load 0x00008001 from memory into f3
la x2, scratch
li x3, 0x074e307f # load x3 with value 0x074e307f
sw x3, 0(x2) # store 0x074e307f in memory
flh f10, 0(x2) # load 0x074e307f from memory into f10
fnmadd.h f25, f18, f3, f10, dyn # perform operation
fnmadd.h f25, f18, f3, f10, rdn # perform operation
fnmadd.h f25, f18, f3, f10, rmm # perform operation
fnmadd.h f25, f18, f3, f10, rne # perform operation
fnmadd.h f25, f18, f3, f10, rtz # perform operation
fnmadd.h f25, f18, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f18, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f18, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f18, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f18, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f18, f3, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f8, 0(x2) # load 0x0000fc00 from memory into f8
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f20, 0(x2) # load 0x00007c00 from memory into f20
la x2, scratch
li x3, 0x9413b0d5 # load x3 with value 0x9413b0d5
sw x3, 0(x2) # store 0x9413b0d5 in memory
flh f9, 0(x2) # load 0x9413b0d5 from memory into f9
fnmadd.h f28, f8, f20, f9, dyn # perform operation
fnmadd.h f28, f8, f20, f9, rdn # perform operation
fnmadd.h f28, f8, f20, f9, rmm # perform operation
fnmadd.h f28, f8, f20, f9, rne # perform operation
fnmadd.h f28, f8, f20, f9, rtz # perform operation
fnmadd.h f28, f8, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f8, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f8, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f8, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f8, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f8, f20, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f15, 0(x2) # load 0x0000fc00 from memory into f15
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f30, 0(x2) # load 0x0000fc00 from memory into f30
la x2, scratch
li x3, 0x6922a3ee # load x3 with value 0x6922a3ee
sw x3, 0(x2) # store 0x6922a3ee in memory
flh f1, 0(x2) # load 0x6922a3ee from memory into f1
fnmadd.h f22, f15, f30, f1, dyn # perform operation
fnmadd.h f22, f15, f30, f1, rdn # perform operation
fnmadd.h f22, f15, f30, f1, rmm # perform operation
fnmadd.h f22, f15, f30, f1, rne # perform operation
fnmadd.h f22, f15, f30, f1, rtz # perform operation
fnmadd.h f22, f15, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f15, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f15, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f15, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f15, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f15, f30, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f22, 0(x2) # load 0x0000fc00 from memory into f22
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f3, 0(x2) # load 0x00007e00 from memory into f3
la x2, scratch
li x3, 0x23963a88 # load x3 with value 0x23963a88
sw x3, 0(x2) # store 0x23963a88 in memory
flh f7, 0(x2) # load 0x23963a88 from memory into f7
fnmadd.h f13, f22, f3, f7, dyn # perform operation
fnmadd.h f13, f22, f3, f7, rdn # perform operation
fnmadd.h f13, f22, f3, f7, rmm # perform operation
fnmadd.h f13, f22, f3, f7, rne # perform operation
fnmadd.h f13, f22, f3, f7, rtz # perform operation
fnmadd.h f13, f22, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f22, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f22, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f22, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f22, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f22, f3, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f2, 0(x2) # load 0x0000fc00 from memory into f2
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f10, 0(x2) # load 0x00007fff from memory into f10
la x2, scratch
li x3, 0xee3ed912 # load x3 with value 0xee3ed912
sw x3, 0(x2) # store 0xee3ed912 in memory
flh f18, 0(x2) # load 0xee3ed912 from memory into f18
fnmadd.h f25, f2, f10, f18, dyn # perform operation
fnmadd.h f25, f2, f10, f18, rdn # perform operation
fnmadd.h f25, f2, f10, f18, rmm # perform operation
fnmadd.h f25, f2, f10, f18, rne # perform operation
fnmadd.h f25, f2, f10, f18, rtz # perform operation
fnmadd.h f25, f2, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f2, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f2, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f2, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f2, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f2, f10, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f21, 0(x2) # load 0x0000fc00 from memory into f21
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f26, 0(x2) # load 0x0000fe00 from memory into f26
la x2, scratch
li x3, 0x7d2f95dd # load x3 with value 0x7d2f95dd
sw x3, 0(x2) # store 0x7d2f95dd in memory
flh f18, 0(x2) # load 0x7d2f95dd from memory into f18
fnmadd.h f28, f21, f26, f18, dyn # perform operation
fnmadd.h f28, f21, f26, f18, rdn # perform operation
fnmadd.h f28, f21, f26, f18, rmm # perform operation
fnmadd.h f28, f21, f26, f18, rne # perform operation
fnmadd.h f28, f21, f26, f18, rtz # perform operation
fnmadd.h f28, f21, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f21, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f21, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f21, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f21, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f21, f26, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f9, 0(x2) # load 0x0000fc00 from memory into f9
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
la x2, scratch
li x3, 0x0436a0cb # load x3 with value 0x0436a0cb
sw x3, 0(x2) # store 0x0436a0cb in memory
flh f24, 0(x2) # load 0x0436a0cb from memory into f24
fnmadd.h f15, f9, f26, f24, dyn # perform operation
fnmadd.h f15, f9, f26, f24, rdn # perform operation
fnmadd.h f15, f9, f26, f24, rmm # perform operation
fnmadd.h f15, f9, f26, f24, rne # perform operation
fnmadd.h f15, f9, f26, f24, rtz # perform operation
fnmadd.h f15, f9, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f9, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f9, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f9, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f9, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f9, f26, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f14, 0(x2) # load 0x0000fc00 from memory into f14
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f23, 0(x2) # load 0x00007dff from memory into f23
la x2, scratch
li x3, 0x6fd37c04 # load x3 with value 0x6fd37c04
sw x3, 0(x2) # store 0x6fd37c04 in memory
flh f6, 0(x2) # load 0x6fd37c04 from memory into f6
fnmadd.h f27, f14, f23, f6, dyn # perform operation
fnmadd.h f27, f14, f23, f6, rdn # perform operation
fnmadd.h f27, f14, f23, f6, rmm # perform operation
fnmadd.h f27, f14, f23, f6, rne # perform operation
fnmadd.h f27, f14, f23, f6, rtz # perform operation
fnmadd.h f27, f14, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f14, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f14, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f14, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f14, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f14, f23, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f21, 0(x2) # load 0x0000fc00 from memory into f21
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f31, 0(x2) # load 0x0000fc01 from memory into f31
la x2, scratch
li x3, 0xa5a20ff9 # load x3 with value 0xa5a20ff9
sw x3, 0(x2) # store 0xa5a20ff9 in memory
flh f15, 0(x2) # load 0xa5a20ff9 from memory into f15
fnmadd.h f1, f21, f31, f15, dyn # perform operation
fnmadd.h f1, f21, f31, f15, rdn # perform operation
fnmadd.h f1, f21, f31, f15, rmm # perform operation
fnmadd.h f1, f21, f31, f15, rne # perform operation
fnmadd.h f1, f21, f31, f15, rtz # perform operation
fnmadd.h f1, f21, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f21, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f21, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f21, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f21, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f21, f31, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f1, 0(x2) # load 0x0000fc00 from memory into f1
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f2, 0(x2) # load 0x000058b4 from memory into f2
la x2, scratch
li x3, 0x580ed58b # load x3 with value 0x580ed58b
sw x3, 0(x2) # store 0x580ed58b in memory
flh f8, 0(x2) # load 0x580ed58b from memory into f8
fnmadd.h f30, f1, f2, f8, dyn # perform operation
fnmadd.h f30, f1, f2, f8, rdn # perform operation
fnmadd.h f30, f1, f2, f8, rmm # perform operation
fnmadd.h f30, f1, f2, f8, rne # perform operation
fnmadd.h f30, f1, f2, f8, rtz # perform operation
fnmadd.h f30, f1, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f1, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f1, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f1, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f1, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f1, f2, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f26, 0(x2) # load 0x0000fc00 from memory into f26
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f25, 0(x2) # load 0x0000c93a from memory into f25
la x2, scratch
li x3, 0x249930f8 # load x3 with value 0x249930f8
sw x3, 0(x2) # store 0x249930f8 in memory
flh f19, 0(x2) # load 0x249930f8 from memory into f19
fnmadd.h f2, f26, f25, f19, dyn # perform operation
fnmadd.h f2, f26, f25, f19, rdn # perform operation
fnmadd.h f2, f26, f25, f19, rmm # perform operation
fnmadd.h f2, f26, f25, f19, rne # perform operation
fnmadd.h f2, f26, f25, f19, rtz # perform operation
fnmadd.h f2, f26, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f26, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f26, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f26, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f26, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f26, f25, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f2, 0(x2) # load 0x00007e00 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0x7490cf91 # load x3 with value 0x7490cf91
sw x3, 0(x2) # store 0x7490cf91 in memory
flh f17, 0(x2) # load 0x7490cf91 from memory into f17
fnmadd.h f10, f2, f30, f17, dyn # perform operation
fnmadd.h f10, f2, f30, f17, rdn # perform operation
fnmadd.h f10, f2, f30, f17, rmm # perform operation
fnmadd.h f10, f2, f30, f17, rne # perform operation
fnmadd.h f10, f2, f30, f17, rtz # perform operation
fnmadd.h f10, f2, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f2, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f2, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f2, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f2, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f2, f30, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f26, 0(x2) # load 0x00007e00 from memory into f26
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f20, 0(x2) # load 0x00008000 from memory into f20
la x2, scratch
li x3, 0xab1dc5c5 # load x3 with value 0xab1dc5c5
sw x3, 0(x2) # store 0xab1dc5c5 in memory
flh f10, 0(x2) # load 0xab1dc5c5 from memory into f10
fnmadd.h f2, f26, f20, f10, dyn # perform operation
fnmadd.h f2, f26, f20, f10, rdn # perform operation
fnmadd.h f2, f26, f20, f10, rmm # perform operation
fnmadd.h f2, f26, f20, f10, rne # perform operation
fnmadd.h f2, f26, f20, f10, rtz # perform operation
fnmadd.h f2, f26, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f26, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f26, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f26, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f26, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f26, f20, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f13, 0(x2) # load 0x00007e00 from memory into f13
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f27, 0(x2) # load 0x00003c00 from memory into f27
la x2, scratch
li x3, 0xa51c2645 # load x3 with value 0xa51c2645
sw x3, 0(x2) # store 0xa51c2645 in memory
flh f14, 0(x2) # load 0xa51c2645 from memory into f14
fnmadd.h f1, f13, f27, f14, dyn # perform operation
fnmadd.h f1, f13, f27, f14, rdn # perform operation
fnmadd.h f1, f13, f27, f14, rmm # perform operation
fnmadd.h f1, f13, f27, f14, rne # perform operation
fnmadd.h f1, f13, f27, f14, rtz # perform operation
fnmadd.h f1, f13, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f13, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f13, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f13, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f13, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f13, f27, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f10, 0(x2) # load 0x00007e00 from memory into f10
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f26, 0(x2) # load 0x0000bc00 from memory into f26
la x2, scratch
li x3, 0xb69c9156 # load x3 with value 0xb69c9156
sw x3, 0(x2) # store 0xb69c9156 in memory
flh f12, 0(x2) # load 0xb69c9156 from memory into f12
fnmadd.h f6, f10, f26, f12, dyn # perform operation
fnmadd.h f6, f10, f26, f12, rdn # perform operation
fnmadd.h f6, f10, f26, f12, rmm # perform operation
fnmadd.h f6, f10, f26, f12, rne # perform operation
fnmadd.h f6, f10, f26, f12, rtz # perform operation
fnmadd.h f6, f10, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f10, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f10, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f10, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f10, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f10, f26, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f15, 0(x2) # load 0x00007e00 from memory into f15
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f12, 0(x2) # load 0x00003e00 from memory into f12
la x2, scratch
li x3, 0x1af29087 # load x3 with value 0x1af29087
sw x3, 0(x2) # store 0x1af29087 in memory
flh f22, 0(x2) # load 0x1af29087 from memory into f22
fnmadd.h f8, f15, f12, f22, dyn # perform operation
fnmadd.h f8, f15, f12, f22, rdn # perform operation
fnmadd.h f8, f15, f12, f22, rmm # perform operation
fnmadd.h f8, f15, f12, f22, rne # perform operation
fnmadd.h f8, f15, f12, f22, rtz # perform operation
fnmadd.h f8, f15, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f15, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f15, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f15, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f15, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f15, f12, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f26, 0(x2) # load 0x00007e00 from memory into f26
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f10, 0(x2) # load 0x0000be00 from memory into f10
la x2, scratch
li x3, 0x10389295 # load x3 with value 0x10389295
sw x3, 0(x2) # store 0x10389295 in memory
flh f17, 0(x2) # load 0x10389295 from memory into f17
fnmadd.h f24, f26, f10, f17, dyn # perform operation
fnmadd.h f24, f26, f10, f17, rdn # perform operation
fnmadd.h f24, f26, f10, f17, rmm # perform operation
fnmadd.h f24, f26, f10, f17, rne # perform operation
fnmadd.h f24, f26, f10, f17, rtz # perform operation
fnmadd.h f24, f26, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f26, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f26, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f26, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f26, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f26, f10, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f7, 0(x2) # load 0x00007e00 from memory into f7
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
la x2, scratch
li x3, 0x35566b86 # load x3 with value 0x35566b86
sw x3, 0(x2) # store 0x35566b86 in memory
flh f2, 0(x2) # load 0x35566b86 from memory into f2
fnmadd.h f11, f7, f6, f2, dyn # perform operation
fnmadd.h f11, f7, f6, f2, rdn # perform operation
fnmadd.h f11, f7, f6, f2, rmm # perform operation
fnmadd.h f11, f7, f6, f2, rne # perform operation
fnmadd.h f11, f7, f6, f2, rtz # perform operation
fnmadd.h f11, f7, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f7, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f7, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f7, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f7, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f7, f6, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f28, 0(x2) # load 0x00007e00 from memory into f28
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f11, 0(x2) # load 0x0000c000 from memory into f11
la x2, scratch
li x3, 0x1ebaabc3 # load x3 with value 0x1ebaabc3
sw x3, 0(x2) # store 0x1ebaabc3 in memory
flh f22, 0(x2) # load 0x1ebaabc3 from memory into f22
fnmadd.h f25, f28, f11, f22, dyn # perform operation
fnmadd.h f25, f28, f11, f22, rdn # perform operation
fnmadd.h f25, f28, f11, f22, rmm # perform operation
fnmadd.h f25, f28, f11, f22, rne # perform operation
fnmadd.h f25, f28, f11, f22, rtz # perform operation
fnmadd.h f25, f28, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f28, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f28, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f28, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f28, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f28, f11, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f29, 0(x2) # load 0x00000400 from memory into f29
la x2, scratch
li x3, 0xd1344382 # load x3 with value 0xd1344382
sw x3, 0(x2) # store 0xd1344382 in memory
flh f31, 0(x2) # load 0xd1344382 from memory into f31
fnmadd.h f14, f20, f29, f31, dyn # perform operation
fnmadd.h f14, f20, f29, f31, rdn # perform operation
fnmadd.h f14, f20, f29, f31, rmm # perform operation
fnmadd.h f14, f20, f29, f31, rne # perform operation
fnmadd.h f14, f20, f29, f31, rtz # perform operation
fnmadd.h f14, f20, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f20, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f20, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f20, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f20, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f20, f29, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f7, 0(x2) # load 0x00007e00 from memory into f7
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
la x2, scratch
li x3, 0xd54e3744 # load x3 with value 0xd54e3744
sw x3, 0(x2) # store 0xd54e3744 in memory
flh f19, 0(x2) # load 0xd54e3744 from memory into f19
fnmadd.h f18, f7, f13, f19, dyn # perform operation
fnmadd.h f18, f7, f13, f19, rdn # perform operation
fnmadd.h f18, f7, f13, f19, rmm # perform operation
fnmadd.h f18, f7, f13, f19, rne # perform operation
fnmadd.h f18, f7, f13, f19, rtz # perform operation
fnmadd.h f18, f7, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f7, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f7, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f7, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f7, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f7, f13, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
la x2, scratch
li x3, 0xb66968ee # load x3 with value 0xb66968ee
sw x3, 0(x2) # store 0xb66968ee in memory
flh f16, 0(x2) # load 0xb66968ee from memory into f16
fnmadd.h f9, f20, f15, f16, dyn # perform operation
fnmadd.h f9, f20, f15, f16, rdn # perform operation
fnmadd.h f9, f20, f15, f16, rmm # perform operation
fnmadd.h f9, f20, f15, f16, rne # perform operation
fnmadd.h f9, f20, f15, f16, rtz # perform operation
fnmadd.h f9, f20, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f20, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f20, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f20, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f20, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f20, f15, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f15, 0(x2) # load 0x00007e00 from memory into f15
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f1, 0(x2) # load 0x0000fbff from memory into f1
la x2, scratch
li x3, 0x5e283d0c # load x3 with value 0x5e283d0c
sw x3, 0(x2) # store 0x5e283d0c in memory
flh f13, 0(x2) # load 0x5e283d0c from memory into f13
fnmadd.h f5, f15, f1, f13, dyn # perform operation
fnmadd.h f5, f15, f1, f13, rdn # perform operation
fnmadd.h f5, f15, f1, f13, rmm # perform operation
fnmadd.h f5, f15, f1, f13, rne # perform operation
fnmadd.h f5, f15, f1, f13, rtz # perform operation
fnmadd.h f5, f15, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f15, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f15, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f15, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f15, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f15, f1, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f1, 0(x2) # load 0x00007e00 from memory into f1
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f6, 0(x2) # load 0x000003ff from memory into f6
la x2, scratch
li x3, 0x59ec6c47 # load x3 with value 0x59ec6c47
sw x3, 0(x2) # store 0x59ec6c47 in memory
flh f10, 0(x2) # load 0x59ec6c47 from memory into f10
fnmadd.h f7, f1, f6, f10, dyn # perform operation
fnmadd.h f7, f1, f6, f10, rdn # perform operation
fnmadd.h f7, f1, f6, f10, rmm # perform operation
fnmadd.h f7, f1, f6, f10, rne # perform operation
fnmadd.h f7, f1, f6, f10, rtz # perform operation
fnmadd.h f7, f1, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f1, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f1, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f1, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f1, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f1, f6, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f10, 0(x2) # load 0x00007e00 from memory into f10
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f1, 0(x2) # load 0x000083ff from memory into f1
la x2, scratch
li x3, 0x2b407e2e # load x3 with value 0x2b407e2e
sw x3, 0(x2) # store 0x2b407e2e in memory
flh f22, 0(x2) # load 0x2b407e2e from memory into f22
fnmadd.h f17, f10, f1, f22, dyn # perform operation
fnmadd.h f17, f10, f1, f22, rdn # perform operation
fnmadd.h f17, f10, f1, f22, rmm # perform operation
fnmadd.h f17, f10, f1, f22, rne # perform operation
fnmadd.h f17, f10, f1, f22, rtz # perform operation
fnmadd.h f17, f10, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f10, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f10, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f10, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f10, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f10, f1, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f29, 0(x2) # load 0x00007e00 from memory into f29
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f23, 0(x2) # load 0x00000200 from memory into f23
la x2, scratch
li x3, 0x5f74109a # load x3 with value 0x5f74109a
sw x3, 0(x2) # store 0x5f74109a in memory
flh f27, 0(x2) # load 0x5f74109a from memory into f27
fnmadd.h f2, f29, f23, f27, dyn # perform operation
fnmadd.h f2, f29, f23, f27, rdn # perform operation
fnmadd.h f2, f29, f23, f27, rmm # perform operation
fnmadd.h f2, f29, f23, f27, rne # perform operation
fnmadd.h f2, f29, f23, f27, rtz # perform operation
fnmadd.h f2, f29, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f29, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f29, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f29, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f29, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f29, f23, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f13, 0(x2) # load 0x00007e00 from memory into f13
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f23, 0(x2) # load 0x00008200 from memory into f23
la x2, scratch
li x3, 0x9dcf3099 # load x3 with value 0x9dcf3099
sw x3, 0(x2) # store 0x9dcf3099 in memory
flh f28, 0(x2) # load 0x9dcf3099 from memory into f28
fnmadd.h f19, f13, f23, f28, dyn # perform operation
fnmadd.h f19, f13, f23, f28, rdn # perform operation
fnmadd.h f19, f13, f23, f28, rmm # perform operation
fnmadd.h f19, f13, f23, f28, rne # perform operation
fnmadd.h f19, f13, f23, f28, rtz # perform operation
fnmadd.h f19, f13, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f13, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f13, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f13, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f13, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f13, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f9, 0(x2) # load 0x00007e00 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0xe26f2458 # load x3 with value 0xe26f2458
sw x3, 0(x2) # store 0xe26f2458 in memory
flh f30, 0(x2) # load 0xe26f2458 from memory into f30
fnmadd.h f23, f9, f13, f30, dyn # perform operation
fnmadd.h f23, f9, f13, f30, rdn # perform operation
fnmadd.h f23, f9, f13, f30, rmm # perform operation
fnmadd.h f23, f9, f13, f30, rne # perform operation
fnmadd.h f23, f9, f13, f30, rtz # perform operation
fnmadd.h f23, f9, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f9, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f9, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f9, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f9, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f9, f13, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f1, 0(x2) # load 0x00007e00 from memory into f1
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f19, 0(x2) # load 0x00008001 from memory into f19
la x2, scratch
li x3, 0xff9d2260 # load x3 with value 0xff9d2260
sw x3, 0(x2) # store 0xff9d2260 in memory
flh f15, 0(x2) # load 0xff9d2260 from memory into f15
fnmadd.h f13, f1, f19, f15, dyn # perform operation
fnmadd.h f13, f1, f19, f15, rdn # perform operation
fnmadd.h f13, f1, f19, f15, rmm # perform operation
fnmadd.h f13, f1, f19, f15, rne # perform operation
fnmadd.h f13, f1, f19, f15, rtz # perform operation
fnmadd.h f13, f1, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f1, f19, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f26, 0(x2) # load 0x00007e00 from memory into f26
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f11, 0(x2) # load 0x00007c00 from memory into f11
la x2, scratch
li x3, 0x29f00894 # load x3 with value 0x29f00894
sw x3, 0(x2) # store 0x29f00894 in memory
flh f28, 0(x2) # load 0x29f00894 from memory into f28
fnmadd.h f22, f26, f11, f28, dyn # perform operation
fnmadd.h f22, f26, f11, f28, rdn # perform operation
fnmadd.h f22, f26, f11, f28, rmm # perform operation
fnmadd.h f22, f26, f11, f28, rne # perform operation
fnmadd.h f22, f26, f11, f28, rtz # perform operation
fnmadd.h f22, f26, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f26, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f26, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f26, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f26, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f26, f11, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f10, 0(x2) # load 0x00007e00 from memory into f10
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f13, 0(x2) # load 0x0000fc00 from memory into f13
la x2, scratch
li x3, 0xd89a6d8e # load x3 with value 0xd89a6d8e
sw x3, 0(x2) # store 0xd89a6d8e in memory
flh f14, 0(x2) # load 0xd89a6d8e from memory into f14
fnmadd.h f3, f10, f13, f14, dyn # perform operation
fnmadd.h f3, f10, f13, f14, rdn # perform operation
fnmadd.h f3, f10, f13, f14, rmm # perform operation
fnmadd.h f3, f10, f13, f14, rne # perform operation
fnmadd.h f3, f10, f13, f14, rtz # perform operation
fnmadd.h f3, f10, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f10, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f10, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f10, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f10, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f10, f13, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f30, 0(x2) # load 0x00007e00 from memory into f30
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f29, 0(x2) # load 0x00007e00 from memory into f29
la x2, scratch
li x3, 0xe563c357 # load x3 with value 0xe563c357
sw x3, 0(x2) # store 0xe563c357 in memory
flh f16, 0(x2) # load 0xe563c357 from memory into f16
fnmadd.h f17, f30, f29, f16, dyn # perform operation
fnmadd.h f17, f30, f29, f16, rdn # perform operation
fnmadd.h f17, f30, f29, f16, rmm # perform operation
fnmadd.h f17, f30, f29, f16, rne # perform operation
fnmadd.h f17, f30, f29, f16, rtz # perform operation
fnmadd.h f17, f30, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f30, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f30, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f30, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f30, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f30, f29, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f17, 0(x2) # load 0x00007e00 from memory into f17
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f18, 0(x2) # load 0x00007fff from memory into f18
la x2, scratch
li x3, 0xc8b6c220 # load x3 with value 0xc8b6c220
sw x3, 0(x2) # store 0xc8b6c220 in memory
flh f27, 0(x2) # load 0xc8b6c220 from memory into f27
fnmadd.h f28, f17, f18, f27, dyn # perform operation
fnmadd.h f28, f17, f18, f27, rdn # perform operation
fnmadd.h f28, f17, f18, f27, rmm # perform operation
fnmadd.h f28, f17, f18, f27, rne # perform operation
fnmadd.h f28, f17, f18, f27, rtz # perform operation
fnmadd.h f28, f17, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f17, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f17, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f17, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f17, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f17, f18, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f6, 0(x2) # load 0x0000fe00 from memory into f6
la x2, scratch
li x3, 0xa6dcda69 # load x3 with value 0xa6dcda69
sw x3, 0(x2) # store 0xa6dcda69 in memory
flh f24, 0(x2) # load 0xa6dcda69 from memory into f24
fnmadd.h f16, f20, f6, f24, dyn # perform operation
fnmadd.h f16, f20, f6, f24, rdn # perform operation
fnmadd.h f16, f20, f6, f24, rmm # perform operation
fnmadd.h f16, f20, f6, f24, rne # perform operation
fnmadd.h f16, f20, f6, f24, rtz # perform operation
fnmadd.h f16, f20, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f20, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f20, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f20, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f20, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f20, f6, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f22, 0(x2) # load 0x00007e00 from memory into f22
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f10, 0(x2) # load 0x00007c01 from memory into f10
la x2, scratch
li x3, 0x5e59de12 # load x3 with value 0x5e59de12
sw x3, 0(x2) # store 0x5e59de12 in memory
flh f14, 0(x2) # load 0x5e59de12 from memory into f14
fnmadd.h f8, f22, f10, f14, dyn # perform operation
fnmadd.h f8, f22, f10, f14, rdn # perform operation
fnmadd.h f8, f22, f10, f14, rmm # perform operation
fnmadd.h f8, f22, f10, f14, rne # perform operation
fnmadd.h f8, f22, f10, f14, rtz # perform operation
fnmadd.h f8, f22, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f22, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f22, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f22, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f22, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f22, f10, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f17, 0(x2) # load 0x00007e00 from memory into f17
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f30, 0(x2) # load 0x00007dff from memory into f30
la x2, scratch
li x3, 0xbc58b237 # load x3 with value 0xbc58b237
sw x3, 0(x2) # store 0xbc58b237 in memory
flh f19, 0(x2) # load 0xbc58b237 from memory into f19
fnmadd.h f23, f17, f30, f19, dyn # perform operation
fnmadd.h f23, f17, f30, f19, rdn # perform operation
fnmadd.h f23, f17, f30, f19, rmm # perform operation
fnmadd.h f23, f17, f30, f19, rne # perform operation
fnmadd.h f23, f17, f30, f19, rtz # perform operation
fnmadd.h f23, f17, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f17, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f17, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f17, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f17, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f17, f30, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f14, 0(x2) # load 0x00007e00 from memory into f14
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f5, 0(x2) # load 0x0000fc01 from memory into f5
la x2, scratch
li x3, 0xe7016e37 # load x3 with value 0xe7016e37
sw x3, 0(x2) # store 0xe7016e37 in memory
flh f21, 0(x2) # load 0xe7016e37 from memory into f21
fnmadd.h f11, f14, f5, f21, dyn # perform operation
fnmadd.h f11, f14, f5, f21, rdn # perform operation
fnmadd.h f11, f14, f5, f21, rmm # perform operation
fnmadd.h f11, f14, f5, f21, rne # perform operation
fnmadd.h f11, f14, f5, f21, rtz # perform operation
fnmadd.h f11, f14, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f14, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f14, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f14, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f14, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f14, f5, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f28, 0(x2) # load 0x00007e00 from memory into f28
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f19, 0(x2) # load 0x000058b4 from memory into f19
la x2, scratch
li x3, 0xe559f0ba # load x3 with value 0xe559f0ba
sw x3, 0(x2) # store 0xe559f0ba in memory
flh f24, 0(x2) # load 0xe559f0ba from memory into f24
fnmadd.h f7, f28, f19, f24, dyn # perform operation
fnmadd.h f7, f28, f19, f24, rdn # perform operation
fnmadd.h f7, f28, f19, f24, rmm # perform operation
fnmadd.h f7, f28, f19, f24, rne # perform operation
fnmadd.h f7, f28, f19, f24, rtz # perform operation
fnmadd.h f7, f28, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f28, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f28, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f28, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f28, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f28, f19, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f1, 0(x2) # load 0x00007e00 from memory into f1
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
la x2, scratch
li x3, 0xd9d255a8 # load x3 with value 0xd9d255a8
sw x3, 0(x2) # store 0xd9d255a8 in memory
flh f17, 0(x2) # load 0xd9d255a8 from memory into f17
fnmadd.h f31, f1, f23, f17, dyn # perform operation
fnmadd.h f31, f1, f23, f17, rdn # perform operation
fnmadd.h f31, f1, f23, f17, rmm # perform operation
fnmadd.h f31, f1, f23, f17, rne # perform operation
fnmadd.h f31, f1, f23, f17, rtz # perform operation
fnmadd.h f31, f1, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f1, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f1, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f1, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f1, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f1, f23, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f13, 0(x2) # load 0x00007fff from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0xd1a9cadc # load x3 with value 0xd1a9cadc
sw x3, 0(x2) # store 0xd1a9cadc in memory
flh f27, 0(x2) # load 0xd1a9cadc from memory into f27
fnmadd.h f25, f13, f15, f27, dyn # perform operation
fnmadd.h f25, f13, f15, f27, rdn # perform operation
fnmadd.h f25, f13, f15, f27, rmm # perform operation
fnmadd.h f25, f13, f15, f27, rne # perform operation
fnmadd.h f25, f13, f15, f27, rtz # perform operation
fnmadd.h f25, f13, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f13, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f13, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f13, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f13, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f13, f15, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f28, 0(x2) # load 0x00007fff from memory into f28
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f11, 0(x2) # load 0x00008000 from memory into f11
la x2, scratch
li x3, 0x2027ef6d # load x3 with value 0x2027ef6d
sw x3, 0(x2) # store 0x2027ef6d in memory
flh f13, 0(x2) # load 0x2027ef6d from memory into f13
fnmadd.h f22, f28, f11, f13, dyn # perform operation
fnmadd.h f22, f28, f11, f13, rdn # perform operation
fnmadd.h f22, f28, f11, f13, rmm # perform operation
fnmadd.h f22, f28, f11, f13, rne # perform operation
fnmadd.h f22, f28, f11, f13, rtz # perform operation
fnmadd.h f22, f28, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f28, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f28, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f28, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f28, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f28, f11, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f17, 0(x2) # load 0x00007fff from memory into f17
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f3, 0(x2) # load 0x00003c00 from memory into f3
la x2, scratch
li x3, 0x8cc46058 # load x3 with value 0x8cc46058
sw x3, 0(x2) # store 0x8cc46058 in memory
flh f2, 0(x2) # load 0x8cc46058 from memory into f2
fnmadd.h f26, f17, f3, f2, dyn # perform operation
fnmadd.h f26, f17, f3, f2, rdn # perform operation
fnmadd.h f26, f17, f3, f2, rmm # perform operation
fnmadd.h f26, f17, f3, f2, rne # perform operation
fnmadd.h f26, f17, f3, f2, rtz # perform operation
fnmadd.h f26, f17, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f17, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f17, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f17, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f17, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f17, f3, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f18, 0(x2) # load 0x00007fff from memory into f18
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
la x2, scratch
li x3, 0x59ec55d3 # load x3 with value 0x59ec55d3
sw x3, 0(x2) # store 0x59ec55d3 in memory
flh f25, 0(x2) # load 0x59ec55d3 from memory into f25
fnmadd.h f12, f18, f6, f25, dyn # perform operation
fnmadd.h f12, f18, f6, f25, rdn # perform operation
fnmadd.h f12, f18, f6, f25, rmm # perform operation
fnmadd.h f12, f18, f6, f25, rne # perform operation
fnmadd.h f12, f18, f6, f25, rtz # perform operation
fnmadd.h f12, f18, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f18, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f18, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f18, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f18, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f18, f6, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f15, 0(x2) # load 0x00007fff from memory into f15
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f12, 0(x2) # load 0x00003e00 from memory into f12
la x2, scratch
li x3, 0xde23f105 # load x3 with value 0xde23f105
sw x3, 0(x2) # store 0xde23f105 in memory
flh f5, 0(x2) # load 0xde23f105 from memory into f5
fnmadd.h f22, f15, f12, f5, dyn # perform operation
fnmadd.h f22, f15, f12, f5, rdn # perform operation
fnmadd.h f22, f15, f12, f5, rmm # perform operation
fnmadd.h f22, f15, f12, f5, rne # perform operation
fnmadd.h f22, f15, f12, f5, rtz # perform operation
fnmadd.h f22, f15, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f15, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f15, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f15, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f15, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f15, f12, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f9, 0(x2) # load 0x00007fff from memory into f9
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f16, 0(x2) # load 0x0000be00 from memory into f16
la x2, scratch
li x3, 0xb3354af0 # load x3 with value 0xb3354af0
sw x3, 0(x2) # store 0xb3354af0 in memory
flh f24, 0(x2) # load 0xb3354af0 from memory into f24
fnmadd.h f22, f9, f16, f24, dyn # perform operation
fnmadd.h f22, f9, f16, f24, rdn # perform operation
fnmadd.h f22, f9, f16, f24, rmm # perform operation
fnmadd.h f22, f9, f16, f24, rne # perform operation
fnmadd.h f22, f9, f16, f24, rtz # perform operation
fnmadd.h f22, f9, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f9, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f9, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f9, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f9, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f9, f16, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f14, 0(x2) # load 0x00007fff from memory into f14
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f31, 0(x2) # load 0x00004000 from memory into f31
la x2, scratch
li x3, 0x2c68764e # load x3 with value 0x2c68764e
sw x3, 0(x2) # store 0x2c68764e in memory
flh f12, 0(x2) # load 0x2c68764e from memory into f12
fnmadd.h f11, f14, f31, f12, dyn # perform operation
fnmadd.h f11, f14, f31, f12, rdn # perform operation
fnmadd.h f11, f14, f31, f12, rmm # perform operation
fnmadd.h f11, f14, f31, f12, rne # perform operation
fnmadd.h f11, f14, f31, f12, rtz # perform operation
fnmadd.h f11, f14, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f14, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f14, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f14, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f14, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f14, f31, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f12, 0(x2) # load 0x00007fff from memory into f12
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f5, 0(x2) # load 0x0000c000 from memory into f5
la x2, scratch
li x3, 0xaabeccf5 # load x3 with value 0xaabeccf5
sw x3, 0(x2) # store 0xaabeccf5 in memory
flh f10, 0(x2) # load 0xaabeccf5 from memory into f10
fnmadd.h f24, f12, f5, f10, dyn # perform operation
fnmadd.h f24, f12, f5, f10, rdn # perform operation
fnmadd.h f24, f12, f5, f10, rmm # perform operation
fnmadd.h f24, f12, f5, f10, rne # perform operation
fnmadd.h f24, f12, f5, f10, rtz # perform operation
fnmadd.h f24, f12, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f12, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f12, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f12, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f12, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f12, f5, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f22, 0(x2) # load 0x00007fff from memory into f22
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f9, 0(x2) # load 0x00000400 from memory into f9
la x2, scratch
li x3, 0x5d16630f # load x3 with value 0x5d16630f
sw x3, 0(x2) # store 0x5d16630f in memory
flh f12, 0(x2) # load 0x5d16630f from memory into f12
fnmadd.h f20, f22, f9, f12, dyn # perform operation
fnmadd.h f20, f22, f9, f12, rdn # perform operation
fnmadd.h f20, f22, f9, f12, rmm # perform operation
fnmadd.h f20, f22, f9, f12, rne # perform operation
fnmadd.h f20, f22, f9, f12, rtz # perform operation
fnmadd.h f20, f22, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f22, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f22, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f22, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f22, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f22, f9, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f29, 0(x2) # load 0x00007fff from memory into f29
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f14, 0(x2) # load 0x00008400 from memory into f14
la x2, scratch
li x3, 0x2050b5d0 # load x3 with value 0x2050b5d0
sw x3, 0(x2) # store 0x2050b5d0 in memory
flh f18, 0(x2) # load 0x2050b5d0 from memory into f18
fnmadd.h f19, f29, f14, f18, dyn # perform operation
fnmadd.h f19, f29, f14, f18, rdn # perform operation
fnmadd.h f19, f29, f14, f18, rmm # perform operation
fnmadd.h f19, f29, f14, f18, rne # perform operation
fnmadd.h f19, f29, f14, f18, rtz # perform operation
fnmadd.h f19, f29, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f29, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f29, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f29, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f29, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f29, f14, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f12, 0(x2) # load 0x00007fff from memory into f12
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f11, 0(x2) # load 0x00007bff from memory into f11
la x2, scratch
li x3, 0x12ffa817 # load x3 with value 0x12ffa817
sw x3, 0(x2) # store 0x12ffa817 in memory
flh f9, 0(x2) # load 0x12ffa817 from memory into f9
fnmadd.h f19, f12, f11, f9, dyn # perform operation
fnmadd.h f19, f12, f11, f9, rdn # perform operation
fnmadd.h f19, f12, f11, f9, rmm # perform operation
fnmadd.h f19, f12, f11, f9, rne # perform operation
fnmadd.h f19, f12, f11, f9, rtz # perform operation
fnmadd.h f19, f12, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f12, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f12, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f12, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f12, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f12, f11, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f7, 0(x2) # load 0x00007fff from memory into f7
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
la x2, scratch
li x3, 0xf7a5643d # load x3 with value 0xf7a5643d
sw x3, 0(x2) # store 0xf7a5643d in memory
flh f25, 0(x2) # load 0xf7a5643d from memory into f25
fnmadd.h f5, f7, f13, f25, dyn # perform operation
fnmadd.h f5, f7, f13, f25, rdn # perform operation
fnmadd.h f5, f7, f13, f25, rmm # perform operation
fnmadd.h f5, f7, f13, f25, rne # perform operation
fnmadd.h f5, f7, f13, f25, rtz # perform operation
fnmadd.h f5, f7, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f7, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f7, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f7, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f7, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f7, f13, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f30, 0(x2) # load 0x00007fff from memory into f30
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f31, 0(x2) # load 0x000003ff from memory into f31
la x2, scratch
li x3, 0x973c9884 # load x3 with value 0x973c9884
sw x3, 0(x2) # store 0x973c9884 in memory
flh f5, 0(x2) # load 0x973c9884 from memory into f5
fnmadd.h f8, f30, f31, f5, dyn # perform operation
fnmadd.h f8, f30, f31, f5, rdn # perform operation
fnmadd.h f8, f30, f31, f5, rmm # perform operation
fnmadd.h f8, f30, f31, f5, rne # perform operation
fnmadd.h f8, f30, f31, f5, rtz # perform operation
fnmadd.h f8, f30, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f30, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f30, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f30, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f30, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f30, f31, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f10, 0(x2) # load 0x000083ff from memory into f10
la x2, scratch
li x3, 0xc79fb33a # load x3 with value 0xc79fb33a
sw x3, 0(x2) # store 0xc79fb33a in memory
flh f20, 0(x2) # load 0xc79fb33a from memory into f20
fnmadd.h f1, f23, f10, f20, dyn # perform operation
fnmadd.h f1, f23, f10, f20, rdn # perform operation
fnmadd.h f1, f23, f10, f20, rmm # perform operation
fnmadd.h f1, f23, f10, f20, rne # perform operation
fnmadd.h f1, f23, f10, f20, rtz # perform operation
fnmadd.h f1, f23, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f23, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f23, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f23, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f23, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f23, f10, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f6, 0(x2) # load 0x00007fff from memory into f6
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f31, 0(x2) # load 0x00000200 from memory into f31
la x2, scratch
li x3, 0xc06f609f # load x3 with value 0xc06f609f
sw x3, 0(x2) # store 0xc06f609f in memory
flh f2, 0(x2) # load 0xc06f609f from memory into f2
fnmadd.h f1, f6, f31, f2, dyn # perform operation
fnmadd.h f1, f6, f31, f2, rdn # perform operation
fnmadd.h f1, f6, f31, f2, rmm # perform operation
fnmadd.h f1, f6, f31, f2, rne # perform operation
fnmadd.h f1, f6, f31, f2, rtz # perform operation
fnmadd.h f1, f6, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f6, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f6, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f6, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f6, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f6, f31, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f25, 0(x2) # load 0x00007fff from memory into f25
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f30, 0(x2) # load 0x00008200 from memory into f30
la x2, scratch
li x3, 0xa2abe349 # load x3 with value 0xa2abe349
sw x3, 0(x2) # store 0xa2abe349 in memory
flh f26, 0(x2) # load 0xa2abe349 from memory into f26
fnmadd.h f12, f25, f30, f26, dyn # perform operation
fnmadd.h f12, f25, f30, f26, rdn # perform operation
fnmadd.h f12, f25, f30, f26, rmm # perform operation
fnmadd.h f12, f25, f30, f26, rne # perform operation
fnmadd.h f12, f25, f30, f26, rtz # perform operation
fnmadd.h f12, f25, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f25, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f25, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f25, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f25, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f25, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f19, 0(x2) # load 0x00007fff from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x6f2dd6f6 # load x3 with value 0x6f2dd6f6
sw x3, 0(x2) # store 0x6f2dd6f6 in memory
flh f14, 0(x2) # load 0x6f2dd6f6 from memory into f14
fnmadd.h f24, f19, f11, f14, dyn # perform operation
fnmadd.h f24, f19, f11, f14, rdn # perform operation
fnmadd.h f24, f19, f11, f14, rmm # perform operation
fnmadd.h f24, f19, f11, f14, rne # perform operation
fnmadd.h f24, f19, f11, f14, rtz # perform operation
fnmadd.h f24, f19, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f19, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f19, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f19, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f19, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f19, f11, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f14, 0(x2) # load 0x00007fff from memory into f14
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f10, 0(x2) # load 0x00008001 from memory into f10
la x2, scratch
li x3, 0x772e2d13 # load x3 with value 0x772e2d13
sw x3, 0(x2) # store 0x772e2d13 in memory
flh f19, 0(x2) # load 0x772e2d13 from memory into f19
fnmadd.h f22, f14, f10, f19, dyn # perform operation
fnmadd.h f22, f14, f10, f19, rdn # perform operation
fnmadd.h f22, f14, f10, f19, rmm # perform operation
fnmadd.h f22, f14, f10, f19, rne # perform operation
fnmadd.h f22, f14, f10, f19, rtz # perform operation
fnmadd.h f22, f14, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f14, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f14, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f14, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f14, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f14, f10, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f13, 0(x2) # load 0x00007fff from memory into f13
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f7, 0(x2) # load 0x00007c00 from memory into f7
la x2, scratch
li x3, 0x4c12c32f # load x3 with value 0x4c12c32f
sw x3, 0(x2) # store 0x4c12c32f in memory
flh f27, 0(x2) # load 0x4c12c32f from memory into f27
fnmadd.h f18, f13, f7, f27, dyn # perform operation
fnmadd.h f18, f13, f7, f27, rdn # perform operation
fnmadd.h f18, f13, f7, f27, rmm # perform operation
fnmadd.h f18, f13, f7, f27, rne # perform operation
fnmadd.h f18, f13, f7, f27, rtz # perform operation
fnmadd.h f18, f13, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f13, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f13, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f13, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f13, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f13, f7, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f20, 0(x2) # load 0x00007fff from memory into f20
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f6, 0(x2) # load 0x0000fc00 from memory into f6
la x2, scratch
li x3, 0xdf0495cc # load x3 with value 0xdf0495cc
sw x3, 0(x2) # store 0xdf0495cc in memory
flh f24, 0(x2) # load 0xdf0495cc from memory into f24
fnmadd.h f28, f20, f6, f24, dyn # perform operation
fnmadd.h f28, f20, f6, f24, rdn # perform operation
fnmadd.h f28, f20, f6, f24, rmm # perform operation
fnmadd.h f28, f20, f6, f24, rne # perform operation
fnmadd.h f28, f20, f6, f24, rtz # perform operation
fnmadd.h f28, f20, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f20, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f20, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f20, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f20, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f20, f6, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f6, 0(x2) # load 0x00007fff from memory into f6
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f7, 0(x2) # load 0x00007e00 from memory into f7
la x2, scratch
li x3, 0xaffa8b4a # load x3 with value 0xaffa8b4a
sw x3, 0(x2) # store 0xaffa8b4a in memory
flh f3, 0(x2) # load 0xaffa8b4a from memory into f3
fnmadd.h f14, f6, f7, f3, dyn # perform operation
fnmadd.h f14, f6, f7, f3, rdn # perform operation
fnmadd.h f14, f6, f7, f3, rmm # perform operation
fnmadd.h f14, f6, f7, f3, rne # perform operation
fnmadd.h f14, f6, f7, f3, rtz # perform operation
fnmadd.h f14, f6, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f6, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f6, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f6, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f6, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f6, f7, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f19, 0(x2) # load 0x00007fff from memory into f19
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f15, 0(x2) # load 0x00007fff from memory into f15
la x2, scratch
li x3, 0x8542cf50 # load x3 with value 0x8542cf50
sw x3, 0(x2) # store 0x8542cf50 in memory
flh f8, 0(x2) # load 0x8542cf50 from memory into f8
fnmadd.h f22, f19, f15, f8, dyn # perform operation
fnmadd.h f22, f19, f15, f8, rdn # perform operation
fnmadd.h f22, f19, f15, f8, rmm # perform operation
fnmadd.h f22, f19, f15, f8, rne # perform operation
fnmadd.h f22, f19, f15, f8, rtz # perform operation
fnmadd.h f22, f19, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f19, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f19, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f19, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f19, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f19, f15, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f31, 0(x2) # load 0x00007fff from memory into f31
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f29, 0(x2) # load 0x0000fe00 from memory into f29
la x2, scratch
li x3, 0x9b6d08b9 # load x3 with value 0x9b6d08b9
sw x3, 0(x2) # store 0x9b6d08b9 in memory
flh f12, 0(x2) # load 0x9b6d08b9 from memory into f12
fnmadd.h f3, f31, f29, f12, dyn # perform operation
fnmadd.h f3, f31, f29, f12, rdn # perform operation
fnmadd.h f3, f31, f29, f12, rmm # perform operation
fnmadd.h f3, f31, f29, f12, rne # perform operation
fnmadd.h f3, f31, f29, f12, rtz # perform operation
fnmadd.h f3, f31, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f31, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f31, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f31, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f31, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f31, f29, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f13, 0(x2) # load 0x00007fff from memory into f13
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f25, 0(x2) # load 0x00007c01 from memory into f25
la x2, scratch
li x3, 0x00e2cfc0 # load x3 with value 0x00e2cfc0
sw x3, 0(x2) # store 0x00e2cfc0 in memory
flh f23, 0(x2) # load 0x00e2cfc0 from memory into f23
fnmadd.h f24, f13, f25, f23, dyn # perform operation
fnmadd.h f24, f13, f25, f23, rdn # perform operation
fnmadd.h f24, f13, f25, f23, rmm # perform operation
fnmadd.h f24, f13, f25, f23, rne # perform operation
fnmadd.h f24, f13, f25, f23, rtz # perform operation
fnmadd.h f24, f13, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f13, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f13, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f13, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f13, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f13, f25, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f11, 0(x2) # load 0x00007fff from memory into f11
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f28, 0(x2) # load 0x00007dff from memory into f28
la x2, scratch
li x3, 0x60f955a2 # load x3 with value 0x60f955a2
sw x3, 0(x2) # store 0x60f955a2 in memory
flh f30, 0(x2) # load 0x60f955a2 from memory into f30
fnmadd.h f20, f11, f28, f30, dyn # perform operation
fnmadd.h f20, f11, f28, f30, rdn # perform operation
fnmadd.h f20, f11, f28, f30, rmm # perform operation
fnmadd.h f20, f11, f28, f30, rne # perform operation
fnmadd.h f20, f11, f28, f30, rtz # perform operation
fnmadd.h f20, f11, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f11, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f11, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f11, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f11, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f11, f28, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f9, 0(x2) # load 0x00007fff from memory into f9
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f1, 0(x2) # load 0x0000fc01 from memory into f1
la x2, scratch
li x3, 0xc4e41246 # load x3 with value 0xc4e41246
sw x3, 0(x2) # store 0xc4e41246 in memory
flh f6, 0(x2) # load 0xc4e41246 from memory into f6
fnmadd.h f29, f9, f1, f6, dyn # perform operation
fnmadd.h f29, f9, f1, f6, rdn # perform operation
fnmadd.h f29, f9, f1, f6, rmm # perform operation
fnmadd.h f29, f9, f1, f6, rne # perform operation
fnmadd.h f29, f9, f1, f6, rtz # perform operation
fnmadd.h f29, f9, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f9, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f9, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f9, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f9, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f9, f1, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f6, 0(x2) # load 0x00007fff from memory into f6
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f5, 0(x2) # load 0x000058b4 from memory into f5
la x2, scratch
li x3, 0xc29a249a # load x3 with value 0xc29a249a
sw x3, 0(x2) # store 0xc29a249a in memory
flh f31, 0(x2) # load 0xc29a249a from memory into f31
fnmadd.h f8, f6, f5, f31, dyn # perform operation
fnmadd.h f8, f6, f5, f31, rdn # perform operation
fnmadd.h f8, f6, f5, f31, rmm # perform operation
fnmadd.h f8, f6, f5, f31, rne # perform operation
fnmadd.h f8, f6, f5, f31, rtz # perform operation
fnmadd.h f8, f6, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f6, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f6, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f6, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f6, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f6, f5, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f5, 0(x2) # load 0x00007fff from memory into f5
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
la x2, scratch
li x3, 0x66668df6 # load x3 with value 0x66668df6
sw x3, 0(x2) # store 0x66668df6 in memory
flh f17, 0(x2) # load 0x66668df6 from memory into f17
fnmadd.h f15, f5, f16, f17, dyn # perform operation
fnmadd.h f15, f5, f16, f17, rdn # perform operation
fnmadd.h f15, f5, f16, f17, rmm # perform operation
fnmadd.h f15, f5, f16, f17, rne # perform operation
fnmadd.h f15, f5, f16, f17, rtz # perform operation
fnmadd.h f15, f5, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f5, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f5, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f5, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f5, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f5, f16, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f24, 0(x2) # load 0x0000fe00 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x316eb6f2 # load x3 with value 0x316eb6f2
sw x3, 0(x2) # store 0x316eb6f2 in memory
flh f20, 0(x2) # load 0x316eb6f2 from memory into f20
fnmadd.h f1, f24, f22, f20, dyn # perform operation
fnmadd.h f1, f24, f22, f20, rdn # perform operation
fnmadd.h f1, f24, f22, f20, rmm # perform operation
fnmadd.h f1, f24, f22, f20, rne # perform operation
fnmadd.h f1, f24, f22, f20, rtz # perform operation
fnmadd.h f1, f24, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f24, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f24, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f24, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f24, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f24, f22, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f11, 0(x2) # load 0x0000fe00 from memory into f11
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f6, 0(x2) # load 0x00008000 from memory into f6
la x2, scratch
li x3, 0xaa483053 # load x3 with value 0xaa483053
sw x3, 0(x2) # store 0xaa483053 in memory
flh f13, 0(x2) # load 0xaa483053 from memory into f13
fnmadd.h f24, f11, f6, f13, dyn # perform operation
fnmadd.h f24, f11, f6, f13, rdn # perform operation
fnmadd.h f24, f11, f6, f13, rmm # perform operation
fnmadd.h f24, f11, f6, f13, rne # perform operation
fnmadd.h f24, f11, f6, f13, rtz # perform operation
fnmadd.h f24, f11, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f11, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f11, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f11, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f11, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f11, f6, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f19, 0(x2) # load 0x0000fe00 from memory into f19
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f15, 0(x2) # load 0x00003c00 from memory into f15
la x2, scratch
li x3, 0xa3764ee1 # load x3 with value 0xa3764ee1
sw x3, 0(x2) # store 0xa3764ee1 in memory
flh f1, 0(x2) # load 0xa3764ee1 from memory into f1
fnmadd.h f16, f19, f15, f1, dyn # perform operation
fnmadd.h f16, f19, f15, f1, rdn # perform operation
fnmadd.h f16, f19, f15, f1, rmm # perform operation
fnmadd.h f16, f19, f15, f1, rne # perform operation
fnmadd.h f16, f19, f15, f1, rtz # perform operation
fnmadd.h f16, f19, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f19, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f19, f15, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f30, 0(x2) # load 0x0000fe00 from memory into f30
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f15, 0(x2) # load 0x0000bc00 from memory into f15
la x2, scratch
li x3, 0x4e448dfd # load x3 with value 0x4e448dfd
sw x3, 0(x2) # store 0x4e448dfd in memory
flh f27, 0(x2) # load 0x4e448dfd from memory into f27
fnmadd.h f26, f30, f15, f27, dyn # perform operation
fnmadd.h f26, f30, f15, f27, rdn # perform operation
fnmadd.h f26, f30, f15, f27, rmm # perform operation
fnmadd.h f26, f30, f15, f27, rne # perform operation
fnmadd.h f26, f30, f15, f27, rtz # perform operation
fnmadd.h f26, f30, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f30, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f30, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f30, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f30, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f30, f15, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f28, 0(x2) # load 0x0000fe00 from memory into f28
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f14, 0(x2) # load 0x00003e00 from memory into f14
la x2, scratch
li x3, 0x2336b6bf # load x3 with value 0x2336b6bf
sw x3, 0(x2) # store 0x2336b6bf in memory
flh f15, 0(x2) # load 0x2336b6bf from memory into f15
fnmadd.h f20, f28, f14, f15, dyn # perform operation
fnmadd.h f20, f28, f14, f15, rdn # perform operation
fnmadd.h f20, f28, f14, f15, rmm # perform operation
fnmadd.h f20, f28, f14, f15, rne # perform operation
fnmadd.h f20, f28, f14, f15, rtz # perform operation
fnmadd.h f20, f28, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f28, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f28, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f28, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f28, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f28, f14, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f21, 0(x2) # load 0x0000fe00 from memory into f21
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
la x2, scratch
li x3, 0x397cb87d # load x3 with value 0x397cb87d
sw x3, 0(x2) # store 0x397cb87d in memory
flh f31, 0(x2) # load 0x397cb87d from memory into f31
fnmadd.h f23, f21, f1, f31, dyn # perform operation
fnmadd.h f23, f21, f1, f31, rdn # perform operation
fnmadd.h f23, f21, f1, f31, rmm # perform operation
fnmadd.h f23, f21, f1, f31, rne # perform operation
fnmadd.h f23, f21, f1, f31, rtz # perform operation
fnmadd.h f23, f21, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f21, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f21, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f21, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f21, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f21, f1, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f26, 0(x2) # load 0x0000fe00 from memory into f26
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f19, 0(x2) # load 0x00004000 from memory into f19
la x2, scratch
li x3, 0x5493196d # load x3 with value 0x5493196d
sw x3, 0(x2) # store 0x5493196d in memory
flh f15, 0(x2) # load 0x5493196d from memory into f15
fnmadd.h f30, f26, f19, f15, dyn # perform operation
fnmadd.h f30, f26, f19, f15, rdn # perform operation
fnmadd.h f30, f26, f19, f15, rmm # perform operation
fnmadd.h f30, f26, f19, f15, rne # perform operation
fnmadd.h f30, f26, f19, f15, rtz # perform operation
fnmadd.h f30, f26, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f26, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f26, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f26, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f26, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f26, f19, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f14, 0(x2) # load 0x0000fe00 from memory into f14
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
la x2, scratch
li x3, 0x45d2b5e7 # load x3 with value 0x45d2b5e7
sw x3, 0(x2) # store 0x45d2b5e7 in memory
flh f16, 0(x2) # load 0x45d2b5e7 from memory into f16
fnmadd.h f7, f14, f30, f16, dyn # perform operation
fnmadd.h f7, f14, f30, f16, rdn # perform operation
fnmadd.h f7, f14, f30, f16, rmm # perform operation
fnmadd.h f7, f14, f30, f16, rne # perform operation
fnmadd.h f7, f14, f30, f16, rtz # perform operation
fnmadd.h f7, f14, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f14, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f14, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f14, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f14, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f14, f30, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f21, 0(x2) # load 0x0000fe00 from memory into f21
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f5, 0(x2) # load 0x00000400 from memory into f5
la x2, scratch
li x3, 0x0488c538 # load x3 with value 0x0488c538
sw x3, 0(x2) # store 0x0488c538 in memory
flh f1, 0(x2) # load 0x0488c538 from memory into f1
fnmadd.h f9, f21, f5, f1, dyn # perform operation
fnmadd.h f9, f21, f5, f1, rdn # perform operation
fnmadd.h f9, f21, f5, f1, rmm # perform operation
fnmadd.h f9, f21, f5, f1, rne # perform operation
fnmadd.h f9, f21, f5, f1, rtz # perform operation
fnmadd.h f9, f21, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f21, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f21, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f21, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f21, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f21, f5, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f12, 0(x2) # load 0x0000fe00 from memory into f12
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f14, 0(x2) # load 0x00008400 from memory into f14
la x2, scratch
li x3, 0x0c549bf5 # load x3 with value 0x0c549bf5
sw x3, 0(x2) # store 0x0c549bf5 in memory
flh f30, 0(x2) # load 0x0c549bf5 from memory into f30
fnmadd.h f25, f12, f14, f30, dyn # perform operation
fnmadd.h f25, f12, f14, f30, rdn # perform operation
fnmadd.h f25, f12, f14, f30, rmm # perform operation
fnmadd.h f25, f12, f14, f30, rne # perform operation
fnmadd.h f25, f12, f14, f30, rtz # perform operation
fnmadd.h f25, f12, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f12, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f12, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f12, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f12, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f12, f14, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f9, 0(x2) # load 0x0000fe00 from memory into f9
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f3, 0(x2) # load 0x00007bff from memory into f3
la x2, scratch
li x3, 0x18146b5c # load x3 with value 0x18146b5c
sw x3, 0(x2) # store 0x18146b5c in memory
flh f1, 0(x2) # load 0x18146b5c from memory into f1
fnmadd.h f23, f9, f3, f1, dyn # perform operation
fnmadd.h f23, f9, f3, f1, rdn # perform operation
fnmadd.h f23, f9, f3, f1, rmm # perform operation
fnmadd.h f23, f9, f3, f1, rne # perform operation
fnmadd.h f23, f9, f3, f1, rtz # perform operation
fnmadd.h f23, f9, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f9, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f9, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f9, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f9, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f9, f3, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f2, 0(x2) # load 0x0000fe00 from memory into f2
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f31, 0(x2) # load 0x0000fbff from memory into f31
la x2, scratch
li x3, 0xb4f44940 # load x3 with value 0xb4f44940
sw x3, 0(x2) # store 0xb4f44940 in memory
flh f14, 0(x2) # load 0xb4f44940 from memory into f14
fnmadd.h f27, f2, f31, f14, dyn # perform operation
fnmadd.h f27, f2, f31, f14, rdn # perform operation
fnmadd.h f27, f2, f31, f14, rmm # perform operation
fnmadd.h f27, f2, f31, f14, rne # perform operation
fnmadd.h f27, f2, f31, f14, rtz # perform operation
fnmadd.h f27, f2, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f2, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f2, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f2, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f2, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f2, f31, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f5, 0(x2) # load 0x0000fe00 from memory into f5
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f17, 0(x2) # load 0x000003ff from memory into f17
la x2, scratch
li x3, 0xa206bfa3 # load x3 with value 0xa206bfa3
sw x3, 0(x2) # store 0xa206bfa3 in memory
flh f6, 0(x2) # load 0xa206bfa3 from memory into f6
fnmadd.h f28, f5, f17, f6, dyn # perform operation
fnmadd.h f28, f5, f17, f6, rdn # perform operation
fnmadd.h f28, f5, f17, f6, rmm # perform operation
fnmadd.h f28, f5, f17, f6, rne # perform operation
fnmadd.h f28, f5, f17, f6, rtz # perform operation
fnmadd.h f28, f5, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f5, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f5, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f5, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f5, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f5, f17, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f12, 0(x2) # load 0x0000fe00 from memory into f12
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f3, 0(x2) # load 0x000083ff from memory into f3
la x2, scratch
li x3, 0x8ac33a7b # load x3 with value 0x8ac33a7b
sw x3, 0(x2) # store 0x8ac33a7b in memory
flh f27, 0(x2) # load 0x8ac33a7b from memory into f27
fnmadd.h f15, f12, f3, f27, dyn # perform operation
fnmadd.h f15, f12, f3, f27, rdn # perform operation
fnmadd.h f15, f12, f3, f27, rmm # perform operation
fnmadd.h f15, f12, f3, f27, rne # perform operation
fnmadd.h f15, f12, f3, f27, rtz # perform operation
fnmadd.h f15, f12, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f12, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f12, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f12, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f12, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f12, f3, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f8, 0(x2) # load 0x0000fe00 from memory into f8
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f18, 0(x2) # load 0x00000200 from memory into f18
la x2, scratch
li x3, 0x4fabd65e # load x3 with value 0x4fabd65e
sw x3, 0(x2) # store 0x4fabd65e in memory
flh f22, 0(x2) # load 0x4fabd65e from memory into f22
fnmadd.h f20, f8, f18, f22, dyn # perform operation
fnmadd.h f20, f8, f18, f22, rdn # perform operation
fnmadd.h f20, f8, f18, f22, rmm # perform operation
fnmadd.h f20, f8, f18, f22, rne # perform operation
fnmadd.h f20, f8, f18, f22, rtz # perform operation
fnmadd.h f20, f8, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f8, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f8, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f8, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f8, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f8, f18, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f18, 0(x2) # load 0x0000fe00 from memory into f18
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f2, 0(x2) # load 0x00008200 from memory into f2
la x2, scratch
li x3, 0xfc55bdde # load x3 with value 0xfc55bdde
sw x3, 0(x2) # store 0xfc55bdde in memory
flh f5, 0(x2) # load 0xfc55bdde from memory into f5
fnmadd.h f23, f18, f2, f5, dyn # perform operation
fnmadd.h f23, f18, f2, f5, rdn # perform operation
fnmadd.h f23, f18, f2, f5, rmm # perform operation
fnmadd.h f23, f18, f2, f5, rne # perform operation
fnmadd.h f23, f18, f2, f5, rtz # perform operation
fnmadd.h f23, f18, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f18, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f18, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f18, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f18, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f18, f2, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f8, 0(x2) # load 0x0000fe00 from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0x419a2b68 # load x3 with value 0x419a2b68
sw x3, 0(x2) # store 0x419a2b68 in memory
flh f5, 0(x2) # load 0x419a2b68 from memory into f5
fnmadd.h f7, f8, f6, f5, dyn # perform operation
fnmadd.h f7, f8, f6, f5, rdn # perform operation
fnmadd.h f7, f8, f6, f5, rmm # perform operation
fnmadd.h f7, f8, f6, f5, rne # perform operation
fnmadd.h f7, f8, f6, f5, rtz # perform operation
fnmadd.h f7, f8, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f8, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f8, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f8, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f8, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f8, f6, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f1, 0(x2) # load 0x0000fe00 from memory into f1
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f11, 0(x2) # load 0x00008001 from memory into f11
la x2, scratch
li x3, 0xb49e10d7 # load x3 with value 0xb49e10d7
sw x3, 0(x2) # store 0xb49e10d7 in memory
flh f9, 0(x2) # load 0xb49e10d7 from memory into f9
fnmadd.h f12, f1, f11, f9, dyn # perform operation
fnmadd.h f12, f1, f11, f9, rdn # perform operation
fnmadd.h f12, f1, f11, f9, rmm # perform operation
fnmadd.h f12, f1, f11, f9, rne # perform operation
fnmadd.h f12, f1, f11, f9, rtz # perform operation
fnmadd.h f12, f1, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f1, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f1, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f1, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f1, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f1, f11, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f15, 0(x2) # load 0x0000fe00 from memory into f15
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f17, 0(x2) # load 0x00007c00 from memory into f17
la x2, scratch
li x3, 0xcea6f6f0 # load x3 with value 0xcea6f6f0
sw x3, 0(x2) # store 0xcea6f6f0 in memory
flh f18, 0(x2) # load 0xcea6f6f0 from memory into f18
fnmadd.h f13, f15, f17, f18, dyn # perform operation
fnmadd.h f13, f15, f17, f18, rdn # perform operation
fnmadd.h f13, f15, f17, f18, rmm # perform operation
fnmadd.h f13, f15, f17, f18, rne # perform operation
fnmadd.h f13, f15, f17, f18, rtz # perform operation
fnmadd.h f13, f15, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f15, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f15, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f15, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f15, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f15, f17, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f1, 0(x2) # load 0x0000fe00 from memory into f1
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f13, 0(x2) # load 0x0000fc00 from memory into f13
la x2, scratch
li x3, 0x9496f61e # load x3 with value 0x9496f61e
sw x3, 0(x2) # store 0x9496f61e in memory
flh f2, 0(x2) # load 0x9496f61e from memory into f2
fnmadd.h f9, f1, f13, f2, dyn # perform operation
fnmadd.h f9, f1, f13, f2, rdn # perform operation
fnmadd.h f9, f1, f13, f2, rmm # perform operation
fnmadd.h f9, f1, f13, f2, rne # perform operation
fnmadd.h f9, f1, f13, f2, rtz # perform operation
fnmadd.h f9, f1, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f1, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f1, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f1, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f1, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f1, f13, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f16, 0(x2) # load 0x0000fe00 from memory into f16
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f17, 0(x2) # load 0x00007e00 from memory into f17
la x2, scratch
li x3, 0x5eb7543d # load x3 with value 0x5eb7543d
sw x3, 0(x2) # store 0x5eb7543d in memory
flh f3, 0(x2) # load 0x5eb7543d from memory into f3
fnmadd.h f31, f16, f17, f3, dyn # perform operation
fnmadd.h f31, f16, f17, f3, rdn # perform operation
fnmadd.h f31, f16, f17, f3, rmm # perform operation
fnmadd.h f31, f16, f17, f3, rne # perform operation
fnmadd.h f31, f16, f17, f3, rtz # perform operation
fnmadd.h f31, f16, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f16, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f16, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f16, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f16, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f16, f17, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f2, 0(x2) # load 0x0000fe00 from memory into f2
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f31, 0(x2) # load 0x00007fff from memory into f31
la x2, scratch
li x3, 0xa428a766 # load x3 with value 0xa428a766
sw x3, 0(x2) # store 0xa428a766 in memory
flh f13, 0(x2) # load 0xa428a766 from memory into f13
fnmadd.h f20, f2, f31, f13, dyn # perform operation
fnmadd.h f20, f2, f31, f13, rdn # perform operation
fnmadd.h f20, f2, f31, f13, rmm # perform operation
fnmadd.h f20, f2, f31, f13, rne # perform operation
fnmadd.h f20, f2, f31, f13, rtz # perform operation
fnmadd.h f20, f2, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f2, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f2, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f2, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f2, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f2, f31, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f19, 0(x2) # load 0x0000fe00 from memory into f19
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f17, 0(x2) # load 0x0000fe00 from memory into f17
la x2, scratch
li x3, 0x371cf24f # load x3 with value 0x371cf24f
sw x3, 0(x2) # store 0x371cf24f in memory
flh f2, 0(x2) # load 0x371cf24f from memory into f2
fnmadd.h f27, f19, f17, f2, dyn # perform operation
fnmadd.h f27, f19, f17, f2, rdn # perform operation
fnmadd.h f27, f19, f17, f2, rmm # perform operation
fnmadd.h f27, f19, f17, f2, rne # perform operation
fnmadd.h f27, f19, f17, f2, rtz # perform operation
fnmadd.h f27, f19, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f19, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f19, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f19, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f19, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f19, f17, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f10, 0(x2) # load 0x0000fe00 from memory into f10
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f28, 0(x2) # load 0x00007c01 from memory into f28
la x2, scratch
li x3, 0xa46d6294 # load x3 with value 0xa46d6294
sw x3, 0(x2) # store 0xa46d6294 in memory
flh f5, 0(x2) # load 0xa46d6294 from memory into f5
fnmadd.h f12, f10, f28, f5, dyn # perform operation
fnmadd.h f12, f10, f28, f5, rdn # perform operation
fnmadd.h f12, f10, f28, f5, rmm # perform operation
fnmadd.h f12, f10, f28, f5, rne # perform operation
fnmadd.h f12, f10, f28, f5, rtz # perform operation
fnmadd.h f12, f10, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f10, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f10, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f10, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f10, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f10, f28, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f16, 0(x2) # load 0x0000fe00 from memory into f16
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f31, 0(x2) # load 0x00007dff from memory into f31
la x2, scratch
li x3, 0x3e914b75 # load x3 with value 0x3e914b75
sw x3, 0(x2) # store 0x3e914b75 in memory
flh f9, 0(x2) # load 0x3e914b75 from memory into f9
fnmadd.h f6, f16, f31, f9, dyn # perform operation
fnmadd.h f6, f16, f31, f9, rdn # perform operation
fnmadd.h f6, f16, f31, f9, rmm # perform operation
fnmadd.h f6, f16, f31, f9, rne # perform operation
fnmadd.h f6, f16, f31, f9, rtz # perform operation
fnmadd.h f6, f16, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f16, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f16, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f16, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f16, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f16, f31, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f12, 0(x2) # load 0x0000fe00 from memory into f12
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f8, 0(x2) # load 0x0000fc01 from memory into f8
la x2, scratch
li x3, 0x73431ff3 # load x3 with value 0x73431ff3
sw x3, 0(x2) # store 0x73431ff3 in memory
flh f17, 0(x2) # load 0x73431ff3 from memory into f17
fnmadd.h f11, f12, f8, f17, dyn # perform operation
fnmadd.h f11, f12, f8, f17, rdn # perform operation
fnmadd.h f11, f12, f8, f17, rmm # perform operation
fnmadd.h f11, f12, f8, f17, rne # perform operation
fnmadd.h f11, f12, f8, f17, rtz # perform operation
fnmadd.h f11, f12, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f12, f8, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f29, 0(x2) # load 0x0000fe00 from memory into f29
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f28, 0(x2) # load 0x000058b4 from memory into f28
la x2, scratch
li x3, 0x26a4b1dc # load x3 with value 0x26a4b1dc
sw x3, 0(x2) # store 0x26a4b1dc in memory
flh f27, 0(x2) # load 0x26a4b1dc from memory into f27
fnmadd.h f21, f29, f28, f27, dyn # perform operation
fnmadd.h f21, f29, f28, f27, rdn # perform operation
fnmadd.h f21, f29, f28, f27, rmm # perform operation
fnmadd.h f21, f29, f28, f27, rne # perform operation
fnmadd.h f21, f29, f28, f27, rtz # perform operation
fnmadd.h f21, f29, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f29, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f29, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f29, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f29, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f29, f28, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfe00 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f22, 0(x2) # load 0x0000fe00 from memory into f22
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f2, 0(x2) # load 0x0000c93a from memory into f2
la x2, scratch
li x3, 0x989856fd # load x3 with value 0x989856fd
sw x3, 0(x2) # store 0x989856fd in memory
flh f13, 0(x2) # load 0x989856fd from memory into f13
fnmadd.h f20, f22, f2, f13, dyn # perform operation
fnmadd.h f20, f22, f2, f13, rdn # perform operation
fnmadd.h f20, f22, f2, f13, rmm # perform operation
fnmadd.h f20, f22, f2, f13, rne # perform operation
fnmadd.h f20, f22, f2, f13, rtz # perform operation
fnmadd.h f20, f22, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f22, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f22, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f22, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f22, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f22, f2, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f12, 0(x2) # load 0x00007c01 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x67df4096 # load x3 with value 0x67df4096
sw x3, 0(x2) # store 0x67df4096 in memory
flh f22, 0(x2) # load 0x67df4096 from memory into f22
fnmadd.h f26, f12, f21, f22, dyn # perform operation
fnmadd.h f26, f12, f21, f22, rdn # perform operation
fnmadd.h f26, f12, f21, f22, rmm # perform operation
fnmadd.h f26, f12, f21, f22, rne # perform operation
fnmadd.h f26, f12, f21, f22, rtz # perform operation
fnmadd.h f26, f12, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f12, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f12, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f12, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f12, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f12, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f25, 0(x2) # load 0x00007c01 from memory into f25
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f27, 0(x2) # load 0x00008000 from memory into f27
la x2, scratch
li x3, 0x2cd951f2 # load x3 with value 0x2cd951f2
sw x3, 0(x2) # store 0x2cd951f2 in memory
flh f3, 0(x2) # load 0x2cd951f2 from memory into f3
fnmadd.h f28, f25, f27, f3, dyn # perform operation
fnmadd.h f28, f25, f27, f3, rdn # perform operation
fnmadd.h f28, f25, f27, f3, rmm # perform operation
fnmadd.h f28, f25, f27, f3, rne # perform operation
fnmadd.h f28, f25, f27, f3, rtz # perform operation
fnmadd.h f28, f25, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f25, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f25, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f25, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f25, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f25, f27, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f12, 0(x2) # load 0x00007c01 from memory into f12
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
la x2, scratch
li x3, 0x9298f1d0 # load x3 with value 0x9298f1d0
sw x3, 0(x2) # store 0x9298f1d0 in memory
flh f7, 0(x2) # load 0x9298f1d0 from memory into f7
fnmadd.h f18, f12, f6, f7, dyn # perform operation
fnmadd.h f18, f12, f6, f7, rdn # perform operation
fnmadd.h f18, f12, f6, f7, rmm # perform operation
fnmadd.h f18, f12, f6, f7, rne # perform operation
fnmadd.h f18, f12, f6, f7, rtz # perform operation
fnmadd.h f18, f12, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f12, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f12, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f12, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f12, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f12, f6, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f29, 0(x2) # load 0x00007c01 from memory into f29
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f2, 0(x2) # load 0x0000bc00 from memory into f2
la x2, scratch
li x3, 0xcc66c31a # load x3 with value 0xcc66c31a
sw x3, 0(x2) # store 0xcc66c31a in memory
flh f11, 0(x2) # load 0xcc66c31a from memory into f11
fnmadd.h f23, f29, f2, f11, dyn # perform operation
fnmadd.h f23, f29, f2, f11, rdn # perform operation
fnmadd.h f23, f29, f2, f11, rmm # perform operation
fnmadd.h f23, f29, f2, f11, rne # perform operation
fnmadd.h f23, f29, f2, f11, rtz # perform operation
fnmadd.h f23, f29, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f29, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f29, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f29, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f29, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f29, f2, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f1, 0(x2) # load 0x00007c01 from memory into f1
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f12, 0(x2) # load 0x00003e00 from memory into f12
la x2, scratch
li x3, 0xf40e10ab # load x3 with value 0xf40e10ab
sw x3, 0(x2) # store 0xf40e10ab in memory
flh f22, 0(x2) # load 0xf40e10ab from memory into f22
fnmadd.h f23, f1, f12, f22, dyn # perform operation
fnmadd.h f23, f1, f12, f22, rdn # perform operation
fnmadd.h f23, f1, f12, f22, rmm # perform operation
fnmadd.h f23, f1, f12, f22, rne # perform operation
fnmadd.h f23, f1, f12, f22, rtz # perform operation
fnmadd.h f23, f1, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f1, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f1, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f1, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f1, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f1, f12, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f27, 0(x2) # load 0x00007c01 from memory into f27
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
la x2, scratch
li x3, 0xc374034e # load x3 with value 0xc374034e
sw x3, 0(x2) # store 0xc374034e in memory
flh f12, 0(x2) # load 0xc374034e from memory into f12
fnmadd.h f29, f27, f23, f12, dyn # perform operation
fnmadd.h f29, f27, f23, f12, rdn # perform operation
fnmadd.h f29, f27, f23, f12, rmm # perform operation
fnmadd.h f29, f27, f23, f12, rne # perform operation
fnmadd.h f29, f27, f23, f12, rtz # perform operation
fnmadd.h f29, f27, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f27, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f27, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f27, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f27, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f27, f23, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f15, 0(x2) # load 0x00007c01 from memory into f15
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f12, 0(x2) # load 0x00004000 from memory into f12
la x2, scratch
li x3, 0x136d7d3f # load x3 with value 0x136d7d3f
sw x3, 0(x2) # store 0x136d7d3f in memory
flh f14, 0(x2) # load 0x136d7d3f from memory into f14
fnmadd.h f16, f15, f12, f14, dyn # perform operation
fnmadd.h f16, f15, f12, f14, rdn # perform operation
fnmadd.h f16, f15, f12, f14, rmm # perform operation
fnmadd.h f16, f15, f12, f14, rne # perform operation
fnmadd.h f16, f15, f12, f14, rtz # perform operation
fnmadd.h f16, f15, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f15, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f15, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f15, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f15, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f15, f12, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f5, 0(x2) # load 0x00007c01 from memory into f5
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f22, 0(x2) # load 0x0000c000 from memory into f22
la x2, scratch
li x3, 0xb6eb23ca # load x3 with value 0xb6eb23ca
sw x3, 0(x2) # store 0xb6eb23ca in memory
flh f27, 0(x2) # load 0xb6eb23ca from memory into f27
fnmadd.h f23, f5, f22, f27, dyn # perform operation
fnmadd.h f23, f5, f22, f27, rdn # perform operation
fnmadd.h f23, f5, f22, f27, rmm # perform operation
fnmadd.h f23, f5, f22, f27, rne # perform operation
fnmadd.h f23, f5, f22, f27, rtz # perform operation
fnmadd.h f23, f5, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f5, f22, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f11, 0(x2) # load 0x00007c01 from memory into f11
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f31, 0(x2) # load 0x00000400 from memory into f31
la x2, scratch
li x3, 0x0a4104cb # load x3 with value 0x0a4104cb
sw x3, 0(x2) # store 0x0a4104cb in memory
flh f13, 0(x2) # load 0x0a4104cb from memory into f13
fnmadd.h f2, f11, f31, f13, dyn # perform operation
fnmadd.h f2, f11, f31, f13, rdn # perform operation
fnmadd.h f2, f11, f31, f13, rmm # perform operation
fnmadd.h f2, f11, f31, f13, rne # perform operation
fnmadd.h f2, f11, f31, f13, rtz # perform operation
fnmadd.h f2, f11, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f11, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f11, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f11, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f11, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f11, f31, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f16, 0(x2) # load 0x00007c01 from memory into f16
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f6, 0(x2) # load 0x00008400 from memory into f6
la x2, scratch
li x3, 0x472cd8c8 # load x3 with value 0x472cd8c8
sw x3, 0(x2) # store 0x472cd8c8 in memory
flh f15, 0(x2) # load 0x472cd8c8 from memory into f15
fnmadd.h f24, f16, f6, f15, dyn # perform operation
fnmadd.h f24, f16, f6, f15, rdn # perform operation
fnmadd.h f24, f16, f6, f15, rmm # perform operation
fnmadd.h f24, f16, f6, f15, rne # perform operation
fnmadd.h f24, f16, f6, f15, rtz # perform operation
fnmadd.h f24, f16, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f16, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f16, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f16, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f16, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f16, f6, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f1, 0(x2) # load 0x00007c01 from memory into f1
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f23, 0(x2) # load 0x00007bff from memory into f23
la x2, scratch
li x3, 0xc17a034d # load x3 with value 0xc17a034d
sw x3, 0(x2) # store 0xc17a034d in memory
flh f25, 0(x2) # load 0xc17a034d from memory into f25
fnmadd.h f28, f1, f23, f25, dyn # perform operation
fnmadd.h f28, f1, f23, f25, rdn # perform operation
fnmadd.h f28, f1, f23, f25, rmm # perform operation
fnmadd.h f28, f1, f23, f25, rne # perform operation
fnmadd.h f28, f1, f23, f25, rtz # perform operation
fnmadd.h f28, f1, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f1, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f1, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f1, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f1, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f1, f23, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f19, 0(x2) # load 0x00007c01 from memory into f19
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f22, 0(x2) # load 0x0000fbff from memory into f22
la x2, scratch
li x3, 0x07be6e7f # load x3 with value 0x07be6e7f
sw x3, 0(x2) # store 0x07be6e7f in memory
flh f11, 0(x2) # load 0x07be6e7f from memory into f11
fnmadd.h f29, f19, f22, f11, dyn # perform operation
fnmadd.h f29, f19, f22, f11, rdn # perform operation
fnmadd.h f29, f19, f22, f11, rmm # perform operation
fnmadd.h f29, f19, f22, f11, rne # perform operation
fnmadd.h f29, f19, f22, f11, rtz # perform operation
fnmadd.h f29, f19, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f19, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f19, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f19, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f19, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f19, f22, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f24, 0(x2) # load 0x00007c01 from memory into f24
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f27, 0(x2) # load 0x000003ff from memory into f27
la x2, scratch
li x3, 0x8e5af96a # load x3 with value 0x8e5af96a
sw x3, 0(x2) # store 0x8e5af96a in memory
flh f30, 0(x2) # load 0x8e5af96a from memory into f30
fnmadd.h f28, f24, f27, f30, dyn # perform operation
fnmadd.h f28, f24, f27, f30, rdn # perform operation
fnmadd.h f28, f24, f27, f30, rmm # perform operation
fnmadd.h f28, f24, f27, f30, rne # perform operation
fnmadd.h f28, f24, f27, f30, rtz # perform operation
fnmadd.h f28, f24, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f24, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f24, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f24, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f24, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f24, f27, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f15, 0(x2) # load 0x00007c01 from memory into f15
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f2, 0(x2) # load 0x000083ff from memory into f2
la x2, scratch
li x3, 0x72b1ab7b # load x3 with value 0x72b1ab7b
sw x3, 0(x2) # store 0x72b1ab7b in memory
flh f22, 0(x2) # load 0x72b1ab7b from memory into f22
fnmadd.h f13, f15, f2, f22, dyn # perform operation
fnmadd.h f13, f15, f2, f22, rdn # perform operation
fnmadd.h f13, f15, f2, f22, rmm # perform operation
fnmadd.h f13, f15, f2, f22, rne # perform operation
fnmadd.h f13, f15, f2, f22, rtz # perform operation
fnmadd.h f13, f15, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f15, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f15, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f15, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f15, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f15, f2, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f17, 0(x2) # load 0x00007c01 from memory into f17
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f31, 0(x2) # load 0x00000200 from memory into f31
la x2, scratch
li x3, 0x3c01ece6 # load x3 with value 0x3c01ece6
sw x3, 0(x2) # store 0x3c01ece6 in memory
flh f19, 0(x2) # load 0x3c01ece6 from memory into f19
fnmadd.h f25, f17, f31, f19, dyn # perform operation
fnmadd.h f25, f17, f31, f19, rdn # perform operation
fnmadd.h f25, f17, f31, f19, rmm # perform operation
fnmadd.h f25, f17, f31, f19, rne # perform operation
fnmadd.h f25, f17, f31, f19, rtz # perform operation
fnmadd.h f25, f17, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f17, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f17, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f17, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f17, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f17, f31, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f22, 0(x2) # load 0x00007c01 from memory into f22
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f15, 0(x2) # load 0x00008200 from memory into f15
la x2, scratch
li x3, 0xe82a009e # load x3 with value 0xe82a009e
sw x3, 0(x2) # store 0xe82a009e in memory
flh f9, 0(x2) # load 0xe82a009e from memory into f9
fnmadd.h f11, f22, f15, f9, dyn # perform operation
fnmadd.h f11, f22, f15, f9, rdn # perform operation
fnmadd.h f11, f22, f15, f9, rmm # perform operation
fnmadd.h f11, f22, f15, f9, rne # perform operation
fnmadd.h f11, f22, f15, f9, rtz # perform operation
fnmadd.h f11, f22, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f22, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f22, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f22, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f22, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f22, f15, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f6, 0(x2) # load 0x00007c01 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0xe491d42f # load x3 with value 0xe491d42f
sw x3, 0(x2) # store 0xe491d42f in memory
flh f22, 0(x2) # load 0xe491d42f from memory into f22
fnmadd.h f20, f6, f25, f22, dyn # perform operation
fnmadd.h f20, f6, f25, f22, rdn # perform operation
fnmadd.h f20, f6, f25, f22, rmm # perform operation
fnmadd.h f20, f6, f25, f22, rne # perform operation
fnmadd.h f20, f6, f25, f22, rtz # perform operation
fnmadd.h f20, f6, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f6, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f6, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f6, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f6, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f6, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f25, 0(x2) # load 0x00008001 from memory into f25
la x2, scratch
li x3, 0xd1d6f84b # load x3 with value 0xd1d6f84b
sw x3, 0(x2) # store 0xd1d6f84b in memory
flh f22, 0(x2) # load 0xd1d6f84b from memory into f22
fnmadd.h f3, f20, f25, f22, dyn # perform operation
fnmadd.h f3, f20, f25, f22, rdn # perform operation
fnmadd.h f3, f20, f25, f22, rmm # perform operation
fnmadd.h f3, f20, f25, f22, rne # perform operation
fnmadd.h f3, f20, f25, f22, rtz # perform operation
fnmadd.h f3, f20, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f20, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f20, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f20, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f20, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f20, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f25, 0(x2) # load 0x00007c01 from memory into f25
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f22, 0(x2) # load 0x00007c00 from memory into f22
la x2, scratch
li x3, 0x680cd905 # load x3 with value 0x680cd905
sw x3, 0(x2) # store 0x680cd905 in memory
flh f13, 0(x2) # load 0x680cd905 from memory into f13
fnmadd.h f8, f25, f22, f13, dyn # perform operation
fnmadd.h f8, f25, f22, f13, rdn # perform operation
fnmadd.h f8, f25, f22, f13, rmm # perform operation
fnmadd.h f8, f25, f22, f13, rne # perform operation
fnmadd.h f8, f25, f22, f13, rtz # perform operation
fnmadd.h f8, f25, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f25, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f25, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f25, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f25, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f25, f22, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f19, 0(x2) # load 0x00007c01 from memory into f19
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f1, 0(x2) # load 0x0000fc00 from memory into f1
la x2, scratch
li x3, 0xfbd26408 # load x3 with value 0xfbd26408
sw x3, 0(x2) # store 0xfbd26408 in memory
flh f22, 0(x2) # load 0xfbd26408 from memory into f22
fnmadd.h f26, f19, f1, f22, dyn # perform operation
fnmadd.h f26, f19, f1, f22, rdn # perform operation
fnmadd.h f26, f19, f1, f22, rmm # perform operation
fnmadd.h f26, f19, f1, f22, rne # perform operation
fnmadd.h f26, f19, f1, f22, rtz # perform operation
fnmadd.h f26, f19, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f19, f1, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f7, 0(x2) # load 0x00007c01 from memory into f7
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f27, 0(x2) # load 0x00007e00 from memory into f27
la x2, scratch
li x3, 0x4ab25c5c # load x3 with value 0x4ab25c5c
sw x3, 0(x2) # store 0x4ab25c5c in memory
flh f11, 0(x2) # load 0x4ab25c5c from memory into f11
fnmadd.h f17, f7, f27, f11, dyn # perform operation
fnmadd.h f17, f7, f27, f11, rdn # perform operation
fnmadd.h f17, f7, f27, f11, rmm # perform operation
fnmadd.h f17, f7, f27, f11, rne # perform operation
fnmadd.h f17, f7, f27, f11, rtz # perform operation
fnmadd.h f17, f7, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f7, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f7, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f7, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f7, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f7, f27, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f1, 0(x2) # load 0x00007fff from memory into f1
la x2, scratch
li x3, 0x16946f9c # load x3 with value 0x16946f9c
sw x3, 0(x2) # store 0x16946f9c in memory
flh f3, 0(x2) # load 0x16946f9c from memory into f3
fnmadd.h f9, f26, f1, f3, dyn # perform operation
fnmadd.h f9, f26, f1, f3, rdn # perform operation
fnmadd.h f9, f26, f1, f3, rmm # perform operation
fnmadd.h f9, f26, f1, f3, rne # perform operation
fnmadd.h f9, f26, f1, f3, rtz # perform operation
fnmadd.h f9, f26, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f26, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f26, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f26, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f26, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f26, f1, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f11, 0(x2) # load 0x00007c01 from memory into f11
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f3, 0(x2) # load 0x0000fe00 from memory into f3
la x2, scratch
li x3, 0xe76c859f # load x3 with value 0xe76c859f
sw x3, 0(x2) # store 0xe76c859f in memory
flh f19, 0(x2) # load 0xe76c859f from memory into f19
fnmadd.h f7, f11, f3, f19, dyn # perform operation
fnmadd.h f7, f11, f3, f19, rdn # perform operation
fnmadd.h f7, f11, f3, f19, rmm # perform operation
fnmadd.h f7, f11, f3, f19, rne # perform operation
fnmadd.h f7, f11, f3, f19, rtz # perform operation
fnmadd.h f7, f11, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f11, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f11, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f11, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f11, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f11, f3, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f24, 0(x2) # load 0x00007c01 from memory into f24
la x2, scratch
li x3, 0xa67a1d2d # load x3 with value 0xa67a1d2d
sw x3, 0(x2) # store 0xa67a1d2d in memory
flh f27, 0(x2) # load 0xa67a1d2d from memory into f27
fnmadd.h f11, f26, f24, f27, dyn # perform operation
fnmadd.h f11, f26, f24, f27, rdn # perform operation
fnmadd.h f11, f26, f24, f27, rmm # perform operation
fnmadd.h f11, f26, f24, f27, rne # perform operation
fnmadd.h f11, f26, f24, f27, rtz # perform operation
fnmadd.h f11, f26, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f26, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f26, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f26, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f26, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f26, f24, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f2, 0(x2) # load 0x00007c01 from memory into f2
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
la x2, scratch
li x3, 0x84e47fb2 # load x3 with value 0x84e47fb2
sw x3, 0(x2) # store 0x84e47fb2 in memory
flh f12, 0(x2) # load 0x84e47fb2 from memory into f12
fnmadd.h f19, f2, f26, f12, dyn # perform operation
fnmadd.h f19, f2, f26, f12, rdn # perform operation
fnmadd.h f19, f2, f26, f12, rmm # perform operation
fnmadd.h f19, f2, f26, f12, rne # perform operation
fnmadd.h f19, f2, f26, f12, rtz # perform operation
fnmadd.h f19, f2, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f2, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f2, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f2, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f2, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f2, f26, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f22, 0(x2) # load 0x00007c01 from memory into f22
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f29, 0(x2) # load 0x0000fc01 from memory into f29
la x2, scratch
li x3, 0x166bc6bf # load x3 with value 0x166bc6bf
sw x3, 0(x2) # store 0x166bc6bf in memory
flh f26, 0(x2) # load 0x166bc6bf from memory into f26
fnmadd.h f15, f22, f29, f26, dyn # perform operation
fnmadd.h f15, f22, f29, f26, rdn # perform operation
fnmadd.h f15, f22, f29, f26, rmm # perform operation
fnmadd.h f15, f22, f29, f26, rne # perform operation
fnmadd.h f15, f22, f29, f26, rtz # perform operation
fnmadd.h f15, f22, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f22, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f22, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f22, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f22, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f22, f29, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f31, 0(x2) # load 0x00007c01 from memory into f31
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f24, 0(x2) # load 0x000058b4 from memory into f24
la x2, scratch
li x3, 0x7a3b127c # load x3 with value 0x7a3b127c
sw x3, 0(x2) # store 0x7a3b127c in memory
flh f6, 0(x2) # load 0x7a3b127c from memory into f6
fnmadd.h f11, f31, f24, f6, dyn # perform operation
fnmadd.h f11, f31, f24, f6, rdn # perform operation
fnmadd.h f11, f31, f24, f6, rmm # perform operation
fnmadd.h f11, f31, f24, f6, rne # perform operation
fnmadd.h f11, f31, f24, f6, rtz # perform operation
fnmadd.h f11, f31, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f31, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f31, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f31, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f31, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f31, f24, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f6, 0(x2) # load 0x00007c01 from memory into f6
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f18, 0(x2) # load 0x0000c93a from memory into f18
la x2, scratch
li x3, 0x2e4cb4d2 # load x3 with value 0x2e4cb4d2
sw x3, 0(x2) # store 0x2e4cb4d2 in memory
flh f13, 0(x2) # load 0x2e4cb4d2 from memory into f13
fnmadd.h f3, f6, f18, f13, dyn # perform operation
fnmadd.h f3, f6, f18, f13, rdn # perform operation
fnmadd.h f3, f6, f18, f13, rmm # perform operation
fnmadd.h f3, f6, f18, f13, rne # perform operation
fnmadd.h f3, f6, f18, f13, rtz # perform operation
fnmadd.h f3, f6, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f6, f18, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f21, 0(x2) # load 0x00007dff from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0xb452a4c8 # load x3 with value 0xb452a4c8
sw x3, 0(x2) # store 0xb452a4c8 in memory
flh f24, 0(x2) # load 0xb452a4c8 from memory into f24
fnmadd.h f18, f21, f9, f24, dyn # perform operation
fnmadd.h f18, f21, f9, f24, rdn # perform operation
fnmadd.h f18, f21, f9, f24, rmm # perform operation
fnmadd.h f18, f21, f9, f24, rne # perform operation
fnmadd.h f18, f21, f9, f24, rtz # perform operation
fnmadd.h f18, f21, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f21, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f21, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f21, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f21, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f21, f9, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f29, 0(x2) # load 0x00007dff from memory into f29
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f16, 0(x2) # load 0x00008000 from memory into f16
la x2, scratch
li x3, 0x339626c5 # load x3 with value 0x339626c5
sw x3, 0(x2) # store 0x339626c5 in memory
flh f10, 0(x2) # load 0x339626c5 from memory into f10
fnmadd.h f2, f29, f16, f10, dyn # perform operation
fnmadd.h f2, f29, f16, f10, rdn # perform operation
fnmadd.h f2, f29, f16, f10, rmm # perform operation
fnmadd.h f2, f29, f16, f10, rne # perform operation
fnmadd.h f2, f29, f16, f10, rtz # perform operation
fnmadd.h f2, f29, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f29, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f29, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f29, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f29, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f29, f16, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f22, 0(x2) # load 0x00007dff from memory into f22
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f12, 0(x2) # load 0x00003c00 from memory into f12
la x2, scratch
li x3, 0x1a49a194 # load x3 with value 0x1a49a194
sw x3, 0(x2) # store 0x1a49a194 in memory
flh f7, 0(x2) # load 0x1a49a194 from memory into f7
fnmadd.h f24, f22, f12, f7, dyn # perform operation
fnmadd.h f24, f22, f12, f7, rdn # perform operation
fnmadd.h f24, f22, f12, f7, rmm # perform operation
fnmadd.h f24, f22, f12, f7, rne # perform operation
fnmadd.h f24, f22, f12, f7, rtz # perform operation
fnmadd.h f24, f22, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f22, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f22, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f22, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f22, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f22, f12, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f15, 0(x2) # load 0x00007dff from memory into f15
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f26, 0(x2) # load 0x0000bc00 from memory into f26
la x2, scratch
li x3, 0x1cb14de0 # load x3 with value 0x1cb14de0
sw x3, 0(x2) # store 0x1cb14de0 in memory
flh f9, 0(x2) # load 0x1cb14de0 from memory into f9
fnmadd.h f30, f15, f26, f9, dyn # perform operation
fnmadd.h f30, f15, f26, f9, rdn # perform operation
fnmadd.h f30, f15, f26, f9, rmm # perform operation
fnmadd.h f30, f15, f26, f9, rne # perform operation
fnmadd.h f30, f15, f26, f9, rtz # perform operation
fnmadd.h f30, f15, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f15, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f15, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f15, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f15, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f15, f26, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f27, 0(x2) # load 0x00007dff from memory into f27
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f17, 0(x2) # load 0x00003e00 from memory into f17
la x2, scratch
li x3, 0x76077c4e # load x3 with value 0x76077c4e
sw x3, 0(x2) # store 0x76077c4e in memory
flh f10, 0(x2) # load 0x76077c4e from memory into f10
fnmadd.h f22, f27, f17, f10, dyn # perform operation
fnmadd.h f22, f27, f17, f10, rdn # perform operation
fnmadd.h f22, f27, f17, f10, rmm # perform operation
fnmadd.h f22, f27, f17, f10, rne # perform operation
fnmadd.h f22, f27, f17, f10, rtz # perform operation
fnmadd.h f22, f27, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f27, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f27, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f27, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f27, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f27, f17, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f23, 0(x2) # load 0x00007dff from memory into f23
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f7, 0(x2) # load 0x0000be00 from memory into f7
la x2, scratch
li x3, 0x8a224ab2 # load x3 with value 0x8a224ab2
sw x3, 0(x2) # store 0x8a224ab2 in memory
flh f3, 0(x2) # load 0x8a224ab2 from memory into f3
fnmadd.h f6, f23, f7, f3, dyn # perform operation
fnmadd.h f6, f23, f7, f3, rdn # perform operation
fnmadd.h f6, f23, f7, f3, rmm # perform operation
fnmadd.h f6, f23, f7, f3, rne # perform operation
fnmadd.h f6, f23, f7, f3, rtz # perform operation
fnmadd.h f6, f23, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f23, f7, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
la x2, scratch
li x3, 0x53312c75 # load x3 with value 0x53312c75
sw x3, 0(x2) # store 0x53312c75 in memory
flh f14, 0(x2) # load 0x53312c75 from memory into f14
fnmadd.h f31, f26, f23, f14, dyn # perform operation
fnmadd.h f31, f26, f23, f14, rdn # perform operation
fnmadd.h f31, f26, f23, f14, rmm # perform operation
fnmadd.h f31, f26, f23, f14, rne # perform operation
fnmadd.h f31, f26, f23, f14, rtz # perform operation
fnmadd.h f31, f26, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f26, f23, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f8, 0(x2) # load 0x00007dff from memory into f8
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
la x2, scratch
li x3, 0xc1edf294 # load x3 with value 0xc1edf294
sw x3, 0(x2) # store 0xc1edf294 in memory
flh f26, 0(x2) # load 0xc1edf294 from memory into f26
fnmadd.h f28, f8, f30, f26, dyn # perform operation
fnmadd.h f28, f8, f30, f26, rdn # perform operation
fnmadd.h f28, f8, f30, f26, rmm # perform operation
fnmadd.h f28, f8, f30, f26, rne # perform operation
fnmadd.h f28, f8, f30, f26, rtz # perform operation
fnmadd.h f28, f8, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f8, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f8, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f8, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f8, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f8, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f29, 0(x2) # load 0x00007dff from memory into f29
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f19, 0(x2) # load 0x00000400 from memory into f19
la x2, scratch
li x3, 0x97138822 # load x3 with value 0x97138822
sw x3, 0(x2) # store 0x97138822 in memory
flh f16, 0(x2) # load 0x97138822 from memory into f16
fnmadd.h f20, f29, f19, f16, dyn # perform operation
fnmadd.h f20, f29, f19, f16, rdn # perform operation
fnmadd.h f20, f29, f19, f16, rmm # perform operation
fnmadd.h f20, f29, f19, f16, rne # perform operation
fnmadd.h f20, f29, f19, f16, rtz # perform operation
fnmadd.h f20, f29, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f29, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f29, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f29, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f29, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f29, f19, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f15, 0(x2) # load 0x00007dff from memory into f15
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f26, 0(x2) # load 0x00008400 from memory into f26
la x2, scratch
li x3, 0xb4b0bc88 # load x3 with value 0xb4b0bc88
sw x3, 0(x2) # store 0xb4b0bc88 in memory
flh f16, 0(x2) # load 0xb4b0bc88 from memory into f16
fnmadd.h f12, f15, f26, f16, dyn # perform operation
fnmadd.h f12, f15, f26, f16, rdn # perform operation
fnmadd.h f12, f15, f26, f16, rmm # perform operation
fnmadd.h f12, f15, f26, f16, rne # perform operation
fnmadd.h f12, f15, f26, f16, rtz # perform operation
fnmadd.h f12, f15, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f15, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f15, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f15, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f15, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f15, f26, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f9, 0(x2) # load 0x00007dff from memory into f9
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
la x2, scratch
li x3, 0x35e9990b # load x3 with value 0x35e9990b
sw x3, 0(x2) # store 0x35e9990b in memory
flh f8, 0(x2) # load 0x35e9990b from memory into f8
fnmadd.h f27, f9, f24, f8, dyn # perform operation
fnmadd.h f27, f9, f24, f8, rdn # perform operation
fnmadd.h f27, f9, f24, f8, rmm # perform operation
fnmadd.h f27, f9, f24, f8, rne # perform operation
fnmadd.h f27, f9, f24, f8, rtz # perform operation
fnmadd.h f27, f9, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f9, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f9, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f9, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f9, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f9, f24, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f11, 0(x2) # load 0x00007dff from memory into f11
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f25, 0(x2) # load 0x0000fbff from memory into f25
la x2, scratch
li x3, 0x442585ff # load x3 with value 0x442585ff
sw x3, 0(x2) # store 0x442585ff in memory
flh f26, 0(x2) # load 0x442585ff from memory into f26
fnmadd.h f3, f11, f25, f26, dyn # perform operation
fnmadd.h f3, f11, f25, f26, rdn # perform operation
fnmadd.h f3, f11, f25, f26, rmm # perform operation
fnmadd.h f3, f11, f25, f26, rne # perform operation
fnmadd.h f3, f11, f25, f26, rtz # perform operation
fnmadd.h f3, f11, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f11, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f11, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f11, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f11, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f11, f25, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f27, 0(x2) # load 0x00007dff from memory into f27
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f17, 0(x2) # load 0x000003ff from memory into f17
la x2, scratch
li x3, 0xb24ec580 # load x3 with value 0xb24ec580
sw x3, 0(x2) # store 0xb24ec580 in memory
flh f14, 0(x2) # load 0xb24ec580 from memory into f14
fnmadd.h f12, f27, f17, f14, dyn # perform operation
fnmadd.h f12, f27, f17, f14, rdn # perform operation
fnmadd.h f12, f27, f17, f14, rmm # perform operation
fnmadd.h f12, f27, f17, f14, rne # perform operation
fnmadd.h f12, f27, f17, f14, rtz # perform operation
fnmadd.h f12, f27, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f27, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f27, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f27, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f27, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f27, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f2, 0(x2) # load 0x00007dff from memory into f2
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f7, 0(x2) # load 0x000083ff from memory into f7
la x2, scratch
li x3, 0x8201cc12 # load x3 with value 0x8201cc12
sw x3, 0(x2) # store 0x8201cc12 in memory
flh f24, 0(x2) # load 0x8201cc12 from memory into f24
fnmadd.h f31, f2, f7, f24, dyn # perform operation
fnmadd.h f31, f2, f7, f24, rdn # perform operation
fnmadd.h f31, f2, f7, f24, rmm # perform operation
fnmadd.h f31, f2, f7, f24, rne # perform operation
fnmadd.h f31, f2, f7, f24, rtz # perform operation
fnmadd.h f31, f2, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f2, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f2, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f2, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f2, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f2, f7, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f14, 0(x2) # load 0x00007dff from memory into f14
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f10, 0(x2) # load 0x00000200 from memory into f10
la x2, scratch
li x3, 0x2597af4d # load x3 with value 0x2597af4d
sw x3, 0(x2) # store 0x2597af4d in memory
flh f21, 0(x2) # load 0x2597af4d from memory into f21
fnmadd.h f12, f14, f10, f21, dyn # perform operation
fnmadd.h f12, f14, f10, f21, rdn # perform operation
fnmadd.h f12, f14, f10, f21, rmm # perform operation
fnmadd.h f12, f14, f10, f21, rne # perform operation
fnmadd.h f12, f14, f10, f21, rtz # perform operation
fnmadd.h f12, f14, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f14, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f14, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f14, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f14, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f14, f10, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f6, 0(x2) # load 0x00007dff from memory into f6
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f19, 0(x2) # load 0x00008200 from memory into f19
la x2, scratch
li x3, 0x67705516 # load x3 with value 0x67705516
sw x3, 0(x2) # store 0x67705516 in memory
flh f12, 0(x2) # load 0x67705516 from memory into f12
fnmadd.h f14, f6, f19, f12, dyn # perform operation
fnmadd.h f14, f6, f19, f12, rdn # perform operation
fnmadd.h f14, f6, f19, f12, rmm # perform operation
fnmadd.h f14, f6, f19, f12, rne # perform operation
fnmadd.h f14, f6, f19, f12, rtz # perform operation
fnmadd.h f14, f6, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f6, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f6, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f6, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f6, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f6, f19, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f21, 0(x2) # load 0x00007dff from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0xe3d17781 # load x3 with value 0xe3d17781
sw x3, 0(x2) # store 0xe3d17781 in memory
flh f6, 0(x2) # load 0xe3d17781 from memory into f6
fnmadd.h f24, f21, f29, f6, dyn # perform operation
fnmadd.h f24, f21, f29, f6, rdn # perform operation
fnmadd.h f24, f21, f29, f6, rmm # perform operation
fnmadd.h f24, f21, f29, f6, rne # perform operation
fnmadd.h f24, f21, f29, f6, rtz # perform operation
fnmadd.h f24, f21, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f21, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f21, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f21, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f21, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f21, f29, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f15, 0(x2) # load 0x00007dff from memory into f15
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f6, 0(x2) # load 0x00008001 from memory into f6
la x2, scratch
li x3, 0x0b9eb59f # load x3 with value 0x0b9eb59f
sw x3, 0(x2) # store 0x0b9eb59f in memory
flh f31, 0(x2) # load 0x0b9eb59f from memory into f31
fnmadd.h f25, f15, f6, f31, dyn # perform operation
fnmadd.h f25, f15, f6, f31, rdn # perform operation
fnmadd.h f25, f15, f6, f31, rmm # perform operation
fnmadd.h f25, f15, f6, f31, rne # perform operation
fnmadd.h f25, f15, f6, f31, rtz # perform operation
fnmadd.h f25, f15, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f15, f6, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f24, 0(x2) # load 0x00007dff from memory into f24
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f17, 0(x2) # load 0x00007c00 from memory into f17
la x2, scratch
li x3, 0x7b9125bf # load x3 with value 0x7b9125bf
sw x3, 0(x2) # store 0x7b9125bf in memory
flh f2, 0(x2) # load 0x7b9125bf from memory into f2
fnmadd.h f16, f24, f17, f2, dyn # perform operation
fnmadd.h f16, f24, f17, f2, rdn # perform operation
fnmadd.h f16, f24, f17, f2, rmm # perform operation
fnmadd.h f16, f24, f17, f2, rne # perform operation
fnmadd.h f16, f24, f17, f2, rtz # perform operation
fnmadd.h f16, f24, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f24, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f24, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f24, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f24, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f24, f17, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f17, 0(x2) # load 0x00007dff from memory into f17
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f14, 0(x2) # load 0x0000fc00 from memory into f14
la x2, scratch
li x3, 0x8b177926 # load x3 with value 0x8b177926
sw x3, 0(x2) # store 0x8b177926 in memory
flh f7, 0(x2) # load 0x8b177926 from memory into f7
fnmadd.h f31, f17, f14, f7, dyn # perform operation
fnmadd.h f31, f17, f14, f7, rdn # perform operation
fnmadd.h f31, f17, f14, f7, rmm # perform operation
fnmadd.h f31, f17, f14, f7, rne # perform operation
fnmadd.h f31, f17, f14, f7, rtz # perform operation
fnmadd.h f31, f17, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f17, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f17, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f17, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f17, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f17, f14, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f15, 0(x2) # load 0x00007dff from memory into f15
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f27, 0(x2) # load 0x00007e00 from memory into f27
la x2, scratch
li x3, 0x4b4c9785 # load x3 with value 0x4b4c9785
sw x3, 0(x2) # store 0x4b4c9785 in memory
flh f22, 0(x2) # load 0x4b4c9785 from memory into f22
fnmadd.h f24, f15, f27, f22, dyn # perform operation
fnmadd.h f24, f15, f27, f22, rdn # perform operation
fnmadd.h f24, f15, f27, f22, rmm # perform operation
fnmadd.h f24, f15, f27, f22, rne # perform operation
fnmadd.h f24, f15, f27, f22, rtz # perform operation
fnmadd.h f24, f15, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f15, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f15, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f15, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f15, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f15, f27, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f9, 0(x2) # load 0x00007fff from memory into f9
la x2, scratch
li x3, 0x9e3b3452 # load x3 with value 0x9e3b3452
sw x3, 0(x2) # store 0x9e3b3452 in memory
flh f22, 0(x2) # load 0x9e3b3452 from memory into f22
fnmadd.h f16, f26, f9, f22, dyn # perform operation
fnmadd.h f16, f26, f9, f22, rdn # perform operation
fnmadd.h f16, f26, f9, f22, rmm # perform operation
fnmadd.h f16, f26, f9, f22, rne # perform operation
fnmadd.h f16, f26, f9, f22, rtz # perform operation
fnmadd.h f16, f26, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f26, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f26, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f26, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f26, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f26, f9, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f11, 0(x2) # load 0x00007dff from memory into f11
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f5, 0(x2) # load 0x0000fe00 from memory into f5
la x2, scratch
li x3, 0xccde9ced # load x3 with value 0xccde9ced
sw x3, 0(x2) # store 0xccde9ced in memory
flh f12, 0(x2) # load 0xccde9ced from memory into f12
fnmadd.h f16, f11, f5, f12, dyn # perform operation
fnmadd.h f16, f11, f5, f12, rdn # perform operation
fnmadd.h f16, f11, f5, f12, rmm # perform operation
fnmadd.h f16, f11, f5, f12, rne # perform operation
fnmadd.h f16, f11, f5, f12, rtz # perform operation
fnmadd.h f16, f11, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f11, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f11, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f11, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f11, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f11, f5, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f20, 0(x2) # load 0x00007dff from memory into f20
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f9, 0(x2) # load 0x00007c01 from memory into f9
la x2, scratch
li x3, 0x63deb236 # load x3 with value 0x63deb236
sw x3, 0(x2) # store 0x63deb236 in memory
flh f8, 0(x2) # load 0x63deb236 from memory into f8
fnmadd.h f11, f20, f9, f8, dyn # perform operation
fnmadd.h f11, f20, f9, f8, rdn # perform operation
fnmadd.h f11, f20, f9, f8, rmm # perform operation
fnmadd.h f11, f20, f9, f8, rne # perform operation
fnmadd.h f11, f20, f9, f8, rtz # perform operation
fnmadd.h f11, f20, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f20, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f20, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f20, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f20, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f20, f9, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f17, 0(x2) # load 0x00007dff from memory into f17
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f13, 0(x2) # load 0x00007dff from memory into f13
la x2, scratch
li x3, 0x025224f8 # load x3 with value 0x025224f8
sw x3, 0(x2) # store 0x025224f8 in memory
flh f11, 0(x2) # load 0x025224f8 from memory into f11
fnmadd.h f7, f17, f13, f11, dyn # perform operation
fnmadd.h f7, f17, f13, f11, rdn # perform operation
fnmadd.h f7, f17, f13, f11, rmm # perform operation
fnmadd.h f7, f17, f13, f11, rne # perform operation
fnmadd.h f7, f17, f13, f11, rtz # perform operation
fnmadd.h f7, f17, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f17, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f17, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f17, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f17, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f17, f13, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f1, 0(x2) # load 0x00007dff from memory into f1
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f15, 0(x2) # load 0x0000fc01 from memory into f15
la x2, scratch
li x3, 0x26ab1522 # load x3 with value 0x26ab1522
sw x3, 0(x2) # store 0x26ab1522 in memory
flh f7, 0(x2) # load 0x26ab1522 from memory into f7
fnmadd.h f6, f1, f15, f7, dyn # perform operation
fnmadd.h f6, f1, f15, f7, rdn # perform operation
fnmadd.h f6, f1, f15, f7, rmm # perform operation
fnmadd.h f6, f1, f15, f7, rne # perform operation
fnmadd.h f6, f1, f15, f7, rtz # perform operation
fnmadd.h f6, f1, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f1, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f1, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f1, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f1, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f1, f15, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f18, 0(x2) # load 0x00007dff from memory into f18
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f28, 0(x2) # load 0x000058b4 from memory into f28
la x2, scratch
li x3, 0x16fcb2fc # load x3 with value 0x16fcb2fc
sw x3, 0(x2) # store 0x16fcb2fc in memory
flh f7, 0(x2) # load 0x16fcb2fc from memory into f7
fnmadd.h f31, f18, f28, f7, dyn # perform operation
fnmadd.h f31, f18, f28, f7, rdn # perform operation
fnmadd.h f31, f18, f28, f7, rmm # perform operation
fnmadd.h f31, f18, f28, f7, rne # perform operation
fnmadd.h f31, f18, f28, f7, rtz # perform operation
fnmadd.h f31, f18, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f18, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f18, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f18, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f18, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f18, f28, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f27, 0(x2) # load 0x0000c93a from memory into f27
la x2, scratch
li x3, 0x8da35632 # load x3 with value 0x8da35632
sw x3, 0(x2) # store 0x8da35632 in memory
flh f9, 0(x2) # load 0x8da35632 from memory into f9
fnmadd.h f31, f26, f27, f9, dyn # perform operation
fnmadd.h f31, f26, f27, f9, rdn # perform operation
fnmadd.h f31, f26, f27, f9, rmm # perform operation
fnmadd.h f31, f26, f27, f9, rne # perform operation
fnmadd.h f31, f26, f27, f9, rtz # perform operation
fnmadd.h f31, f26, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f26, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f26, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f26, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f26, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f26, f27, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f17, 0(x2) # load 0x0000fc01 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0xa62bad75 # load x3 with value 0xa62bad75
sw x3, 0(x2) # store 0xa62bad75 in memory
flh f9, 0(x2) # load 0xa62bad75 from memory into f9
fnmadd.h f15, f17, f29, f9, dyn # perform operation
fnmadd.h f15, f17, f29, f9, rdn # perform operation
fnmadd.h f15, f17, f29, f9, rmm # perform operation
fnmadd.h f15, f17, f29, f9, rne # perform operation
fnmadd.h f15, f17, f29, f9, rtz # perform operation
fnmadd.h f15, f17, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f17, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f17, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f17, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f17, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f17, f29, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f30, 0(x2) # load 0x0000fc01 from memory into f30
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f26, 0(x2) # load 0x00008000 from memory into f26
la x2, scratch
li x3, 0xb6033ed2 # load x3 with value 0xb6033ed2
sw x3, 0(x2) # store 0xb6033ed2 in memory
flh f15, 0(x2) # load 0xb6033ed2 from memory into f15
fnmadd.h f21, f30, f26, f15, dyn # perform operation
fnmadd.h f21, f30, f26, f15, rdn # perform operation
fnmadd.h f21, f30, f26, f15, rmm # perform operation
fnmadd.h f21, f30, f26, f15, rne # perform operation
fnmadd.h f21, f30, f26, f15, rtz # perform operation
fnmadd.h f21, f30, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f30, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f30, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f30, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f30, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f30, f26, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f17, 0(x2) # load 0x0000fc01 from memory into f17
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f15, 0(x2) # load 0x00003c00 from memory into f15
la x2, scratch
li x3, 0xe7663f1c # load x3 with value 0xe7663f1c
sw x3, 0(x2) # store 0xe7663f1c in memory
flh f3, 0(x2) # load 0xe7663f1c from memory into f3
fnmadd.h f9, f17, f15, f3, dyn # perform operation
fnmadd.h f9, f17, f15, f3, rdn # perform operation
fnmadd.h f9, f17, f15, f3, rmm # perform operation
fnmadd.h f9, f17, f15, f3, rne # perform operation
fnmadd.h f9, f17, f15, f3, rtz # perform operation
fnmadd.h f9, f17, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f17, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f17, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f17, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f17, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f17, f15, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f21, 0(x2) # load 0x0000fc01 from memory into f21
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f29, 0(x2) # load 0x0000bc00 from memory into f29
la x2, scratch
li x3, 0xb7cdb736 # load x3 with value 0xb7cdb736
sw x3, 0(x2) # store 0xb7cdb736 in memory
flh f27, 0(x2) # load 0xb7cdb736 from memory into f27
fnmadd.h f22, f21, f29, f27, dyn # perform operation
fnmadd.h f22, f21, f29, f27, rdn # perform operation
fnmadd.h f22, f21, f29, f27, rmm # perform operation
fnmadd.h f22, f21, f29, f27, rne # perform operation
fnmadd.h f22, f21, f29, f27, rtz # perform operation
fnmadd.h f22, f21, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f21, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f21, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f21, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f21, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f21, f29, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f16, 0(x2) # load 0x0000fc01 from memory into f16
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
la x2, scratch
li x3, 0xa84cbf36 # load x3 with value 0xa84cbf36
sw x3, 0(x2) # store 0xa84cbf36 in memory
flh f26, 0(x2) # load 0xa84cbf36 from memory into f26
fnmadd.h f29, f16, f7, f26, dyn # perform operation
fnmadd.h f29, f16, f7, f26, rdn # perform operation
fnmadd.h f29, f16, f7, f26, rmm # perform operation
fnmadd.h f29, f16, f7, f26, rne # perform operation
fnmadd.h f29, f16, f7, f26, rtz # perform operation
fnmadd.h f29, f16, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f16, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f16, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f16, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f16, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f16, f7, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f16, 0(x2) # load 0x0000fc01 from memory into f16
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f10, 0(x2) # load 0x0000be00 from memory into f10
la x2, scratch
li x3, 0x1c13f792 # load x3 with value 0x1c13f792
sw x3, 0(x2) # store 0x1c13f792 in memory
flh f17, 0(x2) # load 0x1c13f792 from memory into f17
fnmadd.h f8, f16, f10, f17, dyn # perform operation
fnmadd.h f8, f16, f10, f17, rdn # perform operation
fnmadd.h f8, f16, f10, f17, rmm # perform operation
fnmadd.h f8, f16, f10, f17, rne # perform operation
fnmadd.h f8, f16, f10, f17, rtz # perform operation
fnmadd.h f8, f16, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f16, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f16, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f16, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f16, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f16, f10, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f9, 0(x2) # load 0x0000fc01 from memory into f9
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f31, 0(x2) # load 0x00004000 from memory into f31
la x2, scratch
li x3, 0xd309aba3 # load x3 with value 0xd309aba3
sw x3, 0(x2) # store 0xd309aba3 in memory
flh f11, 0(x2) # load 0xd309aba3 from memory into f11
fnmadd.h f12, f9, f31, f11, dyn # perform operation
fnmadd.h f12, f9, f31, f11, rdn # perform operation
fnmadd.h f12, f9, f31, f11, rmm # perform operation
fnmadd.h f12, f9, f31, f11, rne # perform operation
fnmadd.h f12, f9, f31, f11, rtz # perform operation
fnmadd.h f12, f9, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f9, f31, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f23, 0(x2) # load 0x0000fc01 from memory into f23
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f5, 0(x2) # load 0x0000c000 from memory into f5
la x2, scratch
li x3, 0x3af3618f # load x3 with value 0x3af3618f
sw x3, 0(x2) # store 0x3af3618f in memory
flh f31, 0(x2) # load 0x3af3618f from memory into f31
fnmadd.h f18, f23, f5, f31, dyn # perform operation
fnmadd.h f18, f23, f5, f31, rdn # perform operation
fnmadd.h f18, f23, f5, f31, rmm # perform operation
fnmadd.h f18, f23, f5, f31, rne # perform operation
fnmadd.h f18, f23, f5, f31, rtz # perform operation
fnmadd.h f18, f23, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f23, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f23, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f23, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f23, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f23, f5, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f7, 0(x2) # load 0x0000fc01 from memory into f7
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f9, 0(x2) # load 0x00000400 from memory into f9
la x2, scratch
li x3, 0xa1e4f185 # load x3 with value 0xa1e4f185
sw x3, 0(x2) # store 0xa1e4f185 in memory
flh f6, 0(x2) # load 0xa1e4f185 from memory into f6
fnmadd.h f3, f7, f9, f6, dyn # perform operation
fnmadd.h f3, f7, f9, f6, rdn # perform operation
fnmadd.h f3, f7, f9, f6, rmm # perform operation
fnmadd.h f3, f7, f9, f6, rne # perform operation
fnmadd.h f3, f7, f9, f6, rtz # perform operation
fnmadd.h f3, f7, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f7, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f7, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f7, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f7, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f7, f9, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f21, 0(x2) # load 0x0000fc01 from memory into f21
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f25, 0(x2) # load 0x00008400 from memory into f25
la x2, scratch
li x3, 0xe43161ce # load x3 with value 0xe43161ce
sw x3, 0(x2) # store 0xe43161ce in memory
flh f13, 0(x2) # load 0xe43161ce from memory into f13
fnmadd.h f1, f21, f25, f13, dyn # perform operation
fnmadd.h f1, f21, f25, f13, rdn # perform operation
fnmadd.h f1, f21, f25, f13, rmm # perform operation
fnmadd.h f1, f21, f25, f13, rne # perform operation
fnmadd.h f1, f21, f25, f13, rtz # perform operation
fnmadd.h f1, f21, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f21, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f21, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f21, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f21, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f21, f25, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f8, 0(x2) # load 0x0000fc01 from memory into f8
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f21, 0(x2) # load 0x00007bff from memory into f21
la x2, scratch
li x3, 0x46f8aaa8 # load x3 with value 0x46f8aaa8
sw x3, 0(x2) # store 0x46f8aaa8 in memory
flh f14, 0(x2) # load 0x46f8aaa8 from memory into f14
fnmadd.h f11, f8, f21, f14, dyn # perform operation
fnmadd.h f11, f8, f21, f14, rdn # perform operation
fnmadd.h f11, f8, f21, f14, rmm # perform operation
fnmadd.h f11, f8, f21, f14, rne # perform operation
fnmadd.h f11, f8, f21, f14, rtz # perform operation
fnmadd.h f11, f8, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f8, f21, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f15, 0(x2) # load 0x0000fc01 from memory into f15
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f21, 0(x2) # load 0x0000fbff from memory into f21
la x2, scratch
li x3, 0xc5fa4a41 # load x3 with value 0xc5fa4a41
sw x3, 0(x2) # store 0xc5fa4a41 in memory
flh f18, 0(x2) # load 0xc5fa4a41 from memory into f18
fnmadd.h f2, f15, f21, f18, dyn # perform operation
fnmadd.h f2, f15, f21, f18, rdn # perform operation
fnmadd.h f2, f15, f21, f18, rmm # perform operation
fnmadd.h f2, f15, f21, f18, rne # perform operation
fnmadd.h f2, f15, f21, f18, rtz # perform operation
fnmadd.h f2, f15, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f15, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f15, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f15, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f15, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f15, f21, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f28, 0(x2) # load 0x0000fc01 from memory into f28
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f17, 0(x2) # load 0x000003ff from memory into f17
la x2, scratch
li x3, 0xe71b91c7 # load x3 with value 0xe71b91c7
sw x3, 0(x2) # store 0xe71b91c7 in memory
flh f27, 0(x2) # load 0xe71b91c7 from memory into f27
fnmadd.h f18, f28, f17, f27, dyn # perform operation
fnmadd.h f18, f28, f17, f27, rdn # perform operation
fnmadd.h f18, f28, f17, f27, rmm # perform operation
fnmadd.h f18, f28, f17, f27, rne # perform operation
fnmadd.h f18, f28, f17, f27, rtz # perform operation
fnmadd.h f18, f28, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f28, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f28, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f28, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f28, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f28, f17, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f29, 0(x2) # load 0x0000fc01 from memory into f29
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
la x2, scratch
li x3, 0xdf309bbe # load x3 with value 0xdf309bbe
sw x3, 0(x2) # store 0xdf309bbe in memory
flh f13, 0(x2) # load 0xdf309bbe from memory into f13
fnmadd.h f6, f29, f17, f13, dyn # perform operation
fnmadd.h f6, f29, f17, f13, rdn # perform operation
fnmadd.h f6, f29, f17, f13, rmm # perform operation
fnmadd.h f6, f29, f17, f13, rne # perform operation
fnmadd.h f6, f29, f17, f13, rtz # perform operation
fnmadd.h f6, f29, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f29, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f29, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f29, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f29, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f29, f17, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f12, 0(x2) # load 0x0000fc01 from memory into f12
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f14, 0(x2) # load 0x00000200 from memory into f14
la x2, scratch
li x3, 0x8b6df16a # load x3 with value 0x8b6df16a
sw x3, 0(x2) # store 0x8b6df16a in memory
flh f1, 0(x2) # load 0x8b6df16a from memory into f1
fnmadd.h f17, f12, f14, f1, dyn # perform operation
fnmadd.h f17, f12, f14, f1, rdn # perform operation
fnmadd.h f17, f12, f14, f1, rmm # perform operation
fnmadd.h f17, f12, f14, f1, rne # perform operation
fnmadd.h f17, f12, f14, f1, rtz # perform operation
fnmadd.h f17, f12, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f12, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f12, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f12, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f12, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f12, f14, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f27, 0(x2) # load 0x0000fc01 from memory into f27
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f10, 0(x2) # load 0x00008200 from memory into f10
la x2, scratch
li x3, 0xa4789869 # load x3 with value 0xa4789869
sw x3, 0(x2) # store 0xa4789869 in memory
flh f16, 0(x2) # load 0xa4789869 from memory into f16
fnmadd.h f24, f27, f10, f16, dyn # perform operation
fnmadd.h f24, f27, f10, f16, rdn # perform operation
fnmadd.h f24, f27, f10, f16, rmm # perform operation
fnmadd.h f24, f27, f10, f16, rne # perform operation
fnmadd.h f24, f27, f10, f16, rtz # perform operation
fnmadd.h f24, f27, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f27, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f27, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f27, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f27, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f27, f10, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f28, 0(x2) # load 0x0000fc01 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0xea9dab74 # load x3 with value 0xea9dab74
sw x3, 0(x2) # store 0xea9dab74 in memory
flh f22, 0(x2) # load 0xea9dab74 from memory into f22
fnmadd.h f6, f28, f3, f22, dyn # perform operation
fnmadd.h f6, f28, f3, f22, rdn # perform operation
fnmadd.h f6, f28, f3, f22, rmm # perform operation
fnmadd.h f6, f28, f3, f22, rne # perform operation
fnmadd.h f6, f28, f3, f22, rtz # perform operation
fnmadd.h f6, f28, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f28, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f28, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f28, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f28, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f28, f3, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f20, 0(x2) # load 0x0000fc01 from memory into f20
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f10, 0(x2) # load 0x00008001 from memory into f10
la x2, scratch
li x3, 0xf646696e # load x3 with value 0xf646696e
sw x3, 0(x2) # store 0xf646696e in memory
flh f23, 0(x2) # load 0xf646696e from memory into f23
fnmadd.h f21, f20, f10, f23, dyn # perform operation
fnmadd.h f21, f20, f10, f23, rdn # perform operation
fnmadd.h f21, f20, f10, f23, rmm # perform operation
fnmadd.h f21, f20, f10, f23, rne # perform operation
fnmadd.h f21, f20, f10, f23, rtz # perform operation
fnmadd.h f21, f20, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f20, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f20, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f20, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f20, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f20, f10, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f15, 0(x2) # load 0x0000fc01 from memory into f15
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f25, 0(x2) # load 0x00007c00 from memory into f25
la x2, scratch
li x3, 0x11d12cbc # load x3 with value 0x11d12cbc
sw x3, 0(x2) # store 0x11d12cbc in memory
flh f11, 0(x2) # load 0x11d12cbc from memory into f11
fnmadd.h f26, f15, f25, f11, dyn # perform operation
fnmadd.h f26, f15, f25, f11, rdn # perform operation
fnmadd.h f26, f15, f25, f11, rmm # perform operation
fnmadd.h f26, f15, f25, f11, rne # perform operation
fnmadd.h f26, f15, f25, f11, rtz # perform operation
fnmadd.h f26, f15, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f15, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f1, 0(x2) # load 0x0000fc01 from memory into f1
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f10, 0(x2) # load 0x0000fc00 from memory into f10
la x2, scratch
li x3, 0x74494002 # load x3 with value 0x74494002
sw x3, 0(x2) # store 0x74494002 in memory
flh f17, 0(x2) # load 0x74494002 from memory into f17
fnmadd.h f21, f1, f10, f17, dyn # perform operation
fnmadd.h f21, f1, f10, f17, rdn # perform operation
fnmadd.h f21, f1, f10, f17, rmm # perform operation
fnmadd.h f21, f1, f10, f17, rne # perform operation
fnmadd.h f21, f1, f10, f17, rtz # perform operation
fnmadd.h f21, f1, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f1, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f1, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f1, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f1, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f1, f10, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f24, 0(x2) # load 0x0000fc01 from memory into f24
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f23, 0(x2) # load 0x00007e00 from memory into f23
la x2, scratch
li x3, 0x63d00cfe # load x3 with value 0x63d00cfe
sw x3, 0(x2) # store 0x63d00cfe in memory
flh f18, 0(x2) # load 0x63d00cfe from memory into f18
fnmadd.h f1, f24, f23, f18, dyn # perform operation
fnmadd.h f1, f24, f23, f18, rdn # perform operation
fnmadd.h f1, f24, f23, f18, rmm # perform operation
fnmadd.h f1, f24, f23, f18, rne # perform operation
fnmadd.h f1, f24, f23, f18, rtz # perform operation
fnmadd.h f1, f24, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f24, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f24, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f24, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f24, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f24, f23, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f19, 0(x2) # load 0x0000fc01 from memory into f19
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f20, 0(x2) # load 0x00007fff from memory into f20
la x2, scratch
li x3, 0x69ab51a2 # load x3 with value 0x69ab51a2
sw x3, 0(x2) # store 0x69ab51a2 in memory
flh f15, 0(x2) # load 0x69ab51a2 from memory into f15
fnmadd.h f6, f19, f20, f15, dyn # perform operation
fnmadd.h f6, f19, f20, f15, rdn # perform operation
fnmadd.h f6, f19, f20, f15, rmm # perform operation
fnmadd.h f6, f19, f20, f15, rne # perform operation
fnmadd.h f6, f19, f20, f15, rtz # perform operation
fnmadd.h f6, f19, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f19, f20, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f23, 0(x2) # load 0x0000fc01 from memory into f23
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f3, 0(x2) # load 0x0000fe00 from memory into f3
la x2, scratch
li x3, 0x7f70d39c # load x3 with value 0x7f70d39c
sw x3, 0(x2) # store 0x7f70d39c in memory
flh f27, 0(x2) # load 0x7f70d39c from memory into f27
fnmadd.h f8, f23, f3, f27, dyn # perform operation
fnmadd.h f8, f23, f3, f27, rdn # perform operation
fnmadd.h f8, f23, f3, f27, rmm # perform operation
fnmadd.h f8, f23, f3, f27, rne # perform operation
fnmadd.h f8, f23, f3, f27, rtz # perform operation
fnmadd.h f8, f23, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f23, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f23, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f23, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f23, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f23, f3, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f13, 0(x2) # load 0x0000fc01 from memory into f13
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
la x2, scratch
li x3, 0xe9d92aa7 # load x3 with value 0xe9d92aa7
sw x3, 0(x2) # store 0xe9d92aa7 in memory
flh f30, 0(x2) # load 0xe9d92aa7 from memory into f30
fnmadd.h f8, f13, f20, f30, dyn # perform operation
fnmadd.h f8, f13, f20, f30, rdn # perform operation
fnmadd.h f8, f13, f20, f30, rmm # perform operation
fnmadd.h f8, f13, f20, f30, rne # perform operation
fnmadd.h f8, f13, f20, f30, rtz # perform operation
fnmadd.h f8, f13, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f13, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f13, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f13, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f13, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f13, f20, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f24, 0(x2) # load 0x0000fc01 from memory into f24
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f28, 0(x2) # load 0x00007dff from memory into f28
la x2, scratch
li x3, 0xae0038d4 # load x3 with value 0xae0038d4
sw x3, 0(x2) # store 0xae0038d4 in memory
flh f9, 0(x2) # load 0xae0038d4 from memory into f9
fnmadd.h f1, f24, f28, f9, dyn # perform operation
fnmadd.h f1, f24, f28, f9, rdn # perform operation
fnmadd.h f1, f24, f28, f9, rmm # perform operation
fnmadd.h f1, f24, f28, f9, rne # perform operation
fnmadd.h f1, f24, f28, f9, rtz # perform operation
fnmadd.h f1, f24, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f24, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f24, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f24, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f24, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f24, f28, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f12, 0(x2) # load 0x0000fc01 from memory into f12
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f1, 0(x2) # load 0x0000fc01 from memory into f1
la x2, scratch
li x3, 0x4b593152 # load x3 with value 0x4b593152
sw x3, 0(x2) # store 0x4b593152 in memory
flh f13, 0(x2) # load 0x4b593152 from memory into f13
fnmadd.h f16, f12, f1, f13, dyn # perform operation
fnmadd.h f16, f12, f1, f13, rdn # perform operation
fnmadd.h f16, f12, f1, f13, rmm # perform operation
fnmadd.h f16, f12, f1, f13, rne # perform operation
fnmadd.h f16, f12, f1, f13, rtz # perform operation
fnmadd.h f16, f12, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f12, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f12, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f12, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f12, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f12, f1, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f1, 0(x2) # load 0x0000fc01 from memory into f1
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f15, 0(x2) # load 0x000058b4 from memory into f15
la x2, scratch
li x3, 0x2d49599d # load x3 with value 0x2d49599d
sw x3, 0(x2) # store 0x2d49599d in memory
flh f26, 0(x2) # load 0x2d49599d from memory into f26
fnmadd.h f25, f1, f15, f26, dyn # perform operation
fnmadd.h f25, f1, f15, f26, rdn # perform operation
fnmadd.h f25, f1, f15, f26, rmm # perform operation
fnmadd.h f25, f1, f15, f26, rne # perform operation
fnmadd.h f25, f1, f15, f26, rtz # perform operation
fnmadd.h f25, f1, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f1, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f1, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f1, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f1, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f1, f15, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc01 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f31, 0(x2) # load 0x0000fc01 from memory into f31
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f5, 0(x2) # load 0x0000c93a from memory into f5
la x2, scratch
li x3, 0x70c9be78 # load x3 with value 0x70c9be78
sw x3, 0(x2) # store 0x70c9be78 in memory
flh f29, 0(x2) # load 0x70c9be78 from memory into f29
fnmadd.h f27, f31, f5, f29, dyn # perform operation
fnmadd.h f27, f31, f5, f29, rdn # perform operation
fnmadd.h f27, f31, f5, f29, rmm # perform operation
fnmadd.h f27, f31, f5, f29, rne # perform operation
fnmadd.h f27, f31, f5, f29, rtz # perform operation
fnmadd.h f27, f31, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f31, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f31, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f31, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f31, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f31, f5, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x14824cbc # load x3 with value 0x14824cbc
sw x3, 0(x2) # store 0x14824cbc in memory
flh f9, 0(x2) # load 0x14824cbc from memory into f9
fnmadd.h f18, f25, f2, f9, dyn # perform operation
fnmadd.h f18, f25, f2, f9, rdn # perform operation
fnmadd.h f18, f25, f2, f9, rmm # perform operation
fnmadd.h f18, f25, f2, f9, rne # perform operation
fnmadd.h f18, f25, f2, f9, rtz # perform operation
fnmadd.h f18, f25, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f25, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f25, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f25, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f25, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f25, f2, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f8, 0(x2) # load 0x000058b4 from memory into f8
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f13, 0(x2) # load 0x00008000 from memory into f13
la x2, scratch
li x3, 0xa2db7e3e # load x3 with value 0xa2db7e3e
sw x3, 0(x2) # store 0xa2db7e3e in memory
flh f27, 0(x2) # load 0xa2db7e3e from memory into f27
fnmadd.h f28, f8, f13, f27, dyn # perform operation
fnmadd.h f28, f8, f13, f27, rdn # perform operation
fnmadd.h f28, f8, f13, f27, rmm # perform operation
fnmadd.h f28, f8, f13, f27, rne # perform operation
fnmadd.h f28, f8, f13, f27, rtz # perform operation
fnmadd.h f28, f8, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f8, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f8, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f8, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f8, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f8, f13, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f10, 0(x2) # load 0x000058b4 from memory into f10
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
la x2, scratch
li x3, 0x6fe70b37 # load x3 with value 0x6fe70b37
sw x3, 0(x2) # store 0x6fe70b37 in memory
flh f18, 0(x2) # load 0x6fe70b37 from memory into f18
fnmadd.h f14, f10, f16, f18, dyn # perform operation
fnmadd.h f14, f10, f16, f18, rdn # perform operation
fnmadd.h f14, f10, f16, f18, rmm # perform operation
fnmadd.h f14, f10, f16, f18, rne # perform operation
fnmadd.h f14, f10, f16, f18, rtz # perform operation
fnmadd.h f14, f10, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f10, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f10, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f10, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f10, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f10, f16, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f11, 0(x2) # load 0x000058b4 from memory into f11
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f3, 0(x2) # load 0x0000bc00 from memory into f3
la x2, scratch
li x3, 0x6e92a371 # load x3 with value 0x6e92a371
sw x3, 0(x2) # store 0x6e92a371 in memory
flh f20, 0(x2) # load 0x6e92a371 from memory into f20
fnmadd.h f1, f11, f3, f20, dyn # perform operation
fnmadd.h f1, f11, f3, f20, rdn # perform operation
fnmadd.h f1, f11, f3, f20, rmm # perform operation
fnmadd.h f1, f11, f3, f20, rne # perform operation
fnmadd.h f1, f11, f3, f20, rtz # perform operation
fnmadd.h f1, f11, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f11, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f11, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f11, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f11, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f11, f3, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f24, 0(x2) # load 0x000058b4 from memory into f24
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f20, 0(x2) # load 0x00003e00 from memory into f20
la x2, scratch
li x3, 0x0ef60f1e # load x3 with value 0x0ef60f1e
sw x3, 0(x2) # store 0x0ef60f1e in memory
flh f1, 0(x2) # load 0x0ef60f1e from memory into f1
fnmadd.h f5, f24, f20, f1, dyn # perform operation
fnmadd.h f5, f24, f20, f1, rdn # perform operation
fnmadd.h f5, f24, f20, f1, rmm # perform operation
fnmadd.h f5, f24, f20, f1, rne # perform operation
fnmadd.h f5, f24, f20, f1, rtz # perform operation
fnmadd.h f5, f24, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f24, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f24, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f24, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f24, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f24, f20, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f22, 0(x2) # load 0x000058b4 from memory into f22
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f29, 0(x2) # load 0x0000be00 from memory into f29
la x2, scratch
li x3, 0xfa235a93 # load x3 with value 0xfa235a93
sw x3, 0(x2) # store 0xfa235a93 in memory
flh f5, 0(x2) # load 0xfa235a93 from memory into f5
fnmadd.h f30, f22, f29, f5, dyn # perform operation
fnmadd.h f30, f22, f29, f5, rdn # perform operation
fnmadd.h f30, f22, f29, f5, rmm # perform operation
fnmadd.h f30, f22, f29, f5, rne # perform operation
fnmadd.h f30, f22, f29, f5, rtz # perform operation
fnmadd.h f30, f22, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f22, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f22, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f22, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f22, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f22, f29, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f16, 0(x2) # load 0x000058b4 from memory into f16
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f29, 0(x2) # load 0x00004000 from memory into f29
la x2, scratch
li x3, 0xecd1493f # load x3 with value 0xecd1493f
sw x3, 0(x2) # store 0xecd1493f in memory
flh f22, 0(x2) # load 0xecd1493f from memory into f22
fnmadd.h f7, f16, f29, f22, dyn # perform operation
fnmadd.h f7, f16, f29, f22, rdn # perform operation
fnmadd.h f7, f16, f29, f22, rmm # perform operation
fnmadd.h f7, f16, f29, f22, rne # perform operation
fnmadd.h f7, f16, f29, f22, rtz # perform operation
fnmadd.h f7, f16, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f16, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f16, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f16, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f16, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f16, f29, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f24, 0(x2) # load 0x000058b4 from memory into f24
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
la x2, scratch
li x3, 0xb8dc36ec # load x3 with value 0xb8dc36ec
sw x3, 0(x2) # store 0xb8dc36ec in memory
flh f3, 0(x2) # load 0xb8dc36ec from memory into f3
fnmadd.h f6, f24, f2, f3, dyn # perform operation
fnmadd.h f6, f24, f2, f3, rdn # perform operation
fnmadd.h f6, f24, f2, f3, rmm # perform operation
fnmadd.h f6, f24, f2, f3, rne # perform operation
fnmadd.h f6, f24, f2, f3, rtz # perform operation
fnmadd.h f6, f24, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f24, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f24, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f24, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f24, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f24, f2, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f17, 0(x2) # load 0x000058b4 from memory into f17
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f5, 0(x2) # load 0x00000400 from memory into f5
la x2, scratch
li x3, 0xecd65774 # load x3 with value 0xecd65774
sw x3, 0(x2) # store 0xecd65774 in memory
flh f25, 0(x2) # load 0xecd65774 from memory into f25
fnmadd.h f11, f17, f5, f25, dyn # perform operation
fnmadd.h f11, f17, f5, f25, rdn # perform operation
fnmadd.h f11, f17, f5, f25, rmm # perform operation
fnmadd.h f11, f17, f5, f25, rne # perform operation
fnmadd.h f11, f17, f5, f25, rtz # perform operation
fnmadd.h f11, f17, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f17, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f17, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f17, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f17, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f17, f5, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f15, 0(x2) # load 0x000058b4 from memory into f15
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f12, 0(x2) # load 0x00008400 from memory into f12
la x2, scratch
li x3, 0x46de488a # load x3 with value 0x46de488a
sw x3, 0(x2) # store 0x46de488a in memory
flh f8, 0(x2) # load 0x46de488a from memory into f8
fnmadd.h f22, f15, f12, f8, dyn # perform operation
fnmadd.h f22, f15, f12, f8, rdn # perform operation
fnmadd.h f22, f15, f12, f8, rmm # perform operation
fnmadd.h f22, f15, f12, f8, rne # perform operation
fnmadd.h f22, f15, f12, f8, rtz # perform operation
fnmadd.h f22, f15, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f15, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f15, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f15, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f15, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f15, f12, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f8, 0(x2) # load 0x000058b4 from memory into f8
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f5, 0(x2) # load 0x00007bff from memory into f5
la x2, scratch
li x3, 0x427073db # load x3 with value 0x427073db
sw x3, 0(x2) # store 0x427073db in memory
flh f7, 0(x2) # load 0x427073db from memory into f7
fnmadd.h f31, f8, f5, f7, dyn # perform operation
fnmadd.h f31, f8, f5, f7, rdn # perform operation
fnmadd.h f31, f8, f5, f7, rmm # perform operation
fnmadd.h f31, f8, f5, f7, rne # perform operation
fnmadd.h f31, f8, f5, f7, rtz # perform operation
fnmadd.h f31, f8, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f8, f5, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f2, 0(x2) # load 0x000058b4 from memory into f2
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f18, 0(x2) # load 0x0000fbff from memory into f18
la x2, scratch
li x3, 0x821e2a5f # load x3 with value 0x821e2a5f
sw x3, 0(x2) # store 0x821e2a5f in memory
flh f16, 0(x2) # load 0x821e2a5f from memory into f16
fnmadd.h f20, f2, f18, f16, dyn # perform operation
fnmadd.h f20, f2, f18, f16, rdn # perform operation
fnmadd.h f20, f2, f18, f16, rmm # perform operation
fnmadd.h f20, f2, f18, f16, rne # perform operation
fnmadd.h f20, f2, f18, f16, rtz # perform operation
fnmadd.h f20, f2, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f2, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f2, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f2, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f2, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f2, f18, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f23, 0(x2) # load 0x000058b4 from memory into f23
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f22, 0(x2) # load 0x000003ff from memory into f22
la x2, scratch
li x3, 0x0b9abbac # load x3 with value 0x0b9abbac
sw x3, 0(x2) # store 0x0b9abbac in memory
flh f31, 0(x2) # load 0x0b9abbac from memory into f31
fnmadd.h f19, f23, f22, f31, dyn # perform operation
fnmadd.h f19, f23, f22, f31, rdn # perform operation
fnmadd.h f19, f23, f22, f31, rmm # perform operation
fnmadd.h f19, f23, f22, f31, rne # perform operation
fnmadd.h f19, f23, f22, f31, rtz # perform operation
fnmadd.h f19, f23, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f23, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f23, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f23, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f23, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f23, f22, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f3, 0(x2) # load 0x000083ff from memory into f3
la x2, scratch
li x3, 0x7589b1a2 # load x3 with value 0x7589b1a2
sw x3, 0(x2) # store 0x7589b1a2 in memory
flh f11, 0(x2) # load 0x7589b1a2 from memory into f11
fnmadd.h f14, f21, f3, f11, dyn # perform operation
fnmadd.h f14, f21, f3, f11, rdn # perform operation
fnmadd.h f14, f21, f3, f11, rmm # perform operation
fnmadd.h f14, f21, f3, f11, rne # perform operation
fnmadd.h f14, f21, f3, f11, rtz # perform operation
fnmadd.h f14, f21, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f21, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f21, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f21, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f21, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f21, f3, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f1, 0(x2) # load 0x000058b4 from memory into f1
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
la x2, scratch
li x3, 0x8eaf80bc # load x3 with value 0x8eaf80bc
sw x3, 0(x2) # store 0x8eaf80bc in memory
flh f25, 0(x2) # load 0x8eaf80bc from memory into f25
fnmadd.h f19, f1, f24, f25, dyn # perform operation
fnmadd.h f19, f1, f24, f25, rdn # perform operation
fnmadd.h f19, f1, f24, f25, rmm # perform operation
fnmadd.h f19, f1, f24, f25, rne # perform operation
fnmadd.h f19, f1, f24, f25, rtz # perform operation
fnmadd.h f19, f1, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f1, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f1, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f1, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f1, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f1, f24, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f8, 0(x2) # load 0x00008200 from memory into f8
la x2, scratch
li x3, 0x39fa0eac # load x3 with value 0x39fa0eac
sw x3, 0(x2) # store 0x39fa0eac in memory
flh f23, 0(x2) # load 0x39fa0eac from memory into f23
fnmadd.h f6, f21, f8, f23, dyn # perform operation
fnmadd.h f6, f21, f8, f23, rdn # perform operation
fnmadd.h f6, f21, f8, f23, rmm # perform operation
fnmadd.h f6, f21, f8, f23, rne # perform operation
fnmadd.h f6, f21, f8, f23, rtz # perform operation
fnmadd.h f6, f21, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f21, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f21, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f21, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f21, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f21, f8, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f22, 0(x2) # load 0x000058b4 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x65e6eb2a # load x3 with value 0x65e6eb2a
sw x3, 0(x2) # store 0x65e6eb2a in memory
flh f28, 0(x2) # load 0x65e6eb2a from memory into f28
fnmadd.h f19, f22, f12, f28, dyn # perform operation
fnmadd.h f19, f22, f12, f28, rdn # perform operation
fnmadd.h f19, f22, f12, f28, rmm # perform operation
fnmadd.h f19, f22, f12, f28, rne # perform operation
fnmadd.h f19, f22, f12, f28, rtz # perform operation
fnmadd.h f19, f22, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f22, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f22, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f22, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f22, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f22, f12, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f22, 0(x2) # load 0x000058b4 from memory into f22
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
la x2, scratch
li x3, 0x7b7291df # load x3 with value 0x7b7291df
sw x3, 0(x2) # store 0x7b7291df in memory
flh f3, 0(x2) # load 0x7b7291df from memory into f3
fnmadd.h f20, f22, f7, f3, dyn # perform operation
fnmadd.h f20, f22, f7, f3, rdn # perform operation
fnmadd.h f20, f22, f7, f3, rmm # perform operation
fnmadd.h f20, f22, f7, f3, rne # perform operation
fnmadd.h f20, f22, f7, f3, rtz # perform operation
fnmadd.h f20, f22, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f22, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f22, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f22, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f22, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f22, f7, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f26, 0(x2) # load 0x000058b4 from memory into f26
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f16, 0(x2) # load 0x00007c00 from memory into f16
la x2, scratch
li x3, 0x87d2610a # load x3 with value 0x87d2610a
sw x3, 0(x2) # store 0x87d2610a in memory
flh f9, 0(x2) # load 0x87d2610a from memory into f9
fnmadd.h f15, f26, f16, f9, dyn # perform operation
fnmadd.h f15, f26, f16, f9, rdn # perform operation
fnmadd.h f15, f26, f16, f9, rmm # perform operation
fnmadd.h f15, f26, f16, f9, rne # perform operation
fnmadd.h f15, f26, f16, f9, rtz # perform operation
fnmadd.h f15, f26, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f26, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f26, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f26, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f26, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f26, f16, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f22, 0(x2) # load 0x000058b4 from memory into f22
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f3, 0(x2) # load 0x0000fc00 from memory into f3
la x2, scratch
li x3, 0x7cf2826b # load x3 with value 0x7cf2826b
sw x3, 0(x2) # store 0x7cf2826b in memory
flh f5, 0(x2) # load 0x7cf2826b from memory into f5
fnmadd.h f28, f22, f3, f5, dyn # perform operation
fnmadd.h f28, f22, f3, f5, rdn # perform operation
fnmadd.h f28, f22, f3, f5, rmm # perform operation
fnmadd.h f28, f22, f3, f5, rne # perform operation
fnmadd.h f28, f22, f3, f5, rtz # perform operation
fnmadd.h f28, f22, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f22, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f22, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f22, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f22, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f22, f3, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f31, 0(x2) # load 0x000058b4 from memory into f31
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f6, 0(x2) # load 0x00007e00 from memory into f6
la x2, scratch
li x3, 0x40a66852 # load x3 with value 0x40a66852
sw x3, 0(x2) # store 0x40a66852 in memory
flh f16, 0(x2) # load 0x40a66852 from memory into f16
fnmadd.h f2, f31, f6, f16, dyn # perform operation
fnmadd.h f2, f31, f6, f16, rdn # perform operation
fnmadd.h f2, f31, f6, f16, rmm # perform operation
fnmadd.h f2, f31, f6, f16, rne # perform operation
fnmadd.h f2, f31, f6, f16, rtz # perform operation
fnmadd.h f2, f31, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f31, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f31, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f31, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f31, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f31, f6, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f3, 0(x2) # load 0x000058b4 from memory into f3
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f20, 0(x2) # load 0x00007fff from memory into f20
la x2, scratch
li x3, 0xcbca8c72 # load x3 with value 0xcbca8c72
sw x3, 0(x2) # store 0xcbca8c72 in memory
flh f31, 0(x2) # load 0xcbca8c72 from memory into f31
fnmadd.h f10, f3, f20, f31, dyn # perform operation
fnmadd.h f10, f3, f20, f31, rdn # perform operation
fnmadd.h f10, f3, f20, f31, rmm # perform operation
fnmadd.h f10, f3, f20, f31, rne # perform operation
fnmadd.h f10, f3, f20, f31, rtz # perform operation
fnmadd.h f10, f3, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f3, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f3, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f3, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f3, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f3, f20, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f27, 0(x2) # load 0x0000fe00 from memory into f27
la x2, scratch
li x3, 0x91e77386 # load x3 with value 0x91e77386
sw x3, 0(x2) # store 0x91e77386 in memory
flh f15, 0(x2) # load 0x91e77386 from memory into f15
fnmadd.h f19, f13, f27, f15, dyn # perform operation
fnmadd.h f19, f13, f27, f15, rdn # perform operation
fnmadd.h f19, f13, f27, f15, rmm # perform operation
fnmadd.h f19, f13, f27, f15, rne # perform operation
fnmadd.h f19, f13, f27, f15, rtz # perform operation
fnmadd.h f19, f13, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f13, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f13, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f13, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f13, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f13, f27, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f2, 0(x2) # load 0x000058b4 from memory into f2
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f9, 0(x2) # load 0x00007c01 from memory into f9
la x2, scratch
li x3, 0xc6efcff0 # load x3 with value 0xc6efcff0
sw x3, 0(x2) # store 0xc6efcff0 in memory
flh f23, 0(x2) # load 0xc6efcff0 from memory into f23
fnmadd.h f29, f2, f9, f23, dyn # perform operation
fnmadd.h f29, f2, f9, f23, rdn # perform operation
fnmadd.h f29, f2, f9, f23, rmm # perform operation
fnmadd.h f29, f2, f9, f23, rne # perform operation
fnmadd.h f29, f2, f9, f23, rtz # perform operation
fnmadd.h f29, f2, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f2, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f2, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f2, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f2, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f2, f9, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f9, 0(x2) # load 0x00007dff from memory into f9
la x2, scratch
li x3, 0x12f1d6e3 # load x3 with value 0x12f1d6e3
sw x3, 0(x2) # store 0x12f1d6e3 in memory
flh f20, 0(x2) # load 0x12f1d6e3 from memory into f20
fnmadd.h f21, f13, f9, f20, dyn # perform operation
fnmadd.h f21, f13, f9, f20, rdn # perform operation
fnmadd.h f21, f13, f9, f20, rmm # perform operation
fnmadd.h f21, f13, f9, f20, rne # perform operation
fnmadd.h f21, f13, f9, f20, rtz # perform operation
fnmadd.h f21, f13, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f13, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f13, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f13, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f13, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f13, f9, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f18, 0(x2) # load 0x000058b4 from memory into f18
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f25, 0(x2) # load 0x0000fc01 from memory into f25
la x2, scratch
li x3, 0x925527fd # load x3 with value 0x925527fd
sw x3, 0(x2) # store 0x925527fd in memory
flh f22, 0(x2) # load 0x925527fd from memory into f22
fnmadd.h f30, f18, f25, f22, dyn # perform operation
fnmadd.h f30, f18, f25, f22, rdn # perform operation
fnmadd.h f30, f18, f25, f22, rmm # perform operation
fnmadd.h f30, f18, f25, f22, rne # perform operation
fnmadd.h f30, f18, f25, f22, rtz # perform operation
fnmadd.h f30, f18, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f18, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f18, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f18, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f18, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f18, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f11, 0(x2) # load 0x000058b4 from memory into f11
la x2, scratch
li x3, 0x35ef047b # load x3 with value 0x35ef047b
sw x3, 0(x2) # store 0x35ef047b in memory
flh f8, 0(x2) # load 0x35ef047b from memory into f8
fnmadd.h f17, f21, f11, f8, dyn # perform operation
fnmadd.h f17, f21, f11, f8, rdn # perform operation
fnmadd.h f17, f21, f11, f8, rmm # perform operation
fnmadd.h f17, f21, f11, f8, rne # perform operation
fnmadd.h f17, f21, f11, f8, rtz # perform operation
fnmadd.h f17, f21, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f21, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f21, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f21, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f21, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f21, f11, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f11, 0(x2) # load 0x0000c93a from memory into f11
la x2, scratch
li x3, 0x4fb6ccf7 # load x3 with value 0x4fb6ccf7
sw x3, 0(x2) # store 0x4fb6ccf7 in memory
flh f5, 0(x2) # load 0x4fb6ccf7 from memory into f5
fnmadd.h f27, f29, f11, f5, dyn # perform operation
fnmadd.h f27, f29, f11, f5, rdn # perform operation
fnmadd.h f27, f29, f11, f5, rmm # perform operation
fnmadd.h f27, f29, f11, f5, rne # perform operation
fnmadd.h f27, f29, f11, f5, rtz # perform operation
fnmadd.h f27, f29, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f29, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f29, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f29, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f29, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f29, f11, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f31, 0(x2) # load 0x0000c93a from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0xe4a4795e # load x3 with value 0xe4a4795e
sw x3, 0(x2) # store 0xe4a4795e in memory
flh f16, 0(x2) # load 0xe4a4795e from memory into f16
fnmadd.h f11, f31, f20, f16, dyn # perform operation
fnmadd.h f11, f31, f20, f16, rdn # perform operation
fnmadd.h f11, f31, f20, f16, rmm # perform operation
fnmadd.h f11, f31, f20, f16, rne # perform operation
fnmadd.h f11, f31, f20, f16, rtz # perform operation
fnmadd.h f11, f31, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f31, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f31, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f31, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f31, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f31, f20, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x8000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f27, 0(x2) # load 0x00008000 from memory into f27
la x2, scratch
li x3, 0x5c2305be # load x3 with value 0x5c2305be
sw x3, 0(x2) # store 0x5c2305be in memory
flh f18, 0(x2) # load 0x5c2305be from memory into f18
fnmadd.h f13, f16, f27, f18, dyn # perform operation
fnmadd.h f13, f16, f27, f18, rdn # perform operation
fnmadd.h f13, f16, f27, f18, rmm # perform operation
fnmadd.h f13, f16, f27, f18, rne # perform operation
fnmadd.h f13, f16, f27, f18, rtz # perform operation
fnmadd.h f13, f16, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f16, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f16, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f16, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f16, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f16, f27, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x3c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f25, 0(x2) # load 0x0000c93a from memory into f25
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f21, 0(x2) # load 0x00003c00 from memory into f21
la x2, scratch
li x3, 0xe265e6a7 # load x3 with value 0xe265e6a7
sw x3, 0(x2) # store 0xe265e6a7 in memory
flh f22, 0(x2) # load 0xe265e6a7 from memory into f22
fnmadd.h f3, f25, f21, f22, dyn # perform operation
fnmadd.h f3, f25, f21, f22, rdn # perform operation
fnmadd.h f3, f25, f21, f22, rmm # perform operation
fnmadd.h f3, f25, f21, f22, rne # perform operation
fnmadd.h f3, f25, f21, f22, rtz # perform operation
fnmadd.h f3, f25, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f25, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f25, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f25, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f25, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f25, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xbc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f2, 0(x2) # load 0x0000c93a from memory into f2
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f1, 0(x2) # load 0x0000bc00 from memory into f1
la x2, scratch
li x3, 0xa1b8340a # load x3 with value 0xa1b8340a
sw x3, 0(x2) # store 0xa1b8340a in memory
flh f26, 0(x2) # load 0xa1b8340a from memory into f26
fnmadd.h f29, f2, f1, f26, dyn # perform operation
fnmadd.h f29, f2, f1, f26, rdn # perform operation
fnmadd.h f29, f2, f1, f26, rmm # perform operation
fnmadd.h f29, f2, f1, f26, rne # perform operation
fnmadd.h f29, f2, f1, f26, rtz # perform operation
fnmadd.h f29, f2, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f2, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f2, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f2, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f2, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f2, f1, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x3e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f17, 0(x2) # load 0x0000c93a from memory into f17
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f20, 0(x2) # load 0x00003e00 from memory into f20
la x2, scratch
li x3, 0xcbb46200 # load x3 with value 0xcbb46200
sw x3, 0(x2) # store 0xcbb46200 in memory
flh f7, 0(x2) # load 0xcbb46200 from memory into f7
fnmadd.h f22, f17, f20, f7, dyn # perform operation
fnmadd.h f22, f17, f20, f7, rdn # perform operation
fnmadd.h f22, f17, f20, f7, rmm # perform operation
fnmadd.h f22, f17, f20, f7, rne # perform operation
fnmadd.h f22, f17, f20, f7, rtz # perform operation
fnmadd.h f22, f17, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f17, f20, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xbe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
la x2, scratch
li x3, 0x8e7866c6 # load x3 with value 0x8e7866c6
sw x3, 0(x2) # store 0x8e7866c6 in memory
flh f31, 0(x2) # load 0x8e7866c6 from memory into f31
fnmadd.h f12, f16, f23, f31, dyn # perform operation
fnmadd.h f12, f16, f23, f31, rdn # perform operation
fnmadd.h f12, f16, f23, f31, rmm # perform operation
fnmadd.h f12, f16, f23, f31, rne # perform operation
fnmadd.h f12, f16, f23, f31, rtz # perform operation
fnmadd.h f12, f16, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f16, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f16, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f16, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f16, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f16, f23, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x4000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f14, 0(x2) # load 0x0000c93a from memory into f14
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f2, 0(x2) # load 0x00004000 from memory into f2
la x2, scratch
li x3, 0xe6c024a4 # load x3 with value 0xe6c024a4
sw x3, 0(x2) # store 0xe6c024a4 in memory
flh f18, 0(x2) # load 0xe6c024a4 from memory into f18
fnmadd.h f3, f14, f2, f18, dyn # perform operation
fnmadd.h f3, f14, f2, f18, rdn # perform operation
fnmadd.h f3, f14, f2, f18, rmm # perform operation
fnmadd.h f3, f14, f2, f18, rne # perform operation
fnmadd.h f3, f14, f2, f18, rtz # perform operation
fnmadd.h f3, f14, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f14, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f14, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f14, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f14, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f14, f2, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xc000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f13, 0(x2) # load 0x0000c93a from memory into f13
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f11, 0(x2) # load 0x0000c000 from memory into f11
la x2, scratch
li x3, 0x24fd7b37 # load x3 with value 0x24fd7b37
sw x3, 0(x2) # store 0x24fd7b37 in memory
flh f2, 0(x2) # load 0x24fd7b37 from memory into f2
fnmadd.h f30, f13, f11, f2, dyn # perform operation
fnmadd.h f30, f13, f11, f2, rdn # perform operation
fnmadd.h f30, f13, f11, f2, rmm # perform operation
fnmadd.h f30, f13, f11, f2, rne # perform operation
fnmadd.h f30, f13, f11, f2, rtz # perform operation
fnmadd.h f30, f13, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f13, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f13, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f13, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f13, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f13, f11, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f11, 0(x2) # load 0x0000c93a from memory into f11
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f3, 0(x2) # load 0x00000400 from memory into f3
la x2, scratch
li x3, 0xbaafd38b # load x3 with value 0xbaafd38b
sw x3, 0(x2) # store 0xbaafd38b in memory
flh f16, 0(x2) # load 0xbaafd38b from memory into f16
fnmadd.h f27, f11, f3, f16, dyn # perform operation
fnmadd.h f27, f11, f3, f16, rdn # perform operation
fnmadd.h f27, f11, f3, f16, rmm # perform operation
fnmadd.h f27, f11, f3, f16, rne # perform operation
fnmadd.h f27, f11, f3, f16, rtz # perform operation
fnmadd.h f27, f11, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f11, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f11, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f11, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f11, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f11, f3, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x8400)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f18, 0(x2) # load 0x00008400 from memory into f18
la x2, scratch
li x3, 0x3e292c15 # load x3 with value 0x3e292c15
sw x3, 0(x2) # store 0x3e292c15 in memory
flh f10, 0(x2) # load 0x3e292c15 from memory into f10
fnmadd.h f6, f16, f18, f10, dyn # perform operation
fnmadd.h f6, f16, f18, f10, rdn # perform operation
fnmadd.h f6, f16, f18, f10, rmm # perform operation
fnmadd.h f6, f16, f18, f10, rne # perform operation
fnmadd.h f6, f16, f18, f10, rtz # perform operation
fnmadd.h f6, f16, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f16, f18, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7bff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f1, 0(x2) # load 0x0000c93a from memory into f1
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f6, 0(x2) # load 0x00007bff from memory into f6
la x2, scratch
li x3, 0xe125ae8b # load x3 with value 0xe125ae8b
sw x3, 0(x2) # store 0xe125ae8b in memory
flh f12, 0(x2) # load 0xe125ae8b from memory into f12
fnmadd.h f21, f1, f6, f12, dyn # perform operation
fnmadd.h f21, f1, f6, f12, rdn # perform operation
fnmadd.h f21, f1, f6, f12, rmm # perform operation
fnmadd.h f21, f1, f6, f12, rne # perform operation
fnmadd.h f21, f1, f6, f12, rtz # perform operation
fnmadd.h f21, f1, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f1, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f1, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f1, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f1, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f1, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xfbff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f13, 0(x2) # load 0x0000c93a from memory into f13
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f16, 0(x2) # load 0x0000fbff from memory into f16
la x2, scratch
li x3, 0x3a78dd43 # load x3 with value 0x3a78dd43
sw x3, 0(x2) # store 0x3a78dd43 in memory
flh f19, 0(x2) # load 0x3a78dd43 from memory into f19
fnmadd.h f20, f13, f16, f19, dyn # perform operation
fnmadd.h f20, f13, f16, f19, rdn # perform operation
fnmadd.h f20, f13, f16, f19, rmm # perform operation
fnmadd.h f20, f13, f16, f19, rne # perform operation
fnmadd.h f20, f13, f16, f19, rtz # perform operation
fnmadd.h f20, f13, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f13, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f13, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f13, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f13, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f13, f16, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x3ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f8, 0(x2) # load 0x0000c93a from memory into f8
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f18, 0(x2) # load 0x000003ff from memory into f18
la x2, scratch
li x3, 0x4a9eaaf8 # load x3 with value 0x4a9eaaf8
sw x3, 0(x2) # store 0x4a9eaaf8 in memory
flh f9, 0(x2) # load 0x4a9eaaf8 from memory into f9
fnmadd.h f29, f8, f18, f9, dyn # perform operation
fnmadd.h f29, f8, f18, f9, rdn # perform operation
fnmadd.h f29, f8, f18, f9, rmm # perform operation
fnmadd.h f29, f8, f18, f9, rne # perform operation
fnmadd.h f29, f8, f18, f9, rtz # perform operation
fnmadd.h f29, f8, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f8, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f8, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f8, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f8, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f8, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x83ff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f29, 0(x2) # load 0x000083ff from memory into f29
la x2, scratch
li x3, 0xcd7ba4eb # load x3 with value 0xcd7ba4eb
sw x3, 0(x2) # store 0xcd7ba4eb in memory
flh f24, 0(x2) # load 0xcd7ba4eb from memory into f24
fnmadd.h f7, f3, f29, f24, dyn # perform operation
fnmadd.h f7, f3, f29, f24, rdn # perform operation
fnmadd.h f7, f3, f29, f24, rmm # perform operation
fnmadd.h f7, f3, f29, f24, rne # perform operation
fnmadd.h f7, f3, f29, f24, rtz # perform operation
fnmadd.h f7, f3, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f3, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f3, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f3, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f3, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f3, f29, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f15, 0(x2) # load 0x00000200 from memory into f15
la x2, scratch
li x3, 0x51f4ebbd # load x3 with value 0x51f4ebbd
sw x3, 0(x2) # store 0x51f4ebbd in memory
flh f8, 0(x2) # load 0x51f4ebbd from memory into f8
fnmadd.h f24, f12, f15, f8, dyn # perform operation
fnmadd.h f24, f12, f15, f8, rdn # perform operation
fnmadd.h f24, f12, f15, f8, rmm # perform operation
fnmadd.h f24, f12, f15, f8, rne # perform operation
fnmadd.h f24, f12, f15, f8, rtz # perform operation
fnmadd.h f24, f12, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f12, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f12, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f12, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f12, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f12, f15, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x8200)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f31, 0(x2) # load 0x00008200 from memory into f31
la x2, scratch
li x3, 0x6dbd3be1 # load x3 with value 0x6dbd3be1
sw x3, 0(x2) # store 0x6dbd3be1 in memory
flh f23, 0(x2) # load 0x6dbd3be1 from memory into f23
fnmadd.h f10, f3, f31, f23, dyn # perform operation
fnmadd.h f10, f3, f31, f23, rdn # perform operation
fnmadd.h f10, f3, f31, f23, rmm # perform operation
fnmadd.h f10, f3, f31, f23, rne # perform operation
fnmadd.h f10, f3, f31, f23, rtz # perform operation
fnmadd.h f10, f3, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f3, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f3, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f3, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f3, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f3, f31, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f27, 0(x2) # load 0x0000c93a from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0xc87e7801 # load x3 with value 0xc87e7801
sw x3, 0(x2) # store 0xc87e7801 in memory
flh f21, 0(x2) # load 0xc87e7801 from memory into f21
fnmadd.h f25, f27, f30, f21, dyn # perform operation
fnmadd.h f25, f27, f30, f21, rdn # perform operation
fnmadd.h f25, f27, f30, f21, rmm # perform operation
fnmadd.h f25, f27, f30, f21, rne # perform operation
fnmadd.h f25, f27, f30, f21, rtz # perform operation
fnmadd.h f25, f27, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f27, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f27, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f27, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f27, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f27, f30, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x8001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f9, 0(x2) # load 0x0000c93a from memory into f9
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f15, 0(x2) # load 0x00008001 from memory into f15
la x2, scratch
li x3, 0x8ea934fa # load x3 with value 0x8ea934fa
sw x3, 0(x2) # store 0x8ea934fa in memory
flh f21, 0(x2) # load 0x8ea934fa from memory into f21
fnmadd.h f14, f9, f15, f21, dyn # perform operation
fnmadd.h f14, f9, f15, f21, rdn # perform operation
fnmadd.h f14, f9, f15, f21, rmm # perform operation
fnmadd.h f14, f9, f15, f21, rne # perform operation
fnmadd.h f14, f9, f15, f21, rtz # perform operation
fnmadd.h f14, f9, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f9, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f9, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f9, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f9, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f9, f15, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7c00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f10, 0(x2) # load 0x0000c93a from memory into f10
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f27, 0(x2) # load 0x00007c00 from memory into f27
la x2, scratch
li x3, 0xc2439b9a # load x3 with value 0xc2439b9a
sw x3, 0(x2) # store 0xc2439b9a in memory
flh f22, 0(x2) # load 0xc2439b9a from memory into f22
fnmadd.h f13, f10, f27, f22, dyn # perform operation
fnmadd.h f13, f10, f27, f22, rdn # perform operation
fnmadd.h f13, f10, f27, f22, rmm # perform operation
fnmadd.h f13, f10, f27, f22, rne # perform operation
fnmadd.h f13, f10, f27, f22, rtz # perform operation
fnmadd.h f13, f10, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f10, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f10, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f10, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f10, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f10, f27, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xfc00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f30, 0(x2) # load 0x0000fc00 from memory into f30
la x2, scratch
li x3, 0x881555ca # load x3 with value 0x881555ca
sw x3, 0(x2) # store 0x881555ca in memory
flh f28, 0(x2) # load 0x881555ca from memory into f28
fnmadd.h f5, f3, f30, f28, dyn # perform operation
fnmadd.h f5, f3, f30, f28, rdn # perform operation
fnmadd.h f5, f3, f30, f28, rmm # perform operation
fnmadd.h f5, f3, f30, f28, rne # perform operation
fnmadd.h f5, f3, f30, f28, rtz # perform operation
fnmadd.h f5, f3, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f3, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f3, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f3, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f3, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f3, f30, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7e00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f12, 0(x2) # load 0x00007e00 from memory into f12
la x2, scratch
li x3, 0xc0f0dea2 # load x3 with value 0xc0f0dea2
sw x3, 0(x2) # store 0xc0f0dea2 in memory
flh f28, 0(x2) # load 0xc0f0dea2 from memory into f28
fnmadd.h f26, f3, f12, f28, dyn # perform operation
fnmadd.h f26, f3, f12, f28, rdn # perform operation
fnmadd.h f26, f3, f12, f28, rmm # perform operation
fnmadd.h f26, f3, f12, f28, rne # perform operation
fnmadd.h f26, f3, f12, f28, rtz # perform operation
fnmadd.h f26, f3, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f3, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f3, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f3, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f3, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f3, f12, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7fff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f27, 0(x2) # load 0x0000c93a from memory into f27
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f16, 0(x2) # load 0x00007fff from memory into f16
la x2, scratch
li x3, 0xd1310cda # load x3 with value 0xd1310cda
sw x3, 0(x2) # store 0xd1310cda in memory
flh f17, 0(x2) # load 0xd1310cda from memory into f17
fnmadd.h f8, f27, f16, f17, dyn # perform operation
fnmadd.h f8, f27, f16, f17, rdn # perform operation
fnmadd.h f8, f27, f16, f17, rmm # perform operation
fnmadd.h f8, f27, f16, f17, rne # perform operation
fnmadd.h f8, f27, f16, f17, rtz # perform operation
fnmadd.h f8, f27, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f27, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f27, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f27, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f27, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f27, f16, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xfe00)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f21, 0(x2) # load 0x0000c93a from memory into f21
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f31, 0(x2) # load 0x0000fe00 from memory into f31
la x2, scratch
li x3, 0xa27b4b3f # load x3 with value 0xa27b4b3f
sw x3, 0(x2) # store 0xa27b4b3f in memory
flh f2, 0(x2) # load 0xa27b4b3f from memory into f2
fnmadd.h f15, f21, f31, f2, dyn # perform operation
fnmadd.h f15, f21, f31, f2, rdn # perform operation
fnmadd.h f15, f21, f31, f2, rmm # perform operation
fnmadd.h f15, f21, f31, f2, rne # perform operation
fnmadd.h f15, f21, f31, f2, rtz # perform operation
fnmadd.h f15, f21, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f21, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f21, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f21, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f21, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f21, f31, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7c01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f24, 0(x2) # load 0x00007c01 from memory into f24
la x2, scratch
li x3, 0xf49c5de7 # load x3 with value 0xf49c5de7
sw x3, 0(x2) # store 0xf49c5de7 in memory
flh f2, 0(x2) # load 0xf49c5de7 from memory into f2
fnmadd.h f28, f12, f24, f2, dyn # perform operation
fnmadd.h f28, f12, f24, f2, rdn # perform operation
fnmadd.h f28, f12, f24, f2, rmm # perform operation
fnmadd.h f28, f12, f24, f2, rne # perform operation
fnmadd.h f28, f12, f24, f2, rtz # perform operation
fnmadd.h f28, f12, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f12, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f12, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f12, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f12, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f12, f24, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7dff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f28, 0(x2) # load 0x0000c93a from memory into f28
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f7, 0(x2) # load 0x00007dff from memory into f7
la x2, scratch
li x3, 0xc64c91df # load x3 with value 0xc64c91df
sw x3, 0(x2) # store 0xc64c91df in memory
flh f23, 0(x2) # load 0xc64c91df from memory into f23
fnmadd.h f12, f28, f7, f23, dyn # perform operation
fnmadd.h f12, f28, f7, f23, rdn # perform operation
fnmadd.h f12, f28, f7, f23, rmm # perform operation
fnmadd.h f12, f28, f7, f23, rne # perform operation
fnmadd.h f12, f28, f7, f23, rtz # perform operation
fnmadd.h f12, f28, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f28, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f28, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f28, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f28, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f28, f7, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xfc01)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f5, 0(x2) # load 0x0000c93a from memory into f5
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f7, 0(x2) # load 0x0000fc01 from memory into f7
la x2, scratch
li x3, 0x848d7987 # load x3 with value 0x848d7987
sw x3, 0(x2) # store 0x848d7987 in memory
flh f6, 0(x2) # load 0x848d7987 from memory into f6
fnmadd.h f22, f5, f7, f6, dyn # perform operation
fnmadd.h f22, f5, f7, f6, rdn # perform operation
fnmadd.h f22, f5, f7, f6, rmm # perform operation
fnmadd.h f22, f5, f7, f6, rne # perform operation
fnmadd.h f22, f5, f7, f6, rtz # perform operation
fnmadd.h f22, f5, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f5, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f5, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f5, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f5, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f5, f7, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x58b4)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f8, 0(x2) # load 0x0000c93a from memory into f8
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
la x2, scratch
li x3, 0x2822d80a # load x3 with value 0x2822d80a
sw x3, 0(x2) # store 0x2822d80a in memory
flh f11, 0(x2) # load 0x2822d80a from memory into f11
fnmadd.h f5, f8, f29, f11, dyn # perform operation
fnmadd.h f5, f8, f29, f11, rdn # perform operation
fnmadd.h f5, f8, f29, f11, rmm # perform operation
fnmadd.h f5, f8, f29, f11, rne # perform operation
fnmadd.h f5, f8, f29, f11, rtz # perform operation
fnmadd.h f5, f8, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f8, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f8, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f8, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f8, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f8, f29, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xc93a)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f22, 0(x2) # load 0x0000c93a from memory into f22
la x2, scratch
li x3, 0xa7f368ae # load x3 with value 0xa7f368ae
sw x3, 0(x2) # store 0xa7f368ae in memory
flh f20, 0(x2) # load 0xa7f368ae from memory into f20
fnmadd.h f16, f3, f22, f20, dyn # perform operation
fnmadd.h f16, f3, f22, f20, rdn # perform operation
fnmadd.h f16, f3, f22, f20, rmm # perform operation
fnmadd.h f16, f3, f22, f20, rne # perform operation
fnmadd.h f16, f3, f22, f20, rtz # perform operation
fnmadd.h f16, f3, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f3, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f3, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f3, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f3, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f3, f22, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x8529a727 # load x3 with value 0x8529a727
sw x3, 0(x2) # store 0x8529a727 in memory
flh f13, 0(x2) # load 0x8529a727 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f28, 0(x2) # load 0x00000000 from memory into f28
fnmadd.h f2, f21, f13, f28, dyn # perform operation
fnmadd.h f2, f21, f13, f28, rdn # perform operation
fnmadd.h f2, f21, f13, f28, rmm # perform operation
fnmadd.h f2, f21, f13, f28, rne # perform operation
fnmadd.h f2, f21, f13, f28, rtz # perform operation
fnmadd.h f2, f21, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f21, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f21, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f21, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f21, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f21, f13, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0x64ba33df # load x3 with value 0x64ba33df
sw x3, 0(x2) # store 0x64ba33df in memory
flh f15, 0(x2) # load 0x64ba33df from memory into f15
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f20, 0(x2) # load 0x00008000 from memory into f20
fnmadd.h f25, f24, f15, f20, dyn # perform operation
fnmadd.h f25, f24, f15, f20, rdn # perform operation
fnmadd.h f25, f24, f15, f20, rmm # perform operation
fnmadd.h f25, f24, f15, f20, rne # perform operation
fnmadd.h f25, f24, f15, f20, rtz # perform operation
fnmadd.h f25, f24, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f24, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f24, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f24, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f24, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f24, f15, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0xd739d6f2 # load x3 with value 0xd739d6f2
sw x3, 0(x2) # store 0xd739d6f2 in memory
flh f16, 0(x2) # load 0xd739d6f2 from memory into f16
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f26, 0(x2) # load 0x00003c00 from memory into f26
fnmadd.h f3, f12, f16, f26, dyn # perform operation
fnmadd.h f3, f12, f16, f26, rdn # perform operation
fnmadd.h f3, f12, f16, f26, rmm # perform operation
fnmadd.h f3, f12, f16, f26, rne # perform operation
fnmadd.h f3, f12, f16, f26, rtz # perform operation
fnmadd.h f3, f12, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f12, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f12, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f12, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f12, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f12, f16, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0xcf7bbc14 # load x3 with value 0xcf7bbc14
sw x3, 0(x2) # store 0xcf7bbc14 in memory
flh f6, 0(x2) # load 0xcf7bbc14 from memory into f6
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f12, 0(x2) # load 0x0000bc00 from memory into f12
fnmadd.h f13, f25, f6, f12, dyn # perform operation
fnmadd.h f13, f25, f6, f12, rdn # perform operation
fnmadd.h f13, f25, f6, f12, rmm # perform operation
fnmadd.h f13, f25, f6, f12, rne # perform operation
fnmadd.h f13, f25, f6, f12, rtz # perform operation
fnmadd.h f13, f25, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f25, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f25, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f25, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f25, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f25, f6, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0xbc3b4c94 # load x3 with value 0xbc3b4c94
sw x3, 0(x2) # store 0xbc3b4c94 in memory
flh f14, 0(x2) # load 0xbc3b4c94 from memory into f14
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f30, 0(x2) # load 0x00003e00 from memory into f30
fnmadd.h f12, f17, f14, f30, dyn # perform operation
fnmadd.h f12, f17, f14, f30, rdn # perform operation
fnmadd.h f12, f17, f14, f30, rmm # perform operation
fnmadd.h f12, f17, f14, f30, rne # perform operation
fnmadd.h f12, f17, f14, f30, rtz # perform operation
fnmadd.h f12, f17, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f17, f14, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0xf8983627 # load x3 with value 0xf8983627
sw x3, 0(x2) # store 0xf8983627 in memory
flh f30, 0(x2) # load 0xf8983627 from memory into f30
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f21, 0(x2) # load 0x0000be00 from memory into f21
fnmadd.h f8, f24, f30, f21, dyn # perform operation
fnmadd.h f8, f24, f30, f21, rdn # perform operation
fnmadd.h f8, f24, f30, f21, rmm # perform operation
fnmadd.h f8, f24, f30, f21, rne # perform operation
fnmadd.h f8, f24, f30, f21, rtz # perform operation
fnmadd.h f8, f24, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f24, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f24, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f24, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f24, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f24, f30, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x4000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x7f2ff09d # load x3 with value 0x7f2ff09d
sw x3, 0(x2) # store 0x7f2ff09d in memory
flh f26, 0(x2) # load 0x7f2ff09d from memory into f26
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f3, 0(x2) # load 0x00004000 from memory into f3
fnmadd.h f18, f16, f26, f3, dyn # perform operation
fnmadd.h f18, f16, f26, f3, rdn # perform operation
fnmadd.h f18, f16, f26, f3, rmm # perform operation
fnmadd.h f18, f16, f26, f3, rne # perform operation
fnmadd.h f18, f16, f26, f3, rtz # perform operation
fnmadd.h f18, f16, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f16, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f16, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f16, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f16, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f16, f26, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x62ace007 # load x3 with value 0x62ace007
sw x3, 0(x2) # store 0x62ace007 in memory
flh f20, 0(x2) # load 0x62ace007 from memory into f20
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f28, 0(x2) # load 0x0000c000 from memory into f28
fnmadd.h f19, f22, f20, f28, dyn # perform operation
fnmadd.h f19, f22, f20, f28, rdn # perform operation
fnmadd.h f19, f22, f20, f28, rmm # perform operation
fnmadd.h f19, f22, f20, f28, rne # perform operation
fnmadd.h f19, f22, f20, f28, rtz # perform operation
fnmadd.h f19, f22, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f22, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f22, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f22, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f22, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f22, f20, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0x64da9044 # load x3 with value 0x64da9044
sw x3, 0(x2) # store 0x64da9044 in memory
flh f8, 0(x2) # load 0x64da9044 from memory into f8
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f2, 0(x2) # load 0x00000400 from memory into f2
fnmadd.h f30, f24, f8, f2, dyn # perform operation
fnmadd.h f30, f24, f8, f2, rdn # perform operation
fnmadd.h f30, f24, f8, f2, rmm # perform operation
fnmadd.h f30, f24, f8, f2, rne # perform operation
fnmadd.h f30, f24, f8, f2, rtz # perform operation
fnmadd.h f30, f24, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f24, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f24, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f24, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f24, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f24, f8, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8400)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0xdf3682a3 # load x3 with value 0xdf3682a3
sw x3, 0(x2) # store 0xdf3682a3 in memory
flh f2, 0(x2) # load 0xdf3682a3 from memory into f2
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f23, 0(x2) # load 0x00008400 from memory into f23
fnmadd.h f10, f1, f2, f23, dyn # perform operation
fnmadd.h f10, f1, f2, f23, rdn # perform operation
fnmadd.h f10, f1, f2, f23, rmm # perform operation
fnmadd.h f10, f1, f2, f23, rne # perform operation
fnmadd.h f10, f1, f2, f23, rtz # perform operation
fnmadd.h f10, f1, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f1, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f1, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f1, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f1, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f1, f2, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x5c5ea1e6 # load x3 with value 0x5c5ea1e6
sw x3, 0(x2) # store 0x5c5ea1e6 in memory
flh f26, 0(x2) # load 0x5c5ea1e6 from memory into f26
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f17, 0(x2) # load 0x00007bff from memory into f17
fnmadd.h f14, f28, f26, f17, dyn # perform operation
fnmadd.h f14, f28, f26, f17, rdn # perform operation
fnmadd.h f14, f28, f26, f17, rmm # perform operation
fnmadd.h f14, f28, f26, f17, rne # perform operation
fnmadd.h f14, f28, f26, f17, rtz # perform operation
fnmadd.h f14, f28, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f28, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f28, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f28, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f28, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f28, f26, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0xecf66622 # load x3 with value 0xecf66622
sw x3, 0(x2) # store 0xecf66622 in memory
flh f10, 0(x2) # load 0xecf66622 from memory into f10
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f25, 0(x2) # load 0x0000fbff from memory into f25
fnmadd.h f8, f19, f10, f25, dyn # perform operation
fnmadd.h f8, f19, f10, f25, rdn # perform operation
fnmadd.h f8, f19, f10, f25, rmm # perform operation
fnmadd.h f8, f19, f10, f25, rne # perform operation
fnmadd.h f8, f19, f10, f25, rtz # perform operation
fnmadd.h f8, f19, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f19, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f19, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f19, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f19, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f19, f10, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x6cba6f3c # load x3 with value 0x6cba6f3c
sw x3, 0(x2) # store 0x6cba6f3c in memory
flh f12, 0(x2) # load 0x6cba6f3c from memory into f12
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
fnmadd.h f11, f2, f12, f20, dyn # perform operation
fnmadd.h f11, f2, f12, f20, rdn # perform operation
fnmadd.h f11, f2, f12, f20, rmm # perform operation
fnmadd.h f11, f2, f12, f20, rne # perform operation
fnmadd.h f11, f2, f12, f20, rtz # perform operation
fnmadd.h f11, f2, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f2, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f2, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f2, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f2, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f2, f12, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x3f77c102 # load x3 with value 0x3f77c102
sw x3, 0(x2) # store 0x3f77c102 in memory
flh f27, 0(x2) # load 0x3f77c102 from memory into f27
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f14, 0(x2) # load 0x000083ff from memory into f14
fnmadd.h f18, f22, f27, f14, dyn # perform operation
fnmadd.h f18, f22, f27, f14, rdn # perform operation
fnmadd.h f18, f22, f27, f14, rmm # perform operation
fnmadd.h f18, f22, f27, f14, rne # perform operation
fnmadd.h f18, f22, f27, f14, rtz # perform operation
fnmadd.h f18, f22, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f22, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f22, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f22, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f22, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f22, f27, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x200)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0x1858debf # load x3 with value 0x1858debf
sw x3, 0(x2) # store 0x1858debf in memory
flh f16, 0(x2) # load 0x1858debf from memory into f16
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f2, 0(x2) # load 0x00000200 from memory into f2
fnmadd.h f28, f30, f16, f2, dyn # perform operation
fnmadd.h f28, f30, f16, f2, rdn # perform operation
fnmadd.h f28, f30, f16, f2, rmm # perform operation
fnmadd.h f28, f30, f16, f2, rne # perform operation
fnmadd.h f28, f30, f16, f2, rtz # perform operation
fnmadd.h f28, f30, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f30, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f30, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f30, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f30, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f30, f16, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8200)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x6ac1c1ab # load x3 with value 0x6ac1c1ab
sw x3, 0(x2) # store 0x6ac1c1ab in memory
flh f1, 0(x2) # load 0x6ac1c1ab from memory into f1
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f12, 0(x2) # load 0x00008200 from memory into f12
fnmadd.h f17, f31, f1, f12, dyn # perform operation
fnmadd.h f17, f31, f1, f12, rdn # perform operation
fnmadd.h f17, f31, f1, f12, rmm # perform operation
fnmadd.h f17, f31, f1, f12, rne # perform operation
fnmadd.h f17, f31, f1, f12, rtz # perform operation
fnmadd.h f17, f31, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f31, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f31, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f31, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f31, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f31, f1, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0xff006fab # load x3 with value 0xff006fab
sw x3, 0(x2) # store 0xff006fab in memory
flh f25, 0(x2) # load 0xff006fab from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f13, 0(x2) # load 0x00000001 from memory into f13
fnmadd.h f19, f1, f25, f13, dyn # perform operation
fnmadd.h f19, f1, f25, f13, rdn # perform operation
fnmadd.h f19, f1, f25, f13, rmm # perform operation
fnmadd.h f19, f1, f25, f13, rne # perform operation
fnmadd.h f19, f1, f25, f13, rtz # perform operation
fnmadd.h f19, f1, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f1, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f1, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f1, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f1, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f1, f25, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8001)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0xe258df0a # load x3 with value 0xe258df0a
sw x3, 0(x2) # store 0xe258df0a in memory
flh f15, 0(x2) # load 0xe258df0a from memory into f15
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f25, 0(x2) # load 0x00008001 from memory into f25
fnmadd.h f18, f14, f15, f25, dyn # perform operation
fnmadd.h f18, f14, f15, f25, rdn # perform operation
fnmadd.h f18, f14, f15, f25, rmm # perform operation
fnmadd.h f18, f14, f15, f25, rne # perform operation
fnmadd.h f18, f14, f15, f25, rtz # perform operation
fnmadd.h f18, f14, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f14, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f14, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f14, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f14, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f14, f15, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x2bbe689c # load x3 with value 0x2bbe689c
sw x3, 0(x2) # store 0x2bbe689c in memory
flh f8, 0(x2) # load 0x2bbe689c from memory into f8
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
fnmadd.h f16, f22, f8, f9, dyn # perform operation
fnmadd.h f16, f22, f8, f9, rdn # perform operation
fnmadd.h f16, f22, f8, f9, rmm # perform operation
fnmadd.h f16, f22, f8, f9, rne # perform operation
fnmadd.h f16, f22, f8, f9, rtz # perform operation
fnmadd.h f16, f22, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f22, f8, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0xddf65a54 # load x3 with value 0xddf65a54
sw x3, 0(x2) # store 0xddf65a54 in memory
flh f5, 0(x2) # load 0xddf65a54 from memory into f5
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f27, 0(x2) # load 0x0000fc00 from memory into f27
fnmadd.h f21, f10, f5, f27, dyn # perform operation
fnmadd.h f21, f10, f5, f27, rdn # perform operation
fnmadd.h f21, f10, f5, f27, rmm # perform operation
fnmadd.h f21, f10, f5, f27, rne # perform operation
fnmadd.h f21, f10, f5, f27, rtz # perform operation
fnmadd.h f21, f10, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f10, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f10, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f10, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f10, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f10, f5, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0x17fc5c1c # load x3 with value 0x17fc5c1c
sw x3, 0(x2) # store 0x17fc5c1c in memory
flh f1, 0(x2) # load 0x17fc5c1c from memory into f1
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
fnmadd.h f2, f25, f1, f5, dyn # perform operation
fnmadd.h f2, f25, f1, f5, rdn # perform operation
fnmadd.h f2, f25, f1, f5, rmm # perform operation
fnmadd.h f2, f25, f1, f5, rne # perform operation
fnmadd.h f2, f25, f1, f5, rtz # perform operation
fnmadd.h f2, f25, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f25, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f25, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f25, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f25, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f25, f1, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0xe4ffc185 # load x3 with value 0xe4ffc185
sw x3, 0(x2) # store 0xe4ffc185 in memory
flh f18, 0(x2) # load 0xe4ffc185 from memory into f18
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f8, 0(x2) # load 0x00007fff from memory into f8
fnmadd.h f24, f31, f18, f8, dyn # perform operation
fnmadd.h f24, f31, f18, f8, rdn # perform operation
fnmadd.h f24, f31, f18, f8, rmm # perform operation
fnmadd.h f24, f31, f18, f8, rne # perform operation
fnmadd.h f24, f31, f18, f8, rtz # perform operation
fnmadd.h f24, f31, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f31, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f31, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f31, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f31, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f31, f18, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0xbd204e10 # load x3 with value 0xbd204e10
sw x3, 0(x2) # store 0xbd204e10 in memory
flh f16, 0(x2) # load 0xbd204e10 from memory into f16
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f28, 0(x2) # load 0x0000fe00 from memory into f28
fnmadd.h f26, f5, f16, f28, dyn # perform operation
fnmadd.h f26, f5, f16, f28, rdn # perform operation
fnmadd.h f26, f5, f16, f28, rmm # perform operation
fnmadd.h f26, f5, f16, f28, rne # perform operation
fnmadd.h f26, f5, f16, f28, rtz # perform operation
fnmadd.h f26, f5, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f5, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f5, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f5, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f5, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f5, f16, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0x84c42d91 # load x3 with value 0x84c42d91
sw x3, 0(x2) # store 0x84c42d91 in memory
flh f12, 0(x2) # load 0x84c42d91 from memory into f12
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f9, 0(x2) # load 0x00007c01 from memory into f9
fnmadd.h f25, f20, f12, f9, dyn # perform operation
fnmadd.h f25, f20, f12, f9, rdn # perform operation
fnmadd.h f25, f20, f12, f9, rmm # perform operation
fnmadd.h f25, f20, f12, f9, rne # perform operation
fnmadd.h f25, f20, f12, f9, rtz # perform operation
fnmadd.h f25, f20, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f20, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f20, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f20, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f20, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f20, f12, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x6d20187e # load x3 with value 0x6d20187e
sw x3, 0(x2) # store 0x6d20187e in memory
flh f28, 0(x2) # load 0x6d20187e from memory into f28
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
fnmadd.h f29, f11, f28, f26, dyn # perform operation
fnmadd.h f29, f11, f28, f26, rdn # perform operation
fnmadd.h f29, f11, f28, f26, rmm # perform operation
fnmadd.h f29, f11, f28, f26, rne # perform operation
fnmadd.h f29, f11, f28, f26, rtz # perform operation
fnmadd.h f29, f11, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f11, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f11, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f11, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f11, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f11, f28, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0xeaf1ba53 # load x3 with value 0xeaf1ba53
sw x3, 0(x2) # store 0xeaf1ba53 in memory
flh f21, 0(x2) # load 0xeaf1ba53 from memory into f21
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f28, 0(x2) # load 0x0000fc01 from memory into f28
fnmadd.h f23, f30, f21, f28, dyn # perform operation
fnmadd.h f23, f30, f21, f28, rdn # perform operation
fnmadd.h f23, f30, f21, f28, rmm # perform operation
fnmadd.h f23, f30, f21, f28, rne # perform operation
fnmadd.h f23, f30, f21, f28, rtz # perform operation
fnmadd.h f23, f30, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f30, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f30, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f30, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f30, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f30, f21, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0x13cf69de # load x3 with value 0x13cf69de
sw x3, 0(x2) # store 0x13cf69de in memory
flh f6, 0(x2) # load 0x13cf69de from memory into f6
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f31, 0(x2) # load 0x000058b4 from memory into f31
fnmadd.h f14, f15, f6, f31, dyn # perform operation
fnmadd.h f14, f15, f6, f31, rdn # perform operation
fnmadd.h f14, f15, f6, f31, rmm # perform operation
fnmadd.h f14, f15, f6, f31, rne # perform operation
fnmadd.h f14, f15, f6, f31, rtz # perform operation
fnmadd.h f14, f15, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f15, f6, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0x06be753a # load x3 with value 0x06be753a
sw x3, 0(x2) # store 0x06be753a in memory
flh f8, 0(x2) # load 0x06be753a from memory into f8
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f11, 0(x2) # load 0x0000c93a from memory into f11
fnmadd.h f1, f15, f8, f11, dyn # perform operation
fnmadd.h f1, f15, f8, f11, rdn # perform operation
fnmadd.h f1, f15, f8, f11, rmm # perform operation
fnmadd.h f1, f15, f8, f11, rne # perform operation
fnmadd.h f1, f15, f8, f11, rtz # perform operation
fnmadd.h f1, f15, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f15, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f15, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f15, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f15, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f15, f8, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x0)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f29, 0(x2) # load 0x00008000 from memory into f29
la x2, scratch
li x3, 0xd12e1730 # load x3 with value 0xd12e1730
sw x3, 0(x2) # store 0xd12e1730 in memory
flh f18, 0(x2) # load 0xd12e1730 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f3, 0(x2) # load 0x00000000 from memory into f3
fnmadd.h f30, f29, f18, f3, dyn # perform operation
fnmadd.h f30, f29, f18, f3, rdn # perform operation
fnmadd.h f30, f29, f18, f3, rmm # perform operation
fnmadd.h f30, f29, f18, f3, rne # perform operation
fnmadd.h f30, f29, f18, f3, rtz # perform operation
fnmadd.h f30, f29, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f29, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f29, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f29, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f29, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f29, f18, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x8000)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f25, 0(x2) # load 0x00008000 from memory into f25
la x2, scratch
li x3, 0x10d0f69f # load x3 with value 0x10d0f69f
sw x3, 0(x2) # store 0x10d0f69f in memory
flh f28, 0(x2) # load 0x10d0f69f from memory into f28
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f11, 0(x2) # load 0x00008000 from memory into f11
fnmadd.h f12, f25, f28, f11, dyn # perform operation
fnmadd.h f12, f25, f28, f11, rdn # perform operation
fnmadd.h f12, f25, f28, f11, rmm # perform operation
fnmadd.h f12, f25, f28, f11, rne # perform operation
fnmadd.h f12, f25, f28, f11, rtz # perform operation
fnmadd.h f12, f25, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f25, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f25, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f25, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f25, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f25, f28, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f11, 0(x2) # load 0x00008000 from memory into f11
la x2, scratch
li x3, 0xea290f97 # load x3 with value 0xea290f97
sw x3, 0(x2) # store 0xea290f97 in memory
flh f10, 0(x2) # load 0xea290f97 from memory into f10
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f29, 0(x2) # load 0x00003c00 from memory into f29
fnmadd.h f2, f11, f10, f29, dyn # perform operation
fnmadd.h f2, f11, f10, f29, rdn # perform operation
fnmadd.h f2, f11, f10, f29, rmm # perform operation
fnmadd.h f2, f11, f10, f29, rne # perform operation
fnmadd.h f2, f11, f10, f29, rtz # perform operation
fnmadd.h f2, f11, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f11, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f11, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f11, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f11, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f11, f10, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f5, 0(x2) # load 0x00008000 from memory into f5
la x2, scratch
li x3, 0xc38a74c2 # load x3 with value 0xc38a74c2
sw x3, 0(x2) # store 0xc38a74c2 in memory
flh f15, 0(x2) # load 0xc38a74c2 from memory into f15
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f30, 0(x2) # load 0x0000bc00 from memory into f30
fnmadd.h f1, f5, f15, f30, dyn # perform operation
fnmadd.h f1, f5, f15, f30, rdn # perform operation
fnmadd.h f1, f5, f15, f30, rmm # perform operation
fnmadd.h f1, f5, f15, f30, rne # perform operation
fnmadd.h f1, f5, f15, f30, rtz # perform operation
fnmadd.h f1, f5, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f5, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f5, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f5, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f5, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f5, f15, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f3, 0(x2) # load 0x00008000 from memory into f3
la x2, scratch
li x3, 0x8b2f29be # load x3 with value 0x8b2f29be
sw x3, 0(x2) # store 0x8b2f29be in memory
flh f6, 0(x2) # load 0x8b2f29be from memory into f6
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f1, 0(x2) # load 0x00003e00 from memory into f1
fnmadd.h f28, f3, f6, f1, dyn # perform operation
fnmadd.h f28, f3, f6, f1, rdn # perform operation
fnmadd.h f28, f3, f6, f1, rmm # perform operation
fnmadd.h f28, f3, f6, f1, rne # perform operation
fnmadd.h f28, f3, f6, f1, rtz # perform operation
fnmadd.h f28, f3, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f3, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f3, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f3, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f3, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f3, f6, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f29, 0(x2) # load 0x00008000 from memory into f29
la x2, scratch
li x3, 0x998bd257 # load x3 with value 0x998bd257
sw x3, 0(x2) # store 0x998bd257 in memory
flh f10, 0(x2) # load 0x998bd257 from memory into f10
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
fnmadd.h f12, f29, f10, f1, dyn # perform operation
fnmadd.h f12, f29, f10, f1, rdn # perform operation
fnmadd.h f12, f29, f10, f1, rmm # perform operation
fnmadd.h f12, f29, f10, f1, rne # perform operation
fnmadd.h f12, f29, f10, f1, rtz # perform operation
fnmadd.h f12, f29, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f29, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f29, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f29, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f29, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f29, f10, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x4000)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
la x2, scratch
li x3, 0x1842d1f3 # load x3 with value 0x1842d1f3
sw x3, 0(x2) # store 0x1842d1f3 in memory
flh f17, 0(x2) # load 0x1842d1f3 from memory into f17
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f7, 0(x2) # load 0x00004000 from memory into f7
fnmadd.h f6, f12, f17, f7, dyn # perform operation
fnmadd.h f6, f12, f17, f7, rdn # perform operation
fnmadd.h f6, f12, f17, f7, rmm # perform operation
fnmadd.h f6, f12, f17, f7, rne # perform operation
fnmadd.h f6, f12, f17, f7, rtz # perform operation
fnmadd.h f6, f12, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f12, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f12, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f12, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f12, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f12, f17, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xc000)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f29, 0(x2) # load 0x00008000 from memory into f29
la x2, scratch
li x3, 0x3dac2310 # load x3 with value 0x3dac2310
sw x3, 0(x2) # store 0x3dac2310 in memory
flh f20, 0(x2) # load 0x3dac2310 from memory into f20
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f17, 0(x2) # load 0x0000c000 from memory into f17
fnmadd.h f6, f29, f20, f17, dyn # perform operation
fnmadd.h f6, f29, f20, f17, rdn # perform operation
fnmadd.h f6, f29, f20, f17, rmm # perform operation
fnmadd.h f6, f29, f20, f17, rne # perform operation
fnmadd.h f6, f29, f20, f17, rtz # perform operation
fnmadd.h f6, f29, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f29, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f29, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f29, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f29, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f29, f20, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x400)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f14, 0(x2) # load 0x00008000 from memory into f14
la x2, scratch
li x3, 0xdd14a5b9 # load x3 with value 0xdd14a5b9
sw x3, 0(x2) # store 0xdd14a5b9 in memory
flh f21, 0(x2) # load 0xdd14a5b9 from memory into f21
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f17, 0(x2) # load 0x00000400 from memory into f17
fnmadd.h f25, f14, f21, f17, dyn # perform operation
fnmadd.h f25, f14, f21, f17, rdn # perform operation
fnmadd.h f25, f14, f21, f17, rmm # perform operation
fnmadd.h f25, f14, f21, f17, rne # perform operation
fnmadd.h f25, f14, f21, f17, rtz # perform operation
fnmadd.h f25, f14, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f14, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f14, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f14, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f14, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f14, f21, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x8400)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f11, 0(x2) # load 0x00008000 from memory into f11
la x2, scratch
li x3, 0x514a7125 # load x3 with value 0x514a7125
sw x3, 0(x2) # store 0x514a7125 in memory
flh f5, 0(x2) # load 0x514a7125 from memory into f5
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f3, 0(x2) # load 0x00008400 from memory into f3
fnmadd.h f27, f11, f5, f3, dyn # perform operation
fnmadd.h f27, f11, f5, f3, rdn # perform operation
fnmadd.h f27, f11, f5, f3, rmm # perform operation
fnmadd.h f27, f11, f5, f3, rne # perform operation
fnmadd.h f27, f11, f5, f3, rtz # perform operation
fnmadd.h f27, f11, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f11, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f11, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f11, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f11, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f11, f5, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f22, 0(x2) # load 0x00008000 from memory into f22
la x2, scratch
li x3, 0x4b28682c # load x3 with value 0x4b28682c
sw x3, 0(x2) # store 0x4b28682c in memory
flh f26, 0(x2) # load 0x4b28682c from memory into f26
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f1, 0(x2) # load 0x00007bff from memory into f1
fnmadd.h f7, f22, f26, f1, dyn # perform operation
fnmadd.h f7, f22, f26, f1, rdn # perform operation
fnmadd.h f7, f22, f26, f1, rmm # perform operation
fnmadd.h f7, f22, f26, f1, rne # perform operation
fnmadd.h f7, f22, f26, f1, rtz # perform operation
fnmadd.h f7, f22, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f22, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f22, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f22, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f22, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f22, f26, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f19, 0(x2) # load 0x00008000 from memory into f19
la x2, scratch
li x3, 0xfe98f0be # load x3 with value 0xfe98f0be
sw x3, 0(x2) # store 0xfe98f0be in memory
flh f17, 0(x2) # load 0xfe98f0be from memory into f17
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f11, 0(x2) # load 0x0000fbff from memory into f11
fnmadd.h f2, f19, f17, f11, dyn # perform operation
fnmadd.h f2, f19, f17, f11, rdn # perform operation
fnmadd.h f2, f19, f17, f11, rmm # perform operation
fnmadd.h f2, f19, f17, f11, rne # perform operation
fnmadd.h f2, f19, f17, f11, rtz # perform operation
fnmadd.h f2, f19, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f19, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f19, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f19, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f19, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f19, f17, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f7, 0(x2) # load 0x00008000 from memory into f7
la x2, scratch
li x3, 0x9f4872a6 # load x3 with value 0x9f4872a6
sw x3, 0(x2) # store 0x9f4872a6 in memory
flh f25, 0(x2) # load 0x9f4872a6 from memory into f25
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f2, 0(x2) # load 0x000003ff from memory into f2
fnmadd.h f22, f7, f25, f2, dyn # perform operation
fnmadd.h f22, f7, f25, f2, rdn # perform operation
fnmadd.h f22, f7, f25, f2, rmm # perform operation
fnmadd.h f22, f7, f25, f2, rne # perform operation
fnmadd.h f22, f7, f25, f2, rtz # perform operation
fnmadd.h f22, f7, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f7, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f7, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f7, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f7, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f7, f25, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f26, 0(x2) # load 0x00008000 from memory into f26
la x2, scratch
li x3, 0x5c45bdbe # load x3 with value 0x5c45bdbe
sw x3, 0(x2) # store 0x5c45bdbe in memory
flh f7, 0(x2) # load 0x5c45bdbe from memory into f7
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f15, 0(x2) # load 0x000083ff from memory into f15
fnmadd.h f13, f26, f7, f15, dyn # perform operation
fnmadd.h f13, f26, f7, f15, rdn # perform operation
fnmadd.h f13, f26, f7, f15, rmm # perform operation
fnmadd.h f13, f26, f7, f15, rne # perform operation
fnmadd.h f13, f26, f7, f15, rtz # perform operation
fnmadd.h f13, f26, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f26, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f26, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f26, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f26, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f26, f7, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x200)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f22, 0(x2) # load 0x00008000 from memory into f22
la x2, scratch
li x3, 0x991b7815 # load x3 with value 0x991b7815
sw x3, 0(x2) # store 0x991b7815 in memory
flh f16, 0(x2) # load 0x991b7815 from memory into f16
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f31, 0(x2) # load 0x00000200 from memory into f31
fnmadd.h f29, f22, f16, f31, dyn # perform operation
fnmadd.h f29, f22, f16, f31, rdn # perform operation
fnmadd.h f29, f22, f16, f31, rmm # perform operation
fnmadd.h f29, f22, f16, f31, rne # perform operation
fnmadd.h f29, f22, f16, f31, rtz # perform operation
fnmadd.h f29, f22, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f22, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f22, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f22, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f22, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f22, f16, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x8200)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f9, 0(x2) # load 0x00008000 from memory into f9
la x2, scratch
li x3, 0x0b199a30 # load x3 with value 0x0b199a30
sw x3, 0(x2) # store 0x0b199a30 in memory
flh f1, 0(x2) # load 0x0b199a30 from memory into f1
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f26, 0(x2) # load 0x00008200 from memory into f26
fnmadd.h f7, f9, f1, f26, dyn # perform operation
fnmadd.h f7, f9, f1, f26, rdn # perform operation
fnmadd.h f7, f9, f1, f26, rmm # perform operation
fnmadd.h f7, f9, f1, f26, rne # perform operation
fnmadd.h f7, f9, f1, f26, rtz # perform operation
fnmadd.h f7, f9, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f9, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f9, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f9, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f9, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f9, f1, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x1)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f2, 0(x2) # load 0x00008000 from memory into f2
la x2, scratch
li x3, 0x6b80ea88 # load x3 with value 0x6b80ea88
sw x3, 0(x2) # store 0x6b80ea88 in memory
flh f16, 0(x2) # load 0x6b80ea88 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f19, 0(x2) # load 0x00000001 from memory into f19
fnmadd.h f5, f2, f16, f19, dyn # perform operation
fnmadd.h f5, f2, f16, f19, rdn # perform operation
fnmadd.h f5, f2, f16, f19, rmm # perform operation
fnmadd.h f5, f2, f16, f19, rne # perform operation
fnmadd.h f5, f2, f16, f19, rtz # perform operation
fnmadd.h f5, f2, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f2, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f2, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f2, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f2, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f2, f16, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x8001)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f15, 0(x2) # load 0x00008000 from memory into f15
la x2, scratch
li x3, 0x08d3b0ae # load x3 with value 0x08d3b0ae
sw x3, 0(x2) # store 0x08d3b0ae in memory
flh f30, 0(x2) # load 0x08d3b0ae from memory into f30
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f8, 0(x2) # load 0x00008001 from memory into f8
fnmadd.h f11, f15, f30, f8, dyn # perform operation
fnmadd.h f11, f15, f30, f8, rdn # perform operation
fnmadd.h f11, f15, f30, f8, rmm # perform operation
fnmadd.h f11, f15, f30, f8, rne # perform operation
fnmadd.h f11, f15, f30, f8, rtz # perform operation
fnmadd.h f11, f15, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f15, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f15, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f15, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f15, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f15, f30, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f9, 0(x2) # load 0x00008000 from memory into f9
la x2, scratch
li x3, 0x7a7e82ee # load x3 with value 0x7a7e82ee
sw x3, 0(x2) # store 0x7a7e82ee in memory
flh f25, 0(x2) # load 0x7a7e82ee from memory into f25
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f12, 0(x2) # load 0x00007c00 from memory into f12
fnmadd.h f13, f9, f25, f12, dyn # perform operation
fnmadd.h f13, f9, f25, f12, rdn # perform operation
fnmadd.h f13, f9, f25, f12, rmm # perform operation
fnmadd.h f13, f9, f25, f12, rne # perform operation
fnmadd.h f13, f9, f25, f12, rtz # perform operation
fnmadd.h f13, f9, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f9, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f9, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f9, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f9, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f9, f25, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f13, 0(x2) # load 0x00008000 from memory into f13
la x2, scratch
li x3, 0x64275092 # load x3 with value 0x64275092
sw x3, 0(x2) # store 0x64275092 in memory
flh f22, 0(x2) # load 0x64275092 from memory into f22
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f30, 0(x2) # load 0x0000fc00 from memory into f30
fnmadd.h f9, f13, f22, f30, dyn # perform operation
fnmadd.h f9, f13, f22, f30, rdn # perform operation
fnmadd.h f9, f13, f22, f30, rmm # perform operation
fnmadd.h f9, f13, f22, f30, rne # perform operation
fnmadd.h f9, f13, f22, f30, rtz # perform operation
fnmadd.h f9, f13, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f13, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f13, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f13, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f13, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f13, f22, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f30, 0(x2) # load 0x00008000 from memory into f30
la x2, scratch
li x3, 0xe2328832 # load x3 with value 0xe2328832
sw x3, 0(x2) # store 0xe2328832 in memory
flh f3, 0(x2) # load 0xe2328832 from memory into f3
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f1, 0(x2) # load 0x00007e00 from memory into f1
fnmadd.h f28, f30, f3, f1, dyn # perform operation
fnmadd.h f28, f30, f3, f1, rdn # perform operation
fnmadd.h f28, f30, f3, f1, rmm # perform operation
fnmadd.h f28, f30, f3, f1, rne # perform operation
fnmadd.h f28, f30, f3, f1, rtz # perform operation
fnmadd.h f28, f30, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f30, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f30, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f30, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f30, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f30, f3, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
la x2, scratch
li x3, 0x1278a168 # load x3 with value 0x1278a168
sw x3, 0(x2) # store 0x1278a168 in memory
flh f22, 0(x2) # load 0x1278a168 from memory into f22
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f28, 0(x2) # load 0x00007fff from memory into f28
fnmadd.h f31, f12, f22, f28, dyn # perform operation
fnmadd.h f31, f12, f22, f28, rdn # perform operation
fnmadd.h f31, f12, f22, f28, rmm # perform operation
fnmadd.h f31, f12, f22, f28, rne # perform operation
fnmadd.h f31, f12, f22, f28, rtz # perform operation
fnmadd.h f31, f12, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f12, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f12, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f12, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f12, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f12, f22, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f7, 0(x2) # load 0x00008000 from memory into f7
la x2, scratch
li x3, 0xabd4925c # load x3 with value 0xabd4925c
sw x3, 0(x2) # store 0xabd4925c in memory
flh f23, 0(x2) # load 0xabd4925c from memory into f23
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f21, 0(x2) # load 0x0000fe00 from memory into f21
fnmadd.h f11, f7, f23, f21, dyn # perform operation
fnmadd.h f11, f7, f23, f21, rdn # perform operation
fnmadd.h f11, f7, f23, f21, rmm # perform operation
fnmadd.h f11, f7, f23, f21, rne # perform operation
fnmadd.h f11, f7, f23, f21, rtz # perform operation
fnmadd.h f11, f7, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f7, f23, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f9, 0(x2) # load 0x00008000 from memory into f9
la x2, scratch
li x3, 0x57fe62a9 # load x3 with value 0x57fe62a9
sw x3, 0(x2) # store 0x57fe62a9 in memory
flh f3, 0(x2) # load 0x57fe62a9 from memory into f3
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f14, 0(x2) # load 0x00007c01 from memory into f14
fnmadd.h f26, f9, f3, f14, dyn # perform operation
fnmadd.h f26, f9, f3, f14, rdn # perform operation
fnmadd.h f26, f9, f3, f14, rmm # perform operation
fnmadd.h f26, f9, f3, f14, rne # perform operation
fnmadd.h f26, f9, f3, f14, rtz # perform operation
fnmadd.h f26, f9, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f9, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f9, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f9, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f9, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f9, f3, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f20, 0(x2) # load 0x00008000 from memory into f20
la x2, scratch
li x3, 0xcf0bdae6 # load x3 with value 0xcf0bdae6
sw x3, 0(x2) # store 0xcf0bdae6 in memory
flh f19, 0(x2) # load 0xcf0bdae6 from memory into f19
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f13, 0(x2) # load 0x00007dff from memory into f13
fnmadd.h f25, f20, f19, f13, dyn # perform operation
fnmadd.h f25, f20, f19, f13, rdn # perform operation
fnmadd.h f25, f20, f19, f13, rmm # perform operation
fnmadd.h f25, f20, f19, f13, rne # perform operation
fnmadd.h f25, f20, f19, f13, rtz # perform operation
fnmadd.h f25, f20, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f20, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f20, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f20, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f20, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f20, f19, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f9, 0(x2) # load 0x00008000 from memory into f9
la x2, scratch
li x3, 0x7e0be085 # load x3 with value 0x7e0be085
sw x3, 0(x2) # store 0x7e0be085 in memory
flh f21, 0(x2) # load 0x7e0be085 from memory into f21
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f8, 0(x2) # load 0x0000fc01 from memory into f8
fnmadd.h f31, f9, f21, f8, dyn # perform operation
fnmadd.h f31, f9, f21, f8, rdn # perform operation
fnmadd.h f31, f9, f21, f8, rmm # perform operation
fnmadd.h f31, f9, f21, f8, rne # perform operation
fnmadd.h f31, f9, f21, f8, rtz # perform operation
fnmadd.h f31, f9, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f9, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f9, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f9, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f9, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f9, f21, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
la x2, scratch
li x3, 0xb3b009a1 # load x3 with value 0xb3b009a1
sw x3, 0(x2) # store 0xb3b009a1 in memory
flh f19, 0(x2) # load 0xb3b009a1 from memory into f19
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f16, 0(x2) # load 0x000058b4 from memory into f16
fnmadd.h f8, f12, f19, f16, dyn # perform operation
fnmadd.h f8, f12, f19, f16, rdn # perform operation
fnmadd.h f8, f12, f19, f16, rmm # perform operation
fnmadd.h f8, f12, f19, f16, rne # perform operation
fnmadd.h f8, f12, f19, f16, rtz # perform operation
fnmadd.h f8, f12, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f12, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f12, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f12, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f12, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f12, f19, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f18, 0(x2) # load 0x00008000 from memory into f18
la x2, scratch
li x3, 0xb1a48152 # load x3 with value 0xb1a48152
sw x3, 0(x2) # store 0xb1a48152 in memory
flh f23, 0(x2) # load 0xb1a48152 from memory into f23
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f26, 0(x2) # load 0x0000c93a from memory into f26
fnmadd.h f31, f18, f23, f26, dyn # perform operation
fnmadd.h f31, f18, f23, f26, rdn # perform operation
fnmadd.h f31, f18, f23, f26, rmm # perform operation
fnmadd.h f31, f18, f23, f26, rne # perform operation
fnmadd.h f31, f18, f23, f26, rtz # perform operation
fnmadd.h f31, f18, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f18, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f18, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f18, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f18, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f18, f23, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x0)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
la x2, scratch
li x3, 0x1fbbf1d7 # load x3 with value 0x1fbbf1d7
sw x3, 0(x2) # store 0x1fbbf1d7 in memory
flh f26, 0(x2) # load 0x1fbbf1d7 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f29, 0(x2) # load 0x00000000 from memory into f29
fnmadd.h f15, f6, f26, f29, dyn # perform operation
fnmadd.h f15, f6, f26, f29, rdn # perform operation
fnmadd.h f15, f6, f26, f29, rmm # perform operation
fnmadd.h f15, f6, f26, f29, rne # perform operation
fnmadd.h f15, f6, f26, f29, rtz # perform operation
fnmadd.h f15, f6, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f6, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f6, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f6, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f6, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f6, f26, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x8000)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f31, 0(x2) # load 0x00003c00 from memory into f31
la x2, scratch
li x3, 0x83d0262e # load x3 with value 0x83d0262e
sw x3, 0(x2) # store 0x83d0262e in memory
flh f22, 0(x2) # load 0x83d0262e from memory into f22
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f7, 0(x2) # load 0x00008000 from memory into f7
fnmadd.h f14, f31, f22, f7, dyn # perform operation
fnmadd.h f14, f31, f22, f7, rdn # perform operation
fnmadd.h f14, f31, f22, f7, rmm # perform operation
fnmadd.h f14, f31, f22, f7, rne # perform operation
fnmadd.h f14, f31, f22, f7, rtz # perform operation
fnmadd.h f14, f31, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f31, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f31, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f31, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f31, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f31, f22, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f29, 0(x2) # load 0x00003c00 from memory into f29
la x2, scratch
li x3, 0xf404049e # load x3 with value 0xf404049e
sw x3, 0(x2) # store 0xf404049e in memory
flh f20, 0(x2) # load 0xf404049e from memory into f20
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f22, 0(x2) # load 0x00003c00 from memory into f22
fnmadd.h f14, f29, f20, f22, dyn # perform operation
fnmadd.h f14, f29, f20, f22, rdn # perform operation
fnmadd.h f14, f29, f20, f22, rmm # perform operation
fnmadd.h f14, f29, f20, f22, rne # perform operation
fnmadd.h f14, f29, f20, f22, rtz # perform operation
fnmadd.h f14, f29, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f29, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f29, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f29, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f29, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f29, f20, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f26, 0(x2) # load 0x00003c00 from memory into f26
la x2, scratch
li x3, 0x937d6b60 # load x3 with value 0x937d6b60
sw x3, 0(x2) # store 0x937d6b60 in memory
flh f30, 0(x2) # load 0x937d6b60 from memory into f30
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f29, 0(x2) # load 0x0000bc00 from memory into f29
fnmadd.h f19, f26, f30, f29, dyn # perform operation
fnmadd.h f19, f26, f30, f29, rdn # perform operation
fnmadd.h f19, f26, f30, f29, rmm # perform operation
fnmadd.h f19, f26, f30, f29, rne # perform operation
fnmadd.h f19, f26, f30, f29, rtz # perform operation
fnmadd.h f19, f26, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f26, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f26, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f26, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f26, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f26, f30, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
la x2, scratch
li x3, 0x3ab0c2ca # load x3 with value 0x3ab0c2ca
sw x3, 0(x2) # store 0x3ab0c2ca in memory
flh f16, 0(x2) # load 0x3ab0c2ca from memory into f16
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f20, 0(x2) # load 0x00003e00 from memory into f20
fnmadd.h f14, f6, f16, f20, dyn # perform operation
fnmadd.h f14, f6, f16, f20, rdn # perform operation
fnmadd.h f14, f6, f16, f20, rmm # perform operation
fnmadd.h f14, f6, f16, f20, rne # perform operation
fnmadd.h f14, f6, f16, f20, rtz # perform operation
fnmadd.h f14, f6, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f6, f16, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f15, 0(x2) # load 0x00003c00 from memory into f15
la x2, scratch
li x3, 0x95f47d7c # load x3 with value 0x95f47d7c
sw x3, 0(x2) # store 0x95f47d7c in memory
flh f19, 0(x2) # load 0x95f47d7c from memory into f19
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f21, 0(x2) # load 0x0000be00 from memory into f21
fnmadd.h f30, f15, f19, f21, dyn # perform operation
fnmadd.h f30, f15, f19, f21, rdn # perform operation
fnmadd.h f30, f15, f19, f21, rmm # perform operation
fnmadd.h f30, f15, f19, f21, rne # perform operation
fnmadd.h f30, f15, f19, f21, rtz # perform operation
fnmadd.h f30, f15, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f15, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f15, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f15, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f15, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f15, f19, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x4000)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f10, 0(x2) # load 0x00003c00 from memory into f10
la x2, scratch
li x3, 0xfd915d89 # load x3 with value 0xfd915d89
sw x3, 0(x2) # store 0xfd915d89 in memory
flh f5, 0(x2) # load 0xfd915d89 from memory into f5
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f20, 0(x2) # load 0x00004000 from memory into f20
fnmadd.h f16, f10, f5, f20, dyn # perform operation
fnmadd.h f16, f10, f5, f20, rdn # perform operation
fnmadd.h f16, f10, f5, f20, rmm # perform operation
fnmadd.h f16, f10, f5, f20, rne # perform operation
fnmadd.h f16, f10, f5, f20, rtz # perform operation
fnmadd.h f16, f10, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f10, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f10, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f10, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f10, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f10, f5, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xc000)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f1, 0(x2) # load 0x00003c00 from memory into f1
la x2, scratch
li x3, 0xd50dcc6a # load x3 with value 0xd50dcc6a
sw x3, 0(x2) # store 0xd50dcc6a in memory
flh f6, 0(x2) # load 0xd50dcc6a from memory into f6
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f14, 0(x2) # load 0x0000c000 from memory into f14
fnmadd.h f25, f1, f6, f14, dyn # perform operation
fnmadd.h f25, f1, f6, f14, rdn # perform operation
fnmadd.h f25, f1, f6, f14, rmm # perform operation
fnmadd.h f25, f1, f6, f14, rne # perform operation
fnmadd.h f25, f1, f6, f14, rtz # perform operation
fnmadd.h f25, f1, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f1, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f1, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f1, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f1, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f1, f6, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x400)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f21, 0(x2) # load 0x00003c00 from memory into f21
la x2, scratch
li x3, 0x8a58b207 # load x3 with value 0x8a58b207
sw x3, 0(x2) # store 0x8a58b207 in memory
flh f7, 0(x2) # load 0x8a58b207 from memory into f7
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f2, 0(x2) # load 0x00000400 from memory into f2
fnmadd.h f27, f21, f7, f2, dyn # perform operation
fnmadd.h f27, f21, f7, f2, rdn # perform operation
fnmadd.h f27, f21, f7, f2, rmm # perform operation
fnmadd.h f27, f21, f7, f2, rne # perform operation
fnmadd.h f27, f21, f7, f2, rtz # perform operation
fnmadd.h f27, f21, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f21, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f21, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f21, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f21, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f21, f7, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x8400)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
la x2, scratch
li x3, 0x1fa0d542 # load x3 with value 0x1fa0d542
sw x3, 0(x2) # store 0x1fa0d542 in memory
flh f27, 0(x2) # load 0x1fa0d542 from memory into f27
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f7, 0(x2) # load 0x00008400 from memory into f7
fnmadd.h f5, f8, f27, f7, dyn # perform operation
fnmadd.h f5, f8, f27, f7, rdn # perform operation
fnmadd.h f5, f8, f27, f7, rmm # perform operation
fnmadd.h f5, f8, f27, f7, rne # perform operation
fnmadd.h f5, f8, f27, f7, rtz # perform operation
fnmadd.h f5, f8, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f8, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f8, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f8, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f8, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f8, f27, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
la x2, scratch
li x3, 0xa81def73 # load x3 with value 0xa81def73
sw x3, 0(x2) # store 0xa81def73 in memory
flh f9, 0(x2) # load 0xa81def73 from memory into f9
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f2, 0(x2) # load 0x00007bff from memory into f2
fnmadd.h f12, f6, f9, f2, dyn # perform operation
fnmadd.h f12, f6, f9, f2, rdn # perform operation
fnmadd.h f12, f6, f9, f2, rmm # perform operation
fnmadd.h f12, f6, f9, f2, rne # perform operation
fnmadd.h f12, f6, f9, f2, rtz # perform operation
fnmadd.h f12, f6, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f6, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f6, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f6, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f6, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f6, f9, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
la x2, scratch
li x3, 0xa5de221d # load x3 with value 0xa5de221d
sw x3, 0(x2) # store 0xa5de221d in memory
flh f23, 0(x2) # load 0xa5de221d from memory into f23
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
fnmadd.h f11, f18, f23, f15, dyn # perform operation
fnmadd.h f11, f18, f23, f15, rdn # perform operation
fnmadd.h f11, f18, f23, f15, rmm # perform operation
fnmadd.h f11, f18, f23, f15, rne # perform operation
fnmadd.h f11, f18, f23, f15, rtz # perform operation
fnmadd.h f11, f18, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f18, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f18, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f18, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f18, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f18, f23, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f25, 0(x2) # load 0x00003c00 from memory into f25
la x2, scratch
li x3, 0x1d7b1cd5 # load x3 with value 0x1d7b1cd5
sw x3, 0(x2) # store 0x1d7b1cd5 in memory
flh f16, 0(x2) # load 0x1d7b1cd5 from memory into f16
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f3, 0(x2) # load 0x000003ff from memory into f3
fnmadd.h f11, f25, f16, f3, dyn # perform operation
fnmadd.h f11, f25, f16, f3, rdn # perform operation
fnmadd.h f11, f25, f16, f3, rmm # perform operation
fnmadd.h f11, f25, f16, f3, rne # perform operation
fnmadd.h f11, f25, f16, f3, rtz # perform operation
fnmadd.h f11, f25, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f25, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f25, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f25, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f25, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f25, f16, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f25, 0(x2) # load 0x00003c00 from memory into f25
la x2, scratch
li x3, 0x6235661d # load x3 with value 0x6235661d
sw x3, 0(x2) # store 0x6235661d in memory
flh f27, 0(x2) # load 0x6235661d from memory into f27
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
fnmadd.h f13, f25, f27, f18, dyn # perform operation
fnmadd.h f13, f25, f27, f18, rdn # perform operation
fnmadd.h f13, f25, f27, f18, rmm # perform operation
fnmadd.h f13, f25, f27, f18, rne # perform operation
fnmadd.h f13, f25, f27, f18, rtz # perform operation
fnmadd.h f13, f25, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f25, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f25, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f25, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f25, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f25, f27, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x200)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f30, 0(x2) # load 0x00003c00 from memory into f30
la x2, scratch
li x3, 0xbcbac556 # load x3 with value 0xbcbac556
sw x3, 0(x2) # store 0xbcbac556 in memory
flh f1, 0(x2) # load 0xbcbac556 from memory into f1
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f3, 0(x2) # load 0x00000200 from memory into f3
fnmadd.h f21, f30, f1, f3, dyn # perform operation
fnmadd.h f21, f30, f1, f3, rdn # perform operation
fnmadd.h f21, f30, f1, f3, rmm # perform operation
fnmadd.h f21, f30, f1, f3, rne # perform operation
fnmadd.h f21, f30, f1, f3, rtz # perform operation
fnmadd.h f21, f30, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f30, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f30, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f30, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f30, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f30, f1, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x8200)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
la x2, scratch
li x3, 0x0d31702e # load x3 with value 0x0d31702e
sw x3, 0(x2) # store 0x0d31702e in memory
flh f2, 0(x2) # load 0x0d31702e from memory into f2
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
fnmadd.h f18, f16, f2, f6, dyn # perform operation
fnmadd.h f18, f16, f2, f6, rdn # perform operation
fnmadd.h f18, f16, f2, f6, rmm # perform operation
fnmadd.h f18, f16, f2, f6, rne # perform operation
fnmadd.h f18, f16, f2, f6, rtz # perform operation
fnmadd.h f18, f16, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f16, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f16, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f16, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f16, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f16, f2, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x1)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f29, 0(x2) # load 0x00003c00 from memory into f29
la x2, scratch
li x3, 0xb62365fb # load x3 with value 0xb62365fb
sw x3, 0(x2) # store 0xb62365fb in memory
flh f6, 0(x2) # load 0xb62365fb from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f26, 0(x2) # load 0x00000001 from memory into f26
fnmadd.h f13, f29, f6, f26, dyn # perform operation
fnmadd.h f13, f29, f6, f26, rdn # perform operation
fnmadd.h f13, f29, f6, f26, rmm # perform operation
fnmadd.h f13, f29, f6, f26, rne # perform operation
fnmadd.h f13, f29, f6, f26, rtz # perform operation
fnmadd.h f13, f29, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f29, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f29, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f29, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f29, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f29, f6, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x8001)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f11, 0(x2) # load 0x00003c00 from memory into f11
la x2, scratch
li x3, 0x05e8a89e # load x3 with value 0x05e8a89e
sw x3, 0(x2) # store 0x05e8a89e in memory
flh f8, 0(x2) # load 0x05e8a89e from memory into f8
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f30, 0(x2) # load 0x00008001 from memory into f30
fnmadd.h f14, f11, f8, f30, dyn # perform operation
fnmadd.h f14, f11, f8, f30, rdn # perform operation
fnmadd.h f14, f11, f8, f30, rmm # perform operation
fnmadd.h f14, f11, f8, f30, rne # perform operation
fnmadd.h f14, f11, f8, f30, rtz # perform operation
fnmadd.h f14, f11, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f11, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f11, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f11, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f11, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f11, f8, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f1, 0(x2) # load 0x00003c00 from memory into f1
la x2, scratch
li x3, 0xca97b596 # load x3 with value 0xca97b596
sw x3, 0(x2) # store 0xca97b596 in memory
flh f31, 0(x2) # load 0xca97b596 from memory into f31
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f18, 0(x2) # load 0x00007c00 from memory into f18
fnmadd.h f29, f1, f31, f18, dyn # perform operation
fnmadd.h f29, f1, f31, f18, rdn # perform operation
fnmadd.h f29, f1, f31, f18, rmm # perform operation
fnmadd.h f29, f1, f31, f18, rne # perform operation
fnmadd.h f29, f1, f31, f18, rtz # perform operation
fnmadd.h f29, f1, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f1, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f1, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f1, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f1, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f1, f31, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
la x2, scratch
li x3, 0x686280fa # load x3 with value 0x686280fa
sw x3, 0(x2) # store 0x686280fa in memory
flh f3, 0(x2) # load 0x686280fa from memory into f3
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f20, 0(x2) # load 0x0000fc00 from memory into f20
fnmadd.h f26, f6, f3, f20, dyn # perform operation
fnmadd.h f26, f6, f3, f20, rdn # perform operation
fnmadd.h f26, f6, f3, f20, rmm # perform operation
fnmadd.h f26, f6, f3, f20, rne # perform operation
fnmadd.h f26, f6, f3, f20, rtz # perform operation
fnmadd.h f26, f6, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f6, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f6, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f6, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f6, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f6, f3, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f28, 0(x2) # load 0x00003c00 from memory into f28
la x2, scratch
li x3, 0x1dae8cba # load x3 with value 0x1dae8cba
sw x3, 0(x2) # store 0x1dae8cba in memory
flh f1, 0(x2) # load 0x1dae8cba from memory into f1
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
fnmadd.h f2, f28, f1, f18, dyn # perform operation
fnmadd.h f2, f28, f1, f18, rdn # perform operation
fnmadd.h f2, f28, f1, f18, rmm # perform operation
fnmadd.h f2, f28, f1, f18, rne # perform operation
fnmadd.h f2, f28, f1, f18, rtz # perform operation
fnmadd.h f2, f28, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f28, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f28, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f28, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f28, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f28, f1, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
la x2, scratch
li x3, 0xeb1f7cb0 # load x3 with value 0xeb1f7cb0
sw x3, 0(x2) # store 0xeb1f7cb0 in memory
flh f3, 0(x2) # load 0xeb1f7cb0 from memory into f3
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f5, 0(x2) # load 0x00007fff from memory into f5
fnmadd.h f11, f8, f3, f5, dyn # perform operation
fnmadd.h f11, f8, f3, f5, rdn # perform operation
fnmadd.h f11, f8, f3, f5, rmm # perform operation
fnmadd.h f11, f8, f3, f5, rne # perform operation
fnmadd.h f11, f8, f3, f5, rtz # perform operation
fnmadd.h f11, f8, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f8, f3, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f21, 0(x2) # load 0x00003c00 from memory into f21
la x2, scratch
li x3, 0xcfc7048b # load x3 with value 0xcfc7048b
sw x3, 0(x2) # store 0xcfc7048b in memory
flh f28, 0(x2) # load 0xcfc7048b from memory into f28
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f30, 0(x2) # load 0x0000fe00 from memory into f30
fnmadd.h f16, f21, f28, f30, dyn # perform operation
fnmadd.h f16, f21, f28, f30, rdn # perform operation
fnmadd.h f16, f21, f28, f30, rmm # perform operation
fnmadd.h f16, f21, f28, f30, rne # perform operation
fnmadd.h f16, f21, f28, f30, rtz # perform operation
fnmadd.h f16, f21, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f21, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f21, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f21, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f21, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f21, f28, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f31, 0(x2) # load 0x00003c00 from memory into f31
la x2, scratch
li x3, 0x11e375e8 # load x3 with value 0x11e375e8
sw x3, 0(x2) # store 0x11e375e8 in memory
flh f21, 0(x2) # load 0x11e375e8 from memory into f21
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f1, 0(x2) # load 0x00007c01 from memory into f1
fnmadd.h f11, f31, f21, f1, dyn # perform operation
fnmadd.h f11, f31, f21, f1, rdn # perform operation
fnmadd.h f11, f31, f21, f1, rmm # perform operation
fnmadd.h f11, f31, f21, f1, rne # perform operation
fnmadd.h f11, f31, f21, f1, rtz # perform operation
fnmadd.h f11, f31, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f31, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f31, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f31, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f31, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f31, f21, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f5, 0(x2) # load 0x00003c00 from memory into f5
la x2, scratch
li x3, 0x33f7b5dc # load x3 with value 0x33f7b5dc
sw x3, 0(x2) # store 0x33f7b5dc in memory
flh f13, 0(x2) # load 0x33f7b5dc from memory into f13
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f17, 0(x2) # load 0x00007dff from memory into f17
fnmadd.h f9, f5, f13, f17, dyn # perform operation
fnmadd.h f9, f5, f13, f17, rdn # perform operation
fnmadd.h f9, f5, f13, f17, rmm # perform operation
fnmadd.h f9, f5, f13, f17, rne # perform operation
fnmadd.h f9, f5, f13, f17, rtz # perform operation
fnmadd.h f9, f5, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f5, f13, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f28, 0(x2) # load 0x00003c00 from memory into f28
la x2, scratch
li x3, 0x26a6018c # load x3 with value 0x26a6018c
sw x3, 0(x2) # store 0x26a6018c in memory
flh f8, 0(x2) # load 0x26a6018c from memory into f8
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f30, 0(x2) # load 0x0000fc01 from memory into f30
fnmadd.h f10, f28, f8, f30, dyn # perform operation
fnmadd.h f10, f28, f8, f30, rdn # perform operation
fnmadd.h f10, f28, f8, f30, rmm # perform operation
fnmadd.h f10, f28, f8, f30, rne # perform operation
fnmadd.h f10, f28, f8, f30, rtz # perform operation
fnmadd.h f10, f28, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f28, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f28, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f28, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f28, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f28, f8, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f1, 0(x2) # load 0x00003c00 from memory into f1
la x2, scratch
li x3, 0x256715d4 # load x3 with value 0x256715d4
sw x3, 0(x2) # store 0x256715d4 in memory
flh f10, 0(x2) # load 0x256715d4 from memory into f10
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f22, 0(x2) # load 0x000058b4 from memory into f22
fnmadd.h f7, f1, f10, f22, dyn # perform operation
fnmadd.h f7, f1, f10, f22, rdn # perform operation
fnmadd.h f7, f1, f10, f22, rmm # perform operation
fnmadd.h f7, f1, f10, f22, rne # perform operation
fnmadd.h f7, f1, f10, f22, rtz # perform operation
fnmadd.h f7, f1, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f1, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f1, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f1, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f1, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f1, f10, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f9, 0(x2) # load 0x00003c00 from memory into f9
la x2, scratch
li x3, 0x058e557c # load x3 with value 0x058e557c
sw x3, 0(x2) # store 0x058e557c in memory
flh f30, 0(x2) # load 0x058e557c from memory into f30
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
fnmadd.h f10, f9, f30, f23, dyn # perform operation
fnmadd.h f10, f9, f30, f23, rdn # perform operation
fnmadd.h f10, f9, f30, f23, rmm # perform operation
fnmadd.h f10, f9, f30, f23, rne # perform operation
fnmadd.h f10, f9, f30, f23, rtz # perform operation
fnmadd.h f10, f9, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f9, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f9, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f9, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f9, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f9, f30, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x0)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
la x2, scratch
li x3, 0x3760695d # load x3 with value 0x3760695d
sw x3, 0(x2) # store 0x3760695d in memory
flh f10, 0(x2) # load 0x3760695d from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f9, 0(x2) # load 0x00000000 from memory into f9
fnmadd.h f6, f24, f10, f9, dyn # perform operation
fnmadd.h f6, f24, f10, f9, rdn # perform operation
fnmadd.h f6, f24, f10, f9, rmm # perform operation
fnmadd.h f6, f24, f10, f9, rne # perform operation
fnmadd.h f6, f24, f10, f9, rtz # perform operation
fnmadd.h f6, f24, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f24, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f24, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f24, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f24, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f24, f10, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x8000)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f1, 0(x2) # load 0x0000bc00 from memory into f1
la x2, scratch
li x3, 0x41e6b1c1 # load x3 with value 0x41e6b1c1
sw x3, 0(x2) # store 0x41e6b1c1 in memory
flh f13, 0(x2) # load 0x41e6b1c1 from memory into f13
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f19, 0(x2) # load 0x00008000 from memory into f19
fnmadd.h f2, f1, f13, f19, dyn # perform operation
fnmadd.h f2, f1, f13, f19, rdn # perform operation
fnmadd.h f2, f1, f13, f19, rmm # perform operation
fnmadd.h f2, f1, f13, f19, rne # perform operation
fnmadd.h f2, f1, f13, f19, rtz # perform operation
fnmadd.h f2, f1, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f1, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f1, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f1, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f1, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f1, f13, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x3c00)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f17, 0(x2) # load 0x0000bc00 from memory into f17
la x2, scratch
li x3, 0xe83e3c68 # load x3 with value 0xe83e3c68
sw x3, 0(x2) # store 0xe83e3c68 in memory
flh f11, 0(x2) # load 0xe83e3c68 from memory into f11
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f24, 0(x2) # load 0x00003c00 from memory into f24
fnmadd.h f22, f17, f11, f24, dyn # perform operation
fnmadd.h f22, f17, f11, f24, rdn # perform operation
fnmadd.h f22, f17, f11, f24, rmm # perform operation
fnmadd.h f22, f17, f11, f24, rne # perform operation
fnmadd.h f22, f17, f11, f24, rtz # perform operation
fnmadd.h f22, f17, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f17, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f17, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f17, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f17, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f17, f11, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xbc00)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f26, 0(x2) # load 0x0000bc00 from memory into f26
la x2, scratch
li x3, 0x24ae9c8d # load x3 with value 0x24ae9c8d
sw x3, 0(x2) # store 0x24ae9c8d in memory
flh f3, 0(x2) # load 0x24ae9c8d from memory into f3
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
fnmadd.h f16, f26, f3, f24, dyn # perform operation
fnmadd.h f16, f26, f3, f24, rdn # perform operation
fnmadd.h f16, f26, f3, f24, rmm # perform operation
fnmadd.h f16, f26, f3, f24, rne # perform operation
fnmadd.h f16, f26, f3, f24, rtz # perform operation
fnmadd.h f16, f26, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f26, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f26, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f26, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f26, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f26, f3, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x3e00)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f12, 0(x2) # load 0x0000bc00 from memory into f12
la x2, scratch
li x3, 0x2944af38 # load x3 with value 0x2944af38
sw x3, 0(x2) # store 0x2944af38 in memory
flh f27, 0(x2) # load 0x2944af38 from memory into f27
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f22, 0(x2) # load 0x00003e00 from memory into f22
fnmadd.h f16, f12, f27, f22, dyn # perform operation
fnmadd.h f16, f12, f27, f22, rdn # perform operation
fnmadd.h f16, f12, f27, f22, rmm # perform operation
fnmadd.h f16, f12, f27, f22, rne # perform operation
fnmadd.h f16, f12, f27, f22, rtz # perform operation
fnmadd.h f16, f12, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f12, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f12, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f12, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f12, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f12, f27, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xbe00)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f31, 0(x2) # load 0x0000bc00 from memory into f31
la x2, scratch
li x3, 0x9312a82d # load x3 with value 0x9312a82d
sw x3, 0(x2) # store 0x9312a82d in memory
flh f30, 0(x2) # load 0x9312a82d from memory into f30
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f9, 0(x2) # load 0x0000be00 from memory into f9
fnmadd.h f7, f31, f30, f9, dyn # perform operation
fnmadd.h f7, f31, f30, f9, rdn # perform operation
fnmadd.h f7, f31, f30, f9, rmm # perform operation
fnmadd.h f7, f31, f30, f9, rne # perform operation
fnmadd.h f7, f31, f30, f9, rtz # perform operation
fnmadd.h f7, f31, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f31, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f31, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f31, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f31, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f31, f30, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x4000)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f21, 0(x2) # load 0x0000bc00 from memory into f21
la x2, scratch
li x3, 0x9b7baaed # load x3 with value 0x9b7baaed
sw x3, 0(x2) # store 0x9b7baaed in memory
flh f29, 0(x2) # load 0x9b7baaed from memory into f29
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f13, 0(x2) # load 0x00004000 from memory into f13
fnmadd.h f1, f21, f29, f13, dyn # perform operation
fnmadd.h f1, f21, f29, f13, rdn # perform operation
fnmadd.h f1, f21, f29, f13, rmm # perform operation
fnmadd.h f1, f21, f29, f13, rne # perform operation
fnmadd.h f1, f21, f29, f13, rtz # perform operation
fnmadd.h f1, f21, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f21, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f21, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f21, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f21, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f21, f29, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xc000)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f1, 0(x2) # load 0x0000bc00 from memory into f1
la x2, scratch
li x3, 0x67139990 # load x3 with value 0x67139990
sw x3, 0(x2) # store 0x67139990 in memory
flh f2, 0(x2) # load 0x67139990 from memory into f2
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f3, 0(x2) # load 0x0000c000 from memory into f3
fnmadd.h f25, f1, f2, f3, dyn # perform operation
fnmadd.h f25, f1, f2, f3, rdn # perform operation
fnmadd.h f25, f1, f2, f3, rmm # perform operation
fnmadd.h f25, f1, f2, f3, rne # perform operation
fnmadd.h f25, f1, f2, f3, rtz # perform operation
fnmadd.h f25, f1, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f1, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f1, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f1, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f1, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f1, f2, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x400)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f31, 0(x2) # load 0x0000bc00 from memory into f31
la x2, scratch
li x3, 0x6a9fdb83 # load x3 with value 0x6a9fdb83
sw x3, 0(x2) # store 0x6a9fdb83 in memory
flh f7, 0(x2) # load 0x6a9fdb83 from memory into f7
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f20, 0(x2) # load 0x00000400 from memory into f20
fnmadd.h f27, f31, f7, f20, dyn # perform operation
fnmadd.h f27, f31, f7, f20, rdn # perform operation
fnmadd.h f27, f31, f7, f20, rmm # perform operation
fnmadd.h f27, f31, f7, f20, rne # perform operation
fnmadd.h f27, f31, f7, f20, rtz # perform operation
fnmadd.h f27, f31, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f31, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f31, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f31, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f31, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f31, f7, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x8400)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f17, 0(x2) # load 0x0000bc00 from memory into f17
la x2, scratch
li x3, 0x2df90159 # load x3 with value 0x2df90159
sw x3, 0(x2) # store 0x2df90159 in memory
flh f5, 0(x2) # load 0x2df90159 from memory into f5
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f26, 0(x2) # load 0x00008400 from memory into f26
fnmadd.h f16, f17, f5, f26, dyn # perform operation
fnmadd.h f16, f17, f5, f26, rdn # perform operation
fnmadd.h f16, f17, f5, f26, rmm # perform operation
fnmadd.h f16, f17, f5, f26, rne # perform operation
fnmadd.h f16, f17, f5, f26, rtz # perform operation
fnmadd.h f16, f17, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f17, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f17, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f17, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f17, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f17, f5, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7bff)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f19, 0(x2) # load 0x0000bc00 from memory into f19
la x2, scratch
li x3, 0x52834da4 # load x3 with value 0x52834da4
sw x3, 0(x2) # store 0x52834da4 in memory
flh f29, 0(x2) # load 0x52834da4 from memory into f29
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f7, 0(x2) # load 0x00007bff from memory into f7
fnmadd.h f2, f19, f29, f7, dyn # perform operation
fnmadd.h f2, f19, f29, f7, rdn # perform operation
fnmadd.h f2, f19, f29, f7, rmm # perform operation
fnmadd.h f2, f19, f29, f7, rne # perform operation
fnmadd.h f2, f19, f29, f7, rtz # perform operation
fnmadd.h f2, f19, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f19, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f19, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f19, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f19, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f19, f29, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xfbff)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f29, 0(x2) # load 0x0000bc00 from memory into f29
la x2, scratch
li x3, 0xb786e4ec # load x3 with value 0xb786e4ec
sw x3, 0(x2) # store 0xb786e4ec in memory
flh f15, 0(x2) # load 0xb786e4ec from memory into f15
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f3, 0(x2) # load 0x0000fbff from memory into f3
fnmadd.h f11, f29, f15, f3, dyn # perform operation
fnmadd.h f11, f29, f15, f3, rdn # perform operation
fnmadd.h f11, f29, f15, f3, rmm # perform operation
fnmadd.h f11, f29, f15, f3, rne # perform operation
fnmadd.h f11, f29, f15, f3, rtz # perform operation
fnmadd.h f11, f29, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f29, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f29, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f29, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f29, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f29, f15, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x3ff)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f25, 0(x2) # load 0x0000bc00 from memory into f25
la x2, scratch
li x3, 0x3bbadf9b # load x3 with value 0x3bbadf9b
sw x3, 0(x2) # store 0x3bbadf9b in memory
flh f21, 0(x2) # load 0x3bbadf9b from memory into f21
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f7, 0(x2) # load 0x000003ff from memory into f7
fnmadd.h f31, f25, f21, f7, dyn # perform operation
fnmadd.h f31, f25, f21, f7, rdn # perform operation
fnmadd.h f31, f25, f21, f7, rmm # perform operation
fnmadd.h f31, f25, f21, f7, rne # perform operation
fnmadd.h f31, f25, f21, f7, rtz # perform operation
fnmadd.h f31, f25, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f25, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f25, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f25, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f25, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f25, f21, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x83ff)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f10, 0(x2) # load 0x0000bc00 from memory into f10
la x2, scratch
li x3, 0x81dd42f8 # load x3 with value 0x81dd42f8
sw x3, 0(x2) # store 0x81dd42f8 in memory
flh f25, 0(x2) # load 0x81dd42f8 from memory into f25
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f15, 0(x2) # load 0x000083ff from memory into f15
fnmadd.h f16, f10, f25, f15, dyn # perform operation
fnmadd.h f16, f10, f25, f15, rdn # perform operation
fnmadd.h f16, f10, f25, f15, rmm # perform operation
fnmadd.h f16, f10, f25, f15, rne # perform operation
fnmadd.h f16, f10, f25, f15, rtz # perform operation
fnmadd.h f16, f10, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f10, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f10, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f10, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f10, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f10, f25, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x200)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
la x2, scratch
li x3, 0xa64a8e56 # load x3 with value 0xa64a8e56
sw x3, 0(x2) # store 0xa64a8e56 in memory
flh f7, 0(x2) # load 0xa64a8e56 from memory into f7
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
fnmadd.h f18, f24, f7, f13, dyn # perform operation
fnmadd.h f18, f24, f7, f13, rdn # perform operation
fnmadd.h f18, f24, f7, f13, rmm # perform operation
fnmadd.h f18, f24, f7, f13, rne # perform operation
fnmadd.h f18, f24, f7, f13, rtz # perform operation
fnmadd.h f18, f24, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f24, f7, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x8200)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f28, 0(x2) # load 0x0000bc00 from memory into f28
la x2, scratch
li x3, 0x1761abeb # load x3 with value 0x1761abeb
sw x3, 0(x2) # store 0x1761abeb in memory
flh f30, 0(x2) # load 0x1761abeb from memory into f30
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f9, 0(x2) # load 0x00008200 from memory into f9
fnmadd.h f15, f28, f30, f9, dyn # perform operation
fnmadd.h f15, f28, f30, f9, rdn # perform operation
fnmadd.h f15, f28, f30, f9, rmm # perform operation
fnmadd.h f15, f28, f30, f9, rne # perform operation
fnmadd.h f15, f28, f30, f9, rtz # perform operation
fnmadd.h f15, f28, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f28, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f28, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f28, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f28, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f28, f30, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x1)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f12, 0(x2) # load 0x0000bc00 from memory into f12
la x2, scratch
li x3, 0x18ba3a1c # load x3 with value 0x18ba3a1c
sw x3, 0(x2) # store 0x18ba3a1c in memory
flh f31, 0(x2) # load 0x18ba3a1c from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f17, 0(x2) # load 0x00000001 from memory into f17
fnmadd.h f27, f12, f31, f17, dyn # perform operation
fnmadd.h f27, f12, f31, f17, rdn # perform operation
fnmadd.h f27, f12, f31, f17, rmm # perform operation
fnmadd.h f27, f12, f31, f17, rne # perform operation
fnmadd.h f27, f12, f31, f17, rtz # perform operation
fnmadd.h f27, f12, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f12, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f12, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f12, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f12, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f12, f31, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x8001)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f8, 0(x2) # load 0x0000bc00 from memory into f8
la x2, scratch
li x3, 0xd1ffa5ce # load x3 with value 0xd1ffa5ce
sw x3, 0(x2) # store 0xd1ffa5ce in memory
flh f9, 0(x2) # load 0xd1ffa5ce from memory into f9
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f25, 0(x2) # load 0x00008001 from memory into f25
fnmadd.h f30, f8, f9, f25, dyn # perform operation
fnmadd.h f30, f8, f9, f25, rdn # perform operation
fnmadd.h f30, f8, f9, f25, rmm # perform operation
fnmadd.h f30, f8, f9, f25, rne # perform operation
fnmadd.h f30, f8, f9, f25, rtz # perform operation
fnmadd.h f30, f8, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f8, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f8, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f8, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f8, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f8, f9, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7c00)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f26, 0(x2) # load 0x0000bc00 from memory into f26
la x2, scratch
li x3, 0xb5a753fe # load x3 with value 0xb5a753fe
sw x3, 0(x2) # store 0xb5a753fe in memory
flh f3, 0(x2) # load 0xb5a753fe from memory into f3
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f8, 0(x2) # load 0x00007c00 from memory into f8
fnmadd.h f7, f26, f3, f8, dyn # perform operation
fnmadd.h f7, f26, f3, f8, rdn # perform operation
fnmadd.h f7, f26, f3, f8, rmm # perform operation
fnmadd.h f7, f26, f3, f8, rne # perform operation
fnmadd.h f7, f26, f3, f8, rtz # perform operation
fnmadd.h f7, f26, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f26, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f26, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f26, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f26, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f26, f3, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xfc00)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f27, 0(x2) # load 0x0000bc00 from memory into f27
la x2, scratch
li x3, 0x0d111040 # load x3 with value 0x0d111040
sw x3, 0(x2) # store 0x0d111040 in memory
flh f17, 0(x2) # load 0x0d111040 from memory into f17
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f12, 0(x2) # load 0x0000fc00 from memory into f12
fnmadd.h f30, f27, f17, f12, dyn # perform operation
fnmadd.h f30, f27, f17, f12, rdn # perform operation
fnmadd.h f30, f27, f17, f12, rmm # perform operation
fnmadd.h f30, f27, f17, f12, rne # perform operation
fnmadd.h f30, f27, f17, f12, rtz # perform operation
fnmadd.h f30, f27, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f27, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f27, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f27, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f27, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f27, f17, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7e00)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f13, 0(x2) # load 0x0000bc00 from memory into f13
la x2, scratch
li x3, 0xe4000845 # load x3 with value 0xe4000845
sw x3, 0(x2) # store 0xe4000845 in memory
flh f21, 0(x2) # load 0xe4000845 from memory into f21
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f26, 0(x2) # load 0x00007e00 from memory into f26
fnmadd.h f5, f13, f21, f26, dyn # perform operation
fnmadd.h f5, f13, f21, f26, rdn # perform operation
fnmadd.h f5, f13, f21, f26, rmm # perform operation
fnmadd.h f5, f13, f21, f26, rne # perform operation
fnmadd.h f5, f13, f21, f26, rtz # perform operation
fnmadd.h f5, f13, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f13, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f13, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f13, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f13, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f13, f21, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7fff)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
la x2, scratch
li x3, 0x372abb6d # load x3 with value 0x372abb6d
sw x3, 0(x2) # store 0x372abb6d in memory
flh f1, 0(x2) # load 0x372abb6d from memory into f1
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f20, 0(x2) # load 0x00007fff from memory into f20
fnmadd.h f5, f6, f1, f20, dyn # perform operation
fnmadd.h f5, f6, f1, f20, rdn # perform operation
fnmadd.h f5, f6, f1, f20, rmm # perform operation
fnmadd.h f5, f6, f1, f20, rne # perform operation
fnmadd.h f5, f6, f1, f20, rtz # perform operation
fnmadd.h f5, f6, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f6, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f6, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f6, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f6, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f6, f1, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xfe00)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f29, 0(x2) # load 0x0000bc00 from memory into f29
la x2, scratch
li x3, 0x42d59c73 # load x3 with value 0x42d59c73
sw x3, 0(x2) # store 0x42d59c73 in memory
flh f14, 0(x2) # load 0x42d59c73 from memory into f14
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f27, 0(x2) # load 0x0000fe00 from memory into f27
fnmadd.h f21, f29, f14, f27, dyn # perform operation
fnmadd.h f21, f29, f14, f27, rdn # perform operation
fnmadd.h f21, f29, f14, f27, rmm # perform operation
fnmadd.h f21, f29, f14, f27, rne # perform operation
fnmadd.h f21, f29, f14, f27, rtz # perform operation
fnmadd.h f21, f29, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f29, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f29, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f29, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f29, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f29, f14, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7c01)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f19, 0(x2) # load 0x0000bc00 from memory into f19
la x2, scratch
li x3, 0x41177dcc # load x3 with value 0x41177dcc
sw x3, 0(x2) # store 0x41177dcc in memory
flh f8, 0(x2) # load 0x41177dcc from memory into f8
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f5, 0(x2) # load 0x00007c01 from memory into f5
fnmadd.h f31, f19, f8, f5, dyn # perform operation
fnmadd.h f31, f19, f8, f5, rdn # perform operation
fnmadd.h f31, f19, f8, f5, rmm # perform operation
fnmadd.h f31, f19, f8, f5, rne # perform operation
fnmadd.h f31, f19, f8, f5, rtz # perform operation
fnmadd.h f31, f19, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f19, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f19, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f19, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f19, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f19, f8, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7dff)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f17, 0(x2) # load 0x0000bc00 from memory into f17
la x2, scratch
li x3, 0x3981ac35 # load x3 with value 0x3981ac35
sw x3, 0(x2) # store 0x3981ac35 in memory
flh f13, 0(x2) # load 0x3981ac35 from memory into f13
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f10, 0(x2) # load 0x00007dff from memory into f10
fnmadd.h f14, f17, f13, f10, dyn # perform operation
fnmadd.h f14, f17, f13, f10, rdn # perform operation
fnmadd.h f14, f17, f13, f10, rmm # perform operation
fnmadd.h f14, f17, f13, f10, rne # perform operation
fnmadd.h f14, f17, f13, f10, rtz # perform operation
fnmadd.h f14, f17, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f17, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f17, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f17, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f17, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f17, f13, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xfc01)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f15, 0(x2) # load 0x0000bc00 from memory into f15
la x2, scratch
li x3, 0x7276ffd1 # load x3 with value 0x7276ffd1
sw x3, 0(x2) # store 0x7276ffd1 in memory
flh f5, 0(x2) # load 0x7276ffd1 from memory into f5
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f23, 0(x2) # load 0x0000fc01 from memory into f23
fnmadd.h f27, f15, f5, f23, dyn # perform operation
fnmadd.h f27, f15, f5, f23, rdn # perform operation
fnmadd.h f27, f15, f5, f23, rmm # perform operation
fnmadd.h f27, f15, f5, f23, rne # perform operation
fnmadd.h f27, f15, f5, f23, rtz # perform operation
fnmadd.h f27, f15, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f15, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f15, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f15, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f15, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f15, f5, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x58b4)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f2, 0(x2) # load 0x0000bc00 from memory into f2
la x2, scratch
li x3, 0x37609b16 # load x3 with value 0x37609b16
sw x3, 0(x2) # store 0x37609b16 in memory
flh f30, 0(x2) # load 0x37609b16 from memory into f30
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f5, 0(x2) # load 0x000058b4 from memory into f5
fnmadd.h f29, f2, f30, f5, dyn # perform operation
fnmadd.h f29, f2, f30, f5, rdn # perform operation
fnmadd.h f29, f2, f30, f5, rmm # perform operation
fnmadd.h f29, f2, f30, f5, rne # perform operation
fnmadd.h f29, f2, f30, f5, rtz # perform operation
fnmadd.h f29, f2, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f2, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f2, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f2, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f2, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f2, f30, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xc93a)
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f7, 0(x2) # load 0x0000bc00 from memory into f7
la x2, scratch
li x3, 0xd5a5d22d # load x3 with value 0xd5a5d22d
sw x3, 0(x2) # store 0xd5a5d22d in memory
flh f21, 0(x2) # load 0xd5a5d22d from memory into f21
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f11, 0(x2) # load 0x0000c93a from memory into f11
fnmadd.h f3, f7, f21, f11, dyn # perform operation
fnmadd.h f3, f7, f21, f11, rdn # perform operation
fnmadd.h f3, f7, f21, f11, rmm # perform operation
fnmadd.h f3, f7, f21, f11, rne # perform operation
fnmadd.h f3, f7, f21, f11, rtz # perform operation
fnmadd.h f3, f7, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f7, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f7, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f7, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f7, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f7, f21, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x0)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f30, 0(x2) # load 0x00003e00 from memory into f30
la x2, scratch
li x3, 0x4c04fad6 # load x3 with value 0x4c04fad6
sw x3, 0(x2) # store 0x4c04fad6 in memory
flh f8, 0(x2) # load 0x4c04fad6 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f5, 0(x2) # load 0x00000000 from memory into f5
fnmadd.h f25, f30, f8, f5, dyn # perform operation
fnmadd.h f25, f30, f8, f5, rdn # perform operation
fnmadd.h f25, f30, f8, f5, rmm # perform operation
fnmadd.h f25, f30, f8, f5, rne # perform operation
fnmadd.h f25, f30, f8, f5, rtz # perform operation
fnmadd.h f25, f30, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f30, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f30, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f30, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f30, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f30, f8, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x8000)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
la x2, scratch
li x3, 0xcd3eafdc # load x3 with value 0xcd3eafdc
sw x3, 0(x2) # store 0xcd3eafdc in memory
flh f6, 0(x2) # load 0xcd3eafdc from memory into f6
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
fnmadd.h f15, f7, f6, f12, dyn # perform operation
fnmadd.h f15, f7, f6, f12, rdn # perform operation
fnmadd.h f15, f7, f6, f12, rmm # perform operation
fnmadd.h f15, f7, f6, f12, rne # perform operation
fnmadd.h f15, f7, f6, f12, rtz # perform operation
fnmadd.h f15, f7, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f7, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f7, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f7, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f7, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f7, f6, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f20, 0(x2) # load 0x00003e00 from memory into f20
la x2, scratch
li x3, 0x0bdb29a9 # load x3 with value 0x0bdb29a9
sw x3, 0(x2) # store 0x0bdb29a9 in memory
flh f7, 0(x2) # load 0x0bdb29a9 from memory into f7
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f29, 0(x2) # load 0x00003c00 from memory into f29
fnmadd.h f15, f20, f7, f29, dyn # perform operation
fnmadd.h f15, f20, f7, f29, rdn # perform operation
fnmadd.h f15, f20, f7, f29, rmm # perform operation
fnmadd.h f15, f20, f7, f29, rne # perform operation
fnmadd.h f15, f20, f7, f29, rtz # perform operation
fnmadd.h f15, f20, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f20, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f20, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f20, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f20, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f20, f7, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f16, 0(x2) # load 0x00003e00 from memory into f16
la x2, scratch
li x3, 0x8e32a548 # load x3 with value 0x8e32a548
sw x3, 0(x2) # store 0x8e32a548 in memory
flh f1, 0(x2) # load 0x8e32a548 from memory into f1
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f14, 0(x2) # load 0x0000bc00 from memory into f14
fnmadd.h f18, f16, f1, f14, dyn # perform operation
fnmadd.h f18, f16, f1, f14, rdn # perform operation
fnmadd.h f18, f16, f1, f14, rmm # perform operation
fnmadd.h f18, f16, f1, f14, rne # perform operation
fnmadd.h f18, f16, f1, f14, rtz # perform operation
fnmadd.h f18, f16, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f16, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f16, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f16, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f16, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f16, f1, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f16, 0(x2) # load 0x00003e00 from memory into f16
la x2, scratch
li x3, 0x0c6118d0 # load x3 with value 0x0c6118d0
sw x3, 0(x2) # store 0x0c6118d0 in memory
flh f6, 0(x2) # load 0x0c6118d0 from memory into f6
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f14, 0(x2) # load 0x00003e00 from memory into f14
fnmadd.h f11, f16, f6, f14, dyn # perform operation
fnmadd.h f11, f16, f6, f14, rdn # perform operation
fnmadd.h f11, f16, f6, f14, rmm # perform operation
fnmadd.h f11, f16, f6, f14, rne # perform operation
fnmadd.h f11, f16, f6, f14, rtz # perform operation
fnmadd.h f11, f16, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f16, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f16, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f16, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f16, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f16, f6, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f12, 0(x2) # load 0x00003e00 from memory into f12
la x2, scratch
li x3, 0xe00a8fa4 # load x3 with value 0xe00a8fa4
sw x3, 0(x2) # store 0xe00a8fa4 in memory
flh f6, 0(x2) # load 0xe00a8fa4 from memory into f6
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f11, 0(x2) # load 0x0000be00 from memory into f11
fnmadd.h f10, f12, f6, f11, dyn # perform operation
fnmadd.h f10, f12, f6, f11, rdn # perform operation
fnmadd.h f10, f12, f6, f11, rmm # perform operation
fnmadd.h f10, f12, f6, f11, rne # perform operation
fnmadd.h f10, f12, f6, f11, rtz # perform operation
fnmadd.h f10, f12, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f12, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f12, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f12, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f12, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f12, f6, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x4000)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f23, 0(x2) # load 0x00003e00 from memory into f23
la x2, scratch
li x3, 0x359ca44b # load x3 with value 0x359ca44b
sw x3, 0(x2) # store 0x359ca44b in memory
flh f17, 0(x2) # load 0x359ca44b from memory into f17
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f25, 0(x2) # load 0x00004000 from memory into f25
fnmadd.h f9, f23, f17, f25, dyn # perform operation
fnmadd.h f9, f23, f17, f25, rdn # perform operation
fnmadd.h f9, f23, f17, f25, rmm # perform operation
fnmadd.h f9, f23, f17, f25, rne # perform operation
fnmadd.h f9, f23, f17, f25, rtz # perform operation
fnmadd.h f9, f23, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f23, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f23, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f23, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f23, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f23, f17, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xc000)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f28, 0(x2) # load 0x00003e00 from memory into f28
la x2, scratch
li x3, 0xe40b7255 # load x3 with value 0xe40b7255
sw x3, 0(x2) # store 0xe40b7255 in memory
flh f17, 0(x2) # load 0xe40b7255 from memory into f17
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f5, 0(x2) # load 0x0000c000 from memory into f5
fnmadd.h f13, f28, f17, f5, dyn # perform operation
fnmadd.h f13, f28, f17, f5, rdn # perform operation
fnmadd.h f13, f28, f17, f5, rmm # perform operation
fnmadd.h f13, f28, f17, f5, rne # perform operation
fnmadd.h f13, f28, f17, f5, rtz # perform operation
fnmadd.h f13, f28, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f28, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f28, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f28, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f28, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f28, f17, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x400)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f27, 0(x2) # load 0x00003e00 from memory into f27
la x2, scratch
li x3, 0x68c06813 # load x3 with value 0x68c06813
sw x3, 0(x2) # store 0x68c06813 in memory
flh f21, 0(x2) # load 0x68c06813 from memory into f21
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f29, 0(x2) # load 0x00000400 from memory into f29
fnmadd.h f14, f27, f21, f29, dyn # perform operation
fnmadd.h f14, f27, f21, f29, rdn # perform operation
fnmadd.h f14, f27, f21, f29, rmm # perform operation
fnmadd.h f14, f27, f21, f29, rne # perform operation
fnmadd.h f14, f27, f21, f29, rtz # perform operation
fnmadd.h f14, f27, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f27, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f27, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f27, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f27, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f27, f21, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x8400)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f24, 0(x2) # load 0x00003e00 from memory into f24
la x2, scratch
li x3, 0x742f5142 # load x3 with value 0x742f5142
sw x3, 0(x2) # store 0x742f5142 in memory
flh f15, 0(x2) # load 0x742f5142 from memory into f15
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f1, 0(x2) # load 0x00008400 from memory into f1
fnmadd.h f12, f24, f15, f1, dyn # perform operation
fnmadd.h f12, f24, f15, f1, rdn # perform operation
fnmadd.h f12, f24, f15, f1, rmm # perform operation
fnmadd.h f12, f24, f15, f1, rne # perform operation
fnmadd.h f12, f24, f15, f1, rtz # perform operation
fnmadd.h f12, f24, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f24, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f24, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f24, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f24, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f24, f15, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
la x2, scratch
li x3, 0x22e6557d # load x3 with value 0x22e6557d
sw x3, 0(x2) # store 0x22e6557d in memory
flh f10, 0(x2) # load 0x22e6557d from memory into f10
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f13, 0(x2) # load 0x00007bff from memory into f13
fnmadd.h f8, f7, f10, f13, dyn # perform operation
fnmadd.h f8, f7, f10, f13, rdn # perform operation
fnmadd.h f8, f7, f10, f13, rmm # perform operation
fnmadd.h f8, f7, f10, f13, rne # perform operation
fnmadd.h f8, f7, f10, f13, rtz # perform operation
fnmadd.h f8, f7, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f7, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f7, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f7, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f7, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f7, f10, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f30, 0(x2) # load 0x00003e00 from memory into f30
la x2, scratch
li x3, 0x4820ad7e # load x3 with value 0x4820ad7e
sw x3, 0(x2) # store 0x4820ad7e in memory
flh f2, 0(x2) # load 0x4820ad7e from memory into f2
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f27, 0(x2) # load 0x0000fbff from memory into f27
fnmadd.h f16, f30, f2, f27, dyn # perform operation
fnmadd.h f16, f30, f2, f27, rdn # perform operation
fnmadd.h f16, f30, f2, f27, rmm # perform operation
fnmadd.h f16, f30, f2, f27, rne # perform operation
fnmadd.h f16, f30, f2, f27, rtz # perform operation
fnmadd.h f16, f30, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f30, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f30, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f30, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f30, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f30, f2, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f14, 0(x2) # load 0x00003e00 from memory into f14
la x2, scratch
li x3, 0xada65c88 # load x3 with value 0xada65c88
sw x3, 0(x2) # store 0xada65c88 in memory
flh f17, 0(x2) # load 0xada65c88 from memory into f17
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f9, 0(x2) # load 0x000003ff from memory into f9
fnmadd.h f22, f14, f17, f9, dyn # perform operation
fnmadd.h f22, f14, f17, f9, rdn # perform operation
fnmadd.h f22, f14, f17, f9, rmm # perform operation
fnmadd.h f22, f14, f17, f9, rne # perform operation
fnmadd.h f22, f14, f17, f9, rtz # perform operation
fnmadd.h f22, f14, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f14, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f14, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f14, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f14, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f14, f17, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f15, 0(x2) # load 0x00003e00 from memory into f15
la x2, scratch
li x3, 0xdd13dc3d # load x3 with value 0xdd13dc3d
sw x3, 0(x2) # store 0xdd13dc3d in memory
flh f12, 0(x2) # load 0xdd13dc3d from memory into f12
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f24, 0(x2) # load 0x000083ff from memory into f24
fnmadd.h f26, f15, f12, f24, dyn # perform operation
fnmadd.h f26, f15, f12, f24, rdn # perform operation
fnmadd.h f26, f15, f12, f24, rmm # perform operation
fnmadd.h f26, f15, f12, f24, rne # perform operation
fnmadd.h f26, f15, f12, f24, rtz # perform operation
fnmadd.h f26, f15, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f15, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f15, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f15, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f15, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f15, f12, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x200)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f9, 0(x2) # load 0x00003e00 from memory into f9
la x2, scratch
li x3, 0x4a693a3f # load x3 with value 0x4a693a3f
sw x3, 0(x2) # store 0x4a693a3f in memory
flh f14, 0(x2) # load 0x4a693a3f from memory into f14
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f1, 0(x2) # load 0x00000200 from memory into f1
fnmadd.h f11, f9, f14, f1, dyn # perform operation
fnmadd.h f11, f9, f14, f1, rdn # perform operation
fnmadd.h f11, f9, f14, f1, rmm # perform operation
fnmadd.h f11, f9, f14, f1, rne # perform operation
fnmadd.h f11, f9, f14, f1, rtz # perform operation
fnmadd.h f11, f9, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f9, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f9, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f9, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f9, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f9, f14, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x8200)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f31, 0(x2) # load 0x00003e00 from memory into f31
la x2, scratch
li x3, 0x13540862 # load x3 with value 0x13540862
sw x3, 0(x2) # store 0x13540862 in memory
flh f25, 0(x2) # load 0x13540862 from memory into f25
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f28, 0(x2) # load 0x00008200 from memory into f28
fnmadd.h f12, f31, f25, f28, dyn # perform operation
fnmadd.h f12, f31, f25, f28, rdn # perform operation
fnmadd.h f12, f31, f25, f28, rmm # perform operation
fnmadd.h f12, f31, f25, f28, rne # perform operation
fnmadd.h f12, f31, f25, f28, rtz # perform operation
fnmadd.h f12, f31, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f31, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f31, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f31, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f31, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f31, f25, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x1)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f8, 0(x2) # load 0x00003e00 from memory into f8
la x2, scratch
li x3, 0x59613ebe # load x3 with value 0x59613ebe
sw x3, 0(x2) # store 0x59613ebe in memory
flh f5, 0(x2) # load 0x59613ebe from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f23, 0(x2) # load 0x00000001 from memory into f23
fnmadd.h f28, f8, f5, f23, dyn # perform operation
fnmadd.h f28, f8, f5, f23, rdn # perform operation
fnmadd.h f28, f8, f5, f23, rmm # perform operation
fnmadd.h f28, f8, f5, f23, rne # perform operation
fnmadd.h f28, f8, f5, f23, rtz # perform operation
fnmadd.h f28, f8, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f8, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f8, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f8, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f8, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f8, f5, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x8001)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f20, 0(x2) # load 0x00003e00 from memory into f20
la x2, scratch
li x3, 0x1437f74b # load x3 with value 0x1437f74b
sw x3, 0(x2) # store 0x1437f74b in memory
flh f18, 0(x2) # load 0x1437f74b from memory into f18
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f25, 0(x2) # load 0x00008001 from memory into f25
fnmadd.h f19, f20, f18, f25, dyn # perform operation
fnmadd.h f19, f20, f18, f25, rdn # perform operation
fnmadd.h f19, f20, f18, f25, rmm # perform operation
fnmadd.h f19, f20, f18, f25, rne # perform operation
fnmadd.h f19, f20, f18, f25, rtz # perform operation
fnmadd.h f19, f20, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f20, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f20, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f20, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f20, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f20, f18, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f17, 0(x2) # load 0x00003e00 from memory into f17
la x2, scratch
li x3, 0xae9302c9 # load x3 with value 0xae9302c9
sw x3, 0(x2) # store 0xae9302c9 in memory
flh f31, 0(x2) # load 0xae9302c9 from memory into f31
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f21, 0(x2) # load 0x00007c00 from memory into f21
fnmadd.h f23, f17, f31, f21, dyn # perform operation
fnmadd.h f23, f17, f31, f21, rdn # perform operation
fnmadd.h f23, f17, f31, f21, rmm # perform operation
fnmadd.h f23, f17, f31, f21, rne # perform operation
fnmadd.h f23, f17, f31, f21, rtz # perform operation
fnmadd.h f23, f17, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f17, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f17, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f17, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f17, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f17, f31, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f9, 0(x2) # load 0x00003e00 from memory into f9
la x2, scratch
li x3, 0x845ee366 # load x3 with value 0x845ee366
sw x3, 0(x2) # store 0x845ee366 in memory
flh f14, 0(x2) # load 0x845ee366 from memory into f14
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f22, 0(x2) # load 0x0000fc00 from memory into f22
fnmadd.h f12, f9, f14, f22, dyn # perform operation
fnmadd.h f12, f9, f14, f22, rdn # perform operation
fnmadd.h f12, f9, f14, f22, rmm # perform operation
fnmadd.h f12, f9, f14, f22, rne # perform operation
fnmadd.h f12, f9, f14, f22, rtz # perform operation
fnmadd.h f12, f9, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f9, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f9, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f9, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f9, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f9, f14, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
la x2, scratch
li x3, 0xb87377ad # load x3 with value 0xb87377ad
sw x3, 0(x2) # store 0xb87377ad in memory
flh f8, 0(x2) # load 0xb87377ad from memory into f8
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f26, 0(x2) # load 0x00007e00 from memory into f26
fnmadd.h f19, f7, f8, f26, dyn # perform operation
fnmadd.h f19, f7, f8, f26, rdn # perform operation
fnmadd.h f19, f7, f8, f26, rmm # perform operation
fnmadd.h f19, f7, f8, f26, rne # perform operation
fnmadd.h f19, f7, f8, f26, rtz # perform operation
fnmadd.h f19, f7, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f7, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f7, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f7, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f7, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f7, f8, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f3, 0(x2) # load 0x00003e00 from memory into f3
la x2, scratch
li x3, 0xb5a5ba78 # load x3 with value 0xb5a5ba78
sw x3, 0(x2) # store 0xb5a5ba78 in memory
flh f23, 0(x2) # load 0xb5a5ba78 from memory into f23
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f20, 0(x2) # load 0x00007fff from memory into f20
fnmadd.h f18, f3, f23, f20, dyn # perform operation
fnmadd.h f18, f3, f23, f20, rdn # perform operation
fnmadd.h f18, f3, f23, f20, rmm # perform operation
fnmadd.h f18, f3, f23, f20, rne # perform operation
fnmadd.h f18, f3, f23, f20, rtz # perform operation
fnmadd.h f18, f3, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f3, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f3, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f3, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f3, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f3, f23, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f5, 0(x2) # load 0x00003e00 from memory into f5
la x2, scratch
li x3, 0xf037535a # load x3 with value 0xf037535a
sw x3, 0(x2) # store 0xf037535a in memory
flh f30, 0(x2) # load 0xf037535a from memory into f30
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f20, 0(x2) # load 0x0000fe00 from memory into f20
fnmadd.h f11, f5, f30, f20, dyn # perform operation
fnmadd.h f11, f5, f30, f20, rdn # perform operation
fnmadd.h f11, f5, f30, f20, rmm # perform operation
fnmadd.h f11, f5, f30, f20, rne # perform operation
fnmadd.h f11, f5, f30, f20, rtz # perform operation
fnmadd.h f11, f5, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f5, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f5, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f5, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f5, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f5, f30, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f8, 0(x2) # load 0x00003e00 from memory into f8
la x2, scratch
li x3, 0xeb74c13e # load x3 with value 0xeb74c13e
sw x3, 0(x2) # store 0xeb74c13e in memory
flh f22, 0(x2) # load 0xeb74c13e from memory into f22
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f28, 0(x2) # load 0x00007c01 from memory into f28
fnmadd.h f27, f8, f22, f28, dyn # perform operation
fnmadd.h f27, f8, f22, f28, rdn # perform operation
fnmadd.h f27, f8, f22, f28, rmm # perform operation
fnmadd.h f27, f8, f22, f28, rne # perform operation
fnmadd.h f27, f8, f22, f28, rtz # perform operation
fnmadd.h f27, f8, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f8, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f8, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f8, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f8, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f8, f22, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f30, 0(x2) # load 0x00003e00 from memory into f30
la x2, scratch
li x3, 0xc2018e73 # load x3 with value 0xc2018e73
sw x3, 0(x2) # store 0xc2018e73 in memory
flh f5, 0(x2) # load 0xc2018e73 from memory into f5
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f8, 0(x2) # load 0x00007dff from memory into f8
fnmadd.h f19, f30, f5, f8, dyn # perform operation
fnmadd.h f19, f30, f5, f8, rdn # perform operation
fnmadd.h f19, f30, f5, f8, rmm # perform operation
fnmadd.h f19, f30, f5, f8, rne # perform operation
fnmadd.h f19, f30, f5, f8, rtz # perform operation
fnmadd.h f19, f30, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f30, f5, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f11, 0(x2) # load 0x00003e00 from memory into f11
la x2, scratch
li x3, 0xabd79b09 # load x3 with value 0xabd79b09
sw x3, 0(x2) # store 0xabd79b09 in memory
flh f15, 0(x2) # load 0xabd79b09 from memory into f15
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f1, 0(x2) # load 0x0000fc01 from memory into f1
fnmadd.h f26, f11, f15, f1, dyn # perform operation
fnmadd.h f26, f11, f15, f1, rdn # perform operation
fnmadd.h f26, f11, f15, f1, rmm # perform operation
fnmadd.h f26, f11, f15, f1, rne # perform operation
fnmadd.h f26, f11, f15, f1, rtz # perform operation
fnmadd.h f26, f11, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f11, f15, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f2, 0(x2) # load 0x00003e00 from memory into f2
la x2, scratch
li x3, 0x4c029a13 # load x3 with value 0x4c029a13
sw x3, 0(x2) # store 0x4c029a13 in memory
flh f6, 0(x2) # load 0x4c029a13 from memory into f6
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f9, 0(x2) # load 0x000058b4 from memory into f9
fnmadd.h f10, f2, f6, f9, dyn # perform operation
fnmadd.h f10, f2, f6, f9, rdn # perform operation
fnmadd.h f10, f2, f6, f9, rmm # perform operation
fnmadd.h f10, f2, f6, f9, rne # perform operation
fnmadd.h f10, f2, f6, f9, rtz # perform operation
fnmadd.h f10, f2, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f2, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f2, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f2, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f2, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f2, f6, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f18, 0(x2) # load 0x00003e00 from memory into f18
la x2, scratch
li x3, 0xbe8de482 # load x3 with value 0xbe8de482
sw x3, 0(x2) # store 0xbe8de482 in memory
flh f21, 0(x2) # load 0xbe8de482 from memory into f21
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f7, 0(x2) # load 0x0000c93a from memory into f7
fnmadd.h f20, f18, f21, f7, dyn # perform operation
fnmadd.h f20, f18, f21, f7, rdn # perform operation
fnmadd.h f20, f18, f21, f7, rmm # perform operation
fnmadd.h f20, f18, f21, f7, rne # perform operation
fnmadd.h f20, f18, f21, f7, rtz # perform operation
fnmadd.h f20, f18, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f18, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f18, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f18, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f18, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f18, f21, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x0)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f26, 0(x2) # load 0x0000be00 from memory into f26
la x2, scratch
li x3, 0x36f9e545 # load x3 with value 0x36f9e545
sw x3, 0(x2) # store 0x36f9e545 in memory
flh f7, 0(x2) # load 0x36f9e545 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f8, 0(x2) # load 0x00000000 from memory into f8
fnmadd.h f14, f26, f7, f8, dyn # perform operation
fnmadd.h f14, f26, f7, f8, rdn # perform operation
fnmadd.h f14, f26, f7, f8, rmm # perform operation
fnmadd.h f14, f26, f7, f8, rne # perform operation
fnmadd.h f14, f26, f7, f8, rtz # perform operation
fnmadd.h f14, f26, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f26, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f26, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f26, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f26, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f26, f7, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x8000)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f9, 0(x2) # load 0x0000be00 from memory into f9
la x2, scratch
li x3, 0x2762dee9 # load x3 with value 0x2762dee9
sw x3, 0(x2) # store 0x2762dee9 in memory
flh f25, 0(x2) # load 0x2762dee9 from memory into f25
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f28, 0(x2) # load 0x00008000 from memory into f28
fnmadd.h f5, f9, f25, f28, dyn # perform operation
fnmadd.h f5, f9, f25, f28, rdn # perform operation
fnmadd.h f5, f9, f25, f28, rmm # perform operation
fnmadd.h f5, f9, f25, f28, rne # perform operation
fnmadd.h f5, f9, f25, f28, rtz # perform operation
fnmadd.h f5, f9, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f9, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f9, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f9, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f9, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f9, f25, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x3c00)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f13, 0(x2) # load 0x0000be00 from memory into f13
la x2, scratch
li x3, 0xe526fdf3 # load x3 with value 0xe526fdf3
sw x3, 0(x2) # store 0xe526fdf3 in memory
flh f27, 0(x2) # load 0xe526fdf3 from memory into f27
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
fnmadd.h f18, f13, f27, f16, dyn # perform operation
fnmadd.h f18, f13, f27, f16, rdn # perform operation
fnmadd.h f18, f13, f27, f16, rmm # perform operation
fnmadd.h f18, f13, f27, f16, rne # perform operation
fnmadd.h f18, f13, f27, f16, rtz # perform operation
fnmadd.h f18, f13, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f13, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f13, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f13, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f13, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f13, f27, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xbc00)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f19, 0(x2) # load 0x0000be00 from memory into f19
la x2, scratch
li x3, 0x08e228b6 # load x3 with value 0x08e228b6
sw x3, 0(x2) # store 0x08e228b6 in memory
flh f20, 0(x2) # load 0x08e228b6 from memory into f20
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f10, 0(x2) # load 0x0000bc00 from memory into f10
fnmadd.h f8, f19, f20, f10, dyn # perform operation
fnmadd.h f8, f19, f20, f10, rdn # perform operation
fnmadd.h f8, f19, f20, f10, rmm # perform operation
fnmadd.h f8, f19, f20, f10, rne # perform operation
fnmadd.h f8, f19, f20, f10, rtz # perform operation
fnmadd.h f8, f19, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f19, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f19, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f19, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f19, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f19, f20, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x3e00)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f7, 0(x2) # load 0x0000be00 from memory into f7
la x2, scratch
li x3, 0x6c50d92a # load x3 with value 0x6c50d92a
sw x3, 0(x2) # store 0x6c50d92a in memory
flh f21, 0(x2) # load 0x6c50d92a from memory into f21
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f31, 0(x2) # load 0x00003e00 from memory into f31
fnmadd.h f6, f7, f21, f31, dyn # perform operation
fnmadd.h f6, f7, f21, f31, rdn # perform operation
fnmadd.h f6, f7, f21, f31, rmm # perform operation
fnmadd.h f6, f7, f21, f31, rne # perform operation
fnmadd.h f6, f7, f21, f31, rtz # perform operation
fnmadd.h f6, f7, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f7, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f7, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f7, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f7, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f7, f21, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xbe00)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f17, 0(x2) # load 0x0000be00 from memory into f17
la x2, scratch
li x3, 0x9a30504f # load x3 with value 0x9a30504f
sw x3, 0(x2) # store 0x9a30504f in memory
flh f11, 0(x2) # load 0x9a30504f from memory into f11
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f20, 0(x2) # load 0x0000be00 from memory into f20
fnmadd.h f23, f17, f11, f20, dyn # perform operation
fnmadd.h f23, f17, f11, f20, rdn # perform operation
fnmadd.h f23, f17, f11, f20, rmm # perform operation
fnmadd.h f23, f17, f11, f20, rne # perform operation
fnmadd.h f23, f17, f11, f20, rtz # perform operation
fnmadd.h f23, f17, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f17, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f17, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f17, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f17, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f17, f11, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x4000)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f9, 0(x2) # load 0x0000be00 from memory into f9
la x2, scratch
li x3, 0x30213b6d # load x3 with value 0x30213b6d
sw x3, 0(x2) # store 0x30213b6d in memory
flh f1, 0(x2) # load 0x30213b6d from memory into f1
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f3, 0(x2) # load 0x00004000 from memory into f3
fnmadd.h f29, f9, f1, f3, dyn # perform operation
fnmadd.h f29, f9, f1, f3, rdn # perform operation
fnmadd.h f29, f9, f1, f3, rmm # perform operation
fnmadd.h f29, f9, f1, f3, rne # perform operation
fnmadd.h f29, f9, f1, f3, rtz # perform operation
fnmadd.h f29, f9, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f9, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f9, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f9, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f9, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f9, f1, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xc000)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
la x2, scratch
li x3, 0x139075ee # load x3 with value 0x139075ee
sw x3, 0(x2) # store 0x139075ee in memory
flh f3, 0(x2) # load 0x139075ee from memory into f3
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
fnmadd.h f19, f1, f3, f2, dyn # perform operation
fnmadd.h f19, f1, f3, f2, rdn # perform operation
fnmadd.h f19, f1, f3, f2, rmm # perform operation
fnmadd.h f19, f1, f3, f2, rne # perform operation
fnmadd.h f19, f1, f3, f2, rtz # perform operation
fnmadd.h f19, f1, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f1, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f1, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f1, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f1, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f1, f3, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x400)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f26, 0(x2) # load 0x0000be00 from memory into f26
la x2, scratch
li x3, 0x17951803 # load x3 with value 0x17951803
sw x3, 0(x2) # store 0x17951803 in memory
flh f28, 0(x2) # load 0x17951803 from memory into f28
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f6, 0(x2) # load 0x00000400 from memory into f6
fnmadd.h f17, f26, f28, f6, dyn # perform operation
fnmadd.h f17, f26, f28, f6, rdn # perform operation
fnmadd.h f17, f26, f28, f6, rmm # perform operation
fnmadd.h f17, f26, f28, f6, rne # perform operation
fnmadd.h f17, f26, f28, f6, rtz # perform operation
fnmadd.h f17, f26, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f26, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f26, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f26, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f26, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f26, f28, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x8400)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f26, 0(x2) # load 0x0000be00 from memory into f26
la x2, scratch
li x3, 0x03fab478 # load x3 with value 0x03fab478
sw x3, 0(x2) # store 0x03fab478 in memory
flh f22, 0(x2) # load 0x03fab478 from memory into f22
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f27, 0(x2) # load 0x00008400 from memory into f27
fnmadd.h f8, f26, f22, f27, dyn # perform operation
fnmadd.h f8, f26, f22, f27, rdn # perform operation
fnmadd.h f8, f26, f22, f27, rmm # perform operation
fnmadd.h f8, f26, f22, f27, rne # perform operation
fnmadd.h f8, f26, f22, f27, rtz # perform operation
fnmadd.h f8, f26, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f26, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f26, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f26, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f26, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f26, f22, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7bff)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f8, 0(x2) # load 0x0000be00 from memory into f8
la x2, scratch
li x3, 0x331fa7a8 # load x3 with value 0x331fa7a8
sw x3, 0(x2) # store 0x331fa7a8 in memory
flh f29, 0(x2) # load 0x331fa7a8 from memory into f29
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f16, 0(x2) # load 0x00007bff from memory into f16
fnmadd.h f15, f8, f29, f16, dyn # perform operation
fnmadd.h f15, f8, f29, f16, rdn # perform operation
fnmadd.h f15, f8, f29, f16, rmm # perform operation
fnmadd.h f15, f8, f29, f16, rne # perform operation
fnmadd.h f15, f8, f29, f16, rtz # perform operation
fnmadd.h f15, f8, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f8, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f8, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f8, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f8, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f8, f29, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xfbff)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f11, 0(x2) # load 0x0000be00 from memory into f11
la x2, scratch
li x3, 0x091803a8 # load x3 with value 0x091803a8
sw x3, 0(x2) # store 0x091803a8 in memory
flh f21, 0(x2) # load 0x091803a8 from memory into f21
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f5, 0(x2) # load 0x0000fbff from memory into f5
fnmadd.h f29, f11, f21, f5, dyn # perform operation
fnmadd.h f29, f11, f21, f5, rdn # perform operation
fnmadd.h f29, f11, f21, f5, rmm # perform operation
fnmadd.h f29, f11, f21, f5, rne # perform operation
fnmadd.h f29, f11, f21, f5, rtz # perform operation
fnmadd.h f29, f11, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f11, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f11, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f11, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f11, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f11, f21, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x3ff)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f26, 0(x2) # load 0x0000be00 from memory into f26
la x2, scratch
li x3, 0x8823a06a # load x3 with value 0x8823a06a
sw x3, 0(x2) # store 0x8823a06a in memory
flh f27, 0(x2) # load 0x8823a06a from memory into f27
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f28, 0(x2) # load 0x000003ff from memory into f28
fnmadd.h f9, f26, f27, f28, dyn # perform operation
fnmadd.h f9, f26, f27, f28, rdn # perform operation
fnmadd.h f9, f26, f27, f28, rmm # perform operation
fnmadd.h f9, f26, f27, f28, rne # perform operation
fnmadd.h f9, f26, f27, f28, rtz # perform operation
fnmadd.h f9, f26, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f26, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f26, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f26, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f26, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f26, f27, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x83ff)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f6, 0(x2) # load 0x0000be00 from memory into f6
la x2, scratch
li x3, 0x8f744a6c # load x3 with value 0x8f744a6c
sw x3, 0(x2) # store 0x8f744a6c in memory
flh f15, 0(x2) # load 0x8f744a6c from memory into f15
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f26, 0(x2) # load 0x000083ff from memory into f26
fnmadd.h f28, f6, f15, f26, dyn # perform operation
fnmadd.h f28, f6, f15, f26, rdn # perform operation
fnmadd.h f28, f6, f15, f26, rmm # perform operation
fnmadd.h f28, f6, f15, f26, rne # perform operation
fnmadd.h f28, f6, f15, f26, rtz # perform operation
fnmadd.h f28, f6, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f6, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f6, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f6, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f6, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f6, f15, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x200)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f30, 0(x2) # load 0x0000be00 from memory into f30
la x2, scratch
li x3, 0x9559af56 # load x3 with value 0x9559af56
sw x3, 0(x2) # store 0x9559af56 in memory
flh f23, 0(x2) # load 0x9559af56 from memory into f23
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f26, 0(x2) # load 0x00000200 from memory into f26
fnmadd.h f31, f30, f23, f26, dyn # perform operation
fnmadd.h f31, f30, f23, f26, rdn # perform operation
fnmadd.h f31, f30, f23, f26, rmm # perform operation
fnmadd.h f31, f30, f23, f26, rne # perform operation
fnmadd.h f31, f30, f23, f26, rtz # perform operation
fnmadd.h f31, f30, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f30, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f30, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f30, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f30, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f30, f23, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x8200)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f16, 0(x2) # load 0x0000be00 from memory into f16
la x2, scratch
li x3, 0x2d72adfd # load x3 with value 0x2d72adfd
sw x3, 0(x2) # store 0x2d72adfd in memory
flh f24, 0(x2) # load 0x2d72adfd from memory into f24
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f12, 0(x2) # load 0x00008200 from memory into f12
fnmadd.h f15, f16, f24, f12, dyn # perform operation
fnmadd.h f15, f16, f24, f12, rdn # perform operation
fnmadd.h f15, f16, f24, f12, rmm # perform operation
fnmadd.h f15, f16, f24, f12, rne # perform operation
fnmadd.h f15, f16, f24, f12, rtz # perform operation
fnmadd.h f15, f16, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f16, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f16, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f16, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f16, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f16, f24, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x1)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f9, 0(x2) # load 0x0000be00 from memory into f9
la x2, scratch
li x3, 0xbd5e07e2 # load x3 with value 0xbd5e07e2
sw x3, 0(x2) # store 0xbd5e07e2 in memory
flh f1, 0(x2) # load 0xbd5e07e2 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f6, 0(x2) # load 0x00000001 from memory into f6
fnmadd.h f7, f9, f1, f6, dyn # perform operation
fnmadd.h f7, f9, f1, f6, rdn # perform operation
fnmadd.h f7, f9, f1, f6, rmm # perform operation
fnmadd.h f7, f9, f1, f6, rne # perform operation
fnmadd.h f7, f9, f1, f6, rtz # perform operation
fnmadd.h f7, f9, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f9, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f9, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f9, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f9, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f9, f1, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x8001)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f9, 0(x2) # load 0x0000be00 from memory into f9
la x2, scratch
li x3, 0xfff265ca # load x3 with value 0xfff265ca
sw x3, 0(x2) # store 0xfff265ca in memory
flh f2, 0(x2) # load 0xfff265ca from memory into f2
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f19, 0(x2) # load 0x00008001 from memory into f19
fnmadd.h f5, f9, f2, f19, dyn # perform operation
fnmadd.h f5, f9, f2, f19, rdn # perform operation
fnmadd.h f5, f9, f2, f19, rmm # perform operation
fnmadd.h f5, f9, f2, f19, rne # perform operation
fnmadd.h f5, f9, f2, f19, rtz # perform operation
fnmadd.h f5, f9, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f9, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f9, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f9, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f9, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f9, f2, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7c00)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f7, 0(x2) # load 0x0000be00 from memory into f7
la x2, scratch
li x3, 0xc30383ab # load x3 with value 0xc30383ab
sw x3, 0(x2) # store 0xc30383ab in memory
flh f3, 0(x2) # load 0xc30383ab from memory into f3
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f26, 0(x2) # load 0x00007c00 from memory into f26
fnmadd.h f17, f7, f3, f26, dyn # perform operation
fnmadd.h f17, f7, f3, f26, rdn # perform operation
fnmadd.h f17, f7, f3, f26, rmm # perform operation
fnmadd.h f17, f7, f3, f26, rne # perform operation
fnmadd.h f17, f7, f3, f26, rtz # perform operation
fnmadd.h f17, f7, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f7, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f7, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f7, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f7, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f7, f3, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xfc00)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f12, 0(x2) # load 0x0000be00 from memory into f12
la x2, scratch
li x3, 0x861882cd # load x3 with value 0x861882cd
sw x3, 0(x2) # store 0x861882cd in memory
flh f13, 0(x2) # load 0x861882cd from memory into f13
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f15, 0(x2) # load 0x0000fc00 from memory into f15
fnmadd.h f7, f12, f13, f15, dyn # perform operation
fnmadd.h f7, f12, f13, f15, rdn # perform operation
fnmadd.h f7, f12, f13, f15, rmm # perform operation
fnmadd.h f7, f12, f13, f15, rne # perform operation
fnmadd.h f7, f12, f13, f15, rtz # perform operation
fnmadd.h f7, f12, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f12, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f12, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f12, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f12, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f12, f13, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7e00)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f7, 0(x2) # load 0x0000be00 from memory into f7
la x2, scratch
li x3, 0x2b08fbcf # load x3 with value 0x2b08fbcf
sw x3, 0(x2) # store 0x2b08fbcf in memory
flh f30, 0(x2) # load 0x2b08fbcf from memory into f30
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f9, 0(x2) # load 0x00007e00 from memory into f9
fnmadd.h f10, f7, f30, f9, dyn # perform operation
fnmadd.h f10, f7, f30, f9, rdn # perform operation
fnmadd.h f10, f7, f30, f9, rmm # perform operation
fnmadd.h f10, f7, f30, f9, rne # perform operation
fnmadd.h f10, f7, f30, f9, rtz # perform operation
fnmadd.h f10, f7, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f7, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f7, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f7, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f7, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f7, f30, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7fff)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f30, 0(x2) # load 0x0000be00 from memory into f30
la x2, scratch
li x3, 0x4bf64b29 # load x3 with value 0x4bf64b29
sw x3, 0(x2) # store 0x4bf64b29 in memory
flh f22, 0(x2) # load 0x4bf64b29 from memory into f22
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f15, 0(x2) # load 0x00007fff from memory into f15
fnmadd.h f25, f30, f22, f15, dyn # perform operation
fnmadd.h f25, f30, f22, f15, rdn # perform operation
fnmadd.h f25, f30, f22, f15, rmm # perform operation
fnmadd.h f25, f30, f22, f15, rne # perform operation
fnmadd.h f25, f30, f22, f15, rtz # perform operation
fnmadd.h f25, f30, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f30, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f30, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f30, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f30, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f30, f22, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xfe00)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f29, 0(x2) # load 0x0000be00 from memory into f29
la x2, scratch
li x3, 0xd0d36419 # load x3 with value 0xd0d36419
sw x3, 0(x2) # store 0xd0d36419 in memory
flh f24, 0(x2) # load 0xd0d36419 from memory into f24
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f7, 0(x2) # load 0x0000fe00 from memory into f7
fnmadd.h f15, f29, f24, f7, dyn # perform operation
fnmadd.h f15, f29, f24, f7, rdn # perform operation
fnmadd.h f15, f29, f24, f7, rmm # perform operation
fnmadd.h f15, f29, f24, f7, rne # perform operation
fnmadd.h f15, f29, f24, f7, rtz # perform operation
fnmadd.h f15, f29, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f29, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f29, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f29, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f29, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f29, f24, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7c01)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f6, 0(x2) # load 0x0000be00 from memory into f6
la x2, scratch
li x3, 0xb5ab7b1d # load x3 with value 0xb5ab7b1d
sw x3, 0(x2) # store 0xb5ab7b1d in memory
flh f7, 0(x2) # load 0xb5ab7b1d from memory into f7
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f28, 0(x2) # load 0x00007c01 from memory into f28
fnmadd.h f22, f6, f7, f28, dyn # perform operation
fnmadd.h f22, f6, f7, f28, rdn # perform operation
fnmadd.h f22, f6, f7, f28, rmm # perform operation
fnmadd.h f22, f6, f7, f28, rne # perform operation
fnmadd.h f22, f6, f7, f28, rtz # perform operation
fnmadd.h f22, f6, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f6, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f6, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f6, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f6, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f6, f7, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7dff)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
la x2, scratch
li x3, 0xf719c0ad # load x3 with value 0xf719c0ad
sw x3, 0(x2) # store 0xf719c0ad in memory
flh f3, 0(x2) # load 0xf719c0ad from memory into f3
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f1, 0(x2) # load 0x00007dff from memory into f1
fnmadd.h f7, f14, f3, f1, dyn # perform operation
fnmadd.h f7, f14, f3, f1, rdn # perform operation
fnmadd.h f7, f14, f3, f1, rmm # perform operation
fnmadd.h f7, f14, f3, f1, rne # perform operation
fnmadd.h f7, f14, f3, f1, rtz # perform operation
fnmadd.h f7, f14, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f14, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f14, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f14, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f14, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f14, f3, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xfc01)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f29, 0(x2) # load 0x0000be00 from memory into f29
la x2, scratch
li x3, 0x80dc955c # load x3 with value 0x80dc955c
sw x3, 0(x2) # store 0x80dc955c in memory
flh f12, 0(x2) # load 0x80dc955c from memory into f12
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f18, 0(x2) # load 0x0000fc01 from memory into f18
fnmadd.h f27, f29, f12, f18, dyn # perform operation
fnmadd.h f27, f29, f12, f18, rdn # perform operation
fnmadd.h f27, f29, f12, f18, rmm # perform operation
fnmadd.h f27, f29, f12, f18, rne # perform operation
fnmadd.h f27, f29, f12, f18, rtz # perform operation
fnmadd.h f27, f29, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f29, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f29, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f29, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f29, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f29, f12, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x58b4)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f22, 0(x2) # load 0x0000be00 from memory into f22
la x2, scratch
li x3, 0xb1e2fd58 # load x3 with value 0xb1e2fd58
sw x3, 0(x2) # store 0xb1e2fd58 in memory
flh f13, 0(x2) # load 0xb1e2fd58 from memory into f13
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f26, 0(x2) # load 0x000058b4 from memory into f26
fnmadd.h f10, f22, f13, f26, dyn # perform operation
fnmadd.h f10, f22, f13, f26, rdn # perform operation
fnmadd.h f10, f22, f13, f26, rmm # perform operation
fnmadd.h f10, f22, f13, f26, rne # perform operation
fnmadd.h f10, f22, f13, f26, rtz # perform operation
fnmadd.h f10, f22, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f22, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f22, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f22, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f22, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f22, f13, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xc93a)
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f28, 0(x2) # load 0x0000be00 from memory into f28
la x2, scratch
li x3, 0x09662581 # load x3 with value 0x09662581
sw x3, 0(x2) # store 0x09662581 in memory
flh f31, 0(x2) # load 0x09662581 from memory into f31
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f11, 0(x2) # load 0x0000c93a from memory into f11
fnmadd.h f17, f28, f31, f11, dyn # perform operation
fnmadd.h f17, f28, f31, f11, rdn # perform operation
fnmadd.h f17, f28, f31, f11, rmm # perform operation
fnmadd.h f17, f28, f31, f11, rne # perform operation
fnmadd.h f17, f28, f31, f11, rtz # perform operation
fnmadd.h f17, f28, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f28, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f28, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f28, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f28, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f28, f31, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x0)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f15, 0(x2) # load 0x00004000 from memory into f15
la x2, scratch
li x3, 0x1a32b8d6 # load x3 with value 0x1a32b8d6
sw x3, 0(x2) # store 0x1a32b8d6 in memory
flh f12, 0(x2) # load 0x1a32b8d6 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f21, 0(x2) # load 0x00000000 from memory into f21
fnmadd.h f26, f15, f12, f21, dyn # perform operation
fnmadd.h f26, f15, f12, f21, rdn # perform operation
fnmadd.h f26, f15, f12, f21, rmm # perform operation
fnmadd.h f26, f15, f12, f21, rne # perform operation
fnmadd.h f26, f15, f12, f21, rtz # perform operation
fnmadd.h f26, f15, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f15, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f15, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f15, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f15, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f15, f12, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x8000)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
la x2, scratch
li x3, 0xea317d06 # load x3 with value 0xea317d06
sw x3, 0(x2) # store 0xea317d06 in memory
flh f16, 0(x2) # load 0xea317d06 from memory into f16
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f20, 0(x2) # load 0x00008000 from memory into f20
fnmadd.h f12, f6, f16, f20, dyn # perform operation
fnmadd.h f12, f6, f16, f20, rdn # perform operation
fnmadd.h f12, f6, f16, f20, rmm # perform operation
fnmadd.h f12, f6, f16, f20, rne # perform operation
fnmadd.h f12, f6, f16, f20, rtz # perform operation
fnmadd.h f12, f6, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f6, f16, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f26, 0(x2) # load 0x00004000 from memory into f26
la x2, scratch
li x3, 0xf57fd657 # load x3 with value 0xf57fd657
sw x3, 0(x2) # store 0xf57fd657 in memory
flh f22, 0(x2) # load 0xf57fd657 from memory into f22
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f19, 0(x2) # load 0x00003c00 from memory into f19
fnmadd.h f29, f26, f22, f19, dyn # perform operation
fnmadd.h f29, f26, f22, f19, rdn # perform operation
fnmadd.h f29, f26, f22, f19, rmm # perform operation
fnmadd.h f29, f26, f22, f19, rne # perform operation
fnmadd.h f29, f26, f22, f19, rtz # perform operation
fnmadd.h f29, f26, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f26, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f26, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f26, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f26, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f26, f22, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f9, 0(x2) # load 0x00004000 from memory into f9
la x2, scratch
li x3, 0x5dae81ea # load x3 with value 0x5dae81ea
sw x3, 0(x2) # store 0x5dae81ea in memory
flh f27, 0(x2) # load 0x5dae81ea from memory into f27
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f13, 0(x2) # load 0x0000bc00 from memory into f13
fnmadd.h f3, f9, f27, f13, dyn # perform operation
fnmadd.h f3, f9, f27, f13, rdn # perform operation
fnmadd.h f3, f9, f27, f13, rmm # perform operation
fnmadd.h f3, f9, f27, f13, rne # perform operation
fnmadd.h f3, f9, f27, f13, rtz # perform operation
fnmadd.h f3, f9, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f9, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f9, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f9, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f9, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f9, f27, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f8, 0(x2) # load 0x00004000 from memory into f8
la x2, scratch
li x3, 0x2255fb69 # load x3 with value 0x2255fb69
sw x3, 0(x2) # store 0x2255fb69 in memory
flh f15, 0(x2) # load 0x2255fb69 from memory into f15
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f14, 0(x2) # load 0x00003e00 from memory into f14
fnmadd.h f23, f8, f15, f14, dyn # perform operation
fnmadd.h f23, f8, f15, f14, rdn # perform operation
fnmadd.h f23, f8, f15, f14, rmm # perform operation
fnmadd.h f23, f8, f15, f14, rne # perform operation
fnmadd.h f23, f8, f15, f14, rtz # perform operation
fnmadd.h f23, f8, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f8, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f8, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f8, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f8, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f8, f15, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f14, 0(x2) # load 0x00004000 from memory into f14
la x2, scratch
li x3, 0xbac5de5c # load x3 with value 0xbac5de5c
sw x3, 0(x2) # store 0xbac5de5c in memory
flh f11, 0(x2) # load 0xbac5de5c from memory into f11
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f8, 0(x2) # load 0x0000be00 from memory into f8
fnmadd.h f20, f14, f11, f8, dyn # perform operation
fnmadd.h f20, f14, f11, f8, rdn # perform operation
fnmadd.h f20, f14, f11, f8, rmm # perform operation
fnmadd.h f20, f14, f11, f8, rne # perform operation
fnmadd.h f20, f14, f11, f8, rtz # perform operation
fnmadd.h f20, f14, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f14, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f14, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f14, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f14, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f14, f11, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x4000)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f5, 0(x2) # load 0x00004000 from memory into f5
la x2, scratch
li x3, 0x6c3197a5 # load x3 with value 0x6c3197a5
sw x3, 0(x2) # store 0x6c3197a5 in memory
flh f26, 0(x2) # load 0x6c3197a5 from memory into f26
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f1, 0(x2) # load 0x00004000 from memory into f1
fnmadd.h f18, f5, f26, f1, dyn # perform operation
fnmadd.h f18, f5, f26, f1, rdn # perform operation
fnmadd.h f18, f5, f26, f1, rmm # perform operation
fnmadd.h f18, f5, f26, f1, rne # perform operation
fnmadd.h f18, f5, f26, f1, rtz # perform operation
fnmadd.h f18, f5, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f5, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f5, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f5, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f5, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f5, f26, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xc000)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f8, 0(x2) # load 0x00004000 from memory into f8
la x2, scratch
li x3, 0xb1d44cc4 # load x3 with value 0xb1d44cc4
sw x3, 0(x2) # store 0xb1d44cc4 in memory
flh f16, 0(x2) # load 0xb1d44cc4 from memory into f16
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f28, 0(x2) # load 0x0000c000 from memory into f28
fnmadd.h f14, f8, f16, f28, dyn # perform operation
fnmadd.h f14, f8, f16, f28, rdn # perform operation
fnmadd.h f14, f8, f16, f28, rmm # perform operation
fnmadd.h f14, f8, f16, f28, rne # perform operation
fnmadd.h f14, f8, f16, f28, rtz # perform operation
fnmadd.h f14, f8, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f8, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f8, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f8, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f8, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f8, f16, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x400)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f11, 0(x2) # load 0x00004000 from memory into f11
la x2, scratch
li x3, 0x6156e6f0 # load x3 with value 0x6156e6f0
sw x3, 0(x2) # store 0x6156e6f0 in memory
flh f2, 0(x2) # load 0x6156e6f0 from memory into f2
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f19, 0(x2) # load 0x00000400 from memory into f19
fnmadd.h f6, f11, f2, f19, dyn # perform operation
fnmadd.h f6, f11, f2, f19, rdn # perform operation
fnmadd.h f6, f11, f2, f19, rmm # perform operation
fnmadd.h f6, f11, f2, f19, rne # perform operation
fnmadd.h f6, f11, f2, f19, rtz # perform operation
fnmadd.h f6, f11, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f11, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f11, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f11, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f11, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f11, f2, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x8400)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
la x2, scratch
li x3, 0x07e00f42 # load x3 with value 0x07e00f42
sw x3, 0(x2) # store 0x07e00f42 in memory
flh f25, 0(x2) # load 0x07e00f42 from memory into f25
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f28, 0(x2) # load 0x00008400 from memory into f28
fnmadd.h f31, f23, f25, f28, dyn # perform operation
fnmadd.h f31, f23, f25, f28, rdn # perform operation
fnmadd.h f31, f23, f25, f28, rmm # perform operation
fnmadd.h f31, f23, f25, f28, rne # perform operation
fnmadd.h f31, f23, f25, f28, rtz # perform operation
fnmadd.h f31, f23, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f23, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f23, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f23, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f23, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f23, f25, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
la x2, scratch
li x3, 0x96a5c525 # load x3 with value 0x96a5c525
sw x3, 0(x2) # store 0x96a5c525 in memory
flh f19, 0(x2) # load 0x96a5c525 from memory into f19
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f14, 0(x2) # load 0x00007bff from memory into f14
fnmadd.h f20, f6, f19, f14, dyn # perform operation
fnmadd.h f20, f6, f19, f14, rdn # perform operation
fnmadd.h f20, f6, f19, f14, rmm # perform operation
fnmadd.h f20, f6, f19, f14, rne # perform operation
fnmadd.h f20, f6, f19, f14, rtz # perform operation
fnmadd.h f20, f6, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f6, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f6, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f6, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f6, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f6, f19, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f13, 0(x2) # load 0x00004000 from memory into f13
la x2, scratch
li x3, 0x940e5174 # load x3 with value 0x940e5174
sw x3, 0(x2) # store 0x940e5174 in memory
flh f26, 0(x2) # load 0x940e5174 from memory into f26
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f21, 0(x2) # load 0x0000fbff from memory into f21
fnmadd.h f17, f13, f26, f21, dyn # perform operation
fnmadd.h f17, f13, f26, f21, rdn # perform operation
fnmadd.h f17, f13, f26, f21, rmm # perform operation
fnmadd.h f17, f13, f26, f21, rne # perform operation
fnmadd.h f17, f13, f26, f21, rtz # perform operation
fnmadd.h f17, f13, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f13, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f13, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f13, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f13, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f13, f26, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f15, 0(x2) # load 0x00004000 from memory into f15
la x2, scratch
li x3, 0x727fc1db # load x3 with value 0x727fc1db
sw x3, 0(x2) # store 0x727fc1db in memory
flh f25, 0(x2) # load 0x727fc1db from memory into f25
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f22, 0(x2) # load 0x000003ff from memory into f22
fnmadd.h f2, f15, f25, f22, dyn # perform operation
fnmadd.h f2, f15, f25, f22, rdn # perform operation
fnmadd.h f2, f15, f25, f22, rmm # perform operation
fnmadd.h f2, f15, f25, f22, rne # perform operation
fnmadd.h f2, f15, f25, f22, rtz # perform operation
fnmadd.h f2, f15, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f15, f25, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f13, 0(x2) # load 0x00004000 from memory into f13
la x2, scratch
li x3, 0x7b02b28b # load x3 with value 0x7b02b28b
sw x3, 0(x2) # store 0x7b02b28b in memory
flh f9, 0(x2) # load 0x7b02b28b from memory into f9
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f14, 0(x2) # load 0x000083ff from memory into f14
fnmadd.h f17, f13, f9, f14, dyn # perform operation
fnmadd.h f17, f13, f9, f14, rdn # perform operation
fnmadd.h f17, f13, f9, f14, rmm # perform operation
fnmadd.h f17, f13, f9, f14, rne # perform operation
fnmadd.h f17, f13, f9, f14, rtz # perform operation
fnmadd.h f17, f13, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f13, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f13, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f13, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f13, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f13, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x200)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
la x2, scratch
li x3, 0x5e9c85b2 # load x3 with value 0x5e9c85b2
sw x3, 0(x2) # store 0x5e9c85b2 in memory
flh f27, 0(x2) # load 0x5e9c85b2 from memory into f27
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f25, 0(x2) # load 0x00000200 from memory into f25
fnmadd.h f14, f23, f27, f25, dyn # perform operation
fnmadd.h f14, f23, f27, f25, rdn # perform operation
fnmadd.h f14, f23, f27, f25, rmm # perform operation
fnmadd.h f14, f23, f27, f25, rne # perform operation
fnmadd.h f14, f23, f27, f25, rtz # perform operation
fnmadd.h f14, f23, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f23, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f23, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f23, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f23, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f23, f27, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x8200)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f13, 0(x2) # load 0x00004000 from memory into f13
la x2, scratch
li x3, 0xd2d7cc20 # load x3 with value 0xd2d7cc20
sw x3, 0(x2) # store 0xd2d7cc20 in memory
flh f28, 0(x2) # load 0xd2d7cc20 from memory into f28
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f16, 0(x2) # load 0x00008200 from memory into f16
fnmadd.h f27, f13, f28, f16, dyn # perform operation
fnmadd.h f27, f13, f28, f16, rdn # perform operation
fnmadd.h f27, f13, f28, f16, rmm # perform operation
fnmadd.h f27, f13, f28, f16, rne # perform operation
fnmadd.h f27, f13, f28, f16, rtz # perform operation
fnmadd.h f27, f13, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f13, f28, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x1)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f7, 0(x2) # load 0x00004000 from memory into f7
la x2, scratch
li x3, 0xfbc3c949 # load x3 with value 0xfbc3c949
sw x3, 0(x2) # store 0xfbc3c949 in memory
flh f20, 0(x2) # load 0xfbc3c949 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
fnmadd.h f13, f7, f20, f3, dyn # perform operation
fnmadd.h f13, f7, f20, f3, rdn # perform operation
fnmadd.h f13, f7, f20, f3, rmm # perform operation
fnmadd.h f13, f7, f20, f3, rne # perform operation
fnmadd.h f13, f7, f20, f3, rtz # perform operation
fnmadd.h f13, f7, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f7, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f7, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f7, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f7, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f7, f20, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x8001)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f11, 0(x2) # load 0x00004000 from memory into f11
la x2, scratch
li x3, 0x786cd0b0 # load x3 with value 0x786cd0b0
sw x3, 0(x2) # store 0x786cd0b0 in memory
flh f25, 0(x2) # load 0x786cd0b0 from memory into f25
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f5, 0(x2) # load 0x00008001 from memory into f5
fnmadd.h f27, f11, f25, f5, dyn # perform operation
fnmadd.h f27, f11, f25, f5, rdn # perform operation
fnmadd.h f27, f11, f25, f5, rmm # perform operation
fnmadd.h f27, f11, f25, f5, rne # perform operation
fnmadd.h f27, f11, f25, f5, rtz # perform operation
fnmadd.h f27, f11, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f11, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f11, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f11, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f11, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f11, f25, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f7, 0(x2) # load 0x00004000 from memory into f7
la x2, scratch
li x3, 0x3d8733f8 # load x3 with value 0x3d8733f8
sw x3, 0(x2) # store 0x3d8733f8 in memory
flh f11, 0(x2) # load 0x3d8733f8 from memory into f11
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f8, 0(x2) # load 0x00007c00 from memory into f8
fnmadd.h f16, f7, f11, f8, dyn # perform operation
fnmadd.h f16, f7, f11, f8, rdn # perform operation
fnmadd.h f16, f7, f11, f8, rmm # perform operation
fnmadd.h f16, f7, f11, f8, rne # perform operation
fnmadd.h f16, f7, f11, f8, rtz # perform operation
fnmadd.h f16, f7, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f7, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f7, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f7, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f7, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f7, f11, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f31, 0(x2) # load 0x00004000 from memory into f31
la x2, scratch
li x3, 0x19270d48 # load x3 with value 0x19270d48
sw x3, 0(x2) # store 0x19270d48 in memory
flh f21, 0(x2) # load 0x19270d48 from memory into f21
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f29, 0(x2) # load 0x0000fc00 from memory into f29
fnmadd.h f24, f31, f21, f29, dyn # perform operation
fnmadd.h f24, f31, f21, f29, rdn # perform operation
fnmadd.h f24, f31, f21, f29, rmm # perform operation
fnmadd.h f24, f31, f21, f29, rne # perform operation
fnmadd.h f24, f31, f21, f29, rtz # perform operation
fnmadd.h f24, f31, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f31, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f31, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f31, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f31, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f31, f21, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f12, 0(x2) # load 0x00004000 from memory into f12
la x2, scratch
li x3, 0xa06e6d21 # load x3 with value 0xa06e6d21
sw x3, 0(x2) # store 0xa06e6d21 in memory
flh f31, 0(x2) # load 0xa06e6d21 from memory into f31
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
fnmadd.h f26, f12, f31, f5, dyn # perform operation
fnmadd.h f26, f12, f31, f5, rdn # perform operation
fnmadd.h f26, f12, f31, f5, rmm # perform operation
fnmadd.h f26, f12, f31, f5, rne # perform operation
fnmadd.h f26, f12, f31, f5, rtz # perform operation
fnmadd.h f26, f12, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f12, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f12, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f12, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f12, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f12, f31, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f2, 0(x2) # load 0x00004000 from memory into f2
la x2, scratch
li x3, 0xa8839c68 # load x3 with value 0xa8839c68
sw x3, 0(x2) # store 0xa8839c68 in memory
flh f30, 0(x2) # load 0xa8839c68 from memory into f30
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f20, 0(x2) # load 0x00007fff from memory into f20
fnmadd.h f13, f2, f30, f20, dyn # perform operation
fnmadd.h f13, f2, f30, f20, rdn # perform operation
fnmadd.h f13, f2, f30, f20, rmm # perform operation
fnmadd.h f13, f2, f30, f20, rne # perform operation
fnmadd.h f13, f2, f30, f20, rtz # perform operation
fnmadd.h f13, f2, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f2, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f2, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f2, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f2, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f2, f30, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f17, 0(x2) # load 0x00004000 from memory into f17
la x2, scratch
li x3, 0x3bab298f # load x3 with value 0x3bab298f
sw x3, 0(x2) # store 0x3bab298f in memory
flh f2, 0(x2) # load 0x3bab298f from memory into f2
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f26, 0(x2) # load 0x0000fe00 from memory into f26
fnmadd.h f18, f17, f2, f26, dyn # perform operation
fnmadd.h f18, f17, f2, f26, rdn # perform operation
fnmadd.h f18, f17, f2, f26, rmm # perform operation
fnmadd.h f18, f17, f2, f26, rne # perform operation
fnmadd.h f18, f17, f2, f26, rtz # perform operation
fnmadd.h f18, f17, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f17, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f17, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f17, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f17, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f17, f2, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f26, 0(x2) # load 0x00004000 from memory into f26
la x2, scratch
li x3, 0xf347c80d # load x3 with value 0xf347c80d
sw x3, 0(x2) # store 0xf347c80d in memory
flh f3, 0(x2) # load 0xf347c80d from memory into f3
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
fnmadd.h f2, f26, f3, f20, dyn # perform operation
fnmadd.h f2, f26, f3, f20, rdn # perform operation
fnmadd.h f2, f26, f3, f20, rmm # perform operation
fnmadd.h f2, f26, f3, f20, rne # perform operation
fnmadd.h f2, f26, f3, f20, rtz # perform operation
fnmadd.h f2, f26, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f26, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f26, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f26, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f26, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f26, f3, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f7, 0(x2) # load 0x00004000 from memory into f7
la x2, scratch
li x3, 0xce8770eb # load x3 with value 0xce8770eb
sw x3, 0(x2) # store 0xce8770eb in memory
flh f5, 0(x2) # load 0xce8770eb from memory into f5
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f30, 0(x2) # load 0x00007dff from memory into f30
fnmadd.h f27, f7, f5, f30, dyn # perform operation
fnmadd.h f27, f7, f5, f30, rdn # perform operation
fnmadd.h f27, f7, f5, f30, rmm # perform operation
fnmadd.h f27, f7, f5, f30, rne # perform operation
fnmadd.h f27, f7, f5, f30, rtz # perform operation
fnmadd.h f27, f7, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f7, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f7, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f7, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f7, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f7, f5, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
la x2, scratch
li x3, 0xbc74da48 # load x3 with value 0xbc74da48
sw x3, 0(x2) # store 0xbc74da48 in memory
flh f10, 0(x2) # load 0xbc74da48 from memory into f10
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f6, 0(x2) # load 0x0000fc01 from memory into f6
fnmadd.h f25, f23, f10, f6, dyn # perform operation
fnmadd.h f25, f23, f10, f6, rdn # perform operation
fnmadd.h f25, f23, f10, f6, rmm # perform operation
fnmadd.h f25, f23, f10, f6, rne # perform operation
fnmadd.h f25, f23, f10, f6, rtz # perform operation
fnmadd.h f25, f23, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f23, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f23, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f23, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f23, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f23, f10, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
la x2, scratch
li x3, 0xff98ddb4 # load x3 with value 0xff98ddb4
sw x3, 0(x2) # store 0xff98ddb4 in memory
flh f12, 0(x2) # load 0xff98ddb4 from memory into f12
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f8, 0(x2) # load 0x000058b4 from memory into f8
fnmadd.h f15, f6, f12, f8, dyn # perform operation
fnmadd.h f15, f6, f12, f8, rdn # perform operation
fnmadd.h f15, f6, f12, f8, rmm # perform operation
fnmadd.h f15, f6, f12, f8, rne # perform operation
fnmadd.h f15, f6, f12, f8, rtz # perform operation
fnmadd.h f15, f6, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f6, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f6, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f6, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f6, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f6, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f18, 0(x2) # load 0x00004000 from memory into f18
la x2, scratch
li x3, 0x0bb6913b # load x3 with value 0x0bb6913b
sw x3, 0(x2) # store 0x0bb6913b in memory
flh f8, 0(x2) # load 0x0bb6913b from memory into f8
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f13, 0(x2) # load 0x0000c93a from memory into f13
fnmadd.h f3, f18, f8, f13, dyn # perform operation
fnmadd.h f3, f18, f8, f13, rdn # perform operation
fnmadd.h f3, f18, f8, f13, rmm # perform operation
fnmadd.h f3, f18, f8, f13, rne # perform operation
fnmadd.h f3, f18, f8, f13, rtz # perform operation
fnmadd.h f3, f18, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f18, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f18, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f18, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f18, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f18, f8, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x0)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f22, 0(x2) # load 0x0000c000 from memory into f22
la x2, scratch
li x3, 0x5d8264ab # load x3 with value 0x5d8264ab
sw x3, 0(x2) # store 0x5d8264ab in memory
flh f28, 0(x2) # load 0x5d8264ab from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f3, 0(x2) # load 0x00000000 from memory into f3
fnmadd.h f23, f22, f28, f3, dyn # perform operation
fnmadd.h f23, f22, f28, f3, rdn # perform operation
fnmadd.h f23, f22, f28, f3, rmm # perform operation
fnmadd.h f23, f22, f28, f3, rne # perform operation
fnmadd.h f23, f22, f28, f3, rtz # perform operation
fnmadd.h f23, f22, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f22, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f22, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f22, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f22, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f22, f28, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x8000)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f16, 0(x2) # load 0x0000c000 from memory into f16
la x2, scratch
li x3, 0x44ddfa7a # load x3 with value 0x44ddfa7a
sw x3, 0(x2) # store 0x44ddfa7a in memory
flh f20, 0(x2) # load 0x44ddfa7a from memory into f20
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f22, 0(x2) # load 0x00008000 from memory into f22
fnmadd.h f9, f16, f20, f22, dyn # perform operation
fnmadd.h f9, f16, f20, f22, rdn # perform operation
fnmadd.h f9, f16, f20, f22, rmm # perform operation
fnmadd.h f9, f16, f20, f22, rne # perform operation
fnmadd.h f9, f16, f20, f22, rtz # perform operation
fnmadd.h f9, f16, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f16, f20, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x3c00)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f3, 0(x2) # load 0x0000c000 from memory into f3
la x2, scratch
li x3, 0x978b003b # load x3 with value 0x978b003b
sw x3, 0(x2) # store 0x978b003b in memory
flh f25, 0(x2) # load 0x978b003b from memory into f25
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f7, 0(x2) # load 0x00003c00 from memory into f7
fnmadd.h f6, f3, f25, f7, dyn # perform operation
fnmadd.h f6, f3, f25, f7, rdn # perform operation
fnmadd.h f6, f3, f25, f7, rmm # perform operation
fnmadd.h f6, f3, f25, f7, rne # perform operation
fnmadd.h f6, f3, f25, f7, rtz # perform operation
fnmadd.h f6, f3, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f3, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f3, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f3, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f3, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f3, f25, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xbc00)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
la x2, scratch
li x3, 0xb6cb4657 # load x3 with value 0xb6cb4657
sw x3, 0(x2) # store 0xb6cb4657 in memory
flh f24, 0(x2) # load 0xb6cb4657 from memory into f24
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f18, 0(x2) # load 0x0000bc00 from memory into f18
fnmadd.h f31, f30, f24, f18, dyn # perform operation
fnmadd.h f31, f30, f24, f18, rdn # perform operation
fnmadd.h f31, f30, f24, f18, rmm # perform operation
fnmadd.h f31, f30, f24, f18, rne # perform operation
fnmadd.h f31, f30, f24, f18, rtz # perform operation
fnmadd.h f31, f30, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f30, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f30, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f30, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f30, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f30, f24, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x3e00)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f19, 0(x2) # load 0x0000c000 from memory into f19
la x2, scratch
li x3, 0x88b7c20b # load x3 with value 0x88b7c20b
sw x3, 0(x2) # store 0x88b7c20b in memory
flh f28, 0(x2) # load 0x88b7c20b from memory into f28
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f15, 0(x2) # load 0x00003e00 from memory into f15
fnmadd.h f18, f19, f28, f15, dyn # perform operation
fnmadd.h f18, f19, f28, f15, rdn # perform operation
fnmadd.h f18, f19, f28, f15, rmm # perform operation
fnmadd.h f18, f19, f28, f15, rne # perform operation
fnmadd.h f18, f19, f28, f15, rtz # perform operation
fnmadd.h f18, f19, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f19, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f19, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f19, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f19, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f19, f28, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xbe00)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
la x2, scratch
li x3, 0xf13bed0e # load x3 with value 0xf13bed0e
sw x3, 0(x2) # store 0xf13bed0e in memory
flh f28, 0(x2) # load 0xf13bed0e from memory into f28
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f8, 0(x2) # load 0x0000be00 from memory into f8
fnmadd.h f6, f30, f28, f8, dyn # perform operation
fnmadd.h f6, f30, f28, f8, rdn # perform operation
fnmadd.h f6, f30, f28, f8, rmm # perform operation
fnmadd.h f6, f30, f28, f8, rne # perform operation
fnmadd.h f6, f30, f28, f8, rtz # perform operation
fnmadd.h f6, f30, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f30, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f30, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f30, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f30, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f30, f28, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x4000)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f1, 0(x2) # load 0x0000c000 from memory into f1
la x2, scratch
li x3, 0x99a4745b # load x3 with value 0x99a4745b
sw x3, 0(x2) # store 0x99a4745b in memory
flh f24, 0(x2) # load 0x99a4745b from memory into f24
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f7, 0(x2) # load 0x00004000 from memory into f7
fnmadd.h f5, f1, f24, f7, dyn # perform operation
fnmadd.h f5, f1, f24, f7, rdn # perform operation
fnmadd.h f5, f1, f24, f7, rmm # perform operation
fnmadd.h f5, f1, f24, f7, rne # perform operation
fnmadd.h f5, f1, f24, f7, rtz # perform operation
fnmadd.h f5, f1, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f1, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f1, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f1, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f1, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f1, f24, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xc000)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f13, 0(x2) # load 0x0000c000 from memory into f13
la x2, scratch
li x3, 0x62a97ac8 # load x3 with value 0x62a97ac8
sw x3, 0(x2) # store 0x62a97ac8 in memory
flh f8, 0(x2) # load 0x62a97ac8 from memory into f8
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f11, 0(x2) # load 0x0000c000 from memory into f11
fnmadd.h f25, f13, f8, f11, dyn # perform operation
fnmadd.h f25, f13, f8, f11, rdn # perform operation
fnmadd.h f25, f13, f8, f11, rmm # perform operation
fnmadd.h f25, f13, f8, f11, rne # perform operation
fnmadd.h f25, f13, f8, f11, rtz # perform operation
fnmadd.h f25, f13, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f13, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f13, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f13, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f13, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f13, f8, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x400)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f8, 0(x2) # load 0x0000c000 from memory into f8
la x2, scratch
li x3, 0x76bd1e57 # load x3 with value 0x76bd1e57
sw x3, 0(x2) # store 0x76bd1e57 in memory
flh f31, 0(x2) # load 0x76bd1e57 from memory into f31
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f28, 0(x2) # load 0x00000400 from memory into f28
fnmadd.h f24, f8, f31, f28, dyn # perform operation
fnmadd.h f24, f8, f31, f28, rdn # perform operation
fnmadd.h f24, f8, f31, f28, rmm # perform operation
fnmadd.h f24, f8, f31, f28, rne # perform operation
fnmadd.h f24, f8, f31, f28, rtz # perform operation
fnmadd.h f24, f8, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f8, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f8, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f8, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f8, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f8, f31, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x8400)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
la x2, scratch
li x3, 0x9ad328e4 # load x3 with value 0x9ad328e4
sw x3, 0(x2) # store 0x9ad328e4 in memory
flh f7, 0(x2) # load 0x9ad328e4 from memory into f7
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f24, 0(x2) # load 0x00008400 from memory into f24
fnmadd.h f8, f20, f7, f24, dyn # perform operation
fnmadd.h f8, f20, f7, f24, rdn # perform operation
fnmadd.h f8, f20, f7, f24, rmm # perform operation
fnmadd.h f8, f20, f7, f24, rne # perform operation
fnmadd.h f8, f20, f7, f24, rtz # perform operation
fnmadd.h f8, f20, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f20, f7, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7bff)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
la x2, scratch
li x3, 0x593c9490 # load x3 with value 0x593c9490
sw x3, 0(x2) # store 0x593c9490 in memory
flh f13, 0(x2) # load 0x593c9490 from memory into f13
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f27, 0(x2) # load 0x00007bff from memory into f27
fnmadd.h f11, f12, f13, f27, dyn # perform operation
fnmadd.h f11, f12, f13, f27, rdn # perform operation
fnmadd.h f11, f12, f13, f27, rmm # perform operation
fnmadd.h f11, f12, f13, f27, rne # perform operation
fnmadd.h f11, f12, f13, f27, rtz # perform operation
fnmadd.h f11, f12, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f12, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f12, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f12, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f12, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f12, f13, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xfbff)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f29, 0(x2) # load 0x0000c000 from memory into f29
la x2, scratch
li x3, 0x2ca2c710 # load x3 with value 0x2ca2c710
sw x3, 0(x2) # store 0x2ca2c710 in memory
flh f21, 0(x2) # load 0x2ca2c710 from memory into f21
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f30, 0(x2) # load 0x0000fbff from memory into f30
fnmadd.h f11, f29, f21, f30, dyn # perform operation
fnmadd.h f11, f29, f21, f30, rdn # perform operation
fnmadd.h f11, f29, f21, f30, rmm # perform operation
fnmadd.h f11, f29, f21, f30, rne # perform operation
fnmadd.h f11, f29, f21, f30, rtz # perform operation
fnmadd.h f11, f29, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f29, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f29, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f29, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f29, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f29, f21, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x3ff)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f29, 0(x2) # load 0x0000c000 from memory into f29
la x2, scratch
li x3, 0x140b13aa # load x3 with value 0x140b13aa
sw x3, 0(x2) # store 0x140b13aa in memory
flh f13, 0(x2) # load 0x140b13aa from memory into f13
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f11, 0(x2) # load 0x000003ff from memory into f11
fnmadd.h f12, f29, f13, f11, dyn # perform operation
fnmadd.h f12, f29, f13, f11, rdn # perform operation
fnmadd.h f12, f29, f13, f11, rmm # perform operation
fnmadd.h f12, f29, f13, f11, rne # perform operation
fnmadd.h f12, f29, f13, f11, rtz # perform operation
fnmadd.h f12, f29, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f29, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f29, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f29, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f29, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f29, f13, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x83ff)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f8, 0(x2) # load 0x0000c000 from memory into f8
la x2, scratch
li x3, 0xa2935349 # load x3 with value 0xa2935349
sw x3, 0(x2) # store 0xa2935349 in memory
flh f17, 0(x2) # load 0xa2935349 from memory into f17
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f12, 0(x2) # load 0x000083ff from memory into f12
fnmadd.h f24, f8, f17, f12, dyn # perform operation
fnmadd.h f24, f8, f17, f12, rdn # perform operation
fnmadd.h f24, f8, f17, f12, rmm # perform operation
fnmadd.h f24, f8, f17, f12, rne # perform operation
fnmadd.h f24, f8, f17, f12, rtz # perform operation
fnmadd.h f24, f8, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f8, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f8, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f8, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f8, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f8, f17, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x200)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f19, 0(x2) # load 0x0000c000 from memory into f19
la x2, scratch
li x3, 0x82f92b91 # load x3 with value 0x82f92b91
sw x3, 0(x2) # store 0x82f92b91 in memory
flh f25, 0(x2) # load 0x82f92b91 from memory into f25
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f30, 0(x2) # load 0x00000200 from memory into f30
fnmadd.h f14, f19, f25, f30, dyn # perform operation
fnmadd.h f14, f19, f25, f30, rdn # perform operation
fnmadd.h f14, f19, f25, f30, rmm # perform operation
fnmadd.h f14, f19, f25, f30, rne # perform operation
fnmadd.h f14, f19, f25, f30, rtz # perform operation
fnmadd.h f14, f19, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f19, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f19, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f19, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f19, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f19, f25, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x8200)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f5, 0(x2) # load 0x0000c000 from memory into f5
la x2, scratch
li x3, 0x5b8b1947 # load x3 with value 0x5b8b1947
sw x3, 0(x2) # store 0x5b8b1947 in memory
flh f2, 0(x2) # load 0x5b8b1947 from memory into f2
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f21, 0(x2) # load 0x00008200 from memory into f21
fnmadd.h f30, f5, f2, f21, dyn # perform operation
fnmadd.h f30, f5, f2, f21, rdn # perform operation
fnmadd.h f30, f5, f2, f21, rmm # perform operation
fnmadd.h f30, f5, f2, f21, rne # perform operation
fnmadd.h f30, f5, f2, f21, rtz # perform operation
fnmadd.h f30, f5, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f5, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f5, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f5, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f5, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f5, f2, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x1)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f15, 0(x2) # load 0x0000c000 from memory into f15
la x2, scratch
li x3, 0x92e2867a # load x3 with value 0x92e2867a
sw x3, 0(x2) # store 0x92e2867a in memory
flh f25, 0(x2) # load 0x92e2867a from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
fnmadd.h f30, f15, f25, f5, dyn # perform operation
fnmadd.h f30, f15, f25, f5, rdn # perform operation
fnmadd.h f30, f15, f25, f5, rmm # perform operation
fnmadd.h f30, f15, f25, f5, rne # perform operation
fnmadd.h f30, f15, f25, f5, rtz # perform operation
fnmadd.h f30, f15, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f15, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f15, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f15, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f15, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f15, f25, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x8001)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
la x2, scratch
li x3, 0xa728bce6 # load x3 with value 0xa728bce6
sw x3, 0(x2) # store 0xa728bce6 in memory
flh f15, 0(x2) # load 0xa728bce6 from memory into f15
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f1, 0(x2) # load 0x00008001 from memory into f1
fnmadd.h f19, f30, f15, f1, dyn # perform operation
fnmadd.h f19, f30, f15, f1, rdn # perform operation
fnmadd.h f19, f30, f15, f1, rmm # perform operation
fnmadd.h f19, f30, f15, f1, rne # perform operation
fnmadd.h f19, f30, f15, f1, rtz # perform operation
fnmadd.h f19, f30, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f30, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f30, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f30, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f30, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f30, f15, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7c00)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f1, 0(x2) # load 0x0000c000 from memory into f1
la x2, scratch
li x3, 0x2cf6ec38 # load x3 with value 0x2cf6ec38
sw x3, 0(x2) # store 0x2cf6ec38 in memory
flh f16, 0(x2) # load 0x2cf6ec38 from memory into f16
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f7, 0(x2) # load 0x00007c00 from memory into f7
fnmadd.h f18, f1, f16, f7, dyn # perform operation
fnmadd.h f18, f1, f16, f7, rdn # perform operation
fnmadd.h f18, f1, f16, f7, rmm # perform operation
fnmadd.h f18, f1, f16, f7, rne # perform operation
fnmadd.h f18, f1, f16, f7, rtz # perform operation
fnmadd.h f18, f1, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f1, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f1, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f1, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f1, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f1, f16, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xfc00)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f10, 0(x2) # load 0x0000c000 from memory into f10
la x2, scratch
li x3, 0x9d0278eb # load x3 with value 0x9d0278eb
sw x3, 0(x2) # store 0x9d0278eb in memory
flh f31, 0(x2) # load 0x9d0278eb from memory into f31
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f23, 0(x2) # load 0x0000fc00 from memory into f23
fnmadd.h f25, f10, f31, f23, dyn # perform operation
fnmadd.h f25, f10, f31, f23, rdn # perform operation
fnmadd.h f25, f10, f31, f23, rmm # perform operation
fnmadd.h f25, f10, f31, f23, rne # perform operation
fnmadd.h f25, f10, f31, f23, rtz # perform operation
fnmadd.h f25, f10, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f10, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f10, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f10, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f10, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f10, f31, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7e00)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f25, 0(x2) # load 0x0000c000 from memory into f25
la x2, scratch
li x3, 0x3b913cac # load x3 with value 0x3b913cac
sw x3, 0(x2) # store 0x3b913cac in memory
flh f3, 0(x2) # load 0x3b913cac from memory into f3
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
fnmadd.h f22, f25, f3, f18, dyn # perform operation
fnmadd.h f22, f25, f3, f18, rdn # perform operation
fnmadd.h f22, f25, f3, f18, rmm # perform operation
fnmadd.h f22, f25, f3, f18, rne # perform operation
fnmadd.h f22, f25, f3, f18, rtz # perform operation
fnmadd.h f22, f25, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f25, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f25, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f25, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f25, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f25, f3, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7fff)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f31, 0(x2) # load 0x0000c000 from memory into f31
la x2, scratch
li x3, 0x3abaa8bd # load x3 with value 0x3abaa8bd
sw x3, 0(x2) # store 0x3abaa8bd in memory
flh f19, 0(x2) # load 0x3abaa8bd from memory into f19
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
fnmadd.h f29, f31, f19, f23, dyn # perform operation
fnmadd.h f29, f31, f19, f23, rdn # perform operation
fnmadd.h f29, f31, f19, f23, rmm # perform operation
fnmadd.h f29, f31, f19, f23, rne # perform operation
fnmadd.h f29, f31, f19, f23, rtz # perform operation
fnmadd.h f29, f31, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f31, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f31, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f31, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f31, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f31, f19, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xfe00)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f28, 0(x2) # load 0x0000c000 from memory into f28
la x2, scratch
li x3, 0x029d8d9c # load x3 with value 0x029d8d9c
sw x3, 0(x2) # store 0x029d8d9c in memory
flh f19, 0(x2) # load 0x029d8d9c from memory into f19
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f17, 0(x2) # load 0x0000fe00 from memory into f17
fnmadd.h f11, f28, f19, f17, dyn # perform operation
fnmadd.h f11, f28, f19, f17, rdn # perform operation
fnmadd.h f11, f28, f19, f17, rmm # perform operation
fnmadd.h f11, f28, f19, f17, rne # perform operation
fnmadd.h f11, f28, f19, f17, rtz # perform operation
fnmadd.h f11, f28, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f28, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f28, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f28, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f28, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f28, f19, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7c01)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f10, 0(x2) # load 0x0000c000 from memory into f10
la x2, scratch
li x3, 0x19f09808 # load x3 with value 0x19f09808
sw x3, 0(x2) # store 0x19f09808 in memory
flh f17, 0(x2) # load 0x19f09808 from memory into f17
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f18, 0(x2) # load 0x00007c01 from memory into f18
fnmadd.h f2, f10, f17, f18, dyn # perform operation
fnmadd.h f2, f10, f17, f18, rdn # perform operation
fnmadd.h f2, f10, f17, f18, rmm # perform operation
fnmadd.h f2, f10, f17, f18, rne # perform operation
fnmadd.h f2, f10, f17, f18, rtz # perform operation
fnmadd.h f2, f10, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f10, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f10, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f10, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f10, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f10, f17, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7dff)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f23, 0(x2) # load 0x0000c000 from memory into f23
la x2, scratch
li x3, 0x82b1e21a # load x3 with value 0x82b1e21a
sw x3, 0(x2) # store 0x82b1e21a in memory
flh f21, 0(x2) # load 0x82b1e21a from memory into f21
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f5, 0(x2) # load 0x00007dff from memory into f5
fnmadd.h f19, f23, f21, f5, dyn # perform operation
fnmadd.h f19, f23, f21, f5, rdn # perform operation
fnmadd.h f19, f23, f21, f5, rmm # perform operation
fnmadd.h f19, f23, f21, f5, rne # perform operation
fnmadd.h f19, f23, f21, f5, rtz # perform operation
fnmadd.h f19, f23, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f23, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f23, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f23, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f23, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f23, f21, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xfc01)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f7, 0(x2) # load 0x0000c000 from memory into f7
la x2, scratch
li x3, 0xb8e29e62 # load x3 with value 0xb8e29e62
sw x3, 0(x2) # store 0xb8e29e62 in memory
flh f6, 0(x2) # load 0xb8e29e62 from memory into f6
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f24, 0(x2) # load 0x0000fc01 from memory into f24
fnmadd.h f2, f7, f6, f24, dyn # perform operation
fnmadd.h f2, f7, f6, f24, rdn # perform operation
fnmadd.h f2, f7, f6, f24, rmm # perform operation
fnmadd.h f2, f7, f6, f24, rne # perform operation
fnmadd.h f2, f7, f6, f24, rtz # perform operation
fnmadd.h f2, f7, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f7, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f7, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f7, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f7, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f7, f6, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x58b4)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f19, 0(x2) # load 0x0000c000 from memory into f19
la x2, scratch
li x3, 0xb35d08d7 # load x3 with value 0xb35d08d7
sw x3, 0(x2) # store 0xb35d08d7 in memory
flh f30, 0(x2) # load 0xb35d08d7 from memory into f30
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f9, 0(x2) # load 0x000058b4 from memory into f9
fnmadd.h f7, f19, f30, f9, dyn # perform operation
fnmadd.h f7, f19, f30, f9, rdn # perform operation
fnmadd.h f7, f19, f30, f9, rmm # perform operation
fnmadd.h f7, f19, f30, f9, rne # perform operation
fnmadd.h f7, f19, f30, f9, rtz # perform operation
fnmadd.h f7, f19, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f19, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f19, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f19, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f19, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f19, f30, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xc93a)
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f6, 0(x2) # load 0x0000c000 from memory into f6
la x2, scratch
li x3, 0x1aa4499e # load x3 with value 0x1aa4499e
sw x3, 0(x2) # store 0x1aa4499e in memory
flh f1, 0(x2) # load 0x1aa4499e from memory into f1
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f30, 0(x2) # load 0x0000c93a from memory into f30
fnmadd.h f12, f6, f1, f30, dyn # perform operation
fnmadd.h f12, f6, f1, f30, rdn # perform operation
fnmadd.h f12, f6, f1, f30, rmm # perform operation
fnmadd.h f12, f6, f1, f30, rne # perform operation
fnmadd.h f12, f6, f1, f30, rtz # perform operation
fnmadd.h f12, f6, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f6, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f6, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f6, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f6, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f6, f1, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x0)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
la x2, scratch
li x3, 0x0b5f6318 # load x3 with value 0x0b5f6318
sw x3, 0(x2) # store 0x0b5f6318 in memory
flh f20, 0(x2) # load 0x0b5f6318 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f18, 0(x2) # load 0x00000000 from memory into f18
fnmadd.h f14, f1, f20, f18, dyn # perform operation
fnmadd.h f14, f1, f20, f18, rdn # perform operation
fnmadd.h f14, f1, f20, f18, rmm # perform operation
fnmadd.h f14, f1, f20, f18, rne # perform operation
fnmadd.h f14, f1, f20, f18, rtz # perform operation
fnmadd.h f14, f1, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f1, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f1, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f1, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f1, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f1, f20, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x8000)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f29, 0(x2) # load 0x00000400 from memory into f29
la x2, scratch
li x3, 0x20734b88 # load x3 with value 0x20734b88
sw x3, 0(x2) # store 0x20734b88 in memory
flh f14, 0(x2) # load 0x20734b88 from memory into f14
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f1, 0(x2) # load 0x00008000 from memory into f1
fnmadd.h f27, f29, f14, f1, dyn # perform operation
fnmadd.h f27, f29, f14, f1, rdn # perform operation
fnmadd.h f27, f29, f14, f1, rmm # perform operation
fnmadd.h f27, f29, f14, f1, rne # perform operation
fnmadd.h f27, f29, f14, f1, rtz # perform operation
fnmadd.h f27, f29, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f29, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f29, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f29, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f29, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f29, f14, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f5, 0(x2) # load 0x00000400 from memory into f5
la x2, scratch
li x3, 0xea01f4fe # load x3 with value 0xea01f4fe
sw x3, 0(x2) # store 0xea01f4fe in memory
flh f29, 0(x2) # load 0xea01f4fe from memory into f29
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f27, 0(x2) # load 0x00003c00 from memory into f27
fnmadd.h f28, f5, f29, f27, dyn # perform operation
fnmadd.h f28, f5, f29, f27, rdn # perform operation
fnmadd.h f28, f5, f29, f27, rmm # perform operation
fnmadd.h f28, f5, f29, f27, rne # perform operation
fnmadd.h f28, f5, f29, f27, rtz # perform operation
fnmadd.h f28, f5, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f5, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f5, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f5, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f5, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f5, f29, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f24, 0(x2) # load 0x00000400 from memory into f24
la x2, scratch
li x3, 0x4027ffd3 # load x3 with value 0x4027ffd3
sw x3, 0(x2) # store 0x4027ffd3 in memory
flh f28, 0(x2) # load 0x4027ffd3 from memory into f28
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f17, 0(x2) # load 0x0000bc00 from memory into f17
fnmadd.h f8, f24, f28, f17, dyn # perform operation
fnmadd.h f8, f24, f28, f17, rdn # perform operation
fnmadd.h f8, f24, f28, f17, rmm # perform operation
fnmadd.h f8, f24, f28, f17, rne # perform operation
fnmadd.h f8, f24, f28, f17, rtz # perform operation
fnmadd.h f8, f24, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f24, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f24, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f24, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f24, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f24, f28, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f13, 0(x2) # load 0x00000400 from memory into f13
la x2, scratch
li x3, 0x997968db # load x3 with value 0x997968db
sw x3, 0(x2) # store 0x997968db in memory
flh f15, 0(x2) # load 0x997968db from memory into f15
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f5, 0(x2) # load 0x00003e00 from memory into f5
fnmadd.h f19, f13, f15, f5, dyn # perform operation
fnmadd.h f19, f13, f15, f5, rdn # perform operation
fnmadd.h f19, f13, f15, f5, rmm # perform operation
fnmadd.h f19, f13, f15, f5, rne # perform operation
fnmadd.h f19, f13, f15, f5, rtz # perform operation
fnmadd.h f19, f13, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f13, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f13, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f13, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f13, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f13, f15, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f10, 0(x2) # load 0x00000400 from memory into f10
la x2, scratch
li x3, 0x6cc35628 # load x3 with value 0x6cc35628
sw x3, 0(x2) # store 0x6cc35628 in memory
flh f15, 0(x2) # load 0x6cc35628 from memory into f15
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f31, 0(x2) # load 0x0000be00 from memory into f31
fnmadd.h f2, f10, f15, f31, dyn # perform operation
fnmadd.h f2, f10, f15, f31, rdn # perform operation
fnmadd.h f2, f10, f15, f31, rmm # perform operation
fnmadd.h f2, f10, f15, f31, rne # perform operation
fnmadd.h f2, f10, f15, f31, rtz # perform operation
fnmadd.h f2, f10, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f10, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f10, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f10, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f10, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f10, f15, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x4000)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
la x2, scratch
li x3, 0xaf35ebc5 # load x3 with value 0xaf35ebc5
sw x3, 0(x2) # store 0xaf35ebc5 in memory
flh f31, 0(x2) # load 0xaf35ebc5 from memory into f31
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f12, 0(x2) # load 0x00004000 from memory into f12
fnmadd.h f17, f1, f31, f12, dyn # perform operation
fnmadd.h f17, f1, f31, f12, rdn # perform operation
fnmadd.h f17, f1, f31, f12, rmm # perform operation
fnmadd.h f17, f1, f31, f12, rne # perform operation
fnmadd.h f17, f1, f31, f12, rtz # perform operation
fnmadd.h f17, f1, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f1, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f1, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f1, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f1, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f1, f31, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xc000)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f13, 0(x2) # load 0x00000400 from memory into f13
la x2, scratch
li x3, 0x956b6b17 # load x3 with value 0x956b6b17
sw x3, 0(x2) # store 0x956b6b17 in memory
flh f3, 0(x2) # load 0x956b6b17 from memory into f3
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f5, 0(x2) # load 0x0000c000 from memory into f5
fnmadd.h f11, f13, f3, f5, dyn # perform operation
fnmadd.h f11, f13, f3, f5, rdn # perform operation
fnmadd.h f11, f13, f3, f5, rmm # perform operation
fnmadd.h f11, f13, f3, f5, rne # perform operation
fnmadd.h f11, f13, f3, f5, rtz # perform operation
fnmadd.h f11, f13, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f13, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f13, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f13, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f13, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f13, f3, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x400)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f21, 0(x2) # load 0x00000400 from memory into f21
la x2, scratch
li x3, 0xfac4a665 # load x3 with value 0xfac4a665
sw x3, 0(x2) # store 0xfac4a665 in memory
flh f23, 0(x2) # load 0xfac4a665 from memory into f23
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f28, 0(x2) # load 0x00000400 from memory into f28
fnmadd.h f7, f21, f23, f28, dyn # perform operation
fnmadd.h f7, f21, f23, f28, rdn # perform operation
fnmadd.h f7, f21, f23, f28, rmm # perform operation
fnmadd.h f7, f21, f23, f28, rne # perform operation
fnmadd.h f7, f21, f23, f28, rtz # perform operation
fnmadd.h f7, f21, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f21, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f21, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f21, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f21, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f21, f23, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x8400)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f20, 0(x2) # load 0x00000400 from memory into f20
la x2, scratch
li x3, 0x9fde167c # load x3 with value 0x9fde167c
sw x3, 0(x2) # store 0x9fde167c in memory
flh f14, 0(x2) # load 0x9fde167c from memory into f14
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
fnmadd.h f24, f20, f14, f13, dyn # perform operation
fnmadd.h f24, f20, f14, f13, rdn # perform operation
fnmadd.h f24, f20, f14, f13, rmm # perform operation
fnmadd.h f24, f20, f14, f13, rne # perform operation
fnmadd.h f24, f20, f14, f13, rtz # perform operation
fnmadd.h f24, f20, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f20, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f20, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f20, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f20, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f20, f14, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f12, 0(x2) # load 0x00000400 from memory into f12
la x2, scratch
li x3, 0x7217791c # load x3 with value 0x7217791c
sw x3, 0(x2) # store 0x7217791c in memory
flh f25, 0(x2) # load 0x7217791c from memory into f25
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f1, 0(x2) # load 0x00007bff from memory into f1
fnmadd.h f26, f12, f25, f1, dyn # perform operation
fnmadd.h f26, f12, f25, f1, rdn # perform operation
fnmadd.h f26, f12, f25, f1, rmm # perform operation
fnmadd.h f26, f12, f25, f1, rne # perform operation
fnmadd.h f26, f12, f25, f1, rtz # perform operation
fnmadd.h f26, f12, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f12, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f12, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f12, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f12, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f12, f25, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f3, 0(x2) # load 0x00000400 from memory into f3
la x2, scratch
li x3, 0x8cb8ac6b # load x3 with value 0x8cb8ac6b
sw x3, 0(x2) # store 0x8cb8ac6b in memory
flh f15, 0(x2) # load 0x8cb8ac6b from memory into f15
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f18, 0(x2) # load 0x0000fbff from memory into f18
fnmadd.h f20, f3, f15, f18, dyn # perform operation
fnmadd.h f20, f3, f15, f18, rdn # perform operation
fnmadd.h f20, f3, f15, f18, rmm # perform operation
fnmadd.h f20, f3, f15, f18, rne # perform operation
fnmadd.h f20, f3, f15, f18, rtz # perform operation
fnmadd.h f20, f3, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f3, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f3, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f3, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f3, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f3, f15, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f10, 0(x2) # load 0x00000400 from memory into f10
la x2, scratch
li x3, 0x1566030b # load x3 with value 0x1566030b
sw x3, 0(x2) # store 0x1566030b in memory
flh f24, 0(x2) # load 0x1566030b from memory into f24
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f14, 0(x2) # load 0x000003ff from memory into f14
fnmadd.h f6, f10, f24, f14, dyn # perform operation
fnmadd.h f6, f10, f24, f14, rdn # perform operation
fnmadd.h f6, f10, f24, f14, rmm # perform operation
fnmadd.h f6, f10, f24, f14, rne # perform operation
fnmadd.h f6, f10, f24, f14, rtz # perform operation
fnmadd.h f6, f10, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f10, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f10, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f10, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f10, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f10, f24, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f22, 0(x2) # load 0x00000400 from memory into f22
la x2, scratch
li x3, 0xb1f2224d # load x3 with value 0xb1f2224d
sw x3, 0(x2) # store 0xb1f2224d in memory
flh f18, 0(x2) # load 0xb1f2224d from memory into f18
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f25, 0(x2) # load 0x000083ff from memory into f25
fnmadd.h f14, f22, f18, f25, dyn # perform operation
fnmadd.h f14, f22, f18, f25, rdn # perform operation
fnmadd.h f14, f22, f18, f25, rmm # perform operation
fnmadd.h f14, f22, f18, f25, rne # perform operation
fnmadd.h f14, f22, f18, f25, rtz # perform operation
fnmadd.h f14, f22, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f22, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f22, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f22, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f22, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f22, f18, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x200)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f31, 0(x2) # load 0x00000400 from memory into f31
la x2, scratch
li x3, 0x245de1ad # load x3 with value 0x245de1ad
sw x3, 0(x2) # store 0x245de1ad in memory
flh f30, 0(x2) # load 0x245de1ad from memory into f30
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f14, 0(x2) # load 0x00000200 from memory into f14
fnmadd.h f17, f31, f30, f14, dyn # perform operation
fnmadd.h f17, f31, f30, f14, rdn # perform operation
fnmadd.h f17, f31, f30, f14, rmm # perform operation
fnmadd.h f17, f31, f30, f14, rne # perform operation
fnmadd.h f17, f31, f30, f14, rtz # perform operation
fnmadd.h f17, f31, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f31, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f31, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f31, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f31, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f31, f30, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x8200)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f27, 0(x2) # load 0x00000400 from memory into f27
la x2, scratch
li x3, 0x1d215cc3 # load x3 with value 0x1d215cc3
sw x3, 0(x2) # store 0x1d215cc3 in memory
flh f26, 0(x2) # load 0x1d215cc3 from memory into f26
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f2, 0(x2) # load 0x00008200 from memory into f2
fnmadd.h f3, f27, f26, f2, dyn # perform operation
fnmadd.h f3, f27, f26, f2, rdn # perform operation
fnmadd.h f3, f27, f26, f2, rmm # perform operation
fnmadd.h f3, f27, f26, f2, rne # perform operation
fnmadd.h f3, f27, f26, f2, rtz # perform operation
fnmadd.h f3, f27, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f27, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f27, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f27, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f27, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f27, f26, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x1)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f12, 0(x2) # load 0x00000400 from memory into f12
la x2, scratch
li x3, 0xe968c38e # load x3 with value 0xe968c38e
sw x3, 0(x2) # store 0xe968c38e in memory
flh f18, 0(x2) # load 0xe968c38e from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f22, 0(x2) # load 0x00000001 from memory into f22
fnmadd.h f19, f12, f18, f22, dyn # perform operation
fnmadd.h f19, f12, f18, f22, rdn # perform operation
fnmadd.h f19, f12, f18, f22, rmm # perform operation
fnmadd.h f19, f12, f18, f22, rne # perform operation
fnmadd.h f19, f12, f18, f22, rtz # perform operation
fnmadd.h f19, f12, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f12, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f12, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f12, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f12, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f12, f18, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x8001)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f25, 0(x2) # load 0x00000400 from memory into f25
la x2, scratch
li x3, 0xa08ce1c3 # load x3 with value 0xa08ce1c3
sw x3, 0(x2) # store 0xa08ce1c3 in memory
flh f30, 0(x2) # load 0xa08ce1c3 from memory into f30
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f2, 0(x2) # load 0x00008001 from memory into f2
fnmadd.h f17, f25, f30, f2, dyn # perform operation
fnmadd.h f17, f25, f30, f2, rdn # perform operation
fnmadd.h f17, f25, f30, f2, rmm # perform operation
fnmadd.h f17, f25, f30, f2, rne # perform operation
fnmadd.h f17, f25, f30, f2, rtz # perform operation
fnmadd.h f17, f25, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f25, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f25, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f25, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f25, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f25, f30, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f27, 0(x2) # load 0x00000400 from memory into f27
la x2, scratch
li x3, 0x8624cb6c # load x3 with value 0x8624cb6c
sw x3, 0(x2) # store 0x8624cb6c in memory
flh f9, 0(x2) # load 0x8624cb6c from memory into f9
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f15, 0(x2) # load 0x00007c00 from memory into f15
fnmadd.h f2, f27, f9, f15, dyn # perform operation
fnmadd.h f2, f27, f9, f15, rdn # perform operation
fnmadd.h f2, f27, f9, f15, rmm # perform operation
fnmadd.h f2, f27, f9, f15, rne # perform operation
fnmadd.h f2, f27, f9, f15, rtz # perform operation
fnmadd.h f2, f27, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f27, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f27, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f27, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f27, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f27, f9, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f27, 0(x2) # load 0x00000400 from memory into f27
la x2, scratch
li x3, 0xa42a27be # load x3 with value 0xa42a27be
sw x3, 0(x2) # store 0xa42a27be in memory
flh f19, 0(x2) # load 0xa42a27be from memory into f19
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f14, 0(x2) # load 0x0000fc00 from memory into f14
fnmadd.h f16, f27, f19, f14, dyn # perform operation
fnmadd.h f16, f27, f19, f14, rdn # perform operation
fnmadd.h f16, f27, f19, f14, rmm # perform operation
fnmadd.h f16, f27, f19, f14, rne # perform operation
fnmadd.h f16, f27, f19, f14, rtz # perform operation
fnmadd.h f16, f27, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f27, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f27, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f27, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f27, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f27, f19, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f30, 0(x2) # load 0x00000400 from memory into f30
la x2, scratch
li x3, 0x29c03693 # load x3 with value 0x29c03693
sw x3, 0(x2) # store 0x29c03693 in memory
flh f5, 0(x2) # load 0x29c03693 from memory into f5
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f3, 0(x2) # load 0x00007e00 from memory into f3
fnmadd.h f6, f30, f5, f3, dyn # perform operation
fnmadd.h f6, f30, f5, f3, rdn # perform operation
fnmadd.h f6, f30, f5, f3, rmm # perform operation
fnmadd.h f6, f30, f5, f3, rne # perform operation
fnmadd.h f6, f30, f5, f3, rtz # perform operation
fnmadd.h f6, f30, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f30, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f30, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f30, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f30, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f30, f5, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f15, 0(x2) # load 0x00000400 from memory into f15
la x2, scratch
li x3, 0x4c96d86c # load x3 with value 0x4c96d86c
sw x3, 0(x2) # store 0x4c96d86c in memory
flh f2, 0(x2) # load 0x4c96d86c from memory into f2
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f26, 0(x2) # load 0x00007fff from memory into f26
fnmadd.h f11, f15, f2, f26, dyn # perform operation
fnmadd.h f11, f15, f2, f26, rdn # perform operation
fnmadd.h f11, f15, f2, f26, rmm # perform operation
fnmadd.h f11, f15, f2, f26, rne # perform operation
fnmadd.h f11, f15, f2, f26, rtz # perform operation
fnmadd.h f11, f15, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f15, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f15, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f15, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f15, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f15, f2, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f16, 0(x2) # load 0x00000400 from memory into f16
la x2, scratch
li x3, 0x18bfeecf # load x3 with value 0x18bfeecf
sw x3, 0(x2) # store 0x18bfeecf in memory
flh f18, 0(x2) # load 0x18bfeecf from memory into f18
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f24, 0(x2) # load 0x0000fe00 from memory into f24
fnmadd.h f29, f16, f18, f24, dyn # perform operation
fnmadd.h f29, f16, f18, f24, rdn # perform operation
fnmadd.h f29, f16, f18, f24, rmm # perform operation
fnmadd.h f29, f16, f18, f24, rne # perform operation
fnmadd.h f29, f16, f18, f24, rtz # perform operation
fnmadd.h f29, f16, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f16, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f16, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f16, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f16, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f16, f18, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f22, 0(x2) # load 0x00000400 from memory into f22
la x2, scratch
li x3, 0x4c22f09c # load x3 with value 0x4c22f09c
sw x3, 0(x2) # store 0x4c22f09c in memory
flh f30, 0(x2) # load 0x4c22f09c from memory into f30
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f19, 0(x2) # load 0x00007c01 from memory into f19
fnmadd.h f9, f22, f30, f19, dyn # perform operation
fnmadd.h f9, f22, f30, f19, rdn # perform operation
fnmadd.h f9, f22, f30, f19, rmm # perform operation
fnmadd.h f9, f22, f30, f19, rne # perform operation
fnmadd.h f9, f22, f30, f19, rtz # perform operation
fnmadd.h f9, f22, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f22, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f22, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f22, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f22, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f22, f30, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f13, 0(x2) # load 0x00000400 from memory into f13
la x2, scratch
li x3, 0x110653ee # load x3 with value 0x110653ee
sw x3, 0(x2) # store 0x110653ee in memory
flh f23, 0(x2) # load 0x110653ee from memory into f23
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f29, 0(x2) # load 0x00007dff from memory into f29
fnmadd.h f6, f13, f23, f29, dyn # perform operation
fnmadd.h f6, f13, f23, f29, rdn # perform operation
fnmadd.h f6, f13, f23, f29, rmm # perform operation
fnmadd.h f6, f13, f23, f29, rne # perform operation
fnmadd.h f6, f13, f23, f29, rtz # perform operation
fnmadd.h f6, f13, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f13, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f13, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f13, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f13, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f13, f23, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f13, 0(x2) # load 0x00000400 from memory into f13
la x2, scratch
li x3, 0x63e0057f # load x3 with value 0x63e0057f
sw x3, 0(x2) # store 0x63e0057f in memory
flh f26, 0(x2) # load 0x63e0057f from memory into f26
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f20, 0(x2) # load 0x0000fc01 from memory into f20
fnmadd.h f10, f13, f26, f20, dyn # perform operation
fnmadd.h f10, f13, f26, f20, rdn # perform operation
fnmadd.h f10, f13, f26, f20, rmm # perform operation
fnmadd.h f10, f13, f26, f20, rne # perform operation
fnmadd.h f10, f13, f26, f20, rtz # perform operation
fnmadd.h f10, f13, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f13, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f13, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f13, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f13, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f13, f26, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f16, 0(x2) # load 0x00000400 from memory into f16
la x2, scratch
li x3, 0x4fd7e781 # load x3 with value 0x4fd7e781
sw x3, 0(x2) # store 0x4fd7e781 in memory
flh f15, 0(x2) # load 0x4fd7e781 from memory into f15
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f10, 0(x2) # load 0x000058b4 from memory into f10
fnmadd.h f3, f16, f15, f10, dyn # perform operation
fnmadd.h f3, f16, f15, f10, rdn # perform operation
fnmadd.h f3, f16, f15, f10, rmm # perform operation
fnmadd.h f3, f16, f15, f10, rne # perform operation
fnmadd.h f3, f16, f15, f10, rtz # perform operation
fnmadd.h f3, f16, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f16, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f16, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f16, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f16, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f16, f15, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f25, 0(x2) # load 0x00000400 from memory into f25
la x2, scratch
li x3, 0x9faf3491 # load x3 with value 0x9faf3491
sw x3, 0(x2) # store 0x9faf3491 in memory
flh f29, 0(x2) # load 0x9faf3491 from memory into f29
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f10, 0(x2) # load 0x0000c93a from memory into f10
fnmadd.h f28, f25, f29, f10, dyn # perform operation
fnmadd.h f28, f25, f29, f10, rdn # perform operation
fnmadd.h f28, f25, f29, f10, rmm # perform operation
fnmadd.h f28, f25, f29, f10, rne # perform operation
fnmadd.h f28, f25, f29, f10, rtz # perform operation
fnmadd.h f28, f25, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f25, f29, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x0)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f27, 0(x2) # load 0x00008400 from memory into f27
la x2, scratch
li x3, 0xb4738bf5 # load x3 with value 0xb4738bf5
sw x3, 0(x2) # store 0xb4738bf5 in memory
flh f10, 0(x2) # load 0xb4738bf5 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f5, 0(x2) # load 0x00000000 from memory into f5
fnmadd.h f23, f27, f10, f5, dyn # perform operation
fnmadd.h f23, f27, f10, f5, rdn # perform operation
fnmadd.h f23, f27, f10, f5, rmm # perform operation
fnmadd.h f23, f27, f10, f5, rne # perform operation
fnmadd.h f23, f27, f10, f5, rtz # perform operation
fnmadd.h f23, f27, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f27, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f27, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f27, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f27, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f27, f10, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x8000)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f23, 0(x2) # load 0x00008400 from memory into f23
la x2, scratch
li x3, 0xd9ba5b52 # load x3 with value 0xd9ba5b52
sw x3, 0(x2) # store 0xd9ba5b52 in memory
flh f7, 0(x2) # load 0xd9ba5b52 from memory into f7
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f9, 0(x2) # load 0x00008000 from memory into f9
fnmadd.h f21, f23, f7, f9, dyn # perform operation
fnmadd.h f21, f23, f7, f9, rdn # perform operation
fnmadd.h f21, f23, f7, f9, rmm # perform operation
fnmadd.h f21, f23, f7, f9, rne # perform operation
fnmadd.h f21, f23, f7, f9, rtz # perform operation
fnmadd.h f21, f23, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f23, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f23, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f23, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f23, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f23, f7, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f20, 0(x2) # load 0x00008400 from memory into f20
la x2, scratch
li x3, 0xf5d86fd1 # load x3 with value 0xf5d86fd1
sw x3, 0(x2) # store 0xf5d86fd1 in memory
flh f14, 0(x2) # load 0xf5d86fd1 from memory into f14
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f26, 0(x2) # load 0x00003c00 from memory into f26
fnmadd.h f21, f20, f14, f26, dyn # perform operation
fnmadd.h f21, f20, f14, f26, rdn # perform operation
fnmadd.h f21, f20, f14, f26, rmm # perform operation
fnmadd.h f21, f20, f14, f26, rne # perform operation
fnmadd.h f21, f20, f14, f26, rtz # perform operation
fnmadd.h f21, f20, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f20, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f20, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f20, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f20, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f20, f14, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f5, 0(x2) # load 0x00008400 from memory into f5
la x2, scratch
li x3, 0xfccb0c2c # load x3 with value 0xfccb0c2c
sw x3, 0(x2) # store 0xfccb0c2c in memory
flh f12, 0(x2) # load 0xfccb0c2c from memory into f12
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f9, 0(x2) # load 0x0000bc00 from memory into f9
fnmadd.h f18, f5, f12, f9, dyn # perform operation
fnmadd.h f18, f5, f12, f9, rdn # perform operation
fnmadd.h f18, f5, f12, f9, rmm # perform operation
fnmadd.h f18, f5, f12, f9, rne # perform operation
fnmadd.h f18, f5, f12, f9, rtz # perform operation
fnmadd.h f18, f5, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f5, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f5, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f5, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f5, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f5, f12, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f19, 0(x2) # load 0x00008400 from memory into f19
la x2, scratch
li x3, 0xd7ac07e3 # load x3 with value 0xd7ac07e3
sw x3, 0(x2) # store 0xd7ac07e3 in memory
flh f13, 0(x2) # load 0xd7ac07e3 from memory into f13
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f28, 0(x2) # load 0x00003e00 from memory into f28
fnmadd.h f25, f19, f13, f28, dyn # perform operation
fnmadd.h f25, f19, f13, f28, rdn # perform operation
fnmadd.h f25, f19, f13, f28, rmm # perform operation
fnmadd.h f25, f19, f13, f28, rne # perform operation
fnmadd.h f25, f19, f13, f28, rtz # perform operation
fnmadd.h f25, f19, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f19, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f19, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f19, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f19, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f19, f13, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f25, 0(x2) # load 0x00008400 from memory into f25
la x2, scratch
li x3, 0xfbbca5f6 # load x3 with value 0xfbbca5f6
sw x3, 0(x2) # store 0xfbbca5f6 in memory
flh f20, 0(x2) # load 0xfbbca5f6 from memory into f20
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f7, 0(x2) # load 0x0000be00 from memory into f7
fnmadd.h f11, f25, f20, f7, dyn # perform operation
fnmadd.h f11, f25, f20, f7, rdn # perform operation
fnmadd.h f11, f25, f20, f7, rmm # perform operation
fnmadd.h f11, f25, f20, f7, rne # perform operation
fnmadd.h f11, f25, f20, f7, rtz # perform operation
fnmadd.h f11, f25, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f25, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f25, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f25, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f25, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f25, f20, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x4000)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f8, 0(x2) # load 0x00008400 from memory into f8
la x2, scratch
li x3, 0xec5aa8dc # load x3 with value 0xec5aa8dc
sw x3, 0(x2) # store 0xec5aa8dc in memory
flh f31, 0(x2) # load 0xec5aa8dc from memory into f31
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f22, 0(x2) # load 0x00004000 from memory into f22
fnmadd.h f20, f8, f31, f22, dyn # perform operation
fnmadd.h f20, f8, f31, f22, rdn # perform operation
fnmadd.h f20, f8, f31, f22, rmm # perform operation
fnmadd.h f20, f8, f31, f22, rne # perform operation
fnmadd.h f20, f8, f31, f22, rtz # perform operation
fnmadd.h f20, f8, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f8, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f8, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f8, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f8, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f8, f31, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xc000)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f11, 0(x2) # load 0x00008400 from memory into f11
la x2, scratch
li x3, 0x08f7e355 # load x3 with value 0x08f7e355
sw x3, 0(x2) # store 0x08f7e355 in memory
flh f13, 0(x2) # load 0x08f7e355 from memory into f13
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
fnmadd.h f3, f11, f13, f20, dyn # perform operation
fnmadd.h f3, f11, f13, f20, rdn # perform operation
fnmadd.h f3, f11, f13, f20, rmm # perform operation
fnmadd.h f3, f11, f13, f20, rne # perform operation
fnmadd.h f3, f11, f13, f20, rtz # perform operation
fnmadd.h f3, f11, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f11, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f11, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f11, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f11, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f11, f13, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x400)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f16, 0(x2) # load 0x00008400 from memory into f16
la x2, scratch
li x3, 0xa8e81c65 # load x3 with value 0xa8e81c65
sw x3, 0(x2) # store 0xa8e81c65 in memory
flh f17, 0(x2) # load 0xa8e81c65 from memory into f17
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f3, 0(x2) # load 0x00000400 from memory into f3
fnmadd.h f31, f16, f17, f3, dyn # perform operation
fnmadd.h f31, f16, f17, f3, rdn # perform operation
fnmadd.h f31, f16, f17, f3, rmm # perform operation
fnmadd.h f31, f16, f17, f3, rne # perform operation
fnmadd.h f31, f16, f17, f3, rtz # perform operation
fnmadd.h f31, f16, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f16, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f16, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f16, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f16, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f16, f17, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x8400)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f1, 0(x2) # load 0x00008400 from memory into f1
la x2, scratch
li x3, 0x803ad26a # load x3 with value 0x803ad26a
sw x3, 0(x2) # store 0x803ad26a in memory
flh f29, 0(x2) # load 0x803ad26a from memory into f29
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f16, 0(x2) # load 0x00008400 from memory into f16
fnmadd.h f31, f1, f29, f16, dyn # perform operation
fnmadd.h f31, f1, f29, f16, rdn # perform operation
fnmadd.h f31, f1, f29, f16, rmm # perform operation
fnmadd.h f31, f1, f29, f16, rne # perform operation
fnmadd.h f31, f1, f29, f16, rtz # perform operation
fnmadd.h f31, f1, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f1, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f1, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f1, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f1, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f1, f29, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f18, 0(x2) # load 0x00008400 from memory into f18
la x2, scratch
li x3, 0x72202328 # load x3 with value 0x72202328
sw x3, 0(x2) # store 0x72202328 in memory
flh f13, 0(x2) # load 0x72202328 from memory into f13
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f8, 0(x2) # load 0x00007bff from memory into f8
fnmadd.h f11, f18, f13, f8, dyn # perform operation
fnmadd.h f11, f18, f13, f8, rdn # perform operation
fnmadd.h f11, f18, f13, f8, rmm # perform operation
fnmadd.h f11, f18, f13, f8, rne # perform operation
fnmadd.h f11, f18, f13, f8, rtz # perform operation
fnmadd.h f11, f18, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f18, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f18, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f18, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f18, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f18, f13, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f26, 0(x2) # load 0x00008400 from memory into f26
la x2, scratch
li x3, 0x53811906 # load x3 with value 0x53811906
sw x3, 0(x2) # store 0x53811906 in memory
flh f13, 0(x2) # load 0x53811906 from memory into f13
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f12, 0(x2) # load 0x0000fbff from memory into f12
fnmadd.h f19, f26, f13, f12, dyn # perform operation
fnmadd.h f19, f26, f13, f12, rdn # perform operation
fnmadd.h f19, f26, f13, f12, rmm # perform operation
fnmadd.h f19, f26, f13, f12, rne # perform operation
fnmadd.h f19, f26, f13, f12, rtz # perform operation
fnmadd.h f19, f26, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f26, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f26, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f26, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f26, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f26, f13, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f11, 0(x2) # load 0x00008400 from memory into f11
la x2, scratch
li x3, 0x7d4c4b30 # load x3 with value 0x7d4c4b30
sw x3, 0(x2) # store 0x7d4c4b30 in memory
flh f18, 0(x2) # load 0x7d4c4b30 from memory into f18
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f30, 0(x2) # load 0x000003ff from memory into f30
fnmadd.h f2, f11, f18, f30, dyn # perform operation
fnmadd.h f2, f11, f18, f30, rdn # perform operation
fnmadd.h f2, f11, f18, f30, rmm # perform operation
fnmadd.h f2, f11, f18, f30, rne # perform operation
fnmadd.h f2, f11, f18, f30, rtz # perform operation
fnmadd.h f2, f11, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f11, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f11, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f11, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f11, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f11, f18, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f19, 0(x2) # load 0x00008400 from memory into f19
la x2, scratch
li x3, 0xbb44f3bb # load x3 with value 0xbb44f3bb
sw x3, 0(x2) # store 0xbb44f3bb in memory
flh f2, 0(x2) # load 0xbb44f3bb from memory into f2
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f14, 0(x2) # load 0x000083ff from memory into f14
fnmadd.h f24, f19, f2, f14, dyn # perform operation
fnmadd.h f24, f19, f2, f14, rdn # perform operation
fnmadd.h f24, f19, f2, f14, rmm # perform operation
fnmadd.h f24, f19, f2, f14, rne # perform operation
fnmadd.h f24, f19, f2, f14, rtz # perform operation
fnmadd.h f24, f19, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f19, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f19, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f19, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f19, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f19, f2, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x200)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f11, 0(x2) # load 0x00008400 from memory into f11
la x2, scratch
li x3, 0x3dd52238 # load x3 with value 0x3dd52238
sw x3, 0(x2) # store 0x3dd52238 in memory
flh f17, 0(x2) # load 0x3dd52238 from memory into f17
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f18, 0(x2) # load 0x00000200 from memory into f18
fnmadd.h f16, f11, f17, f18, dyn # perform operation
fnmadd.h f16, f11, f17, f18, rdn # perform operation
fnmadd.h f16, f11, f17, f18, rmm # perform operation
fnmadd.h f16, f11, f17, f18, rne # perform operation
fnmadd.h f16, f11, f17, f18, rtz # perform operation
fnmadd.h f16, f11, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f11, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f11, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f11, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f11, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f11, f17, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x8200)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f1, 0(x2) # load 0x00008400 from memory into f1
la x2, scratch
li x3, 0x7c8c35a3 # load x3 with value 0x7c8c35a3
sw x3, 0(x2) # store 0x7c8c35a3 in memory
flh f17, 0(x2) # load 0x7c8c35a3 from memory into f17
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f16, 0(x2) # load 0x00008200 from memory into f16
fnmadd.h f27, f1, f17, f16, dyn # perform operation
fnmadd.h f27, f1, f17, f16, rdn # perform operation
fnmadd.h f27, f1, f17, f16, rmm # perform operation
fnmadd.h f27, f1, f17, f16, rne # perform operation
fnmadd.h f27, f1, f17, f16, rtz # perform operation
fnmadd.h f27, f1, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f1, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f1, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f1, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f1, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f1, f17, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x1)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f11, 0(x2) # load 0x00008400 from memory into f11
la x2, scratch
li x3, 0xd377a870 # load x3 with value 0xd377a870
sw x3, 0(x2) # store 0xd377a870 in memory
flh f12, 0(x2) # load 0xd377a870 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f17, 0(x2) # load 0x00000001 from memory into f17
fnmadd.h f1, f11, f12, f17, dyn # perform operation
fnmadd.h f1, f11, f12, f17, rdn # perform operation
fnmadd.h f1, f11, f12, f17, rmm # perform operation
fnmadd.h f1, f11, f12, f17, rne # perform operation
fnmadd.h f1, f11, f12, f17, rtz # perform operation
fnmadd.h f1, f11, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f11, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f11, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f11, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f11, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f11, f12, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x8001)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f18, 0(x2) # load 0x00008400 from memory into f18
la x2, scratch
li x3, 0x83d42d4a # load x3 with value 0x83d42d4a
sw x3, 0(x2) # store 0x83d42d4a in memory
flh f23, 0(x2) # load 0x83d42d4a from memory into f23
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f28, 0(x2) # load 0x00008001 from memory into f28
fnmadd.h f6, f18, f23, f28, dyn # perform operation
fnmadd.h f6, f18, f23, f28, rdn # perform operation
fnmadd.h f6, f18, f23, f28, rmm # perform operation
fnmadd.h f6, f18, f23, f28, rne # perform operation
fnmadd.h f6, f18, f23, f28, rtz # perform operation
fnmadd.h f6, f18, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f18, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f18, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f18, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f18, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f18, f23, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f6, 0(x2) # load 0x00008400 from memory into f6
la x2, scratch
li x3, 0xbc55e99c # load x3 with value 0xbc55e99c
sw x3, 0(x2) # store 0xbc55e99c in memory
flh f15, 0(x2) # load 0xbc55e99c from memory into f15
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f23, 0(x2) # load 0x00007c00 from memory into f23
fnmadd.h f1, f6, f15, f23, dyn # perform operation
fnmadd.h f1, f6, f15, f23, rdn # perform operation
fnmadd.h f1, f6, f15, f23, rmm # perform operation
fnmadd.h f1, f6, f15, f23, rne # perform operation
fnmadd.h f1, f6, f15, f23, rtz # perform operation
fnmadd.h f1, f6, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f6, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f6, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f6, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f6, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f6, f15, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f1, 0(x2) # load 0x00008400 from memory into f1
la x2, scratch
li x3, 0xbf7ed530 # load x3 with value 0xbf7ed530
sw x3, 0(x2) # store 0xbf7ed530 in memory
flh f7, 0(x2) # load 0xbf7ed530 from memory into f7
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f13, 0(x2) # load 0x0000fc00 from memory into f13
fnmadd.h f11, f1, f7, f13, dyn # perform operation
fnmadd.h f11, f1, f7, f13, rdn # perform operation
fnmadd.h f11, f1, f7, f13, rmm # perform operation
fnmadd.h f11, f1, f7, f13, rne # perform operation
fnmadd.h f11, f1, f7, f13, rtz # perform operation
fnmadd.h f11, f1, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f1, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f1, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f1, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f1, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f1, f7, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f29, 0(x2) # load 0x00008400 from memory into f29
la x2, scratch
li x3, 0xd0a05260 # load x3 with value 0xd0a05260
sw x3, 0(x2) # store 0xd0a05260 in memory
flh f17, 0(x2) # load 0xd0a05260 from memory into f17
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f31, 0(x2) # load 0x00007e00 from memory into f31
fnmadd.h f16, f29, f17, f31, dyn # perform operation
fnmadd.h f16, f29, f17, f31, rdn # perform operation
fnmadd.h f16, f29, f17, f31, rmm # perform operation
fnmadd.h f16, f29, f17, f31, rne # perform operation
fnmadd.h f16, f29, f17, f31, rtz # perform operation
fnmadd.h f16, f29, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f29, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f29, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f29, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f29, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f29, f17, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f26, 0(x2) # load 0x00008400 from memory into f26
la x2, scratch
li x3, 0xc3e94e04 # load x3 with value 0xc3e94e04
sw x3, 0(x2) # store 0xc3e94e04 in memory
flh f29, 0(x2) # load 0xc3e94e04 from memory into f29
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f24, 0(x2) # load 0x00007fff from memory into f24
fnmadd.h f22, f26, f29, f24, dyn # perform operation
fnmadd.h f22, f26, f29, f24, rdn # perform operation
fnmadd.h f22, f26, f29, f24, rmm # perform operation
fnmadd.h f22, f26, f29, f24, rne # perform operation
fnmadd.h f22, f26, f29, f24, rtz # perform operation
fnmadd.h f22, f26, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f26, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f26, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f26, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f26, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f26, f29, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f17, 0(x2) # load 0x00008400 from memory into f17
la x2, scratch
li x3, 0xca58463b # load x3 with value 0xca58463b
sw x3, 0(x2) # store 0xca58463b in memory
flh f11, 0(x2) # load 0xca58463b from memory into f11
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f1, 0(x2) # load 0x0000fe00 from memory into f1
fnmadd.h f23, f17, f11, f1, dyn # perform operation
fnmadd.h f23, f17, f11, f1, rdn # perform operation
fnmadd.h f23, f17, f11, f1, rmm # perform operation
fnmadd.h f23, f17, f11, f1, rne # perform operation
fnmadd.h f23, f17, f11, f1, rtz # perform operation
fnmadd.h f23, f17, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f17, f11, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f16, 0(x2) # load 0x00008400 from memory into f16
la x2, scratch
li x3, 0xd68a7990 # load x3 with value 0xd68a7990
sw x3, 0(x2) # store 0xd68a7990 in memory
flh f24, 0(x2) # load 0xd68a7990 from memory into f24
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f2, 0(x2) # load 0x00007c01 from memory into f2
fnmadd.h f26, f16, f24, f2, dyn # perform operation
fnmadd.h f26, f16, f24, f2, rdn # perform operation
fnmadd.h f26, f16, f24, f2, rmm # perform operation
fnmadd.h f26, f16, f24, f2, rne # perform operation
fnmadd.h f26, f16, f24, f2, rtz # perform operation
fnmadd.h f26, f16, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f16, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f16, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f16, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f16, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f16, f24, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f20, 0(x2) # load 0x00008400 from memory into f20
la x2, scratch
li x3, 0x4bd524a1 # load x3 with value 0x4bd524a1
sw x3, 0(x2) # store 0x4bd524a1 in memory
flh f5, 0(x2) # load 0x4bd524a1 from memory into f5
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f24, 0(x2) # load 0x00007dff from memory into f24
fnmadd.h f12, f20, f5, f24, dyn # perform operation
fnmadd.h f12, f20, f5, f24, rdn # perform operation
fnmadd.h f12, f20, f5, f24, rmm # perform operation
fnmadd.h f12, f20, f5, f24, rne # perform operation
fnmadd.h f12, f20, f5, f24, rtz # perform operation
fnmadd.h f12, f20, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f20, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f20, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f20, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f20, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f20, f5, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f3, 0(x2) # load 0x00008400 from memory into f3
la x2, scratch
li x3, 0x22ba73a8 # load x3 with value 0x22ba73a8
sw x3, 0(x2) # store 0x22ba73a8 in memory
flh f24, 0(x2) # load 0x22ba73a8 from memory into f24
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f7, 0(x2) # load 0x0000fc01 from memory into f7
fnmadd.h f15, f3, f24, f7, dyn # perform operation
fnmadd.h f15, f3, f24, f7, rdn # perform operation
fnmadd.h f15, f3, f24, f7, rmm # perform operation
fnmadd.h f15, f3, f24, f7, rne # perform operation
fnmadd.h f15, f3, f24, f7, rtz # perform operation
fnmadd.h f15, f3, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f3, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f3, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f3, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f3, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f3, f24, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f17, 0(x2) # load 0x00008400 from memory into f17
la x2, scratch
li x3, 0xb9352c8e # load x3 with value 0xb9352c8e
sw x3, 0(x2) # store 0xb9352c8e in memory
flh f10, 0(x2) # load 0xb9352c8e from memory into f10
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f20, 0(x2) # load 0x000058b4 from memory into f20
fnmadd.h f27, f17, f10, f20, dyn # perform operation
fnmadd.h f27, f17, f10, f20, rdn # perform operation
fnmadd.h f27, f17, f10, f20, rmm # perform operation
fnmadd.h f27, f17, f10, f20, rne # perform operation
fnmadd.h f27, f17, f10, f20, rtz # perform operation
fnmadd.h f27, f17, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f17, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f17, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f17, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f17, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f17, f10, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f5, 0(x2) # load 0x00008400 from memory into f5
la x2, scratch
li x3, 0x05ba3772 # load x3 with value 0x05ba3772
sw x3, 0(x2) # store 0x05ba3772 in memory
flh f23, 0(x2) # load 0x05ba3772 from memory into f23
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f8, 0(x2) # load 0x0000c93a from memory into f8
fnmadd.h f21, f5, f23, f8, dyn # perform operation
fnmadd.h f21, f5, f23, f8, rdn # perform operation
fnmadd.h f21, f5, f23, f8, rmm # perform operation
fnmadd.h f21, f5, f23, f8, rne # perform operation
fnmadd.h f21, f5, f23, f8, rtz # perform operation
fnmadd.h f21, f5, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f5, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f5, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f5, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f5, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f5, f23, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x0)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f14, 0(x2) # load 0x00007bff from memory into f14
la x2, scratch
li x3, 0x2bbd5079 # load x3 with value 0x2bbd5079
sw x3, 0(x2) # store 0x2bbd5079 in memory
flh f16, 0(x2) # load 0x2bbd5079 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f1, 0(x2) # load 0x00000000 from memory into f1
fnmadd.h f24, f14, f16, f1, dyn # perform operation
fnmadd.h f24, f14, f16, f1, rdn # perform operation
fnmadd.h f24, f14, f16, f1, rmm # perform operation
fnmadd.h f24, f14, f16, f1, rne # perform operation
fnmadd.h f24, f14, f16, f1, rtz # perform operation
fnmadd.h f24, f14, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f14, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f14, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f14, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f14, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f14, f16, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x8000)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f31, 0(x2) # load 0x00007bff from memory into f31
la x2, scratch
li x3, 0x2fa54cf9 # load x3 with value 0x2fa54cf9
sw x3, 0(x2) # store 0x2fa54cf9 in memory
flh f24, 0(x2) # load 0x2fa54cf9 from memory into f24
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f14, 0(x2) # load 0x00008000 from memory into f14
fnmadd.h f21, f31, f24, f14, dyn # perform operation
fnmadd.h f21, f31, f24, f14, rdn # perform operation
fnmadd.h f21, f31, f24, f14, rmm # perform operation
fnmadd.h f21, f31, f24, f14, rne # perform operation
fnmadd.h f21, f31, f24, f14, rtz # perform operation
fnmadd.h f21, f31, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f31, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f31, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f31, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f31, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f31, f24, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x3c00)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
la x2, scratch
li x3, 0x26c391f4 # load x3 with value 0x26c391f4
sw x3, 0(x2) # store 0x26c391f4 in memory
flh f12, 0(x2) # load 0x26c391f4 from memory into f12
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f21, 0(x2) # load 0x00003c00 from memory into f21
fnmadd.h f27, f15, f12, f21, dyn # perform operation
fnmadd.h f27, f15, f12, f21, rdn # perform operation
fnmadd.h f27, f15, f12, f21, rmm # perform operation
fnmadd.h f27, f15, f12, f21, rne # perform operation
fnmadd.h f27, f15, f12, f21, rtz # perform operation
fnmadd.h f27, f15, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f15, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f15, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f15, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f15, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f15, f12, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xbc00)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
la x2, scratch
li x3, 0xb2636456 # load x3 with value 0xb2636456
sw x3, 0(x2) # store 0xb2636456 in memory
flh f11, 0(x2) # load 0xb2636456 from memory into f11
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f31, 0(x2) # load 0x0000bc00 from memory into f31
fnmadd.h f2, f24, f11, f31, dyn # perform operation
fnmadd.h f2, f24, f11, f31, rdn # perform operation
fnmadd.h f2, f24, f11, f31, rmm # perform operation
fnmadd.h f2, f24, f11, f31, rne # perform operation
fnmadd.h f2, f24, f11, f31, rtz # perform operation
fnmadd.h f2, f24, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f24, f11, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x3e00)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f17, 0(x2) # load 0x00007bff from memory into f17
la x2, scratch
li x3, 0xc6bd3c89 # load x3 with value 0xc6bd3c89
sw x3, 0(x2) # store 0xc6bd3c89 in memory
flh f12, 0(x2) # load 0xc6bd3c89 from memory into f12
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f18, 0(x2) # load 0x00003e00 from memory into f18
fnmadd.h f2, f17, f12, f18, dyn # perform operation
fnmadd.h f2, f17, f12, f18, rdn # perform operation
fnmadd.h f2, f17, f12, f18, rmm # perform operation
fnmadd.h f2, f17, f12, f18, rne # perform operation
fnmadd.h f2, f17, f12, f18, rtz # perform operation
fnmadd.h f2, f17, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f17, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f17, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f17, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f17, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f17, f12, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xbe00)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f9, 0(x2) # load 0x00007bff from memory into f9
la x2, scratch
li x3, 0x465525a0 # load x3 with value 0x465525a0
sw x3, 0(x2) # store 0x465525a0 in memory
flh f25, 0(x2) # load 0x465525a0 from memory into f25
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
fnmadd.h f23, f9, f25, f1, dyn # perform operation
fnmadd.h f23, f9, f25, f1, rdn # perform operation
fnmadd.h f23, f9, f25, f1, rmm # perform operation
fnmadd.h f23, f9, f25, f1, rne # perform operation
fnmadd.h f23, f9, f25, f1, rtz # perform operation
fnmadd.h f23, f9, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f9, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f9, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f9, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f9, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f9, f25, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x4000)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f10, 0(x2) # load 0x00007bff from memory into f10
la x2, scratch
li x3, 0x9c7364d1 # load x3 with value 0x9c7364d1
sw x3, 0(x2) # store 0x9c7364d1 in memory
flh f17, 0(x2) # load 0x9c7364d1 from memory into f17
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f12, 0(x2) # load 0x00004000 from memory into f12
fnmadd.h f15, f10, f17, f12, dyn # perform operation
fnmadd.h f15, f10, f17, f12, rdn # perform operation
fnmadd.h f15, f10, f17, f12, rmm # perform operation
fnmadd.h f15, f10, f17, f12, rne # perform operation
fnmadd.h f15, f10, f17, f12, rtz # perform operation
fnmadd.h f15, f10, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f10, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f10, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f10, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f10, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f10, f17, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xc000)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f10, 0(x2) # load 0x00007bff from memory into f10
la x2, scratch
li x3, 0x740437fa # load x3 with value 0x740437fa
sw x3, 0(x2) # store 0x740437fa in memory
flh f24, 0(x2) # load 0x740437fa from memory into f24
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f29, 0(x2) # load 0x0000c000 from memory into f29
fnmadd.h f22, f10, f24, f29, dyn # perform operation
fnmadd.h f22, f10, f24, f29, rdn # perform operation
fnmadd.h f22, f10, f24, f29, rmm # perform operation
fnmadd.h f22, f10, f24, f29, rne # perform operation
fnmadd.h f22, f10, f24, f29, rtz # perform operation
fnmadd.h f22, f10, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f10, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f10, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f10, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f10, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f10, f24, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x400)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f21, 0(x2) # load 0x00007bff from memory into f21
la x2, scratch
li x3, 0x2e4532d3 # load x3 with value 0x2e4532d3
sw x3, 0(x2) # store 0x2e4532d3 in memory
flh f19, 0(x2) # load 0x2e4532d3 from memory into f19
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
fnmadd.h f27, f21, f19, f1, dyn # perform operation
fnmadd.h f27, f21, f19, f1, rdn # perform operation
fnmadd.h f27, f21, f19, f1, rmm # perform operation
fnmadd.h f27, f21, f19, f1, rne # perform operation
fnmadd.h f27, f21, f19, f1, rtz # perform operation
fnmadd.h f27, f21, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f21, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f21, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f21, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f21, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f21, f19, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x8400)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f7, 0(x2) # load 0x00007bff from memory into f7
la x2, scratch
li x3, 0x49eda9fe # load x3 with value 0x49eda9fe
sw x3, 0(x2) # store 0x49eda9fe in memory
flh f6, 0(x2) # load 0x49eda9fe from memory into f6
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f5, 0(x2) # load 0x00008400 from memory into f5
fnmadd.h f15, f7, f6, f5, dyn # perform operation
fnmadd.h f15, f7, f6, f5, rdn # perform operation
fnmadd.h f15, f7, f6, f5, rmm # perform operation
fnmadd.h f15, f7, f6, f5, rne # perform operation
fnmadd.h f15, f7, f6, f5, rtz # perform operation
fnmadd.h f15, f7, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f7, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f7, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f7, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f7, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f7, f6, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7bff)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f26, 0(x2) # load 0x00007bff from memory into f26
la x2, scratch
li x3, 0x313e6df2 # load x3 with value 0x313e6df2
sw x3, 0(x2) # store 0x313e6df2 in memory
flh f7, 0(x2) # load 0x313e6df2 from memory into f7
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f6, 0(x2) # load 0x00007bff from memory into f6
fnmadd.h f29, f26, f7, f6, dyn # perform operation
fnmadd.h f29, f26, f7, f6, rdn # perform operation
fnmadd.h f29, f26, f7, f6, rmm # perform operation
fnmadd.h f29, f26, f7, f6, rne # perform operation
fnmadd.h f29, f26, f7, f6, rtz # perform operation
fnmadd.h f29, f26, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f26, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f26, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f26, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f26, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f26, f7, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xfbff)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f12, 0(x2) # load 0x00007bff from memory into f12
la x2, scratch
li x3, 0xd0ab4b08 # load x3 with value 0xd0ab4b08
sw x3, 0(x2) # store 0xd0ab4b08 in memory
flh f6, 0(x2) # load 0xd0ab4b08 from memory into f6
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f8, 0(x2) # load 0x0000fbff from memory into f8
fnmadd.h f22, f12, f6, f8, dyn # perform operation
fnmadd.h f22, f12, f6, f8, rdn # perform operation
fnmadd.h f22, f12, f6, f8, rmm # perform operation
fnmadd.h f22, f12, f6, f8, rne # perform operation
fnmadd.h f22, f12, f6, f8, rtz # perform operation
fnmadd.h f22, f12, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f12, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f12, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f12, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f12, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f12, f6, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x3ff)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
la x2, scratch
li x3, 0x0c2041b3 # load x3 with value 0x0c2041b3
sw x3, 0(x2) # store 0x0c2041b3 in memory
flh f21, 0(x2) # load 0x0c2041b3 from memory into f21
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f7, 0(x2) # load 0x000003ff from memory into f7
fnmadd.h f8, f15, f21, f7, dyn # perform operation
fnmadd.h f8, f15, f21, f7, rdn # perform operation
fnmadd.h f8, f15, f21, f7, rmm # perform operation
fnmadd.h f8, f15, f21, f7, rne # perform operation
fnmadd.h f8, f15, f21, f7, rtz # perform operation
fnmadd.h f8, f15, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f15, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f15, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f15, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f15, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f15, f21, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x83ff)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f13, 0(x2) # load 0x00007bff from memory into f13
la x2, scratch
li x3, 0x52343d4d # load x3 with value 0x52343d4d
sw x3, 0(x2) # store 0x52343d4d in memory
flh f24, 0(x2) # load 0x52343d4d from memory into f24
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f1, 0(x2) # load 0x000083ff from memory into f1
fnmadd.h f28, f13, f24, f1, dyn # perform operation
fnmadd.h f28, f13, f24, f1, rdn # perform operation
fnmadd.h f28, f13, f24, f1, rmm # perform operation
fnmadd.h f28, f13, f24, f1, rne # perform operation
fnmadd.h f28, f13, f24, f1, rtz # perform operation
fnmadd.h f28, f13, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f13, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f13, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f13, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f13, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f13, f24, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x200)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f14, 0(x2) # load 0x00007bff from memory into f14
la x2, scratch
li x3, 0xa36c2e8c # load x3 with value 0xa36c2e8c
sw x3, 0(x2) # store 0xa36c2e8c in memory
flh f19, 0(x2) # load 0xa36c2e8c from memory into f19
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f5, 0(x2) # load 0x00000200 from memory into f5
fnmadd.h f28, f14, f19, f5, dyn # perform operation
fnmadd.h f28, f14, f19, f5, rdn # perform operation
fnmadd.h f28, f14, f19, f5, rmm # perform operation
fnmadd.h f28, f14, f19, f5, rne # perform operation
fnmadd.h f28, f14, f19, f5, rtz # perform operation
fnmadd.h f28, f14, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f14, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f14, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f14, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f14, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f14, f19, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x8200)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f1, 0(x2) # load 0x00007bff from memory into f1
la x2, scratch
li x3, 0x9090aac2 # load x3 with value 0x9090aac2
sw x3, 0(x2) # store 0x9090aac2 in memory
flh f17, 0(x2) # load 0x9090aac2 from memory into f17
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f10, 0(x2) # load 0x00008200 from memory into f10
fnmadd.h f23, f1, f17, f10, dyn # perform operation
fnmadd.h f23, f1, f17, f10, rdn # perform operation
fnmadd.h f23, f1, f17, f10, rmm # perform operation
fnmadd.h f23, f1, f17, f10, rne # perform operation
fnmadd.h f23, f1, f17, f10, rtz # perform operation
fnmadd.h f23, f1, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f1, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f1, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f1, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f1, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f1, f17, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x1)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f27, 0(x2) # load 0x00007bff from memory into f27
la x2, scratch
li x3, 0x438fcede # load x3 with value 0x438fcede
sw x3, 0(x2) # store 0x438fcede in memory
flh f1, 0(x2) # load 0x438fcede from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
fnmadd.h f6, f27, f1, f10, dyn # perform operation
fnmadd.h f6, f27, f1, f10, rdn # perform operation
fnmadd.h f6, f27, f1, f10, rmm # perform operation
fnmadd.h f6, f27, f1, f10, rne # perform operation
fnmadd.h f6, f27, f1, f10, rtz # perform operation
fnmadd.h f6, f27, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f27, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f27, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f27, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f27, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f27, f1, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x8001)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f21, 0(x2) # load 0x00007bff from memory into f21
la x2, scratch
li x3, 0x3b5aa512 # load x3 with value 0x3b5aa512
sw x3, 0(x2) # store 0x3b5aa512 in memory
flh f22, 0(x2) # load 0x3b5aa512 from memory into f22
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f8, 0(x2) # load 0x00008001 from memory into f8
fnmadd.h f30, f21, f22, f8, dyn # perform operation
fnmadd.h f30, f21, f22, f8, rdn # perform operation
fnmadd.h f30, f21, f22, f8, rmm # perform operation
fnmadd.h f30, f21, f22, f8, rne # perform operation
fnmadd.h f30, f21, f22, f8, rtz # perform operation
fnmadd.h f30, f21, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f21, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f21, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f21, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f21, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f21, f22, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7c00)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f27, 0(x2) # load 0x00007bff from memory into f27
la x2, scratch
li x3, 0x10f9fe59 # load x3 with value 0x10f9fe59
sw x3, 0(x2) # store 0x10f9fe59 in memory
flh f2, 0(x2) # load 0x10f9fe59 from memory into f2
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f31, 0(x2) # load 0x00007c00 from memory into f31
fnmadd.h f20, f27, f2, f31, dyn # perform operation
fnmadd.h f20, f27, f2, f31, rdn # perform operation
fnmadd.h f20, f27, f2, f31, rmm # perform operation
fnmadd.h f20, f27, f2, f31, rne # perform operation
fnmadd.h f20, f27, f2, f31, rtz # perform operation
fnmadd.h f20, f27, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f27, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f27, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f27, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f27, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f27, f2, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xfc00)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f23, 0(x2) # load 0x00007bff from memory into f23
la x2, scratch
li x3, 0x18c35410 # load x3 with value 0x18c35410
sw x3, 0(x2) # store 0x18c35410 in memory
flh f9, 0(x2) # load 0x18c35410 from memory into f9
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f28, 0(x2) # load 0x0000fc00 from memory into f28
fnmadd.h f25, f23, f9, f28, dyn # perform operation
fnmadd.h f25, f23, f9, f28, rdn # perform operation
fnmadd.h f25, f23, f9, f28, rmm # perform operation
fnmadd.h f25, f23, f9, f28, rne # perform operation
fnmadd.h f25, f23, f9, f28, rtz # perform operation
fnmadd.h f25, f23, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f23, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f23, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f23, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f23, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f23, f9, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7e00)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f11, 0(x2) # load 0x00007bff from memory into f11
la x2, scratch
li x3, 0xe6660f8d # load x3 with value 0xe6660f8d
sw x3, 0(x2) # store 0xe6660f8d in memory
flh f25, 0(x2) # load 0xe6660f8d from memory into f25
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f27, 0(x2) # load 0x00007e00 from memory into f27
fnmadd.h f18, f11, f25, f27, dyn # perform operation
fnmadd.h f18, f11, f25, f27, rdn # perform operation
fnmadd.h f18, f11, f25, f27, rmm # perform operation
fnmadd.h f18, f11, f25, f27, rne # perform operation
fnmadd.h f18, f11, f25, f27, rtz # perform operation
fnmadd.h f18, f11, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f11, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f11, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f11, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f11, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f11, f25, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7fff)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f19, 0(x2) # load 0x00007bff from memory into f19
la x2, scratch
li x3, 0x001d69c2 # load x3 with value 0x001d69c2
sw x3, 0(x2) # store 0x001d69c2 in memory
flh f20, 0(x2) # load 0x001d69c2 from memory into f20
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f1, 0(x2) # load 0x00007fff from memory into f1
fnmadd.h f23, f19, f20, f1, dyn # perform operation
fnmadd.h f23, f19, f20, f1, rdn # perform operation
fnmadd.h f23, f19, f20, f1, rmm # perform operation
fnmadd.h f23, f19, f20, f1, rne # perform operation
fnmadd.h f23, f19, f20, f1, rtz # perform operation
fnmadd.h f23, f19, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f19, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f19, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f19, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f19, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f19, f20, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xfe00)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f12, 0(x2) # load 0x00007bff from memory into f12
la x2, scratch
li x3, 0xa32857dd # load x3 with value 0xa32857dd
sw x3, 0(x2) # store 0xa32857dd in memory
flh f19, 0(x2) # load 0xa32857dd from memory into f19
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f10, 0(x2) # load 0x0000fe00 from memory into f10
fnmadd.h f14, f12, f19, f10, dyn # perform operation
fnmadd.h f14, f12, f19, f10, rdn # perform operation
fnmadd.h f14, f12, f19, f10, rmm # perform operation
fnmadd.h f14, f12, f19, f10, rne # perform operation
fnmadd.h f14, f12, f19, f10, rtz # perform operation
fnmadd.h f14, f12, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f12, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f12, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f12, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f12, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f12, f19, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7c01)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f10, 0(x2) # load 0x00007bff from memory into f10
la x2, scratch
li x3, 0xa5a90565 # load x3 with value 0xa5a90565
sw x3, 0(x2) # store 0xa5a90565 in memory
flh f11, 0(x2) # load 0xa5a90565 from memory into f11
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f23, 0(x2) # load 0x00007c01 from memory into f23
fnmadd.h f21, f10, f11, f23, dyn # perform operation
fnmadd.h f21, f10, f11, f23, rdn # perform operation
fnmadd.h f21, f10, f11, f23, rmm # perform operation
fnmadd.h f21, f10, f11, f23, rne # perform operation
fnmadd.h f21, f10, f11, f23, rtz # perform operation
fnmadd.h f21, f10, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f10, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f10, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f10, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f10, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f10, f11, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7dff)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f7, 0(x2) # load 0x00007bff from memory into f7
la x2, scratch
li x3, 0x8e93ab7e # load x3 with value 0x8e93ab7e
sw x3, 0(x2) # store 0x8e93ab7e in memory
flh f25, 0(x2) # load 0x8e93ab7e from memory into f25
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f13, 0(x2) # load 0x00007dff from memory into f13
fnmadd.h f28, f7, f25, f13, dyn # perform operation
fnmadd.h f28, f7, f25, f13, rdn # perform operation
fnmadd.h f28, f7, f25, f13, rmm # perform operation
fnmadd.h f28, f7, f25, f13, rne # perform operation
fnmadd.h f28, f7, f25, f13, rtz # perform operation
fnmadd.h f28, f7, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f7, f25, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xfc01)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f23, 0(x2) # load 0x00007bff from memory into f23
la x2, scratch
li x3, 0x0fd99b12 # load x3 with value 0x0fd99b12
sw x3, 0(x2) # store 0x0fd99b12 in memory
flh f24, 0(x2) # load 0x0fd99b12 from memory into f24
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f15, 0(x2) # load 0x0000fc01 from memory into f15
fnmadd.h f13, f23, f24, f15, dyn # perform operation
fnmadd.h f13, f23, f24, f15, rdn # perform operation
fnmadd.h f13, f23, f24, f15, rmm # perform operation
fnmadd.h f13, f23, f24, f15, rne # perform operation
fnmadd.h f13, f23, f24, f15, rtz # perform operation
fnmadd.h f13, f23, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f23, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f23, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f23, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f23, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f23, f24, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x58b4)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f29, 0(x2) # load 0x00007bff from memory into f29
la x2, scratch
li x3, 0x96da61a7 # load x3 with value 0x96da61a7
sw x3, 0(x2) # store 0x96da61a7 in memory
flh f14, 0(x2) # load 0x96da61a7 from memory into f14
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
fnmadd.h f7, f29, f14, f25, dyn # perform operation
fnmadd.h f7, f29, f14, f25, rdn # perform operation
fnmadd.h f7, f29, f14, f25, rmm # perform operation
fnmadd.h f7, f29, f14, f25, rne # perform operation
fnmadd.h f7, f29, f14, f25, rtz # perform operation
fnmadd.h f7, f29, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f29, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f29, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f29, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f29, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f29, f14, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xc93a)
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
la x2, scratch
li x3, 0x60f7f330 # load x3 with value 0x60f7f330
sw x3, 0(x2) # store 0x60f7f330 in memory
flh f12, 0(x2) # load 0x60f7f330 from memory into f12
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f22, 0(x2) # load 0x0000c93a from memory into f22
fnmadd.h f21, f24, f12, f22, dyn # perform operation
fnmadd.h f21, f24, f12, f22, rdn # perform operation
fnmadd.h f21, f24, f12, f22, rmm # perform operation
fnmadd.h f21, f24, f12, f22, rne # perform operation
fnmadd.h f21, f24, f12, f22, rtz # perform operation
fnmadd.h f21, f24, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f24, f12, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x0)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f8, 0(x2) # load 0x0000fbff from memory into f8
la x2, scratch
li x3, 0xa10b72ce # load x3 with value 0xa10b72ce
sw x3, 0(x2) # store 0xa10b72ce in memory
flh f5, 0(x2) # load 0xa10b72ce from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f25, 0(x2) # load 0x00000000 from memory into f25
fnmadd.h f14, f8, f5, f25, dyn # perform operation
fnmadd.h f14, f8, f5, f25, rdn # perform operation
fnmadd.h f14, f8, f5, f25, rmm # perform operation
fnmadd.h f14, f8, f5, f25, rne # perform operation
fnmadd.h f14, f8, f5, f25, rtz # perform operation
fnmadd.h f14, f8, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f8, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f8, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f8, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f8, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f8, f5, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x8000)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
la x2, scratch
li x3, 0xc1a77754 # load x3 with value 0xc1a77754
sw x3, 0(x2) # store 0xc1a77754 in memory
flh f3, 0(x2) # load 0xc1a77754 from memory into f3
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f13, 0(x2) # load 0x00008000 from memory into f13
fnmadd.h f26, f15, f3, f13, dyn # perform operation
fnmadd.h f26, f15, f3, f13, rdn # perform operation
fnmadd.h f26, f15, f3, f13, rmm # perform operation
fnmadd.h f26, f15, f3, f13, rne # perform operation
fnmadd.h f26, f15, f3, f13, rtz # perform operation
fnmadd.h f26, f15, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f15, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f15, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f15, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f15, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f15, f3, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x3c00)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f9, 0(x2) # load 0x0000fbff from memory into f9
la x2, scratch
li x3, 0x990a1ba7 # load x3 with value 0x990a1ba7
sw x3, 0(x2) # store 0x990a1ba7 in memory
flh f28, 0(x2) # load 0x990a1ba7 from memory into f28
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
fnmadd.h f26, f9, f28, f18, dyn # perform operation
fnmadd.h f26, f9, f28, f18, rdn # perform operation
fnmadd.h f26, f9, f28, f18, rmm # perform operation
fnmadd.h f26, f9, f28, f18, rne # perform operation
fnmadd.h f26, f9, f28, f18, rtz # perform operation
fnmadd.h f26, f9, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f9, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f9, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f9, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f9, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f9, f28, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xbc00)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f6, 0(x2) # load 0x0000fbff from memory into f6
la x2, scratch
li x3, 0xef08bd99 # load x3 with value 0xef08bd99
sw x3, 0(x2) # store 0xef08bd99 in memory
flh f13, 0(x2) # load 0xef08bd99 from memory into f13
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f15, 0(x2) # load 0x0000bc00 from memory into f15
fnmadd.h f9, f6, f13, f15, dyn # perform operation
fnmadd.h f9, f6, f13, f15, rdn # perform operation
fnmadd.h f9, f6, f13, f15, rmm # perform operation
fnmadd.h f9, f6, f13, f15, rne # perform operation
fnmadd.h f9, f6, f13, f15, rtz # perform operation
fnmadd.h f9, f6, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f6, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f6, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f6, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f6, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f6, f13, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x3e00)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f16, 0(x2) # load 0x0000fbff from memory into f16
la x2, scratch
li x3, 0xd479cdbc # load x3 with value 0xd479cdbc
sw x3, 0(x2) # store 0xd479cdbc in memory
flh f10, 0(x2) # load 0xd479cdbc from memory into f10
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f2, 0(x2) # load 0x00003e00 from memory into f2
fnmadd.h f3, f16, f10, f2, dyn # perform operation
fnmadd.h f3, f16, f10, f2, rdn # perform operation
fnmadd.h f3, f16, f10, f2, rmm # perform operation
fnmadd.h f3, f16, f10, f2, rne # perform operation
fnmadd.h f3, f16, f10, f2, rtz # perform operation
fnmadd.h f3, f16, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f16, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f16, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f16, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f16, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f16, f10, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xbe00)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f10, 0(x2) # load 0x0000fbff from memory into f10
la x2, scratch
li x3, 0x8165eee3 # load x3 with value 0x8165eee3
sw x3, 0(x2) # store 0x8165eee3 in memory
flh f29, 0(x2) # load 0x8165eee3 from memory into f29
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f27, 0(x2) # load 0x0000be00 from memory into f27
fnmadd.h f20, f10, f29, f27, dyn # perform operation
fnmadd.h f20, f10, f29, f27, rdn # perform operation
fnmadd.h f20, f10, f29, f27, rmm # perform operation
fnmadd.h f20, f10, f29, f27, rne # perform operation
fnmadd.h f20, f10, f29, f27, rtz # perform operation
fnmadd.h f20, f10, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f10, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f10, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f10, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f10, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f10, f29, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x4000)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f8, 0(x2) # load 0x0000fbff from memory into f8
la x2, scratch
li x3, 0x9ac94aac # load x3 with value 0x9ac94aac
sw x3, 0(x2) # store 0x9ac94aac in memory
flh f1, 0(x2) # load 0x9ac94aac from memory into f1
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f24, 0(x2) # load 0x00004000 from memory into f24
fnmadd.h f25, f8, f1, f24, dyn # perform operation
fnmadd.h f25, f8, f1, f24, rdn # perform operation
fnmadd.h f25, f8, f1, f24, rmm # perform operation
fnmadd.h f25, f8, f1, f24, rne # perform operation
fnmadd.h f25, f8, f1, f24, rtz # perform operation
fnmadd.h f25, f8, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f8, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f8, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f8, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f8, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f8, f1, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xc000)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f21, 0(x2) # load 0x0000fbff from memory into f21
la x2, scratch
li x3, 0x3c7616d4 # load x3 with value 0x3c7616d4
sw x3, 0(x2) # store 0x3c7616d4 in memory
flh f3, 0(x2) # load 0x3c7616d4 from memory into f3
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
fnmadd.h f26, f21, f3, f12, dyn # perform operation
fnmadd.h f26, f21, f3, f12, rdn # perform operation
fnmadd.h f26, f21, f3, f12, rmm # perform operation
fnmadd.h f26, f21, f3, f12, rne # perform operation
fnmadd.h f26, f21, f3, f12, rtz # perform operation
fnmadd.h f26, f21, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f21, f3, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x400)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f7, 0(x2) # load 0x0000fbff from memory into f7
la x2, scratch
li x3, 0x2d89f256 # load x3 with value 0x2d89f256
sw x3, 0(x2) # store 0x2d89f256 in memory
flh f19, 0(x2) # load 0x2d89f256 from memory into f19
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f5, 0(x2) # load 0x00000400 from memory into f5
fnmadd.h f12, f7, f19, f5, dyn # perform operation
fnmadd.h f12, f7, f19, f5, rdn # perform operation
fnmadd.h f12, f7, f19, f5, rmm # perform operation
fnmadd.h f12, f7, f19, f5, rne # perform operation
fnmadd.h f12, f7, f19, f5, rtz # perform operation
fnmadd.h f12, f7, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f7, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f7, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f7, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f7, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f7, f19, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x8400)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f8, 0(x2) # load 0x0000fbff from memory into f8
la x2, scratch
li x3, 0x34fab7e8 # load x3 with value 0x34fab7e8
sw x3, 0(x2) # store 0x34fab7e8 in memory
flh f15, 0(x2) # load 0x34fab7e8 from memory into f15
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f29, 0(x2) # load 0x00008400 from memory into f29
fnmadd.h f1, f8, f15, f29, dyn # perform operation
fnmadd.h f1, f8, f15, f29, rdn # perform operation
fnmadd.h f1, f8, f15, f29, rmm # perform operation
fnmadd.h f1, f8, f15, f29, rne # perform operation
fnmadd.h f1, f8, f15, f29, rtz # perform operation
fnmadd.h f1, f8, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f8, f15, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7bff)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f2, 0(x2) # load 0x0000fbff from memory into f2
la x2, scratch
li x3, 0x93048c08 # load x3 with value 0x93048c08
sw x3, 0(x2) # store 0x93048c08 in memory
flh f11, 0(x2) # load 0x93048c08 from memory into f11
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f14, 0(x2) # load 0x00007bff from memory into f14
fnmadd.h f25, f2, f11, f14, dyn # perform operation
fnmadd.h f25, f2, f11, f14, rdn # perform operation
fnmadd.h f25, f2, f11, f14, rmm # perform operation
fnmadd.h f25, f2, f11, f14, rne # perform operation
fnmadd.h f25, f2, f11, f14, rtz # perform operation
fnmadd.h f25, f2, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f2, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f2, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f2, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f2, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f2, f11, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xfbff)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f22, 0(x2) # load 0x0000fbff from memory into f22
la x2, scratch
li x3, 0x7729c607 # load x3 with value 0x7729c607
sw x3, 0(x2) # store 0x7729c607 in memory
flh f14, 0(x2) # load 0x7729c607 from memory into f14
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f6, 0(x2) # load 0x0000fbff from memory into f6
fnmadd.h f23, f22, f14, f6, dyn # perform operation
fnmadd.h f23, f22, f14, f6, rdn # perform operation
fnmadd.h f23, f22, f14, f6, rmm # perform operation
fnmadd.h f23, f22, f14, f6, rne # perform operation
fnmadd.h f23, f22, f14, f6, rtz # perform operation
fnmadd.h f23, f22, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f22, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f22, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f22, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f22, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f22, f14, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x3ff)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f19, 0(x2) # load 0x0000fbff from memory into f19
la x2, scratch
li x3, 0xc78dc7aa # load x3 with value 0xc78dc7aa
sw x3, 0(x2) # store 0xc78dc7aa in memory
flh f6, 0(x2) # load 0xc78dc7aa from memory into f6
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f26, 0(x2) # load 0x000003ff from memory into f26
fnmadd.h f31, f19, f6, f26, dyn # perform operation
fnmadd.h f31, f19, f6, f26, rdn # perform operation
fnmadd.h f31, f19, f6, f26, rmm # perform operation
fnmadd.h f31, f19, f6, f26, rne # perform operation
fnmadd.h f31, f19, f6, f26, rtz # perform operation
fnmadd.h f31, f19, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f19, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f19, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f19, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f19, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f19, f6, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x83ff)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
la x2, scratch
li x3, 0x9988e130 # load x3 with value 0x9988e130
sw x3, 0(x2) # store 0x9988e130 in memory
flh f1, 0(x2) # load 0x9988e130 from memory into f1
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f16, 0(x2) # load 0x000083ff from memory into f16
fnmadd.h f3, f15, f1, f16, dyn # perform operation
fnmadd.h f3, f15, f1, f16, rdn # perform operation
fnmadd.h f3, f15, f1, f16, rmm # perform operation
fnmadd.h f3, f15, f1, f16, rne # perform operation
fnmadd.h f3, f15, f1, f16, rtz # perform operation
fnmadd.h f3, f15, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f15, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f15, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f15, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f15, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f15, f1, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x200)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f25, 0(x2) # load 0x0000fbff from memory into f25
la x2, scratch
li x3, 0x70019d31 # load x3 with value 0x70019d31
sw x3, 0(x2) # store 0x70019d31 in memory
flh f27, 0(x2) # load 0x70019d31 from memory into f27
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f8, 0(x2) # load 0x00000200 from memory into f8
fnmadd.h f26, f25, f27, f8, dyn # perform operation
fnmadd.h f26, f25, f27, f8, rdn # perform operation
fnmadd.h f26, f25, f27, f8, rmm # perform operation
fnmadd.h f26, f25, f27, f8, rne # perform operation
fnmadd.h f26, f25, f27, f8, rtz # perform operation
fnmadd.h f26, f25, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f25, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f25, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f25, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f25, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f25, f27, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x8200)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f22, 0(x2) # load 0x0000fbff from memory into f22
la x2, scratch
li x3, 0xe50c1ce5 # load x3 with value 0xe50c1ce5
sw x3, 0(x2) # store 0xe50c1ce5 in memory
flh f20, 0(x2) # load 0xe50c1ce5 from memory into f20
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f5, 0(x2) # load 0x00008200 from memory into f5
fnmadd.h f13, f22, f20, f5, dyn # perform operation
fnmadd.h f13, f22, f20, f5, rdn # perform operation
fnmadd.h f13, f22, f20, f5, rmm # perform operation
fnmadd.h f13, f22, f20, f5, rne # perform operation
fnmadd.h f13, f22, f20, f5, rtz # perform operation
fnmadd.h f13, f22, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f22, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f22, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f22, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f22, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f22, f20, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x1)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f29, 0(x2) # load 0x0000fbff from memory into f29
la x2, scratch
li x3, 0x2dac73fd # load x3 with value 0x2dac73fd
sw x3, 0(x2) # store 0x2dac73fd in memory
flh f12, 0(x2) # load 0x2dac73fd from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
fnmadd.h f10, f29, f12, f3, dyn # perform operation
fnmadd.h f10, f29, f12, f3, rdn # perform operation
fnmadd.h f10, f29, f12, f3, rmm # perform operation
fnmadd.h f10, f29, f12, f3, rne # perform operation
fnmadd.h f10, f29, f12, f3, rtz # perform operation
fnmadd.h f10, f29, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f29, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f29, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f29, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f29, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f29, f12, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x8001)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f19, 0(x2) # load 0x0000fbff from memory into f19
la x2, scratch
li x3, 0xb83e930d # load x3 with value 0xb83e930d
sw x3, 0(x2) # store 0xb83e930d in memory
flh f12, 0(x2) # load 0xb83e930d from memory into f12
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f10, 0(x2) # load 0x00008001 from memory into f10
fnmadd.h f18, f19, f12, f10, dyn # perform operation
fnmadd.h f18, f19, f12, f10, rdn # perform operation
fnmadd.h f18, f19, f12, f10, rmm # perform operation
fnmadd.h f18, f19, f12, f10, rne # perform operation
fnmadd.h f18, f19, f12, f10, rtz # perform operation
fnmadd.h f18, f19, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f19, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f19, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f19, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f19, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f19, f12, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7c00)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f1, 0(x2) # load 0x0000fbff from memory into f1
la x2, scratch
li x3, 0xce91a3b1 # load x3 with value 0xce91a3b1
sw x3, 0(x2) # store 0xce91a3b1 in memory
flh f14, 0(x2) # load 0xce91a3b1 from memory into f14
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f20, 0(x2) # load 0x00007c00 from memory into f20
fnmadd.h f9, f1, f14, f20, dyn # perform operation
fnmadd.h f9, f1, f14, f20, rdn # perform operation
fnmadd.h f9, f1, f14, f20, rmm # perform operation
fnmadd.h f9, f1, f14, f20, rne # perform operation
fnmadd.h f9, f1, f14, f20, rtz # perform operation
fnmadd.h f9, f1, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f1, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f1, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f1, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f1, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f1, f14, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xfc00)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
la x2, scratch
li x3, 0x58a56491 # load x3 with value 0x58a56491
sw x3, 0(x2) # store 0x58a56491 in memory
flh f24, 0(x2) # load 0x58a56491 from memory into f24
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f3, 0(x2) # load 0x0000fc00 from memory into f3
fnmadd.h f9, f15, f24, f3, dyn # perform operation
fnmadd.h f9, f15, f24, f3, rdn # perform operation
fnmadd.h f9, f15, f24, f3, rmm # perform operation
fnmadd.h f9, f15, f24, f3, rne # perform operation
fnmadd.h f9, f15, f24, f3, rtz # perform operation
fnmadd.h f9, f15, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f15, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f15, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f15, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f15, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f15, f24, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7e00)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f22, 0(x2) # load 0x0000fbff from memory into f22
la x2, scratch
li x3, 0xf0d692f8 # load x3 with value 0xf0d692f8
sw x3, 0(x2) # store 0xf0d692f8 in memory
flh f16, 0(x2) # load 0xf0d692f8 from memory into f16
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
fnmadd.h f10, f22, f16, f18, dyn # perform operation
fnmadd.h f10, f22, f16, f18, rdn # perform operation
fnmadd.h f10, f22, f16, f18, rmm # perform operation
fnmadd.h f10, f22, f16, f18, rne # perform operation
fnmadd.h f10, f22, f16, f18, rtz # perform operation
fnmadd.h f10, f22, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f22, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f22, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f22, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f22, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f22, f16, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7fff)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
la x2, scratch
li x3, 0x986c641b # load x3 with value 0x986c641b
sw x3, 0(x2) # store 0x986c641b in memory
flh f31, 0(x2) # load 0x986c641b from memory into f31
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f17, 0(x2) # load 0x00007fff from memory into f17
fnmadd.h f30, f13, f31, f17, dyn # perform operation
fnmadd.h f30, f13, f31, f17, rdn # perform operation
fnmadd.h f30, f13, f31, f17, rmm # perform operation
fnmadd.h f30, f13, f31, f17, rne # perform operation
fnmadd.h f30, f13, f31, f17, rtz # perform operation
fnmadd.h f30, f13, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f13, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f13, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f13, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f13, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f13, f31, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xfe00)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f18, 0(x2) # load 0x0000fbff from memory into f18
la x2, scratch
li x3, 0x3c0165c2 # load x3 with value 0x3c0165c2
sw x3, 0(x2) # store 0x3c0165c2 in memory
flh f10, 0(x2) # load 0x3c0165c2 from memory into f10
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f5, 0(x2) # load 0x0000fe00 from memory into f5
fnmadd.h f8, f18, f10, f5, dyn # perform operation
fnmadd.h f8, f18, f10, f5, rdn # perform operation
fnmadd.h f8, f18, f10, f5, rmm # perform operation
fnmadd.h f8, f18, f10, f5, rne # perform operation
fnmadd.h f8, f18, f10, f5, rtz # perform operation
fnmadd.h f8, f18, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f18, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f18, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f18, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f18, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f18, f10, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7c01)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f28, 0(x2) # load 0x0000fbff from memory into f28
la x2, scratch
li x3, 0x322ec693 # load x3 with value 0x322ec693
sw x3, 0(x2) # store 0x322ec693 in memory
flh f29, 0(x2) # load 0x322ec693 from memory into f29
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f24, 0(x2) # load 0x00007c01 from memory into f24
fnmadd.h f31, f28, f29, f24, dyn # perform operation
fnmadd.h f31, f28, f29, f24, rdn # perform operation
fnmadd.h f31, f28, f29, f24, rmm # perform operation
fnmadd.h f31, f28, f29, f24, rne # perform operation
fnmadd.h f31, f28, f29, f24, rtz # perform operation
fnmadd.h f31, f28, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f28, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f28, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f28, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f28, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f28, f29, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7dff)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f7, 0(x2) # load 0x0000fbff from memory into f7
la x2, scratch
li x3, 0x83284853 # load x3 with value 0x83284853
sw x3, 0(x2) # store 0x83284853 in memory
flh f23, 0(x2) # load 0x83284853 from memory into f23
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f22, 0(x2) # load 0x00007dff from memory into f22
fnmadd.h f15, f7, f23, f22, dyn # perform operation
fnmadd.h f15, f7, f23, f22, rdn # perform operation
fnmadd.h f15, f7, f23, f22, rmm # perform operation
fnmadd.h f15, f7, f23, f22, rne # perform operation
fnmadd.h f15, f7, f23, f22, rtz # perform operation
fnmadd.h f15, f7, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f7, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f7, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f7, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f7, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f7, f23, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xfc01)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f16, 0(x2) # load 0x0000fbff from memory into f16
la x2, scratch
li x3, 0xe4109ef7 # load x3 with value 0xe4109ef7
sw x3, 0(x2) # store 0xe4109ef7 in memory
flh f10, 0(x2) # load 0xe4109ef7 from memory into f10
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f30, 0(x2) # load 0x0000fc01 from memory into f30
fnmadd.h f31, f16, f10, f30, dyn # perform operation
fnmadd.h f31, f16, f10, f30, rdn # perform operation
fnmadd.h f31, f16, f10, f30, rmm # perform operation
fnmadd.h f31, f16, f10, f30, rne # perform operation
fnmadd.h f31, f16, f10, f30, rtz # perform operation
fnmadd.h f31, f16, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f16, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f16, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f16, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f16, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f16, f10, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x58b4)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f26, 0(x2) # load 0x0000fbff from memory into f26
la x2, scratch
li x3, 0x3817f2d0 # load x3 with value 0x3817f2d0
sw x3, 0(x2) # store 0x3817f2d0 in memory
flh f28, 0(x2) # load 0x3817f2d0 from memory into f28
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f20, 0(x2) # load 0x000058b4 from memory into f20
fnmadd.h f16, f26, f28, f20, dyn # perform operation
fnmadd.h f16, f26, f28, f20, rdn # perform operation
fnmadd.h f16, f26, f28, f20, rmm # perform operation
fnmadd.h f16, f26, f28, f20, rne # perform operation
fnmadd.h f16, f26, f28, f20, rtz # perform operation
fnmadd.h f16, f26, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f26, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f26, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f26, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f26, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f26, f28, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xc93a)
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f27, 0(x2) # load 0x0000fbff from memory into f27
la x2, scratch
li x3, 0xad718622 # load x3 with value 0xad718622
sw x3, 0(x2) # store 0xad718622 in memory
flh f3, 0(x2) # load 0xad718622 from memory into f3
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f22, 0(x2) # load 0x0000c93a from memory into f22
fnmadd.h f9, f27, f3, f22, dyn # perform operation
fnmadd.h f9, f27, f3, f22, rdn # perform operation
fnmadd.h f9, f27, f3, f22, rmm # perform operation
fnmadd.h f9, f27, f3, f22, rne # perform operation
fnmadd.h f9, f27, f3, f22, rtz # perform operation
fnmadd.h f9, f27, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f27, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f27, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f27, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f27, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f27, f3, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x0)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f11, 0(x2) # load 0x000003ff from memory into f11
la x2, scratch
li x3, 0xa5520299 # load x3 with value 0xa5520299
sw x3, 0(x2) # store 0xa5520299 in memory
flh f1, 0(x2) # load 0xa5520299 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f6, 0(x2) # load 0x00000000 from memory into f6
fnmadd.h f21, f11, f1, f6, dyn # perform operation
fnmadd.h f21, f11, f1, f6, rdn # perform operation
fnmadd.h f21, f11, f1, f6, rmm # perform operation
fnmadd.h f21, f11, f1, f6, rne # perform operation
fnmadd.h f21, f11, f1, f6, rtz # perform operation
fnmadd.h f21, f11, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f11, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f11, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f11, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f11, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f11, f1, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x8000)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
la x2, scratch
li x3, 0x9610a0bc # load x3 with value 0x9610a0bc
sw x3, 0(x2) # store 0x9610a0bc in memory
flh f5, 0(x2) # load 0x9610a0bc from memory into f5
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f2, 0(x2) # load 0x00008000 from memory into f2
fnmadd.h f15, f20, f5, f2, dyn # perform operation
fnmadd.h f15, f20, f5, f2, rdn # perform operation
fnmadd.h f15, f20, f5, f2, rmm # perform operation
fnmadd.h f15, f20, f5, f2, rne # perform operation
fnmadd.h f15, f20, f5, f2, rtz # perform operation
fnmadd.h f15, f20, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f20, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f20, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f20, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f20, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f20, f5, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x3c00)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f30, 0(x2) # load 0x000003ff from memory into f30
la x2, scratch
li x3, 0x2d4ef345 # load x3 with value 0x2d4ef345
sw x3, 0(x2) # store 0x2d4ef345 in memory
flh f7, 0(x2) # load 0x2d4ef345 from memory into f7
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f22, 0(x2) # load 0x00003c00 from memory into f22
fnmadd.h f27, f30, f7, f22, dyn # perform operation
fnmadd.h f27, f30, f7, f22, rdn # perform operation
fnmadd.h f27, f30, f7, f22, rmm # perform operation
fnmadd.h f27, f30, f7, f22, rne # perform operation
fnmadd.h f27, f30, f7, f22, rtz # perform operation
fnmadd.h f27, f30, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f30, f7, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xbc00)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f14, 0(x2) # load 0x000003ff from memory into f14
la x2, scratch
li x3, 0x689206bc # load x3 with value 0x689206bc
sw x3, 0(x2) # store 0x689206bc in memory
flh f2, 0(x2) # load 0x689206bc from memory into f2
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f9, 0(x2) # load 0x0000bc00 from memory into f9
fnmadd.h f5, f14, f2, f9, dyn # perform operation
fnmadd.h f5, f14, f2, f9, rdn # perform operation
fnmadd.h f5, f14, f2, f9, rmm # perform operation
fnmadd.h f5, f14, f2, f9, rne # perform operation
fnmadd.h f5, f14, f2, f9, rtz # perform operation
fnmadd.h f5, f14, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f14, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f14, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f14, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f14, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f14, f2, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x3e00)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f12, 0(x2) # load 0x000003ff from memory into f12
la x2, scratch
li x3, 0x45ce4706 # load x3 with value 0x45ce4706
sw x3, 0(x2) # store 0x45ce4706 in memory
flh f6, 0(x2) # load 0x45ce4706 from memory into f6
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f22, 0(x2) # load 0x00003e00 from memory into f22
fnmadd.h f18, f12, f6, f22, dyn # perform operation
fnmadd.h f18, f12, f6, f22, rdn # perform operation
fnmadd.h f18, f12, f6, f22, rmm # perform operation
fnmadd.h f18, f12, f6, f22, rne # perform operation
fnmadd.h f18, f12, f6, f22, rtz # perform operation
fnmadd.h f18, f12, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f12, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f12, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f12, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f12, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f12, f6, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xbe00)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f3, 0(x2) # load 0x000003ff from memory into f3
la x2, scratch
li x3, 0x73296b53 # load x3 with value 0x73296b53
sw x3, 0(x2) # store 0x73296b53 in memory
flh f11, 0(x2) # load 0x73296b53 from memory into f11
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f28, 0(x2) # load 0x0000be00 from memory into f28
fnmadd.h f9, f3, f11, f28, dyn # perform operation
fnmadd.h f9, f3, f11, f28, rdn # perform operation
fnmadd.h f9, f3, f11, f28, rmm # perform operation
fnmadd.h f9, f3, f11, f28, rne # perform operation
fnmadd.h f9, f3, f11, f28, rtz # perform operation
fnmadd.h f9, f3, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f3, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f3, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f3, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f3, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f3, f11, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x4000)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f22, 0(x2) # load 0x000003ff from memory into f22
la x2, scratch
li x3, 0x9c19bed1 # load x3 with value 0x9c19bed1
sw x3, 0(x2) # store 0x9c19bed1 in memory
flh f9, 0(x2) # load 0x9c19bed1 from memory into f9
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f3, 0(x2) # load 0x00004000 from memory into f3
fnmadd.h f31, f22, f9, f3, dyn # perform operation
fnmadd.h f31, f22, f9, f3, rdn # perform operation
fnmadd.h f31, f22, f9, f3, rmm # perform operation
fnmadd.h f31, f22, f9, f3, rne # perform operation
fnmadd.h f31, f22, f9, f3, rtz # perform operation
fnmadd.h f31, f22, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f22, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f22, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f22, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f22, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f22, f9, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xc000)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f16, 0(x2) # load 0x000003ff from memory into f16
la x2, scratch
li x3, 0xf1110f8c # load x3 with value 0xf1110f8c
sw x3, 0(x2) # store 0xf1110f8c in memory
flh f17, 0(x2) # load 0xf1110f8c from memory into f17
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f28, 0(x2) # load 0x0000c000 from memory into f28
fnmadd.h f8, f16, f17, f28, dyn # perform operation
fnmadd.h f8, f16, f17, f28, rdn # perform operation
fnmadd.h f8, f16, f17, f28, rmm # perform operation
fnmadd.h f8, f16, f17, f28, rne # perform operation
fnmadd.h f8, f16, f17, f28, rtz # perform operation
fnmadd.h f8, f16, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f16, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f16, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f16, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f16, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f16, f17, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x400)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f13, 0(x2) # load 0x000003ff from memory into f13
la x2, scratch
li x3, 0x54fdf95c # load x3 with value 0x54fdf95c
sw x3, 0(x2) # store 0x54fdf95c in memory
flh f10, 0(x2) # load 0x54fdf95c from memory into f10
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f28, 0(x2) # load 0x00000400 from memory into f28
fnmadd.h f1, f13, f10, f28, dyn # perform operation
fnmadd.h f1, f13, f10, f28, rdn # perform operation
fnmadd.h f1, f13, f10, f28, rmm # perform operation
fnmadd.h f1, f13, f10, f28, rne # perform operation
fnmadd.h f1, f13, f10, f28, rtz # perform operation
fnmadd.h f1, f13, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f13, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f13, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f13, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f13, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f13, f10, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x8400)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f3, 0(x2) # load 0x000003ff from memory into f3
la x2, scratch
li x3, 0x6e5188d8 # load x3 with value 0x6e5188d8
sw x3, 0(x2) # store 0x6e5188d8 in memory
flh f26, 0(x2) # load 0x6e5188d8 from memory into f26
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f16, 0(x2) # load 0x00008400 from memory into f16
fnmadd.h f27, f3, f26, f16, dyn # perform operation
fnmadd.h f27, f3, f26, f16, rdn # perform operation
fnmadd.h f27, f3, f26, f16, rmm # perform operation
fnmadd.h f27, f3, f26, f16, rne # perform operation
fnmadd.h f27, f3, f26, f16, rtz # perform operation
fnmadd.h f27, f3, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f3, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f3, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f3, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f3, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f3, f26, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7bff)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f7, 0(x2) # load 0x000003ff from memory into f7
la x2, scratch
li x3, 0x38ce6885 # load x3 with value 0x38ce6885
sw x3, 0(x2) # store 0x38ce6885 in memory
flh f25, 0(x2) # load 0x38ce6885 from memory into f25
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f19, 0(x2) # load 0x00007bff from memory into f19
fnmadd.h f31, f7, f25, f19, dyn # perform operation
fnmadd.h f31, f7, f25, f19, rdn # perform operation
fnmadd.h f31, f7, f25, f19, rmm # perform operation
fnmadd.h f31, f7, f25, f19, rne # perform operation
fnmadd.h f31, f7, f25, f19, rtz # perform operation
fnmadd.h f31, f7, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f7, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f7, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f7, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f7, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f7, f25, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xfbff)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f1, 0(x2) # load 0x000003ff from memory into f1
la x2, scratch
li x3, 0x0a795825 # load x3 with value 0x0a795825
sw x3, 0(x2) # store 0x0a795825 in memory
flh f2, 0(x2) # load 0x0a795825 from memory into f2
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f14, 0(x2) # load 0x0000fbff from memory into f14
fnmadd.h f24, f1, f2, f14, dyn # perform operation
fnmadd.h f24, f1, f2, f14, rdn # perform operation
fnmadd.h f24, f1, f2, f14, rmm # perform operation
fnmadd.h f24, f1, f2, f14, rne # perform operation
fnmadd.h f24, f1, f2, f14, rtz # perform operation
fnmadd.h f24, f1, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f1, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f1, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f1, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f1, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f1, f2, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x3ff)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
la x2, scratch
li x3, 0x94982b47 # load x3 with value 0x94982b47
sw x3, 0(x2) # store 0x94982b47 in memory
flh f2, 0(x2) # load 0x94982b47 from memory into f2
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f27, 0(x2) # load 0x000003ff from memory into f27
fnmadd.h f11, f20, f2, f27, dyn # perform operation
fnmadd.h f11, f20, f2, f27, rdn # perform operation
fnmadd.h f11, f20, f2, f27, rmm # perform operation
fnmadd.h f11, f20, f2, f27, rne # perform operation
fnmadd.h f11, f20, f2, f27, rtz # perform operation
fnmadd.h f11, f20, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f20, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f20, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f20, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f20, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f20, f2, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x83ff)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f12, 0(x2) # load 0x000003ff from memory into f12
la x2, scratch
li x3, 0x256cb94c # load x3 with value 0x256cb94c
sw x3, 0(x2) # store 0x256cb94c in memory
flh f27, 0(x2) # load 0x256cb94c from memory into f27
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f26, 0(x2) # load 0x000083ff from memory into f26
fnmadd.h f17, f12, f27, f26, dyn # perform operation
fnmadd.h f17, f12, f27, f26, rdn # perform operation
fnmadd.h f17, f12, f27, f26, rmm # perform operation
fnmadd.h f17, f12, f27, f26, rne # perform operation
fnmadd.h f17, f12, f27, f26, rtz # perform operation
fnmadd.h f17, f12, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f12, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f12, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f12, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f12, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f12, f27, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x200)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f22, 0(x2) # load 0x000003ff from memory into f22
la x2, scratch
li x3, 0x5b20f50e # load x3 with value 0x5b20f50e
sw x3, 0(x2) # store 0x5b20f50e in memory
flh f6, 0(x2) # load 0x5b20f50e from memory into f6
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f27, 0(x2) # load 0x00000200 from memory into f27
fnmadd.h f12, f22, f6, f27, dyn # perform operation
fnmadd.h f12, f22, f6, f27, rdn # perform operation
fnmadd.h f12, f22, f6, f27, rmm # perform operation
fnmadd.h f12, f22, f6, f27, rne # perform operation
fnmadd.h f12, f22, f6, f27, rtz # perform operation
fnmadd.h f12, f22, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f22, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f22, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f22, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f22, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f22, f6, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x8200)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f21, 0(x2) # load 0x000003ff from memory into f21
la x2, scratch
li x3, 0xefa861f8 # load x3 with value 0xefa861f8
sw x3, 0(x2) # store 0xefa861f8 in memory
flh f18, 0(x2) # load 0xefa861f8 from memory into f18
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f8, 0(x2) # load 0x00008200 from memory into f8
fnmadd.h f19, f21, f18, f8, dyn # perform operation
fnmadd.h f19, f21, f18, f8, rdn # perform operation
fnmadd.h f19, f21, f18, f8, rmm # perform operation
fnmadd.h f19, f21, f18, f8, rne # perform operation
fnmadd.h f19, f21, f18, f8, rtz # perform operation
fnmadd.h f19, f21, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f21, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f21, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f21, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f21, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f21, f18, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x1)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f29, 0(x2) # load 0x000003ff from memory into f29
la x2, scratch
li x3, 0x20a45353 # load x3 with value 0x20a45353
sw x3, 0(x2) # store 0x20a45353 in memory
flh f1, 0(x2) # load 0x20a45353 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f30, 0(x2) # load 0x00000001 from memory into f30
fnmadd.h f7, f29, f1, f30, dyn # perform operation
fnmadd.h f7, f29, f1, f30, rdn # perform operation
fnmadd.h f7, f29, f1, f30, rmm # perform operation
fnmadd.h f7, f29, f1, f30, rne # perform operation
fnmadd.h f7, f29, f1, f30, rtz # perform operation
fnmadd.h f7, f29, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f29, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f29, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f29, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f29, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f29, f1, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x8001)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f29, 0(x2) # load 0x000003ff from memory into f29
la x2, scratch
li x3, 0x1531c797 # load x3 with value 0x1531c797
sw x3, 0(x2) # store 0x1531c797 in memory
flh f12, 0(x2) # load 0x1531c797 from memory into f12
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f13, 0(x2) # load 0x00008001 from memory into f13
fnmadd.h f9, f29, f12, f13, dyn # perform operation
fnmadd.h f9, f29, f12, f13, rdn # perform operation
fnmadd.h f9, f29, f12, f13, rmm # perform operation
fnmadd.h f9, f29, f12, f13, rne # perform operation
fnmadd.h f9, f29, f12, f13, rtz # perform operation
fnmadd.h f9, f29, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f29, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f29, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f29, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f29, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f29, f12, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7c00)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f27, 0(x2) # load 0x000003ff from memory into f27
la x2, scratch
li x3, 0x81a4a913 # load x3 with value 0x81a4a913
sw x3, 0(x2) # store 0x81a4a913 in memory
flh f18, 0(x2) # load 0x81a4a913 from memory into f18
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f31, 0(x2) # load 0x00007c00 from memory into f31
fnmadd.h f28, f27, f18, f31, dyn # perform operation
fnmadd.h f28, f27, f18, f31, rdn # perform operation
fnmadd.h f28, f27, f18, f31, rmm # perform operation
fnmadd.h f28, f27, f18, f31, rne # perform operation
fnmadd.h f28, f27, f18, f31, rtz # perform operation
fnmadd.h f28, f27, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f27, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f27, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f27, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f27, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f27, f18, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xfc00)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f21, 0(x2) # load 0x000003ff from memory into f21
la x2, scratch
li x3, 0x59a43088 # load x3 with value 0x59a43088
sw x3, 0(x2) # store 0x59a43088 in memory
flh f19, 0(x2) # load 0x59a43088 from memory into f19
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f17, 0(x2) # load 0x0000fc00 from memory into f17
fnmadd.h f23, f21, f19, f17, dyn # perform operation
fnmadd.h f23, f21, f19, f17, rdn # perform operation
fnmadd.h f23, f21, f19, f17, rmm # perform operation
fnmadd.h f23, f21, f19, f17, rne # perform operation
fnmadd.h f23, f21, f19, f17, rtz # perform operation
fnmadd.h f23, f21, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f21, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f21, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f21, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f21, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f21, f19, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7e00)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f3, 0(x2) # load 0x000003ff from memory into f3
la x2, scratch
li x3, 0x6760ea76 # load x3 with value 0x6760ea76
sw x3, 0(x2) # store 0x6760ea76 in memory
flh f30, 0(x2) # load 0x6760ea76 from memory into f30
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f11, 0(x2) # load 0x00007e00 from memory into f11
fnmadd.h f18, f3, f30, f11, dyn # perform operation
fnmadd.h f18, f3, f30, f11, rdn # perform operation
fnmadd.h f18, f3, f30, f11, rmm # perform operation
fnmadd.h f18, f3, f30, f11, rne # perform operation
fnmadd.h f18, f3, f30, f11, rtz # perform operation
fnmadd.h f18, f3, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f3, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f3, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f3, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f3, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f3, f30, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7fff)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f29, 0(x2) # load 0x000003ff from memory into f29
la x2, scratch
li x3, 0xde7bc291 # load x3 with value 0xde7bc291
sw x3, 0(x2) # store 0xde7bc291 in memory
flh f9, 0(x2) # load 0xde7bc291 from memory into f9
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f15, 0(x2) # load 0x00007fff from memory into f15
fnmadd.h f26, f29, f9, f15, dyn # perform operation
fnmadd.h f26, f29, f9, f15, rdn # perform operation
fnmadd.h f26, f29, f9, f15, rmm # perform operation
fnmadd.h f26, f29, f9, f15, rne # perform operation
fnmadd.h f26, f29, f9, f15, rtz # perform operation
fnmadd.h f26, f29, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f29, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f29, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f29, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f29, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f29, f9, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xfe00)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f12, 0(x2) # load 0x000003ff from memory into f12
la x2, scratch
li x3, 0x9ac8edbb # load x3 with value 0x9ac8edbb
sw x3, 0(x2) # store 0x9ac8edbb in memory
flh f14, 0(x2) # load 0x9ac8edbb from memory into f14
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f24, 0(x2) # load 0x0000fe00 from memory into f24
fnmadd.h f28, f12, f14, f24, dyn # perform operation
fnmadd.h f28, f12, f14, f24, rdn # perform operation
fnmadd.h f28, f12, f14, f24, rmm # perform operation
fnmadd.h f28, f12, f14, f24, rne # perform operation
fnmadd.h f28, f12, f14, f24, rtz # perform operation
fnmadd.h f28, f12, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f12, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f12, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f12, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f12, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f12, f14, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7c01)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f11, 0(x2) # load 0x000003ff from memory into f11
la x2, scratch
li x3, 0xa0019925 # load x3 with value 0xa0019925
sw x3, 0(x2) # store 0xa0019925 in memory
flh f1, 0(x2) # load 0xa0019925 from memory into f1
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f16, 0(x2) # load 0x00007c01 from memory into f16
fnmadd.h f31, f11, f1, f16, dyn # perform operation
fnmadd.h f31, f11, f1, f16, rdn # perform operation
fnmadd.h f31, f11, f1, f16, rmm # perform operation
fnmadd.h f31, f11, f1, f16, rne # perform operation
fnmadd.h f31, f11, f1, f16, rtz # perform operation
fnmadd.h f31, f11, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f11, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f11, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f11, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f11, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f11, f1, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7dff)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f14, 0(x2) # load 0x000003ff from memory into f14
la x2, scratch
li x3, 0x9c809853 # load x3 with value 0x9c809853
sw x3, 0(x2) # store 0x9c809853 in memory
flh f22, 0(x2) # load 0x9c809853 from memory into f22
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f17, 0(x2) # load 0x00007dff from memory into f17
fnmadd.h f15, f14, f22, f17, dyn # perform operation
fnmadd.h f15, f14, f22, f17, rdn # perform operation
fnmadd.h f15, f14, f22, f17, rmm # perform operation
fnmadd.h f15, f14, f22, f17, rne # perform operation
fnmadd.h f15, f14, f22, f17, rtz # perform operation
fnmadd.h f15, f14, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f14, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f14, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f14, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f14, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f14, f22, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xfc01)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
la x2, scratch
li x3, 0x543d6773 # load x3 with value 0x543d6773
sw x3, 0(x2) # store 0x543d6773 in memory
flh f19, 0(x2) # load 0x543d6773 from memory into f19
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f24, 0(x2) # load 0x0000fc01 from memory into f24
fnmadd.h f7, f20, f19, f24, dyn # perform operation
fnmadd.h f7, f20, f19, f24, rdn # perform operation
fnmadd.h f7, f20, f19, f24, rmm # perform operation
fnmadd.h f7, f20, f19, f24, rne # perform operation
fnmadd.h f7, f20, f19, f24, rtz # perform operation
fnmadd.h f7, f20, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f20, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f20, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f20, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f20, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f20, f19, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x58b4)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f28, 0(x2) # load 0x000003ff from memory into f28
la x2, scratch
li x3, 0x5cb614de # load x3 with value 0x5cb614de
sw x3, 0(x2) # store 0x5cb614de in memory
flh f17, 0(x2) # load 0x5cb614de from memory into f17
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f1, 0(x2) # load 0x000058b4 from memory into f1
fnmadd.h f21, f28, f17, f1, dyn # perform operation
fnmadd.h f21, f28, f17, f1, rdn # perform operation
fnmadd.h f21, f28, f17, f1, rmm # perform operation
fnmadd.h f21, f28, f17, f1, rne # perform operation
fnmadd.h f21, f28, f17, f1, rtz # perform operation
fnmadd.h f21, f28, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f28, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f28, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f28, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f28, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f28, f17, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xc93a)
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f11, 0(x2) # load 0x000003ff from memory into f11
la x2, scratch
li x3, 0xeeb0f8b7 # load x3 with value 0xeeb0f8b7
sw x3, 0(x2) # store 0xeeb0f8b7 in memory
flh f19, 0(x2) # load 0xeeb0f8b7 from memory into f19
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f8, 0(x2) # load 0x0000c93a from memory into f8
fnmadd.h f30, f11, f19, f8, dyn # perform operation
fnmadd.h f30, f11, f19, f8, rdn # perform operation
fnmadd.h f30, f11, f19, f8, rmm # perform operation
fnmadd.h f30, f11, f19, f8, rne # perform operation
fnmadd.h f30, f11, f19, f8, rtz # perform operation
fnmadd.h f30, f11, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f11, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f11, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f11, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f11, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f11, f19, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x0)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f7, 0(x2) # load 0x000083ff from memory into f7
la x2, scratch
li x3, 0x1dcd7c7c # load x3 with value 0x1dcd7c7c
sw x3, 0(x2) # store 0x1dcd7c7c in memory
flh f6, 0(x2) # load 0x1dcd7c7c from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f27, 0(x2) # load 0x00000000 from memory into f27
fnmadd.h f20, f7, f6, f27, dyn # perform operation
fnmadd.h f20, f7, f6, f27, rdn # perform operation
fnmadd.h f20, f7, f6, f27, rmm # perform operation
fnmadd.h f20, f7, f6, f27, rne # perform operation
fnmadd.h f20, f7, f6, f27, rtz # perform operation
fnmadd.h f20, f7, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f7, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f7, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f7, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f7, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f7, f6, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x8000)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
la x2, scratch
li x3, 0x7b48c531 # load x3 with value 0x7b48c531
sw x3, 0(x2) # store 0x7b48c531 in memory
flh f30, 0(x2) # load 0x7b48c531 from memory into f30
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f1, 0(x2) # load 0x00008000 from memory into f1
fnmadd.h f26, f18, f30, f1, dyn # perform operation
fnmadd.h f26, f18, f30, f1, rdn # perform operation
fnmadd.h f26, f18, f30, f1, rmm # perform operation
fnmadd.h f26, f18, f30, f1, rne # perform operation
fnmadd.h f26, f18, f30, f1, rtz # perform operation
fnmadd.h f26, f18, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f18, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f18, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f18, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f18, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f18, f30, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x3c00)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f14, 0(x2) # load 0x000083ff from memory into f14
la x2, scratch
li x3, 0x09840843 # load x3 with value 0x09840843
sw x3, 0(x2) # store 0x09840843 in memory
flh f22, 0(x2) # load 0x09840843 from memory into f22
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f11, 0(x2) # load 0x00003c00 from memory into f11
fnmadd.h f23, f14, f22, f11, dyn # perform operation
fnmadd.h f23, f14, f22, f11, rdn # perform operation
fnmadd.h f23, f14, f22, f11, rmm # perform operation
fnmadd.h f23, f14, f22, f11, rne # perform operation
fnmadd.h f23, f14, f22, f11, rtz # perform operation
fnmadd.h f23, f14, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f14, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f14, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f14, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f14, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f14, f22, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xbc00)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f8, 0(x2) # load 0x000083ff from memory into f8
la x2, scratch
li x3, 0xa21b7b95 # load x3 with value 0xa21b7b95
sw x3, 0(x2) # store 0xa21b7b95 in memory
flh f23, 0(x2) # load 0xa21b7b95 from memory into f23
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f19, 0(x2) # load 0x0000bc00 from memory into f19
fnmadd.h f10, f8, f23, f19, dyn # perform operation
fnmadd.h f10, f8, f23, f19, rdn # perform operation
fnmadd.h f10, f8, f23, f19, rmm # perform operation
fnmadd.h f10, f8, f23, f19, rne # perform operation
fnmadd.h f10, f8, f23, f19, rtz # perform operation
fnmadd.h f10, f8, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f8, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f8, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f8, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f8, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f8, f23, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x3e00)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f12, 0(x2) # load 0x000083ff from memory into f12
la x2, scratch
li x3, 0xa0702f92 # load x3 with value 0xa0702f92
sw x3, 0(x2) # store 0xa0702f92 in memory
flh f14, 0(x2) # load 0xa0702f92 from memory into f14
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f15, 0(x2) # load 0x00003e00 from memory into f15
fnmadd.h f5, f12, f14, f15, dyn # perform operation
fnmadd.h f5, f12, f14, f15, rdn # perform operation
fnmadd.h f5, f12, f14, f15, rmm # perform operation
fnmadd.h f5, f12, f14, f15, rne # perform operation
fnmadd.h f5, f12, f14, f15, rtz # perform operation
fnmadd.h f5, f12, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f12, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f12, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f12, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f12, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f12, f14, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xbe00)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f15, 0(x2) # load 0x000083ff from memory into f15
la x2, scratch
li x3, 0x7b92dc6e # load x3 with value 0x7b92dc6e
sw x3, 0(x2) # store 0x7b92dc6e in memory
flh f30, 0(x2) # load 0x7b92dc6e from memory into f30
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f3, 0(x2) # load 0x0000be00 from memory into f3
fnmadd.h f13, f15, f30, f3, dyn # perform operation
fnmadd.h f13, f15, f30, f3, rdn # perform operation
fnmadd.h f13, f15, f30, f3, rmm # perform operation
fnmadd.h f13, f15, f30, f3, rne # perform operation
fnmadd.h f13, f15, f30, f3, rtz # perform operation
fnmadd.h f13, f15, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f15, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f15, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f15, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f15, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f15, f30, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x4000)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f26, 0(x2) # load 0x000083ff from memory into f26
la x2, scratch
li x3, 0xa9dc97c7 # load x3 with value 0xa9dc97c7
sw x3, 0(x2) # store 0xa9dc97c7 in memory
flh f19, 0(x2) # load 0xa9dc97c7 from memory into f19
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f3, 0(x2) # load 0x00004000 from memory into f3
fnmadd.h f22, f26, f19, f3, dyn # perform operation
fnmadd.h f22, f26, f19, f3, rdn # perform operation
fnmadd.h f22, f26, f19, f3, rmm # perform operation
fnmadd.h f22, f26, f19, f3, rne # perform operation
fnmadd.h f22, f26, f19, f3, rtz # perform operation
fnmadd.h f22, f26, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f26, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f26, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f26, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f26, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f26, f19, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xc000)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f5, 0(x2) # load 0x000083ff from memory into f5
la x2, scratch
li x3, 0x5c37c831 # load x3 with value 0x5c37c831
sw x3, 0(x2) # store 0x5c37c831 in memory
flh f12, 0(x2) # load 0x5c37c831 from memory into f12
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f13, 0(x2) # load 0x0000c000 from memory into f13
fnmadd.h f24, f5, f12, f13, dyn # perform operation
fnmadd.h f24, f5, f12, f13, rdn # perform operation
fnmadd.h f24, f5, f12, f13, rmm # perform operation
fnmadd.h f24, f5, f12, f13, rne # perform operation
fnmadd.h f24, f5, f12, f13, rtz # perform operation
fnmadd.h f24, f5, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f5, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f5, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f5, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f5, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f5, f12, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x400)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f20, 0(x2) # load 0x000083ff from memory into f20
la x2, scratch
li x3, 0x5730ce68 # load x3 with value 0x5730ce68
sw x3, 0(x2) # store 0x5730ce68 in memory
flh f17, 0(x2) # load 0x5730ce68 from memory into f17
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f7, 0(x2) # load 0x00000400 from memory into f7
fnmadd.h f22, f20, f17, f7, dyn # perform operation
fnmadd.h f22, f20, f17, f7, rdn # perform operation
fnmadd.h f22, f20, f17, f7, rmm # perform operation
fnmadd.h f22, f20, f17, f7, rne # perform operation
fnmadd.h f22, f20, f17, f7, rtz # perform operation
fnmadd.h f22, f20, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f20, f17, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x8400)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f14, 0(x2) # load 0x000083ff from memory into f14
la x2, scratch
li x3, 0x13f95329 # load x3 with value 0x13f95329
sw x3, 0(x2) # store 0x13f95329 in memory
flh f6, 0(x2) # load 0x13f95329 from memory into f6
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f3, 0(x2) # load 0x00008400 from memory into f3
fnmadd.h f13, f14, f6, f3, dyn # perform operation
fnmadd.h f13, f14, f6, f3, rdn # perform operation
fnmadd.h f13, f14, f6, f3, rmm # perform operation
fnmadd.h f13, f14, f6, f3, rne # perform operation
fnmadd.h f13, f14, f6, f3, rtz # perform operation
fnmadd.h f13, f14, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f14, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f14, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f14, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f14, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f14, f6, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7bff)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f28, 0(x2) # load 0x000083ff from memory into f28
la x2, scratch
li x3, 0x855d2e2f # load x3 with value 0x855d2e2f
sw x3, 0(x2) # store 0x855d2e2f in memory
flh f9, 0(x2) # load 0x855d2e2f from memory into f9
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f5, 0(x2) # load 0x00007bff from memory into f5
fnmadd.h f23, f28, f9, f5, dyn # perform operation
fnmadd.h f23, f28, f9, f5, rdn # perform operation
fnmadd.h f23, f28, f9, f5, rmm # perform operation
fnmadd.h f23, f28, f9, f5, rne # perform operation
fnmadd.h f23, f28, f9, f5, rtz # perform operation
fnmadd.h f23, f28, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f28, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f28, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f28, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f28, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f28, f9, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xfbff)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f20, 0(x2) # load 0x000083ff from memory into f20
la x2, scratch
li x3, 0xed5a6362 # load x3 with value 0xed5a6362
sw x3, 0(x2) # store 0xed5a6362 in memory
flh f23, 0(x2) # load 0xed5a6362 from memory into f23
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f7, 0(x2) # load 0x0000fbff from memory into f7
fnmadd.h f17, f20, f23, f7, dyn # perform operation
fnmadd.h f17, f20, f23, f7, rdn # perform operation
fnmadd.h f17, f20, f23, f7, rmm # perform operation
fnmadd.h f17, f20, f23, f7, rne # perform operation
fnmadd.h f17, f20, f23, f7, rtz # perform operation
fnmadd.h f17, f20, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f20, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f20, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f20, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f20, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f20, f23, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x3ff)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
la x2, scratch
li x3, 0xfd679cc7 # load x3 with value 0xfd679cc7
sw x3, 0(x2) # store 0xfd679cc7 in memory
flh f31, 0(x2) # load 0xfd679cc7 from memory into f31
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f26, 0(x2) # load 0x000003ff from memory into f26
fnmadd.h f5, f19, f31, f26, dyn # perform operation
fnmadd.h f5, f19, f31, f26, rdn # perform operation
fnmadd.h f5, f19, f31, f26, rmm # perform operation
fnmadd.h f5, f19, f31, f26, rne # perform operation
fnmadd.h f5, f19, f31, f26, rtz # perform operation
fnmadd.h f5, f19, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f19, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f19, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f19, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f19, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f19, f31, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x83ff)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f15, 0(x2) # load 0x000083ff from memory into f15
la x2, scratch
li x3, 0x4a38a6bc # load x3 with value 0x4a38a6bc
sw x3, 0(x2) # store 0x4a38a6bc in memory
flh f17, 0(x2) # load 0x4a38a6bc from memory into f17
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f30, 0(x2) # load 0x000083ff from memory into f30
fnmadd.h f25, f15, f17, f30, dyn # perform operation
fnmadd.h f25, f15, f17, f30, rdn # perform operation
fnmadd.h f25, f15, f17, f30, rmm # perform operation
fnmadd.h f25, f15, f17, f30, rne # perform operation
fnmadd.h f25, f15, f17, f30, rtz # perform operation
fnmadd.h f25, f15, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f15, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f15, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f15, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f15, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f15, f17, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x200)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f3, 0(x2) # load 0x000083ff from memory into f3
la x2, scratch
li x3, 0x25f19fcd # load x3 with value 0x25f19fcd
sw x3, 0(x2) # store 0x25f19fcd in memory
flh f21, 0(x2) # load 0x25f19fcd from memory into f21
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f1, 0(x2) # load 0x00000200 from memory into f1
fnmadd.h f30, f3, f21, f1, dyn # perform operation
fnmadd.h f30, f3, f21, f1, rdn # perform operation
fnmadd.h f30, f3, f21, f1, rmm # perform operation
fnmadd.h f30, f3, f21, f1, rne # perform operation
fnmadd.h f30, f3, f21, f1, rtz # perform operation
fnmadd.h f30, f3, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f3, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f3, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f3, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f3, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f3, f21, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x8200)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f6, 0(x2) # load 0x000083ff from memory into f6
la x2, scratch
li x3, 0x532faf5f # load x3 with value 0x532faf5f
sw x3, 0(x2) # store 0x532faf5f in memory
flh f1, 0(x2) # load 0x532faf5f from memory into f1
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f11, 0(x2) # load 0x00008200 from memory into f11
fnmadd.h f15, f6, f1, f11, dyn # perform operation
fnmadd.h f15, f6, f1, f11, rdn # perform operation
fnmadd.h f15, f6, f1, f11, rmm # perform operation
fnmadd.h f15, f6, f1, f11, rne # perform operation
fnmadd.h f15, f6, f1, f11, rtz # perform operation
fnmadd.h f15, f6, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f6, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f6, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f6, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f6, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f6, f1, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x1)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f31, 0(x2) # load 0x000083ff from memory into f31
la x2, scratch
li x3, 0xf9bb4e11 # load x3 with value 0xf9bb4e11
sw x3, 0(x2) # store 0xf9bb4e11 in memory
flh f7, 0(x2) # load 0xf9bb4e11 from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
fnmadd.h f16, f31, f7, f15, dyn # perform operation
fnmadd.h f16, f31, f7, f15, rdn # perform operation
fnmadd.h f16, f31, f7, f15, rmm # perform operation
fnmadd.h f16, f31, f7, f15, rne # perform operation
fnmadd.h f16, f31, f7, f15, rtz # perform operation
fnmadd.h f16, f31, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f31, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f31, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f31, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f31, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f31, f7, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x8001)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
la x2, scratch
li x3, 0xc2fc29c5 # load x3 with value 0xc2fc29c5
sw x3, 0(x2) # store 0xc2fc29c5 in memory
flh f30, 0(x2) # load 0xc2fc29c5 from memory into f30
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f6, 0(x2) # load 0x00008001 from memory into f6
fnmadd.h f2, f17, f30, f6, dyn # perform operation
fnmadd.h f2, f17, f30, f6, rdn # perform operation
fnmadd.h f2, f17, f30, f6, rmm # perform operation
fnmadd.h f2, f17, f30, f6, rne # perform operation
fnmadd.h f2, f17, f30, f6, rtz # perform operation
fnmadd.h f2, f17, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f17, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f17, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f17, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f17, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f17, f30, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7c00)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f14, 0(x2) # load 0x000083ff from memory into f14
la x2, scratch
li x3, 0x9534c182 # load x3 with value 0x9534c182
sw x3, 0(x2) # store 0x9534c182 in memory
flh f13, 0(x2) # load 0x9534c182 from memory into f13
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f6, 0(x2) # load 0x00007c00 from memory into f6
fnmadd.h f8, f14, f13, f6, dyn # perform operation
fnmadd.h f8, f14, f13, f6, rdn # perform operation
fnmadd.h f8, f14, f13, f6, rmm # perform operation
fnmadd.h f8, f14, f13, f6, rne # perform operation
fnmadd.h f8, f14, f13, f6, rtz # perform operation
fnmadd.h f8, f14, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f14, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f14, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f14, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f14, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f14, f13, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xfc00)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f5, 0(x2) # load 0x000083ff from memory into f5
la x2, scratch
li x3, 0x16018641 # load x3 with value 0x16018641
sw x3, 0(x2) # store 0x16018641 in memory
flh f23, 0(x2) # load 0x16018641 from memory into f23
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f17, 0(x2) # load 0x0000fc00 from memory into f17
fnmadd.h f22, f5, f23, f17, dyn # perform operation
fnmadd.h f22, f5, f23, f17, rdn # perform operation
fnmadd.h f22, f5, f23, f17, rmm # perform operation
fnmadd.h f22, f5, f23, f17, rne # perform operation
fnmadd.h f22, f5, f23, f17, rtz # perform operation
fnmadd.h f22, f5, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f5, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f5, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f5, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f5, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f5, f23, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7e00)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f5, 0(x2) # load 0x000083ff from memory into f5
la x2, scratch
li x3, 0x314298ce # load x3 with value 0x314298ce
sw x3, 0(x2) # store 0x314298ce in memory
flh f10, 0(x2) # load 0x314298ce from memory into f10
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
fnmadd.h f3, f5, f10, f24, dyn # perform operation
fnmadd.h f3, f5, f10, f24, rdn # perform operation
fnmadd.h f3, f5, f10, f24, rmm # perform operation
fnmadd.h f3, f5, f10, f24, rne # perform operation
fnmadd.h f3, f5, f10, f24, rtz # perform operation
fnmadd.h f3, f5, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f5, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f5, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f5, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f5, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f5, f10, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7fff)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f30, 0(x2) # load 0x000083ff from memory into f30
la x2, scratch
li x3, 0x9ac6a80d # load x3 with value 0x9ac6a80d
sw x3, 0(x2) # store 0x9ac6a80d in memory
flh f28, 0(x2) # load 0x9ac6a80d from memory into f28
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f1, 0(x2) # load 0x00007fff from memory into f1
fnmadd.h f25, f30, f28, f1, dyn # perform operation
fnmadd.h f25, f30, f28, f1, rdn # perform operation
fnmadd.h f25, f30, f28, f1, rmm # perform operation
fnmadd.h f25, f30, f28, f1, rne # perform operation
fnmadd.h f25, f30, f28, f1, rtz # perform operation
fnmadd.h f25, f30, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f30, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f30, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f30, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f30, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f30, f28, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xfe00)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f15, 0(x2) # load 0x000083ff from memory into f15
la x2, scratch
li x3, 0x0575a1be # load x3 with value 0x0575a1be
sw x3, 0(x2) # store 0x0575a1be in memory
flh f20, 0(x2) # load 0x0575a1be from memory into f20
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f18, 0(x2) # load 0x0000fe00 from memory into f18
fnmadd.h f3, f15, f20, f18, dyn # perform operation
fnmadd.h f3, f15, f20, f18, rdn # perform operation
fnmadd.h f3, f15, f20, f18, rmm # perform operation
fnmadd.h f3, f15, f20, f18, rne # perform operation
fnmadd.h f3, f15, f20, f18, rtz # perform operation
fnmadd.h f3, f15, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f15, f20, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7c01)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f6, 0(x2) # load 0x000083ff from memory into f6
la x2, scratch
li x3, 0xdffc70a4 # load x3 with value 0xdffc70a4
sw x3, 0(x2) # store 0xdffc70a4 in memory
flh f1, 0(x2) # load 0xdffc70a4 from memory into f1
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f10, 0(x2) # load 0x00007c01 from memory into f10
fnmadd.h f19, f6, f1, f10, dyn # perform operation
fnmadd.h f19, f6, f1, f10, rdn # perform operation
fnmadd.h f19, f6, f1, f10, rmm # perform operation
fnmadd.h f19, f6, f1, f10, rne # perform operation
fnmadd.h f19, f6, f1, f10, rtz # perform operation
fnmadd.h f19, f6, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f6, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f6, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f6, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f6, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f6, f1, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7dff)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f26, 0(x2) # load 0x000083ff from memory into f26
la x2, scratch
li x3, 0x2271bb41 # load x3 with value 0x2271bb41
sw x3, 0(x2) # store 0x2271bb41 in memory
flh f13, 0(x2) # load 0x2271bb41 from memory into f13
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f28, 0(x2) # load 0x00007dff from memory into f28
fnmadd.h f29, f26, f13, f28, dyn # perform operation
fnmadd.h f29, f26, f13, f28, rdn # perform operation
fnmadd.h f29, f26, f13, f28, rmm # perform operation
fnmadd.h f29, f26, f13, f28, rne # perform operation
fnmadd.h f29, f26, f13, f28, rtz # perform operation
fnmadd.h f29, f26, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f26, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f26, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f26, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f26, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f26, f13, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xfc01)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f30, 0(x2) # load 0x000083ff from memory into f30
la x2, scratch
li x3, 0x43bba44c # load x3 with value 0x43bba44c
sw x3, 0(x2) # store 0x43bba44c in memory
flh f20, 0(x2) # load 0x43bba44c from memory into f20
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f26, 0(x2) # load 0x0000fc01 from memory into f26
fnmadd.h f8, f30, f20, f26, dyn # perform operation
fnmadd.h f8, f30, f20, f26, rdn # perform operation
fnmadd.h f8, f30, f20, f26, rmm # perform operation
fnmadd.h f8, f30, f20, f26, rne # perform operation
fnmadd.h f8, f30, f20, f26, rtz # perform operation
fnmadd.h f8, f30, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f30, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f30, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f30, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f30, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f30, f20, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x58b4)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f5, 0(x2) # load 0x000083ff from memory into f5
la x2, scratch
li x3, 0xc56981f9 # load x3 with value 0xc56981f9
sw x3, 0(x2) # store 0xc56981f9 in memory
flh f19, 0(x2) # load 0xc56981f9 from memory into f19
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f31, 0(x2) # load 0x000058b4 from memory into f31
fnmadd.h f30, f5, f19, f31, dyn # perform operation
fnmadd.h f30, f5, f19, f31, rdn # perform operation
fnmadd.h f30, f5, f19, f31, rmm # perform operation
fnmadd.h f30, f5, f19, f31, rne # perform operation
fnmadd.h f30, f5, f19, f31, rtz # perform operation
fnmadd.h f30, f5, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f5, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f5, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f5, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f5, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f5, f19, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xc93a)
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
la x2, scratch
li x3, 0xe4c4355b # load x3 with value 0xe4c4355b
sw x3, 0(x2) # store 0xe4c4355b in memory
flh f2, 0(x2) # load 0xe4c4355b from memory into f2
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
fnmadd.h f29, f18, f2, f23, dyn # perform operation
fnmadd.h f29, f18, f2, f23, rdn # perform operation
fnmadd.h f29, f18, f2, f23, rmm # perform operation
fnmadd.h f29, f18, f2, f23, rne # perform operation
fnmadd.h f29, f18, f2, f23, rtz # perform operation
fnmadd.h f29, f18, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f18, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f18, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f18, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f18, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f18, f2, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x0)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f18, 0(x2) # load 0x00000200 from memory into f18
la x2, scratch
li x3, 0x59ff23c3 # load x3 with value 0x59ff23c3
sw x3, 0(x2) # store 0x59ff23c3 in memory
flh f6, 0(x2) # load 0x59ff23c3 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f8, 0(x2) # load 0x00000000 from memory into f8
fnmadd.h f31, f18, f6, f8, dyn # perform operation
fnmadd.h f31, f18, f6, f8, rdn # perform operation
fnmadd.h f31, f18, f6, f8, rmm # perform operation
fnmadd.h f31, f18, f6, f8, rne # perform operation
fnmadd.h f31, f18, f6, f8, rtz # perform operation
fnmadd.h f31, f18, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f18, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f18, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f18, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f18, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f18, f6, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x8000)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
la x2, scratch
li x3, 0x05a8bb37 # load x3 with value 0x05a8bb37
sw x3, 0(x2) # store 0x05a8bb37 in memory
flh f13, 0(x2) # load 0x05a8bb37 from memory into f13
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f29, 0(x2) # load 0x00008000 from memory into f29
fnmadd.h f31, f19, f13, f29, dyn # perform operation
fnmadd.h f31, f19, f13, f29, rdn # perform operation
fnmadd.h f31, f19, f13, f29, rmm # perform operation
fnmadd.h f31, f19, f13, f29, rne # perform operation
fnmadd.h f31, f19, f13, f29, rtz # perform operation
fnmadd.h f31, f19, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f19, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f19, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f19, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f19, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f19, f13, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
la x2, scratch
li x3, 0x0d355f01 # load x3 with value 0x0d355f01
sw x3, 0(x2) # store 0x0d355f01 in memory
flh f5, 0(x2) # load 0x0d355f01 from memory into f5
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f9, 0(x2) # load 0x00003c00 from memory into f9
fnmadd.h f26, f13, f5, f9, dyn # perform operation
fnmadd.h f26, f13, f5, f9, rdn # perform operation
fnmadd.h f26, f13, f5, f9, rmm # perform operation
fnmadd.h f26, f13, f5, f9, rne # perform operation
fnmadd.h f26, f13, f5, f9, rtz # perform operation
fnmadd.h f26, f13, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f13, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f13, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f13, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f13, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f13, f5, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f29, 0(x2) # load 0x00000200 from memory into f29
la x2, scratch
li x3, 0x0c2e38e7 # load x3 with value 0x0c2e38e7
sw x3, 0(x2) # store 0x0c2e38e7 in memory
flh f18, 0(x2) # load 0x0c2e38e7 from memory into f18
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f1, 0(x2) # load 0x0000bc00 from memory into f1
fnmadd.h f7, f29, f18, f1, dyn # perform operation
fnmadd.h f7, f29, f18, f1, rdn # perform operation
fnmadd.h f7, f29, f18, f1, rmm # perform operation
fnmadd.h f7, f29, f18, f1, rne # perform operation
fnmadd.h f7, f29, f18, f1, rtz # perform operation
fnmadd.h f7, f29, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f29, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f29, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f29, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f29, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f29, f18, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f20, 0(x2) # load 0x00000200 from memory into f20
la x2, scratch
li x3, 0xf759b6e3 # load x3 with value 0xf759b6e3
sw x3, 0(x2) # store 0xf759b6e3 in memory
flh f23, 0(x2) # load 0xf759b6e3 from memory into f23
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f31, 0(x2) # load 0x00003e00 from memory into f31
fnmadd.h f12, f20, f23, f31, dyn # perform operation
fnmadd.h f12, f20, f23, f31, rdn # perform operation
fnmadd.h f12, f20, f23, f31, rmm # perform operation
fnmadd.h f12, f20, f23, f31, rne # perform operation
fnmadd.h f12, f20, f23, f31, rtz # perform operation
fnmadd.h f12, f20, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f20, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f20, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f20, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f20, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f20, f23, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f7, 0(x2) # load 0x00000200 from memory into f7
la x2, scratch
li x3, 0x75f36df2 # load x3 with value 0x75f36df2
sw x3, 0(x2) # store 0x75f36df2 in memory
flh f18, 0(x2) # load 0x75f36df2 from memory into f18
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f9, 0(x2) # load 0x0000be00 from memory into f9
fnmadd.h f28, f7, f18, f9, dyn # perform operation
fnmadd.h f28, f7, f18, f9, rdn # perform operation
fnmadd.h f28, f7, f18, f9, rmm # perform operation
fnmadd.h f28, f7, f18, f9, rne # perform operation
fnmadd.h f28, f7, f18, f9, rtz # perform operation
fnmadd.h f28, f7, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f7, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f7, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f7, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f7, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f7, f18, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x4000)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f3, 0(x2) # load 0x00000200 from memory into f3
la x2, scratch
li x3, 0xfe036200 # load x3 with value 0xfe036200
sw x3, 0(x2) # store 0xfe036200 in memory
flh f17, 0(x2) # load 0xfe036200 from memory into f17
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f19, 0(x2) # load 0x00004000 from memory into f19
fnmadd.h f28, f3, f17, f19, dyn # perform operation
fnmadd.h f28, f3, f17, f19, rdn # perform operation
fnmadd.h f28, f3, f17, f19, rmm # perform operation
fnmadd.h f28, f3, f17, f19, rne # perform operation
fnmadd.h f28, f3, f17, f19, rtz # perform operation
fnmadd.h f28, f3, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f3, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f3, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f3, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f3, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f3, f17, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xc000)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f10, 0(x2) # load 0x00000200 from memory into f10
la x2, scratch
li x3, 0xd12e6c07 # load x3 with value 0xd12e6c07
sw x3, 0(x2) # store 0xd12e6c07 in memory
flh f31, 0(x2) # load 0xd12e6c07 from memory into f31
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
fnmadd.h f3, f10, f31, f2, dyn # perform operation
fnmadd.h f3, f10, f31, f2, rdn # perform operation
fnmadd.h f3, f10, f31, f2, rmm # perform operation
fnmadd.h f3, f10, f31, f2, rne # perform operation
fnmadd.h f3, f10, f31, f2, rtz # perform operation
fnmadd.h f3, f10, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f10, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f10, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f10, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f10, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f10, f31, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x400)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
la x2, scratch
li x3, 0x042e668c # load x3 with value 0x042e668c
sw x3, 0(x2) # store 0x042e668c in memory
flh f31, 0(x2) # load 0x042e668c from memory into f31
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f26, 0(x2) # load 0x00000400 from memory into f26
fnmadd.h f7, f13, f31, f26, dyn # perform operation
fnmadd.h f7, f13, f31, f26, rdn # perform operation
fnmadd.h f7, f13, f31, f26, rmm # perform operation
fnmadd.h f7, f13, f31, f26, rne # perform operation
fnmadd.h f7, f13, f31, f26, rtz # perform operation
fnmadd.h f7, f13, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f13, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f13, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f13, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f13, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f13, f31, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x8400)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f12, 0(x2) # load 0x00000200 from memory into f12
la x2, scratch
li x3, 0xcf4eb47d # load x3 with value 0xcf4eb47d
sw x3, 0(x2) # store 0xcf4eb47d in memory
flh f15, 0(x2) # load 0xcf4eb47d from memory into f15
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f17, 0(x2) # load 0x00008400 from memory into f17
fnmadd.h f19, f12, f15, f17, dyn # perform operation
fnmadd.h f19, f12, f15, f17, rdn # perform operation
fnmadd.h f19, f12, f15, f17, rmm # perform operation
fnmadd.h f19, f12, f15, f17, rne # perform operation
fnmadd.h f19, f12, f15, f17, rtz # perform operation
fnmadd.h f19, f12, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f12, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f12, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f12, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f12, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f12, f15, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f28, 0(x2) # load 0x00000200 from memory into f28
la x2, scratch
li x3, 0xded914a3 # load x3 with value 0xded914a3
sw x3, 0(x2) # store 0xded914a3 in memory
flh f19, 0(x2) # load 0xded914a3 from memory into f19
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f20, 0(x2) # load 0x00007bff from memory into f20
fnmadd.h f25, f28, f19, f20, dyn # perform operation
fnmadd.h f25, f28, f19, f20, rdn # perform operation
fnmadd.h f25, f28, f19, f20, rmm # perform operation
fnmadd.h f25, f28, f19, f20, rne # perform operation
fnmadd.h f25, f28, f19, f20, rtz # perform operation
fnmadd.h f25, f28, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f28, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f28, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f28, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f28, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f28, f19, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f26, 0(x2) # load 0x00000200 from memory into f26
la x2, scratch
li x3, 0x67137b4e # load x3 with value 0x67137b4e
sw x3, 0(x2) # store 0x67137b4e in memory
flh f30, 0(x2) # load 0x67137b4e from memory into f30
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f21, 0(x2) # load 0x0000fbff from memory into f21
fnmadd.h f16, f26, f30, f21, dyn # perform operation
fnmadd.h f16, f26, f30, f21, rdn # perform operation
fnmadd.h f16, f26, f30, f21, rmm # perform operation
fnmadd.h f16, f26, f30, f21, rne # perform operation
fnmadd.h f16, f26, f30, f21, rtz # perform operation
fnmadd.h f16, f26, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f26, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f26, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f26, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f26, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f26, f30, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f18, 0(x2) # load 0x00000200 from memory into f18
la x2, scratch
li x3, 0x15256fee # load x3 with value 0x15256fee
sw x3, 0(x2) # store 0x15256fee in memory
flh f11, 0(x2) # load 0x15256fee from memory into f11
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f6, 0(x2) # load 0x000003ff from memory into f6
fnmadd.h f21, f18, f11, f6, dyn # perform operation
fnmadd.h f21, f18, f11, f6, rdn # perform operation
fnmadd.h f21, f18, f11, f6, rmm # perform operation
fnmadd.h f21, f18, f11, f6, rne # perform operation
fnmadd.h f21, f18, f11, f6, rtz # perform operation
fnmadd.h f21, f18, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f18, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f18, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f18, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f18, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f18, f11, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f16, 0(x2) # load 0x00000200 from memory into f16
la x2, scratch
li x3, 0x6286d005 # load x3 with value 0x6286d005
sw x3, 0(x2) # store 0x6286d005 in memory
flh f25, 0(x2) # load 0x6286d005 from memory into f25
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f29, 0(x2) # load 0x000083ff from memory into f29
fnmadd.h f6, f16, f25, f29, dyn # perform operation
fnmadd.h f6, f16, f25, f29, rdn # perform operation
fnmadd.h f6, f16, f25, f29, rmm # perform operation
fnmadd.h f6, f16, f25, f29, rne # perform operation
fnmadd.h f6, f16, f25, f29, rtz # perform operation
fnmadd.h f6, f16, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f16, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f16, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f16, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f16, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f16, f25, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x200)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f7, 0(x2) # load 0x00000200 from memory into f7
la x2, scratch
li x3, 0x5ca040f1 # load x3 with value 0x5ca040f1
sw x3, 0(x2) # store 0x5ca040f1 in memory
flh f1, 0(x2) # load 0x5ca040f1 from memory into f1
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f29, 0(x2) # load 0x00000200 from memory into f29
fnmadd.h f15, f7, f1, f29, dyn # perform operation
fnmadd.h f15, f7, f1, f29, rdn # perform operation
fnmadd.h f15, f7, f1, f29, rmm # perform operation
fnmadd.h f15, f7, f1, f29, rne # perform operation
fnmadd.h f15, f7, f1, f29, rtz # perform operation
fnmadd.h f15, f7, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f7, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f7, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f7, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f7, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f7, f1, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x8200)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
la x2, scratch
li x3, 0x7c4a9cf7 # load x3 with value 0x7c4a9cf7
sw x3, 0(x2) # store 0x7c4a9cf7 in memory
flh f30, 0(x2) # load 0x7c4a9cf7 from memory into f30
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f9, 0(x2) # load 0x00008200 from memory into f9
fnmadd.h f25, f19, f30, f9, dyn # perform operation
fnmadd.h f25, f19, f30, f9, rdn # perform operation
fnmadd.h f25, f19, f30, f9, rmm # perform operation
fnmadd.h f25, f19, f30, f9, rne # perform operation
fnmadd.h f25, f19, f30, f9, rtz # perform operation
fnmadd.h f25, f19, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f19, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f19, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f19, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f19, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f19, f30, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x1)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f5, 0(x2) # load 0x00000200 from memory into f5
la x2, scratch
li x3, 0xb4a09951 # load x3 with value 0xb4a09951
sw x3, 0(x2) # store 0xb4a09951 in memory
flh f22, 0(x2) # load 0xb4a09951 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f31, 0(x2) # load 0x00000001 from memory into f31
fnmadd.h f10, f5, f22, f31, dyn # perform operation
fnmadd.h f10, f5, f22, f31, rdn # perform operation
fnmadd.h f10, f5, f22, f31, rmm # perform operation
fnmadd.h f10, f5, f22, f31, rne # perform operation
fnmadd.h f10, f5, f22, f31, rtz # perform operation
fnmadd.h f10, f5, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f5, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f5, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f5, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f5, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f5, f22, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x8001)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f26, 0(x2) # load 0x00000200 from memory into f26
la x2, scratch
li x3, 0xb7cd62ed # load x3 with value 0xb7cd62ed
sw x3, 0(x2) # store 0xb7cd62ed in memory
flh f7, 0(x2) # load 0xb7cd62ed from memory into f7
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f19, 0(x2) # load 0x00008001 from memory into f19
fnmadd.h f28, f26, f7, f19, dyn # perform operation
fnmadd.h f28, f26, f7, f19, rdn # perform operation
fnmadd.h f28, f26, f7, f19, rmm # perform operation
fnmadd.h f28, f26, f7, f19, rne # perform operation
fnmadd.h f28, f26, f7, f19, rtz # perform operation
fnmadd.h f28, f26, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f26, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f26, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f26, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f26, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f26, f7, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f27, 0(x2) # load 0x00000200 from memory into f27
la x2, scratch
li x3, 0x0e361824 # load x3 with value 0x0e361824
sw x3, 0(x2) # store 0x0e361824 in memory
flh f31, 0(x2) # load 0x0e361824 from memory into f31
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f25, 0(x2) # load 0x00007c00 from memory into f25
fnmadd.h f26, f27, f31, f25, dyn # perform operation
fnmadd.h f26, f27, f31, f25, rdn # perform operation
fnmadd.h f26, f27, f31, f25, rmm # perform operation
fnmadd.h f26, f27, f31, f25, rne # perform operation
fnmadd.h f26, f27, f31, f25, rtz # perform operation
fnmadd.h f26, f27, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f27, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f27, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f27, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f27, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f27, f31, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f22, 0(x2) # load 0x00000200 from memory into f22
la x2, scratch
li x3, 0x5eddbcb9 # load x3 with value 0x5eddbcb9
sw x3, 0(x2) # store 0x5eddbcb9 in memory
flh f24, 0(x2) # load 0x5eddbcb9 from memory into f24
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f11, 0(x2) # load 0x0000fc00 from memory into f11
fnmadd.h f12, f22, f24, f11, dyn # perform operation
fnmadd.h f12, f22, f24, f11, rdn # perform operation
fnmadd.h f12, f22, f24, f11, rmm # perform operation
fnmadd.h f12, f22, f24, f11, rne # perform operation
fnmadd.h f12, f22, f24, f11, rtz # perform operation
fnmadd.h f12, f22, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f22, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f22, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f22, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f22, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f22, f24, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f22, 0(x2) # load 0x00000200 from memory into f22
la x2, scratch
li x3, 0x763c12ca # load x3 with value 0x763c12ca
sw x3, 0(x2) # store 0x763c12ca in memory
flh f19, 0(x2) # load 0x763c12ca from memory into f19
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f29, 0(x2) # load 0x00007e00 from memory into f29
fnmadd.h f23, f22, f19, f29, dyn # perform operation
fnmadd.h f23, f22, f19, f29, rdn # perform operation
fnmadd.h f23, f22, f19, f29, rmm # perform operation
fnmadd.h f23, f22, f19, f29, rne # perform operation
fnmadd.h f23, f22, f19, f29, rtz # perform operation
fnmadd.h f23, f22, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f22, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f22, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f22, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f22, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f22, f19, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f10, 0(x2) # load 0x00000200 from memory into f10
la x2, scratch
li x3, 0xa50e3064 # load x3 with value 0xa50e3064
sw x3, 0(x2) # store 0xa50e3064 in memory
flh f3, 0(x2) # load 0xa50e3064 from memory into f3
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f16, 0(x2) # load 0x00007fff from memory into f16
fnmadd.h f18, f10, f3, f16, dyn # perform operation
fnmadd.h f18, f10, f3, f16, rdn # perform operation
fnmadd.h f18, f10, f3, f16, rmm # perform operation
fnmadd.h f18, f10, f3, f16, rne # perform operation
fnmadd.h f18, f10, f3, f16, rtz # perform operation
fnmadd.h f18, f10, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f10, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f10, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f10, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f10, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f10, f3, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f29, 0(x2) # load 0x00000200 from memory into f29
la x2, scratch
li x3, 0xef19b739 # load x3 with value 0xef19b739
sw x3, 0(x2) # store 0xef19b739 in memory
flh f28, 0(x2) # load 0xef19b739 from memory into f28
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f3, 0(x2) # load 0x0000fe00 from memory into f3
fnmadd.h f24, f29, f28, f3, dyn # perform operation
fnmadd.h f24, f29, f28, f3, rdn # perform operation
fnmadd.h f24, f29, f28, f3, rmm # perform operation
fnmadd.h f24, f29, f28, f3, rne # perform operation
fnmadd.h f24, f29, f28, f3, rtz # perform operation
fnmadd.h f24, f29, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f29, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f29, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f29, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f29, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f29, f28, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f18, 0(x2) # load 0x00000200 from memory into f18
la x2, scratch
li x3, 0x91d78820 # load x3 with value 0x91d78820
sw x3, 0(x2) # store 0x91d78820 in memory
flh f31, 0(x2) # load 0x91d78820 from memory into f31
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f23, 0(x2) # load 0x00007c01 from memory into f23
fnmadd.h f15, f18, f31, f23, dyn # perform operation
fnmadd.h f15, f18, f31, f23, rdn # perform operation
fnmadd.h f15, f18, f31, f23, rmm # perform operation
fnmadd.h f15, f18, f31, f23, rne # perform operation
fnmadd.h f15, f18, f31, f23, rtz # perform operation
fnmadd.h f15, f18, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f18, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f18, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f18, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f18, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f18, f31, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
la x2, scratch
li x3, 0x74af8807 # load x3 with value 0x74af8807
sw x3, 0(x2) # store 0x74af8807 in memory
flh f5, 0(x2) # load 0x74af8807 from memory into f5
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f7, 0(x2) # load 0x00007dff from memory into f7
fnmadd.h f15, f19, f5, f7, dyn # perform operation
fnmadd.h f15, f19, f5, f7, rdn # perform operation
fnmadd.h f15, f19, f5, f7, rmm # perform operation
fnmadd.h f15, f19, f5, f7, rne # perform operation
fnmadd.h f15, f19, f5, f7, rtz # perform operation
fnmadd.h f15, f19, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f19, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f19, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f19, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f19, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f19, f5, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f8, 0(x2) # load 0x00000200 from memory into f8
la x2, scratch
li x3, 0x1b1e11e3 # load x3 with value 0x1b1e11e3
sw x3, 0(x2) # store 0x1b1e11e3 in memory
flh f16, 0(x2) # load 0x1b1e11e3 from memory into f16
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f30, 0(x2) # load 0x0000fc01 from memory into f30
fnmadd.h f26, f8, f16, f30, dyn # perform operation
fnmadd.h f26, f8, f16, f30, rdn # perform operation
fnmadd.h f26, f8, f16, f30, rmm # perform operation
fnmadd.h f26, f8, f16, f30, rne # perform operation
fnmadd.h f26, f8, f16, f30, rtz # perform operation
fnmadd.h f26, f8, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f8, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f8, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f8, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f8, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f8, f16, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f21, 0(x2) # load 0x00000200 from memory into f21
la x2, scratch
li x3, 0x6cbe7213 # load x3 with value 0x6cbe7213
sw x3, 0(x2) # store 0x6cbe7213 in memory
flh f29, 0(x2) # load 0x6cbe7213 from memory into f29
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f18, 0(x2) # load 0x000058b4 from memory into f18
fnmadd.h f23, f21, f29, f18, dyn # perform operation
fnmadd.h f23, f21, f29, f18, rdn # perform operation
fnmadd.h f23, f21, f29, f18, rmm # perform operation
fnmadd.h f23, f21, f29, f18, rne # perform operation
fnmadd.h f23, f21, f29, f18, rtz # perform operation
fnmadd.h f23, f21, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f21, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f21, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f21, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f21, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f21, f29, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f26, 0(x2) # load 0x00000200 from memory into f26
la x2, scratch
li x3, 0xef3ab3d4 # load x3 with value 0xef3ab3d4
sw x3, 0(x2) # store 0xef3ab3d4 in memory
flh f2, 0(x2) # load 0xef3ab3d4 from memory into f2
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f13, 0(x2) # load 0x0000c93a from memory into f13
fnmadd.h f17, f26, f2, f13, dyn # perform operation
fnmadd.h f17, f26, f2, f13, rdn # perform operation
fnmadd.h f17, f26, f2, f13, rmm # perform operation
fnmadd.h f17, f26, f2, f13, rne # perform operation
fnmadd.h f17, f26, f2, f13, rtz # perform operation
fnmadd.h f17, f26, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f26, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f26, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f26, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f26, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f26, f2, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x0)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f26, 0(x2) # load 0x00008200 from memory into f26
la x2, scratch
li x3, 0x1a514b52 # load x3 with value 0x1a514b52
sw x3, 0(x2) # store 0x1a514b52 in memory
flh f28, 0(x2) # load 0x1a514b52 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f15, 0(x2) # load 0x00000000 from memory into f15
fnmadd.h f24, f26, f28, f15, dyn # perform operation
fnmadd.h f24, f26, f28, f15, rdn # perform operation
fnmadd.h f24, f26, f28, f15, rmm # perform operation
fnmadd.h f24, f26, f28, f15, rne # perform operation
fnmadd.h f24, f26, f28, f15, rtz # perform operation
fnmadd.h f24, f26, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f26, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f26, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f26, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f26, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f26, f28, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x8000)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f24, 0(x2) # load 0x00008200 from memory into f24
la x2, scratch
li x3, 0x3d32204b # load x3 with value 0x3d32204b
sw x3, 0(x2) # store 0x3d32204b in memory
flh f10, 0(x2) # load 0x3d32204b from memory into f10
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f21, 0(x2) # load 0x00008000 from memory into f21
fnmadd.h f19, f24, f10, f21, dyn # perform operation
fnmadd.h f19, f24, f10, f21, rdn # perform operation
fnmadd.h f19, f24, f10, f21, rmm # perform operation
fnmadd.h f19, f24, f10, f21, rne # perform operation
fnmadd.h f19, f24, f10, f21, rtz # perform operation
fnmadd.h f19, f24, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f24, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f24, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f24, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f24, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f24, f10, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f10, 0(x2) # load 0x00008200 from memory into f10
la x2, scratch
li x3, 0xf2a440f2 # load x3 with value 0xf2a440f2
sw x3, 0(x2) # store 0xf2a440f2 in memory
flh f7, 0(x2) # load 0xf2a440f2 from memory into f7
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f15, 0(x2) # load 0x00003c00 from memory into f15
fnmadd.h f20, f10, f7, f15, dyn # perform operation
fnmadd.h f20, f10, f7, f15, rdn # perform operation
fnmadd.h f20, f10, f7, f15, rmm # perform operation
fnmadd.h f20, f10, f7, f15, rne # perform operation
fnmadd.h f20, f10, f7, f15, rtz # perform operation
fnmadd.h f20, f10, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f10, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f10, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f10, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f10, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f10, f7, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f11, 0(x2) # load 0x00008200 from memory into f11
la x2, scratch
li x3, 0xa7298537 # load x3 with value 0xa7298537
sw x3, 0(x2) # store 0xa7298537 in memory
flh f27, 0(x2) # load 0xa7298537 from memory into f27
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f7, 0(x2) # load 0x0000bc00 from memory into f7
fnmadd.h f23, f11, f27, f7, dyn # perform operation
fnmadd.h f23, f11, f27, f7, rdn # perform operation
fnmadd.h f23, f11, f27, f7, rmm # perform operation
fnmadd.h f23, f11, f27, f7, rne # perform operation
fnmadd.h f23, f11, f27, f7, rtz # perform operation
fnmadd.h f23, f11, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f11, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f11, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f11, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f11, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f11, f27, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f11, 0(x2) # load 0x00008200 from memory into f11
la x2, scratch
li x3, 0x51e38b57 # load x3 with value 0x51e38b57
sw x3, 0(x2) # store 0x51e38b57 in memory
flh f10, 0(x2) # load 0x51e38b57 from memory into f10
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f24, 0(x2) # load 0x00003e00 from memory into f24
fnmadd.h f17, f11, f10, f24, dyn # perform operation
fnmadd.h f17, f11, f10, f24, rdn # perform operation
fnmadd.h f17, f11, f10, f24, rmm # perform operation
fnmadd.h f17, f11, f10, f24, rne # perform operation
fnmadd.h f17, f11, f10, f24, rtz # perform operation
fnmadd.h f17, f11, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f11, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f11, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f11, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f11, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f11, f10, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f9, 0(x2) # load 0x00008200 from memory into f9
la x2, scratch
li x3, 0xe68cfb0e # load x3 with value 0xe68cfb0e
sw x3, 0(x2) # store 0xe68cfb0e in memory
flh f23, 0(x2) # load 0xe68cfb0e from memory into f23
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f22, 0(x2) # load 0x0000be00 from memory into f22
fnmadd.h f12, f9, f23, f22, dyn # perform operation
fnmadd.h f12, f9, f23, f22, rdn # perform operation
fnmadd.h f12, f9, f23, f22, rmm # perform operation
fnmadd.h f12, f9, f23, f22, rne # perform operation
fnmadd.h f12, f9, f23, f22, rtz # perform operation
fnmadd.h f12, f9, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f9, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f9, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f9, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f9, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f9, f23, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x4000)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f13, 0(x2) # load 0x00008200 from memory into f13
la x2, scratch
li x3, 0x80393ca1 # load x3 with value 0x80393ca1
sw x3, 0(x2) # store 0x80393ca1 in memory
flh f12, 0(x2) # load 0x80393ca1 from memory into f12
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f25, 0(x2) # load 0x00004000 from memory into f25
fnmadd.h f26, f13, f12, f25, dyn # perform operation
fnmadd.h f26, f13, f12, f25, rdn # perform operation
fnmadd.h f26, f13, f12, f25, rmm # perform operation
fnmadd.h f26, f13, f12, f25, rne # perform operation
fnmadd.h f26, f13, f12, f25, rtz # perform operation
fnmadd.h f26, f13, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f13, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f13, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f13, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f13, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f13, f12, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xc000)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f27, 0(x2) # load 0x00008200 from memory into f27
la x2, scratch
li x3, 0xa078ab65 # load x3 with value 0xa078ab65
sw x3, 0(x2) # store 0xa078ab65 in memory
flh f2, 0(x2) # load 0xa078ab65 from memory into f2
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f25, 0(x2) # load 0x0000c000 from memory into f25
fnmadd.h f3, f27, f2, f25, dyn # perform operation
fnmadd.h f3, f27, f2, f25, rdn # perform operation
fnmadd.h f3, f27, f2, f25, rmm # perform operation
fnmadd.h f3, f27, f2, f25, rne # perform operation
fnmadd.h f3, f27, f2, f25, rtz # perform operation
fnmadd.h f3, f27, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f27, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f27, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f27, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f27, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f27, f2, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x400)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f20, 0(x2) # load 0x00008200 from memory into f20
la x2, scratch
li x3, 0x9e8b3d36 # load x3 with value 0x9e8b3d36
sw x3, 0(x2) # store 0x9e8b3d36 in memory
flh f13, 0(x2) # load 0x9e8b3d36 from memory into f13
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f27, 0(x2) # load 0x00000400 from memory into f27
fnmadd.h f30, f20, f13, f27, dyn # perform operation
fnmadd.h f30, f20, f13, f27, rdn # perform operation
fnmadd.h f30, f20, f13, f27, rmm # perform operation
fnmadd.h f30, f20, f13, f27, rne # perform operation
fnmadd.h f30, f20, f13, f27, rtz # perform operation
fnmadd.h f30, f20, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f20, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f20, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f20, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f20, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f20, f13, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x8400)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
la x2, scratch
li x3, 0x08cce445 # load x3 with value 0x08cce445
sw x3, 0(x2) # store 0x08cce445 in memory
flh f24, 0(x2) # load 0x08cce445 from memory into f24
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
fnmadd.h f5, f6, f24, f15, dyn # perform operation
fnmadd.h f5, f6, f24, f15, rdn # perform operation
fnmadd.h f5, f6, f24, f15, rmm # perform operation
fnmadd.h f5, f6, f24, f15, rne # perform operation
fnmadd.h f5, f6, f24, f15, rtz # perform operation
fnmadd.h f5, f6, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f6, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f6, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f6, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f6, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f6, f24, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f26, 0(x2) # load 0x00008200 from memory into f26
la x2, scratch
li x3, 0x2f94aaea # load x3 with value 0x2f94aaea
sw x3, 0(x2) # store 0x2f94aaea in memory
flh f24, 0(x2) # load 0x2f94aaea from memory into f24
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f14, 0(x2) # load 0x00007bff from memory into f14
fnmadd.h f8, f26, f24, f14, dyn # perform operation
fnmadd.h f8, f26, f24, f14, rdn # perform operation
fnmadd.h f8, f26, f24, f14, rmm # perform operation
fnmadd.h f8, f26, f24, f14, rne # perform operation
fnmadd.h f8, f26, f24, f14, rtz # perform operation
fnmadd.h f8, f26, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f26, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f26, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f26, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f26, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f26, f24, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f3, 0(x2) # load 0x00008200 from memory into f3
la x2, scratch
li x3, 0xca4495a6 # load x3 with value 0xca4495a6
sw x3, 0(x2) # store 0xca4495a6 in memory
flh f24, 0(x2) # load 0xca4495a6 from memory into f24
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f8, 0(x2) # load 0x0000fbff from memory into f8
fnmadd.h f5, f3, f24, f8, dyn # perform operation
fnmadd.h f5, f3, f24, f8, rdn # perform operation
fnmadd.h f5, f3, f24, f8, rmm # perform operation
fnmadd.h f5, f3, f24, f8, rne # perform operation
fnmadd.h f5, f3, f24, f8, rtz # perform operation
fnmadd.h f5, f3, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f3, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f3, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f3, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f3, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f3, f24, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f22, 0(x2) # load 0x00008200 from memory into f22
la x2, scratch
li x3, 0x0f9867ea # load x3 with value 0x0f9867ea
sw x3, 0(x2) # store 0x0f9867ea in memory
flh f14, 0(x2) # load 0x0f9867ea from memory into f14
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f17, 0(x2) # load 0x000003ff from memory into f17
fnmadd.h f9, f22, f14, f17, dyn # perform operation
fnmadd.h f9, f22, f14, f17, rdn # perform operation
fnmadd.h f9, f22, f14, f17, rmm # perform operation
fnmadd.h f9, f22, f14, f17, rne # perform operation
fnmadd.h f9, f22, f14, f17, rtz # perform operation
fnmadd.h f9, f22, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f22, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f22, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f22, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f22, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f22, f14, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f12, 0(x2) # load 0x00008200 from memory into f12
la x2, scratch
li x3, 0x18281d02 # load x3 with value 0x18281d02
sw x3, 0(x2) # store 0x18281d02 in memory
flh f16, 0(x2) # load 0x18281d02 from memory into f16
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f21, 0(x2) # load 0x000083ff from memory into f21
fnmadd.h f26, f12, f16, f21, dyn # perform operation
fnmadd.h f26, f12, f16, f21, rdn # perform operation
fnmadd.h f26, f12, f16, f21, rmm # perform operation
fnmadd.h f26, f12, f16, f21, rne # perform operation
fnmadd.h f26, f12, f16, f21, rtz # perform operation
fnmadd.h f26, f12, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f12, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f12, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f12, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f12, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f12, f16, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x200)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f2, 0(x2) # load 0x00008200 from memory into f2
la x2, scratch
li x3, 0xc38777f6 # load x3 with value 0xc38777f6
sw x3, 0(x2) # store 0xc38777f6 in memory
flh f20, 0(x2) # load 0xc38777f6 from memory into f20
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f17, 0(x2) # load 0x00000200 from memory into f17
fnmadd.h f13, f2, f20, f17, dyn # perform operation
fnmadd.h f13, f2, f20, f17, rdn # perform operation
fnmadd.h f13, f2, f20, f17, rmm # perform operation
fnmadd.h f13, f2, f20, f17, rne # perform operation
fnmadd.h f13, f2, f20, f17, rtz # perform operation
fnmadd.h f13, f2, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f2, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f2, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f2, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f2, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f2, f20, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x8200)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f25, 0(x2) # load 0x00008200 from memory into f25
la x2, scratch
li x3, 0xc7f7657f # load x3 with value 0xc7f7657f
sw x3, 0(x2) # store 0xc7f7657f in memory
flh f12, 0(x2) # load 0xc7f7657f from memory into f12
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f24, 0(x2) # load 0x00008200 from memory into f24
fnmadd.h f17, f25, f12, f24, dyn # perform operation
fnmadd.h f17, f25, f12, f24, rdn # perform operation
fnmadd.h f17, f25, f12, f24, rmm # perform operation
fnmadd.h f17, f25, f12, f24, rne # perform operation
fnmadd.h f17, f25, f12, f24, rtz # perform operation
fnmadd.h f17, f25, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f25, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f25, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f25, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f25, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f25, f12, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x1)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
la x2, scratch
li x3, 0xc93ff731 # load x3 with value 0xc93ff731
sw x3, 0(x2) # store 0xc93ff731 in memory
flh f19, 0(x2) # load 0xc93ff731 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
fnmadd.h f9, f17, f19, f10, dyn # perform operation
fnmadd.h f9, f17, f19, f10, rdn # perform operation
fnmadd.h f9, f17, f19, f10, rmm # perform operation
fnmadd.h f9, f17, f19, f10, rne # perform operation
fnmadd.h f9, f17, f19, f10, rtz # perform operation
fnmadd.h f9, f17, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f17, f19, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x8001)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f21, 0(x2) # load 0x00008200 from memory into f21
la x2, scratch
li x3, 0x15ea75a3 # load x3 with value 0x15ea75a3
sw x3, 0(x2) # store 0x15ea75a3 in memory
flh f13, 0(x2) # load 0x15ea75a3 from memory into f13
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f29, 0(x2) # load 0x00008001 from memory into f29
fnmadd.h f31, f21, f13, f29, dyn # perform operation
fnmadd.h f31, f21, f13, f29, rdn # perform operation
fnmadd.h f31, f21, f13, f29, rmm # perform operation
fnmadd.h f31, f21, f13, f29, rne # perform operation
fnmadd.h f31, f21, f13, f29, rtz # perform operation
fnmadd.h f31, f21, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f21, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f21, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f21, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f21, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f21, f13, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f15, 0(x2) # load 0x00008200 from memory into f15
la x2, scratch
li x3, 0xb7b78e18 # load x3 with value 0xb7b78e18
sw x3, 0(x2) # store 0xb7b78e18 in memory
flh f23, 0(x2) # load 0xb7b78e18 from memory into f23
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f1, 0(x2) # load 0x00007c00 from memory into f1
fnmadd.h f9, f15, f23, f1, dyn # perform operation
fnmadd.h f9, f15, f23, f1, rdn # perform operation
fnmadd.h f9, f15, f23, f1, rmm # perform operation
fnmadd.h f9, f15, f23, f1, rne # perform operation
fnmadd.h f9, f15, f23, f1, rtz # perform operation
fnmadd.h f9, f15, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f15, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f15, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f15, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f15, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f15, f23, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f25, 0(x2) # load 0x00008200 from memory into f25
la x2, scratch
li x3, 0x653a238b # load x3 with value 0x653a238b
sw x3, 0(x2) # store 0x653a238b in memory
flh f30, 0(x2) # load 0x653a238b from memory into f30
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f5, 0(x2) # load 0x0000fc00 from memory into f5
fnmadd.h f13, f25, f30, f5, dyn # perform operation
fnmadd.h f13, f25, f30, f5, rdn # perform operation
fnmadd.h f13, f25, f30, f5, rmm # perform operation
fnmadd.h f13, f25, f30, f5, rne # perform operation
fnmadd.h f13, f25, f30, f5, rtz # perform operation
fnmadd.h f13, f25, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f25, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f25, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f25, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f25, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f25, f30, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f8, 0(x2) # load 0x00008200 from memory into f8
la x2, scratch
li x3, 0x6efec685 # load x3 with value 0x6efec685
sw x3, 0(x2) # store 0x6efec685 in memory
flh f26, 0(x2) # load 0x6efec685 from memory into f26
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
fnmadd.h f18, f8, f26, f24, dyn # perform operation
fnmadd.h f18, f8, f26, f24, rdn # perform operation
fnmadd.h f18, f8, f26, f24, rmm # perform operation
fnmadd.h f18, f8, f26, f24, rne # perform operation
fnmadd.h f18, f8, f26, f24, rtz # perform operation
fnmadd.h f18, f8, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f8, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f8, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f8, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f8, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f8, f26, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f1, 0(x2) # load 0x00008200 from memory into f1
la x2, scratch
li x3, 0x4cacebc2 # load x3 with value 0x4cacebc2
sw x3, 0(x2) # store 0x4cacebc2 in memory
flh f5, 0(x2) # load 0x4cacebc2 from memory into f5
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f14, 0(x2) # load 0x00007fff from memory into f14
fnmadd.h f29, f1, f5, f14, dyn # perform operation
fnmadd.h f29, f1, f5, f14, rdn # perform operation
fnmadd.h f29, f1, f5, f14, rmm # perform operation
fnmadd.h f29, f1, f5, f14, rne # perform operation
fnmadd.h f29, f1, f5, f14, rtz # perform operation
fnmadd.h f29, f1, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f1, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f1, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f1, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f1, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f1, f5, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f3, 0(x2) # load 0x00008200 from memory into f3
la x2, scratch
li x3, 0x7713d521 # load x3 with value 0x7713d521
sw x3, 0(x2) # store 0x7713d521 in memory
flh f28, 0(x2) # load 0x7713d521 from memory into f28
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f24, 0(x2) # load 0x0000fe00 from memory into f24
fnmadd.h f15, f3, f28, f24, dyn # perform operation
fnmadd.h f15, f3, f28, f24, rdn # perform operation
fnmadd.h f15, f3, f28, f24, rmm # perform operation
fnmadd.h f15, f3, f28, f24, rne # perform operation
fnmadd.h f15, f3, f28, f24, rtz # perform operation
fnmadd.h f15, f3, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f3, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f3, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f3, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f3, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f3, f28, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f9, 0(x2) # load 0x00008200 from memory into f9
la x2, scratch
li x3, 0xb8e1083a # load x3 with value 0xb8e1083a
sw x3, 0(x2) # store 0xb8e1083a in memory
flh f6, 0(x2) # load 0xb8e1083a from memory into f6
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f15, 0(x2) # load 0x00007c01 from memory into f15
fnmadd.h f5, f9, f6, f15, dyn # perform operation
fnmadd.h f5, f9, f6, f15, rdn # perform operation
fnmadd.h f5, f9, f6, f15, rmm # perform operation
fnmadd.h f5, f9, f6, f15, rne # perform operation
fnmadd.h f5, f9, f6, f15, rtz # perform operation
fnmadd.h f5, f9, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f9, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f9, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f9, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f9, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f9, f6, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
la x2, scratch
li x3, 0xd398294c # load x3 with value 0xd398294c
sw x3, 0(x2) # store 0xd398294c in memory
flh f26, 0(x2) # load 0xd398294c from memory into f26
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f30, 0(x2) # load 0x00007dff from memory into f30
fnmadd.h f3, f17, f26, f30, dyn # perform operation
fnmadd.h f3, f17, f26, f30, rdn # perform operation
fnmadd.h f3, f17, f26, f30, rmm # perform operation
fnmadd.h f3, f17, f26, f30, rne # perform operation
fnmadd.h f3, f17, f26, f30, rtz # perform operation
fnmadd.h f3, f17, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f17, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f17, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f17, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f17, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f17, f26, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f13, 0(x2) # load 0x00008200 from memory into f13
la x2, scratch
li x3, 0xd708348a # load x3 with value 0xd708348a
sw x3, 0(x2) # store 0xd708348a in memory
flh f17, 0(x2) # load 0xd708348a from memory into f17
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f24, 0(x2) # load 0x0000fc01 from memory into f24
fnmadd.h f25, f13, f17, f24, dyn # perform operation
fnmadd.h f25, f13, f17, f24, rdn # perform operation
fnmadd.h f25, f13, f17, f24, rmm # perform operation
fnmadd.h f25, f13, f17, f24, rne # perform operation
fnmadd.h f25, f13, f17, f24, rtz # perform operation
fnmadd.h f25, f13, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f13, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f13, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f13, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f13, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f13, f17, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f8, 0(x2) # load 0x00008200 from memory into f8
la x2, scratch
li x3, 0x16961ef4 # load x3 with value 0x16961ef4
sw x3, 0(x2) # store 0x16961ef4 in memory
flh f14, 0(x2) # load 0x16961ef4 from memory into f14
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f23, 0(x2) # load 0x000058b4 from memory into f23
fnmadd.h f26, f8, f14, f23, dyn # perform operation
fnmadd.h f26, f8, f14, f23, rdn # perform operation
fnmadd.h f26, f8, f14, f23, rmm # perform operation
fnmadd.h f26, f8, f14, f23, rne # perform operation
fnmadd.h f26, f8, f14, f23, rtz # perform operation
fnmadd.h f26, f8, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f8, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f8, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f8, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f8, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f8, f14, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f15, 0(x2) # load 0x00008200 from memory into f15
la x2, scratch
li x3, 0xbe8fbb4d # load x3 with value 0xbe8fbb4d
sw x3, 0(x2) # store 0xbe8fbb4d in memory
flh f31, 0(x2) # load 0xbe8fbb4d from memory into f31
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f26, 0(x2) # load 0x0000c93a from memory into f26
fnmadd.h f28, f15, f31, f26, dyn # perform operation
fnmadd.h f28, f15, f31, f26, rdn # perform operation
fnmadd.h f28, f15, f31, f26, rmm # perform operation
fnmadd.h f28, f15, f31, f26, rne # perform operation
fnmadd.h f28, f15, f31, f26, rtz # perform operation
fnmadd.h f28, f15, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f15, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f15, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f15, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f15, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f15, f31, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0xe24efb82 # load x3 with value 0xe24efb82
sw x3, 0(x2) # store 0xe24efb82 in memory
flh f6, 0(x2) # load 0xe24efb82 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f1, 0(x2) # load 0x00000000 from memory into f1
fnmadd.h f23, f11, f6, f1, dyn # perform operation
fnmadd.h f23, f11, f6, f1, rdn # perform operation
fnmadd.h f23, f11, f6, f1, rmm # perform operation
fnmadd.h f23, f11, f6, f1, rne # perform operation
fnmadd.h f23, f11, f6, f1, rtz # perform operation
fnmadd.h f23, f11, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f11, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f11, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f11, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f11, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f11, f6, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x1bead8de # load x3 with value 0x1bead8de
sw x3, 0(x2) # store 0x1bead8de in memory
flh f1, 0(x2) # load 0x1bead8de from memory into f1
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f8, 0(x2) # load 0x00008000 from memory into f8
fnmadd.h f3, f7, f1, f8, dyn # perform operation
fnmadd.h f3, f7, f1, f8, rdn # perform operation
fnmadd.h f3, f7, f1, f8, rmm # perform operation
fnmadd.h f3, f7, f1, f8, rne # perform operation
fnmadd.h f3, f7, f1, f8, rtz # perform operation
fnmadd.h f3, f7, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f7, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f7, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f7, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f7, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f7, f1, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x8dc02e0d # load x3 with value 0x8dc02e0d
sw x3, 0(x2) # store 0x8dc02e0d in memory
flh f30, 0(x2) # load 0x8dc02e0d from memory into f30
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
fnmadd.h f19, f10, f30, f8, dyn # perform operation
fnmadd.h f19, f10, f30, f8, rdn # perform operation
fnmadd.h f19, f10, f30, f8, rmm # perform operation
fnmadd.h f19, f10, f30, f8, rne # perform operation
fnmadd.h f19, f10, f30, f8, rtz # perform operation
fnmadd.h f19, f10, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f10, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f10, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f10, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f10, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f10, f30, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x95bd999a # load x3 with value 0x95bd999a
sw x3, 0(x2) # store 0x95bd999a in memory
flh f22, 0(x2) # load 0x95bd999a from memory into f22
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f1, 0(x2) # load 0x0000bc00 from memory into f1
fnmadd.h f6, f15, f22, f1, dyn # perform operation
fnmadd.h f6, f15, f22, f1, rdn # perform operation
fnmadd.h f6, f15, f22, f1, rmm # perform operation
fnmadd.h f6, f15, f22, f1, rne # perform operation
fnmadd.h f6, f15, f22, f1, rtz # perform operation
fnmadd.h f6, f15, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f15, f22, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x24e4faa9 # load x3 with value 0x24e4faa9
sw x3, 0(x2) # store 0x24e4faa9 in memory
flh f24, 0(x2) # load 0x24e4faa9 from memory into f24
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f6, 0(x2) # load 0x00003e00 from memory into f6
fnmadd.h f23, f9, f24, f6, dyn # perform operation
fnmadd.h f23, f9, f24, f6, rdn # perform operation
fnmadd.h f23, f9, f24, f6, rmm # perform operation
fnmadd.h f23, f9, f24, f6, rne # perform operation
fnmadd.h f23, f9, f24, f6, rtz # perform operation
fnmadd.h f23, f9, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f9, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f9, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f9, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f9, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f9, f24, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0xa9275c1f # load x3 with value 0xa9275c1f
sw x3, 0(x2) # store 0xa9275c1f in memory
flh f30, 0(x2) # load 0xa9275c1f from memory into f30
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f12, 0(x2) # load 0x0000be00 from memory into f12
fnmadd.h f19, f27, f30, f12, dyn # perform operation
fnmadd.h f19, f27, f30, f12, rdn # perform operation
fnmadd.h f19, f27, f30, f12, rmm # perform operation
fnmadd.h f19, f27, f30, f12, rne # perform operation
fnmadd.h f19, f27, f30, f12, rtz # perform operation
fnmadd.h f19, f27, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f27, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f27, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f27, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f27, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f27, f30, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x4000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0xddfd2b39 # load x3 with value 0xddfd2b39
sw x3, 0(x2) # store 0xddfd2b39 in memory
flh f27, 0(x2) # load 0xddfd2b39 from memory into f27
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f20, 0(x2) # load 0x00004000 from memory into f20
fnmadd.h f23, f30, f27, f20, dyn # perform operation
fnmadd.h f23, f30, f27, f20, rdn # perform operation
fnmadd.h f23, f30, f27, f20, rmm # perform operation
fnmadd.h f23, f30, f27, f20, rne # perform operation
fnmadd.h f23, f30, f27, f20, rtz # perform operation
fnmadd.h f23, f30, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f30, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f30, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f30, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f30, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f30, f27, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0x0c0bdde4 # load x3 with value 0x0c0bdde4
sw x3, 0(x2) # store 0x0c0bdde4 in memory
flh f7, 0(x2) # load 0x0c0bdde4 from memory into f7
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f6, 0(x2) # load 0x0000c000 from memory into f6
fnmadd.h f23, f21, f7, f6, dyn # perform operation
fnmadd.h f23, f21, f7, f6, rdn # perform operation
fnmadd.h f23, f21, f7, f6, rmm # perform operation
fnmadd.h f23, f21, f7, f6, rne # perform operation
fnmadd.h f23, f21, f7, f6, rtz # perform operation
fnmadd.h f23, f21, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f21, f7, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0xec4a6aac # load x3 with value 0xec4a6aac
sw x3, 0(x2) # store 0xec4a6aac in memory
flh f2, 0(x2) # load 0xec4a6aac from memory into f2
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f22, 0(x2) # load 0x00000400 from memory into f22
fnmadd.h f21, f5, f2, f22, dyn # perform operation
fnmadd.h f21, f5, f2, f22, rdn # perform operation
fnmadd.h f21, f5, f2, f22, rmm # perform operation
fnmadd.h f21, f5, f2, f22, rne # perform operation
fnmadd.h f21, f5, f2, f22, rtz # perform operation
fnmadd.h f21, f5, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f5, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f5, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f5, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f5, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f5, f2, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8400)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f1, 0(x2) # load 0x00000001 from memory into f1
la x2, scratch
li x3, 0x6187b548 # load x3 with value 0x6187b548
sw x3, 0(x2) # store 0x6187b548 in memory
flh f12, 0(x2) # load 0x6187b548 from memory into f12
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f9, 0(x2) # load 0x00008400 from memory into f9
fnmadd.h f27, f1, f12, f9, dyn # perform operation
fnmadd.h f27, f1, f12, f9, rdn # perform operation
fnmadd.h f27, f1, f12, f9, rmm # perform operation
fnmadd.h f27, f1, f12, f9, rne # perform operation
fnmadd.h f27, f1, f12, f9, rtz # perform operation
fnmadd.h f27, f1, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f1, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f1, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f1, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f1, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f1, f12, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x95d6c89d # load x3 with value 0x95d6c89d
sw x3, 0(x2) # store 0x95d6c89d in memory
flh f20, 0(x2) # load 0x95d6c89d from memory into f20
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f31, 0(x2) # load 0x00007bff from memory into f31
fnmadd.h f9, f17, f20, f31, dyn # perform operation
fnmadd.h f9, f17, f20, f31, rdn # perform operation
fnmadd.h f9, f17, f20, f31, rmm # perform operation
fnmadd.h f9, f17, f20, f31, rne # perform operation
fnmadd.h f9, f17, f20, f31, rtz # perform operation
fnmadd.h f9, f17, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f17, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f17, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f17, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f17, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f17, f20, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0x87239414 # load x3 with value 0x87239414
sw x3, 0(x2) # store 0x87239414 in memory
flh f15, 0(x2) # load 0x87239414 from memory into f15
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f9, 0(x2) # load 0x0000fbff from memory into f9
fnmadd.h f20, f6, f15, f9, dyn # perform operation
fnmadd.h f20, f6, f15, f9, rdn # perform operation
fnmadd.h f20, f6, f15, f9, rmm # perform operation
fnmadd.h f20, f6, f15, f9, rne # perform operation
fnmadd.h f20, f6, f15, f9, rtz # perform operation
fnmadd.h f20, f6, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f6, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f6, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f6, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f6, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f6, f15, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0x5052fc6a # load x3 with value 0x5052fc6a
sw x3, 0(x2) # store 0x5052fc6a in memory
flh f29, 0(x2) # load 0x5052fc6a from memory into f29
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f27, 0(x2) # load 0x000003ff from memory into f27
fnmadd.h f1, f22, f29, f27, dyn # perform operation
fnmadd.h f1, f22, f29, f27, rdn # perform operation
fnmadd.h f1, f22, f29, f27, rmm # perform operation
fnmadd.h f1, f22, f29, f27, rne # perform operation
fnmadd.h f1, f22, f29, f27, rtz # perform operation
fnmadd.h f1, f22, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f22, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f22, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f22, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f22, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f22, f29, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0xf0a16e1a # load x3 with value 0xf0a16e1a
sw x3, 0(x2) # store 0xf0a16e1a in memory
flh f1, 0(x2) # load 0xf0a16e1a from memory into f1
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f5, 0(x2) # load 0x000083ff from memory into f5
fnmadd.h f25, f17, f1, f5, dyn # perform operation
fnmadd.h f25, f17, f1, f5, rdn # perform operation
fnmadd.h f25, f17, f1, f5, rmm # perform operation
fnmadd.h f25, f17, f1, f5, rne # perform operation
fnmadd.h f25, f17, f1, f5, rtz # perform operation
fnmadd.h f25, f17, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f17, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f17, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f17, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f17, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f17, f1, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x200)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0xdb4d4f39 # load x3 with value 0xdb4d4f39
sw x3, 0(x2) # store 0xdb4d4f39 in memory
flh f27, 0(x2) # load 0xdb4d4f39 from memory into f27
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f22, 0(x2) # load 0x00000200 from memory into f22
fnmadd.h f29, f11, f27, f22, dyn # perform operation
fnmadd.h f29, f11, f27, f22, rdn # perform operation
fnmadd.h f29, f11, f27, f22, rmm # perform operation
fnmadd.h f29, f11, f27, f22, rne # perform operation
fnmadd.h f29, f11, f27, f22, rtz # perform operation
fnmadd.h f29, f11, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f11, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f11, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f11, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f11, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f11, f27, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8200)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0xe477c8a4 # load x3 with value 0xe477c8a4
sw x3, 0(x2) # store 0xe477c8a4 in memory
flh f1, 0(x2) # load 0xe477c8a4 from memory into f1
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f2, 0(x2) # load 0x00008200 from memory into f2
fnmadd.h f22, f15, f1, f2, dyn # perform operation
fnmadd.h f22, f15, f1, f2, rdn # perform operation
fnmadd.h f22, f15, f1, f2, rmm # perform operation
fnmadd.h f22, f15, f1, f2, rne # perform operation
fnmadd.h f22, f15, f1, f2, rtz # perform operation
fnmadd.h f22, f15, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f15, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f15, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f15, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f15, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f15, f1, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0xc895535f # load x3 with value 0xc895535f
sw x3, 0(x2) # store 0xc895535f in memory
flh f26, 0(x2) # load 0xc895535f from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f7, 0(x2) # load 0x00000001 from memory into f7
fnmadd.h f3, f28, f26, f7, dyn # perform operation
fnmadd.h f3, f28, f26, f7, rdn # perform operation
fnmadd.h f3, f28, f26, f7, rmm # perform operation
fnmadd.h f3, f28, f26, f7, rne # perform operation
fnmadd.h f3, f28, f26, f7, rtz # perform operation
fnmadd.h f3, f28, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f28, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f28, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f28, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f28, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f28, f26, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8001)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0x9fab966f # load x3 with value 0x9fab966f
sw x3, 0(x2) # store 0x9fab966f in memory
flh f10, 0(x2) # load 0x9fab966f from memory into f10
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f29, 0(x2) # load 0x00008001 from memory into f29
fnmadd.h f6, f24, f10, f29, dyn # perform operation
fnmadd.h f6, f24, f10, f29, rdn # perform operation
fnmadd.h f6, f24, f10, f29, rmm # perform operation
fnmadd.h f6, f24, f10, f29, rne # perform operation
fnmadd.h f6, f24, f10, f29, rtz # perform operation
fnmadd.h f6, f24, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f24, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f24, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f24, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f24, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f24, f10, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0xb2782cff # load x3 with value 0xb2782cff
sw x3, 0(x2) # store 0xb2782cff in memory
flh f20, 0(x2) # load 0xb2782cff from memory into f20
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f13, 0(x2) # load 0x00007c00 from memory into f13
fnmadd.h f5, f18, f20, f13, dyn # perform operation
fnmadd.h f5, f18, f20, f13, rdn # perform operation
fnmadd.h f5, f18, f20, f13, rmm # perform operation
fnmadd.h f5, f18, f20, f13, rne # perform operation
fnmadd.h f5, f18, f20, f13, rtz # perform operation
fnmadd.h f5, f18, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f18, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f18, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f18, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f18, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f18, f20, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x6ec8597d # load x3 with value 0x6ec8597d
sw x3, 0(x2) # store 0x6ec8597d in memory
flh f3, 0(x2) # load 0x6ec8597d from memory into f3
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f22, 0(x2) # load 0x0000fc00 from memory into f22
fnmadd.h f1, f16, f3, f22, dyn # perform operation
fnmadd.h f1, f16, f3, f22, rdn # perform operation
fnmadd.h f1, f16, f3, f22, rmm # perform operation
fnmadd.h f1, f16, f3, f22, rne # perform operation
fnmadd.h f1, f16, f3, f22, rtz # perform operation
fnmadd.h f1, f16, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f16, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f16, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f16, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f16, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f16, f3, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0xc2df5d42 # load x3 with value 0xc2df5d42
sw x3, 0(x2) # store 0xc2df5d42 in memory
flh f18, 0(x2) # load 0xc2df5d42 from memory into f18
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f25, 0(x2) # load 0x00007e00 from memory into f25
fnmadd.h f13, f28, f18, f25, dyn # perform operation
fnmadd.h f13, f28, f18, f25, rdn # perform operation
fnmadd.h f13, f28, f18, f25, rmm # perform operation
fnmadd.h f13, f28, f18, f25, rne # perform operation
fnmadd.h f13, f28, f18, f25, rtz # perform operation
fnmadd.h f13, f28, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f28, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f28, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f28, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f28, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f28, f18, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0x3e71e823 # load x3 with value 0x3e71e823
sw x3, 0(x2) # store 0x3e71e823 in memory
flh f13, 0(x2) # load 0x3e71e823 from memory into f13
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f2, 0(x2) # load 0x00007fff from memory into f2
fnmadd.h f16, f20, f13, f2, dyn # perform operation
fnmadd.h f16, f20, f13, f2, rdn # perform operation
fnmadd.h f16, f20, f13, f2, rmm # perform operation
fnmadd.h f16, f20, f13, f2, rne # perform operation
fnmadd.h f16, f20, f13, f2, rtz # perform operation
fnmadd.h f16, f20, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f20, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f20, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f20, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f20, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f20, f13, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x7479c605 # load x3 with value 0x7479c605
sw x3, 0(x2) # store 0x7479c605 in memory
flh f7, 0(x2) # load 0x7479c605 from memory into f7
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f23, 0(x2) # load 0x0000fe00 from memory into f23
fnmadd.h f20, f15, f7, f23, dyn # perform operation
fnmadd.h f20, f15, f7, f23, rdn # perform operation
fnmadd.h f20, f15, f7, f23, rmm # perform operation
fnmadd.h f20, f15, f7, f23, rne # perform operation
fnmadd.h f20, f15, f7, f23, rtz # perform operation
fnmadd.h f20, f15, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f15, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f15, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f15, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f15, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f15, f7, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0xcfa3a144 # load x3 with value 0xcfa3a144
sw x3, 0(x2) # store 0xcfa3a144 in memory
flh f1, 0(x2) # load 0xcfa3a144 from memory into f1
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f19, 0(x2) # load 0x00007c01 from memory into f19
fnmadd.h f8, f21, f1, f19, dyn # perform operation
fnmadd.h f8, f21, f1, f19, rdn # perform operation
fnmadd.h f8, f21, f1, f19, rmm # perform operation
fnmadd.h f8, f21, f1, f19, rne # perform operation
fnmadd.h f8, f21, f1, f19, rtz # perform operation
fnmadd.h f8, f21, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f21, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f21, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f21, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f21, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f21, f1, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0x5902391a # load x3 with value 0x5902391a
sw x3, 0(x2) # store 0x5902391a in memory
flh f23, 0(x2) # load 0x5902391a from memory into f23
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f14, 0(x2) # load 0x00007dff from memory into f14
fnmadd.h f26, f13, f23, f14, dyn # perform operation
fnmadd.h f26, f13, f23, f14, rdn # perform operation
fnmadd.h f26, f13, f23, f14, rmm # perform operation
fnmadd.h f26, f13, f23, f14, rne # perform operation
fnmadd.h f26, f13, f23, f14, rtz # perform operation
fnmadd.h f26, f13, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f13, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f13, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f13, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f13, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f13, f23, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0x15e3f890 # load x3 with value 0x15e3f890
sw x3, 0(x2) # store 0x15e3f890 in memory
flh f16, 0(x2) # load 0x15e3f890 from memory into f16
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f2, 0(x2) # load 0x0000fc01 from memory into f2
fnmadd.h f5, f13, f16, f2, dyn # perform operation
fnmadd.h f5, f13, f16, f2, rdn # perform operation
fnmadd.h f5, f13, f16, f2, rmm # perform operation
fnmadd.h f5, f13, f16, f2, rne # perform operation
fnmadd.h f5, f13, f16, f2, rtz # perform operation
fnmadd.h f5, f13, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f13, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f13, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f13, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f13, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f13, f16, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0xc8af9aed # load x3 with value 0xc8af9aed
sw x3, 0(x2) # store 0xc8af9aed in memory
flh f15, 0(x2) # load 0xc8af9aed from memory into f15
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f12, 0(x2) # load 0x000058b4 from memory into f12
fnmadd.h f29, f10, f15, f12, dyn # perform operation
fnmadd.h f29, f10, f15, f12, rdn # perform operation
fnmadd.h f29, f10, f15, f12, rmm # perform operation
fnmadd.h f29, f10, f15, f12, rne # perform operation
fnmadd.h f29, f10, f15, f12, rtz # perform operation
fnmadd.h f29, f10, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f10, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f10, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f10, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f10, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f10, f15, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0xa8e9538f # load x3 with value 0xa8e9538f
sw x3, 0(x2) # store 0xa8e9538f in memory
flh f26, 0(x2) # load 0xa8e9538f from memory into f26
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f22, 0(x2) # load 0x0000c93a from memory into f22
fnmadd.h f14, f19, f26, f22, dyn # perform operation
fnmadd.h f14, f19, f26, f22, rdn # perform operation
fnmadd.h f14, f19, f26, f22, rmm # perform operation
fnmadd.h f14, f19, f26, f22, rne # perform operation
fnmadd.h f14, f19, f26, f22, rtz # perform operation
fnmadd.h f14, f19, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f19, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f19, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f19, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f19, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f19, f26, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x0)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f26, 0(x2) # load 0x00008001 from memory into f26
la x2, scratch
li x3, 0x3b67a838 # load x3 with value 0x3b67a838
sw x3, 0(x2) # store 0x3b67a838 in memory
flh f20, 0(x2) # load 0x3b67a838 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f27, 0(x2) # load 0x00000000 from memory into f27
fnmadd.h f24, f26, f20, f27, dyn # perform operation
fnmadd.h f24, f26, f20, f27, rdn # perform operation
fnmadd.h f24, f26, f20, f27, rmm # perform operation
fnmadd.h f24, f26, f20, f27, rne # perform operation
fnmadd.h f24, f26, f20, f27, rtz # perform operation
fnmadd.h f24, f26, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f26, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f26, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f26, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f26, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f26, f20, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x8000)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f3, 0(x2) # load 0x00008001 from memory into f3
la x2, scratch
li x3, 0x744d332f # load x3 with value 0x744d332f
sw x3, 0(x2) # store 0x744d332f in memory
flh f11, 0(x2) # load 0x744d332f from memory into f11
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f19, 0(x2) # load 0x00008000 from memory into f19
fnmadd.h f18, f3, f11, f19, dyn # perform operation
fnmadd.h f18, f3, f11, f19, rdn # perform operation
fnmadd.h f18, f3, f11, f19, rmm # perform operation
fnmadd.h f18, f3, f11, f19, rne # perform operation
fnmadd.h f18, f3, f11, f19, rtz # perform operation
fnmadd.h f18, f3, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f3, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f3, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f3, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f3, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f3, f11, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f9, 0(x2) # load 0x00008001 from memory into f9
la x2, scratch
li x3, 0xe01072d1 # load x3 with value 0xe01072d1
sw x3, 0(x2) # store 0xe01072d1 in memory
flh f24, 0(x2) # load 0xe01072d1 from memory into f24
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f15, 0(x2) # load 0x00003c00 from memory into f15
fnmadd.h f1, f9, f24, f15, dyn # perform operation
fnmadd.h f1, f9, f24, f15, rdn # perform operation
fnmadd.h f1, f9, f24, f15, rmm # perform operation
fnmadd.h f1, f9, f24, f15, rne # perform operation
fnmadd.h f1, f9, f24, f15, rtz # perform operation
fnmadd.h f1, f9, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f9, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f9, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f9, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f9, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f9, f24, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f10, 0(x2) # load 0x00008001 from memory into f10
la x2, scratch
li x3, 0x7a9eda13 # load x3 with value 0x7a9eda13
sw x3, 0(x2) # store 0x7a9eda13 in memory
flh f9, 0(x2) # load 0x7a9eda13 from memory into f9
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f18, 0(x2) # load 0x0000bc00 from memory into f18
fnmadd.h f22, f10, f9, f18, dyn # perform operation
fnmadd.h f22, f10, f9, f18, rdn # perform operation
fnmadd.h f22, f10, f9, f18, rmm # perform operation
fnmadd.h f22, f10, f9, f18, rne # perform operation
fnmadd.h f22, f10, f9, f18, rtz # perform operation
fnmadd.h f22, f10, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f10, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f10, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f10, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f10, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f10, f9, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f1, 0(x2) # load 0x00008001 from memory into f1
la x2, scratch
li x3, 0x1ebdec2e # load x3 with value 0x1ebdec2e
sw x3, 0(x2) # store 0x1ebdec2e in memory
flh f2, 0(x2) # load 0x1ebdec2e from memory into f2
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f13, 0(x2) # load 0x00003e00 from memory into f13
fnmadd.h f31, f1, f2, f13, dyn # perform operation
fnmadd.h f31, f1, f2, f13, rdn # perform operation
fnmadd.h f31, f1, f2, f13, rmm # perform operation
fnmadd.h f31, f1, f2, f13, rne # perform operation
fnmadd.h f31, f1, f2, f13, rtz # perform operation
fnmadd.h f31, f1, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f1, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f1, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f1, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f1, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f1, f2, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f17, 0(x2) # load 0x00008001 from memory into f17
la x2, scratch
li x3, 0xc6accc35 # load x3 with value 0xc6accc35
sw x3, 0(x2) # store 0xc6accc35 in memory
flh f18, 0(x2) # load 0xc6accc35 from memory into f18
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f8, 0(x2) # load 0x0000be00 from memory into f8
fnmadd.h f2, f17, f18, f8, dyn # perform operation
fnmadd.h f2, f17, f18, f8, rdn # perform operation
fnmadd.h f2, f17, f18, f8, rmm # perform operation
fnmadd.h f2, f17, f18, f8, rne # perform operation
fnmadd.h f2, f17, f18, f8, rtz # perform operation
fnmadd.h f2, f17, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f17, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f17, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f17, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f17, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f17, f18, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x4000)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f28, 0(x2) # load 0x00008001 from memory into f28
la x2, scratch
li x3, 0x9fa69272 # load x3 with value 0x9fa69272
sw x3, 0(x2) # store 0x9fa69272 in memory
flh f12, 0(x2) # load 0x9fa69272 from memory into f12
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f26, 0(x2) # load 0x00004000 from memory into f26
fnmadd.h f6, f28, f12, f26, dyn # perform operation
fnmadd.h f6, f28, f12, f26, rdn # perform operation
fnmadd.h f6, f28, f12, f26, rmm # perform operation
fnmadd.h f6, f28, f12, f26, rne # perform operation
fnmadd.h f6, f28, f12, f26, rtz # perform operation
fnmadd.h f6, f28, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f28, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f28, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f28, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f28, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f28, f12, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xc000)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f18, 0(x2) # load 0x00008001 from memory into f18
la x2, scratch
li x3, 0xace96c52 # load x3 with value 0xace96c52
sw x3, 0(x2) # store 0xace96c52 in memory
flh f24, 0(x2) # load 0xace96c52 from memory into f24
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f14, 0(x2) # load 0x0000c000 from memory into f14
fnmadd.h f25, f18, f24, f14, dyn # perform operation
fnmadd.h f25, f18, f24, f14, rdn # perform operation
fnmadd.h f25, f18, f24, f14, rmm # perform operation
fnmadd.h f25, f18, f24, f14, rne # perform operation
fnmadd.h f25, f18, f24, f14, rtz # perform operation
fnmadd.h f25, f18, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f18, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f18, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f18, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f18, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f18, f24, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x400)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f28, 0(x2) # load 0x00008001 from memory into f28
la x2, scratch
li x3, 0x28b72e20 # load x3 with value 0x28b72e20
sw x3, 0(x2) # store 0x28b72e20 in memory
flh f8, 0(x2) # load 0x28b72e20 from memory into f8
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f12, 0(x2) # load 0x00000400 from memory into f12
fnmadd.h f6, f28, f8, f12, dyn # perform operation
fnmadd.h f6, f28, f8, f12, rdn # perform operation
fnmadd.h f6, f28, f8, f12, rmm # perform operation
fnmadd.h f6, f28, f8, f12, rne # perform operation
fnmadd.h f6, f28, f8, f12, rtz # perform operation
fnmadd.h f6, f28, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f28, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f28, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f28, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f28, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f28, f8, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x8400)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f2, 0(x2) # load 0x00008001 from memory into f2
la x2, scratch
li x3, 0xdb1903a1 # load x3 with value 0xdb1903a1
sw x3, 0(x2) # store 0xdb1903a1 in memory
flh f10, 0(x2) # load 0xdb1903a1 from memory into f10
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f3, 0(x2) # load 0x00008400 from memory into f3
fnmadd.h f12, f2, f10, f3, dyn # perform operation
fnmadd.h f12, f2, f10, f3, rdn # perform operation
fnmadd.h f12, f2, f10, f3, rmm # perform operation
fnmadd.h f12, f2, f10, f3, rne # perform operation
fnmadd.h f12, f2, f10, f3, rtz # perform operation
fnmadd.h f12, f2, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f2, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f2, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f2, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f2, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f2, f10, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f27, 0(x2) # load 0x00008001 from memory into f27
la x2, scratch
li x3, 0xfe6842b6 # load x3 with value 0xfe6842b6
sw x3, 0(x2) # store 0xfe6842b6 in memory
flh f15, 0(x2) # load 0xfe6842b6 from memory into f15
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f21, 0(x2) # load 0x00007bff from memory into f21
fnmadd.h f19, f27, f15, f21, dyn # perform operation
fnmadd.h f19, f27, f15, f21, rdn # perform operation
fnmadd.h f19, f27, f15, f21, rmm # perform operation
fnmadd.h f19, f27, f15, f21, rne # perform operation
fnmadd.h f19, f27, f15, f21, rtz # perform operation
fnmadd.h f19, f27, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f27, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f27, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f27, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f27, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f27, f15, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f23, 0(x2) # load 0x00008001 from memory into f23
la x2, scratch
li x3, 0xbbd7ba1e # load x3 with value 0xbbd7ba1e
sw x3, 0(x2) # store 0xbbd7ba1e in memory
flh f6, 0(x2) # load 0xbbd7ba1e from memory into f6
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f29, 0(x2) # load 0x0000fbff from memory into f29
fnmadd.h f15, f23, f6, f29, dyn # perform operation
fnmadd.h f15, f23, f6, f29, rdn # perform operation
fnmadd.h f15, f23, f6, f29, rmm # perform operation
fnmadd.h f15, f23, f6, f29, rne # perform operation
fnmadd.h f15, f23, f6, f29, rtz # perform operation
fnmadd.h f15, f23, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f23, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f23, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f23, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f23, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f23, f6, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f18, 0(x2) # load 0x00008001 from memory into f18
la x2, scratch
li x3, 0xadddde28 # load x3 with value 0xadddde28
sw x3, 0(x2) # store 0xadddde28 in memory
flh f29, 0(x2) # load 0xadddde28 from memory into f29
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f25, 0(x2) # load 0x000003ff from memory into f25
fnmadd.h f31, f18, f29, f25, dyn # perform operation
fnmadd.h f31, f18, f29, f25, rdn # perform operation
fnmadd.h f31, f18, f29, f25, rmm # perform operation
fnmadd.h f31, f18, f29, f25, rne # perform operation
fnmadd.h f31, f18, f29, f25, rtz # perform operation
fnmadd.h f31, f18, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f18, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f18, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f18, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f18, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f18, f29, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f17, 0(x2) # load 0x00008001 from memory into f17
la x2, scratch
li x3, 0x66844667 # load x3 with value 0x66844667
sw x3, 0(x2) # store 0x66844667 in memory
flh f23, 0(x2) # load 0x66844667 from memory into f23
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f24, 0(x2) # load 0x000083ff from memory into f24
fnmadd.h f14, f17, f23, f24, dyn # perform operation
fnmadd.h f14, f17, f23, f24, rdn # perform operation
fnmadd.h f14, f17, f23, f24, rmm # perform operation
fnmadd.h f14, f17, f23, f24, rne # perform operation
fnmadd.h f14, f17, f23, f24, rtz # perform operation
fnmadd.h f14, f17, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f17, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f17, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f17, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f17, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f17, f23, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x200)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
la x2, scratch
li x3, 0xf9d8fb33 # load x3 with value 0xf9d8fb33
sw x3, 0(x2) # store 0xf9d8fb33 in memory
flh f31, 0(x2) # load 0xf9d8fb33 from memory into f31
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f14, 0(x2) # load 0x00000200 from memory into f14
fnmadd.h f18, f22, f31, f14, dyn # perform operation
fnmadd.h f18, f22, f31, f14, rdn # perform operation
fnmadd.h f18, f22, f31, f14, rmm # perform operation
fnmadd.h f18, f22, f31, f14, rne # perform operation
fnmadd.h f18, f22, f31, f14, rtz # perform operation
fnmadd.h f18, f22, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f22, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f22, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f22, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f22, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f22, f31, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x8200)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f9, 0(x2) # load 0x00008001 from memory into f9
la x2, scratch
li x3, 0x97268f52 # load x3 with value 0x97268f52
sw x3, 0(x2) # store 0x97268f52 in memory
flh f23, 0(x2) # load 0x97268f52 from memory into f23
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f11, 0(x2) # load 0x00008200 from memory into f11
fnmadd.h f2, f9, f23, f11, dyn # perform operation
fnmadd.h f2, f9, f23, f11, rdn # perform operation
fnmadd.h f2, f9, f23, f11, rmm # perform operation
fnmadd.h f2, f9, f23, f11, rne # perform operation
fnmadd.h f2, f9, f23, f11, rtz # perform operation
fnmadd.h f2, f9, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f9, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f9, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f9, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f9, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f9, f23, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x1)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f26, 0(x2) # load 0x00008001 from memory into f26
la x2, scratch
li x3, 0xd337ec41 # load x3 with value 0xd337ec41
sw x3, 0(x2) # store 0xd337ec41 in memory
flh f30, 0(x2) # load 0xd337ec41 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f9, 0(x2) # load 0x00000001 from memory into f9
fnmadd.h f24, f26, f30, f9, dyn # perform operation
fnmadd.h f24, f26, f30, f9, rdn # perform operation
fnmadd.h f24, f26, f30, f9, rmm # perform operation
fnmadd.h f24, f26, f30, f9, rne # perform operation
fnmadd.h f24, f26, f30, f9, rtz # perform operation
fnmadd.h f24, f26, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f26, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f26, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f26, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f26, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f26, f30, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x8001)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f17, 0(x2) # load 0x00008001 from memory into f17
la x2, scratch
li x3, 0xa6e21fc3 # load x3 with value 0xa6e21fc3
sw x3, 0(x2) # store 0xa6e21fc3 in memory
flh f1, 0(x2) # load 0xa6e21fc3 from memory into f1
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f19, 0(x2) # load 0x00008001 from memory into f19
fnmadd.h f26, f17, f1, f19, dyn # perform operation
fnmadd.h f26, f17, f1, f19, rdn # perform operation
fnmadd.h f26, f17, f1, f19, rmm # perform operation
fnmadd.h f26, f17, f1, f19, rne # perform operation
fnmadd.h f26, f17, f1, f19, rtz # perform operation
fnmadd.h f26, f17, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f17, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f17, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f17, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f17, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f17, f1, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f11, 0(x2) # load 0x00008001 from memory into f11
la x2, scratch
li x3, 0x60ad76f7 # load x3 with value 0x60ad76f7
sw x3, 0(x2) # store 0x60ad76f7 in memory
flh f15, 0(x2) # load 0x60ad76f7 from memory into f15
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f6, 0(x2) # load 0x00007c00 from memory into f6
fnmadd.h f30, f11, f15, f6, dyn # perform operation
fnmadd.h f30, f11, f15, f6, rdn # perform operation
fnmadd.h f30, f11, f15, f6, rmm # perform operation
fnmadd.h f30, f11, f15, f6, rne # perform operation
fnmadd.h f30, f11, f15, f6, rtz # perform operation
fnmadd.h f30, f11, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f11, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f11, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f11, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f11, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f11, f15, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
la x2, scratch
li x3, 0x0e900b0c # load x3 with value 0x0e900b0c
sw x3, 0(x2) # store 0x0e900b0c in memory
flh f30, 0(x2) # load 0x0e900b0c from memory into f30
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f1, 0(x2) # load 0x0000fc00 from memory into f1
fnmadd.h f10, f14, f30, f1, dyn # perform operation
fnmadd.h f10, f14, f30, f1, rdn # perform operation
fnmadd.h f10, f14, f30, f1, rmm # perform operation
fnmadd.h f10, f14, f30, f1, rne # perform operation
fnmadd.h f10, f14, f30, f1, rtz # perform operation
fnmadd.h f10, f14, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f14, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f14, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f14, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f14, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f14, f30, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f3, 0(x2) # load 0x00008001 from memory into f3
la x2, scratch
li x3, 0x97c6a197 # load x3 with value 0x97c6a197
sw x3, 0(x2) # store 0x97c6a197 in memory
flh f25, 0(x2) # load 0x97c6a197 from memory into f25
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
fnmadd.h f28, f3, f25, f5, dyn # perform operation
fnmadd.h f28, f3, f25, f5, rdn # perform operation
fnmadd.h f28, f3, f25, f5, rmm # perform operation
fnmadd.h f28, f3, f25, f5, rne # perform operation
fnmadd.h f28, f3, f25, f5, rtz # perform operation
fnmadd.h f28, f3, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f3, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f3, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f3, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f3, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f3, f25, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f3, 0(x2) # load 0x00008001 from memory into f3
la x2, scratch
li x3, 0x0ce6a557 # load x3 with value 0x0ce6a557
sw x3, 0(x2) # store 0x0ce6a557 in memory
flh f26, 0(x2) # load 0x0ce6a557 from memory into f26
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f27, 0(x2) # load 0x00007fff from memory into f27
fnmadd.h f29, f3, f26, f27, dyn # perform operation
fnmadd.h f29, f3, f26, f27, rdn # perform operation
fnmadd.h f29, f3, f26, f27, rmm # perform operation
fnmadd.h f29, f3, f26, f27, rne # perform operation
fnmadd.h f29, f3, f26, f27, rtz # perform operation
fnmadd.h f29, f3, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f3, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f3, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f3, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f3, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f3, f26, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
la x2, scratch
li x3, 0x5bb9ffcb # load x3 with value 0x5bb9ffcb
sw x3, 0(x2) # store 0x5bb9ffcb in memory
flh f21, 0(x2) # load 0x5bb9ffcb from memory into f21
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f27, 0(x2) # load 0x0000fe00 from memory into f27
fnmadd.h f31, f7, f21, f27, dyn # perform operation
fnmadd.h f31, f7, f21, f27, rdn # perform operation
fnmadd.h f31, f7, f21, f27, rmm # perform operation
fnmadd.h f31, f7, f21, f27, rne # perform operation
fnmadd.h f31, f7, f21, f27, rtz # perform operation
fnmadd.h f31, f7, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f7, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f7, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f7, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f7, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f7, f21, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f25, 0(x2) # load 0x00008001 from memory into f25
la x2, scratch
li x3, 0x7b0ccfd9 # load x3 with value 0x7b0ccfd9
sw x3, 0(x2) # store 0x7b0ccfd9 in memory
flh f2, 0(x2) # load 0x7b0ccfd9 from memory into f2
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f28, 0(x2) # load 0x00007c01 from memory into f28
fnmadd.h f13, f25, f2, f28, dyn # perform operation
fnmadd.h f13, f25, f2, f28, rdn # perform operation
fnmadd.h f13, f25, f2, f28, rmm # perform operation
fnmadd.h f13, f25, f2, f28, rne # perform operation
fnmadd.h f13, f25, f2, f28, rtz # perform operation
fnmadd.h f13, f25, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f25, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f25, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f25, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f25, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f25, f2, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f23, 0(x2) # load 0x00008001 from memory into f23
la x2, scratch
li x3, 0xd0d6158c # load x3 with value 0xd0d6158c
sw x3, 0(x2) # store 0xd0d6158c in memory
flh f17, 0(x2) # load 0xd0d6158c from memory into f17
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
fnmadd.h f12, f23, f17, f26, dyn # perform operation
fnmadd.h f12, f23, f17, f26, rdn # perform operation
fnmadd.h f12, f23, f17, f26, rmm # perform operation
fnmadd.h f12, f23, f17, f26, rne # perform operation
fnmadd.h f12, f23, f17, f26, rtz # perform operation
fnmadd.h f12, f23, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f23, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f23, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f23, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f23, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f23, f17, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f21, 0(x2) # load 0x00008001 from memory into f21
la x2, scratch
li x3, 0x9e937505 # load x3 with value 0x9e937505
sw x3, 0(x2) # store 0x9e937505 in memory
flh f5, 0(x2) # load 0x9e937505 from memory into f5
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f3, 0(x2) # load 0x0000fc01 from memory into f3
fnmadd.h f25, f21, f5, f3, dyn # perform operation
fnmadd.h f25, f21, f5, f3, rdn # perform operation
fnmadd.h f25, f21, f5, f3, rmm # perform operation
fnmadd.h f25, f21, f5, f3, rne # perform operation
fnmadd.h f25, f21, f5, f3, rtz # perform operation
fnmadd.h f25, f21, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f21, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f21, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f21, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f21, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f21, f5, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f6, 0(x2) # load 0x00008001 from memory into f6
la x2, scratch
li x3, 0xa3df6216 # load x3 with value 0xa3df6216
sw x3, 0(x2) # store 0xa3df6216 in memory
flh f3, 0(x2) # load 0xa3df6216 from memory into f3
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f11, 0(x2) # load 0x000058b4 from memory into f11
fnmadd.h f26, f6, f3, f11, dyn # perform operation
fnmadd.h f26, f6, f3, f11, rdn # perform operation
fnmadd.h f26, f6, f3, f11, rmm # perform operation
fnmadd.h f26, f6, f3, f11, rne # perform operation
fnmadd.h f26, f6, f3, f11, rtz # perform operation
fnmadd.h f26, f6, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f6, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f6, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f6, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f6, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f6, f3, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f24, 0(x2) # load 0x00008001 from memory into f24
la x2, scratch
li x3, 0xa4e3fc70 # load x3 with value 0xa4e3fc70
sw x3, 0(x2) # store 0xa4e3fc70 in memory
flh f13, 0(x2) # load 0xa4e3fc70 from memory into f13
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
fnmadd.h f23, f24, f13, f16, dyn # perform operation
fnmadd.h f23, f24, f13, f16, rdn # perform operation
fnmadd.h f23, f24, f13, f16, rmm # perform operation
fnmadd.h f23, f24, f13, f16, rne # perform operation
fnmadd.h f23, f24, f13, f16, rtz # perform operation
fnmadd.h f23, f24, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f24, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f24, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f24, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f24, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f24, f13, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x0)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
la x2, scratch
li x3, 0xbdfd6a15 # load x3 with value 0xbdfd6a15
sw x3, 0(x2) # store 0xbdfd6a15 in memory
flh f3, 0(x2) # load 0xbdfd6a15 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f6, 0(x2) # load 0x00000000 from memory into f6
fnmadd.h f5, f19, f3, f6, dyn # perform operation
fnmadd.h f5, f19, f3, f6, rdn # perform operation
fnmadd.h f5, f19, f3, f6, rmm # perform operation
fnmadd.h f5, f19, f3, f6, rne # perform operation
fnmadd.h f5, f19, f3, f6, rtz # perform operation
fnmadd.h f5, f19, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f19, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f19, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f19, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f19, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f19, f3, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x8000)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f2, 0(x2) # load 0x00007c00 from memory into f2
la x2, scratch
li x3, 0x7eaaeffc # load x3 with value 0x7eaaeffc
sw x3, 0(x2) # store 0x7eaaeffc in memory
flh f30, 0(x2) # load 0x7eaaeffc from memory into f30
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f27, 0(x2) # load 0x00008000 from memory into f27
fnmadd.h f6, f2, f30, f27, dyn # perform operation
fnmadd.h f6, f2, f30, f27, rdn # perform operation
fnmadd.h f6, f2, f30, f27, rmm # perform operation
fnmadd.h f6, f2, f30, f27, rne # perform operation
fnmadd.h f6, f2, f30, f27, rtz # perform operation
fnmadd.h f6, f2, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f2, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f2, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f2, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f2, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f2, f30, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f1, 0(x2) # load 0x00007c00 from memory into f1
la x2, scratch
li x3, 0x391c2848 # load x3 with value 0x391c2848
sw x3, 0(x2) # store 0x391c2848 in memory
flh f13, 0(x2) # load 0x391c2848 from memory into f13
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f28, 0(x2) # load 0x00003c00 from memory into f28
fnmadd.h f23, f1, f13, f28, dyn # perform operation
fnmadd.h f23, f1, f13, f28, rdn # perform operation
fnmadd.h f23, f1, f13, f28, rmm # perform operation
fnmadd.h f23, f1, f13, f28, rne # perform operation
fnmadd.h f23, f1, f13, f28, rtz # perform operation
fnmadd.h f23, f1, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f1, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f1, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f1, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f1, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f1, f13, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f25, 0(x2) # load 0x00007c00 from memory into f25
la x2, scratch
li x3, 0x1ab2ada2 # load x3 with value 0x1ab2ada2
sw x3, 0(x2) # store 0x1ab2ada2 in memory
flh f14, 0(x2) # load 0x1ab2ada2 from memory into f14
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
fnmadd.h f7, f25, f14, f24, dyn # perform operation
fnmadd.h f7, f25, f14, f24, rdn # perform operation
fnmadd.h f7, f25, f14, f24, rmm # perform operation
fnmadd.h f7, f25, f14, f24, rne # perform operation
fnmadd.h f7, f25, f14, f24, rtz # perform operation
fnmadd.h f7, f25, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f25, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f25, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f25, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f25, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f25, f14, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f22, 0(x2) # load 0x00007c00 from memory into f22
la x2, scratch
li x3, 0x30c469b0 # load x3 with value 0x30c469b0
sw x3, 0(x2) # store 0x30c469b0 in memory
flh f1, 0(x2) # load 0x30c469b0 from memory into f1
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f13, 0(x2) # load 0x00003e00 from memory into f13
fnmadd.h f20, f22, f1, f13, dyn # perform operation
fnmadd.h f20, f22, f1, f13, rdn # perform operation
fnmadd.h f20, f22, f1, f13, rmm # perform operation
fnmadd.h f20, f22, f1, f13, rne # perform operation
fnmadd.h f20, f22, f1, f13, rtz # perform operation
fnmadd.h f20, f22, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f22, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f22, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f22, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f22, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f22, f1, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f26, 0(x2) # load 0x00007c00 from memory into f26
la x2, scratch
li x3, 0x9af60001 # load x3 with value 0x9af60001
sw x3, 0(x2) # store 0x9af60001 in memory
flh f14, 0(x2) # load 0x9af60001 from memory into f14
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f31, 0(x2) # load 0x0000be00 from memory into f31
fnmadd.h f19, f26, f14, f31, dyn # perform operation
fnmadd.h f19, f26, f14, f31, rdn # perform operation
fnmadd.h f19, f26, f14, f31, rmm # perform operation
fnmadd.h f19, f26, f14, f31, rne # perform operation
fnmadd.h f19, f26, f14, f31, rtz # perform operation
fnmadd.h f19, f26, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f26, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f26, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f26, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f26, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f26, f14, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x4000)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f11, 0(x2) # load 0x00007c00 from memory into f11
la x2, scratch
li x3, 0x08b71ea7 # load x3 with value 0x08b71ea7
sw x3, 0(x2) # store 0x08b71ea7 in memory
flh f18, 0(x2) # load 0x08b71ea7 from memory into f18
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
fnmadd.h f28, f11, f18, f23, dyn # perform operation
fnmadd.h f28, f11, f18, f23, rdn # perform operation
fnmadd.h f28, f11, f18, f23, rmm # perform operation
fnmadd.h f28, f11, f18, f23, rne # perform operation
fnmadd.h f28, f11, f18, f23, rtz # perform operation
fnmadd.h f28, f11, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f11, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f11, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f11, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f11, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f11, f18, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xc000)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f27, 0(x2) # load 0x00007c00 from memory into f27
la x2, scratch
li x3, 0x0f00980e # load x3 with value 0x0f00980e
sw x3, 0(x2) # store 0x0f00980e in memory
flh f5, 0(x2) # load 0x0f00980e from memory into f5
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f26, 0(x2) # load 0x0000c000 from memory into f26
fnmadd.h f12, f27, f5, f26, dyn # perform operation
fnmadd.h f12, f27, f5, f26, rdn # perform operation
fnmadd.h f12, f27, f5, f26, rmm # perform operation
fnmadd.h f12, f27, f5, f26, rne # perform operation
fnmadd.h f12, f27, f5, f26, rtz # perform operation
fnmadd.h f12, f27, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f27, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f27, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f27, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f27, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f27, f5, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x400)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
la x2, scratch
li x3, 0xe0089091 # load x3 with value 0xe0089091
sw x3, 0(x2) # store 0xe0089091 in memory
flh f27, 0(x2) # load 0xe0089091 from memory into f27
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f31, 0(x2) # load 0x00000400 from memory into f31
fnmadd.h f10, f19, f27, f31, dyn # perform operation
fnmadd.h f10, f19, f27, f31, rdn # perform operation
fnmadd.h f10, f19, f27, f31, rmm # perform operation
fnmadd.h f10, f19, f27, f31, rne # perform operation
fnmadd.h f10, f19, f27, f31, rtz # perform operation
fnmadd.h f10, f19, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f19, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f19, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f19, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f19, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f19, f27, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x8400)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f27, 0(x2) # load 0x00007c00 from memory into f27
la x2, scratch
li x3, 0x84184a6a # load x3 with value 0x84184a6a
sw x3, 0(x2) # store 0x84184a6a in memory
flh f19, 0(x2) # load 0x84184a6a from memory into f19
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f14, 0(x2) # load 0x00008400 from memory into f14
fnmadd.h f5, f27, f19, f14, dyn # perform operation
fnmadd.h f5, f27, f19, f14, rdn # perform operation
fnmadd.h f5, f27, f19, f14, rmm # perform operation
fnmadd.h f5, f27, f19, f14, rne # perform operation
fnmadd.h f5, f27, f19, f14, rtz # perform operation
fnmadd.h f5, f27, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f27, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f27, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f27, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f27, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f27, f19, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f8, 0(x2) # load 0x00007c00 from memory into f8
la x2, scratch
li x3, 0xf9ee5788 # load x3 with value 0xf9ee5788
sw x3, 0(x2) # store 0xf9ee5788 in memory
flh f17, 0(x2) # load 0xf9ee5788 from memory into f17
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f18, 0(x2) # load 0x00007bff from memory into f18
fnmadd.h f10, f8, f17, f18, dyn # perform operation
fnmadd.h f10, f8, f17, f18, rdn # perform operation
fnmadd.h f10, f8, f17, f18, rmm # perform operation
fnmadd.h f10, f8, f17, f18, rne # perform operation
fnmadd.h f10, f8, f17, f18, rtz # perform operation
fnmadd.h f10, f8, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f8, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f8, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f8, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f8, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f8, f17, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f14, 0(x2) # load 0x00007c00 from memory into f14
la x2, scratch
li x3, 0x6c311348 # load x3 with value 0x6c311348
sw x3, 0(x2) # store 0x6c311348 in memory
flh f27, 0(x2) # load 0x6c311348 from memory into f27
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f5, 0(x2) # load 0x0000fbff from memory into f5
fnmadd.h f26, f14, f27, f5, dyn # perform operation
fnmadd.h f26, f14, f27, f5, rdn # perform operation
fnmadd.h f26, f14, f27, f5, rmm # perform operation
fnmadd.h f26, f14, f27, f5, rne # perform operation
fnmadd.h f26, f14, f27, f5, rtz # perform operation
fnmadd.h f26, f14, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f14, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f14, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f14, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f14, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f14, f27, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f17, 0(x2) # load 0x00007c00 from memory into f17
la x2, scratch
li x3, 0xf7379860 # load x3 with value 0xf7379860
sw x3, 0(x2) # store 0xf7379860 in memory
flh f21, 0(x2) # load 0xf7379860 from memory into f21
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f25, 0(x2) # load 0x000003ff from memory into f25
fnmadd.h f5, f17, f21, f25, dyn # perform operation
fnmadd.h f5, f17, f21, f25, rdn # perform operation
fnmadd.h f5, f17, f21, f25, rmm # perform operation
fnmadd.h f5, f17, f21, f25, rne # perform operation
fnmadd.h f5, f17, f21, f25, rtz # perform operation
fnmadd.h f5, f17, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f17, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f17, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f17, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f17, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f17, f21, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f24, 0(x2) # load 0x00007c00 from memory into f24
la x2, scratch
li x3, 0x52073691 # load x3 with value 0x52073691
sw x3, 0(x2) # store 0x52073691 in memory
flh f15, 0(x2) # load 0x52073691 from memory into f15
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f7, 0(x2) # load 0x000083ff from memory into f7
fnmadd.h f18, f24, f15, f7, dyn # perform operation
fnmadd.h f18, f24, f15, f7, rdn # perform operation
fnmadd.h f18, f24, f15, f7, rmm # perform operation
fnmadd.h f18, f24, f15, f7, rne # perform operation
fnmadd.h f18, f24, f15, f7, rtz # perform operation
fnmadd.h f18, f24, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f24, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f24, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f24, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f24, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f24, f15, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x200)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f16, 0(x2) # load 0x00007c00 from memory into f16
la x2, scratch
li x3, 0xc66d433c # load x3 with value 0xc66d433c
sw x3, 0(x2) # store 0xc66d433c in memory
flh f31, 0(x2) # load 0xc66d433c from memory into f31
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
fnmadd.h f7, f16, f31, f13, dyn # perform operation
fnmadd.h f7, f16, f31, f13, rdn # perform operation
fnmadd.h f7, f16, f31, f13, rmm # perform operation
fnmadd.h f7, f16, f31, f13, rne # perform operation
fnmadd.h f7, f16, f31, f13, rtz # perform operation
fnmadd.h f7, f16, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f16, f31, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x8200)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f3, 0(x2) # load 0x00007c00 from memory into f3
la x2, scratch
li x3, 0xaa78f048 # load x3 with value 0xaa78f048
sw x3, 0(x2) # store 0xaa78f048 in memory
flh f12, 0(x2) # load 0xaa78f048 from memory into f12
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f30, 0(x2) # load 0x00008200 from memory into f30
fnmadd.h f23, f3, f12, f30, dyn # perform operation
fnmadd.h f23, f3, f12, f30, rdn # perform operation
fnmadd.h f23, f3, f12, f30, rmm # perform operation
fnmadd.h f23, f3, f12, f30, rne # perform operation
fnmadd.h f23, f3, f12, f30, rtz # perform operation
fnmadd.h f23, f3, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f3, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f3, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f3, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f3, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f3, f12, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x1)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
la x2, scratch
li x3, 0x059b7f9b # load x3 with value 0x059b7f9b
sw x3, 0(x2) # store 0x059b7f9b in memory
flh f26, 0(x2) # load 0x059b7f9b from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
fnmadd.h f20, f19, f26, f3, dyn # perform operation
fnmadd.h f20, f19, f26, f3, rdn # perform operation
fnmadd.h f20, f19, f26, f3, rmm # perform operation
fnmadd.h f20, f19, f26, f3, rne # perform operation
fnmadd.h f20, f19, f26, f3, rtz # perform operation
fnmadd.h f20, f19, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f19, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f19, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f19, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f19, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f19, f26, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x8001)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f23, 0(x2) # load 0x00007c00 from memory into f23
la x2, scratch
li x3, 0x07a65e4c # load x3 with value 0x07a65e4c
sw x3, 0(x2) # store 0x07a65e4c in memory
flh f22, 0(x2) # load 0x07a65e4c from memory into f22
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f27, 0(x2) # load 0x00008001 from memory into f27
fnmadd.h f21, f23, f22, f27, dyn # perform operation
fnmadd.h f21, f23, f22, f27, rdn # perform operation
fnmadd.h f21, f23, f22, f27, rmm # perform operation
fnmadd.h f21, f23, f22, f27, rne # perform operation
fnmadd.h f21, f23, f22, f27, rtz # perform operation
fnmadd.h f21, f23, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f23, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f23, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f23, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f23, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f23, f22, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f31, 0(x2) # load 0x00007c00 from memory into f31
la x2, scratch
li x3, 0xc7095dd9 # load x3 with value 0xc7095dd9
sw x3, 0(x2) # store 0xc7095dd9 in memory
flh f11, 0(x2) # load 0xc7095dd9 from memory into f11
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f29, 0(x2) # load 0x00007c00 from memory into f29
fnmadd.h f27, f31, f11, f29, dyn # perform operation
fnmadd.h f27, f31, f11, f29, rdn # perform operation
fnmadd.h f27, f31, f11, f29, rmm # perform operation
fnmadd.h f27, f31, f11, f29, rne # perform operation
fnmadd.h f27, f31, f11, f29, rtz # perform operation
fnmadd.h f27, f31, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f31, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f31, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f31, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f31, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f31, f11, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f17, 0(x2) # load 0x00007c00 from memory into f17
la x2, scratch
li x3, 0x646a5183 # load x3 with value 0x646a5183
sw x3, 0(x2) # store 0x646a5183 in memory
flh f7, 0(x2) # load 0x646a5183 from memory into f7
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f29, 0(x2) # load 0x0000fc00 from memory into f29
fnmadd.h f12, f17, f7, f29, dyn # perform operation
fnmadd.h f12, f17, f7, f29, rdn # perform operation
fnmadd.h f12, f17, f7, f29, rmm # perform operation
fnmadd.h f12, f17, f7, f29, rne # perform operation
fnmadd.h f12, f17, f7, f29, rtz # perform operation
fnmadd.h f12, f17, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f17, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f17, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f17, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f17, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f17, f7, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f26, 0(x2) # load 0x00007c00 from memory into f26
la x2, scratch
li x3, 0x3838f723 # load x3 with value 0x3838f723
sw x3, 0(x2) # store 0x3838f723 in memory
flh f27, 0(x2) # load 0x3838f723 from memory into f27
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f28, 0(x2) # load 0x00007e00 from memory into f28
fnmadd.h f31, f26, f27, f28, dyn # perform operation
fnmadd.h f31, f26, f27, f28, rdn # perform operation
fnmadd.h f31, f26, f27, f28, rmm # perform operation
fnmadd.h f31, f26, f27, f28, rne # perform operation
fnmadd.h f31, f26, f27, f28, rtz # perform operation
fnmadd.h f31, f26, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f26, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f26, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f26, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f26, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f26, f27, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f31, 0(x2) # load 0x00007c00 from memory into f31
la x2, scratch
li x3, 0xcc4f5752 # load x3 with value 0xcc4f5752
sw x3, 0(x2) # store 0xcc4f5752 in memory
flh f25, 0(x2) # load 0xcc4f5752 from memory into f25
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f10, 0(x2) # load 0x00007fff from memory into f10
fnmadd.h f2, f31, f25, f10, dyn # perform operation
fnmadd.h f2, f31, f25, f10, rdn # perform operation
fnmadd.h f2, f31, f25, f10, rmm # perform operation
fnmadd.h f2, f31, f25, f10, rne # perform operation
fnmadd.h f2, f31, f25, f10, rtz # perform operation
fnmadd.h f2, f31, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f31, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f31, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f31, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f31, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f31, f25, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f18, 0(x2) # load 0x00007c00 from memory into f18
la x2, scratch
li x3, 0xb3c76808 # load x3 with value 0xb3c76808
sw x3, 0(x2) # store 0xb3c76808 in memory
flh f28, 0(x2) # load 0xb3c76808 from memory into f28
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f22, 0(x2) # load 0x0000fe00 from memory into f22
fnmadd.h f26, f18, f28, f22, dyn # perform operation
fnmadd.h f26, f18, f28, f22, rdn # perform operation
fnmadd.h f26, f18, f28, f22, rmm # perform operation
fnmadd.h f26, f18, f28, f22, rne # perform operation
fnmadd.h f26, f18, f28, f22, rtz # perform operation
fnmadd.h f26, f18, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f18, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f18, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f18, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f18, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f18, f28, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f12, 0(x2) # load 0x00007c00 from memory into f12
la x2, scratch
li x3, 0x400a8bbd # load x3 with value 0x400a8bbd
sw x3, 0(x2) # store 0x400a8bbd in memory
flh f16, 0(x2) # load 0x400a8bbd from memory into f16
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f10, 0(x2) # load 0x00007c01 from memory into f10
fnmadd.h f21, f12, f16, f10, dyn # perform operation
fnmadd.h f21, f12, f16, f10, rdn # perform operation
fnmadd.h f21, f12, f16, f10, rmm # perform operation
fnmadd.h f21, f12, f16, f10, rne # perform operation
fnmadd.h f21, f12, f16, f10, rtz # perform operation
fnmadd.h f21, f12, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f12, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f12, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f12, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f12, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f12, f16, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f12, 0(x2) # load 0x00007c00 from memory into f12
la x2, scratch
li x3, 0xbd6cacb9 # load x3 with value 0xbd6cacb9
sw x3, 0(x2) # store 0xbd6cacb9 in memory
flh f10, 0(x2) # load 0xbd6cacb9 from memory into f10
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f19, 0(x2) # load 0x00007dff from memory into f19
fnmadd.h f22, f12, f10, f19, dyn # perform operation
fnmadd.h f22, f12, f10, f19, rdn # perform operation
fnmadd.h f22, f12, f10, f19, rmm # perform operation
fnmadd.h f22, f12, f10, f19, rne # perform operation
fnmadd.h f22, f12, f10, f19, rtz # perform operation
fnmadd.h f22, f12, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f12, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f12, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f12, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f12, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f12, f10, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
la x2, scratch
li x3, 0xca137f71 # load x3 with value 0xca137f71
sw x3, 0(x2) # store 0xca137f71 in memory
flh f11, 0(x2) # load 0xca137f71 from memory into f11
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f30, 0(x2) # load 0x0000fc01 from memory into f30
fnmadd.h f10, f19, f11, f30, dyn # perform operation
fnmadd.h f10, f19, f11, f30, rdn # perform operation
fnmadd.h f10, f19, f11, f30, rmm # perform operation
fnmadd.h f10, f19, f11, f30, rne # perform operation
fnmadd.h f10, f19, f11, f30, rtz # perform operation
fnmadd.h f10, f19, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f19, f11, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f17, 0(x2) # load 0x00007c00 from memory into f17
la x2, scratch
li x3, 0xd8a375ef # load x3 with value 0xd8a375ef
sw x3, 0(x2) # store 0xd8a375ef in memory
flh f2, 0(x2) # load 0xd8a375ef from memory into f2
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f14, 0(x2) # load 0x000058b4 from memory into f14
fnmadd.h f6, f17, f2, f14, dyn # perform operation
fnmadd.h f6, f17, f2, f14, rdn # perform operation
fnmadd.h f6, f17, f2, f14, rmm # perform operation
fnmadd.h f6, f17, f2, f14, rne # perform operation
fnmadd.h f6, f17, f2, f14, rtz # perform operation
fnmadd.h f6, f17, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f17, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f17, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f17, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f17, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f17, f2, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f22, 0(x2) # load 0x00007c00 from memory into f22
la x2, scratch
li x3, 0x37595570 # load x3 with value 0x37595570
sw x3, 0(x2) # store 0x37595570 in memory
flh f30, 0(x2) # load 0x37595570 from memory into f30
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f6, 0(x2) # load 0x0000c93a from memory into f6
fnmadd.h f27, f22, f30, f6, dyn # perform operation
fnmadd.h f27, f22, f30, f6, rdn # perform operation
fnmadd.h f27, f22, f30, f6, rmm # perform operation
fnmadd.h f27, f22, f30, f6, rne # perform operation
fnmadd.h f27, f22, f30, f6, rtz # perform operation
fnmadd.h f27, f22, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f22, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f22, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f22, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f22, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f22, f30, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x0)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f29, 0(x2) # load 0x0000fc00 from memory into f29
la x2, scratch
li x3, 0xc09b508d # load x3 with value 0xc09b508d
sw x3, 0(x2) # store 0xc09b508d in memory
flh f7, 0(x2) # load 0xc09b508d from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f2, 0(x2) # load 0x00000000 from memory into f2
fnmadd.h f27, f29, f7, f2, dyn # perform operation
fnmadd.h f27, f29, f7, f2, rdn # perform operation
fnmadd.h f27, f29, f7, f2, rmm # perform operation
fnmadd.h f27, f29, f7, f2, rne # perform operation
fnmadd.h f27, f29, f7, f2, rtz # perform operation
fnmadd.h f27, f29, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f29, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f29, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f29, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f29, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f29, f7, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x8000)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f6, 0(x2) # load 0x0000fc00 from memory into f6
la x2, scratch
li x3, 0x375c55ac # load x3 with value 0x375c55ac
sw x3, 0(x2) # store 0x375c55ac in memory
flh f27, 0(x2) # load 0x375c55ac from memory into f27
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f14, 0(x2) # load 0x00008000 from memory into f14
fnmadd.h f19, f6, f27, f14, dyn # perform operation
fnmadd.h f19, f6, f27, f14, rdn # perform operation
fnmadd.h f19, f6, f27, f14, rmm # perform operation
fnmadd.h f19, f6, f27, f14, rne # perform operation
fnmadd.h f19, f6, f27, f14, rtz # perform operation
fnmadd.h f19, f6, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f6, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f6, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f6, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f6, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f6, f27, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x3c00)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f17, 0(x2) # load 0x0000fc00 from memory into f17
la x2, scratch
li x3, 0x224ff8f3 # load x3 with value 0x224ff8f3
sw x3, 0(x2) # store 0x224ff8f3 in memory
flh f18, 0(x2) # load 0x224ff8f3 from memory into f18
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f12, 0(x2) # load 0x00003c00 from memory into f12
fnmadd.h f24, f17, f18, f12, dyn # perform operation
fnmadd.h f24, f17, f18, f12, rdn # perform operation
fnmadd.h f24, f17, f18, f12, rmm # perform operation
fnmadd.h f24, f17, f18, f12, rne # perform operation
fnmadd.h f24, f17, f18, f12, rtz # perform operation
fnmadd.h f24, f17, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f17, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f17, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f17, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f17, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f17, f18, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xbc00)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f3, 0(x2) # load 0x0000fc00 from memory into f3
la x2, scratch
li x3, 0xb8b0c01f # load x3 with value 0xb8b0c01f
sw x3, 0(x2) # store 0xb8b0c01f in memory
flh f5, 0(x2) # load 0xb8b0c01f from memory into f5
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f10, 0(x2) # load 0x0000bc00 from memory into f10
fnmadd.h f24, f3, f5, f10, dyn # perform operation
fnmadd.h f24, f3, f5, f10, rdn # perform operation
fnmadd.h f24, f3, f5, f10, rmm # perform operation
fnmadd.h f24, f3, f5, f10, rne # perform operation
fnmadd.h f24, f3, f5, f10, rtz # perform operation
fnmadd.h f24, f3, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f3, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f3, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f3, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f3, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f3, f5, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x3e00)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f1, 0(x2) # load 0x0000fc00 from memory into f1
la x2, scratch
li x3, 0x7993b683 # load x3 with value 0x7993b683
sw x3, 0(x2) # store 0x7993b683 in memory
flh f5, 0(x2) # load 0x7993b683 from memory into f5
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f25, 0(x2) # load 0x00003e00 from memory into f25
fnmadd.h f26, f1, f5, f25, dyn # perform operation
fnmadd.h f26, f1, f5, f25, rdn # perform operation
fnmadd.h f26, f1, f5, f25, rmm # perform operation
fnmadd.h f26, f1, f5, f25, rne # perform operation
fnmadd.h f26, f1, f5, f25, rtz # perform operation
fnmadd.h f26, f1, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f1, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f1, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f1, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f1, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f1, f5, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xbe00)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f26, 0(x2) # load 0x0000fc00 from memory into f26
la x2, scratch
li x3, 0xa33db494 # load x3 with value 0xa33db494
sw x3, 0(x2) # store 0xa33db494 in memory
flh f28, 0(x2) # load 0xa33db494 from memory into f28
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f7, 0(x2) # load 0x0000be00 from memory into f7
fnmadd.h f1, f26, f28, f7, dyn # perform operation
fnmadd.h f1, f26, f28, f7, rdn # perform operation
fnmadd.h f1, f26, f28, f7, rmm # perform operation
fnmadd.h f1, f26, f28, f7, rne # perform operation
fnmadd.h f1, f26, f28, f7, rtz # perform operation
fnmadd.h f1, f26, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f26, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f26, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f26, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f26, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f26, f28, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x4000)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f13, 0(x2) # load 0x0000fc00 from memory into f13
la x2, scratch
li x3, 0x42a2cda8 # load x3 with value 0x42a2cda8
sw x3, 0(x2) # store 0x42a2cda8 in memory
flh f26, 0(x2) # load 0x42a2cda8 from memory into f26
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f10, 0(x2) # load 0x00004000 from memory into f10
fnmadd.h f16, f13, f26, f10, dyn # perform operation
fnmadd.h f16, f13, f26, f10, rdn # perform operation
fnmadd.h f16, f13, f26, f10, rmm # perform operation
fnmadd.h f16, f13, f26, f10, rne # perform operation
fnmadd.h f16, f13, f26, f10, rtz # perform operation
fnmadd.h f16, f13, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f13, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f13, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f13, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f13, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f13, f26, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xc000)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f10, 0(x2) # load 0x0000fc00 from memory into f10
la x2, scratch
li x3, 0x2ea8c66e # load x3 with value 0x2ea8c66e
sw x3, 0(x2) # store 0x2ea8c66e in memory
flh f2, 0(x2) # load 0x2ea8c66e from memory into f2
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f5, 0(x2) # load 0x0000c000 from memory into f5
fnmadd.h f8, f10, f2, f5, dyn # perform operation
fnmadd.h f8, f10, f2, f5, rdn # perform operation
fnmadd.h f8, f10, f2, f5, rmm # perform operation
fnmadd.h f8, f10, f2, f5, rne # perform operation
fnmadd.h f8, f10, f2, f5, rtz # perform operation
fnmadd.h f8, f10, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f10, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f10, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f10, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f10, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f10, f2, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x400)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f20, 0(x2) # load 0x0000fc00 from memory into f20
la x2, scratch
li x3, 0xb1d3baec # load x3 with value 0xb1d3baec
sw x3, 0(x2) # store 0xb1d3baec in memory
flh f28, 0(x2) # load 0xb1d3baec from memory into f28
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f6, 0(x2) # load 0x00000400 from memory into f6
fnmadd.h f11, f20, f28, f6, dyn # perform operation
fnmadd.h f11, f20, f28, f6, rdn # perform operation
fnmadd.h f11, f20, f28, f6, rmm # perform operation
fnmadd.h f11, f20, f28, f6, rne # perform operation
fnmadd.h f11, f20, f28, f6, rtz # perform operation
fnmadd.h f11, f20, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f20, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f20, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f20, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f20, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f20, f28, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x8400)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f3, 0(x2) # load 0x0000fc00 from memory into f3
la x2, scratch
li x3, 0x18adaad0 # load x3 with value 0x18adaad0
sw x3, 0(x2) # store 0x18adaad0 in memory
flh f10, 0(x2) # load 0x18adaad0 from memory into f10
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f11, 0(x2) # load 0x00008400 from memory into f11
fnmadd.h f5, f3, f10, f11, dyn # perform operation
fnmadd.h f5, f3, f10, f11, rdn # perform operation
fnmadd.h f5, f3, f10, f11, rmm # perform operation
fnmadd.h f5, f3, f10, f11, rne # perform operation
fnmadd.h f5, f3, f10, f11, rtz # perform operation
fnmadd.h f5, f3, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f3, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f3, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f3, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f3, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f3, f10, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7bff)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f15, 0(x2) # load 0x0000fc00 from memory into f15
la x2, scratch
li x3, 0x9e65804a # load x3 with value 0x9e65804a
sw x3, 0(x2) # store 0x9e65804a in memory
flh f9, 0(x2) # load 0x9e65804a from memory into f9
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f31, 0(x2) # load 0x00007bff from memory into f31
fnmadd.h f17, f15, f9, f31, dyn # perform operation
fnmadd.h f17, f15, f9, f31, rdn # perform operation
fnmadd.h f17, f15, f9, f31, rmm # perform operation
fnmadd.h f17, f15, f9, f31, rne # perform operation
fnmadd.h f17, f15, f9, f31, rtz # perform operation
fnmadd.h f17, f15, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f15, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f15, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f15, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f15, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f15, f9, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xfbff)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f26, 0(x2) # load 0x0000fc00 from memory into f26
la x2, scratch
li x3, 0xc017c0ea # load x3 with value 0xc017c0ea
sw x3, 0(x2) # store 0xc017c0ea in memory
flh f20, 0(x2) # load 0xc017c0ea from memory into f20
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f8, 0(x2) # load 0x0000fbff from memory into f8
fnmadd.h f17, f26, f20, f8, dyn # perform operation
fnmadd.h f17, f26, f20, f8, rdn # perform operation
fnmadd.h f17, f26, f20, f8, rmm # perform operation
fnmadd.h f17, f26, f20, f8, rne # perform operation
fnmadd.h f17, f26, f20, f8, rtz # perform operation
fnmadd.h f17, f26, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f26, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f26, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f26, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f26, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f26, f20, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x3ff)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f9, 0(x2) # load 0x0000fc00 from memory into f9
la x2, scratch
li x3, 0x6ca06828 # load x3 with value 0x6ca06828
sw x3, 0(x2) # store 0x6ca06828 in memory
flh f15, 0(x2) # load 0x6ca06828 from memory into f15
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f28, 0(x2) # load 0x000003ff from memory into f28
fnmadd.h f31, f9, f15, f28, dyn # perform operation
fnmadd.h f31, f9, f15, f28, rdn # perform operation
fnmadd.h f31, f9, f15, f28, rmm # perform operation
fnmadd.h f31, f9, f15, f28, rne # perform operation
fnmadd.h f31, f9, f15, f28, rtz # perform operation
fnmadd.h f31, f9, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f9, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f9, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f9, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f9, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f9, f15, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x83ff)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f23, 0(x2) # load 0x0000fc00 from memory into f23
la x2, scratch
li x3, 0xd68d4587 # load x3 with value 0xd68d4587
sw x3, 0(x2) # store 0xd68d4587 in memory
flh f2, 0(x2) # load 0xd68d4587 from memory into f2
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f22, 0(x2) # load 0x000083ff from memory into f22
fnmadd.h f9, f23, f2, f22, dyn # perform operation
fnmadd.h f9, f23, f2, f22, rdn # perform operation
fnmadd.h f9, f23, f2, f22, rmm # perform operation
fnmadd.h f9, f23, f2, f22, rne # perform operation
fnmadd.h f9, f23, f2, f22, rtz # perform operation
fnmadd.h f9, f23, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f23, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f23, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f23, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f23, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f23, f2, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x200)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f1, 0(x2) # load 0x0000fc00 from memory into f1
la x2, scratch
li x3, 0x81507d67 # load x3 with value 0x81507d67
sw x3, 0(x2) # store 0x81507d67 in memory
flh f12, 0(x2) # load 0x81507d67 from memory into f12
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f8, 0(x2) # load 0x00000200 from memory into f8
fnmadd.h f7, f1, f12, f8, dyn # perform operation
fnmadd.h f7, f1, f12, f8, rdn # perform operation
fnmadd.h f7, f1, f12, f8, rmm # perform operation
fnmadd.h f7, f1, f12, f8, rne # perform operation
fnmadd.h f7, f1, f12, f8, rtz # perform operation
fnmadd.h f7, f1, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f1, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f1, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f1, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f1, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f1, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x8200)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f14, 0(x2) # load 0x0000fc00 from memory into f14
la x2, scratch
li x3, 0xa13ca069 # load x3 with value 0xa13ca069
sw x3, 0(x2) # store 0xa13ca069 in memory
flh f30, 0(x2) # load 0xa13ca069 from memory into f30
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f20, 0(x2) # load 0x00008200 from memory into f20
fnmadd.h f23, f14, f30, f20, dyn # perform operation
fnmadd.h f23, f14, f30, f20, rdn # perform operation
fnmadd.h f23, f14, f30, f20, rmm # perform operation
fnmadd.h f23, f14, f30, f20, rne # perform operation
fnmadd.h f23, f14, f30, f20, rtz # perform operation
fnmadd.h f23, f14, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f14, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f14, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f14, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f14, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f14, f30, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x1)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f2, 0(x2) # load 0x0000fc00 from memory into f2
la x2, scratch
li x3, 0x28f41453 # load x3 with value 0x28f41453
sw x3, 0(x2) # store 0x28f41453 in memory
flh f21, 0(x2) # load 0x28f41453 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f1, 0(x2) # load 0x00000001 from memory into f1
fnmadd.h f26, f2, f21, f1, dyn # perform operation
fnmadd.h f26, f2, f21, f1, rdn # perform operation
fnmadd.h f26, f2, f21, f1, rmm # perform operation
fnmadd.h f26, f2, f21, f1, rne # perform operation
fnmadd.h f26, f2, f21, f1, rtz # perform operation
fnmadd.h f26, f2, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f2, f21, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x8001)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f15, 0(x2) # load 0x0000fc00 from memory into f15
la x2, scratch
li x3, 0x28216fc0 # load x3 with value 0x28216fc0
sw x3, 0(x2) # store 0x28216fc0 in memory
flh f11, 0(x2) # load 0x28216fc0 from memory into f11
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f1, 0(x2) # load 0x00008001 from memory into f1
fnmadd.h f14, f15, f11, f1, dyn # perform operation
fnmadd.h f14, f15, f11, f1, rdn # perform operation
fnmadd.h f14, f15, f11, f1, rmm # perform operation
fnmadd.h f14, f15, f11, f1, rne # perform operation
fnmadd.h f14, f15, f11, f1, rtz # perform operation
fnmadd.h f14, f15, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f15, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f15, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f15, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f15, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f15, f11, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7c00)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f14, 0(x2) # load 0x0000fc00 from memory into f14
la x2, scratch
li x3, 0x6ad28598 # load x3 with value 0x6ad28598
sw x3, 0(x2) # store 0x6ad28598 in memory
flh f21, 0(x2) # load 0x6ad28598 from memory into f21
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
fnmadd.h f9, f14, f21, f19, dyn # perform operation
fnmadd.h f9, f14, f21, f19, rdn # perform operation
fnmadd.h f9, f14, f21, f19, rmm # perform operation
fnmadd.h f9, f14, f21, f19, rne # perform operation
fnmadd.h f9, f14, f21, f19, rtz # perform operation
fnmadd.h f9, f14, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f14, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f14, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f14, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f14, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f14, f21, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xfc00)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f1, 0(x2) # load 0x0000fc00 from memory into f1
la x2, scratch
li x3, 0x6805c865 # load x3 with value 0x6805c865
sw x3, 0(x2) # store 0x6805c865 in memory
flh f25, 0(x2) # load 0x6805c865 from memory into f25
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f7, 0(x2) # load 0x0000fc00 from memory into f7
fnmadd.h f28, f1, f25, f7, dyn # perform operation
fnmadd.h f28, f1, f25, f7, rdn # perform operation
fnmadd.h f28, f1, f25, f7, rmm # perform operation
fnmadd.h f28, f1, f25, f7, rne # perform operation
fnmadd.h f28, f1, f25, f7, rtz # perform operation
fnmadd.h f28, f1, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f1, f25, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7e00)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f25, 0(x2) # load 0x0000fc00 from memory into f25
la x2, scratch
li x3, 0x3e11c908 # load x3 with value 0x3e11c908
sw x3, 0(x2) # store 0x3e11c908 in memory
flh f24, 0(x2) # load 0x3e11c908 from memory into f24
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f15, 0(x2) # load 0x00007e00 from memory into f15
fnmadd.h f16, f25, f24, f15, dyn # perform operation
fnmadd.h f16, f25, f24, f15, rdn # perform operation
fnmadd.h f16, f25, f24, f15, rmm # perform operation
fnmadd.h f16, f25, f24, f15, rne # perform operation
fnmadd.h f16, f25, f24, f15, rtz # perform operation
fnmadd.h f16, f25, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f25, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f25, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f25, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f25, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f25, f24, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7fff)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f27, 0(x2) # load 0x0000fc00 from memory into f27
la x2, scratch
li x3, 0x837f1596 # load x3 with value 0x837f1596
sw x3, 0(x2) # store 0x837f1596 in memory
flh f20, 0(x2) # load 0x837f1596 from memory into f20
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f7, 0(x2) # load 0x00007fff from memory into f7
fnmadd.h f25, f27, f20, f7, dyn # perform operation
fnmadd.h f25, f27, f20, f7, rdn # perform operation
fnmadd.h f25, f27, f20, f7, rmm # perform operation
fnmadd.h f25, f27, f20, f7, rne # perform operation
fnmadd.h f25, f27, f20, f7, rtz # perform operation
fnmadd.h f25, f27, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f27, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f27, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f27, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f27, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f27, f20, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xfe00)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f16, 0(x2) # load 0x0000fc00 from memory into f16
la x2, scratch
li x3, 0xfaf4d971 # load x3 with value 0xfaf4d971
sw x3, 0(x2) # store 0xfaf4d971 in memory
flh f24, 0(x2) # load 0xfaf4d971 from memory into f24
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f30, 0(x2) # load 0x0000fe00 from memory into f30
fnmadd.h f29, f16, f24, f30, dyn # perform operation
fnmadd.h f29, f16, f24, f30, rdn # perform operation
fnmadd.h f29, f16, f24, f30, rmm # perform operation
fnmadd.h f29, f16, f24, f30, rne # perform operation
fnmadd.h f29, f16, f24, f30, rtz # perform operation
fnmadd.h f29, f16, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f16, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f16, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f16, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f16, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f16, f24, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7c01)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f17, 0(x2) # load 0x0000fc00 from memory into f17
la x2, scratch
li x3, 0xde8aff40 # load x3 with value 0xde8aff40
sw x3, 0(x2) # store 0xde8aff40 in memory
flh f30, 0(x2) # load 0xde8aff40 from memory into f30
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f28, 0(x2) # load 0x00007c01 from memory into f28
fnmadd.h f23, f17, f30, f28, dyn # perform operation
fnmadd.h f23, f17, f30, f28, rdn # perform operation
fnmadd.h f23, f17, f30, f28, rmm # perform operation
fnmadd.h f23, f17, f30, f28, rne # perform operation
fnmadd.h f23, f17, f30, f28, rtz # perform operation
fnmadd.h f23, f17, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f17, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f17, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f17, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f17, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f17, f30, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7dff)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f30, 0(x2) # load 0x0000fc00 from memory into f30
la x2, scratch
li x3, 0xa69b718e # load x3 with value 0xa69b718e
sw x3, 0(x2) # store 0xa69b718e in memory
flh f1, 0(x2) # load 0xa69b718e from memory into f1
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f14, 0(x2) # load 0x00007dff from memory into f14
fnmadd.h f24, f30, f1, f14, dyn # perform operation
fnmadd.h f24, f30, f1, f14, rdn # perform operation
fnmadd.h f24, f30, f1, f14, rmm # perform operation
fnmadd.h f24, f30, f1, f14, rne # perform operation
fnmadd.h f24, f30, f1, f14, rtz # perform operation
fnmadd.h f24, f30, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f30, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f30, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f30, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f30, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f30, f1, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xfc01)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f6, 0(x2) # load 0x0000fc00 from memory into f6
la x2, scratch
li x3, 0xc692718f # load x3 with value 0xc692718f
sw x3, 0(x2) # store 0xc692718f in memory
flh f9, 0(x2) # load 0xc692718f from memory into f9
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f14, 0(x2) # load 0x0000fc01 from memory into f14
fnmadd.h f29, f6, f9, f14, dyn # perform operation
fnmadd.h f29, f6, f9, f14, rdn # perform operation
fnmadd.h f29, f6, f9, f14, rmm # perform operation
fnmadd.h f29, f6, f9, f14, rne # perform operation
fnmadd.h f29, f6, f9, f14, rtz # perform operation
fnmadd.h f29, f6, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f6, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x58b4)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f17, 0(x2) # load 0x0000fc00 from memory into f17
la x2, scratch
li x3, 0x96e114ce # load x3 with value 0x96e114ce
sw x3, 0(x2) # store 0x96e114ce in memory
flh f20, 0(x2) # load 0x96e114ce from memory into f20
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f8, 0(x2) # load 0x000058b4 from memory into f8
fnmadd.h f14, f17, f20, f8, dyn # perform operation
fnmadd.h f14, f17, f20, f8, rdn # perform operation
fnmadd.h f14, f17, f20, f8, rmm # perform operation
fnmadd.h f14, f17, f20, f8, rne # perform operation
fnmadd.h f14, f17, f20, f8, rtz # perform operation
fnmadd.h f14, f17, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f17, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f17, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f17, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f17, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f17, f20, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xc93a)
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f3, 0(x2) # load 0x0000fc00 from memory into f3
la x2, scratch
li x3, 0xa39061da # load x3 with value 0xa39061da
sw x3, 0(x2) # store 0xa39061da in memory
flh f13, 0(x2) # load 0xa39061da from memory into f13
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f8, 0(x2) # load 0x0000c93a from memory into f8
fnmadd.h f24, f3, f13, f8, dyn # perform operation
fnmadd.h f24, f3, f13, f8, rdn # perform operation
fnmadd.h f24, f3, f13, f8, rmm # perform operation
fnmadd.h f24, f3, f13, f8, rne # perform operation
fnmadd.h f24, f3, f13, f8, rtz # perform operation
fnmadd.h f24, f3, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f3, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f3, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f3, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f3, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f3, f13, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x0)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f8, 0(x2) # load 0x00007e00 from memory into f8
la x2, scratch
li x3, 0x4f59c267 # load x3 with value 0x4f59c267
sw x3, 0(x2) # store 0x4f59c267 in memory
flh f20, 0(x2) # load 0x4f59c267 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f19, 0(x2) # load 0x00000000 from memory into f19
fnmadd.h f7, f8, f20, f19, dyn # perform operation
fnmadd.h f7, f8, f20, f19, rdn # perform operation
fnmadd.h f7, f8, f20, f19, rmm # perform operation
fnmadd.h f7, f8, f20, f19, rne # perform operation
fnmadd.h f7, f8, f20, f19, rtz # perform operation
fnmadd.h f7, f8, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f8, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f8, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f8, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f8, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f8, f20, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x8000)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
la x2, scratch
li x3, 0x05304942 # load x3 with value 0x05304942
sw x3, 0(x2) # store 0x05304942 in memory
flh f15, 0(x2) # load 0x05304942 from memory into f15
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f14, 0(x2) # load 0x00008000 from memory into f14
fnmadd.h f6, f18, f15, f14, dyn # perform operation
fnmadd.h f6, f18, f15, f14, rdn # perform operation
fnmadd.h f6, f18, f15, f14, rmm # perform operation
fnmadd.h f6, f18, f15, f14, rne # perform operation
fnmadd.h f6, f18, f15, f14, rtz # perform operation
fnmadd.h f6, f18, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f18, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f18, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f18, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f18, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f18, f15, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f16, 0(x2) # load 0x00007e00 from memory into f16
la x2, scratch
li x3, 0xe9928840 # load x3 with value 0xe9928840
sw x3, 0(x2) # store 0xe9928840 in memory
flh f23, 0(x2) # load 0xe9928840 from memory into f23
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f22, 0(x2) # load 0x00003c00 from memory into f22
fnmadd.h f6, f16, f23, f22, dyn # perform operation
fnmadd.h f6, f16, f23, f22, rdn # perform operation
fnmadd.h f6, f16, f23, f22, rmm # perform operation
fnmadd.h f6, f16, f23, f22, rne # perform operation
fnmadd.h f6, f16, f23, f22, rtz # perform operation
fnmadd.h f6, f16, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f16, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f16, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f16, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f16, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f16, f23, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f13, 0(x2) # load 0x00007e00 from memory into f13
la x2, scratch
li x3, 0xf199872a # load x3 with value 0xf199872a
sw x3, 0(x2) # store 0xf199872a in memory
flh f5, 0(x2) # load 0xf199872a from memory into f5
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f14, 0(x2) # load 0x0000bc00 from memory into f14
fnmadd.h f23, f13, f5, f14, dyn # perform operation
fnmadd.h f23, f13, f5, f14, rdn # perform operation
fnmadd.h f23, f13, f5, f14, rmm # perform operation
fnmadd.h f23, f13, f5, f14, rne # perform operation
fnmadd.h f23, f13, f5, f14, rtz # perform operation
fnmadd.h f23, f13, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f13, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f13, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f13, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f13, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f13, f5, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f31, 0(x2) # load 0x00007e00 from memory into f31
la x2, scratch
li x3, 0x8a0063f8 # load x3 with value 0x8a0063f8
sw x3, 0(x2) # store 0x8a0063f8 in memory
flh f25, 0(x2) # load 0x8a0063f8 from memory into f25
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f29, 0(x2) # load 0x00003e00 from memory into f29
fnmadd.h f14, f31, f25, f29, dyn # perform operation
fnmadd.h f14, f31, f25, f29, rdn # perform operation
fnmadd.h f14, f31, f25, f29, rmm # perform operation
fnmadd.h f14, f31, f25, f29, rne # perform operation
fnmadd.h f14, f31, f25, f29, rtz # perform operation
fnmadd.h f14, f31, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f31, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f31, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f31, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f31, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f31, f25, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f23, 0(x2) # load 0x00007e00 from memory into f23
la x2, scratch
li x3, 0xa45dd7c1 # load x3 with value 0xa45dd7c1
sw x3, 0(x2) # store 0xa45dd7c1 in memory
flh f15, 0(x2) # load 0xa45dd7c1 from memory into f15
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f8, 0(x2) # load 0x0000be00 from memory into f8
fnmadd.h f12, f23, f15, f8, dyn # perform operation
fnmadd.h f12, f23, f15, f8, rdn # perform operation
fnmadd.h f12, f23, f15, f8, rmm # perform operation
fnmadd.h f12, f23, f15, f8, rne # perform operation
fnmadd.h f12, f23, f15, f8, rtz # perform operation
fnmadd.h f12, f23, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f23, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f23, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f23, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f23, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f23, f15, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x4000)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f25, 0(x2) # load 0x00007e00 from memory into f25
la x2, scratch
li x3, 0xa79d8cc8 # load x3 with value 0xa79d8cc8
sw x3, 0(x2) # store 0xa79d8cc8 in memory
flh f1, 0(x2) # load 0xa79d8cc8 from memory into f1
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f9, 0(x2) # load 0x00004000 from memory into f9
fnmadd.h f6, f25, f1, f9, dyn # perform operation
fnmadd.h f6, f25, f1, f9, rdn # perform operation
fnmadd.h f6, f25, f1, f9, rmm # perform operation
fnmadd.h f6, f25, f1, f9, rne # perform operation
fnmadd.h f6, f25, f1, f9, rtz # perform operation
fnmadd.h f6, f25, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f25, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f25, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f25, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f25, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f25, f1, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xc000)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f11, 0(x2) # load 0x00007e00 from memory into f11
la x2, scratch
li x3, 0xc8a38b9d # load x3 with value 0xc8a38b9d
sw x3, 0(x2) # store 0xc8a38b9d in memory
flh f3, 0(x2) # load 0xc8a38b9d from memory into f3
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f7, 0(x2) # load 0x0000c000 from memory into f7
fnmadd.h f19, f11, f3, f7, dyn # perform operation
fnmadd.h f19, f11, f3, f7, rdn # perform operation
fnmadd.h f19, f11, f3, f7, rmm # perform operation
fnmadd.h f19, f11, f3, f7, rne # perform operation
fnmadd.h f19, f11, f3, f7, rtz # perform operation
fnmadd.h f19, f11, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f11, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f11, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f11, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f11, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f11, f3, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x400)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
la x2, scratch
li x3, 0xcb621b9e # load x3 with value 0xcb621b9e
sw x3, 0(x2) # store 0xcb621b9e in memory
flh f31, 0(x2) # load 0xcb621b9e from memory into f31
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f7, 0(x2) # load 0x00000400 from memory into f7
fnmadd.h f10, f20, f31, f7, dyn # perform operation
fnmadd.h f10, f20, f31, f7, rdn # perform operation
fnmadd.h f10, f20, f31, f7, rmm # perform operation
fnmadd.h f10, f20, f31, f7, rne # perform operation
fnmadd.h f10, f20, f31, f7, rtz # perform operation
fnmadd.h f10, f20, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f20, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f20, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f20, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f20, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f20, f31, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x8400)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f30, 0(x2) # load 0x00007e00 from memory into f30
la x2, scratch
li x3, 0x2a46833b # load x3 with value 0x2a46833b
sw x3, 0(x2) # store 0x2a46833b in memory
flh f11, 0(x2) # load 0x2a46833b from memory into f11
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f22, 0(x2) # load 0x00008400 from memory into f22
fnmadd.h f8, f30, f11, f22, dyn # perform operation
fnmadd.h f8, f30, f11, f22, rdn # perform operation
fnmadd.h f8, f30, f11, f22, rmm # perform operation
fnmadd.h f8, f30, f11, f22, rne # perform operation
fnmadd.h f8, f30, f11, f22, rtz # perform operation
fnmadd.h f8, f30, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f30, f11, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f10, 0(x2) # load 0x00007e00 from memory into f10
la x2, scratch
li x3, 0xdbd3714e # load x3 with value 0xdbd3714e
sw x3, 0(x2) # store 0xdbd3714e in memory
flh f5, 0(x2) # load 0xdbd3714e from memory into f5
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f18, 0(x2) # load 0x00007bff from memory into f18
fnmadd.h f26, f10, f5, f18, dyn # perform operation
fnmadd.h f26, f10, f5, f18, rdn # perform operation
fnmadd.h f26, f10, f5, f18, rmm # perform operation
fnmadd.h f26, f10, f5, f18, rne # perform operation
fnmadd.h f26, f10, f5, f18, rtz # perform operation
fnmadd.h f26, f10, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f10, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f10, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f10, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f10, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f10, f5, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
la x2, scratch
li x3, 0xa8f12aac # load x3 with value 0xa8f12aac
sw x3, 0(x2) # store 0xa8f12aac in memory
flh f6, 0(x2) # load 0xa8f12aac from memory into f6
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f7, 0(x2) # load 0x0000fbff from memory into f7
fnmadd.h f12, f18, f6, f7, dyn # perform operation
fnmadd.h f12, f18, f6, f7, rdn # perform operation
fnmadd.h f12, f18, f6, f7, rmm # perform operation
fnmadd.h f12, f18, f6, f7, rne # perform operation
fnmadd.h f12, f18, f6, f7, rtz # perform operation
fnmadd.h f12, f18, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f18, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f18, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f18, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f18, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f18, f6, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
la x2, scratch
li x3, 0x1f705148 # load x3 with value 0x1f705148
sw x3, 0(x2) # store 0x1f705148 in memory
flh f15, 0(x2) # load 0x1f705148 from memory into f15
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f30, 0(x2) # load 0x000003ff from memory into f30
fnmadd.h f24, f5, f15, f30, dyn # perform operation
fnmadd.h f24, f5, f15, f30, rdn # perform operation
fnmadd.h f24, f5, f15, f30, rmm # perform operation
fnmadd.h f24, f5, f15, f30, rne # perform operation
fnmadd.h f24, f5, f15, f30, rtz # perform operation
fnmadd.h f24, f5, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f5, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f5, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f5, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f5, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f5, f15, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f14, 0(x2) # load 0x00007e00 from memory into f14
la x2, scratch
li x3, 0x14f11089 # load x3 with value 0x14f11089
sw x3, 0(x2) # store 0x14f11089 in memory
flh f21, 0(x2) # load 0x14f11089 from memory into f21
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f22, 0(x2) # load 0x000083ff from memory into f22
fnmadd.h f8, f14, f21, f22, dyn # perform operation
fnmadd.h f8, f14, f21, f22, rdn # perform operation
fnmadd.h f8, f14, f21, f22, rmm # perform operation
fnmadd.h f8, f14, f21, f22, rne # perform operation
fnmadd.h f8, f14, f21, f22, rtz # perform operation
fnmadd.h f8, f14, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f14, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f14, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f14, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f14, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f14, f21, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x200)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
la x2, scratch
li x3, 0xbe68c737 # load x3 with value 0xbe68c737
sw x3, 0(x2) # store 0xbe68c737 in memory
flh f7, 0(x2) # load 0xbe68c737 from memory into f7
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f30, 0(x2) # load 0x00000200 from memory into f30
fnmadd.h f17, f20, f7, f30, dyn # perform operation
fnmadd.h f17, f20, f7, f30, rdn # perform operation
fnmadd.h f17, f20, f7, f30, rmm # perform operation
fnmadd.h f17, f20, f7, f30, rne # perform operation
fnmadd.h f17, f20, f7, f30, rtz # perform operation
fnmadd.h f17, f20, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f20, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f20, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f20, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f20, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f20, f7, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x8200)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
la x2, scratch
li x3, 0x15a1f9ce # load x3 with value 0x15a1f9ce
sw x3, 0(x2) # store 0x15a1f9ce in memory
flh f16, 0(x2) # load 0x15a1f9ce from memory into f16
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f29, 0(x2) # load 0x00008200 from memory into f29
fnmadd.h f9, f5, f16, f29, dyn # perform operation
fnmadd.h f9, f5, f16, f29, rdn # perform operation
fnmadd.h f9, f5, f16, f29, rmm # perform operation
fnmadd.h f9, f5, f16, f29, rne # perform operation
fnmadd.h f9, f5, f16, f29, rtz # perform operation
fnmadd.h f9, f5, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f5, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f5, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f5, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f5, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f5, f16, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x1)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f19, 0(x2) # load 0x00007e00 from memory into f19
la x2, scratch
li x3, 0x3a1e38a7 # load x3 with value 0x3a1e38a7
sw x3, 0(x2) # store 0x3a1e38a7 in memory
flh f25, 0(x2) # load 0x3a1e38a7 from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f13, 0(x2) # load 0x00000001 from memory into f13
fnmadd.h f17, f19, f25, f13, dyn # perform operation
fnmadd.h f17, f19, f25, f13, rdn # perform operation
fnmadd.h f17, f19, f25, f13, rmm # perform operation
fnmadd.h f17, f19, f25, f13, rne # perform operation
fnmadd.h f17, f19, f25, f13, rtz # perform operation
fnmadd.h f17, f19, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f19, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f19, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f19, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f19, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f19, f25, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x8001)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f9, 0(x2) # load 0x00007e00 from memory into f9
la x2, scratch
li x3, 0x8ff1f1ea # load x3 with value 0x8ff1f1ea
sw x3, 0(x2) # store 0x8ff1f1ea in memory
flh f12, 0(x2) # load 0x8ff1f1ea from memory into f12
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f28, 0(x2) # load 0x00008001 from memory into f28
fnmadd.h f8, f9, f12, f28, dyn # perform operation
fnmadd.h f8, f9, f12, f28, rdn # perform operation
fnmadd.h f8, f9, f12, f28, rmm # perform operation
fnmadd.h f8, f9, f12, f28, rne # perform operation
fnmadd.h f8, f9, f12, f28, rtz # perform operation
fnmadd.h f8, f9, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f9, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f9, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f9, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f9, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f9, f12, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f17, 0(x2) # load 0x00007e00 from memory into f17
la x2, scratch
li x3, 0x040ea83c # load x3 with value 0x040ea83c
sw x3, 0(x2) # store 0x040ea83c in memory
flh f27, 0(x2) # load 0x040ea83c from memory into f27
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f8, 0(x2) # load 0x00007c00 from memory into f8
fnmadd.h f12, f17, f27, f8, dyn # perform operation
fnmadd.h f12, f17, f27, f8, rdn # perform operation
fnmadd.h f12, f17, f27, f8, rmm # perform operation
fnmadd.h f12, f17, f27, f8, rne # perform operation
fnmadd.h f12, f17, f27, f8, rtz # perform operation
fnmadd.h f12, f17, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f17, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f17, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f17, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f17, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f17, f27, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f8, 0(x2) # load 0x00007e00 from memory into f8
la x2, scratch
li x3, 0x2737fbf2 # load x3 with value 0x2737fbf2
sw x3, 0(x2) # store 0x2737fbf2 in memory
flh f22, 0(x2) # load 0x2737fbf2 from memory into f22
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f2, 0(x2) # load 0x0000fc00 from memory into f2
fnmadd.h f15, f8, f22, f2, dyn # perform operation
fnmadd.h f15, f8, f22, f2, rdn # perform operation
fnmadd.h f15, f8, f22, f2, rmm # perform operation
fnmadd.h f15, f8, f22, f2, rne # perform operation
fnmadd.h f15, f8, f22, f2, rtz # perform operation
fnmadd.h f15, f8, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f8, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f8, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f8, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f8, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f8, f22, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f13, 0(x2) # load 0x00007e00 from memory into f13
la x2, scratch
li x3, 0xa967bc67 # load x3 with value 0xa967bc67
sw x3, 0(x2) # store 0xa967bc67 in memory
flh f7, 0(x2) # load 0xa967bc67 from memory into f7
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f12, 0(x2) # load 0x00007e00 from memory into f12
fnmadd.h f23, f13, f7, f12, dyn # perform operation
fnmadd.h f23, f13, f7, f12, rdn # perform operation
fnmadd.h f23, f13, f7, f12, rmm # perform operation
fnmadd.h f23, f13, f7, f12, rne # perform operation
fnmadd.h f23, f13, f7, f12, rtz # perform operation
fnmadd.h f23, f13, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f13, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f13, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f13, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f13, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f13, f7, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f6, 0(x2) # load 0x00007e00 from memory into f6
la x2, scratch
li x3, 0xbe93ea95 # load x3 with value 0xbe93ea95
sw x3, 0(x2) # store 0xbe93ea95 in memory
flh f17, 0(x2) # load 0xbe93ea95 from memory into f17
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f25, 0(x2) # load 0x00007fff from memory into f25
fnmadd.h f12, f6, f17, f25, dyn # perform operation
fnmadd.h f12, f6, f17, f25, rdn # perform operation
fnmadd.h f12, f6, f17, f25, rmm # perform operation
fnmadd.h f12, f6, f17, f25, rne # perform operation
fnmadd.h f12, f6, f17, f25, rtz # perform operation
fnmadd.h f12, f6, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f6, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f6, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f6, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f6, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f6, f17, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f19, 0(x2) # load 0x00007e00 from memory into f19
la x2, scratch
li x3, 0xc51f5c0b # load x3 with value 0xc51f5c0b
sw x3, 0(x2) # store 0xc51f5c0b in memory
flh f12, 0(x2) # load 0xc51f5c0b from memory into f12
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f20, 0(x2) # load 0x0000fe00 from memory into f20
fnmadd.h f22, f19, f12, f20, dyn # perform operation
fnmadd.h f22, f19, f12, f20, rdn # perform operation
fnmadd.h f22, f19, f12, f20, rmm # perform operation
fnmadd.h f22, f19, f12, f20, rne # perform operation
fnmadd.h f22, f19, f12, f20, rtz # perform operation
fnmadd.h f22, f19, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f19, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f19, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f19, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f19, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f19, f12, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
la x2, scratch
li x3, 0x6a042ff2 # load x3 with value 0x6a042ff2
sw x3, 0(x2) # store 0x6a042ff2 in memory
flh f13, 0(x2) # load 0x6a042ff2 from memory into f13
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f29, 0(x2) # load 0x00007c01 from memory into f29
fnmadd.h f11, f20, f13, f29, dyn # perform operation
fnmadd.h f11, f20, f13, f29, rdn # perform operation
fnmadd.h f11, f20, f13, f29, rmm # perform operation
fnmadd.h f11, f20, f13, f29, rne # perform operation
fnmadd.h f11, f20, f13, f29, rtz # perform operation
fnmadd.h f11, f20, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f20, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f20, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f20, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f20, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f20, f13, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f11, 0(x2) # load 0x00007e00 from memory into f11
la x2, scratch
li x3, 0xc0061091 # load x3 with value 0xc0061091
sw x3, 0(x2) # store 0xc0061091 in memory
flh f27, 0(x2) # load 0xc0061091 from memory into f27
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f24, 0(x2) # load 0x00007dff from memory into f24
fnmadd.h f2, f11, f27, f24, dyn # perform operation
fnmadd.h f2, f11, f27, f24, rdn # perform operation
fnmadd.h f2, f11, f27, f24, rmm # perform operation
fnmadd.h f2, f11, f27, f24, rne # perform operation
fnmadd.h f2, f11, f27, f24, rtz # perform operation
fnmadd.h f2, f11, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f11, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f11, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f11, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f11, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f11, f27, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f27, 0(x2) # load 0x00007e00 from memory into f27
la x2, scratch
li x3, 0x51371385 # load x3 with value 0x51371385
sw x3, 0(x2) # store 0x51371385 in memory
flh f21, 0(x2) # load 0x51371385 from memory into f21
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f31, 0(x2) # load 0x0000fc01 from memory into f31
fnmadd.h f25, f27, f21, f31, dyn # perform operation
fnmadd.h f25, f27, f21, f31, rdn # perform operation
fnmadd.h f25, f27, f21, f31, rmm # perform operation
fnmadd.h f25, f27, f21, f31, rne # perform operation
fnmadd.h f25, f27, f21, f31, rtz # perform operation
fnmadd.h f25, f27, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f27, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f27, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f27, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f27, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f27, f21, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
la x2, scratch
li x3, 0xc297a1a8 # load x3 with value 0xc297a1a8
sw x3, 0(x2) # store 0xc297a1a8 in memory
flh f24, 0(x2) # load 0xc297a1a8 from memory into f24
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f8, 0(x2) # load 0x000058b4 from memory into f8
fnmadd.h f2, f20, f24, f8, dyn # perform operation
fnmadd.h f2, f20, f24, f8, rdn # perform operation
fnmadd.h f2, f20, f24, f8, rmm # perform operation
fnmadd.h f2, f20, f24, f8, rne # perform operation
fnmadd.h f2, f20, f24, f8, rtz # perform operation
fnmadd.h f2, f20, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f20, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f20, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f20, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f20, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f20, f24, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
la x2, scratch
li x3, 0x3e15590f # load x3 with value 0x3e15590f
sw x3, 0(x2) # store 0x3e15590f in memory
flh f19, 0(x2) # load 0x3e15590f from memory into f19
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f15, 0(x2) # load 0x0000c93a from memory into f15
fnmadd.h f14, f24, f19, f15, dyn # perform operation
fnmadd.h f14, f24, f19, f15, rdn # perform operation
fnmadd.h f14, f24, f19, f15, rmm # perform operation
fnmadd.h f14, f24, f19, f15, rne # perform operation
fnmadd.h f14, f24, f19, f15, rtz # perform operation
fnmadd.h f14, f24, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f24, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f24, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f24, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f24, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f24, f19, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x0)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f3, 0(x2) # load 0x00007fff from memory into f3
la x2, scratch
li x3, 0x68397c5a # load x3 with value 0x68397c5a
sw x3, 0(x2) # store 0x68397c5a in memory
flh f30, 0(x2) # load 0x68397c5a from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f7, 0(x2) # load 0x00000000 from memory into f7
fnmadd.h f8, f3, f30, f7, dyn # perform operation
fnmadd.h f8, f3, f30, f7, rdn # perform operation
fnmadd.h f8, f3, f30, f7, rmm # perform operation
fnmadd.h f8, f3, f30, f7, rne # perform operation
fnmadd.h f8, f3, f30, f7, rtz # perform operation
fnmadd.h f8, f3, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f3, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f3, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f3, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f3, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f3, f30, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x8000)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f31, 0(x2) # load 0x00007fff from memory into f31
la x2, scratch
li x3, 0x92ab58a2 # load x3 with value 0x92ab58a2
sw x3, 0(x2) # store 0x92ab58a2 in memory
flh f14, 0(x2) # load 0x92ab58a2 from memory into f14
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f20, 0(x2) # load 0x00008000 from memory into f20
fnmadd.h f7, f31, f14, f20, dyn # perform operation
fnmadd.h f7, f31, f14, f20, rdn # perform operation
fnmadd.h f7, f31, f14, f20, rmm # perform operation
fnmadd.h f7, f31, f14, f20, rne # perform operation
fnmadd.h f7, f31, f14, f20, rtz # perform operation
fnmadd.h f7, f31, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f31, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f31, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f31, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f31, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f31, f14, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x3c00)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f27, 0(x2) # load 0x00007fff from memory into f27
la x2, scratch
li x3, 0xfbb1d55f # load x3 with value 0xfbb1d55f
sw x3, 0(x2) # store 0xfbb1d55f in memory
flh f14, 0(x2) # load 0xfbb1d55f from memory into f14
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
fnmadd.h f26, f27, f14, f16, dyn # perform operation
fnmadd.h f26, f27, f14, f16, rdn # perform operation
fnmadd.h f26, f27, f14, f16, rmm # perform operation
fnmadd.h f26, f27, f14, f16, rne # perform operation
fnmadd.h f26, f27, f14, f16, rtz # perform operation
fnmadd.h f26, f27, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f27, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f27, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f27, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f27, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f27, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xbc00)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f10, 0(x2) # load 0x00007fff from memory into f10
la x2, scratch
li x3, 0x08b75fb8 # load x3 with value 0x08b75fb8
sw x3, 0(x2) # store 0x08b75fb8 in memory
flh f23, 0(x2) # load 0x08b75fb8 from memory into f23
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f29, 0(x2) # load 0x0000bc00 from memory into f29
fnmadd.h f6, f10, f23, f29, dyn # perform operation
fnmadd.h f6, f10, f23, f29, rdn # perform operation
fnmadd.h f6, f10, f23, f29, rmm # perform operation
fnmadd.h f6, f10, f23, f29, rne # perform operation
fnmadd.h f6, f10, f23, f29, rtz # perform operation
fnmadd.h f6, f10, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f10, f23, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x3e00)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f3, 0(x2) # load 0x00007fff from memory into f3
la x2, scratch
li x3, 0xca9dc9bb # load x3 with value 0xca9dc9bb
sw x3, 0(x2) # store 0xca9dc9bb in memory
flh f9, 0(x2) # load 0xca9dc9bb from memory into f9
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f1, 0(x2) # load 0x00003e00 from memory into f1
fnmadd.h f20, f3, f9, f1, dyn # perform operation
fnmadd.h f20, f3, f9, f1, rdn # perform operation
fnmadd.h f20, f3, f9, f1, rmm # perform operation
fnmadd.h f20, f3, f9, f1, rne # perform operation
fnmadd.h f20, f3, f9, f1, rtz # perform operation
fnmadd.h f20, f3, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f3, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f3, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f3, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f3, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f3, f9, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xbe00)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f31, 0(x2) # load 0x00007fff from memory into f31
la x2, scratch
li x3, 0x0a8f115a # load x3 with value 0x0a8f115a
sw x3, 0(x2) # store 0x0a8f115a in memory
flh f29, 0(x2) # load 0x0a8f115a from memory into f29
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f22, 0(x2) # load 0x0000be00 from memory into f22
fnmadd.h f26, f31, f29, f22, dyn # perform operation
fnmadd.h f26, f31, f29, f22, rdn # perform operation
fnmadd.h f26, f31, f29, f22, rmm # perform operation
fnmadd.h f26, f31, f29, f22, rne # perform operation
fnmadd.h f26, f31, f29, f22, rtz # perform operation
fnmadd.h f26, f31, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f31, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f31, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f31, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f31, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f31, f29, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x4000)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f24, 0(x2) # load 0x00007fff from memory into f24
la x2, scratch
li x3, 0x358a0b1e # load x3 with value 0x358a0b1e
sw x3, 0(x2) # store 0x358a0b1e in memory
flh f6, 0(x2) # load 0x358a0b1e from memory into f6
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
fnmadd.h f15, f24, f6, f23, dyn # perform operation
fnmadd.h f15, f24, f6, f23, rdn # perform operation
fnmadd.h f15, f24, f6, f23, rmm # perform operation
fnmadd.h f15, f24, f6, f23, rne # perform operation
fnmadd.h f15, f24, f6, f23, rtz # perform operation
fnmadd.h f15, f24, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f24, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f24, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f24, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f24, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f24, f6, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xc000)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f21, 0(x2) # load 0x00007fff from memory into f21
la x2, scratch
li x3, 0x8f879184 # load x3 with value 0x8f879184
sw x3, 0(x2) # store 0x8f879184 in memory
flh f30, 0(x2) # load 0x8f879184 from memory into f30
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f7, 0(x2) # load 0x0000c000 from memory into f7
fnmadd.h f6, f21, f30, f7, dyn # perform operation
fnmadd.h f6, f21, f30, f7, rdn # perform operation
fnmadd.h f6, f21, f30, f7, rmm # perform operation
fnmadd.h f6, f21, f30, f7, rne # perform operation
fnmadd.h f6, f21, f30, f7, rtz # perform operation
fnmadd.h f6, f21, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f21, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f21, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f21, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f21, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f21, f30, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x400)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f29, 0(x2) # load 0x00007fff from memory into f29
la x2, scratch
li x3, 0x3159a9a8 # load x3 with value 0x3159a9a8
sw x3, 0(x2) # store 0x3159a9a8 in memory
flh f9, 0(x2) # load 0x3159a9a8 from memory into f9
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f14, 0(x2) # load 0x00000400 from memory into f14
fnmadd.h f24, f29, f9, f14, dyn # perform operation
fnmadd.h f24, f29, f9, f14, rdn # perform operation
fnmadd.h f24, f29, f9, f14, rmm # perform operation
fnmadd.h f24, f29, f9, f14, rne # perform operation
fnmadd.h f24, f29, f9, f14, rtz # perform operation
fnmadd.h f24, f29, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f29, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f29, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f29, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f29, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f29, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x8400)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f5, 0(x2) # load 0x00007fff from memory into f5
la x2, scratch
li x3, 0xb2174c9b # load x3 with value 0xb2174c9b
sw x3, 0(x2) # store 0xb2174c9b in memory
flh f14, 0(x2) # load 0xb2174c9b from memory into f14
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f11, 0(x2) # load 0x00008400 from memory into f11
fnmadd.h f8, f5, f14, f11, dyn # perform operation
fnmadd.h f8, f5, f14, f11, rdn # perform operation
fnmadd.h f8, f5, f14, f11, rmm # perform operation
fnmadd.h f8, f5, f14, f11, rne # perform operation
fnmadd.h f8, f5, f14, f11, rtz # perform operation
fnmadd.h f8, f5, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f5, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f5, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f5, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f5, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f5, f14, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7bff)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f3, 0(x2) # load 0x00007fff from memory into f3
la x2, scratch
li x3, 0xffb736b9 # load x3 with value 0xffb736b9
sw x3, 0(x2) # store 0xffb736b9 in memory
flh f21, 0(x2) # load 0xffb736b9 from memory into f21
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f14, 0(x2) # load 0x00007bff from memory into f14
fnmadd.h f22, f3, f21, f14, dyn # perform operation
fnmadd.h f22, f3, f21, f14, rdn # perform operation
fnmadd.h f22, f3, f21, f14, rmm # perform operation
fnmadd.h f22, f3, f21, f14, rne # perform operation
fnmadd.h f22, f3, f21, f14, rtz # perform operation
fnmadd.h f22, f3, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f3, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f3, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f3, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f3, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f3, f21, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xfbff)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f19, 0(x2) # load 0x00007fff from memory into f19
la x2, scratch
li x3, 0xa927017f # load x3 with value 0xa927017f
sw x3, 0(x2) # store 0xa927017f in memory
flh f22, 0(x2) # load 0xa927017f from memory into f22
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f20, 0(x2) # load 0x0000fbff from memory into f20
fnmadd.h f9, f19, f22, f20, dyn # perform operation
fnmadd.h f9, f19, f22, f20, rdn # perform operation
fnmadd.h f9, f19, f22, f20, rmm # perform operation
fnmadd.h f9, f19, f22, f20, rne # perform operation
fnmadd.h f9, f19, f22, f20, rtz # perform operation
fnmadd.h f9, f19, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f19, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f19, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f19, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f19, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f19, f22, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x3ff)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f13, 0(x2) # load 0x00007fff from memory into f13
la x2, scratch
li x3, 0xe2313169 # load x3 with value 0xe2313169
sw x3, 0(x2) # store 0xe2313169 in memory
flh f10, 0(x2) # load 0xe2313169 from memory into f10
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f22, 0(x2) # load 0x000003ff from memory into f22
fnmadd.h f7, f13, f10, f22, dyn # perform operation
fnmadd.h f7, f13, f10, f22, rdn # perform operation
fnmadd.h f7, f13, f10, f22, rmm # perform operation
fnmadd.h f7, f13, f10, f22, rne # perform operation
fnmadd.h f7, f13, f10, f22, rtz # perform operation
fnmadd.h f7, f13, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f13, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f13, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f13, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f13, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f13, f10, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x83ff)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f16, 0(x2) # load 0x00007fff from memory into f16
la x2, scratch
li x3, 0xc376cab3 # load x3 with value 0xc376cab3
sw x3, 0(x2) # store 0xc376cab3 in memory
flh f10, 0(x2) # load 0xc376cab3 from memory into f10
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f13, 0(x2) # load 0x000083ff from memory into f13
fnmadd.h f28, f16, f10, f13, dyn # perform operation
fnmadd.h f28, f16, f10, f13, rdn # perform operation
fnmadd.h f28, f16, f10, f13, rmm # perform operation
fnmadd.h f28, f16, f10, f13, rne # perform operation
fnmadd.h f28, f16, f10, f13, rtz # perform operation
fnmadd.h f28, f16, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f16, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f16, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f16, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f16, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f16, f10, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x200)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f14, 0(x2) # load 0x00007fff from memory into f14
la x2, scratch
li x3, 0x42706b2b # load x3 with value 0x42706b2b
sw x3, 0(x2) # store 0x42706b2b in memory
flh f5, 0(x2) # load 0x42706b2b from memory into f5
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
fnmadd.h f10, f14, f5, f13, dyn # perform operation
fnmadd.h f10, f14, f5, f13, rdn # perform operation
fnmadd.h f10, f14, f5, f13, rmm # perform operation
fnmadd.h f10, f14, f5, f13, rne # perform operation
fnmadd.h f10, f14, f5, f13, rtz # perform operation
fnmadd.h f10, f14, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f14, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f14, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f14, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f14, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f14, f5, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x8200)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f27, 0(x2) # load 0x00007fff from memory into f27
la x2, scratch
li x3, 0x015d8558 # load x3 with value 0x015d8558
sw x3, 0(x2) # store 0x015d8558 in memory
flh f11, 0(x2) # load 0x015d8558 from memory into f11
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f10, 0(x2) # load 0x00008200 from memory into f10
fnmadd.h f15, f27, f11, f10, dyn # perform operation
fnmadd.h f15, f27, f11, f10, rdn # perform operation
fnmadd.h f15, f27, f11, f10, rmm # perform operation
fnmadd.h f15, f27, f11, f10, rne # perform operation
fnmadd.h f15, f27, f11, f10, rtz # perform operation
fnmadd.h f15, f27, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f27, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f27, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f27, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f27, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f27, f11, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x1)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f24, 0(x2) # load 0x00007fff from memory into f24
la x2, scratch
li x3, 0x0811e326 # load x3 with value 0x0811e326
sw x3, 0(x2) # store 0x0811e326 in memory
flh f9, 0(x2) # load 0x0811e326 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f18, 0(x2) # load 0x00000001 from memory into f18
fnmadd.h f22, f24, f9, f18, dyn # perform operation
fnmadd.h f22, f24, f9, f18, rdn # perform operation
fnmadd.h f22, f24, f9, f18, rmm # perform operation
fnmadd.h f22, f24, f9, f18, rne # perform operation
fnmadd.h f22, f24, f9, f18, rtz # perform operation
fnmadd.h f22, f24, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f24, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f24, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f24, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f24, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f24, f9, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x8001)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f1, 0(x2) # load 0x00007fff from memory into f1
la x2, scratch
li x3, 0x9b5c71c8 # load x3 with value 0x9b5c71c8
sw x3, 0(x2) # store 0x9b5c71c8 in memory
flh f26, 0(x2) # load 0x9b5c71c8 from memory into f26
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f31, 0(x2) # load 0x00008001 from memory into f31
fnmadd.h f23, f1, f26, f31, dyn # perform operation
fnmadd.h f23, f1, f26, f31, rdn # perform operation
fnmadd.h f23, f1, f26, f31, rmm # perform operation
fnmadd.h f23, f1, f26, f31, rne # perform operation
fnmadd.h f23, f1, f26, f31, rtz # perform operation
fnmadd.h f23, f1, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f1, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f1, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f1, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f1, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f1, f26, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7c00)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f17, 0(x2) # load 0x00007fff from memory into f17
la x2, scratch
li x3, 0xc16afe68 # load x3 with value 0xc16afe68
sw x3, 0(x2) # store 0xc16afe68 in memory
flh f19, 0(x2) # load 0xc16afe68 from memory into f19
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f28, 0(x2) # load 0x00007c00 from memory into f28
fnmadd.h f27, f17, f19, f28, dyn # perform operation
fnmadd.h f27, f17, f19, f28, rdn # perform operation
fnmadd.h f27, f17, f19, f28, rmm # perform operation
fnmadd.h f27, f17, f19, f28, rne # perform operation
fnmadd.h f27, f17, f19, f28, rtz # perform operation
fnmadd.h f27, f17, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f17, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f17, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f17, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f17, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f17, f19, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xfc00)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f17, 0(x2) # load 0x00007fff from memory into f17
la x2, scratch
li x3, 0xb3dab2bd # load x3 with value 0xb3dab2bd
sw x3, 0(x2) # store 0xb3dab2bd in memory
flh f7, 0(x2) # load 0xb3dab2bd from memory into f7
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f9, 0(x2) # load 0x0000fc00 from memory into f9
fnmadd.h f28, f17, f7, f9, dyn # perform operation
fnmadd.h f28, f17, f7, f9, rdn # perform operation
fnmadd.h f28, f17, f7, f9, rmm # perform operation
fnmadd.h f28, f17, f7, f9, rne # perform operation
fnmadd.h f28, f17, f7, f9, rtz # perform operation
fnmadd.h f28, f17, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f17, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f17, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f17, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f17, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f17, f7, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7e00)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f7, 0(x2) # load 0x00007fff from memory into f7
la x2, scratch
li x3, 0x56ba64a6 # load x3 with value 0x56ba64a6
sw x3, 0(x2) # store 0x56ba64a6 in memory
flh f9, 0(x2) # load 0x56ba64a6 from memory into f9
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f28, 0(x2) # load 0x00007e00 from memory into f28
fnmadd.h f8, f7, f9, f28, dyn # perform operation
fnmadd.h f8, f7, f9, f28, rdn # perform operation
fnmadd.h f8, f7, f9, f28, rmm # perform operation
fnmadd.h f8, f7, f9, f28, rne # perform operation
fnmadd.h f8, f7, f9, f28, rtz # perform operation
fnmadd.h f8, f7, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f7, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f7, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f7, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f7, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f7, f9, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7fff)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f6, 0(x2) # load 0x00007fff from memory into f6
la x2, scratch
li x3, 0x8b43b0a3 # load x3 with value 0x8b43b0a3
sw x3, 0(x2) # store 0x8b43b0a3 in memory
flh f1, 0(x2) # load 0x8b43b0a3 from memory into f1
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f28, 0(x2) # load 0x00007fff from memory into f28
fnmadd.h f23, f6, f1, f28, dyn # perform operation
fnmadd.h f23, f6, f1, f28, rdn # perform operation
fnmadd.h f23, f6, f1, f28, rmm # perform operation
fnmadd.h f23, f6, f1, f28, rne # perform operation
fnmadd.h f23, f6, f1, f28, rtz # perform operation
fnmadd.h f23, f6, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f6, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f6, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f6, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f6, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f6, f1, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xfe00)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f18, 0(x2) # load 0x00007fff from memory into f18
la x2, scratch
li x3, 0x7c80c300 # load x3 with value 0x7c80c300
sw x3, 0(x2) # store 0x7c80c300 in memory
flh f26, 0(x2) # load 0x7c80c300 from memory into f26
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f7, 0(x2) # load 0x0000fe00 from memory into f7
fnmadd.h f3, f18, f26, f7, dyn # perform operation
fnmadd.h f3, f18, f26, f7, rdn # perform operation
fnmadd.h f3, f18, f26, f7, rmm # perform operation
fnmadd.h f3, f18, f26, f7, rne # perform operation
fnmadd.h f3, f18, f26, f7, rtz # perform operation
fnmadd.h f3, f18, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f18, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f18, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f18, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f18, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f18, f26, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7c01)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f16, 0(x2) # load 0x00007fff from memory into f16
la x2, scratch
li x3, 0xcdab0644 # load x3 with value 0xcdab0644
sw x3, 0(x2) # store 0xcdab0644 in memory
flh f14, 0(x2) # load 0xcdab0644 from memory into f14
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f3, 0(x2) # load 0x00007c01 from memory into f3
fnmadd.h f26, f16, f14, f3, dyn # perform operation
fnmadd.h f26, f16, f14, f3, rdn # perform operation
fnmadd.h f26, f16, f14, f3, rmm # perform operation
fnmadd.h f26, f16, f14, f3, rne # perform operation
fnmadd.h f26, f16, f14, f3, rtz # perform operation
fnmadd.h f26, f16, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f16, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f16, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f16, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f16, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f16, f14, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7dff)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f14, 0(x2) # load 0x00007fff from memory into f14
la x2, scratch
li x3, 0xfd5ba9f5 # load x3 with value 0xfd5ba9f5
sw x3, 0(x2) # store 0xfd5ba9f5 in memory
flh f11, 0(x2) # load 0xfd5ba9f5 from memory into f11
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f22, 0(x2) # load 0x00007dff from memory into f22
fnmadd.h f7, f14, f11, f22, dyn # perform operation
fnmadd.h f7, f14, f11, f22, rdn # perform operation
fnmadd.h f7, f14, f11, f22, rmm # perform operation
fnmadd.h f7, f14, f11, f22, rne # perform operation
fnmadd.h f7, f14, f11, f22, rtz # perform operation
fnmadd.h f7, f14, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f14, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f14, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f14, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f14, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f14, f11, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xfc01)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f30, 0(x2) # load 0x00007fff from memory into f30
la x2, scratch
li x3, 0x04fdc69e # load x3 with value 0x04fdc69e
sw x3, 0(x2) # store 0x04fdc69e in memory
flh f24, 0(x2) # load 0x04fdc69e from memory into f24
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f22, 0(x2) # load 0x0000fc01 from memory into f22
fnmadd.h f17, f30, f24, f22, dyn # perform operation
fnmadd.h f17, f30, f24, f22, rdn # perform operation
fnmadd.h f17, f30, f24, f22, rmm # perform operation
fnmadd.h f17, f30, f24, f22, rne # perform operation
fnmadd.h f17, f30, f24, f22, rtz # perform operation
fnmadd.h f17, f30, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f30, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f30, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f30, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f30, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f30, f24, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x58b4)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f9, 0(x2) # load 0x00007fff from memory into f9
la x2, scratch
li x3, 0xdc09d54d # load x3 with value 0xdc09d54d
sw x3, 0(x2) # store 0xdc09d54d in memory
flh f25, 0(x2) # load 0xdc09d54d from memory into f25
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f15, 0(x2) # load 0x000058b4 from memory into f15
fnmadd.h f31, f9, f25, f15, dyn # perform operation
fnmadd.h f31, f9, f25, f15, rdn # perform operation
fnmadd.h f31, f9, f25, f15, rmm # perform operation
fnmadd.h f31, f9, f25, f15, rne # perform operation
fnmadd.h f31, f9, f25, f15, rtz # perform operation
fnmadd.h f31, f9, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f9, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f9, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f9, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f9, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f9, f25, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xc93a)
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f6, 0(x2) # load 0x00007fff from memory into f6
la x2, scratch
li x3, 0x2c770898 # load x3 with value 0x2c770898
sw x3, 0(x2) # store 0x2c770898 in memory
flh f8, 0(x2) # load 0x2c770898 from memory into f8
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f1, 0(x2) # load 0x0000c93a from memory into f1
fnmadd.h f28, f6, f8, f1, dyn # perform operation
fnmadd.h f28, f6, f8, f1, rdn # perform operation
fnmadd.h f28, f6, f8, f1, rmm # perform operation
fnmadd.h f28, f6, f8, f1, rne # perform operation
fnmadd.h f28, f6, f8, f1, rtz # perform operation
fnmadd.h f28, f6, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f6, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f6, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f6, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f6, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f6, f8, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x0)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f13, 0(x2) # load 0x0000fe00 from memory into f13
la x2, scratch
li x3, 0x140cf0c1 # load x3 with value 0x140cf0c1
sw x3, 0(x2) # store 0x140cf0c1 in memory
flh f22, 0(x2) # load 0x140cf0c1 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f30, 0(x2) # load 0x00000000 from memory into f30
fnmadd.h f9, f13, f22, f30, dyn # perform operation
fnmadd.h f9, f13, f22, f30, rdn # perform operation
fnmadd.h f9, f13, f22, f30, rmm # perform operation
fnmadd.h f9, f13, f22, f30, rne # perform operation
fnmadd.h f9, f13, f22, f30, rtz # perform operation
fnmadd.h f9, f13, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f13, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f13, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f13, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f13, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f13, f22, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x8000)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f24, 0(x2) # load 0x0000fe00 from memory into f24
la x2, scratch
li x3, 0xbb915215 # load x3 with value 0xbb915215
sw x3, 0(x2) # store 0xbb915215 in memory
flh f3, 0(x2) # load 0xbb915215 from memory into f3
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f1, 0(x2) # load 0x00008000 from memory into f1
fnmadd.h f14, f24, f3, f1, dyn # perform operation
fnmadd.h f14, f24, f3, f1, rdn # perform operation
fnmadd.h f14, f24, f3, f1, rmm # perform operation
fnmadd.h f14, f24, f3, f1, rne # perform operation
fnmadd.h f14, f24, f3, f1, rtz # perform operation
fnmadd.h f14, f24, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f24, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f24, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f24, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f24, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f24, f3, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x3c00)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f5, 0(x2) # load 0x0000fe00 from memory into f5
la x2, scratch
li x3, 0xc1d5530c # load x3 with value 0xc1d5530c
sw x3, 0(x2) # store 0xc1d5530c in memory
flh f30, 0(x2) # load 0xc1d5530c from memory into f30
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f2, 0(x2) # load 0x00003c00 from memory into f2
fnmadd.h f24, f5, f30, f2, dyn # perform operation
fnmadd.h f24, f5, f30, f2, rdn # perform operation
fnmadd.h f24, f5, f30, f2, rmm # perform operation
fnmadd.h f24, f5, f30, f2, rne # perform operation
fnmadd.h f24, f5, f30, f2, rtz # perform operation
fnmadd.h f24, f5, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f5, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f5, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f5, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f5, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f5, f30, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0xbc00)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f25, 0(x2) # load 0x0000fe00 from memory into f25
la x2, scratch
li x3, 0xcb091106 # load x3 with value 0xcb091106
sw x3, 0(x2) # store 0xcb091106 in memory
flh f2, 0(x2) # load 0xcb091106 from memory into f2
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f22, 0(x2) # load 0x0000bc00 from memory into f22
fnmadd.h f10, f25, f2, f22, dyn # perform operation
fnmadd.h f10, f25, f2, f22, rdn # perform operation
fnmadd.h f10, f25, f2, f22, rmm # perform operation
fnmadd.h f10, f25, f2, f22, rne # perform operation
fnmadd.h f10, f25, f2, f22, rtz # perform operation
fnmadd.h f10, f25, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f25, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f25, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f25, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f25, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f25, f2, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x3e00)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f25, 0(x2) # load 0x0000fe00 from memory into f25
la x2, scratch
li x3, 0x86f93eb9 # load x3 with value 0x86f93eb9
sw x3, 0(x2) # store 0x86f93eb9 in memory
flh f2, 0(x2) # load 0x86f93eb9 from memory into f2
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
fnmadd.h f16, f25, f2, f10, dyn # perform operation
fnmadd.h f16, f25, f2, f10, rdn # perform operation
fnmadd.h f16, f25, f2, f10, rmm # perform operation
fnmadd.h f16, f25, f2, f10, rne # perform operation
fnmadd.h f16, f25, f2, f10, rtz # perform operation
fnmadd.h f16, f25, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f25, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f25, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f25, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f25, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f25, f2, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0xbe00)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f3, 0(x2) # load 0x0000fe00 from memory into f3
la x2, scratch
li x3, 0xd779f6eb # load x3 with value 0xd779f6eb
sw x3, 0(x2) # store 0xd779f6eb in memory
flh f19, 0(x2) # load 0xd779f6eb from memory into f19
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f8, 0(x2) # load 0x0000be00 from memory into f8
fnmadd.h f17, f3, f19, f8, dyn # perform operation
fnmadd.h f17, f3, f19, f8, rdn # perform operation
fnmadd.h f17, f3, f19, f8, rmm # perform operation
fnmadd.h f17, f3, f19, f8, rne # perform operation
fnmadd.h f17, f3, f19, f8, rtz # perform operation
fnmadd.h f17, f3, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f3, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f3, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f3, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f3, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f3, f19, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x4000)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f9, 0(x2) # load 0x0000fe00 from memory into f9
la x2, scratch
li x3, 0x0df911a7 # load x3 with value 0x0df911a7
sw x3, 0(x2) # store 0x0df911a7 in memory
flh f18, 0(x2) # load 0x0df911a7 from memory into f18
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f28, 0(x2) # load 0x00004000 from memory into f28
fnmadd.h f21, f9, f18, f28, dyn # perform operation
fnmadd.h f21, f9, f18, f28, rdn # perform operation
fnmadd.h f21, f9, f18, f28, rmm # perform operation
fnmadd.h f21, f9, f18, f28, rne # perform operation
fnmadd.h f21, f9, f18, f28, rtz # perform operation
fnmadd.h f21, f9, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f9, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f9, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f9, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f9, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f9, f18, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0xc000)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f1, 0(x2) # load 0x0000fe00 from memory into f1
la x2, scratch
li x3, 0xffce3de7 # load x3 with value 0xffce3de7
sw x3, 0(x2) # store 0xffce3de7 in memory
flh f8, 0(x2) # load 0xffce3de7 from memory into f8
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f5, 0(x2) # load 0x0000c000 from memory into f5
fnmadd.h f21, f1, f8, f5, dyn # perform operation
fnmadd.h f21, f1, f8, f5, rdn # perform operation
fnmadd.h f21, f1, f8, f5, rmm # perform operation
fnmadd.h f21, f1, f8, f5, rne # perform operation
fnmadd.h f21, f1, f8, f5, rtz # perform operation
fnmadd.h f21, f1, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f1, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f1, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f1, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f1, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f1, f8, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x400)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f20, 0(x2) # load 0x0000fe00 from memory into f20
la x2, scratch
li x3, 0x1b47e509 # load x3 with value 0x1b47e509
sw x3, 0(x2) # store 0x1b47e509 in memory
flh f11, 0(x2) # load 0x1b47e509 from memory into f11
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
fnmadd.h f19, f20, f11, f18, dyn # perform operation
fnmadd.h f19, f20, f11, f18, rdn # perform operation
fnmadd.h f19, f20, f11, f18, rmm # perform operation
fnmadd.h f19, f20, f11, f18, rne # perform operation
fnmadd.h f19, f20, f11, f18, rtz # perform operation
fnmadd.h f19, f20, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f20, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f20, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f20, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f20, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f20, f11, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x8400)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f24, 0(x2) # load 0x0000fe00 from memory into f24
la x2, scratch
li x3, 0xd309315b # load x3 with value 0xd309315b
sw x3, 0(x2) # store 0xd309315b in memory
flh f19, 0(x2) # load 0xd309315b from memory into f19
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f10, 0(x2) # load 0x00008400 from memory into f10
fnmadd.h f9, f24, f19, f10, dyn # perform operation
fnmadd.h f9, f24, f19, f10, rdn # perform operation
fnmadd.h f9, f24, f19, f10, rmm # perform operation
fnmadd.h f9, f24, f19, f10, rne # perform operation
fnmadd.h f9, f24, f19, f10, rtz # perform operation
fnmadd.h f9, f24, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f24, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f24, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f24, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f24, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f24, f19, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x7bff)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f7, 0(x2) # load 0x0000fe00 from memory into f7
la x2, scratch
li x3, 0x8da984fc # load x3 with value 0x8da984fc
sw x3, 0(x2) # store 0x8da984fc in memory
flh f22, 0(x2) # load 0x8da984fc from memory into f22
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f13, 0(x2) # load 0x00007bff from memory into f13
fnmadd.h f9, f7, f22, f13, dyn # perform operation
fnmadd.h f9, f7, f22, f13, rdn # perform operation
fnmadd.h f9, f7, f22, f13, rmm # perform operation
fnmadd.h f9, f7, f22, f13, rne # perform operation
fnmadd.h f9, f7, f22, f13, rtz # perform operation
fnmadd.h f9, f7, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f7, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f7, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f7, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f7, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f7, f22, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0xfbff)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f5, 0(x2) # load 0x0000fe00 from memory into f5
la x2, scratch
li x3, 0x6d932aba # load x3 with value 0x6d932aba
sw x3, 0(x2) # store 0x6d932aba in memory
flh f28, 0(x2) # load 0x6d932aba from memory into f28
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f2, 0(x2) # load 0x0000fbff from memory into f2
fnmadd.h f19, f5, f28, f2, dyn # perform operation
fnmadd.h f19, f5, f28, f2, rdn # perform operation
fnmadd.h f19, f5, f28, f2, rmm # perform operation
fnmadd.h f19, f5, f28, f2, rne # perform operation
fnmadd.h f19, f5, f28, f2, rtz # perform operation
fnmadd.h f19, f5, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f5, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f5, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f5, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f5, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f5, f28, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x3ff)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f20, 0(x2) # load 0x0000fe00 from memory into f20
la x2, scratch
li x3, 0xb6eb8d6b # load x3 with value 0xb6eb8d6b
sw x3, 0(x2) # store 0xb6eb8d6b in memory
flh f14, 0(x2) # load 0xb6eb8d6b from memory into f14
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
fnmadd.h f25, f20, f14, f15, dyn # perform operation
fnmadd.h f25, f20, f14, f15, rdn # perform operation
fnmadd.h f25, f20, f14, f15, rmm # perform operation
fnmadd.h f25, f20, f14, f15, rne # perform operation
fnmadd.h f25, f20, f14, f15, rtz # perform operation
fnmadd.h f25, f20, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f20, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f20, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f20, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f20, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f20, f14, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x83ff)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f16, 0(x2) # load 0x0000fe00 from memory into f16
la x2, scratch
li x3, 0xe9781ddc # load x3 with value 0xe9781ddc
sw x3, 0(x2) # store 0xe9781ddc in memory
flh f11, 0(x2) # load 0xe9781ddc from memory into f11
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f6, 0(x2) # load 0x000083ff from memory into f6
fnmadd.h f30, f16, f11, f6, dyn # perform operation
fnmadd.h f30, f16, f11, f6, rdn # perform operation
fnmadd.h f30, f16, f11, f6, rmm # perform operation
fnmadd.h f30, f16, f11, f6, rne # perform operation
fnmadd.h f30, f16, f11, f6, rtz # perform operation
fnmadd.h f30, f16, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f16, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f16, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f16, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f16, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f16, f11, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x200)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f21, 0(x2) # load 0x0000fe00 from memory into f21
la x2, scratch
li x3, 0x2d7e8790 # load x3 with value 0x2d7e8790
sw x3, 0(x2) # store 0x2d7e8790 in memory
flh f11, 0(x2) # load 0x2d7e8790 from memory into f11
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
fnmadd.h f29, f21, f11, f19, dyn # perform operation
fnmadd.h f29, f21, f11, f19, rdn # perform operation
fnmadd.h f29, f21, f11, f19, rmm # perform operation
fnmadd.h f29, f21, f11, f19, rne # perform operation
fnmadd.h f29, f21, f11, f19, rtz # perform operation
fnmadd.h f29, f21, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f21, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f21, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f21, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f21, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f21, f11, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x8200)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f12, 0(x2) # load 0x0000fe00 from memory into f12
la x2, scratch
li x3, 0xd908b5a2 # load x3 with value 0xd908b5a2
sw x3, 0(x2) # store 0xd908b5a2 in memory
flh f31, 0(x2) # load 0xd908b5a2 from memory into f31
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
fnmadd.h f16, f12, f31, f6, dyn # perform operation
fnmadd.h f16, f12, f31, f6, rdn # perform operation
fnmadd.h f16, f12, f31, f6, rmm # perform operation
fnmadd.h f16, f12, f31, f6, rne # perform operation
fnmadd.h f16, f12, f31, f6, rtz # perform operation
fnmadd.h f16, f12, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f12, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f12, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f12, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f12, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f12, f31, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x1)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f9, 0(x2) # load 0x0000fe00 from memory into f9
la x2, scratch
li x3, 0x9ad1a3e1 # load x3 with value 0x9ad1a3e1
sw x3, 0(x2) # store 0x9ad1a3e1 in memory
flh f31, 0(x2) # load 0x9ad1a3e1 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f23, 0(x2) # load 0x00000001 from memory into f23
fnmadd.h f10, f9, f31, f23, dyn # perform operation
fnmadd.h f10, f9, f31, f23, rdn # perform operation
fnmadd.h f10, f9, f31, f23, rmm # perform operation
fnmadd.h f10, f9, f31, f23, rne # perform operation
fnmadd.h f10, f9, f31, f23, rtz # perform operation
fnmadd.h f10, f9, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f9, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f9, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f9, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f9, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f9, f31, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x8001)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f22, 0(x2) # load 0x0000fe00 from memory into f22
la x2, scratch
li x3, 0xcea88360 # load x3 with value 0xcea88360
sw x3, 0(x2) # store 0xcea88360 in memory
flh f11, 0(x2) # load 0xcea88360 from memory into f11
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f16, 0(x2) # load 0x00008001 from memory into f16
fnmadd.h f12, f22, f11, f16, dyn # perform operation
fnmadd.h f12, f22, f11, f16, rdn # perform operation
fnmadd.h f12, f22, f11, f16, rmm # perform operation
fnmadd.h f12, f22, f11, f16, rne # perform operation
fnmadd.h f12, f22, f11, f16, rtz # perform operation
fnmadd.h f12, f22, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f22, f11, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x7c00)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f9, 0(x2) # load 0x0000fe00 from memory into f9
la x2, scratch
li x3, 0x419e893c # load x3 with value 0x419e893c
sw x3, 0(x2) # store 0x419e893c in memory
flh f19, 0(x2) # load 0x419e893c from memory into f19
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f8, 0(x2) # load 0x00007c00 from memory into f8
fnmadd.h f28, f9, f19, f8, dyn # perform operation
fnmadd.h f28, f9, f19, f8, rdn # perform operation
fnmadd.h f28, f9, f19, f8, rmm # perform operation
fnmadd.h f28, f9, f19, f8, rne # perform operation
fnmadd.h f28, f9, f19, f8, rtz # perform operation
fnmadd.h f28, f9, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f9, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f9, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f9, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f9, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f9, f19, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0xfc00)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f16, 0(x2) # load 0x0000fe00 from memory into f16
la x2, scratch
li x3, 0x2a774fc7 # load x3 with value 0x2a774fc7
sw x3, 0(x2) # store 0x2a774fc7 in memory
flh f3, 0(x2) # load 0x2a774fc7 from memory into f3
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f17, 0(x2) # load 0x0000fc00 from memory into f17
fnmadd.h f24, f16, f3, f17, dyn # perform operation
fnmadd.h f24, f16, f3, f17, rdn # perform operation
fnmadd.h f24, f16, f3, f17, rmm # perform operation
fnmadd.h f24, f16, f3, f17, rne # perform operation
fnmadd.h f24, f16, f3, f17, rtz # perform operation
fnmadd.h f24, f16, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f16, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f16, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f16, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f16, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f16, f3, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x7e00)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f1, 0(x2) # load 0x0000fe00 from memory into f1
la x2, scratch
li x3, 0xd6951420 # load x3 with value 0xd6951420
sw x3, 0(x2) # store 0xd6951420 in memory
flh f28, 0(x2) # load 0xd6951420 from memory into f28
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f25, 0(x2) # load 0x00007e00 from memory into f25
fnmadd.h f16, f1, f28, f25, dyn # perform operation
fnmadd.h f16, f1, f28, f25, rdn # perform operation
fnmadd.h f16, f1, f28, f25, rmm # perform operation
fnmadd.h f16, f1, f28, f25, rne # perform operation
fnmadd.h f16, f1, f28, f25, rtz # perform operation
fnmadd.h f16, f1, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f1, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f1, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f1, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f1, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f1, f28, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x7fff)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f2, 0(x2) # load 0x0000fe00 from memory into f2
la x2, scratch
li x3, 0xfca52274 # load x3 with value 0xfca52274
sw x3, 0(x2) # store 0xfca52274 in memory
flh f6, 0(x2) # load 0xfca52274 from memory into f6
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f3, 0(x2) # load 0x00007fff from memory into f3
fnmadd.h f23, f2, f6, f3, dyn # perform operation
fnmadd.h f23, f2, f6, f3, rdn # perform operation
fnmadd.h f23, f2, f6, f3, rmm # perform operation
fnmadd.h f23, f2, f6, f3, rne # perform operation
fnmadd.h f23, f2, f6, f3, rtz # perform operation
fnmadd.h f23, f2, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f2, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f2, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f2, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f2, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f2, f6, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0xfe00)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f7, 0(x2) # load 0x0000fe00 from memory into f7
la x2, scratch
li x3, 0xc11193bf # load x3 with value 0xc11193bf
sw x3, 0(x2) # store 0xc11193bf in memory
flh f16, 0(x2) # load 0xc11193bf from memory into f16
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f23, 0(x2) # load 0x0000fe00 from memory into f23
fnmadd.h f17, f7, f16, f23, dyn # perform operation
fnmadd.h f17, f7, f16, f23, rdn # perform operation
fnmadd.h f17, f7, f16, f23, rmm # perform operation
fnmadd.h f17, f7, f16, f23, rne # perform operation
fnmadd.h f17, f7, f16, f23, rtz # perform operation
fnmadd.h f17, f7, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f7, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f7, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f7, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f7, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f7, f16, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x7c01)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f14, 0(x2) # load 0x0000fe00 from memory into f14
la x2, scratch
li x3, 0x2158a3e6 # load x3 with value 0x2158a3e6
sw x3, 0(x2) # store 0x2158a3e6 in memory
flh f23, 0(x2) # load 0x2158a3e6 from memory into f23
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f19, 0(x2) # load 0x00007c01 from memory into f19
fnmadd.h f30, f14, f23, f19, dyn # perform operation
fnmadd.h f30, f14, f23, f19, rdn # perform operation
fnmadd.h f30, f14, f23, f19, rmm # perform operation
fnmadd.h f30, f14, f23, f19, rne # perform operation
fnmadd.h f30, f14, f23, f19, rtz # perform operation
fnmadd.h f30, f14, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f14, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f14, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f14, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f14, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f14, f23, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x7dff)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f6, 0(x2) # load 0x0000fe00 from memory into f6
la x2, scratch
li x3, 0x45872bd0 # load x3 with value 0x45872bd0
sw x3, 0(x2) # store 0x45872bd0 in memory
flh f13, 0(x2) # load 0x45872bd0 from memory into f13
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f7, 0(x2) # load 0x00007dff from memory into f7
fnmadd.h f26, f6, f13, f7, dyn # perform operation
fnmadd.h f26, f6, f13, f7, rdn # perform operation
fnmadd.h f26, f6, f13, f7, rmm # perform operation
fnmadd.h f26, f6, f13, f7, rne # perform operation
fnmadd.h f26, f6, f13, f7, rtz # perform operation
fnmadd.h f26, f6, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f6, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f6, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f6, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f6, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f6, f13, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0xfc01)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f21, 0(x2) # load 0x0000fe00 from memory into f21
la x2, scratch
li x3, 0x0963a5e6 # load x3 with value 0x0963a5e6
sw x3, 0(x2) # store 0x0963a5e6 in memory
flh f7, 0(x2) # load 0x0963a5e6 from memory into f7
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f14, 0(x2) # load 0x0000fc01 from memory into f14
fnmadd.h f16, f21, f7, f14, dyn # perform operation
fnmadd.h f16, f21, f7, f14, rdn # perform operation
fnmadd.h f16, f21, f7, f14, rmm # perform operation
fnmadd.h f16, f21, f7, f14, rne # perform operation
fnmadd.h f16, f21, f7, f14, rtz # perform operation
fnmadd.h f16, f21, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f21, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f21, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f21, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f21, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f21, f7, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0x58b4)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f16, 0(x2) # load 0x0000fe00 from memory into f16
la x2, scratch
li x3, 0x3007db19 # load x3 with value 0x3007db19
sw x3, 0(x2) # store 0x3007db19 in memory
flh f9, 0(x2) # load 0x3007db19 from memory into f9
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f6, 0(x2) # load 0x000058b4 from memory into f6
fnmadd.h f12, f16, f9, f6, dyn # perform operation
fnmadd.h f12, f16, f9, f6, rdn # perform operation
fnmadd.h f12, f16, f9, f6, rmm # perform operation
fnmadd.h f12, f16, f9, f6, rne # perform operation
fnmadd.h f12, f16, f9, f6, rtz # perform operation
fnmadd.h f12, f16, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f16, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f16, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f16, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f16, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f16, f9, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfe00 fs3 = 0xc93a)
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f26, 0(x2) # load 0x0000fe00 from memory into f26
la x2, scratch
li x3, 0xd4bd5814 # load x3 with value 0xd4bd5814
sw x3, 0(x2) # store 0xd4bd5814 in memory
flh f12, 0(x2) # load 0xd4bd5814 from memory into f12
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f28, 0(x2) # load 0x0000c93a from memory into f28
fnmadd.h f5, f26, f12, f28, dyn # perform operation
fnmadd.h f5, f26, f12, f28, rdn # perform operation
fnmadd.h f5, f26, f12, f28, rmm # perform operation
fnmadd.h f5, f26, f12, f28, rne # perform operation
fnmadd.h f5, f26, f12, f28, rtz # perform operation
fnmadd.h f5, f26, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f26, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f26, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f26, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f26, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f26, f12, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x0)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f28, 0(x2) # load 0x00007c01 from memory into f28
la x2, scratch
li x3, 0xc3be4265 # load x3 with value 0xc3be4265
sw x3, 0(x2) # store 0xc3be4265 in memory
flh f17, 0(x2) # load 0xc3be4265 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f11, 0(x2) # load 0x00000000 from memory into f11
fnmadd.h f18, f28, f17, f11, dyn # perform operation
fnmadd.h f18, f28, f17, f11, rdn # perform operation
fnmadd.h f18, f28, f17, f11, rmm # perform operation
fnmadd.h f18, f28, f17, f11, rne # perform operation
fnmadd.h f18, f28, f17, f11, rtz # perform operation
fnmadd.h f18, f28, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f28, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f28, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f28, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f28, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f28, f17, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x8000)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
la x2, scratch
li x3, 0x6aca6702 # load x3 with value 0x6aca6702
sw x3, 0(x2) # store 0x6aca6702 in memory
flh f19, 0(x2) # load 0x6aca6702 from memory into f19
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f7, 0(x2) # load 0x00008000 from memory into f7
fnmadd.h f2, f30, f19, f7, dyn # perform operation
fnmadd.h f2, f30, f19, f7, rdn # perform operation
fnmadd.h f2, f30, f19, f7, rmm # perform operation
fnmadd.h f2, f30, f19, f7, rne # perform operation
fnmadd.h f2, f30, f19, f7, rtz # perform operation
fnmadd.h f2, f30, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f30, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f30, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f30, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f30, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f30, f19, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x3c00)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f9, 0(x2) # load 0x00007c01 from memory into f9
la x2, scratch
li x3, 0x6957c04d # load x3 with value 0x6957c04d
sw x3, 0(x2) # store 0x6957c04d in memory
flh f5, 0(x2) # load 0x6957c04d from memory into f5
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f3, 0(x2) # load 0x00003c00 from memory into f3
fnmadd.h f30, f9, f5, f3, dyn # perform operation
fnmadd.h f30, f9, f5, f3, rdn # perform operation
fnmadd.h f30, f9, f5, f3, rmm # perform operation
fnmadd.h f30, f9, f5, f3, rne # perform operation
fnmadd.h f30, f9, f5, f3, rtz # perform operation
fnmadd.h f30, f9, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f9, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f9, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f9, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f9, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f9, f5, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xbc00)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
la x2, scratch
li x3, 0xa71dcfb2 # load x3 with value 0xa71dcfb2
sw x3, 0(x2) # store 0xa71dcfb2 in memory
flh f8, 0(x2) # load 0xa71dcfb2 from memory into f8
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f23, 0(x2) # load 0x0000bc00 from memory into f23
fnmadd.h f21, f26, f8, f23, dyn # perform operation
fnmadd.h f21, f26, f8, f23, rdn # perform operation
fnmadd.h f21, f26, f8, f23, rmm # perform operation
fnmadd.h f21, f26, f8, f23, rne # perform operation
fnmadd.h f21, f26, f8, f23, rtz # perform operation
fnmadd.h f21, f26, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f26, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f26, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f26, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f26, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f26, f8, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x3e00)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f8, 0(x2) # load 0x00007c01 from memory into f8
la x2, scratch
li x3, 0x17095f92 # load x3 with value 0x17095f92
sw x3, 0(x2) # store 0x17095f92 in memory
flh f2, 0(x2) # load 0x17095f92 from memory into f2
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f27, 0(x2) # load 0x00003e00 from memory into f27
fnmadd.h f15, f8, f2, f27, dyn # perform operation
fnmadd.h f15, f8, f2, f27, rdn # perform operation
fnmadd.h f15, f8, f2, f27, rmm # perform operation
fnmadd.h f15, f8, f2, f27, rne # perform operation
fnmadd.h f15, f8, f2, f27, rtz # perform operation
fnmadd.h f15, f8, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f8, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f8, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f8, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f8, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f8, f2, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xbe00)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f16, 0(x2) # load 0x00007c01 from memory into f16
la x2, scratch
li x3, 0x823d68cb # load x3 with value 0x823d68cb
sw x3, 0(x2) # store 0x823d68cb in memory
flh f2, 0(x2) # load 0x823d68cb from memory into f2
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f11, 0(x2) # load 0x0000be00 from memory into f11
fnmadd.h f26, f16, f2, f11, dyn # perform operation
fnmadd.h f26, f16, f2, f11, rdn # perform operation
fnmadd.h f26, f16, f2, f11, rmm # perform operation
fnmadd.h f26, f16, f2, f11, rne # perform operation
fnmadd.h f26, f16, f2, f11, rtz # perform operation
fnmadd.h f26, f16, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f16, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f16, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f16, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f16, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f16, f2, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x4000)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f7, 0(x2) # load 0x00007c01 from memory into f7
la x2, scratch
li x3, 0x03736150 # load x3 with value 0x03736150
sw x3, 0(x2) # store 0x03736150 in memory
flh f25, 0(x2) # load 0x03736150 from memory into f25
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f15, 0(x2) # load 0x00004000 from memory into f15
fnmadd.h f3, f7, f25, f15, dyn # perform operation
fnmadd.h f3, f7, f25, f15, rdn # perform operation
fnmadd.h f3, f7, f25, f15, rmm # perform operation
fnmadd.h f3, f7, f25, f15, rne # perform operation
fnmadd.h f3, f7, f25, f15, rtz # perform operation
fnmadd.h f3, f7, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f7, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f7, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f7, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f7, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f7, f25, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xc000)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f7, 0(x2) # load 0x00007c01 from memory into f7
la x2, scratch
li x3, 0x47218638 # load x3 with value 0x47218638
sw x3, 0(x2) # store 0x47218638 in memory
flh f11, 0(x2) # load 0x47218638 from memory into f11
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
fnmadd.h f22, f7, f11, f2, dyn # perform operation
fnmadd.h f22, f7, f11, f2, rdn # perform operation
fnmadd.h f22, f7, f11, f2, rmm # perform operation
fnmadd.h f22, f7, f11, f2, rne # perform operation
fnmadd.h f22, f7, f11, f2, rtz # perform operation
fnmadd.h f22, f7, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f7, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f7, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f7, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f7, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f7, f11, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x400)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f12, 0(x2) # load 0x00007c01 from memory into f12
la x2, scratch
li x3, 0x10eff2f4 # load x3 with value 0x10eff2f4
sw x3, 0(x2) # store 0x10eff2f4 in memory
flh f27, 0(x2) # load 0x10eff2f4 from memory into f27
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f11, 0(x2) # load 0x00000400 from memory into f11
fnmadd.h f22, f12, f27, f11, dyn # perform operation
fnmadd.h f22, f12, f27, f11, rdn # perform operation
fnmadd.h f22, f12, f27, f11, rmm # perform operation
fnmadd.h f22, f12, f27, f11, rne # perform operation
fnmadd.h f22, f12, f27, f11, rtz # perform operation
fnmadd.h f22, f12, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f12, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f12, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f12, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f12, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f12, f27, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x8400)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
la x2, scratch
li x3, 0x874c6339 # load x3 with value 0x874c6339
sw x3, 0(x2) # store 0x874c6339 in memory
flh f6, 0(x2) # load 0x874c6339 from memory into f6
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f31, 0(x2) # load 0x00008400 from memory into f31
fnmadd.h f27, f30, f6, f31, dyn # perform operation
fnmadd.h f27, f30, f6, f31, rdn # perform operation
fnmadd.h f27, f30, f6, f31, rmm # perform operation
fnmadd.h f27, f30, f6, f31, rne # perform operation
fnmadd.h f27, f30, f6, f31, rtz # perform operation
fnmadd.h f27, f30, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f30, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f30, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f30, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f30, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f30, f6, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7bff)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
la x2, scratch
li x3, 0x7d554c8d # load x3 with value 0x7d554c8d
sw x3, 0(x2) # store 0x7d554c8d in memory
flh f3, 0(x2) # load 0x7d554c8d from memory into f3
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f6, 0(x2) # load 0x00007bff from memory into f6
fnmadd.h f15, f30, f3, f6, dyn # perform operation
fnmadd.h f15, f30, f3, f6, rdn # perform operation
fnmadd.h f15, f30, f3, f6, rmm # perform operation
fnmadd.h f15, f30, f3, f6, rne # perform operation
fnmadd.h f15, f30, f3, f6, rtz # perform operation
fnmadd.h f15, f30, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f30, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f30, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f30, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f30, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f30, f3, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xfbff)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
la x2, scratch
li x3, 0x808add66 # load x3 with value 0x808add66
sw x3, 0(x2) # store 0x808add66 in memory
flh f17, 0(x2) # load 0x808add66 from memory into f17
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f7, 0(x2) # load 0x0000fbff from memory into f7
fnmadd.h f23, f20, f17, f7, dyn # perform operation
fnmadd.h f23, f20, f17, f7, rdn # perform operation
fnmadd.h f23, f20, f17, f7, rmm # perform operation
fnmadd.h f23, f20, f17, f7, rne # perform operation
fnmadd.h f23, f20, f17, f7, rtz # perform operation
fnmadd.h f23, f20, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f20, f17, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x3ff)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
la x2, scratch
li x3, 0x1c5b5dae # load x3 with value 0x1c5b5dae
sw x3, 0(x2) # store 0x1c5b5dae in memory
flh f2, 0(x2) # load 0x1c5b5dae from memory into f2
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f14, 0(x2) # load 0x000003ff from memory into f14
fnmadd.h f10, f20, f2, f14, dyn # perform operation
fnmadd.h f10, f20, f2, f14, rdn # perform operation
fnmadd.h f10, f20, f2, f14, rmm # perform operation
fnmadd.h f10, f20, f2, f14, rne # perform operation
fnmadd.h f10, f20, f2, f14, rtz # perform operation
fnmadd.h f10, f20, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f20, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f20, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f20, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f20, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f20, f2, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x83ff)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f2, 0(x2) # load 0x00007c01 from memory into f2
la x2, scratch
li x3, 0x66ebfb1c # load x3 with value 0x66ebfb1c
sw x3, 0(x2) # store 0x66ebfb1c in memory
flh f9, 0(x2) # load 0x66ebfb1c from memory into f9
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f26, 0(x2) # load 0x000083ff from memory into f26
fnmadd.h f20, f2, f9, f26, dyn # perform operation
fnmadd.h f20, f2, f9, f26, rdn # perform operation
fnmadd.h f20, f2, f9, f26, rmm # perform operation
fnmadd.h f20, f2, f9, f26, rne # perform operation
fnmadd.h f20, f2, f9, f26, rtz # perform operation
fnmadd.h f20, f2, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f2, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f2, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f2, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f2, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f2, f9, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x200)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f3, 0(x2) # load 0x00007c01 from memory into f3
la x2, scratch
li x3, 0x42e75883 # load x3 with value 0x42e75883
sw x3, 0(x2) # store 0x42e75883 in memory
flh f9, 0(x2) # load 0x42e75883 from memory into f9
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f12, 0(x2) # load 0x00000200 from memory into f12
fnmadd.h f30, f3, f9, f12, dyn # perform operation
fnmadd.h f30, f3, f9, f12, rdn # perform operation
fnmadd.h f30, f3, f9, f12, rmm # perform operation
fnmadd.h f30, f3, f9, f12, rne # perform operation
fnmadd.h f30, f3, f9, f12, rtz # perform operation
fnmadd.h f30, f3, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f3, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f3, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f3, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f3, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f3, f9, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x8200)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f5, 0(x2) # load 0x00007c01 from memory into f5
la x2, scratch
li x3, 0x732f3e9a # load x3 with value 0x732f3e9a
sw x3, 0(x2) # store 0x732f3e9a in memory
flh f16, 0(x2) # load 0x732f3e9a from memory into f16
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f7, 0(x2) # load 0x00008200 from memory into f7
fnmadd.h f29, f5, f16, f7, dyn # perform operation
fnmadd.h f29, f5, f16, f7, rdn # perform operation
fnmadd.h f29, f5, f16, f7, rmm # perform operation
fnmadd.h f29, f5, f16, f7, rne # perform operation
fnmadd.h f29, f5, f16, f7, rtz # perform operation
fnmadd.h f29, f5, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f5, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f5, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f5, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f5, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f5, f16, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x1)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f15, 0(x2) # load 0x00007c01 from memory into f15
la x2, scratch
li x3, 0x6927fa11 # load x3 with value 0x6927fa11
sw x3, 0(x2) # store 0x6927fa11 in memory
flh f17, 0(x2) # load 0x6927fa11 from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f8, 0(x2) # load 0x00000001 from memory into f8
fnmadd.h f12, f15, f17, f8, dyn # perform operation
fnmadd.h f12, f15, f17, f8, rdn # perform operation
fnmadd.h f12, f15, f17, f8, rmm # perform operation
fnmadd.h f12, f15, f17, f8, rne # perform operation
fnmadd.h f12, f15, f17, f8, rtz # perform operation
fnmadd.h f12, f15, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f15, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f15, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f15, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f15, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f15, f17, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x8001)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f8, 0(x2) # load 0x00007c01 from memory into f8
la x2, scratch
li x3, 0x8ab0d9a4 # load x3 with value 0x8ab0d9a4
sw x3, 0(x2) # store 0x8ab0d9a4 in memory
flh f28, 0(x2) # load 0x8ab0d9a4 from memory into f28
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f13, 0(x2) # load 0x00008001 from memory into f13
fnmadd.h f29, f8, f28, f13, dyn # perform operation
fnmadd.h f29, f8, f28, f13, rdn # perform operation
fnmadd.h f29, f8, f28, f13, rmm # perform operation
fnmadd.h f29, f8, f28, f13, rne # perform operation
fnmadd.h f29, f8, f28, f13, rtz # perform operation
fnmadd.h f29, f8, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f8, f28, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7c00)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f24, 0(x2) # load 0x00007c01 from memory into f24
la x2, scratch
li x3, 0x8983bfa2 # load x3 with value 0x8983bfa2
sw x3, 0(x2) # store 0x8983bfa2 in memory
flh f7, 0(x2) # load 0x8983bfa2 from memory into f7
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f11, 0(x2) # load 0x00007c00 from memory into f11
fnmadd.h f10, f24, f7, f11, dyn # perform operation
fnmadd.h f10, f24, f7, f11, rdn # perform operation
fnmadd.h f10, f24, f7, f11, rmm # perform operation
fnmadd.h f10, f24, f7, f11, rne # perform operation
fnmadd.h f10, f24, f7, f11, rtz # perform operation
fnmadd.h f10, f24, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f24, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f24, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f24, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f24, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f24, f7, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xfc00)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f25, 0(x2) # load 0x00007c01 from memory into f25
la x2, scratch
li x3, 0x037ac4eb # load x3 with value 0x037ac4eb
sw x3, 0(x2) # store 0x037ac4eb in memory
flh f26, 0(x2) # load 0x037ac4eb from memory into f26
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f22, 0(x2) # load 0x0000fc00 from memory into f22
fnmadd.h f31, f25, f26, f22, dyn # perform operation
fnmadd.h f31, f25, f26, f22, rdn # perform operation
fnmadd.h f31, f25, f26, f22, rmm # perform operation
fnmadd.h f31, f25, f26, f22, rne # perform operation
fnmadd.h f31, f25, f26, f22, rtz # perform operation
fnmadd.h f31, f25, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f25, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f25, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f25, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f25, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f25, f26, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7e00)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
la x2, scratch
li x3, 0xbec98006 # load x3 with value 0xbec98006
sw x3, 0(x2) # store 0xbec98006 in memory
flh f24, 0(x2) # load 0xbec98006 from memory into f24
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f9, 0(x2) # load 0x00007e00 from memory into f9
fnmadd.h f27, f26, f24, f9, dyn # perform operation
fnmadd.h f27, f26, f24, f9, rdn # perform operation
fnmadd.h f27, f26, f24, f9, rmm # perform operation
fnmadd.h f27, f26, f24, f9, rne # perform operation
fnmadd.h f27, f26, f24, f9, rtz # perform operation
fnmadd.h f27, f26, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f26, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f26, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f26, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f26, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f26, f24, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7fff)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f23, 0(x2) # load 0x00007c01 from memory into f23
la x2, scratch
li x3, 0x003b6a4e # load x3 with value 0x003b6a4e
sw x3, 0(x2) # store 0x003b6a4e in memory
flh f12, 0(x2) # load 0x003b6a4e from memory into f12
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f19, 0(x2) # load 0x00007fff from memory into f19
fnmadd.h f11, f23, f12, f19, dyn # perform operation
fnmadd.h f11, f23, f12, f19, rdn # perform operation
fnmadd.h f11, f23, f12, f19, rmm # perform operation
fnmadd.h f11, f23, f12, f19, rne # perform operation
fnmadd.h f11, f23, f12, f19, rtz # perform operation
fnmadd.h f11, f23, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f23, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f23, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f23, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f23, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f23, f12, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xfe00)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f17, 0(x2) # load 0x00007c01 from memory into f17
la x2, scratch
li x3, 0x394c12b7 # load x3 with value 0x394c12b7
sw x3, 0(x2) # store 0x394c12b7 in memory
flh f16, 0(x2) # load 0x394c12b7 from memory into f16
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f25, 0(x2) # load 0x0000fe00 from memory into f25
fnmadd.h f7, f17, f16, f25, dyn # perform operation
fnmadd.h f7, f17, f16, f25, rdn # perform operation
fnmadd.h f7, f17, f16, f25, rmm # perform operation
fnmadd.h f7, f17, f16, f25, rne # perform operation
fnmadd.h f7, f17, f16, f25, rtz # perform operation
fnmadd.h f7, f17, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f17, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f17, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f17, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f17, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f17, f16, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7c01)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f10, 0(x2) # load 0x00007c01 from memory into f10
la x2, scratch
li x3, 0x5999f310 # load x3 with value 0x5999f310
sw x3, 0(x2) # store 0x5999f310 in memory
flh f17, 0(x2) # load 0x5999f310 from memory into f17
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f22, 0(x2) # load 0x00007c01 from memory into f22
fnmadd.h f11, f10, f17, f22, dyn # perform operation
fnmadd.h f11, f10, f17, f22, rdn # perform operation
fnmadd.h f11, f10, f17, f22, rmm # perform operation
fnmadd.h f11, f10, f17, f22, rne # perform operation
fnmadd.h f11, f10, f17, f22, rtz # perform operation
fnmadd.h f11, f10, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f10, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f10, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f10, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f10, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f10, f17, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7dff)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f22, 0(x2) # load 0x00007c01 from memory into f22
la x2, scratch
li x3, 0x284fe491 # load x3 with value 0x284fe491
sw x3, 0(x2) # store 0x284fe491 in memory
flh f12, 0(x2) # load 0x284fe491 from memory into f12
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f10, 0(x2) # load 0x00007dff from memory into f10
fnmadd.h f20, f22, f12, f10, dyn # perform operation
fnmadd.h f20, f22, f12, f10, rdn # perform operation
fnmadd.h f20, f22, f12, f10, rmm # perform operation
fnmadd.h f20, f22, f12, f10, rne # perform operation
fnmadd.h f20, f22, f12, f10, rtz # perform operation
fnmadd.h f20, f22, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f22, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f22, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f22, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f22, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f22, f12, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xfc01)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f22, 0(x2) # load 0x00007c01 from memory into f22
la x2, scratch
li x3, 0xe3e15339 # load x3 with value 0xe3e15339
sw x3, 0(x2) # store 0xe3e15339 in memory
flh f20, 0(x2) # load 0xe3e15339 from memory into f20
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f5, 0(x2) # load 0x0000fc01 from memory into f5
fnmadd.h f27, f22, f20, f5, dyn # perform operation
fnmadd.h f27, f22, f20, f5, rdn # perform operation
fnmadd.h f27, f22, f20, f5, rmm # perform operation
fnmadd.h f27, f22, f20, f5, rne # perform operation
fnmadd.h f27, f22, f20, f5, rtz # perform operation
fnmadd.h f27, f22, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f22, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f22, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f22, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f22, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f22, f20, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x58b4)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f14, 0(x2) # load 0x00007c01 from memory into f14
la x2, scratch
li x3, 0xf7929b7a # load x3 with value 0xf7929b7a
sw x3, 0(x2) # store 0xf7929b7a in memory
flh f24, 0(x2) # load 0xf7929b7a from memory into f24
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f20, 0(x2) # load 0x000058b4 from memory into f20
fnmadd.h f22, f14, f24, f20, dyn # perform operation
fnmadd.h f22, f14, f24, f20, rdn # perform operation
fnmadd.h f22, f14, f24, f20, rmm # perform operation
fnmadd.h f22, f14, f24, f20, rne # perform operation
fnmadd.h f22, f14, f24, f20, rtz # perform operation
fnmadd.h f22, f14, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f14, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f14, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f14, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f14, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f14, f24, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xc93a)
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f5, 0(x2) # load 0x00007c01 from memory into f5
la x2, scratch
li x3, 0x144e12e6 # load x3 with value 0x144e12e6
sw x3, 0(x2) # store 0x144e12e6 in memory
flh f3, 0(x2) # load 0x144e12e6 from memory into f3
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f6, 0(x2) # load 0x0000c93a from memory into f6
fnmadd.h f27, f5, f3, f6, dyn # perform operation
fnmadd.h f27, f5, f3, f6, rdn # perform operation
fnmadd.h f27, f5, f3, f6, rmm # perform operation
fnmadd.h f27, f5, f3, f6, rne # perform operation
fnmadd.h f27, f5, f3, f6, rtz # perform operation
fnmadd.h f27, f5, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f5, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f5, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f5, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f5, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f5, f3, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x0)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f27, 0(x2) # load 0x00007dff from memory into f27
la x2, scratch
li x3, 0x5dc51bb4 # load x3 with value 0x5dc51bb4
sw x3, 0(x2) # store 0x5dc51bb4 in memory
flh f22, 0(x2) # load 0x5dc51bb4 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f12, 0(x2) # load 0x00000000 from memory into f12
fnmadd.h f14, f27, f22, f12, dyn # perform operation
fnmadd.h f14, f27, f22, f12, rdn # perform operation
fnmadd.h f14, f27, f22, f12, rmm # perform operation
fnmadd.h f14, f27, f22, f12, rne # perform operation
fnmadd.h f14, f27, f22, f12, rtz # perform operation
fnmadd.h f14, f27, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f27, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f27, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f27, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f27, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f27, f22, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x8000)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f10, 0(x2) # load 0x00007dff from memory into f10
la x2, scratch
li x3, 0x6f53e3bb # load x3 with value 0x6f53e3bb
sw x3, 0(x2) # store 0x6f53e3bb in memory
flh f26, 0(x2) # load 0x6f53e3bb from memory into f26
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f20, 0(x2) # load 0x00008000 from memory into f20
fnmadd.h f2, f10, f26, f20, dyn # perform operation
fnmadd.h f2, f10, f26, f20, rdn # perform operation
fnmadd.h f2, f10, f26, f20, rmm # perform operation
fnmadd.h f2, f10, f26, f20, rne # perform operation
fnmadd.h f2, f10, f26, f20, rtz # perform operation
fnmadd.h f2, f10, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f10, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f10, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f10, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f10, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f10, f26, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x3c00)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f12, 0(x2) # load 0x00007dff from memory into f12
la x2, scratch
li x3, 0x5b5d90f0 # load x3 with value 0x5b5d90f0
sw x3, 0(x2) # store 0x5b5d90f0 in memory
flh f9, 0(x2) # load 0x5b5d90f0 from memory into f9
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f19, 0(x2) # load 0x00003c00 from memory into f19
fnmadd.h f22, f12, f9, f19, dyn # perform operation
fnmadd.h f22, f12, f9, f19, rdn # perform operation
fnmadd.h f22, f12, f9, f19, rmm # perform operation
fnmadd.h f22, f12, f9, f19, rne # perform operation
fnmadd.h f22, f12, f9, f19, rtz # perform operation
fnmadd.h f22, f12, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f12, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f12, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f12, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f12, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f12, f9, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xbc00)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f30, 0(x2) # load 0x00007dff from memory into f30
la x2, scratch
li x3, 0xd418c6e5 # load x3 with value 0xd418c6e5
sw x3, 0(x2) # store 0xd418c6e5 in memory
flh f9, 0(x2) # load 0xd418c6e5 from memory into f9
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f27, 0(x2) # load 0x0000bc00 from memory into f27
fnmadd.h f23, f30, f9, f27, dyn # perform operation
fnmadd.h f23, f30, f9, f27, rdn # perform operation
fnmadd.h f23, f30, f9, f27, rmm # perform operation
fnmadd.h f23, f30, f9, f27, rne # perform operation
fnmadd.h f23, f30, f9, f27, rtz # perform operation
fnmadd.h f23, f30, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f30, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f30, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f30, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f30, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f30, f9, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x3e00)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f1, 0(x2) # load 0x00007dff from memory into f1
la x2, scratch
li x3, 0x54b51ff7 # load x3 with value 0x54b51ff7
sw x3, 0(x2) # store 0x54b51ff7 in memory
flh f2, 0(x2) # load 0x54b51ff7 from memory into f2
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f11, 0(x2) # load 0x00003e00 from memory into f11
fnmadd.h f16, f1, f2, f11, dyn # perform operation
fnmadd.h f16, f1, f2, f11, rdn # perform operation
fnmadd.h f16, f1, f2, f11, rmm # perform operation
fnmadd.h f16, f1, f2, f11, rne # perform operation
fnmadd.h f16, f1, f2, f11, rtz # perform operation
fnmadd.h f16, f1, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f1, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f1, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f1, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f1, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f1, f2, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xbe00)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
la x2, scratch
li x3, 0x1bcbb4cb # load x3 with value 0x1bcbb4cb
sw x3, 0(x2) # store 0x1bcbb4cb in memory
flh f30, 0(x2) # load 0x1bcbb4cb from memory into f30
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f6, 0(x2) # load 0x0000be00 from memory into f6
fnmadd.h f31, f26, f30, f6, dyn # perform operation
fnmadd.h f31, f26, f30, f6, rdn # perform operation
fnmadd.h f31, f26, f30, f6, rmm # perform operation
fnmadd.h f31, f26, f30, f6, rne # perform operation
fnmadd.h f31, f26, f30, f6, rtz # perform operation
fnmadd.h f31, f26, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f26, f30, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x4000)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f17, 0(x2) # load 0x00007dff from memory into f17
la x2, scratch
li x3, 0x86d0be21 # load x3 with value 0x86d0be21
sw x3, 0(x2) # store 0x86d0be21 in memory
flh f13, 0(x2) # load 0x86d0be21 from memory into f13
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f7, 0(x2) # load 0x00004000 from memory into f7
fnmadd.h f26, f17, f13, f7, dyn # perform operation
fnmadd.h f26, f17, f13, f7, rdn # perform operation
fnmadd.h f26, f17, f13, f7, rmm # perform operation
fnmadd.h f26, f17, f13, f7, rne # perform operation
fnmadd.h f26, f17, f13, f7, rtz # perform operation
fnmadd.h f26, f17, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f17, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f17, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f17, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f17, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f17, f13, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xc000)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f25, 0(x2) # load 0x00007dff from memory into f25
la x2, scratch
li x3, 0x053dc2ac # load x3 with value 0x053dc2ac
sw x3, 0(x2) # store 0x053dc2ac in memory
flh f8, 0(x2) # load 0x053dc2ac from memory into f8
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
fnmadd.h f5, f25, f8, f12, dyn # perform operation
fnmadd.h f5, f25, f8, f12, rdn # perform operation
fnmadd.h f5, f25, f8, f12, rmm # perform operation
fnmadd.h f5, f25, f8, f12, rne # perform operation
fnmadd.h f5, f25, f8, f12, rtz # perform operation
fnmadd.h f5, f25, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f25, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f25, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f25, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f25, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f25, f8, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x400)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f2, 0(x2) # load 0x00007dff from memory into f2
la x2, scratch
li x3, 0x65c0e893 # load x3 with value 0x65c0e893
sw x3, 0(x2) # store 0x65c0e893 in memory
flh f10, 0(x2) # load 0x65c0e893 from memory into f10
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f15, 0(x2) # load 0x00000400 from memory into f15
fnmadd.h f24, f2, f10, f15, dyn # perform operation
fnmadd.h f24, f2, f10, f15, rdn # perform operation
fnmadd.h f24, f2, f10, f15, rmm # perform operation
fnmadd.h f24, f2, f10, f15, rne # perform operation
fnmadd.h f24, f2, f10, f15, rtz # perform operation
fnmadd.h f24, f2, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f2, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f2, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f2, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f2, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f2, f10, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x8400)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f17, 0(x2) # load 0x00007dff from memory into f17
la x2, scratch
li x3, 0xb630a133 # load x3 with value 0xb630a133
sw x3, 0(x2) # store 0xb630a133 in memory
flh f18, 0(x2) # load 0xb630a133 from memory into f18
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f30, 0(x2) # load 0x00008400 from memory into f30
fnmadd.h f8, f17, f18, f30, dyn # perform operation
fnmadd.h f8, f17, f18, f30, rdn # perform operation
fnmadd.h f8, f17, f18, f30, rmm # perform operation
fnmadd.h f8, f17, f18, f30, rne # perform operation
fnmadd.h f8, f17, f18, f30, rtz # perform operation
fnmadd.h f8, f17, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f17, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f17, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f17, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f17, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f17, f18, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7bff)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f6, 0(x2) # load 0x00007dff from memory into f6
la x2, scratch
li x3, 0x354ed9eb # load x3 with value 0x354ed9eb
sw x3, 0(x2) # store 0x354ed9eb in memory
flh f19, 0(x2) # load 0x354ed9eb from memory into f19
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f22, 0(x2) # load 0x00007bff from memory into f22
fnmadd.h f9, f6, f19, f22, dyn # perform operation
fnmadd.h f9, f6, f19, f22, rdn # perform operation
fnmadd.h f9, f6, f19, f22, rmm # perform operation
fnmadd.h f9, f6, f19, f22, rne # perform operation
fnmadd.h f9, f6, f19, f22, rtz # perform operation
fnmadd.h f9, f6, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f6, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f6, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f6, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f6, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f6, f19, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xfbff)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f8, 0(x2) # load 0x00007dff from memory into f8
la x2, scratch
li x3, 0x0238902d # load x3 with value 0x0238902d
sw x3, 0(x2) # store 0x0238902d in memory
flh f10, 0(x2) # load 0x0238902d from memory into f10
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f24, 0(x2) # load 0x0000fbff from memory into f24
fnmadd.h f1, f8, f10, f24, dyn # perform operation
fnmadd.h f1, f8, f10, f24, rdn # perform operation
fnmadd.h f1, f8, f10, f24, rmm # perform operation
fnmadd.h f1, f8, f10, f24, rne # perform operation
fnmadd.h f1, f8, f10, f24, rtz # perform operation
fnmadd.h f1, f8, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f8, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f8, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f8, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f8, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f8, f10, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x3ff)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f14, 0(x2) # load 0x00007dff from memory into f14
la x2, scratch
li x3, 0x49a068af # load x3 with value 0x49a068af
sw x3, 0(x2) # store 0x49a068af in memory
flh f27, 0(x2) # load 0x49a068af from memory into f27
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f30, 0(x2) # load 0x000003ff from memory into f30
fnmadd.h f22, f14, f27, f30, dyn # perform operation
fnmadd.h f22, f14, f27, f30, rdn # perform operation
fnmadd.h f22, f14, f27, f30, rmm # perform operation
fnmadd.h f22, f14, f27, f30, rne # perform operation
fnmadd.h f22, f14, f27, f30, rtz # perform operation
fnmadd.h f22, f14, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f14, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f14, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f14, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f14, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f14, f27, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x83ff)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f2, 0(x2) # load 0x00007dff from memory into f2
la x2, scratch
li x3, 0xfa7c1466 # load x3 with value 0xfa7c1466
sw x3, 0(x2) # store 0xfa7c1466 in memory
flh f11, 0(x2) # load 0xfa7c1466 from memory into f11
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f21, 0(x2) # load 0x000083ff from memory into f21
fnmadd.h f18, f2, f11, f21, dyn # perform operation
fnmadd.h f18, f2, f11, f21, rdn # perform operation
fnmadd.h f18, f2, f11, f21, rmm # perform operation
fnmadd.h f18, f2, f11, f21, rne # perform operation
fnmadd.h f18, f2, f11, f21, rtz # perform operation
fnmadd.h f18, f2, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f2, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f2, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f2, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f2, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f2, f11, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x200)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f25, 0(x2) # load 0x00007dff from memory into f25
la x2, scratch
li x3, 0x8f3cb727 # load x3 with value 0x8f3cb727
sw x3, 0(x2) # store 0x8f3cb727 in memory
flh f2, 0(x2) # load 0x8f3cb727 from memory into f2
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f10, 0(x2) # load 0x00000200 from memory into f10
fnmadd.h f5, f25, f2, f10, dyn # perform operation
fnmadd.h f5, f25, f2, f10, rdn # perform operation
fnmadd.h f5, f25, f2, f10, rmm # perform operation
fnmadd.h f5, f25, f2, f10, rne # perform operation
fnmadd.h f5, f25, f2, f10, rtz # perform operation
fnmadd.h f5, f25, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f25, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f25, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f25, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f25, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f25, f2, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x8200)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f7, 0(x2) # load 0x00007dff from memory into f7
la x2, scratch
li x3, 0x14232f9c # load x3 with value 0x14232f9c
sw x3, 0(x2) # store 0x14232f9c in memory
flh f20, 0(x2) # load 0x14232f9c from memory into f20
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f23, 0(x2) # load 0x00008200 from memory into f23
fnmadd.h f17, f7, f20, f23, dyn # perform operation
fnmadd.h f17, f7, f20, f23, rdn # perform operation
fnmadd.h f17, f7, f20, f23, rmm # perform operation
fnmadd.h f17, f7, f20, f23, rne # perform operation
fnmadd.h f17, f7, f20, f23, rtz # perform operation
fnmadd.h f17, f7, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f7, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f7, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f7, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f7, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f7, f20, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x1)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f31, 0(x2) # load 0x00007dff from memory into f31
la x2, scratch
li x3, 0x3c8813a9 # load x3 with value 0x3c8813a9
sw x3, 0(x2) # store 0x3c8813a9 in memory
flh f2, 0(x2) # load 0x3c8813a9 from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f13, 0(x2) # load 0x00000001 from memory into f13
fnmadd.h f17, f31, f2, f13, dyn # perform operation
fnmadd.h f17, f31, f2, f13, rdn # perform operation
fnmadd.h f17, f31, f2, f13, rmm # perform operation
fnmadd.h f17, f31, f2, f13, rne # perform operation
fnmadd.h f17, f31, f2, f13, rtz # perform operation
fnmadd.h f17, f31, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f31, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f31, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f31, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f31, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f31, f2, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x8001)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f25, 0(x2) # load 0x00007dff from memory into f25
la x2, scratch
li x3, 0x976cf89f # load x3 with value 0x976cf89f
sw x3, 0(x2) # store 0x976cf89f in memory
flh f12, 0(x2) # load 0x976cf89f from memory into f12
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f8, 0(x2) # load 0x00008001 from memory into f8
fnmadd.h f13, f25, f12, f8, dyn # perform operation
fnmadd.h f13, f25, f12, f8, rdn # perform operation
fnmadd.h f13, f25, f12, f8, rmm # perform operation
fnmadd.h f13, f25, f12, f8, rne # perform operation
fnmadd.h f13, f25, f12, f8, rtz # perform operation
fnmadd.h f13, f25, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f25, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f25, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f25, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f25, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f25, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7c00)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
la x2, scratch
li x3, 0x872d8ae9 # load x3 with value 0x872d8ae9
sw x3, 0(x2) # store 0x872d8ae9 in memory
flh f24, 0(x2) # load 0x872d8ae9 from memory into f24
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f30, 0(x2) # load 0x00007c00 from memory into f30
fnmadd.h f28, f26, f24, f30, dyn # perform operation
fnmadd.h f28, f26, f24, f30, rdn # perform operation
fnmadd.h f28, f26, f24, f30, rmm # perform operation
fnmadd.h f28, f26, f24, f30, rne # perform operation
fnmadd.h f28, f26, f24, f30, rtz # perform operation
fnmadd.h f28, f26, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f26, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f26, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f26, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f26, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f26, f24, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xfc00)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f3, 0(x2) # load 0x00007dff from memory into f3
la x2, scratch
li x3, 0xb892fd90 # load x3 with value 0xb892fd90
sw x3, 0(x2) # store 0xb892fd90 in memory
flh f6, 0(x2) # load 0xb892fd90 from memory into f6
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f24, 0(x2) # load 0x0000fc00 from memory into f24
fnmadd.h f15, f3, f6, f24, dyn # perform operation
fnmadd.h f15, f3, f6, f24, rdn # perform operation
fnmadd.h f15, f3, f6, f24, rmm # perform operation
fnmadd.h f15, f3, f6, f24, rne # perform operation
fnmadd.h f15, f3, f6, f24, rtz # perform operation
fnmadd.h f15, f3, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f3, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f3, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f3, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f3, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f3, f6, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7e00)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f14, 0(x2) # load 0x00007dff from memory into f14
la x2, scratch
li x3, 0xbd0ab3f8 # load x3 with value 0xbd0ab3f8
sw x3, 0(x2) # store 0xbd0ab3f8 in memory
flh f5, 0(x2) # load 0xbd0ab3f8 from memory into f5
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f28, 0(x2) # load 0x00007e00 from memory into f28
fnmadd.h f6, f14, f5, f28, dyn # perform operation
fnmadd.h f6, f14, f5, f28, rdn # perform operation
fnmadd.h f6, f14, f5, f28, rmm # perform operation
fnmadd.h f6, f14, f5, f28, rne # perform operation
fnmadd.h f6, f14, f5, f28, rtz # perform operation
fnmadd.h f6, f14, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f14, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f14, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f14, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f14, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f14, f5, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7fff)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f25, 0(x2) # load 0x00007dff from memory into f25
la x2, scratch
li x3, 0xa828f211 # load x3 with value 0xa828f211
sw x3, 0(x2) # store 0xa828f211 in memory
flh f29, 0(x2) # load 0xa828f211 from memory into f29
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f15, 0(x2) # load 0x00007fff from memory into f15
fnmadd.h f20, f25, f29, f15, dyn # perform operation
fnmadd.h f20, f25, f29, f15, rdn # perform operation
fnmadd.h f20, f25, f29, f15, rmm # perform operation
fnmadd.h f20, f25, f29, f15, rne # perform operation
fnmadd.h f20, f25, f29, f15, rtz # perform operation
fnmadd.h f20, f25, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f25, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f25, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f25, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f25, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f25, f29, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xfe00)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f10, 0(x2) # load 0x00007dff from memory into f10
la x2, scratch
li x3, 0x955f56e2 # load x3 with value 0x955f56e2
sw x3, 0(x2) # store 0x955f56e2 in memory
flh f18, 0(x2) # load 0x955f56e2 from memory into f18
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f20, 0(x2) # load 0x0000fe00 from memory into f20
fnmadd.h f2, f10, f18, f20, dyn # perform operation
fnmadd.h f2, f10, f18, f20, rdn # perform operation
fnmadd.h f2, f10, f18, f20, rmm # perform operation
fnmadd.h f2, f10, f18, f20, rne # perform operation
fnmadd.h f2, f10, f18, f20, rtz # perform operation
fnmadd.h f2, f10, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f10, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f10, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f10, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f10, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f10, f18, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7c01)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f30, 0(x2) # load 0x00007dff from memory into f30
la x2, scratch
li x3, 0x46f6fc09 # load x3 with value 0x46f6fc09
sw x3, 0(x2) # store 0x46f6fc09 in memory
flh f29, 0(x2) # load 0x46f6fc09 from memory into f29
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f3, 0(x2) # load 0x00007c01 from memory into f3
fnmadd.h f7, f30, f29, f3, dyn # perform operation
fnmadd.h f7, f30, f29, f3, rdn # perform operation
fnmadd.h f7, f30, f29, f3, rmm # perform operation
fnmadd.h f7, f30, f29, f3, rne # perform operation
fnmadd.h f7, f30, f29, f3, rtz # perform operation
fnmadd.h f7, f30, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f30, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f30, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f30, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f30, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f30, f29, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7dff)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f9, 0(x2) # load 0x00007dff from memory into f9
la x2, scratch
li x3, 0x22a747d5 # load x3 with value 0x22a747d5
sw x3, 0(x2) # store 0x22a747d5 in memory
flh f14, 0(x2) # load 0x22a747d5 from memory into f14
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f17, 0(x2) # load 0x00007dff from memory into f17
fnmadd.h f19, f9, f14, f17, dyn # perform operation
fnmadd.h f19, f9, f14, f17, rdn # perform operation
fnmadd.h f19, f9, f14, f17, rmm # perform operation
fnmadd.h f19, f9, f14, f17, rne # perform operation
fnmadd.h f19, f9, f14, f17, rtz # perform operation
fnmadd.h f19, f9, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f9, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f9, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f9, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f9, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f9, f14, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xfc01)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f6, 0(x2) # load 0x00007dff from memory into f6
la x2, scratch
li x3, 0xa5a48137 # load x3 with value 0xa5a48137
sw x3, 0(x2) # store 0xa5a48137 in memory
flh f17, 0(x2) # load 0xa5a48137 from memory into f17
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f1, 0(x2) # load 0x0000fc01 from memory into f1
fnmadd.h f24, f6, f17, f1, dyn # perform operation
fnmadd.h f24, f6, f17, f1, rdn # perform operation
fnmadd.h f24, f6, f17, f1, rmm # perform operation
fnmadd.h f24, f6, f17, f1, rne # perform operation
fnmadd.h f24, f6, f17, f1, rtz # perform operation
fnmadd.h f24, f6, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f6, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f6, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f6, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f6, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f6, f17, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x58b4)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f14, 0(x2) # load 0x00007dff from memory into f14
la x2, scratch
li x3, 0xe520215a # load x3 with value 0xe520215a
sw x3, 0(x2) # store 0xe520215a in memory
flh f12, 0(x2) # load 0xe520215a from memory into f12
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
fnmadd.h f28, f14, f12, f25, dyn # perform operation
fnmadd.h f28, f14, f12, f25, rdn # perform operation
fnmadd.h f28, f14, f12, f25, rmm # perform operation
fnmadd.h f28, f14, f12, f25, rne # perform operation
fnmadd.h f28, f14, f12, f25, rtz # perform operation
fnmadd.h f28, f14, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f14, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f14, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f14, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f14, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f14, f12, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xc93a)
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f12, 0(x2) # load 0x00007dff from memory into f12
la x2, scratch
li x3, 0xf9307128 # load x3 with value 0xf9307128
sw x3, 0(x2) # store 0xf9307128 in memory
flh f10, 0(x2) # load 0xf9307128 from memory into f10
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f17, 0(x2) # load 0x0000c93a from memory into f17
fnmadd.h f14, f12, f10, f17, dyn # perform operation
fnmadd.h f14, f12, f10, f17, rdn # perform operation
fnmadd.h f14, f12, f10, f17, rmm # perform operation
fnmadd.h f14, f12, f10, f17, rne # perform operation
fnmadd.h f14, f12, f10, f17, rtz # perform operation
fnmadd.h f14, f12, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f12, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f12, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f12, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f12, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f12, f10, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x0)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f31, 0(x2) # load 0x0000fc01 from memory into f31
la x2, scratch
li x3, 0x35129516 # load x3 with value 0x35129516
sw x3, 0(x2) # store 0x35129516 in memory
flh f1, 0(x2) # load 0x35129516 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f20, 0(x2) # load 0x00000000 from memory into f20
fnmadd.h f29, f31, f1, f20, dyn # perform operation
fnmadd.h f29, f31, f1, f20, rdn # perform operation
fnmadd.h f29, f31, f1, f20, rmm # perform operation
fnmadd.h f29, f31, f1, f20, rne # perform operation
fnmadd.h f29, f31, f1, f20, rtz # perform operation
fnmadd.h f29, f31, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f31, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f31, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f31, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f31, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f31, f1, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x8000)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f11, 0(x2) # load 0x0000fc01 from memory into f11
la x2, scratch
li x3, 0x1ffcd669 # load x3 with value 0x1ffcd669
sw x3, 0(x2) # store 0x1ffcd669 in memory
flh f23, 0(x2) # load 0x1ffcd669 from memory into f23
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f9, 0(x2) # load 0x00008000 from memory into f9
fnmadd.h f3, f11, f23, f9, dyn # perform operation
fnmadd.h f3, f11, f23, f9, rdn # perform operation
fnmadd.h f3, f11, f23, f9, rmm # perform operation
fnmadd.h f3, f11, f23, f9, rne # perform operation
fnmadd.h f3, f11, f23, f9, rtz # perform operation
fnmadd.h f3, f11, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f11, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f11, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f11, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f11, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f11, f23, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x3c00)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f31, 0(x2) # load 0x0000fc01 from memory into f31
la x2, scratch
li x3, 0xde2d077a # load x3 with value 0xde2d077a
sw x3, 0(x2) # store 0xde2d077a in memory
flh f8, 0(x2) # load 0xde2d077a from memory into f8
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f5, 0(x2) # load 0x00003c00 from memory into f5
fnmadd.h f24, f31, f8, f5, dyn # perform operation
fnmadd.h f24, f31, f8, f5, rdn # perform operation
fnmadd.h f24, f31, f8, f5, rmm # perform operation
fnmadd.h f24, f31, f8, f5, rne # perform operation
fnmadd.h f24, f31, f8, f5, rtz # perform operation
fnmadd.h f24, f31, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f31, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f31, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f31, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f31, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f31, f8, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0xbc00)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f1, 0(x2) # load 0x0000fc01 from memory into f1
la x2, scratch
li x3, 0x29e7ebc7 # load x3 with value 0x29e7ebc7
sw x3, 0(x2) # store 0x29e7ebc7 in memory
flh f15, 0(x2) # load 0x29e7ebc7 from memory into f15
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f7, 0(x2) # load 0x0000bc00 from memory into f7
fnmadd.h f11, f1, f15, f7, dyn # perform operation
fnmadd.h f11, f1, f15, f7, rdn # perform operation
fnmadd.h f11, f1, f15, f7, rmm # perform operation
fnmadd.h f11, f1, f15, f7, rne # perform operation
fnmadd.h f11, f1, f15, f7, rtz # perform operation
fnmadd.h f11, f1, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f1, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f1, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f1, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f1, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f1, f15, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x3e00)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f26, 0(x2) # load 0x0000fc01 from memory into f26
la x2, scratch
li x3, 0x56ba0ea3 # load x3 with value 0x56ba0ea3
sw x3, 0(x2) # store 0x56ba0ea3 in memory
flh f25, 0(x2) # load 0x56ba0ea3 from memory into f25
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
fnmadd.h f11, f26, f25, f7, dyn # perform operation
fnmadd.h f11, f26, f25, f7, rdn # perform operation
fnmadd.h f11, f26, f25, f7, rmm # perform operation
fnmadd.h f11, f26, f25, f7, rne # perform operation
fnmadd.h f11, f26, f25, f7, rtz # perform operation
fnmadd.h f11, f26, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f26, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f26, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f26, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f26, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f26, f25, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0xbe00)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f27, 0(x2) # load 0x0000fc01 from memory into f27
la x2, scratch
li x3, 0x3d92ab3e # load x3 with value 0x3d92ab3e
sw x3, 0(x2) # store 0x3d92ab3e in memory
flh f13, 0(x2) # load 0x3d92ab3e from memory into f13
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f19, 0(x2) # load 0x0000be00 from memory into f19
fnmadd.h f22, f27, f13, f19, dyn # perform operation
fnmadd.h f22, f27, f13, f19, rdn # perform operation
fnmadd.h f22, f27, f13, f19, rmm # perform operation
fnmadd.h f22, f27, f13, f19, rne # perform operation
fnmadd.h f22, f27, f13, f19, rtz # perform operation
fnmadd.h f22, f27, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f27, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f27, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f27, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f27, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f27, f13, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x4000)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f15, 0(x2) # load 0x0000fc01 from memory into f15
la x2, scratch
li x3, 0x568a0067 # load x3 with value 0x568a0067
sw x3, 0(x2) # store 0x568a0067 in memory
flh f14, 0(x2) # load 0x568a0067 from memory into f14
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f1, 0(x2) # load 0x00004000 from memory into f1
fnmadd.h f6, f15, f14, f1, dyn # perform operation
fnmadd.h f6, f15, f14, f1, rdn # perform operation
fnmadd.h f6, f15, f14, f1, rmm # perform operation
fnmadd.h f6, f15, f14, f1, rne # perform operation
fnmadd.h f6, f15, f14, f1, rtz # perform operation
fnmadd.h f6, f15, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f15, f14, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0xc000)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f9, 0(x2) # load 0x0000fc01 from memory into f9
la x2, scratch
li x3, 0xd56982a3 # load x3 with value 0xd56982a3
sw x3, 0(x2) # store 0xd56982a3 in memory
flh f19, 0(x2) # load 0xd56982a3 from memory into f19
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f26, 0(x2) # load 0x0000c000 from memory into f26
fnmadd.h f25, f9, f19, f26, dyn # perform operation
fnmadd.h f25, f9, f19, f26, rdn # perform operation
fnmadd.h f25, f9, f19, f26, rmm # perform operation
fnmadd.h f25, f9, f19, f26, rne # perform operation
fnmadd.h f25, f9, f19, f26, rtz # perform operation
fnmadd.h f25, f9, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f9, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f9, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f9, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f9, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f9, f19, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x400)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f2, 0(x2) # load 0x0000fc01 from memory into f2
la x2, scratch
li x3, 0xc60289b6 # load x3 with value 0xc60289b6
sw x3, 0(x2) # store 0xc60289b6 in memory
flh f29, 0(x2) # load 0xc60289b6 from memory into f29
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f22, 0(x2) # load 0x00000400 from memory into f22
fnmadd.h f31, f2, f29, f22, dyn # perform operation
fnmadd.h f31, f2, f29, f22, rdn # perform operation
fnmadd.h f31, f2, f29, f22, rmm # perform operation
fnmadd.h f31, f2, f29, f22, rne # perform operation
fnmadd.h f31, f2, f29, f22, rtz # perform operation
fnmadd.h f31, f2, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f2, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f2, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f2, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f2, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f2, f29, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x8400)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f13, 0(x2) # load 0x0000fc01 from memory into f13
la x2, scratch
li x3, 0x3711df00 # load x3 with value 0x3711df00
sw x3, 0(x2) # store 0x3711df00 in memory
flh f7, 0(x2) # load 0x3711df00 from memory into f7
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f17, 0(x2) # load 0x00008400 from memory into f17
fnmadd.h f10, f13, f7, f17, dyn # perform operation
fnmadd.h f10, f13, f7, f17, rdn # perform operation
fnmadd.h f10, f13, f7, f17, rmm # perform operation
fnmadd.h f10, f13, f7, f17, rne # perform operation
fnmadd.h f10, f13, f7, f17, rtz # perform operation
fnmadd.h f10, f13, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f13, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f13, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f13, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f13, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f13, f7, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x7bff)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f24, 0(x2) # load 0x0000fc01 from memory into f24
la x2, scratch
li x3, 0x6d680acd # load x3 with value 0x6d680acd
sw x3, 0(x2) # store 0x6d680acd in memory
flh f7, 0(x2) # load 0x6d680acd from memory into f7
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f18, 0(x2) # load 0x00007bff from memory into f18
fnmadd.h f2, f24, f7, f18, dyn # perform operation
fnmadd.h f2, f24, f7, f18, rdn # perform operation
fnmadd.h f2, f24, f7, f18, rmm # perform operation
fnmadd.h f2, f24, f7, f18, rne # perform operation
fnmadd.h f2, f24, f7, f18, rtz # perform operation
fnmadd.h f2, f24, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f24, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f24, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f24, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f24, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f24, f7, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0xfbff)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f17, 0(x2) # load 0x0000fc01 from memory into f17
la x2, scratch
li x3, 0xd35cc17a # load x3 with value 0xd35cc17a
sw x3, 0(x2) # store 0xd35cc17a in memory
flh f20, 0(x2) # load 0xd35cc17a from memory into f20
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f26, 0(x2) # load 0x0000fbff from memory into f26
fnmadd.h f18, f17, f20, f26, dyn # perform operation
fnmadd.h f18, f17, f20, f26, rdn # perform operation
fnmadd.h f18, f17, f20, f26, rmm # perform operation
fnmadd.h f18, f17, f20, f26, rne # perform operation
fnmadd.h f18, f17, f20, f26, rtz # perform operation
fnmadd.h f18, f17, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f17, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f17, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f17, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f17, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f17, f20, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x3ff)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f2, 0(x2) # load 0x0000fc01 from memory into f2
la x2, scratch
li x3, 0xc1f50975 # load x3 with value 0xc1f50975
sw x3, 0(x2) # store 0xc1f50975 in memory
flh f22, 0(x2) # load 0xc1f50975 from memory into f22
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f13, 0(x2) # load 0x000003ff from memory into f13
fnmadd.h f1, f2, f22, f13, dyn # perform operation
fnmadd.h f1, f2, f22, f13, rdn # perform operation
fnmadd.h f1, f2, f22, f13, rmm # perform operation
fnmadd.h f1, f2, f22, f13, rne # perform operation
fnmadd.h f1, f2, f22, f13, rtz # perform operation
fnmadd.h f1, f2, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f2, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f2, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f2, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f2, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f2, f22, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x83ff)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f22, 0(x2) # load 0x0000fc01 from memory into f22
la x2, scratch
li x3, 0x70193ee9 # load x3 with value 0x70193ee9
sw x3, 0(x2) # store 0x70193ee9 in memory
flh f26, 0(x2) # load 0x70193ee9 from memory into f26
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
fnmadd.h f19, f22, f26, f18, dyn # perform operation
fnmadd.h f19, f22, f26, f18, rdn # perform operation
fnmadd.h f19, f22, f26, f18, rmm # perform operation
fnmadd.h f19, f22, f26, f18, rne # perform operation
fnmadd.h f19, f22, f26, f18, rtz # perform operation
fnmadd.h f19, f22, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f22, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f22, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f22, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f22, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f22, f26, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x200)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f26, 0(x2) # load 0x0000fc01 from memory into f26
la x2, scratch
li x3, 0x6dbf2b0f # load x3 with value 0x6dbf2b0f
sw x3, 0(x2) # store 0x6dbf2b0f in memory
flh f9, 0(x2) # load 0x6dbf2b0f from memory into f9
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f14, 0(x2) # load 0x00000200 from memory into f14
fnmadd.h f8, f26, f9, f14, dyn # perform operation
fnmadd.h f8, f26, f9, f14, rdn # perform operation
fnmadd.h f8, f26, f9, f14, rmm # perform operation
fnmadd.h f8, f26, f9, f14, rne # perform operation
fnmadd.h f8, f26, f9, f14, rtz # perform operation
fnmadd.h f8, f26, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f26, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f26, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f26, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f26, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f26, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x8200)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f28, 0(x2) # load 0x0000fc01 from memory into f28
la x2, scratch
li x3, 0x355773ee # load x3 with value 0x355773ee
sw x3, 0(x2) # store 0x355773ee in memory
flh f11, 0(x2) # load 0x355773ee from memory into f11
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f19, 0(x2) # load 0x00008200 from memory into f19
fnmadd.h f10, f28, f11, f19, dyn # perform operation
fnmadd.h f10, f28, f11, f19, rdn # perform operation
fnmadd.h f10, f28, f11, f19, rmm # perform operation
fnmadd.h f10, f28, f11, f19, rne # perform operation
fnmadd.h f10, f28, f11, f19, rtz # perform operation
fnmadd.h f10, f28, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f28, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f28, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f28, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f28, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f28, f11, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x1)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f18, 0(x2) # load 0x0000fc01 from memory into f18
la x2, scratch
li x3, 0xfc58c092 # load x3 with value 0xfc58c092
sw x3, 0(x2) # store 0xfc58c092 in memory
flh f16, 0(x2) # load 0xfc58c092 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f14, 0(x2) # load 0x00000001 from memory into f14
fnmadd.h f24, f18, f16, f14, dyn # perform operation
fnmadd.h f24, f18, f16, f14, rdn # perform operation
fnmadd.h f24, f18, f16, f14, rmm # perform operation
fnmadd.h f24, f18, f16, f14, rne # perform operation
fnmadd.h f24, f18, f16, f14, rtz # perform operation
fnmadd.h f24, f18, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f18, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f18, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f18, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f18, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f18, f16, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x8001)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f2, 0(x2) # load 0x0000fc01 from memory into f2
la x2, scratch
li x3, 0x7659386d # load x3 with value 0x7659386d
sw x3, 0(x2) # store 0x7659386d in memory
flh f24, 0(x2) # load 0x7659386d from memory into f24
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f15, 0(x2) # load 0x00008001 from memory into f15
fnmadd.h f19, f2, f24, f15, dyn # perform operation
fnmadd.h f19, f2, f24, f15, rdn # perform operation
fnmadd.h f19, f2, f24, f15, rmm # perform operation
fnmadd.h f19, f2, f24, f15, rne # perform operation
fnmadd.h f19, f2, f24, f15, rtz # perform operation
fnmadd.h f19, f2, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f2, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f2, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f2, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f2, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f2, f24, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x7c00)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f6, 0(x2) # load 0x0000fc01 from memory into f6
la x2, scratch
li x3, 0xc16452da # load x3 with value 0xc16452da
sw x3, 0(x2) # store 0xc16452da in memory
flh f22, 0(x2) # load 0xc16452da from memory into f22
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f16, 0(x2) # load 0x00007c00 from memory into f16
fnmadd.h f9, f6, f22, f16, dyn # perform operation
fnmadd.h f9, f6, f22, f16, rdn # perform operation
fnmadd.h f9, f6, f22, f16, rmm # perform operation
fnmadd.h f9, f6, f22, f16, rne # perform operation
fnmadd.h f9, f6, f22, f16, rtz # perform operation
fnmadd.h f9, f6, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f6, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f6, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f6, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f6, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f6, f22, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0xfc00)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f17, 0(x2) # load 0x0000fc01 from memory into f17
la x2, scratch
li x3, 0xd0970dab # load x3 with value 0xd0970dab
sw x3, 0(x2) # store 0xd0970dab in memory
flh f27, 0(x2) # load 0xd0970dab from memory into f27
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f20, 0(x2) # load 0x0000fc00 from memory into f20
fnmadd.h f25, f17, f27, f20, dyn # perform operation
fnmadd.h f25, f17, f27, f20, rdn # perform operation
fnmadd.h f25, f17, f27, f20, rmm # perform operation
fnmadd.h f25, f17, f27, f20, rne # perform operation
fnmadd.h f25, f17, f27, f20, rtz # perform operation
fnmadd.h f25, f17, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f17, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f17, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f17, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f17, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f17, f27, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x7e00)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f9, 0(x2) # load 0x0000fc01 from memory into f9
la x2, scratch
li x3, 0x7200a59e # load x3 with value 0x7200a59e
sw x3, 0(x2) # store 0x7200a59e in memory
flh f12, 0(x2) # load 0x7200a59e from memory into f12
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
fnmadd.h f31, f9, f12, f5, dyn # perform operation
fnmadd.h f31, f9, f12, f5, rdn # perform operation
fnmadd.h f31, f9, f12, f5, rmm # perform operation
fnmadd.h f31, f9, f12, f5, rne # perform operation
fnmadd.h f31, f9, f12, f5, rtz # perform operation
fnmadd.h f31, f9, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f9, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f9, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f9, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f9, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f9, f12, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x7fff)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f29, 0(x2) # load 0x0000fc01 from memory into f29
la x2, scratch
li x3, 0x59ff5660 # load x3 with value 0x59ff5660
sw x3, 0(x2) # store 0x59ff5660 in memory
flh f26, 0(x2) # load 0x59ff5660 from memory into f26
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f30, 0(x2) # load 0x00007fff from memory into f30
fnmadd.h f3, f29, f26, f30, dyn # perform operation
fnmadd.h f3, f29, f26, f30, rdn # perform operation
fnmadd.h f3, f29, f26, f30, rmm # perform operation
fnmadd.h f3, f29, f26, f30, rne # perform operation
fnmadd.h f3, f29, f26, f30, rtz # perform operation
fnmadd.h f3, f29, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f29, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f29, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f29, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f29, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f29, f26, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0xfe00)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f20, 0(x2) # load 0x0000fc01 from memory into f20
la x2, scratch
li x3, 0xaf3bdda6 # load x3 with value 0xaf3bdda6
sw x3, 0(x2) # store 0xaf3bdda6 in memory
flh f27, 0(x2) # load 0xaf3bdda6 from memory into f27
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f8, 0(x2) # load 0x0000fe00 from memory into f8
fnmadd.h f19, f20, f27, f8, dyn # perform operation
fnmadd.h f19, f20, f27, f8, rdn # perform operation
fnmadd.h f19, f20, f27, f8, rmm # perform operation
fnmadd.h f19, f20, f27, f8, rne # perform operation
fnmadd.h f19, f20, f27, f8, rtz # perform operation
fnmadd.h f19, f20, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f20, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f20, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f20, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f20, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f20, f27, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x7c01)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f26, 0(x2) # load 0x0000fc01 from memory into f26
la x2, scratch
li x3, 0x4dd19d47 # load x3 with value 0x4dd19d47
sw x3, 0(x2) # store 0x4dd19d47 in memory
flh f7, 0(x2) # load 0x4dd19d47 from memory into f7
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f23, 0(x2) # load 0x00007c01 from memory into f23
fnmadd.h f8, f26, f7, f23, dyn # perform operation
fnmadd.h f8, f26, f7, f23, rdn # perform operation
fnmadd.h f8, f26, f7, f23, rmm # perform operation
fnmadd.h f8, f26, f7, f23, rne # perform operation
fnmadd.h f8, f26, f7, f23, rtz # perform operation
fnmadd.h f8, f26, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f26, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f26, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f26, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f26, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f26, f7, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x7dff)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f15, 0(x2) # load 0x0000fc01 from memory into f15
la x2, scratch
li x3, 0xb4339e83 # load x3 with value 0xb4339e83
sw x3, 0(x2) # store 0xb4339e83 in memory
flh f9, 0(x2) # load 0xb4339e83 from memory into f9
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
fnmadd.h f28, f15, f9, f26, dyn # perform operation
fnmadd.h f28, f15, f9, f26, rdn # perform operation
fnmadd.h f28, f15, f9, f26, rmm # perform operation
fnmadd.h f28, f15, f9, f26, rne # perform operation
fnmadd.h f28, f15, f9, f26, rtz # perform operation
fnmadd.h f28, f15, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f15, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f15, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f15, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f15, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f15, f9, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0xfc01)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f23, 0(x2) # load 0x0000fc01 from memory into f23
la x2, scratch
li x3, 0xc6780487 # load x3 with value 0xc6780487
sw x3, 0(x2) # store 0xc6780487 in memory
flh f29, 0(x2) # load 0xc6780487 from memory into f29
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f14, 0(x2) # load 0x0000fc01 from memory into f14
fnmadd.h f30, f23, f29, f14, dyn # perform operation
fnmadd.h f30, f23, f29, f14, rdn # perform operation
fnmadd.h f30, f23, f29, f14, rmm # perform operation
fnmadd.h f30, f23, f29, f14, rne # perform operation
fnmadd.h f30, f23, f29, f14, rtz # perform operation
fnmadd.h f30, f23, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f23, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f23, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f23, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f23, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f23, f29, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0x58b4)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f24, 0(x2) # load 0x0000fc01 from memory into f24
la x2, scratch
li x3, 0x722c8f99 # load x3 with value 0x722c8f99
sw x3, 0(x2) # store 0x722c8f99 in memory
flh f6, 0(x2) # load 0x722c8f99 from memory into f6
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f1, 0(x2) # load 0x000058b4 from memory into f1
fnmadd.h f31, f24, f6, f1, dyn # perform operation
fnmadd.h f31, f24, f6, f1, rdn # perform operation
fnmadd.h f31, f24, f6, f1, rmm # perform operation
fnmadd.h f31, f24, f6, f1, rne # perform operation
fnmadd.h f31, f24, f6, f1, rtz # perform operation
fnmadd.h f31, f24, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f24, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f24, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f24, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f24, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f24, f6, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc01 fs3 = 0xc93a)
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f9, 0(x2) # load 0x0000fc01 from memory into f9
la x2, scratch
li x3, 0x30c4256a # load x3 with value 0x30c4256a
sw x3, 0(x2) # store 0x30c4256a in memory
flh f7, 0(x2) # load 0x30c4256a from memory into f7
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f27, 0(x2) # load 0x0000c93a from memory into f27
fnmadd.h f31, f9, f7, f27, dyn # perform operation
fnmadd.h f31, f9, f7, f27, rdn # perform operation
fnmadd.h f31, f9, f7, f27, rmm # perform operation
fnmadd.h f31, f9, f7, f27, rne # perform operation
fnmadd.h f31, f9, f7, f27, rtz # perform operation
fnmadd.h f31, f9, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f9, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f9, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f9, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f9, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f9, f7, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x0)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
la x2, scratch
li x3, 0x79268f2d # load x3 with value 0x79268f2d
sw x3, 0(x2) # store 0x79268f2d in memory
flh f17, 0(x2) # load 0x79268f2d from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f26, 0(x2) # load 0x00000000 from memory into f26
fnmadd.h f18, f25, f17, f26, dyn # perform operation
fnmadd.h f18, f25, f17, f26, rdn # perform operation
fnmadd.h f18, f25, f17, f26, rmm # perform operation
fnmadd.h f18, f25, f17, f26, rne # perform operation
fnmadd.h f18, f25, f17, f26, rtz # perform operation
fnmadd.h f18, f25, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f25, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f25, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f25, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f25, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f25, f17, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x8000)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
la x2, scratch
li x3, 0x5356c9af # load x3 with value 0x5356c9af
sw x3, 0(x2) # store 0x5356c9af in memory
flh f20, 0(x2) # load 0x5356c9af from memory into f20
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f22, 0(x2) # load 0x00008000 from memory into f22
fnmadd.h f29, f13, f20, f22, dyn # perform operation
fnmadd.h f29, f13, f20, f22, rdn # perform operation
fnmadd.h f29, f13, f20, f22, rmm # perform operation
fnmadd.h f29, f13, f20, f22, rne # perform operation
fnmadd.h f29, f13, f20, f22, rtz # perform operation
fnmadd.h f29, f13, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f13, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f13, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f13, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f13, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f13, f20, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x3c00)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f15, 0(x2) # load 0x000058b4 from memory into f15
la x2, scratch
li x3, 0xa6c4fb30 # load x3 with value 0xa6c4fb30
sw x3, 0(x2) # store 0xa6c4fb30 in memory
flh f18, 0(x2) # load 0xa6c4fb30 from memory into f18
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f1, 0(x2) # load 0x00003c00 from memory into f1
fnmadd.h f12, f15, f18, f1, dyn # perform operation
fnmadd.h f12, f15, f18, f1, rdn # perform operation
fnmadd.h f12, f15, f18, f1, rmm # perform operation
fnmadd.h f12, f15, f18, f1, rne # perform operation
fnmadd.h f12, f15, f18, f1, rtz # perform operation
fnmadd.h f12, f15, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f15, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f15, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f15, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f15, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f15, f18, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xbc00)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f23, 0(x2) # load 0x000058b4 from memory into f23
la x2, scratch
li x3, 0x9dcb0ae8 # load x3 with value 0x9dcb0ae8
sw x3, 0(x2) # store 0x9dcb0ae8 in memory
flh f18, 0(x2) # load 0x9dcb0ae8 from memory into f18
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f17, 0(x2) # load 0x0000bc00 from memory into f17
fnmadd.h f14, f23, f18, f17, dyn # perform operation
fnmadd.h f14, f23, f18, f17, rdn # perform operation
fnmadd.h f14, f23, f18, f17, rmm # perform operation
fnmadd.h f14, f23, f18, f17, rne # perform operation
fnmadd.h f14, f23, f18, f17, rtz # perform operation
fnmadd.h f14, f23, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f23, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f23, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f23, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f23, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f23, f18, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x3e00)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f2, 0(x2) # load 0x000058b4 from memory into f2
la x2, scratch
li x3, 0x7375b218 # load x3 with value 0x7375b218
sw x3, 0(x2) # store 0x7375b218 in memory
flh f20, 0(x2) # load 0x7375b218 from memory into f20
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f22, 0(x2) # load 0x00003e00 from memory into f22
fnmadd.h f24, f2, f20, f22, dyn # perform operation
fnmadd.h f24, f2, f20, f22, rdn # perform operation
fnmadd.h f24, f2, f20, f22, rmm # perform operation
fnmadd.h f24, f2, f20, f22, rne # perform operation
fnmadd.h f24, f2, f20, f22, rtz # perform operation
fnmadd.h f24, f2, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f2, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f2, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f2, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f2, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f2, f20, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xbe00)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f18, 0(x2) # load 0x000058b4 from memory into f18
la x2, scratch
li x3, 0x5542e7fd # load x3 with value 0x5542e7fd
sw x3, 0(x2) # store 0x5542e7fd in memory
flh f8, 0(x2) # load 0x5542e7fd from memory into f8
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f25, 0(x2) # load 0x0000be00 from memory into f25
fnmadd.h f31, f18, f8, f25, dyn # perform operation
fnmadd.h f31, f18, f8, f25, rdn # perform operation
fnmadd.h f31, f18, f8, f25, rmm # perform operation
fnmadd.h f31, f18, f8, f25, rne # perform operation
fnmadd.h f31, f18, f8, f25, rtz # perform operation
fnmadd.h f31, f18, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f18, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f18, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f18, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f18, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f18, f8, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x4000)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f18, 0(x2) # load 0x000058b4 from memory into f18
la x2, scratch
li x3, 0xa7d3a9af # load x3 with value 0xa7d3a9af
sw x3, 0(x2) # store 0xa7d3a9af in memory
flh f27, 0(x2) # load 0xa7d3a9af from memory into f27
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f26, 0(x2) # load 0x00004000 from memory into f26
fnmadd.h f1, f18, f27, f26, dyn # perform operation
fnmadd.h f1, f18, f27, f26, rdn # perform operation
fnmadd.h f1, f18, f27, f26, rmm # perform operation
fnmadd.h f1, f18, f27, f26, rne # perform operation
fnmadd.h f1, f18, f27, f26, rtz # perform operation
fnmadd.h f1, f18, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f18, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f18, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f18, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f18, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f18, f27, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xc000)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
la x2, scratch
li x3, 0x6fff43d6 # load x3 with value 0x6fff43d6
sw x3, 0(x2) # store 0x6fff43d6 in memory
flh f27, 0(x2) # load 0x6fff43d6 from memory into f27
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f5, 0(x2) # load 0x0000c000 from memory into f5
fnmadd.h f18, f21, f27, f5, dyn # perform operation
fnmadd.h f18, f21, f27, f5, rdn # perform operation
fnmadd.h f18, f21, f27, f5, rmm # perform operation
fnmadd.h f18, f21, f27, f5, rne # perform operation
fnmadd.h f18, f21, f27, f5, rtz # perform operation
fnmadd.h f18, f21, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f21, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f21, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f21, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f21, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f21, f27, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x400)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f26, 0(x2) # load 0x000058b4 from memory into f26
la x2, scratch
li x3, 0xb1111150 # load x3 with value 0xb1111150
sw x3, 0(x2) # store 0xb1111150 in memory
flh f27, 0(x2) # load 0xb1111150 from memory into f27
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f2, 0(x2) # load 0x00000400 from memory into f2
fnmadd.h f3, f26, f27, f2, dyn # perform operation
fnmadd.h f3, f26, f27, f2, rdn # perform operation
fnmadd.h f3, f26, f27, f2, rmm # perform operation
fnmadd.h f3, f26, f27, f2, rne # perform operation
fnmadd.h f3, f26, f27, f2, rtz # perform operation
fnmadd.h f3, f26, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f26, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f26, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f26, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f26, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f26, f27, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x8400)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f20, 0(x2) # load 0x000058b4 from memory into f20
la x2, scratch
li x3, 0x9e54d02b # load x3 with value 0x9e54d02b
sw x3, 0(x2) # store 0x9e54d02b in memory
flh f14, 0(x2) # load 0x9e54d02b from memory into f14
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f29, 0(x2) # load 0x00008400 from memory into f29
fnmadd.h f17, f20, f14, f29, dyn # perform operation
fnmadd.h f17, f20, f14, f29, rdn # perform operation
fnmadd.h f17, f20, f14, f29, rmm # perform operation
fnmadd.h f17, f20, f14, f29, rne # perform operation
fnmadd.h f17, f20, f14, f29, rtz # perform operation
fnmadd.h f17, f20, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f20, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f20, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f20, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f20, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f20, f14, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7bff)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f30, 0(x2) # load 0x000058b4 from memory into f30
la x2, scratch
li x3, 0xb308e64a # load x3 with value 0xb308e64a
sw x3, 0(x2) # store 0xb308e64a in memory
flh f1, 0(x2) # load 0xb308e64a from memory into f1
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f6, 0(x2) # load 0x00007bff from memory into f6
fnmadd.h f15, f30, f1, f6, dyn # perform operation
fnmadd.h f15, f30, f1, f6, rdn # perform operation
fnmadd.h f15, f30, f1, f6, rmm # perform operation
fnmadd.h f15, f30, f1, f6, rne # perform operation
fnmadd.h f15, f30, f1, f6, rtz # perform operation
fnmadd.h f15, f30, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f30, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f30, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f30, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f30, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f30, f1, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xfbff)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f18, 0(x2) # load 0x000058b4 from memory into f18
la x2, scratch
li x3, 0x0fd2f20e # load x3 with value 0x0fd2f20e
sw x3, 0(x2) # store 0x0fd2f20e in memory
flh f8, 0(x2) # load 0x0fd2f20e from memory into f8
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f5, 0(x2) # load 0x0000fbff from memory into f5
fnmadd.h f22, f18, f8, f5, dyn # perform operation
fnmadd.h f22, f18, f8, f5, rdn # perform operation
fnmadd.h f22, f18, f8, f5, rmm # perform operation
fnmadd.h f22, f18, f8, f5, rne # perform operation
fnmadd.h f22, f18, f8, f5, rtz # perform operation
fnmadd.h f22, f18, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f18, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f18, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f18, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f18, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f18, f8, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x3ff)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f2, 0(x2) # load 0x000058b4 from memory into f2
la x2, scratch
li x3, 0xedbcc3bf # load x3 with value 0xedbcc3bf
sw x3, 0(x2) # store 0xedbcc3bf in memory
flh f13, 0(x2) # load 0xedbcc3bf from memory into f13
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f19, 0(x2) # load 0x000003ff from memory into f19
fnmadd.h f12, f2, f13, f19, dyn # perform operation
fnmadd.h f12, f2, f13, f19, rdn # perform operation
fnmadd.h f12, f2, f13, f19, rmm # perform operation
fnmadd.h f12, f2, f13, f19, rne # perform operation
fnmadd.h f12, f2, f13, f19, rtz # perform operation
fnmadd.h f12, f2, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f2, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f2, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f2, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f2, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f2, f13, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x83ff)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f27, 0(x2) # load 0x000058b4 from memory into f27
la x2, scratch
li x3, 0x784ca7f7 # load x3 with value 0x784ca7f7
sw x3, 0(x2) # store 0x784ca7f7 in memory
flh f5, 0(x2) # load 0x784ca7f7 from memory into f5
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f9, 0(x2) # load 0x000083ff from memory into f9
fnmadd.h f23, f27, f5, f9, dyn # perform operation
fnmadd.h f23, f27, f5, f9, rdn # perform operation
fnmadd.h f23, f27, f5, f9, rmm # perform operation
fnmadd.h f23, f27, f5, f9, rne # perform operation
fnmadd.h f23, f27, f5, f9, rtz # perform operation
fnmadd.h f23, f27, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f27, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f27, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f27, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f27, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f27, f5, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x200)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f8, 0(x2) # load 0x000058b4 from memory into f8
la x2, scratch
li x3, 0x7aa8cd2b # load x3 with value 0x7aa8cd2b
sw x3, 0(x2) # store 0x7aa8cd2b in memory
flh f29, 0(x2) # load 0x7aa8cd2b from memory into f29
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f15, 0(x2) # load 0x00000200 from memory into f15
fnmadd.h f20, f8, f29, f15, dyn # perform operation
fnmadd.h f20, f8, f29, f15, rdn # perform operation
fnmadd.h f20, f8, f29, f15, rmm # perform operation
fnmadd.h f20, f8, f29, f15, rne # perform operation
fnmadd.h f20, f8, f29, f15, rtz # perform operation
fnmadd.h f20, f8, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f8, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f8, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f8, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f8, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f8, f29, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x8200)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f22, 0(x2) # load 0x000058b4 from memory into f22
la x2, scratch
li x3, 0xfafcbcc3 # load x3 with value 0xfafcbcc3
sw x3, 0(x2) # store 0xfafcbcc3 in memory
flh f6, 0(x2) # load 0xfafcbcc3 from memory into f6
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f9, 0(x2) # load 0x00008200 from memory into f9
fnmadd.h f7, f22, f6, f9, dyn # perform operation
fnmadd.h f7, f22, f6, f9, rdn # perform operation
fnmadd.h f7, f22, f6, f9, rmm # perform operation
fnmadd.h f7, f22, f6, f9, rne # perform operation
fnmadd.h f7, f22, f6, f9, rtz # perform operation
fnmadd.h f7, f22, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f22, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f22, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f22, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f22, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f22, f6, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x1)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f15, 0(x2) # load 0x000058b4 from memory into f15
la x2, scratch
li x3, 0x98543750 # load x3 with value 0x98543750
sw x3, 0(x2) # store 0x98543750 in memory
flh f16, 0(x2) # load 0x98543750 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f31, 0(x2) # load 0x00000001 from memory into f31
fnmadd.h f26, f15, f16, f31, dyn # perform operation
fnmadd.h f26, f15, f16, f31, rdn # perform operation
fnmadd.h f26, f15, f16, f31, rmm # perform operation
fnmadd.h f26, f15, f16, f31, rne # perform operation
fnmadd.h f26, f15, f16, f31, rtz # perform operation
fnmadd.h f26, f15, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f15, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f15, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f15, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f15, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f15, f16, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x8001)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f27, 0(x2) # load 0x000058b4 from memory into f27
la x2, scratch
li x3, 0x86abd8dc # load x3 with value 0x86abd8dc
sw x3, 0(x2) # store 0x86abd8dc in memory
flh f19, 0(x2) # load 0x86abd8dc from memory into f19
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f28, 0(x2) # load 0x00008001 from memory into f28
fnmadd.h f30, f27, f19, f28, dyn # perform operation
fnmadd.h f30, f27, f19, f28, rdn # perform operation
fnmadd.h f30, f27, f19, f28, rmm # perform operation
fnmadd.h f30, f27, f19, f28, rne # perform operation
fnmadd.h f30, f27, f19, f28, rtz # perform operation
fnmadd.h f30, f27, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f27, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f27, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f27, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f27, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f27, f19, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7c00)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f12, 0(x2) # load 0x000058b4 from memory into f12
la x2, scratch
li x3, 0x333f4619 # load x3 with value 0x333f4619
sw x3, 0(x2) # store 0x333f4619 in memory
flh f20, 0(x2) # load 0x333f4619 from memory into f20
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f24, 0(x2) # load 0x00007c00 from memory into f24
fnmadd.h f28, f12, f20, f24, dyn # perform operation
fnmadd.h f28, f12, f20, f24, rdn # perform operation
fnmadd.h f28, f12, f20, f24, rmm # perform operation
fnmadd.h f28, f12, f20, f24, rne # perform operation
fnmadd.h f28, f12, f20, f24, rtz # perform operation
fnmadd.h f28, f12, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f12, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f12, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f12, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f12, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f12, f20, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xfc00)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f7, 0(x2) # load 0x000058b4 from memory into f7
la x2, scratch
li x3, 0x32e57181 # load x3 with value 0x32e57181
sw x3, 0(x2) # store 0x32e57181 in memory
flh f22, 0(x2) # load 0x32e57181 from memory into f22
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f13, 0(x2) # load 0x0000fc00 from memory into f13
fnmadd.h f2, f7, f22, f13, dyn # perform operation
fnmadd.h f2, f7, f22, f13, rdn # perform operation
fnmadd.h f2, f7, f22, f13, rmm # perform operation
fnmadd.h f2, f7, f22, f13, rne # perform operation
fnmadd.h f2, f7, f22, f13, rtz # perform operation
fnmadd.h f2, f7, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f7, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f7, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f7, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f7, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f7, f22, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7e00)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
la x2, scratch
li x3, 0x881714bd # load x3 with value 0x881714bd
sw x3, 0(x2) # store 0x881714bd in memory
flh f2, 0(x2) # load 0x881714bd from memory into f2
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f29, 0(x2) # load 0x00007e00 from memory into f29
fnmadd.h f14, f21, f2, f29, dyn # perform operation
fnmadd.h f14, f21, f2, f29, rdn # perform operation
fnmadd.h f14, f21, f2, f29, rmm # perform operation
fnmadd.h f14, f21, f2, f29, rne # perform operation
fnmadd.h f14, f21, f2, f29, rtz # perform operation
fnmadd.h f14, f21, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f21, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f21, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f21, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f21, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f21, f2, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7fff)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f9, 0(x2) # load 0x000058b4 from memory into f9
la x2, scratch
li x3, 0x85f1a032 # load x3 with value 0x85f1a032
sw x3, 0(x2) # store 0x85f1a032 in memory
flh f23, 0(x2) # load 0x85f1a032 from memory into f23
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f19, 0(x2) # load 0x00007fff from memory into f19
fnmadd.h f6, f9, f23, f19, dyn # perform operation
fnmadd.h f6, f9, f23, f19, rdn # perform operation
fnmadd.h f6, f9, f23, f19, rmm # perform operation
fnmadd.h f6, f9, f23, f19, rne # perform operation
fnmadd.h f6, f9, f23, f19, rtz # perform operation
fnmadd.h f6, f9, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f9, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f9, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f9, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f9, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f9, f23, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xfe00)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f15, 0(x2) # load 0x000058b4 from memory into f15
la x2, scratch
li x3, 0x206e0bfb # load x3 with value 0x206e0bfb
sw x3, 0(x2) # store 0x206e0bfb in memory
flh f2, 0(x2) # load 0x206e0bfb from memory into f2
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f19, 0(x2) # load 0x0000fe00 from memory into f19
fnmadd.h f13, f15, f2, f19, dyn # perform operation
fnmadd.h f13, f15, f2, f19, rdn # perform operation
fnmadd.h f13, f15, f2, f19, rmm # perform operation
fnmadd.h f13, f15, f2, f19, rne # perform operation
fnmadd.h f13, f15, f2, f19, rtz # perform operation
fnmadd.h f13, f15, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f15, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f15, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f15, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f15, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f15, f2, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7c01)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f10, 0(x2) # load 0x000058b4 from memory into f10
la x2, scratch
li x3, 0xe7712d1c # load x3 with value 0xe7712d1c
sw x3, 0(x2) # store 0xe7712d1c in memory
flh f17, 0(x2) # load 0xe7712d1c from memory into f17
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f7, 0(x2) # load 0x00007c01 from memory into f7
fnmadd.h f30, f10, f17, f7, dyn # perform operation
fnmadd.h f30, f10, f17, f7, rdn # perform operation
fnmadd.h f30, f10, f17, f7, rmm # perform operation
fnmadd.h f30, f10, f17, f7, rne # perform operation
fnmadd.h f30, f10, f17, f7, rtz # perform operation
fnmadd.h f30, f10, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f10, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f10, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f10, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f10, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f10, f17, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7dff)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f8, 0(x2) # load 0x000058b4 from memory into f8
la x2, scratch
li x3, 0x7379c5ec # load x3 with value 0x7379c5ec
sw x3, 0(x2) # store 0x7379c5ec in memory
flh f12, 0(x2) # load 0x7379c5ec from memory into f12
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f23, 0(x2) # load 0x00007dff from memory into f23
fnmadd.h f15, f8, f12, f23, dyn # perform operation
fnmadd.h f15, f8, f12, f23, rdn # perform operation
fnmadd.h f15, f8, f12, f23, rmm # perform operation
fnmadd.h f15, f8, f12, f23, rne # perform operation
fnmadd.h f15, f8, f12, f23, rtz # perform operation
fnmadd.h f15, f8, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f8, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f8, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f8, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f8, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f8, f12, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xfc01)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f22, 0(x2) # load 0x000058b4 from memory into f22
la x2, scratch
li x3, 0xd8ba0aa0 # load x3 with value 0xd8ba0aa0
sw x3, 0(x2) # store 0xd8ba0aa0 in memory
flh f3, 0(x2) # load 0xd8ba0aa0 from memory into f3
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f19, 0(x2) # load 0x0000fc01 from memory into f19
fnmadd.h f10, f22, f3, f19, dyn # perform operation
fnmadd.h f10, f22, f3, f19, rdn # perform operation
fnmadd.h f10, f22, f3, f19, rmm # perform operation
fnmadd.h f10, f22, f3, f19, rne # perform operation
fnmadd.h f10, f22, f3, f19, rtz # perform operation
fnmadd.h f10, f22, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f22, f3, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x58b4)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
la x2, scratch
li x3, 0x8daaa751 # load x3 with value 0x8daaa751
sw x3, 0(x2) # store 0x8daaa751 in memory
flh f13, 0(x2) # load 0x8daaa751 from memory into f13
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f6, 0(x2) # load 0x000058b4 from memory into f6
fnmadd.h f28, f25, f13, f6, dyn # perform operation
fnmadd.h f28, f25, f13, f6, rdn # perform operation
fnmadd.h f28, f25, f13, f6, rmm # perform operation
fnmadd.h f28, f25, f13, f6, rne # perform operation
fnmadd.h f28, f25, f13, f6, rtz # perform operation
fnmadd.h f28, f25, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f25, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f25, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f25, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f25, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f25, f13, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xc93a)
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
la x2, scratch
li x3, 0x560eab86 # load x3 with value 0x560eab86
sw x3, 0(x2) # store 0x560eab86 in memory
flh f10, 0(x2) # load 0x560eab86 from memory into f10
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f9, 0(x2) # load 0x0000c93a from memory into f9
fnmadd.h f25, f13, f10, f9, dyn # perform operation
fnmadd.h f25, f13, f10, f9, rdn # perform operation
fnmadd.h f25, f13, f10, f9, rmm # perform operation
fnmadd.h f25, f13, f10, f9, rne # perform operation
fnmadd.h f25, f13, f10, f9, rtz # perform operation
fnmadd.h f25, f13, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f13, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f13, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f13, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f13, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f13, f10, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x0)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
la x2, scratch
li x3, 0x355aa484 # load x3 with value 0x355aa484
sw x3, 0(x2) # store 0x355aa484 in memory
flh f1, 0(x2) # load 0x355aa484 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f18, 0(x2) # load 0x00000000 from memory into f18
fnmadd.h f7, f3, f1, f18, dyn # perform operation
fnmadd.h f7, f3, f1, f18, rdn # perform operation
fnmadd.h f7, f3, f1, f18, rmm # perform operation
fnmadd.h f7, f3, f1, f18, rne # perform operation
fnmadd.h f7, f3, f1, f18, rtz # perform operation
fnmadd.h f7, f3, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f3, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f3, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f3, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f3, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f3, f1, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x8000)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f31, 0(x2) # load 0x0000c93a from memory into f31
la x2, scratch
li x3, 0xdc1ae5b0 # load x3 with value 0xdc1ae5b0
sw x3, 0(x2) # store 0xdc1ae5b0 in memory
flh f25, 0(x2) # load 0xdc1ae5b0 from memory into f25
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f18, 0(x2) # load 0x00008000 from memory into f18
fnmadd.h f30, f31, f25, f18, dyn # perform operation
fnmadd.h f30, f31, f25, f18, rdn # perform operation
fnmadd.h f30, f31, f25, f18, rmm # perform operation
fnmadd.h f30, f31, f25, f18, rne # perform operation
fnmadd.h f30, f31, f25, f18, rtz # perform operation
fnmadd.h f30, f31, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f31, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f31, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f31, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f31, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f31, f25, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x3c00)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f20, 0(x2) # load 0x0000c93a from memory into f20
la x2, scratch
li x3, 0x795eff97 # load x3 with value 0x795eff97
sw x3, 0(x2) # store 0x795eff97 in memory
flh f1, 0(x2) # load 0x795eff97 from memory into f1
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
fnmadd.h f24, f20, f1, f16, dyn # perform operation
fnmadd.h f24, f20, f1, f16, rdn # perform operation
fnmadd.h f24, f20, f1, f16, rmm # perform operation
fnmadd.h f24, f20, f1, f16, rne # perform operation
fnmadd.h f24, f20, f1, f16, rtz # perform operation
fnmadd.h f24, f20, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f20, f1, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xbc00)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f31, 0(x2) # load 0x0000c93a from memory into f31
la x2, scratch
li x3, 0x0aa878c8 # load x3 with value 0x0aa878c8
sw x3, 0(x2) # store 0x0aa878c8 in memory
flh f25, 0(x2) # load 0x0aa878c8 from memory into f25
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f18, 0(x2) # load 0x0000bc00 from memory into f18
fnmadd.h f15, f31, f25, f18, dyn # perform operation
fnmadd.h f15, f31, f25, f18, rdn # perform operation
fnmadd.h f15, f31, f25, f18, rmm # perform operation
fnmadd.h f15, f31, f25, f18, rne # perform operation
fnmadd.h f15, f31, f25, f18, rtz # perform operation
fnmadd.h f15, f31, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f31, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f31, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f31, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f31, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f31, f25, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x3e00)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f31, 0(x2) # load 0x0000c93a from memory into f31
la x2, scratch
li x3, 0x65cf9286 # load x3 with value 0x65cf9286
sw x3, 0(x2) # store 0x65cf9286 in memory
flh f11, 0(x2) # load 0x65cf9286 from memory into f11
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f21, 0(x2) # load 0x00003e00 from memory into f21
fnmadd.h f17, f31, f11, f21, dyn # perform operation
fnmadd.h f17, f31, f11, f21, rdn # perform operation
fnmadd.h f17, f31, f11, f21, rmm # perform operation
fnmadd.h f17, f31, f11, f21, rne # perform operation
fnmadd.h f17, f31, f11, f21, rtz # perform operation
fnmadd.h f17, f31, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f31, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f31, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f31, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f31, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f31, f11, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xbe00)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f5, 0(x2) # load 0x0000c93a from memory into f5
la x2, scratch
li x3, 0xf9e68be9 # load x3 with value 0xf9e68be9
sw x3, 0(x2) # store 0xf9e68be9 in memory
flh f29, 0(x2) # load 0xf9e68be9 from memory into f29
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
fnmadd.h f18, f5, f29, f14, dyn # perform operation
fnmadd.h f18, f5, f29, f14, rdn # perform operation
fnmadd.h f18, f5, f29, f14, rmm # perform operation
fnmadd.h f18, f5, f29, f14, rne # perform operation
fnmadd.h f18, f5, f29, f14, rtz # perform operation
fnmadd.h f18, f5, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f5, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f5, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f5, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f5, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f5, f29, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x4000)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f25, 0(x2) # load 0x0000c93a from memory into f25
la x2, scratch
li x3, 0x65f7671f # load x3 with value 0x65f7671f
sw x3, 0(x2) # store 0x65f7671f in memory
flh f1, 0(x2) # load 0x65f7671f from memory into f1
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f21, 0(x2) # load 0x00004000 from memory into f21
fnmadd.h f16, f25, f1, f21, dyn # perform operation
fnmadd.h f16, f25, f1, f21, rdn # perform operation
fnmadd.h f16, f25, f1, f21, rmm # perform operation
fnmadd.h f16, f25, f1, f21, rne # perform operation
fnmadd.h f16, f25, f1, f21, rtz # perform operation
fnmadd.h f16, f25, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f25, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f25, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f25, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f25, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f25, f1, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xc000)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
la x2, scratch
li x3, 0x3dac185e # load x3 with value 0x3dac185e
sw x3, 0(x2) # store 0x3dac185e in memory
flh f14, 0(x2) # load 0x3dac185e from memory into f14
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f3, 0(x2) # load 0x0000c000 from memory into f3
fnmadd.h f18, f12, f14, f3, dyn # perform operation
fnmadd.h f18, f12, f14, f3, rdn # perform operation
fnmadd.h f18, f12, f14, f3, rmm # perform operation
fnmadd.h f18, f12, f14, f3, rne # perform operation
fnmadd.h f18, f12, f14, f3, rtz # perform operation
fnmadd.h f18, f12, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f12, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f12, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f12, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f12, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f12, f14, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x400)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
la x2, scratch
li x3, 0x533bc63c # load x3 with value 0x533bc63c
sw x3, 0(x2) # store 0x533bc63c in memory
flh f1, 0(x2) # load 0x533bc63c from memory into f1
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
fnmadd.h f21, f23, f1, f18, dyn # perform operation
fnmadd.h f21, f23, f1, f18, rdn # perform operation
fnmadd.h f21, f23, f1, f18, rmm # perform operation
fnmadd.h f21, f23, f1, f18, rne # perform operation
fnmadd.h f21, f23, f1, f18, rtz # perform operation
fnmadd.h f21, f23, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f23, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f23, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f23, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f23, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f23, f1, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x8400)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f25, 0(x2) # load 0x0000c93a from memory into f25
la x2, scratch
li x3, 0x43cf82ee # load x3 with value 0x43cf82ee
sw x3, 0(x2) # store 0x43cf82ee in memory
flh f28, 0(x2) # load 0x43cf82ee from memory into f28
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f9, 0(x2) # load 0x00008400 from memory into f9
fnmadd.h f13, f25, f28, f9, dyn # perform operation
fnmadd.h f13, f25, f28, f9, rdn # perform operation
fnmadd.h f13, f25, f28, f9, rmm # perform operation
fnmadd.h f13, f25, f28, f9, rne # perform operation
fnmadd.h f13, f25, f28, f9, rtz # perform operation
fnmadd.h f13, f25, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f25, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f25, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f25, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f25, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f25, f28, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7bff)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f10, 0(x2) # load 0x0000c93a from memory into f10
la x2, scratch
li x3, 0x8c4533ae # load x3 with value 0x8c4533ae
sw x3, 0(x2) # store 0x8c4533ae in memory
flh f8, 0(x2) # load 0x8c4533ae from memory into f8
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f25, 0(x2) # load 0x00007bff from memory into f25
fnmadd.h f7, f10, f8, f25, dyn # perform operation
fnmadd.h f7, f10, f8, f25, rdn # perform operation
fnmadd.h f7, f10, f8, f25, rmm # perform operation
fnmadd.h f7, f10, f8, f25, rne # perform operation
fnmadd.h f7, f10, f8, f25, rtz # perform operation
fnmadd.h f7, f10, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f10, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f10, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f10, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f10, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f10, f8, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xfbff)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f7, 0(x2) # load 0x0000c93a from memory into f7
la x2, scratch
li x3, 0xaa8e0ba4 # load x3 with value 0xaa8e0ba4
sw x3, 0(x2) # store 0xaa8e0ba4 in memory
flh f19, 0(x2) # load 0xaa8e0ba4 from memory into f19
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f18, 0(x2) # load 0x0000fbff from memory into f18
fnmadd.h f2, f7, f19, f18, dyn # perform operation
fnmadd.h f2, f7, f19, f18, rdn # perform operation
fnmadd.h f2, f7, f19, f18, rmm # perform operation
fnmadd.h f2, f7, f19, f18, rne # perform operation
fnmadd.h f2, f7, f19, f18, rtz # perform operation
fnmadd.h f2, f7, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f7, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f7, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f7, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f7, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f7, f19, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x3ff)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
la x2, scratch
li x3, 0xc41a0e67 # load x3 with value 0xc41a0e67
sw x3, 0(x2) # store 0xc41a0e67 in memory
flh f24, 0(x2) # load 0xc41a0e67 from memory into f24
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
fnmadd.h f18, f23, f24, f15, dyn # perform operation
fnmadd.h f18, f23, f24, f15, rdn # perform operation
fnmadd.h f18, f23, f24, f15, rmm # perform operation
fnmadd.h f18, f23, f24, f15, rne # perform operation
fnmadd.h f18, f23, f24, f15, rtz # perform operation
fnmadd.h f18, f23, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f23, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f23, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f23, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f23, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f23, f24, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x83ff)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f11, 0(x2) # load 0x0000c93a from memory into f11
la x2, scratch
li x3, 0xadaaf9a7 # load x3 with value 0xadaaf9a7
sw x3, 0(x2) # store 0xadaaf9a7 in memory
flh f23, 0(x2) # load 0xadaaf9a7 from memory into f23
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f20, 0(x2) # load 0x000083ff from memory into f20
fnmadd.h f6, f11, f23, f20, dyn # perform operation
fnmadd.h f6, f11, f23, f20, rdn # perform operation
fnmadd.h f6, f11, f23, f20, rmm # perform operation
fnmadd.h f6, f11, f23, f20, rne # perform operation
fnmadd.h f6, f11, f23, f20, rtz # perform operation
fnmadd.h f6, f11, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f11, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f11, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f11, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f11, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f11, f23, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x200)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f15, 0(x2) # load 0x0000c93a from memory into f15
la x2, scratch
li x3, 0x30379a13 # load x3 with value 0x30379a13
sw x3, 0(x2) # store 0x30379a13 in memory
flh f25, 0(x2) # load 0x30379a13 from memory into f25
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f26, 0(x2) # load 0x00000200 from memory into f26
fnmadd.h f2, f15, f25, f26, dyn # perform operation
fnmadd.h f2, f15, f25, f26, rdn # perform operation
fnmadd.h f2, f15, f25, f26, rmm # perform operation
fnmadd.h f2, f15, f25, f26, rne # perform operation
fnmadd.h f2, f15, f25, f26, rtz # perform operation
fnmadd.h f2, f15, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f15, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f15, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f15, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f15, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f15, f25, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x8200)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f1, 0(x2) # load 0x0000c93a from memory into f1
la x2, scratch
li x3, 0x5d403681 # load x3 with value 0x5d403681
sw x3, 0(x2) # store 0x5d403681 in memory
flh f30, 0(x2) # load 0x5d403681 from memory into f30
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f14, 0(x2) # load 0x00008200 from memory into f14
fnmadd.h f17, f1, f30, f14, dyn # perform operation
fnmadd.h f17, f1, f30, f14, rdn # perform operation
fnmadd.h f17, f1, f30, f14, rmm # perform operation
fnmadd.h f17, f1, f30, f14, rne # perform operation
fnmadd.h f17, f1, f30, f14, rtz # perform operation
fnmadd.h f17, f1, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f1, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f1, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f1, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f1, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f1, f30, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x1)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f30, 0(x2) # load 0x0000c93a from memory into f30
la x2, scratch
li x3, 0x12a40073 # load x3 with value 0x12a40073
sw x3, 0(x2) # store 0x12a40073 in memory
flh f9, 0(x2) # load 0x12a40073 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f31, 0(x2) # load 0x00000001 from memory into f31
fnmadd.h f2, f30, f9, f31, dyn # perform operation
fnmadd.h f2, f30, f9, f31, rdn # perform operation
fnmadd.h f2, f30, f9, f31, rmm # perform operation
fnmadd.h f2, f30, f9, f31, rne # perform operation
fnmadd.h f2, f30, f9, f31, rtz # perform operation
fnmadd.h f2, f30, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f30, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f30, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f30, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f30, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f30, f9, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x8001)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f15, 0(x2) # load 0x0000c93a from memory into f15
la x2, scratch
li x3, 0xf59666e8 # load x3 with value 0xf59666e8
sw x3, 0(x2) # store 0xf59666e8 in memory
flh f31, 0(x2) # load 0xf59666e8 from memory into f31
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f10, 0(x2) # load 0x00008001 from memory into f10
fnmadd.h f3, f15, f31, f10, dyn # perform operation
fnmadd.h f3, f15, f31, f10, rdn # perform operation
fnmadd.h f3, f15, f31, f10, rmm # perform operation
fnmadd.h f3, f15, f31, f10, rne # perform operation
fnmadd.h f3, f15, f31, f10, rtz # perform operation
fnmadd.h f3, f15, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f15, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f15, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f15, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f15, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f15, f31, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7c00)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f17, 0(x2) # load 0x0000c93a from memory into f17
la x2, scratch
li x3, 0x8183a653 # load x3 with value 0x8183a653
sw x3, 0(x2) # store 0x8183a653 in memory
flh f26, 0(x2) # load 0x8183a653 from memory into f26
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f23, 0(x2) # load 0x00007c00 from memory into f23
fnmadd.h f13, f17, f26, f23, dyn # perform operation
fnmadd.h f13, f17, f26, f23, rdn # perform operation
fnmadd.h f13, f17, f26, f23, rmm # perform operation
fnmadd.h f13, f17, f26, f23, rne # perform operation
fnmadd.h f13, f17, f26, f23, rtz # perform operation
fnmadd.h f13, f17, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f17, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f17, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f17, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f17, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f17, f26, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xfc00)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f22, 0(x2) # load 0x0000c93a from memory into f22
la x2, scratch
li x3, 0x953f17cc # load x3 with value 0x953f17cc
sw x3, 0(x2) # store 0x953f17cc in memory
flh f6, 0(x2) # load 0x953f17cc from memory into f6
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f8, 0(x2) # load 0x0000fc00 from memory into f8
fnmadd.h f23, f22, f6, f8, dyn # perform operation
fnmadd.h f23, f22, f6, f8, rdn # perform operation
fnmadd.h f23, f22, f6, f8, rmm # perform operation
fnmadd.h f23, f22, f6, f8, rne # perform operation
fnmadd.h f23, f22, f6, f8, rtz # perform operation
fnmadd.h f23, f22, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f22, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f22, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f22, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f22, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f22, f6, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7e00)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f27, 0(x2) # load 0x0000c93a from memory into f27
la x2, scratch
li x3, 0x692de955 # load x3 with value 0x692de955
sw x3, 0(x2) # store 0x692de955 in memory
flh f5, 0(x2) # load 0x692de955 from memory into f5
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f10, 0(x2) # load 0x00007e00 from memory into f10
fnmadd.h f22, f27, f5, f10, dyn # perform operation
fnmadd.h f22, f27, f5, f10, rdn # perform operation
fnmadd.h f22, f27, f5, f10, rmm # perform operation
fnmadd.h f22, f27, f5, f10, rne # perform operation
fnmadd.h f22, f27, f5, f10, rtz # perform operation
fnmadd.h f22, f27, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f27, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f27, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f27, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f27, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f27, f5, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7fff)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f8, 0(x2) # load 0x0000c93a from memory into f8
la x2, scratch
li x3, 0x79b26a14 # load x3 with value 0x79b26a14
sw x3, 0(x2) # store 0x79b26a14 in memory
flh f6, 0(x2) # load 0x79b26a14 from memory into f6
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f31, 0(x2) # load 0x00007fff from memory into f31
fnmadd.h f25, f8, f6, f31, dyn # perform operation
fnmadd.h f25, f8, f6, f31, rdn # perform operation
fnmadd.h f25, f8, f6, f31, rmm # perform operation
fnmadd.h f25, f8, f6, f31, rne # perform operation
fnmadd.h f25, f8, f6, f31, rtz # perform operation
fnmadd.h f25, f8, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f8, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f8, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f8, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f8, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f8, f6, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xfe00)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f17, 0(x2) # load 0x0000c93a from memory into f17
la x2, scratch
li x3, 0x737a47b7 # load x3 with value 0x737a47b7
sw x3, 0(x2) # store 0x737a47b7 in memory
flh f20, 0(x2) # load 0x737a47b7 from memory into f20
la x2, scratch
li x3, 0x0000fe00 # load x3 with value 0x0000fe00
sw x3, 0(x2) # store 0x0000fe00 in memory
flh f27, 0(x2) # load 0x0000fe00 from memory into f27
fnmadd.h f22, f17, f20, f27, dyn # perform operation
fnmadd.h f22, f17, f20, f27, rdn # perform operation
fnmadd.h f22, f17, f20, f27, rmm # perform operation
fnmadd.h f22, f17, f20, f27, rne # perform operation
fnmadd.h f22, f17, f20, f27, rtz # perform operation
fnmadd.h f22, f17, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f17, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f17, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f17, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f17, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f17, f20, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7c01)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f30, 0(x2) # load 0x0000c93a from memory into f30
la x2, scratch
li x3, 0x7d8d671b # load x3 with value 0x7d8d671b
sw x3, 0(x2) # store 0x7d8d671b in memory
flh f17, 0(x2) # load 0x7d8d671b from memory into f17
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f3, 0(x2) # load 0x00007c01 from memory into f3
fnmadd.h f28, f30, f17, f3, dyn # perform operation
fnmadd.h f28, f30, f17, f3, rdn # perform operation
fnmadd.h f28, f30, f17, f3, rmm # perform operation
fnmadd.h f28, f30, f17, f3, rne # perform operation
fnmadd.h f28, f30, f17, f3, rtz # perform operation
fnmadd.h f28, f30, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f30, f17, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7dff)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
la x2, scratch
li x3, 0xeaa52601 # load x3 with value 0xeaa52601
sw x3, 0(x2) # store 0xeaa52601 in memory
flh f5, 0(x2) # load 0xeaa52601 from memory into f5
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f1, 0(x2) # load 0x00007dff from memory into f1
fnmadd.h f21, f3, f5, f1, dyn # perform operation
fnmadd.h f21, f3, f5, f1, rdn # perform operation
fnmadd.h f21, f3, f5, f1, rmm # perform operation
fnmadd.h f21, f3, f5, f1, rne # perform operation
fnmadd.h f21, f3, f5, f1, rtz # perform operation
fnmadd.h f21, f3, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f3, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f3, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f3, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f3, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f3, f5, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xfc01)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
la x2, scratch
li x3, 0x78b3c5d2 # load x3 with value 0x78b3c5d2
sw x3, 0(x2) # store 0x78b3c5d2 in memory
flh f16, 0(x2) # load 0x78b3c5d2 from memory into f16
la x2, scratch
li x3, 0x0000fc01 # load x3 with value 0x0000fc01
sw x3, 0(x2) # store 0x0000fc01 in memory
flh f7, 0(x2) # load 0x0000fc01 from memory into f7
fnmadd.h f9, f12, f16, f7, dyn # perform operation
fnmadd.h f9, f12, f16, f7, rdn # perform operation
fnmadd.h f9, f12, f16, f7, rmm # perform operation
fnmadd.h f9, f12, f16, f7, rne # perform operation
fnmadd.h f9, f12, f16, f7, rtz # perform operation
fnmadd.h f9, f12, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f12, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f12, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f12, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f12, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f12, f16, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x58b4)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f31, 0(x2) # load 0x0000c93a from memory into f31
la x2, scratch
li x3, 0xf41d0077 # load x3 with value 0xf41d0077
sw x3, 0(x2) # store 0xf41d0077 in memory
flh f30, 0(x2) # load 0xf41d0077 from memory into f30
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f1, 0(x2) # load 0x000058b4 from memory into f1
fnmadd.h f27, f31, f30, f1, dyn # perform operation
fnmadd.h f27, f31, f30, f1, rdn # perform operation
fnmadd.h f27, f31, f30, f1, rmm # perform operation
fnmadd.h f27, f31, f30, f1, rne # perform operation
fnmadd.h f27, f31, f30, f1, rtz # perform operation
fnmadd.h f27, f31, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f31, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f31, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f31, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f31, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f31, f30, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xc93a)
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f21, 0(x2) # load 0x0000c93a from memory into f21
la x2, scratch
li x3, 0x6aada51c # load x3 with value 0x6aada51c
sw x3, 0(x2) # store 0x6aada51c in memory
flh f2, 0(x2) # load 0x6aada51c from memory into f2
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f15, 0(x2) # load 0x0000c93a from memory into f15
fnmadd.h f27, f21, f2, f15, dyn # perform operation
fnmadd.h f27, f21, f2, f15, rdn # perform operation
fnmadd.h f27, f21, f2, f15, rmm # perform operation
fnmadd.h f27, f21, f2, f15, rne # perform operation
fnmadd.h f27, f21, f2, f15, rtz # perform operation
fnmadd.h f27, f21, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f21, f2, f15 # perform operation


# Testcase Random test for cp_NaNBox 
la x2, scratch
li x3, 0x55fd389f # load x3 with value 0x55fd389f
sw x3, 0(x2) # store 0x55fd389f in memory
flh f14, 0(x2) # load 0x55fd389f from memory into f14
la x2, scratch
li x3, 0xbb5294d7 # load x3 with value 0xbb5294d7
sw x3, 0(x2) # store 0xbb5294d7 in memory
flh f19, 0(x2) # load 0xbb5294d7 from memory into f19
la x2, scratch
li x3, 0x33e46bd7 # load x3 with value 0x33e46bd7
sw x3, 0(x2) # store 0x33e46bd7 in memory
flh f10, 0(x2) # load 0x33e46bd7 from memory into f10
fnmadd.h f30, f14, f19, f10 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0x0 in f21)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x35155b28 # load x3 with value 0x35155b28
sw x3, 0(x2) # store 0x35155b28 in memory
flw f16, 0(x2) # load 0x35155b28 from memory into f16
la x2, scratch
li x3, 0xff3d0b64 # load x3 with value 0xff3d0b64
sw x3, 0(x2) # store 0xff3d0b64 in memory
flw f7, 0(x2) # load 0xff3d0b64 from memory into f7
fnmadd.h f20, f21, f16, f7 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xfffe8000 in f6)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xfffe8000 # load x3 with value 0xfffe8000
sw x3, 0(x2) # store 0xfffe8000 in memory
flw f6, 0(x2) # load 0xfffe8000 from memory into f6
la x2, scratch
li x3, 0x65a35179 # load x3 with value 0x65a35179
sw x3, 0(x2) # store 0x65a35179 in memory
flw f20, 0(x2) # load 0x65a35179 from memory into f20
la x2, scratch
li x3, 0x219dc9c4 # load x3 with value 0x219dc9c4
sw x3, 0(x2) # store 0x219dc9c4 in memory
flw f11, 0(x2) # load 0x219dc9c4 from memory into f11
fnmadd.h f2, f6, f20, f11 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0x7fff3c00 in f16)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fff3c00 # load x3 with value 0x7fff3c00
sw x3, 0(x2) # store 0x7fff3c00 in memory
flw f16, 0(x2) # load 0x7fff3c00 from memory into f16
la x2, scratch
li x3, 0xa0d12b05 # load x3 with value 0xa0d12b05
sw x3, 0(x2) # store 0xa0d12b05 in memory
flw f26, 0(x2) # load 0xa0d12b05 from memory into f26
la x2, scratch
li x3, 0xd00b50d0 # load x3 with value 0xd00b50d0
sw x3, 0(x2) # store 0xd00b50d0 in memory
flw f7, 0(x2) # load 0xd00b50d0 from memory into f7
fnmadd.h f1, f16, f26, f7 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xbeefbc00 in f20)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbeefbc00 # load x3 with value 0xbeefbc00
sw x3, 0(x2) # store 0xbeefbc00 in memory
flw f20, 0(x2) # load 0xbeefbc00 from memory into f20
la x2, scratch
li x3, 0xf04af913 # load x3 with value 0xf04af913
sw x3, 0(x2) # store 0xf04af913 in memory
flw f17, 0(x2) # load 0xf04af913 from memory into f17
la x2, scratch
li x3, 0x5c5973b4 # load x3 with value 0x5c5973b4
sw x3, 0(x2) # store 0x5c5973b4 in memory
flw f9, 0(x2) # load 0x5c5973b4 from memory into f9
fnmadd.h f29, f20, f17, f9 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xfeff0400 in f12)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xfeff0400 # load x3 with value 0xfeff0400
sw x3, 0(x2) # store 0xfeff0400 in memory
flw f12, 0(x2) # load 0xfeff0400 from memory into f12
la x2, scratch
li x3, 0x2c38df1f # load x3 with value 0x2c38df1f
sw x3, 0(x2) # store 0x2c38df1f in memory
flw f14, 0(x2) # load 0x2c38df1f from memory into f14
la x2, scratch
li x3, 0xe97d9800 # load x3 with value 0xe97d9800
sw x3, 0(x2) # store 0xe97d9800 in memory
flw f10, 0(x2) # load 0xe97d9800 from memory into f10
fnmadd.h f31, f12, f14, f10 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xfff8400 in f21)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0fff8400 # load x3 with value 0x0fff8400
sw x3, 0(x2) # store 0x0fff8400 in memory
flw f21, 0(x2) # load 0x0fff8400 from memory into f21
la x2, scratch
li x3, 0x63544402 # load x3 with value 0x63544402
sw x3, 0(x2) # store 0x63544402 in memory
flw f1, 0(x2) # load 0x63544402 from memory into f1
la x2, scratch
li x3, 0x09b34cb5 # load x3 with value 0x09b34cb5
sw x3, 0(x2) # store 0x09b34cb5 in memory
flw f3, 0(x2) # load 0x09b34cb5 from memory into f3
fnmadd.h f24, f21, f1, f3 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xefff7bff in f23)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xefff7bff # load x3 with value 0xefff7bff
sw x3, 0(x2) # store 0xefff7bff in memory
flw f23, 0(x2) # load 0xefff7bff from memory into f23
la x2, scratch
li x3, 0x910ed734 # load x3 with value 0x910ed734
sw x3, 0(x2) # store 0x910ed734 in memory
flw f16, 0(x2) # load 0x910ed734 from memory into f16
la x2, scratch
li x3, 0xb16d8ffe # load x3 with value 0xb16d8ffe
sw x3, 0(x2) # store 0xb16d8ffe in memory
flw f24, 0(x2) # load 0xb16d8ffe from memory into f24
fnmadd.h f30, f23, f16, f24 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xc0defbff in f1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0defbff # load x3 with value 0xc0defbff
sw x3, 0(x2) # store 0xc0defbff in memory
flw f1, 0(x2) # load 0xc0defbff from memory into f1
la x2, scratch
li x3, 0x4af359af # load x3 with value 0x4af359af
sw x3, 0(x2) # store 0x4af359af in memory
flw f31, 0(x2) # load 0x4af359af from memory into f31
la x2, scratch
li x3, 0x9f1bbe6e # load x3 with value 0x9f1bbe6e
sw x3, 0(x2) # store 0x9f1bbe6e in memory
flw f27, 0(x2) # load 0x9f1bbe6e from memory into f27
fnmadd.h f8, f1, f31, f27 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0x4f1a7c00 in f28)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x4f1a7c00 # load x3 with value 0x4f1a7c00
sw x3, 0(x2) # store 0x4f1a7c00 in memory
flw f28, 0(x2) # load 0x4f1a7c00 from memory into f28
la x2, scratch
li x3, 0x57f71252 # load x3 with value 0x57f71252
sw x3, 0(x2) # store 0x57f71252 in memory
flw f11, 0(x2) # load 0x57f71252 from memory into f11
la x2, scratch
li x3, 0x5f3c715a # load x3 with value 0x5f3c715a
sw x3, 0(x2) # store 0x5f3c715a in memory
flw f9, 0(x2) # load 0x5f3c715a from memory into f9
fnmadd.h f30, f28, f11, f9 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xffffc00 in f27)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x0ffffc00 # load x3 with value 0x0ffffc00
sw x3, 0(x2) # store 0x0ffffc00 in memory
flw f27, 0(x2) # load 0x0ffffc00 from memory into f27
la x2, scratch
li x3, 0xaa74c433 # load x3 with value 0xaa74c433
sw x3, 0(x2) # store 0xaa74c433 in memory
flw f22, 0(x2) # load 0xaa74c433 from memory into f22
la x2, scratch
li x3, 0x9c009210 # load x3 with value 0x9c009210
sw x3, 0(x2) # store 0x9c009210 in memory
flw f23, 0(x2) # load 0x9c009210 from memory into f23
fnmadd.h f14, f27, f22, f23 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xffef7e00 in f10)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffef7e00 # load x3 with value 0xffef7e00
sw x3, 0(x2) # store 0xffef7e00 in memory
flw f10, 0(x2) # load 0xffef7e00 from memory into f10
la x2, scratch
li x3, 0x579a7c1d # load x3 with value 0x579a7c1d
sw x3, 0(x2) # store 0x579a7c1d in memory
flw f27, 0(x2) # load 0x579a7c1d from memory into f27
la x2, scratch
li x3, 0xbbcf653f # load x3 with value 0xbbcf653f
sw x3, 0(x2) # store 0xbbcf653f in memory
flw f14, 0(x2) # load 0xbbcf653f from memory into f14
fnmadd.h f26, f10, f27, f14 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xfeef7fff in f17)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xfeef7fff # load x3 with value 0xfeef7fff
sw x3, 0(x2) # store 0xfeef7fff in memory
flw f17, 0(x2) # load 0xfeef7fff from memory into f17
la x2, scratch
li x3, 0xd6c1f26b # load x3 with value 0xd6c1f26b
sw x3, 0(x2) # store 0xd6c1f26b in memory
flw f22, 0(x2) # load 0xd6c1f26b from memory into f22
la x2, scratch
li x3, 0xb0f02ec9 # load x3 with value 0xb0f02ec9
sw x3, 0(x2) # store 0xb0f02ec9 in memory
flw f12, 0(x2) # load 0xb0f02ec9 from memory into f12
fnmadd.h f15, f17, f22, f12 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0xa1b27c01 in f7)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa1b27c01 # load x3 with value 0xa1b27c01
sw x3, 0(x2) # store 0xa1b27c01 in memory
flw f7, 0(x2) # load 0xa1b27c01 from memory into f7
la x2, scratch
li x3, 0x5485dd77 # load x3 with value 0x5485dd77
sw x3, 0(x2) # store 0x5485dd77 in memory
flw f25, 0(x2) # load 0x5485dd77 from memory into f25
la x2, scratch
li x3, 0x5b1fcb14 # load x3 with value 0x5b1fcb14
sw x3, 0(x2) # store 0x5b1fcb14 in memory
flw f1, 0(x2) # load 0x5b1fcb14 from memory into f1
fnmadd.h f18, f7, f25, f1 # perform operation

# Testcase Improper NaNBoxed argument test (Value 0x4fd77dff in f19)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x4fd77dff # load x3 with value 0x4fd77dff
sw x3, 0(x2) # store 0x4fd77dff in memory
flw f19, 0(x2) # load 0x4fd77dff from memory into f19
la x2, scratch
li x3, 0xb95f6d63 # load x3 with value 0xb95f6d63
sw x3, 0(x2) # store 0xb95f6d63 in memory
flw f10, 0(x2) # load 0xb95f6d63 from memory into f10
la x2, scratch
li x3, 0x41c78c8b # load x3 with value 0x41c78c8b
sw x3, 0(x2) # store 0x41c78c8b in memory
flw f21, 0(x2) # load 0x41c78c8b from memory into f21
fnmadd.h f17, f19, f10, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
la x2, scratch
li x3, 0x7ec173c7 # load x3 with value 0x7ec173c7
sw x3, 0(x2) # store 0x7ec173c7 in memory
flw f17, 0(x2) # load 0x7ec173c7 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0x2547eac4 # load x3 with value 0x2547eac4
sw x3, 0(x2) # store 0x2547eac4 in memory
flw f16, 0(x2) # load 0x2547eac4 from memory into f16
fnmadd.h f25, f17, f18, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfffe8000)
la x2, scratch
li x3, 0xc43fce85 # load x3 with value 0xc43fce85
sw x3, 0(x2) # store 0xc43fce85 in memory
flw f3, 0(x2) # load 0xc43fce85 from memory into f3
la x2, scratch
li x3, 0xfffe8000 # load x3 with value 0xfffe8000
sw x3, 0(x2) # store 0xfffe8000 in memory
flw f15, 0(x2) # load 0xfffe8000 from memory into f15
la x2, scratch
li x3, 0xc7f21988 # load x3 with value 0xc7f21988
sw x3, 0(x2) # store 0xc7f21988 in memory
flw f30, 0(x2) # load 0xc7f21988 from memory into f30
fnmadd.h f31, f3, f15, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fff3c00)
la x2, scratch
li x3, 0x75354a43 # load x3 with value 0x75354a43
sw x3, 0(x2) # store 0x75354a43 in memory
flw f30, 0(x2) # load 0x75354a43 from memory into f30
la x2, scratch
li x3, 0x7fff3c00 # load x3 with value 0x7fff3c00
sw x3, 0(x2) # store 0x7fff3c00 in memory
flw f17, 0(x2) # load 0x7fff3c00 from memory into f17
la x2, scratch
li x3, 0x3a64b2dc # load x3 with value 0x3a64b2dc
sw x3, 0(x2) # store 0x3a64b2dc in memory
flw f19, 0(x2) # load 0x3a64b2dc from memory into f19
fnmadd.h f12, f30, f17, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbeefbc00)
la x2, scratch
li x3, 0xbff8feb3 # load x3 with value 0xbff8feb3
sw x3, 0(x2) # store 0xbff8feb3 in memory
flw f19, 0(x2) # load 0xbff8feb3 from memory into f19
la x2, scratch
li x3, 0xbeefbc00 # load x3 with value 0xbeefbc00
sw x3, 0(x2) # store 0xbeefbc00 in memory
flw f28, 0(x2) # load 0xbeefbc00 from memory into f28
la x2, scratch
li x3, 0xebfffded # load x3 with value 0xebfffded
sw x3, 0(x2) # store 0xebfffded in memory
flw f2, 0(x2) # load 0xebfffded from memory into f2
fnmadd.h f5, f19, f28, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfeff0400)
la x2, scratch
li x3, 0x8eae2a99 # load x3 with value 0x8eae2a99
sw x3, 0(x2) # store 0x8eae2a99 in memory
flw f17, 0(x2) # load 0x8eae2a99 from memory into f17
la x2, scratch
li x3, 0xfeff0400 # load x3 with value 0xfeff0400
sw x3, 0(x2) # store 0xfeff0400 in memory
flw f12, 0(x2) # load 0xfeff0400 from memory into f12
la x2, scratch
li x3, 0x5abf47dd # load x3 with value 0x5abf47dd
sw x3, 0(x2) # store 0x5abf47dd in memory
flw f25, 0(x2) # load 0x5abf47dd from memory into f25
fnmadd.h f14, f17, f12, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfff8400)
la x2, scratch
li x3, 0xc0906735 # load x3 with value 0xc0906735
sw x3, 0(x2) # store 0xc0906735 in memory
flw f21, 0(x2) # load 0xc0906735 from memory into f21
la x2, scratch
li x3, 0x0fff8400 # load x3 with value 0x0fff8400
sw x3, 0(x2) # store 0x0fff8400 in memory
flw f18, 0(x2) # load 0x0fff8400 from memory into f18
la x2, scratch
li x3, 0x9c194804 # load x3 with value 0x9c194804
sw x3, 0(x2) # store 0x9c194804 in memory
flw f3, 0(x2) # load 0x9c194804 from memory into f3
fnmadd.h f22, f21, f18, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xefff7bff)
la x2, scratch
li x3, 0xe3393812 # load x3 with value 0xe3393812
sw x3, 0(x2) # store 0xe3393812 in memory
flw f26, 0(x2) # load 0xe3393812 from memory into f26
la x2, scratch
li x3, 0xefff7bff # load x3 with value 0xefff7bff
sw x3, 0(x2) # store 0xefff7bff in memory
flw f18, 0(x2) # load 0xefff7bff from memory into f18
la x2, scratch
li x3, 0xc8714ebb # load x3 with value 0xc8714ebb
sw x3, 0(x2) # store 0xc8714ebb in memory
flw f1, 0(x2) # load 0xc8714ebb from memory into f1
fnmadd.h f17, f26, f18, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc0defbff)
la x2, scratch
li x3, 0xf0b78851 # load x3 with value 0xf0b78851
sw x3, 0(x2) # store 0xf0b78851 in memory
flw f13, 0(x2) # load 0xf0b78851 from memory into f13
la x2, scratch
li x3, 0xc0defbff # load x3 with value 0xc0defbff
sw x3, 0(x2) # store 0xc0defbff in memory
flw f9, 0(x2) # load 0xc0defbff from memory into f9
la x2, scratch
li x3, 0xd43ddce3 # load x3 with value 0xd43ddce3
sw x3, 0(x2) # store 0xd43ddce3 in memory
flw f21, 0(x2) # load 0xd43ddce3 from memory into f21
fnmadd.h f30, f13, f9, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x4f1a7c00)
la x2, scratch
li x3, 0xf417d39c # load x3 with value 0xf417d39c
sw x3, 0(x2) # store 0xf417d39c in memory
flw f11, 0(x2) # load 0xf417d39c from memory into f11
la x2, scratch
li x3, 0x4f1a7c00 # load x3 with value 0x4f1a7c00
sw x3, 0(x2) # store 0x4f1a7c00 in memory
flw f25, 0(x2) # load 0x4f1a7c00 from memory into f25
la x2, scratch
li x3, 0x9c356ce2 # load x3 with value 0x9c356ce2
sw x3, 0(x2) # store 0x9c356ce2 in memory
flw f5, 0(x2) # load 0x9c356ce2 from memory into f5
fnmadd.h f20, f11, f25, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffffc00)
la x2, scratch
li x3, 0x52ba34ea # load x3 with value 0x52ba34ea
sw x3, 0(x2) # store 0x52ba34ea in memory
flw f29, 0(x2) # load 0x52ba34ea from memory into f29
la x2, scratch
li x3, 0x0ffffc00 # load x3 with value 0x0ffffc00
sw x3, 0(x2) # store 0x0ffffc00 in memory
flw f15, 0(x2) # load 0x0ffffc00 from memory into f15
la x2, scratch
li x3, 0xacc2e5a7 # load x3 with value 0xacc2e5a7
sw x3, 0(x2) # store 0xacc2e5a7 in memory
flw f30, 0(x2) # load 0xacc2e5a7 from memory into f30
fnmadd.h f2, f29, f15, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffef7e00)
la x2, scratch
li x3, 0x1f967f5f # load x3 with value 0x1f967f5f
sw x3, 0(x2) # store 0x1f967f5f in memory
flw f2, 0(x2) # load 0x1f967f5f from memory into f2
la x2, scratch
li x3, 0xffef7e00 # load x3 with value 0xffef7e00
sw x3, 0(x2) # store 0xffef7e00 in memory
flw f6, 0(x2) # load 0xffef7e00 from memory into f6
la x2, scratch
li x3, 0x7efbc27f # load x3 with value 0x7efbc27f
sw x3, 0(x2) # store 0x7efbc27f in memory
flw f15, 0(x2) # load 0x7efbc27f from memory into f15
fnmadd.h f18, f2, f6, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfeef7fff)
la x2, scratch
li x3, 0xd1140cd5 # load x3 with value 0xd1140cd5
sw x3, 0(x2) # store 0xd1140cd5 in memory
flw f17, 0(x2) # load 0xd1140cd5 from memory into f17
la x2, scratch
li x3, 0xfeef7fff # load x3 with value 0xfeef7fff
sw x3, 0(x2) # store 0xfeef7fff in memory
flw f18, 0(x2) # load 0xfeef7fff from memory into f18
la x2, scratch
li x3, 0xc545bc99 # load x3 with value 0xc545bc99
sw x3, 0(x2) # store 0xc545bc99 in memory
flw f27, 0(x2) # load 0xc545bc99 from memory into f27
fnmadd.h f31, f17, f18, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xa1b27c01)
la x2, scratch
li x3, 0x5388bee1 # load x3 with value 0x5388bee1
sw x3, 0(x2) # store 0x5388bee1 in memory
flw f30, 0(x2) # load 0x5388bee1 from memory into f30
la x2, scratch
li x3, 0xa1b27c01 # load x3 with value 0xa1b27c01
sw x3, 0(x2) # store 0xa1b27c01 in memory
flw f13, 0(x2) # load 0xa1b27c01 from memory into f13
la x2, scratch
li x3, 0xcbbc8462 # load x3 with value 0xcbbc8462
sw x3, 0(x2) # store 0xcbbc8462 in memory
flw f18, 0(x2) # load 0xcbbc8462 from memory into f18
fnmadd.h f21, f30, f13, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x4fd77dff)
la x2, scratch
li x3, 0xfa1d4f35 # load x3 with value 0xfa1d4f35
sw x3, 0(x2) # store 0xfa1d4f35 in memory
flw f3, 0(x2) # load 0xfa1d4f35 from memory into f3
la x2, scratch
li x3, 0x4fd77dff # load x3 with value 0x4fd77dff
sw x3, 0(x2) # store 0x4fd77dff in memory
flw f27, 0(x2) # load 0x4fd77dff from memory into f27
la x2, scratch
li x3, 0x21a5e94b # load x3 with value 0x21a5e94b
sw x3, 0(x2) # store 0x21a5e94b in memory
flw f13, 0(x2) # load 0x21a5e94b from memory into f13
fnmadd.h f17, f3, f27, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
la x2, scratch
li x3, 0x2e105fa3 # load x3 with value 0x2e105fa3
sw x3, 0(x2) # store 0x2e105fa3 in memory
flw f20, 0(x2) # load 0x2e105fa3 from memory into f20
la x2, scratch
li x3, 0x15af0f58 # load x3 with value 0x15af0f58
sw x3, 0(x2) # store 0x15af0f58 in memory
flw f19, 0(x2) # load 0x15af0f58 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
fnmadd.h f26, f20, f19, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfffe8000)
la x2, scratch
li x3, 0xedc38d9c # load x3 with value 0xedc38d9c
sw x3, 0(x2) # store 0xedc38d9c in memory
flw f17, 0(x2) # load 0xedc38d9c from memory into f17
la x2, scratch
li x3, 0x4402c113 # load x3 with value 0x4402c113
sw x3, 0(x2) # store 0x4402c113 in memory
flw f14, 0(x2) # load 0x4402c113 from memory into f14
la x2, scratch
li x3, 0xfffe8000 # load x3 with value 0xfffe8000
sw x3, 0(x2) # store 0xfffe8000 in memory
flw f25, 0(x2) # load 0xfffe8000 from memory into f25
fnmadd.h f3, f17, f14, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fff3c00)
la x2, scratch
li x3, 0x74e8c980 # load x3 with value 0x74e8c980
sw x3, 0(x2) # store 0x74e8c980 in memory
flw f18, 0(x2) # load 0x74e8c980 from memory into f18
la x2, scratch
li x3, 0x86f4875c # load x3 with value 0x86f4875c
sw x3, 0(x2) # store 0x86f4875c in memory
flw f14, 0(x2) # load 0x86f4875c from memory into f14
la x2, scratch
li x3, 0x7fff3c00 # load x3 with value 0x7fff3c00
sw x3, 0(x2) # store 0x7fff3c00 in memory
flw f10, 0(x2) # load 0x7fff3c00 from memory into f10
fnmadd.h f24, f18, f14, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbeefbc00)
la x2, scratch
li x3, 0x5022bae7 # load x3 with value 0x5022bae7
sw x3, 0(x2) # store 0x5022bae7 in memory
flw f2, 0(x2) # load 0x5022bae7 from memory into f2
la x2, scratch
li x3, 0x6d216098 # load x3 with value 0x6d216098
sw x3, 0(x2) # store 0x6d216098 in memory
flw f7, 0(x2) # load 0x6d216098 from memory into f7
la x2, scratch
li x3, 0xbeefbc00 # load x3 with value 0xbeefbc00
sw x3, 0(x2) # store 0xbeefbc00 in memory
flw f31, 0(x2) # load 0xbeefbc00 from memory into f31
fnmadd.h f6, f2, f7, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfeff0400)
la x2, scratch
li x3, 0x97754104 # load x3 with value 0x97754104
sw x3, 0(x2) # store 0x97754104 in memory
flw f24, 0(x2) # load 0x97754104 from memory into f24
la x2, scratch
li x3, 0xdeb194bd # load x3 with value 0xdeb194bd
sw x3, 0(x2) # store 0xdeb194bd in memory
flw f20, 0(x2) # load 0xdeb194bd from memory into f20
la x2, scratch
li x3, 0xfeff0400 # load x3 with value 0xfeff0400
sw x3, 0(x2) # store 0xfeff0400 in memory
flw f18, 0(x2) # load 0xfeff0400 from memory into f18
fnmadd.h f14, f24, f20, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfff8400)
la x2, scratch
li x3, 0x6d41c837 # load x3 with value 0x6d41c837
sw x3, 0(x2) # store 0x6d41c837 in memory
flw f8, 0(x2) # load 0x6d41c837 from memory into f8
la x2, scratch
li x3, 0x14b61084 # load x3 with value 0x14b61084
sw x3, 0(x2) # store 0x14b61084 in memory
flw f27, 0(x2) # load 0x14b61084 from memory into f27
la x2, scratch
li x3, 0x0fff8400 # load x3 with value 0x0fff8400
sw x3, 0(x2) # store 0x0fff8400 in memory
flw f5, 0(x2) # load 0x0fff8400 from memory into f5
fnmadd.h f3, f8, f27, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xefff7bff)
la x2, scratch
li x3, 0x2902fbba # load x3 with value 0x2902fbba
sw x3, 0(x2) # store 0x2902fbba in memory
flw f5, 0(x2) # load 0x2902fbba from memory into f5
la x2, scratch
li x3, 0x1bed6187 # load x3 with value 0x1bed6187
sw x3, 0(x2) # store 0x1bed6187 in memory
flw f8, 0(x2) # load 0x1bed6187 from memory into f8
la x2, scratch
li x3, 0xefff7bff # load x3 with value 0xefff7bff
sw x3, 0(x2) # store 0xefff7bff in memory
flw f13, 0(x2) # load 0xefff7bff from memory into f13
fnmadd.h f20, f5, f8, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc0defbff)
la x2, scratch
li x3, 0xa6a08fc7 # load x3 with value 0xa6a08fc7
sw x3, 0(x2) # store 0xa6a08fc7 in memory
flw f31, 0(x2) # load 0xa6a08fc7 from memory into f31
la x2, scratch
li x3, 0x73e75f74 # load x3 with value 0x73e75f74
sw x3, 0(x2) # store 0x73e75f74 in memory
flw f18, 0(x2) # load 0x73e75f74 from memory into f18
la x2, scratch
li x3, 0xc0defbff # load x3 with value 0xc0defbff
sw x3, 0(x2) # store 0xc0defbff in memory
flw f20, 0(x2) # load 0xc0defbff from memory into f20
fnmadd.h f7, f31, f18, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x4f1a7c00)
la x2, scratch
li x3, 0xf4fa3abe # load x3 with value 0xf4fa3abe
sw x3, 0(x2) # store 0xf4fa3abe in memory
flw f27, 0(x2) # load 0xf4fa3abe from memory into f27
la x2, scratch
li x3, 0x26757cef # load x3 with value 0x26757cef
sw x3, 0(x2) # store 0x26757cef in memory
flw f25, 0(x2) # load 0x26757cef from memory into f25
la x2, scratch
li x3, 0x4f1a7c00 # load x3 with value 0x4f1a7c00
sw x3, 0(x2) # store 0x4f1a7c00 in memory
flw f17, 0(x2) # load 0x4f1a7c00 from memory into f17
fnmadd.h f28, f27, f25, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffffc00)
la x2, scratch
li x3, 0xbe00d9c2 # load x3 with value 0xbe00d9c2
sw x3, 0(x2) # store 0xbe00d9c2 in memory
flw f10, 0(x2) # load 0xbe00d9c2 from memory into f10
la x2, scratch
li x3, 0x7b4d7230 # load x3 with value 0x7b4d7230
sw x3, 0(x2) # store 0x7b4d7230 in memory
flw f31, 0(x2) # load 0x7b4d7230 from memory into f31
la x2, scratch
li x3, 0x0ffffc00 # load x3 with value 0x0ffffc00
sw x3, 0(x2) # store 0x0ffffc00 in memory
flw f8, 0(x2) # load 0x0ffffc00 from memory into f8
fnmadd.h f24, f10, f31, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffef7e00)
la x2, scratch
li x3, 0x1cafa775 # load x3 with value 0x1cafa775
sw x3, 0(x2) # store 0x1cafa775 in memory
flw f18, 0(x2) # load 0x1cafa775 from memory into f18
la x2, scratch
li x3, 0x5976bb84 # load x3 with value 0x5976bb84
sw x3, 0(x2) # store 0x5976bb84 in memory
flw f13, 0(x2) # load 0x5976bb84 from memory into f13
la x2, scratch
li x3, 0xffef7e00 # load x3 with value 0xffef7e00
sw x3, 0(x2) # store 0xffef7e00 in memory
flw f31, 0(x2) # load 0xffef7e00 from memory into f31
fnmadd.h f14, f18, f13, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfeef7fff)
la x2, scratch
li x3, 0x770931e6 # load x3 with value 0x770931e6
sw x3, 0(x2) # store 0x770931e6 in memory
flw f21, 0(x2) # load 0x770931e6 from memory into f21
la x2, scratch
li x3, 0x9481750f # load x3 with value 0x9481750f
sw x3, 0(x2) # store 0x9481750f in memory
flw f29, 0(x2) # load 0x9481750f from memory into f29
la x2, scratch
li x3, 0xfeef7fff # load x3 with value 0xfeef7fff
sw x3, 0(x2) # store 0xfeef7fff in memory
flw f10, 0(x2) # load 0xfeef7fff from memory into f10
fnmadd.h f16, f21, f29, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xa1b27c01)
la x2, scratch
li x3, 0x4626e81a # load x3 with value 0x4626e81a
sw x3, 0(x2) # store 0x4626e81a in memory
flw f14, 0(x2) # load 0x4626e81a from memory into f14
la x2, scratch
li x3, 0x522c6db0 # load x3 with value 0x522c6db0
sw x3, 0(x2) # store 0x522c6db0 in memory
flw f22, 0(x2) # load 0x522c6db0 from memory into f22
la x2, scratch
li x3, 0xa1b27c01 # load x3 with value 0xa1b27c01
sw x3, 0(x2) # store 0xa1b27c01 in memory
flw f25, 0(x2) # load 0xa1b27c01 from memory into f25
fnmadd.h f15, f14, f22, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x4fd77dff)
la x2, scratch
li x3, 0x55a73693 # load x3 with value 0x55a73693
sw x3, 0(x2) # store 0x55a73693 in memory
flw f2, 0(x2) # load 0x55a73693 from memory into f2
la x2, scratch
li x3, 0xbf0a384b # load x3 with value 0xbf0a384b
sw x3, 0(x2) # store 0xbf0a384b in memory
flw f6, 0(x2) # load 0xbf0a384b from memory into f6
la x2, scratch
li x3, 0x4fd77dff # load x3 with value 0x4fd77dff
sw x3, 0(x2) # store 0x4fd77dff in memory
flw f30, 0(x2) # load 0x4fd77dff from memory into f30
fnmadd.h f21, f2, f6, f30 # perform operation

.EQU SIGSIZE,0


 # testgen_footer.S


write_tohost:
    la t1, tohost
    li t0, 1
    sw t0, 0(t1)
    sw zero, 4(t1)

self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 136

.data 

.section .tohost 
tohost: # write to HTIF
    .dword 0
fromhost:
    .dword 0

.align 4
begin_signature:
    .fill SIGSIZE*8/__riscv_xlen,__riscv_xlen/8,0xdeadbeef
end_signature:

.end
