///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/rv32/D//WALLY-COV-fnmsub.d.S
// David_Harris@hmc.edu
// Created 2025-01-24 19:54:21.992581
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
li x0, 0xbbfd4f63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4005059c # load x3 with 32 MSBs 0x000000004005059c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004005059c
sw x3, 0(x2) # store x3 (0x4005059c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x000000004005059c from memory into f0
li x3, 0xe906c808 # load x3 with 32 MSBs 0x00000000e906c808
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e906c808
sw x3, 0(x2) # store x3 (0xe906c808) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000e906c808 from memory into f27
li x3, 0xfbcbc05c # load x3 with 32 MSBs 0x00000000fbcbc05c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fbcbc05c
sw x3, 0(x2) # store x3 (0xfbcbc05c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000fbcbc05c from memory into f24
fnmsub.d f0, f0, f27, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
li x1, 0x2bdc9cb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x711ff87f # load x3 with 32 MSBs 0x00000000711ff87f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000711ff87f
sw x3, 0(x2) # store x3 (0x711ff87f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000711ff87f from memory into f1
li x3, 0x8065f2e9 # load x3 with 32 MSBs 0x000000008065f2e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008065f2e9
sw x3, 0(x2) # store x3 (0x8065f2e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000008065f2e9 from memory into f28
li x3, 0x6970115d # load x3 with 32 MSBs 0x000000006970115d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006970115d
sw x3, 0(x2) # store x3 (0x6970115d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000006970115d from memory into f26
fnmsub.d f1, f1, f28, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
li x2, 0x482b9dc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0a0e1b76 # load x3 with 32 MSBs 0x000000000a0e1b76
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000a0e1b76
sw x3, 0(x2) # store x3 (0x0a0e1b76) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000000a0e1b76 from memory into f2
li x3, 0xd25b77d8 # load x3 with 32 MSBs 0x00000000d25b77d8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d25b77d8
sw x3, 0(x2) # store x3 (0xd25b77d8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000d25b77d8 from memory into f25
li x3, 0x57eddca5 # load x3 with 32 MSBs 0x0000000057eddca5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000057eddca5
sw x3, 0(x2) # store x3 (0x57eddca5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000057eddca5 from memory into f16
fnmsub.d f2, f2, f25, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
li x3, 0x4940eb24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xde10eff9 # load x3 with 32 MSBs 0x00000000de10eff9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000de10eff9
sw x3, 0(x2) # store x3 (0xde10eff9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000de10eff9 from memory into f3
li x3, 0x5f527890 # load x3 with 32 MSBs 0x000000005f527890
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005f527890
sw x3, 0(x2) # store x3 (0x5f527890) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000005f527890 from memory into f18
li x3, 0x4e7db29c # load x3 with 32 MSBs 0x000000004e7db29c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004e7db29c
sw x3, 0(x2) # store x3 (0x4e7db29c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000004e7db29c from memory into f9
fnmsub.d f3, f3, f18, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
li x4, 0x3b61f149 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd91a0c21 # load x3 with 32 MSBs 0x00000000d91a0c21
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d91a0c21
sw x3, 0(x2) # store x3 (0xd91a0c21) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000d91a0c21 from memory into f4
li x3, 0x4012485d # load x3 with 32 MSBs 0x000000004012485d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004012485d
sw x3, 0(x2) # store x3 (0x4012485d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000004012485d from memory into f11
li x3, 0xfeb485c9 # load x3 with 32 MSBs 0x00000000feb485c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000feb485c9
sw x3, 0(x2) # store x3 (0xfeb485c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000feb485c9 from memory into f15
fnmsub.d f4, f4, f11, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
li x5, 0x162b8d28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x41c8c334 # load x3 with 32 MSBs 0x0000000041c8c334
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000041c8c334
sw x3, 0(x2) # store x3 (0x41c8c334) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000041c8c334 from memory into f5
li x3, 0xe0d682ec # load x3 with 32 MSBs 0x00000000e0d682ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e0d682ec
sw x3, 0(x2) # store x3 (0xe0d682ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000e0d682ec from memory into f24
li x3, 0xe59bed94 # load x3 with 32 MSBs 0x00000000e59bed94
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e59bed94
sw x3, 0(x2) # store x3 (0xe59bed94) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000e59bed94 from memory into f29
fnmsub.d f5, f5, f24, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
li x6, 0xeb196454 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcda934f6 # load x3 with 32 MSBs 0x00000000cda934f6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cda934f6
sw x3, 0(x2) # store x3 (0xcda934f6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000cda934f6 from memory into f6
li x3, 0x493c6a27 # load x3 with 32 MSBs 0x00000000493c6a27
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000493c6a27
sw x3, 0(x2) # store x3 (0x493c6a27) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000493c6a27 from memory into f9
li x3, 0xc9651a4c # load x3 with 32 MSBs 0x00000000c9651a4c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c9651a4c
sw x3, 0(x2) # store x3 (0xc9651a4c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000c9651a4c from memory into f10
fnmsub.d f6, f6, f9, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
li x7, 0x5074e104 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf6b236ab # load x3 with 32 MSBs 0x00000000f6b236ab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f6b236ab
sw x3, 0(x2) # store x3 (0xf6b236ab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000f6b236ab from memory into f7
li x3, 0xa5f9865c # load x3 with 32 MSBs 0x00000000a5f9865c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a5f9865c
sw x3, 0(x2) # store x3 (0xa5f9865c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000a5f9865c from memory into f26
li x3, 0x70ef5da0 # load x3 with 32 MSBs 0x0000000070ef5da0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000070ef5da0
sw x3, 0(x2) # store x3 (0x70ef5da0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000070ef5da0 from memory into f2
fnmsub.d f7, f7, f26, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
li x8, 0xf239a701 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f0fc594 # load x3 with 32 MSBs 0x000000003f0fc594
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003f0fc594
sw x3, 0(x2) # store x3 (0x3f0fc594) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000003f0fc594 from memory into f8
li x3, 0x3ac06eb6 # load x3 with 32 MSBs 0x000000003ac06eb6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003ac06eb6
sw x3, 0(x2) # store x3 (0x3ac06eb6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000003ac06eb6 from memory into f7
li x3, 0xffa18876 # load x3 with 32 MSBs 0x00000000ffa18876
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ffa18876
sw x3, 0(x2) # store x3 (0xffa18876) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000ffa18876 from memory into f2
fnmsub.d f8, f8, f7, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
li x9, 0x24f6b2b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x339b1683 # load x3 with 32 MSBs 0x00000000339b1683
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000339b1683
sw x3, 0(x2) # store x3 (0x339b1683) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000339b1683 from memory into f9
li x3, 0x3e9b1611 # load x3 with 32 MSBs 0x000000003e9b1611
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e9b1611
sw x3, 0(x2) # store x3 (0x3e9b1611) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000003e9b1611 from memory into f15
li x3, 0xaf3bef22 # load x3 with 32 MSBs 0x00000000af3bef22
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af3bef22
sw x3, 0(x2) # store x3 (0xaf3bef22) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000af3bef22 from memory into f10
fnmsub.d f9, f9, f15, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
li x10, 0x51efe042 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4be19d0c # load x3 with 32 MSBs 0x000000004be19d0c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004be19d0c
sw x3, 0(x2) # store x3 (0x4be19d0c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000004be19d0c from memory into f10
li x3, 0x798d3de2 # load x3 with 32 MSBs 0x00000000798d3de2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000798d3de2
sw x3, 0(x2) # store x3 (0x798d3de2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000798d3de2 from memory into f20
li x3, 0x4cccf605 # load x3 with 32 MSBs 0x000000004cccf605
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004cccf605
sw x3, 0(x2) # store x3 (0x4cccf605) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000004cccf605 from memory into f13
fnmsub.d f10, f10, f20, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
li x11, 0xbd9e6720 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9cc9c307 # load x3 with 32 MSBs 0x000000009cc9c307
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009cc9c307
sw x3, 0(x2) # store x3 (0x9cc9c307) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000009cc9c307 from memory into f11
li x3, 0xf0873d36 # load x3 with 32 MSBs 0x00000000f0873d36
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f0873d36
sw x3, 0(x2) # store x3 (0xf0873d36) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000f0873d36 from memory into f26
li x3, 0x729f2b9f # load x3 with 32 MSBs 0x00000000729f2b9f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000729f2b9f
sw x3, 0(x2) # store x3 (0x729f2b9f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000729f2b9f from memory into f31
fnmsub.d f11, f11, f26, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
li x12, 0xf0e3bcb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f9b3504 # load x3 with 32 MSBs 0x000000007f9b3504
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f9b3504
sw x3, 0(x2) # store x3 (0x7f9b3504) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000007f9b3504 from memory into f12
li x3, 0x14e1015c # load x3 with 32 MSBs 0x0000000014e1015c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014e1015c
sw x3, 0(x2) # store x3 (0x14e1015c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000014e1015c from memory into f4
li x3, 0x134d4910 # load x3 with 32 MSBs 0x00000000134d4910
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000134d4910
sw x3, 0(x2) # store x3 (0x134d4910) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000134d4910 from memory into f15
fnmsub.d f12, f12, f4, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
li x13, 0x94c2019f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc9fc207c # load x3 with 32 MSBs 0x00000000c9fc207c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c9fc207c
sw x3, 0(x2) # store x3 (0xc9fc207c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000c9fc207c from memory into f13
li x3, 0x5b7bf192 # load x3 with 32 MSBs 0x000000005b7bf192
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005b7bf192
sw x3, 0(x2) # store x3 (0x5b7bf192) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000005b7bf192 from memory into f17
li x3, 0x54eb5542 # load x3 with 32 MSBs 0x0000000054eb5542
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000054eb5542
sw x3, 0(x2) # store x3 (0x54eb5542) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000054eb5542 from memory into f18
fnmsub.d f13, f13, f17, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
li x14, 0x22e2d10d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa95d57ee # load x3 with 32 MSBs 0x00000000a95d57ee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a95d57ee
sw x3, 0(x2) # store x3 (0xa95d57ee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000a95d57ee from memory into f14
li x3, 0xe8701ebc # load x3 with 32 MSBs 0x00000000e8701ebc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8701ebc
sw x3, 0(x2) # store x3 (0xe8701ebc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000e8701ebc from memory into f5
li x3, 0x9ee4f8f2 # load x3 with 32 MSBs 0x000000009ee4f8f2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ee4f8f2
sw x3, 0(x2) # store x3 (0x9ee4f8f2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000009ee4f8f2 from memory into f7
fnmsub.d f14, f14, f5, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
li x15, 0xb6cdce85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd24256f0 # load x3 with 32 MSBs 0x00000000d24256f0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d24256f0
sw x3, 0(x2) # store x3 (0xd24256f0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000d24256f0 from memory into f15
li x3, 0x8abc60fa # load x3 with 32 MSBs 0x000000008abc60fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008abc60fa
sw x3, 0(x2) # store x3 (0x8abc60fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000008abc60fa from memory into f3
li x3, 0xb6c5b32d # load x3 with 32 MSBs 0x00000000b6c5b32d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b6c5b32d
sw x3, 0(x2) # store x3 (0xb6c5b32d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000b6c5b32d from memory into f31
fnmsub.d f15, f15, f3, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
li x16, 0x42a9800e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8f6d7352 # load x3 with 32 MSBs 0x000000008f6d7352
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f6d7352
sw x3, 0(x2) # store x3 (0x8f6d7352) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000008f6d7352 from memory into f16
li x3, 0xc6eeee26 # load x3 with 32 MSBs 0x00000000c6eeee26
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c6eeee26
sw x3, 0(x2) # store x3 (0xc6eeee26) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000c6eeee26 from memory into f6
li x3, 0xb0c36232 # load x3 with 32 MSBs 0x00000000b0c36232
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b0c36232
sw x3, 0(x2) # store x3 (0xb0c36232) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000b0c36232 from memory into f2
fnmsub.d f16, f16, f6, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
li x17, 0x551d1d68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfc678310 # load x3 with 32 MSBs 0x00000000fc678310
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fc678310
sw x3, 0(x2) # store x3 (0xfc678310) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000fc678310 from memory into f17
li x3, 0x18609272 # load x3 with 32 MSBs 0x0000000018609272
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018609272
sw x3, 0(x2) # store x3 (0x18609272) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000018609272 from memory into f18
li x3, 0xe7d552a8 # load x3 with 32 MSBs 0x00000000e7d552a8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e7d552a8
sw x3, 0(x2) # store x3 (0xe7d552a8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000e7d552a8 from memory into f2
fnmsub.d f17, f17, f18, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
li x18, 0x6c98f389 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3e129375 # load x3 with 32 MSBs 0x000000003e129375
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e129375
sw x3, 0(x2) # store x3 (0x3e129375) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000003e129375 from memory into f18
li x3, 0xd6aa1f51 # load x3 with 32 MSBs 0x00000000d6aa1f51
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d6aa1f51
sw x3, 0(x2) # store x3 (0xd6aa1f51) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000d6aa1f51 from memory into f3
li x3, 0x6302e712 # load x3 with 32 MSBs 0x000000006302e712
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006302e712
sw x3, 0(x2) # store x3 (0x6302e712) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006302e712 from memory into f18
fnmsub.d f18, f18, f3, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
li x19, 0x9217b755 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x96a7bd03 # load x3 with 32 MSBs 0x0000000096a7bd03
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000096a7bd03
sw x3, 0(x2) # store x3 (0x96a7bd03) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000096a7bd03 from memory into f19
li x3, 0x5396afb9 # load x3 with 32 MSBs 0x000000005396afb9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005396afb9
sw x3, 0(x2) # store x3 (0x5396afb9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000005396afb9 from memory into f22
li x3, 0x9d9b727a # load x3 with 32 MSBs 0x000000009d9b727a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d9b727a
sw x3, 0(x2) # store x3 (0x9d9b727a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000009d9b727a from memory into f24
fnmsub.d f19, f19, f22, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
li x20, 0x90786b13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x113560f4 # load x3 with 32 MSBs 0x00000000113560f4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000113560f4
sw x3, 0(x2) # store x3 (0x113560f4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000113560f4 from memory into f20
li x3, 0x2fa7be8d # load x3 with 32 MSBs 0x000000002fa7be8d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002fa7be8d
sw x3, 0(x2) # store x3 (0x2fa7be8d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000002fa7be8d from memory into f11
li x3, 0x334f9aa8 # load x3 with 32 MSBs 0x00000000334f9aa8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000334f9aa8
sw x3, 0(x2) # store x3 (0x334f9aa8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000334f9aa8 from memory into f6
fnmsub.d f20, f20, f11, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
li x21, 0xa20fbcff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x083d14b3 # load x3 with 32 MSBs 0x00000000083d14b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000083d14b3
sw x3, 0(x2) # store x3 (0x083d14b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000083d14b3 from memory into f21
li x3, 0xbc185660 # load x3 with 32 MSBs 0x00000000bc185660
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc185660
sw x3, 0(x2) # store x3 (0xbc185660) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000bc185660 from memory into f30
li x3, 0xe99dbf6f # load x3 with 32 MSBs 0x00000000e99dbf6f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e99dbf6f
sw x3, 0(x2) # store x3 (0xe99dbf6f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000e99dbf6f from memory into f8
fnmsub.d f21, f21, f30, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
li x22, 0x1e425461 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7441490f # load x3 with 32 MSBs 0x000000007441490f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007441490f
sw x3, 0(x2) # store x3 (0x7441490f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000007441490f from memory into f22
li x3, 0x7e256f67 # load x3 with 32 MSBs 0x000000007e256f67
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007e256f67
sw x3, 0(x2) # store x3 (0x7e256f67) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000007e256f67 from memory into f20
li x3, 0x94b4e6ca # load x3 with 32 MSBs 0x0000000094b4e6ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000094b4e6ca
sw x3, 0(x2) # store x3 (0x94b4e6ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000094b4e6ca from memory into f27
fnmsub.d f22, f22, f20, f27 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
li x23, 0xa6963c88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x299c8f54 # load x3 with 32 MSBs 0x00000000299c8f54
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000299c8f54
sw x3, 0(x2) # store x3 (0x299c8f54) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000299c8f54 from memory into f23
li x3, 0xf3f5b365 # load x3 with 32 MSBs 0x00000000f3f5b365
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f3f5b365
sw x3, 0(x2) # store x3 (0xf3f5b365) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000f3f5b365 from memory into f2
li x3, 0x3cbd576d # load x3 with 32 MSBs 0x000000003cbd576d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003cbd576d
sw x3, 0(x2) # store x3 (0x3cbd576d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000003cbd576d from memory into f19
fnmsub.d f23, f23, f2, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
li x24, 0xdc189854 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe521cb26 # load x3 with 32 MSBs 0x00000000e521cb26
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e521cb26
sw x3, 0(x2) # store x3 (0xe521cb26) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000e521cb26 from memory into f24
li x3, 0xe41ba9c4 # load x3 with 32 MSBs 0x00000000e41ba9c4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e41ba9c4
sw x3, 0(x2) # store x3 (0xe41ba9c4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000e41ba9c4 from memory into f24
li x3, 0x42d049d7 # load x3 with 32 MSBs 0x0000000042d049d7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042d049d7
sw x3, 0(x2) # store x3 (0x42d049d7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000042d049d7 from memory into f25
fnmsub.d f24, f24, f24, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
li x25, 0xd13e8f97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0fc84b35 # load x3 with 32 MSBs 0x000000000fc84b35
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000fc84b35
sw x3, 0(x2) # store x3 (0x0fc84b35) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000000fc84b35 from memory into f25
li x3, 0x41e7e235 # load x3 with 32 MSBs 0x0000000041e7e235
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000041e7e235
sw x3, 0(x2) # store x3 (0x41e7e235) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000041e7e235 from memory into f18
li x3, 0x66771a2e # load x3 with 32 MSBs 0x0000000066771a2e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066771a2e
sw x3, 0(x2) # store x3 (0x66771a2e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000066771a2e from memory into f26
fnmsub.d f25, f25, f18, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
li x26, 0x300c669d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x67f0cc65 # load x3 with 32 MSBs 0x0000000067f0cc65
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000067f0cc65
sw x3, 0(x2) # store x3 (0x67f0cc65) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000067f0cc65 from memory into f26
li x3, 0xb5fa0f3f # load x3 with 32 MSBs 0x00000000b5fa0f3f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b5fa0f3f
sw x3, 0(x2) # store x3 (0xb5fa0f3f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000b5fa0f3f from memory into f25
li x3, 0xc2006100 # load x3 with 32 MSBs 0x00000000c2006100
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c2006100
sw x3, 0(x2) # store x3 (0xc2006100) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000c2006100 from memory into f14
fnmsub.d f26, f26, f25, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
li x27, 0xf38ddaf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x148a7acb # load x3 with 32 MSBs 0x00000000148a7acb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000148a7acb
sw x3, 0(x2) # store x3 (0x148a7acb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000148a7acb from memory into f27
li x3, 0xacc59681 # load x3 with 32 MSBs 0x00000000acc59681
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000acc59681
sw x3, 0(x2) # store x3 (0xacc59681) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000acc59681 from memory into f23
li x3, 0xdc8a6b7e # load x3 with 32 MSBs 0x00000000dc8a6b7e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc8a6b7e
sw x3, 0(x2) # store x3 (0xdc8a6b7e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000dc8a6b7e from memory into f29
fnmsub.d f27, f27, f23, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
li x28, 0xa657793b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbc1ec339 # load x3 with 32 MSBs 0x00000000bc1ec339
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc1ec339
sw x3, 0(x2) # store x3 (0xbc1ec339) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000bc1ec339 from memory into f28
li x3, 0xf31a3459 # load x3 with 32 MSBs 0x00000000f31a3459
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f31a3459
sw x3, 0(x2) # store x3 (0xf31a3459) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000f31a3459 from memory into f9
li x3, 0x1764e67f # load x3 with 32 MSBs 0x000000001764e67f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001764e67f
sw x3, 0(x2) # store x3 (0x1764e67f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000001764e67f from memory into f17
fnmsub.d f28, f28, f9, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
li x29, 0x66cad1f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x62a93ed4 # load x3 with 32 MSBs 0x0000000062a93ed4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000062a93ed4
sw x3, 0(x2) # store x3 (0x62a93ed4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000062a93ed4 from memory into f29
li x3, 0x824dfe36 # load x3 with 32 MSBs 0x00000000824dfe36
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000824dfe36
sw x3, 0(x2) # store x3 (0x824dfe36) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000824dfe36 from memory into f10
li x3, 0xbc8d6d98 # load x3 with 32 MSBs 0x00000000bc8d6d98
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc8d6d98
sw x3, 0(x2) # store x3 (0xbc8d6d98) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000bc8d6d98 from memory into f29
fnmsub.d f29, f29, f10, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
li x30, 0x168fb078 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd58425ee # load x3 with 32 MSBs 0x00000000d58425ee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d58425ee
sw x3, 0(x2) # store x3 (0xd58425ee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000d58425ee from memory into f30
li x3, 0x25bb8991 # load x3 with 32 MSBs 0x0000000025bb8991
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000025bb8991
sw x3, 0(x2) # store x3 (0x25bb8991) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000025bb8991 from memory into f17
li x3, 0xa87fac2c # load x3 with 32 MSBs 0x00000000a87fac2c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a87fac2c
sw x3, 0(x2) # store x3 (0xa87fac2c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000a87fac2c from memory into f25
fnmsub.d f30, f30, f17, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
li x31, 0xf3c07648 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a3d0a89 # load x3 with 32 MSBs 0x000000005a3d0a89
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005a3d0a89
sw x3, 0(x2) # store x3 (0x5a3d0a89) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000005a3d0a89 from memory into f31
li x3, 0xae38b719 # load x3 with 32 MSBs 0x00000000ae38b719
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ae38b719
sw x3, 0(x2) # store x3 (0xae38b719) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000ae38b719 from memory into f31
li x3, 0x5cf05221 # load x3 with 32 MSBs 0x000000005cf05221
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005cf05221
sw x3, 0(x2) # store x3 (0x5cf05221) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000005cf05221 from memory into f8
fnmsub.d f31, f31, f31, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
li x0, 0x20b7d495 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3bc48f58 # load x3 with 32 MSBs 0x000000003bc48f58
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003bc48f58
sw x3, 0(x2) # store x3 (0x3bc48f58) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000003bc48f58 from memory into f13
li x3, 0x2e4e2827 # load x3 with 32 MSBs 0x000000002e4e2827
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e4e2827
sw x3, 0(x2) # store x3 (0x2e4e2827) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x000000002e4e2827 from memory into f0
li x3, 0x37cb4a0c # load x3 with 32 MSBs 0x0000000037cb4a0c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000037cb4a0c
sw x3, 0(x2) # store x3 (0x37cb4a0c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000037cb4a0c from memory into f25
fnmsub.d f0, f13, f0, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
li x1, 0x1b7cc3df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa3c2e3b8 # load x3 with 32 MSBs 0x00000000a3c2e3b8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a3c2e3b8
sw x3, 0(x2) # store x3 (0xa3c2e3b8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000a3c2e3b8 from memory into f29
li x3, 0x3d1f752b # load x3 with 32 MSBs 0x000000003d1f752b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d1f752b
sw x3, 0(x2) # store x3 (0x3d1f752b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000003d1f752b from memory into f1
li x3, 0x11462f6a # load x3 with 32 MSBs 0x0000000011462f6a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000011462f6a
sw x3, 0(x2) # store x3 (0x11462f6a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000011462f6a from memory into f2
fnmsub.d f1, f29, f1, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
li x2, 0x8192d46e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3eced8ea # load x3 with 32 MSBs 0x000000003eced8ea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003eced8ea
sw x3, 0(x2) # store x3 (0x3eced8ea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000003eced8ea from memory into f23
li x3, 0x238bb31f # load x3 with 32 MSBs 0x00000000238bb31f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000238bb31f
sw x3, 0(x2) # store x3 (0x238bb31f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000238bb31f from memory into f2
li x3, 0xd0d06977 # load x3 with 32 MSBs 0x00000000d0d06977
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0d06977
sw x3, 0(x2) # store x3 (0xd0d06977) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000d0d06977 from memory into f29
fnmsub.d f2, f23, f2, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
li x3, 0x483eb9ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x85eb90bb # load x3 with 32 MSBs 0x0000000085eb90bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000085eb90bb
sw x3, 0(x2) # store x3 (0x85eb90bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000085eb90bb from memory into f15
li x3, 0x9e28bdc4 # load x3 with 32 MSBs 0x000000009e28bdc4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e28bdc4
sw x3, 0(x2) # store x3 (0x9e28bdc4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000009e28bdc4 from memory into f3
li x3, 0x44bed0b1 # load x3 with 32 MSBs 0x0000000044bed0b1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000044bed0b1
sw x3, 0(x2) # store x3 (0x44bed0b1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000044bed0b1 from memory into f24
fnmsub.d f3, f15, f3, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
li x4, 0xd7262533 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x96a1abcc # load x3 with 32 MSBs 0x0000000096a1abcc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000096a1abcc
sw x3, 0(x2) # store x3 (0x96a1abcc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000096a1abcc from memory into f24
li x3, 0x8f206210 # load x3 with 32 MSBs 0x000000008f206210
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f206210
sw x3, 0(x2) # store x3 (0x8f206210) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000008f206210 from memory into f4
li x3, 0x1cfbcff4 # load x3 with 32 MSBs 0x000000001cfbcff4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001cfbcff4
sw x3, 0(x2) # store x3 (0x1cfbcff4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000001cfbcff4 from memory into f20
fnmsub.d f4, f24, f4, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
li x5, 0x946e3c1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x81dc2bd8 # load x3 with 32 MSBs 0x0000000081dc2bd8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000081dc2bd8
sw x3, 0(x2) # store x3 (0x81dc2bd8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000081dc2bd8 from memory into f9
li x3, 0xf179f2ff # load x3 with 32 MSBs 0x00000000f179f2ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f179f2ff
sw x3, 0(x2) # store x3 (0xf179f2ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000f179f2ff from memory into f5
li x3, 0x0b7a3a41 # load x3 with 32 MSBs 0x000000000b7a3a41
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000b7a3a41
sw x3, 0(x2) # store x3 (0x0b7a3a41) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000000b7a3a41 from memory into f3
fnmsub.d f5, f9, f5, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
li x6, 0x4fac7b14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x22d061d2 # load x3 with 32 MSBs 0x0000000022d061d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000022d061d2
sw x3, 0(x2) # store x3 (0x22d061d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000022d061d2 from memory into f17
li x3, 0x422aa1a0 # load x3 with 32 MSBs 0x00000000422aa1a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000422aa1a0
sw x3, 0(x2) # store x3 (0x422aa1a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000422aa1a0 from memory into f6
li x3, 0x8c09acc6 # load x3 with 32 MSBs 0x000000008c09acc6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c09acc6
sw x3, 0(x2) # store x3 (0x8c09acc6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000008c09acc6 from memory into f6
fnmsub.d f6, f17, f6, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
li x7, 0x0bfaf1ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x085dbe64 # load x3 with 32 MSBs 0x00000000085dbe64
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000085dbe64
sw x3, 0(x2) # store x3 (0x085dbe64) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000085dbe64 from memory into f17
li x3, 0xd14bb455 # load x3 with 32 MSBs 0x00000000d14bb455
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d14bb455
sw x3, 0(x2) # store x3 (0xd14bb455) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000d14bb455 from memory into f7
li x3, 0x60891a7e # load x3 with 32 MSBs 0x0000000060891a7e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000060891a7e
sw x3, 0(x2) # store x3 (0x60891a7e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000060891a7e from memory into f8
fnmsub.d f7, f17, f7, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
li x8, 0x5ed1b942 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x87bb830a # load x3 with 32 MSBs 0x0000000087bb830a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000087bb830a
sw x3, 0(x2) # store x3 (0x87bb830a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000087bb830a from memory into f23
li x3, 0x13818c25 # load x3 with 32 MSBs 0x0000000013818c25
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000013818c25
sw x3, 0(x2) # store x3 (0x13818c25) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000013818c25 from memory into f8
li x3, 0xbcc253bc # load x3 with 32 MSBs 0x00000000bcc253bc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bcc253bc
sw x3, 0(x2) # store x3 (0xbcc253bc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000bcc253bc from memory into f29
fnmsub.d f8, f23, f8, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
li x9, 0x6402a6ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb069b85b # load x3 with 32 MSBs 0x00000000b069b85b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b069b85b
sw x3, 0(x2) # store x3 (0xb069b85b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000b069b85b from memory into f4
li x3, 0x4a24be81 # load x3 with 32 MSBs 0x000000004a24be81
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004a24be81
sw x3, 0(x2) # store x3 (0x4a24be81) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000004a24be81 from memory into f9
li x3, 0x0c481f3c # load x3 with 32 MSBs 0x000000000c481f3c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c481f3c
sw x3, 0(x2) # store x3 (0x0c481f3c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000000c481f3c from memory into f2
fnmsub.d f9, f4, f9, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
li x10, 0xce66575b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaa4d0fc9 # load x3 with 32 MSBs 0x00000000aa4d0fc9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa4d0fc9
sw x3, 0(x2) # store x3 (0xaa4d0fc9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000aa4d0fc9 from memory into f6
li x3, 0xac8bde54 # load x3 with 32 MSBs 0x00000000ac8bde54
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac8bde54
sw x3, 0(x2) # store x3 (0xac8bde54) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000ac8bde54 from memory into f10
li x3, 0xf5e51c98 # load x3 with 32 MSBs 0x00000000f5e51c98
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f5e51c98
sw x3, 0(x2) # store x3 (0xf5e51c98) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000f5e51c98 from memory into f28
fnmsub.d f10, f6, f10, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
li x11, 0x7758a026 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa0e841c3 # load x3 with 32 MSBs 0x00000000a0e841c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a0e841c3
sw x3, 0(x2) # store x3 (0xa0e841c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000a0e841c3 from memory into f12
li x3, 0x40bee133 # load x3 with 32 MSBs 0x0000000040bee133
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000040bee133
sw x3, 0(x2) # store x3 (0x40bee133) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000040bee133 from memory into f11
li x3, 0xd34aed20 # load x3 with 32 MSBs 0x00000000d34aed20
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d34aed20
sw x3, 0(x2) # store x3 (0xd34aed20) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000d34aed20 from memory into f5
fnmsub.d f11, f12, f11, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
li x12, 0x43c39715 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8cb6d50a # load x3 with 32 MSBs 0x000000008cb6d50a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008cb6d50a
sw x3, 0(x2) # store x3 (0x8cb6d50a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000008cb6d50a from memory into f23
li x3, 0xfbc9d6af # load x3 with 32 MSBs 0x00000000fbc9d6af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fbc9d6af
sw x3, 0(x2) # store x3 (0xfbc9d6af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000fbc9d6af from memory into f12
li x3, 0xb9a78f25 # load x3 with 32 MSBs 0x00000000b9a78f25
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b9a78f25
sw x3, 0(x2) # store x3 (0xb9a78f25) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000b9a78f25 from memory into f8
fnmsub.d f12, f23, f12, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
li x13, 0xe198de49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc98e220e # load x3 with 32 MSBs 0x00000000c98e220e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c98e220e
sw x3, 0(x2) # store x3 (0xc98e220e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000c98e220e from memory into f7
li x3, 0x63030be3 # load x3 with 32 MSBs 0x0000000063030be3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000063030be3
sw x3, 0(x2) # store x3 (0x63030be3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000063030be3 from memory into f13
li x3, 0x59f29fec # load x3 with 32 MSBs 0x0000000059f29fec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000059f29fec
sw x3, 0(x2) # store x3 (0x59f29fec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000059f29fec from memory into f12
fnmsub.d f13, f7, f13, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
li x14, 0x85520ab4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x14361fa8 # load x3 with 32 MSBs 0x0000000014361fa8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014361fa8
sw x3, 0(x2) # store x3 (0x14361fa8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000014361fa8 from memory into f1
li x3, 0xa73ec21b # load x3 with 32 MSBs 0x00000000a73ec21b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a73ec21b
sw x3, 0(x2) # store x3 (0xa73ec21b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000a73ec21b from memory into f14
li x3, 0x5d552d30 # load x3 with 32 MSBs 0x000000005d552d30
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d552d30
sw x3, 0(x2) # store x3 (0x5d552d30) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000005d552d30 from memory into f26
fnmsub.d f14, f1, f14, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
li x15, 0x94d2d2ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x31c134b8 # load x3 with 32 MSBs 0x0000000031c134b8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031c134b8
sw x3, 0(x2) # store x3 (0x31c134b8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000031c134b8 from memory into f12
li x3, 0x3d76be76 # load x3 with 32 MSBs 0x000000003d76be76
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d76be76
sw x3, 0(x2) # store x3 (0x3d76be76) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000003d76be76 from memory into f15
li x3, 0xc7dd8a9e # load x3 with 32 MSBs 0x00000000c7dd8a9e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c7dd8a9e
sw x3, 0(x2) # store x3 (0xc7dd8a9e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000c7dd8a9e from memory into f16
fnmsub.d f15, f12, f15, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
li x16, 0x95ea6145 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdd713695 # load x3 with 32 MSBs 0x00000000dd713695
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd713695
sw x3, 0(x2) # store x3 (0xdd713695) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000dd713695 from memory into f10
li x3, 0x6e07ae8f # load x3 with 32 MSBs 0x000000006e07ae8f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006e07ae8f
sw x3, 0(x2) # store x3 (0x6e07ae8f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000006e07ae8f from memory into f16
li x3, 0x98b36b6f # load x3 with 32 MSBs 0x0000000098b36b6f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000098b36b6f
sw x3, 0(x2) # store x3 (0x98b36b6f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000098b36b6f from memory into f20
fnmsub.d f16, f10, f16, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
li x17, 0xfbaf1af8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9f95392d # load x3 with 32 MSBs 0x000000009f95392d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f95392d
sw x3, 0(x2) # store x3 (0x9f95392d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000009f95392d from memory into f8
li x3, 0x6ac1f4d9 # load x3 with 32 MSBs 0x000000006ac1f4d9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006ac1f4d9
sw x3, 0(x2) # store x3 (0x6ac1f4d9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000006ac1f4d9 from memory into f17
li x3, 0x55f85986 # load x3 with 32 MSBs 0x0000000055f85986
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000055f85986
sw x3, 0(x2) # store x3 (0x55f85986) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000055f85986 from memory into f10
fnmsub.d f17, f8, f17, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
li x18, 0x18b90c27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x03e0bbfb # load x3 with 32 MSBs 0x0000000003e0bbfb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000003e0bbfb
sw x3, 0(x2) # store x3 (0x03e0bbfb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000003e0bbfb from memory into f23
li x3, 0x0964ecd7 # load x3 with 32 MSBs 0x000000000964ecd7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000964ecd7
sw x3, 0(x2) # store x3 (0x0964ecd7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000000964ecd7 from memory into f18
li x3, 0x6f02c6b5 # load x3 with 32 MSBs 0x000000006f02c6b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006f02c6b5
sw x3, 0(x2) # store x3 (0x6f02c6b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000006f02c6b5 from memory into f13
fnmsub.d f18, f23, f18, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
li x19, 0xd0a38e88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x31bef2ff # load x3 with 32 MSBs 0x0000000031bef2ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031bef2ff
sw x3, 0(x2) # store x3 (0x31bef2ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000031bef2ff from memory into f1
li x3, 0xfe9a413a # load x3 with 32 MSBs 0x00000000fe9a413a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fe9a413a
sw x3, 0(x2) # store x3 (0xfe9a413a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000fe9a413a from memory into f19
li x3, 0x6b5b3ea5 # load x3 with 32 MSBs 0x000000006b5b3ea5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b5b3ea5
sw x3, 0(x2) # store x3 (0x6b5b3ea5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000006b5b3ea5 from memory into f7
fnmsub.d f19, f1, f19, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
li x20, 0x0f89337a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x42d82d74 # load x3 with 32 MSBs 0x0000000042d82d74
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042d82d74
sw x3, 0(x2) # store x3 (0x42d82d74) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000042d82d74 from memory into f22
li x3, 0x1974bbe2 # load x3 with 32 MSBs 0x000000001974bbe2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001974bbe2
sw x3, 0(x2) # store x3 (0x1974bbe2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000001974bbe2 from memory into f20
li x3, 0xa2db1598 # load x3 with 32 MSBs 0x00000000a2db1598
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a2db1598
sw x3, 0(x2) # store x3 (0xa2db1598) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000a2db1598 from memory into f3
fnmsub.d f20, f22, f20, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
li x21, 0x50a35fd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x379e047c # load x3 with 32 MSBs 0x00000000379e047c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000379e047c
sw x3, 0(x2) # store x3 (0x379e047c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000379e047c from memory into f8
li x3, 0x2e5c3140 # load x3 with 32 MSBs 0x000000002e5c3140
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e5c3140
sw x3, 0(x2) # store x3 (0x2e5c3140) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000002e5c3140 from memory into f21
li x3, 0xda85b127 # load x3 with 32 MSBs 0x00000000da85b127
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da85b127
sw x3, 0(x2) # store x3 (0xda85b127) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000da85b127 from memory into f5
fnmsub.d f21, f8, f21, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
li x22, 0x5699232c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x741a17e4 # load x3 with 32 MSBs 0x00000000741a17e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000741a17e4
sw x3, 0(x2) # store x3 (0x741a17e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000741a17e4 from memory into f11
li x3, 0x172accde # load x3 with 32 MSBs 0x00000000172accde
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000172accde
sw x3, 0(x2) # store x3 (0x172accde) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000172accde from memory into f22
li x3, 0x10f8a4a1 # load x3 with 32 MSBs 0x0000000010f8a4a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000010f8a4a1
sw x3, 0(x2) # store x3 (0x10f8a4a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000010f8a4a1 from memory into f25
fnmsub.d f22, f11, f22, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
li x23, 0x280a84a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf2715f29 # load x3 with 32 MSBs 0x00000000f2715f29
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2715f29
sw x3, 0(x2) # store x3 (0xf2715f29) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000f2715f29 from memory into f22
li x3, 0x7bbbdd8f # load x3 with 32 MSBs 0x000000007bbbdd8f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007bbbdd8f
sw x3, 0(x2) # store x3 (0x7bbbdd8f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000007bbbdd8f from memory into f23
li x3, 0xa4cd7bf6 # load x3 with 32 MSBs 0x00000000a4cd7bf6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a4cd7bf6
sw x3, 0(x2) # store x3 (0xa4cd7bf6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000a4cd7bf6 from memory into f24
fnmsub.d f23, f22, f23, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
li x24, 0x4806f14e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x99d6ba7e # load x3 with 32 MSBs 0x0000000099d6ba7e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000099d6ba7e
sw x3, 0(x2) # store x3 (0x99d6ba7e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000099d6ba7e from memory into f20
li x3, 0xcdcf36d5 # load x3 with 32 MSBs 0x00000000cdcf36d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cdcf36d5
sw x3, 0(x2) # store x3 (0xcdcf36d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000cdcf36d5 from memory into f24
li x3, 0x3cc54d2e # load x3 with 32 MSBs 0x000000003cc54d2e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003cc54d2e
sw x3, 0(x2) # store x3 (0x3cc54d2e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000003cc54d2e from memory into f26
fnmsub.d f24, f20, f24, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
li x25, 0x190f98d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x434e3d7e # load x3 with 32 MSBs 0x00000000434e3d7e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000434e3d7e
sw x3, 0(x2) # store x3 (0x434e3d7e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000434e3d7e from memory into f21
li x3, 0x14944c6e # load x3 with 32 MSBs 0x0000000014944c6e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014944c6e
sw x3, 0(x2) # store x3 (0x14944c6e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000014944c6e from memory into f25
li x3, 0xd18b61ed # load x3 with 32 MSBs 0x00000000d18b61ed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d18b61ed
sw x3, 0(x2) # store x3 (0xd18b61ed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000d18b61ed from memory into f4
fnmsub.d f25, f21, f25, f4 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
li x26, 0x774135c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbd92651c # load x3 with 32 MSBs 0x00000000bd92651c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bd92651c
sw x3, 0(x2) # store x3 (0xbd92651c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000bd92651c from memory into f30
li x3, 0x5634b777 # load x3 with 32 MSBs 0x000000005634b777
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005634b777
sw x3, 0(x2) # store x3 (0x5634b777) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000005634b777 from memory into f26
li x3, 0xa2c0c2ab # load x3 with 32 MSBs 0x00000000a2c0c2ab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a2c0c2ab
sw x3, 0(x2) # store x3 (0xa2c0c2ab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000a2c0c2ab from memory into f18
fnmsub.d f26, f30, f26, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
li x27, 0x51c13848 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x571aa50a # load x3 with 32 MSBs 0x00000000571aa50a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000571aa50a
sw x3, 0(x2) # store x3 (0x571aa50a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000571aa50a from memory into f16
li x3, 0x894cebf6 # load x3 with 32 MSBs 0x00000000894cebf6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000894cebf6
sw x3, 0(x2) # store x3 (0x894cebf6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000894cebf6 from memory into f27
li x3, 0x3d76d44d # load x3 with 32 MSBs 0x000000003d76d44d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d76d44d
sw x3, 0(x2) # store x3 (0x3d76d44d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000003d76d44d from memory into f2
fnmsub.d f27, f16, f27, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
li x28, 0x02f61b58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x19a828a0 # load x3 with 32 MSBs 0x0000000019a828a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000019a828a0
sw x3, 0(x2) # store x3 (0x19a828a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000019a828a0 from memory into f1
li x3, 0x86061905 # load x3 with 32 MSBs 0x0000000086061905
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000086061905
sw x3, 0(x2) # store x3 (0x86061905) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000086061905 from memory into f28
li x3, 0x0d5d535a # load x3 with 32 MSBs 0x000000000d5d535a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d5d535a
sw x3, 0(x2) # store x3 (0x0d5d535a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000000d5d535a from memory into f19
fnmsub.d f28, f1, f28, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
li x29, 0xd3c06251 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x231c966c # load x3 with 32 MSBs 0x00000000231c966c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000231c966c
sw x3, 0(x2) # store x3 (0x231c966c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000231c966c from memory into f30
li x3, 0x207e78b2 # load x3 with 32 MSBs 0x00000000207e78b2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000207e78b2
sw x3, 0(x2) # store x3 (0x207e78b2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000207e78b2 from memory into f29
li x3, 0x4f868020 # load x3 with 32 MSBs 0x000000004f868020
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f868020
sw x3, 0(x2) # store x3 (0x4f868020) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000004f868020 from memory into f4
fnmsub.d f29, f30, f29, f4 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
li x30, 0x22522f4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0cea9e22 # load x3 with 32 MSBs 0x000000000cea9e22
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000cea9e22
sw x3, 0(x2) # store x3 (0x0cea9e22) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000000cea9e22 from memory into f7
li x3, 0xd76805a2 # load x3 with 32 MSBs 0x00000000d76805a2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d76805a2
sw x3, 0(x2) # store x3 (0xd76805a2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000d76805a2 from memory into f30
li x3, 0x8b971b1e # load x3 with 32 MSBs 0x000000008b971b1e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008b971b1e
sw x3, 0(x2) # store x3 (0x8b971b1e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000008b971b1e from memory into f5
fnmsub.d f30, f7, f30, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
li x31, 0x7697a543 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa76ee29e # load x3 with 32 MSBs 0x00000000a76ee29e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a76ee29e
sw x3, 0(x2) # store x3 (0xa76ee29e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000a76ee29e from memory into f4
li x3, 0xd329574d # load x3 with 32 MSBs 0x00000000d329574d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d329574d
sw x3, 0(x2) # store x3 (0xd329574d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000d329574d from memory into f31
li x3, 0xe4843809 # load x3 with 32 MSBs 0x00000000e4843809
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4843809
sw x3, 0(x2) # store x3 (0xe4843809) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000e4843809 from memory into f20
fnmsub.d f31, f4, f31, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
li x11, 0xf14d3260 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000000 from memory into f18
li x3, 0x0ac6aa8f # load x3 with 32 MSBs 0x000000000ac6aa8f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000ac6aa8f
sw x3, 0(x2) # store x3 (0x0ac6aa8f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000000ac6aa8f from memory into f20
li x3, 0xb7905754 # load x3 with 32 MSBs 0x00000000b7905754
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b7905754
sw x3, 0(x2) # store x3 (0xb7905754) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000b7905754 from memory into f31
fnmsub.d f11, f18, f20, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000000)
li x25, 0x863f0f7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000000 from memory into f28
li x3, 0xe2b3c728 # load x3 with 32 MSBs 0x00000000e2b3c728
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e2b3c728
sw x3, 0(x2) # store x3 (0xe2b3c728) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000e2b3c728 from memory into f10
li x3, 0xe50b5f64 # load x3 with 32 MSBs 0x00000000e50b5f64
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e50b5f64
sw x3, 0(x2) # store x3 (0xe50b5f64) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000e50b5f64 from memory into f8
fnmsub.d f25, f28, f10, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff0000000000000)
li x7, 0xc4ac4f93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
li x3, 0x8904fbab # load x3 with 32 MSBs 0x000000008904fbab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008904fbab
sw x3, 0(x2) # store x3 (0x8904fbab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000008904fbab from memory into f4
li x3, 0x2d53be15 # load x3 with 32 MSBs 0x000000002d53be15
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d53be15
sw x3, 0(x2) # store x3 (0x2d53be15) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000002d53be15 from memory into f14
fnmsub.d f7, f25, f4, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff0000000000000)
li x5, 0xdbb3646d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
li x3, 0x85055f6c # load x3 with 32 MSBs 0x0000000085055f6c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000085055f6c
sw x3, 0(x2) # store x3 (0x85055f6c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000085055f6c from memory into f23
li x3, 0x5d86a9d6 # load x3 with 32 MSBs 0x000000005d86a9d6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d86a9d6
sw x3, 0(x2) # store x3 (0x5d86a9d6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000005d86a9d6 from memory into f6
fnmsub.d f5, f29, f23, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff8000000000000)
li x6, 0xbb63beb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
li x3, 0xc316ba3c # load x3 with 32 MSBs 0x00000000c316ba3c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c316ba3c
sw x3, 0(x2) # store x3 (0xc316ba3c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000c316ba3c from memory into f26
li x3, 0x896e12b2 # load x3 with 32 MSBs 0x00000000896e12b2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000896e12b2
sw x3, 0(x2) # store x3 (0x896e12b2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000896e12b2 from memory into f16
fnmsub.d f6, f14, f26, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff8000000000000)
li x30, 0x731fc40a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
li x3, 0x9e3dfc50 # load x3 with 32 MSBs 0x000000009e3dfc50
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e3dfc50
sw x3, 0(x2) # store x3 (0x9e3dfc50) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000009e3dfc50 from memory into f31
li x3, 0x80ad820e # load x3 with 32 MSBs 0x0000000080ad820e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000080ad820e
sw x3, 0(x2) # store x3 (0x80ad820e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000080ad820e from memory into f7
fnmsub.d f30, f3, f31, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x4000000000000000)
li x8, 0x62bcd643 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
li x3, 0xd8cebc34 # load x3 with 32 MSBs 0x00000000d8cebc34
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d8cebc34
sw x3, 0(x2) # store x3 (0xd8cebc34) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000d8cebc34 from memory into f26
li x3, 0x6a7897a8 # load x3 with 32 MSBs 0x000000006a7897a8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006a7897a8
sw x3, 0(x2) # store x3 (0x6a7897a8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000006a7897a8 from memory into f24
fnmsub.d f8, f6, f26, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc000000000000000)
li x24, 0x5122dbd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
li x3, 0xc453b608 # load x3 with 32 MSBs 0x00000000c453b608
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c453b608
sw x3, 0(x2) # store x3 (0xc453b608) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000c453b608 from memory into f18
li x3, 0x5e0a557b # load x3 with 32 MSBs 0x000000005e0a557b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e0a557b
sw x3, 0(x2) # store x3 (0x5e0a557b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000005e0a557b from memory into f16
fnmsub.d f24, f9, f18, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x10000000000000)
li x5, 0x763c570d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
li x3, 0xcc69c120 # load x3 with 32 MSBs 0x00000000cc69c120
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cc69c120
sw x3, 0(x2) # store x3 (0xcc69c120) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000cc69c120 from memory into f31
li x3, 0x54afb9ae # load x3 with 32 MSBs 0x0000000054afb9ae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000054afb9ae
sw x3, 0(x2) # store x3 (0x54afb9ae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000054afb9ae from memory into f17
fnmsub.d f5, f22, f31, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8010000000000000)
li x24, 0xc4f6ff2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
li x3, 0xee09cad5 # load x3 with 32 MSBs 0x00000000ee09cad5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee09cad5
sw x3, 0(x2) # store x3 (0xee09cad5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000ee09cad5 from memory into f29
li x3, 0x5f548d54 # load x3 with 32 MSBs 0x000000005f548d54
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005f548d54
sw x3, 0(x2) # store x3 (0x5f548d54) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000005f548d54 from memory into f17
fnmsub.d f24, f21, f29, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fefffffffffffff)
li x20, 0xcd8a0e7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
li x3, 0xee187144 # load x3 with 32 MSBs 0x00000000ee187144
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee187144
sw x3, 0(x2) # store x3 (0xee187144) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000ee187144 from memory into f24
li x3, 0xdaba30e2 # load x3 with 32 MSBs 0x00000000daba30e2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000daba30e2
sw x3, 0(x2) # store x3 (0xdaba30e2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000daba30e2 from memory into f22
fnmsub.d f20, f9, f24, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffefffffffffffff)
li x19, 0x0da194b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
li x3, 0x845da06a # load x3 with 32 MSBs 0x00000000845da06a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000845da06a
sw x3, 0(x2) # store x3 (0x845da06a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000845da06a from memory into f9
li x3, 0x87a46312 # load x3 with 32 MSBs 0x0000000087a46312
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000087a46312
sw x3, 0(x2) # store x3 (0x87a46312) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000087a46312 from memory into f6
fnmsub.d f19, f28, f9, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfffffffffffff)
li x11, 0x9e1fe0d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
li x3, 0x600dc785 # load x3 with 32 MSBs 0x00000000600dc785
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000600dc785
sw x3, 0(x2) # store x3 (0x600dc785) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000600dc785 from memory into f7
li x3, 0x7715a9ad # load x3 with 32 MSBs 0x000000007715a9ad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007715a9ad
sw x3, 0(x2) # store x3 (0x7715a9ad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000007715a9ad from memory into f18
fnmsub.d f11, f27, f7, f18 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800fffffffffffff)
li x10, 0x11278e02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
li x3, 0xd7edad65 # load x3 with 32 MSBs 0x00000000d7edad65
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7edad65
sw x3, 0(x2) # store x3 (0xd7edad65) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000d7edad65 from memory into f20
li x3, 0x62f0ec57 # load x3 with 32 MSBs 0x0000000062f0ec57
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000062f0ec57
sw x3, 0(x2) # store x3 (0x62f0ec57) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000062f0ec57 from memory into f6
fnmsub.d f10, f17, f20, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000)
li x11, 0x7a5b70a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0008000000000000 from memory into f18
li x3, 0x3122f7c9 # load x3 with 32 MSBs 0x000000003122f7c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003122f7c9
sw x3, 0(x2) # store x3 (0x3122f7c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000003122f7c9 from memory into f23
li x3, 0x9a940450 # load x3 with 32 MSBs 0x000000009a940450
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009a940450
sw x3, 0(x2) # store x3 (0x9a940450) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000009a940450 from memory into f15
fnmsub.d f11, f18, f23, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8008000000000000)
li x12, 0x884e86a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
li x3, 0x054a7781 # load x3 with 32 MSBs 0x00000000054a7781
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000054a7781
sw x3, 0(x2) # store x3 (0x054a7781) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000054a7781 from memory into f26
li x3, 0xc5c591ff # load x3 with 32 MSBs 0x00000000c5c591ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c5c591ff
sw x3, 0(x2) # store x3 (0xc5c591ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000c5c591ff from memory into f9
fnmsub.d f12, f29, f26, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
li x13, 0x687be6e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
li x3, 0xe578356c # load x3 with 32 MSBs 0x00000000e578356c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e578356c
sw x3, 0(x2) # store x3 (0xe578356c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000e578356c from memory into f16
li x3, 0xf5563f73 # load x3 with 32 MSBs 0x00000000f5563f73
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f5563f73
sw x3, 0(x2) # store x3 (0xf5563f73) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000f5563f73 from memory into f10
fnmsub.d f13, f29, f16, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000001)
li x13, 0x4b859ed5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
li x3, 0xb1abc326 # load x3 with 32 MSBs 0x00000000b1abc326
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1abc326
sw x3, 0(x2) # store x3 (0xb1abc326) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000b1abc326 from memory into f18
li x3, 0x616adf8c # load x3 with 32 MSBs 0x00000000616adf8c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000616adf8c
sw x3, 0(x2) # store x3 (0x616adf8c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000616adf8c from memory into f14
fnmsub.d f13, f3, f18, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000000)
li x8, 0x253deac2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
li x3, 0xffd9182c # load x3 with 32 MSBs 0x00000000ffd9182c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ffd9182c
sw x3, 0(x2) # store x3 (0xffd9182c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000ffd9182c from memory into f24
li x3, 0x44679882 # load x3 with 32 MSBs 0x0000000044679882
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000044679882
sw x3, 0(x2) # store x3 (0x44679882) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000044679882 from memory into f2
fnmsub.d f8, f25, f24, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfff0000000000000)
li x8, 0x88577c56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
li x3, 0x4a099535 # load x3 with 32 MSBs 0x000000004a099535
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004a099535
sw x3, 0(x2) # store x3 (0x4a099535) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000004a099535 from memory into f18
li x3, 0xfe9790f7 # load x3 with 32 MSBs 0x00000000fe9790f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fe9790f7
sw x3, 0(x2) # store x3 (0xfe9790f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000fe9790f7 from memory into f15
fnmsub.d f8, f16, f18, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff8000000000000)
li x13, 0xdb7f4357 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0x9e5c8249 # load x3 with 32 MSBs 0x000000009e5c8249
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e5c8249
sw x3, 0(x2) # store x3 (0x9e5c8249) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000009e5c8249 from memory into f19
li x3, 0x47625f31 # load x3 with 32 MSBs 0x0000000047625f31
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000047625f31
sw x3, 0(x2) # store x3 (0x47625f31) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000047625f31 from memory into f15
fnmsub.d f13, f7, f19, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffffffffffff)
li x11, 0x4d3bf2f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
li x3, 0xbc3db0ce # load x3 with 32 MSBs 0x00000000bc3db0ce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc3db0ce
sw x3, 0(x2) # store x3 (0xbc3db0ce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000bc3db0ce from memory into f24
li x3, 0x4ddc775c # load x3 with 32 MSBs 0x000000004ddc775c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ddc775c
sw x3, 0(x2) # store x3 (0x4ddc775c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000004ddc775c from memory into f7
fnmsub.d f11, f6, f24, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000001)
li x22, 0xd1ae33ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0x2a0be8b6 # load x3 with 32 MSBs 0x000000002a0be8b6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a0be8b6
sw x3, 0(x2) # store x3 (0x2a0be8b6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000002a0be8b6 from memory into f16
li x3, 0x6289307c # load x3 with 32 MSBs 0x000000006289307c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006289307c
sw x3, 0(x2) # store x3 (0x6289307c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000006289307c from memory into f9
fnmsub.d f22, f4, f16, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff7ffffffffffff)
li x9, 0x06f57beb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
li x3, 0xc3bc1075 # load x3 with 32 MSBs 0x00000000c3bc1075
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c3bc1075
sw x3, 0(x2) # store x3 (0xc3bc1075) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000c3bc1075 from memory into f4
li x3, 0x0ac069a3 # load x3 with 32 MSBs 0x000000000ac069a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000ac069a3
sw x3, 0(x2) # store x3 (0x0ac069a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000000ac069a3 from memory into f20
fnmsub.d f9, f6, f4, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x5a392534a57711ad)
li x31, 0xdfcb3d2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
li x3, 0x09296d72 # load x3 with 32 MSBs 0x0000000009296d72
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000009296d72
sw x3, 0(x2) # store x3 (0x09296d72) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000009296d72 from memory into f9
li x3, 0xd066c248 # load x3 with 32 MSBs 0x00000000d066c248
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d066c248
sw x3, 0(x2) # store x3 (0xd066c248) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000d066c248 from memory into f3
fnmsub.d f31, f8, f9, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xa6e895993737426c)
li x29, 0xfe56f43f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
li x3, 0x1c6b4a43 # load x3 with 32 MSBs 0x000000001c6b4a43
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001c6b4a43
sw x3, 0(x2) # store x3 (0x1c6b4a43) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000001c6b4a43 from memory into f22
li x3, 0x55d59e51 # load x3 with 32 MSBs 0x0000000055d59e51
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000055d59e51
sw x3, 0(x2) # store x3 (0x55d59e51) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000055d59e51 from memory into f18
fnmsub.d f29, f3, f22, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
li x29, 0x13338ba0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x203139ff # load x3 with 32 MSBs 0x00000000203139ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000203139ff
sw x3, 0(x2) # store x3 (0x203139ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000203139ff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
li x3, 0xe80c37f1 # load x3 with 32 MSBs 0x00000000e80c37f1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e80c37f1
sw x3, 0(x2) # store x3 (0xe80c37f1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000e80c37f1 from memory into f4
fnmsub.d f29, f2, f23, f4 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000000)
li x5, 0x443cd1bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe2c53c7c # load x3 with 32 MSBs 0x00000000e2c53c7c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e2c53c7c
sw x3, 0(x2) # store x3 (0xe2c53c7c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000e2c53c7c from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
li x3, 0xa81e4fbc # load x3 with 32 MSBs 0x00000000a81e4fbc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a81e4fbc
sw x3, 0(x2) # store x3 (0xa81e4fbc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000a81e4fbc from memory into f12
fnmsub.d f5, f17, f23, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff0000000000000)
li x16, 0x1f9bc014 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xca6c6138 # load x3 with 32 MSBs 0x00000000ca6c6138
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ca6c6138
sw x3, 0(x2) # store x3 (0xca6c6138) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000ca6c6138 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
li x3, 0x0af56f0f # load x3 with 32 MSBs 0x000000000af56f0f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000af56f0f
sw x3, 0(x2) # store x3 (0x0af56f0f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000000af56f0f from memory into f4
fnmsub.d f16, f3, f12, f4 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff0000000000000)
li x25, 0xd52d6d46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfbc4c8a6 # load x3 with 32 MSBs 0x00000000fbc4c8a6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fbc4c8a6
sw x3, 0(x2) # store x3 (0xfbc4c8a6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000fbc4c8a6 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
li x3, 0x38873bac # load x3 with 32 MSBs 0x0000000038873bac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000038873bac
sw x3, 0(x2) # store x3 (0x38873bac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000038873bac from memory into f1
fnmsub.d f25, f2, f17, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff8000000000000)
li x28, 0x405cddd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xac22b7a3 # load x3 with 32 MSBs 0x00000000ac22b7a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac22b7a3
sw x3, 0(x2) # store x3 (0xac22b7a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000ac22b7a3 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
li x3, 0x5df5a5de # load x3 with 32 MSBs 0x000000005df5a5de
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005df5a5de
sw x3, 0(x2) # store x3 (0x5df5a5de) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000005df5a5de from memory into f1
fnmsub.d f28, f12, f8, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff8000000000000)
li x10, 0x3e8464ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8e071e71 # load x3 with 32 MSBs 0x000000008e071e71
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e071e71
sw x3, 0(x2) # store x3 (0x8e071e71) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000008e071e71 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
li x3, 0x54a045c2 # load x3 with 32 MSBs 0x0000000054a045c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000054a045c2
sw x3, 0(x2) # store x3 (0x54a045c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000054a045c2 from memory into f24
fnmsub.d f10, f16, f7, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x4000000000000000)
li x15, 0x71022590 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcd633813 # load x3 with 32 MSBs 0x00000000cd633813
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cd633813
sw x3, 0(x2) # store x3 (0xcd633813) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000cd633813 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
li x3, 0x243dbc27 # load x3 with 32 MSBs 0x00000000243dbc27
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000243dbc27
sw x3, 0(x2) # store x3 (0x243dbc27) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000243dbc27 from memory into f19
fnmsub.d f15, f16, f28, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc000000000000000)
li x9, 0xa42ef940 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb45d47ee # load x3 with 32 MSBs 0x00000000b45d47ee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b45d47ee
sw x3, 0(x2) # store x3 (0xb45d47ee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000b45d47ee from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
li x3, 0xbb700ff8 # load x3 with 32 MSBs 0x00000000bb700ff8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb700ff8
sw x3, 0(x2) # store x3 (0xbb700ff8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000bb700ff8 from memory into f18
fnmsub.d f9, f30, f12, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x10000000000000)
li x20, 0xf7139c65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5591b358 # load x3 with 32 MSBs 0x000000005591b358
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005591b358
sw x3, 0(x2) # store x3 (0x5591b358) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000005591b358 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0xbab2ea8d # load x3 with 32 MSBs 0x00000000bab2ea8d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bab2ea8d
sw x3, 0(x2) # store x3 (0xbab2ea8d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000bab2ea8d from memory into f22
fnmsub.d f20, f4, f21, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8010000000000000)
li x25, 0x5d2b4423 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1d6d9a1c # load x3 with 32 MSBs 0x000000001d6d9a1c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d6d9a1c
sw x3, 0(x2) # store x3 (0x1d6d9a1c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000001d6d9a1c from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
li x3, 0x0f5b3465 # load x3 with 32 MSBs 0x000000000f5b3465
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f5b3465
sw x3, 0(x2) # store x3 (0x0f5b3465) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000000f5b3465 from memory into f14
fnmsub.d f25, f11, f30, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fefffffffffffff)
li x30, 0x2f193e53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb4bbff33 # load x3 with 32 MSBs 0x00000000b4bbff33
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b4bbff33
sw x3, 0(x2) # store x3 (0xb4bbff33) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000b4bbff33 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
li x3, 0x25ce7116 # load x3 with 32 MSBs 0x0000000025ce7116
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000025ce7116
sw x3, 0(x2) # store x3 (0x25ce7116) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000025ce7116 from memory into f19
fnmsub.d f30, f28, f1, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffefffffffffffff)
li x13, 0xeaccfe4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x39e03332 # load x3 with 32 MSBs 0x0000000039e03332
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000039e03332
sw x3, 0(x2) # store x3 (0x39e03332) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000039e03332 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
li x3, 0x09fbc993 # load x3 with 32 MSBs 0x0000000009fbc993
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000009fbc993
sw x3, 0(x2) # store x3 (0x09fbc993) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000009fbc993 from memory into f27
fnmsub.d f13, f18, f5, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfffffffffffff)
li x21, 0xa41689e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x091fb9da # load x3 with 32 MSBs 0x00000000091fb9da
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000091fb9da
sw x3, 0(x2) # store x3 (0x091fb9da) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000091fb9da from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
li x3, 0x937bee10 # load x3 with 32 MSBs 0x00000000937bee10
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000937bee10
sw x3, 0(x2) # store x3 (0x937bee10) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000937bee10 from memory into f29
fnmsub.d f21, f10, f15, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800fffffffffffff)
li x4, 0xf4a35853 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf15d9b51 # load x3 with 32 MSBs 0x00000000f15d9b51
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f15d9b51
sw x3, 0(x2) # store x3 (0xf15d9b51) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000f15d9b51 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
li x3, 0x2cc984d5 # load x3 with 32 MSBs 0x000000002cc984d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002cc984d5
sw x3, 0(x2) # store x3 (0x2cc984d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000002cc984d5 from memory into f30
fnmsub.d f4, f6, f23, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000)
li x9, 0x46f39d90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe8a37084 # load x3 with 32 MSBs 0x00000000e8a37084
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8a37084
sw x3, 0(x2) # store x3 (0xe8a37084) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000e8a37084 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
li x3, 0x88318372 # load x3 with 32 MSBs 0x0000000088318372
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000088318372
sw x3, 0(x2) # store x3 (0x88318372) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000088318372 from memory into f21
fnmsub.d f9, f4, f2, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8008000000000000)
li x5, 0xbb146389 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3e5cddf9 # load x3 with 32 MSBs 0x000000003e5cddf9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e5cddf9
sw x3, 0(x2) # store x3 (0x3e5cddf9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000003e5cddf9 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
li x3, 0xcc436476 # load x3 with 32 MSBs 0x00000000cc436476
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cc436476
sw x3, 0(x2) # store x3 (0xcc436476) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000cc436476 from memory into f25
fnmsub.d f5, f6, f7, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
li x21, 0x91b60b7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x49ea7c51 # load x3 with 32 MSBs 0x0000000049ea7c51
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000049ea7c51
sw x3, 0(x2) # store x3 (0x49ea7c51) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000049ea7c51 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
li x3, 0x69c19e29 # load x3 with 32 MSBs 0x0000000069c19e29
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000069c19e29
sw x3, 0(x2) # store x3 (0x69c19e29) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000069c19e29 from memory into f27
fnmsub.d f21, f14, f3, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000001)
li x31, 0xf831ae09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0fcce78f # load x3 with 32 MSBs 0x000000000fcce78f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000fcce78f
sw x3, 0(x2) # store x3 (0x0fcce78f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000000fcce78f from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
li x3, 0xd77702f0 # load x3 with 32 MSBs 0x00000000d77702f0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d77702f0
sw x3, 0(x2) # store x3 (0xd77702f0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000d77702f0 from memory into f7
fnmsub.d f31, f22, f24, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000000)
li x12, 0xc468beed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x262e319c # load x3 with 32 MSBs 0x00000000262e319c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000262e319c
sw x3, 0(x2) # store x3 (0x262e319c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000262e319c from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
li x3, 0x93185dc9 # load x3 with 32 MSBs 0x0000000093185dc9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000093185dc9
sw x3, 0(x2) # store x3 (0x93185dc9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000093185dc9 from memory into f21
fnmsub.d f12, f5, f10, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfff0000000000000)
li x23, 0xd34081d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0c755c0a # load x3 with 32 MSBs 0x000000000c755c0a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c755c0a
sw x3, 0(x2) # store x3 (0x0c755c0a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000000c755c0a from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
li x3, 0x66ee6d40 # load x3 with 32 MSBs 0x0000000066ee6d40
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066ee6d40
sw x3, 0(x2) # store x3 (0x66ee6d40) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000066ee6d40 from memory into f2
fnmsub.d f23, f1, f16, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff8000000000000)
li x15, 0x526dec82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf35d84e6 # load x3 with 32 MSBs 0x00000000f35d84e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f35d84e6
sw x3, 0(x2) # store x3 (0xf35d84e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000f35d84e6 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
li x3, 0xb4086826 # load x3 with 32 MSBs 0x00000000b4086826
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b4086826
sw x3, 0(x2) # store x3 (0xb4086826) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000b4086826 from memory into f25
fnmsub.d f15, f11, f26, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffffffffffff)
li x8, 0x63fee12e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5110c147 # load x3 with 32 MSBs 0x000000005110c147
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005110c147
sw x3, 0(x2) # store x3 (0x5110c147) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000005110c147 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
li x3, 0xc3e20889 # load x3 with 32 MSBs 0x00000000c3e20889
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c3e20889
sw x3, 0(x2) # store x3 (0xc3e20889) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000c3e20889 from memory into f17
fnmsub.d f8, f25, f3, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000001)
li x30, 0x1ce564f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7b3e642a # load x3 with 32 MSBs 0x000000007b3e642a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007b3e642a
sw x3, 0(x2) # store x3 (0x7b3e642a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000007b3e642a from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000001 from memory into f20
li x3, 0x3f91a0d5 # load x3 with 32 MSBs 0x000000003f91a0d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003f91a0d5
sw x3, 0(x2) # store x3 (0x3f91a0d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000003f91a0d5 from memory into f4
fnmsub.d f30, f1, f20, f4 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff7ffffffffffff)
li x26, 0x609e88a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9c63292f # load x3 with 32 MSBs 0x000000009c63292f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009c63292f
sw x3, 0(x2) # store x3 (0x9c63292f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000009c63292f from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
li x3, 0x1804e8ab # load x3 with 32 MSBs 0x000000001804e8ab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001804e8ab
sw x3, 0(x2) # store x3 (0x1804e8ab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000001804e8ab from memory into f12
fnmsub.d f26, f11, f5, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x5a392534a57711ad)
li x7, 0x7bb584a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x246871ba # load x3 with 32 MSBs 0x00000000246871ba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000246871ba
sw x3, 0(x2) # store x3 (0x246871ba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000246871ba from memory into f18
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0x5153a882 # load x3 with 32 MSBs 0x000000005153a882
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005153a882
sw x3, 0(x2) # store x3 (0x5153a882) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000005153a882 from memory into f24
fnmsub.d f7, f18, f1, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xa6e895993737426c)
li x25, 0x0bf1bc92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x11e4a1bf # load x3 with 32 MSBs 0x0000000011e4a1bf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000011e4a1bf
sw x3, 0(x2) # store x3 (0x11e4a1bf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000011e4a1bf from memory into f14
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
li x3, 0x53a18ff9 # load x3 with 32 MSBs 0x0000000053a18ff9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000053a18ff9
sw x3, 0(x2) # store x3 (0x53a18ff9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000053a18ff9 from memory into f27
fnmsub.d f25, f14, f26, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
li x10, 0x57cfb24e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf380f374 # load x3 with 32 MSBs 0x00000000f380f374
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f380f374
sw x3, 0(x2) # store x3 (0xf380f374) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000f380f374 from memory into f20
li x3, 0x0af98235 # load x3 with 32 MSBs 0x000000000af98235
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000af98235
sw x3, 0(x2) # store x3 (0x0af98235) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000000af98235 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000000 from memory into f18
fnmsub.d f10, f20, f19, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8000000000000000)
li x21, 0x28cb5eff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1457d519 # load x3 with 32 MSBs 0x000000001457d519
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001457d519
sw x3, 0(x2) # store x3 (0x1457d519) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000001457d519 from memory into f12
li x3, 0x5fe65dd5 # load x3 with 32 MSBs 0x000000005fe65dd5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005fe65dd5
sw x3, 0(x2) # store x3 (0x5fe65dd5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000005fe65dd5 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
fnmsub.d f21, f12, f16, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3ff0000000000000)
li x7, 0x1e4bd787 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x73684303 # load x3 with 32 MSBs 0x0000000073684303
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000073684303
sw x3, 0(x2) # store x3 (0x73684303) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000073684303 from memory into f2
li x3, 0xbb95ee95 # load x3 with 32 MSBs 0x00000000bb95ee95
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb95ee95
sw x3, 0(x2) # store x3 (0xbb95ee95) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000bb95ee95 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff0000000000000 from memory into f4
fnmsub.d f7, f2, f15, f4 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbff0000000000000)
li x1, 0xa75623c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1f7f3b6a # load x3 with 32 MSBs 0x000000001f7f3b6a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001f7f3b6a
sw x3, 0(x2) # store x3 (0x1f7f3b6a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000001f7f3b6a from memory into f27
li x3, 0xef68fcd0 # load x3 with 32 MSBs 0x00000000ef68fcd0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef68fcd0
sw x3, 0(x2) # store x3 (0xef68fcd0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000ef68fcd0 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
fnmsub.d f1, f27, f15, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3ff8000000000000)
li x19, 0x78cc66e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd3f9dae0 # load x3 with 32 MSBs 0x00000000d3f9dae0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d3f9dae0
sw x3, 0(x2) # store x3 (0xd3f9dae0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000d3f9dae0 from memory into f11
li x3, 0xddb4f9a1 # load x3 with 32 MSBs 0x00000000ddb4f9a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ddb4f9a1
sw x3, 0(x2) # store x3 (0xddb4f9a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000ddb4f9a1 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
fnmsub.d f19, f11, f14, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbff8000000000000)
li x13, 0x844a9e7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa88c1bfa # load x3 with 32 MSBs 0x00000000a88c1bfa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a88c1bfa
sw x3, 0(x2) # store x3 (0xa88c1bfa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000a88c1bfa from memory into f10
li x3, 0x7ea0f1d1 # load x3 with 32 MSBs 0x000000007ea0f1d1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ea0f1d1
sw x3, 0(x2) # store x3 (0x7ea0f1d1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000007ea0f1d1 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
fnmsub.d f13, f10, f21, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x4000000000000000)
li x30, 0x43bae420 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x55d7e4b0 # load x3 with 32 MSBs 0x0000000055d7e4b0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000055d7e4b0
sw x3, 0(x2) # store x3 (0x55d7e4b0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000055d7e4b0 from memory into f27
li x3, 0x97e2f9b0 # load x3 with 32 MSBs 0x0000000097e2f9b0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000097e2f9b0
sw x3, 0(x2) # store x3 (0x97e2f9b0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000097e2f9b0 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
fnmsub.d f30, f27, f2, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc000000000000000)
li x24, 0x603eab0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1bfd029d # load x3 with 32 MSBs 0x000000001bfd029d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001bfd029d
sw x3, 0(x2) # store x3 (0x1bfd029d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000001bfd029d from memory into f1
li x3, 0xa9d9ade3 # load x3 with 32 MSBs 0x00000000a9d9ade3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9d9ade3
sw x3, 0(x2) # store x3 (0xa9d9ade3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000a9d9ade3 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
fnmsub.d f24, f1, f31, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x10000000000000)
li x27, 0xb40d9d35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x202e1672 # load x3 with 32 MSBs 0x00000000202e1672
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000202e1672
sw x3, 0(x2) # store x3 (0x202e1672) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000202e1672 from memory into f17
li x3, 0x35fef3bd # load x3 with 32 MSBs 0x0000000035fef3bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035fef3bd
sw x3, 0(x2) # store x3 (0x35fef3bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000035fef3bd from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
fnmsub.d f27, f17, f13, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8010000000000000)
li x9, 0x838db49c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa9ff0e0e # load x3 with 32 MSBs 0x00000000a9ff0e0e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9ff0e0e
sw x3, 0(x2) # store x3 (0xa9ff0e0e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000a9ff0e0e from memory into f22
li x3, 0x5c4a454c # load x3 with 32 MSBs 0x000000005c4a454c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005c4a454c
sw x3, 0(x2) # store x3 (0x5c4a454c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000005c4a454c from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
fnmsub.d f9, f22, f15, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fefffffffffffff)
li x20, 0x7b1bc068 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xde5f2a49 # load x3 with 32 MSBs 0x00000000de5f2a49
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000de5f2a49
sw x3, 0(x2) # store x3 (0xde5f2a49) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000de5f2a49 from memory into f10
li x3, 0x425f3fc1 # load x3 with 32 MSBs 0x00000000425f3fc1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000425f3fc1
sw x3, 0(x2) # store x3 (0x425f3fc1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000425f3fc1 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
fnmsub.d f20, f10, f25, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffefffffffffffff)
li x31, 0x740d7ec1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xde9d943f # load x3 with 32 MSBs 0x00000000de9d943f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000de9d943f
sw x3, 0(x2) # store x3 (0xde9d943f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000de9d943f from memory into f12
li x3, 0xe5a6e058 # load x3 with 32 MSBs 0x00000000e5a6e058
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e5a6e058
sw x3, 0(x2) # store x3 (0xe5a6e058) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e5a6e058 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
fnmsub.d f31, f12, f19, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfffffffffffff)
li x13, 0xc46bb536 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9bded17e # load x3 with 32 MSBs 0x000000009bded17e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009bded17e
sw x3, 0(x2) # store x3 (0x9bded17e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000009bded17e from memory into f21
li x3, 0x5ee768c8 # load x3 with 32 MSBs 0x000000005ee768c8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005ee768c8
sw x3, 0(x2) # store x3 (0x5ee768c8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000005ee768c8 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
fnmsub.d f13, f21, f18, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800fffffffffffff)
li x15, 0x2dda0aa5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e03f60 # load x3 with 32 MSBs 0x00000000a6e03f60
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a6e03f60
sw x3, 0(x2) # store x3 (0xa6e03f60) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000a6e03f60 from memory into f20
li x3, 0xcd0e11aa # load x3 with 32 MSBs 0x00000000cd0e11aa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cd0e11aa
sw x3, 0(x2) # store x3 (0xcd0e11aa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000cd0e11aa from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
fnmsub.d f15, f20, f28, f1 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8000000000000)
li x28, 0xe1fce60c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xee6a7ea0 # load x3 with 32 MSBs 0x00000000ee6a7ea0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee6a7ea0
sw x3, 0(x2) # store x3 (0xee6a7ea0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000ee6a7ea0 from memory into f26
li x3, 0x8867e809 # load x3 with 32 MSBs 0x000000008867e809
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008867e809
sw x3, 0(x2) # store x3 (0x8867e809) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000008867e809 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
fnmsub.d f28, f26, f5, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8008000000000000)
li x8, 0x6893b34b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x55caf4ce # load x3 with 32 MSBs 0x0000000055caf4ce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000055caf4ce
sw x3, 0(x2) # store x3 (0x55caf4ce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000055caf4ce from memory into f11
li x3, 0xa3b067ab # load x3 with 32 MSBs 0x00000000a3b067ab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a3b067ab
sw x3, 0(x2) # store x3 (0xa3b067ab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000a3b067ab from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
fnmsub.d f8, f11, f23, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
li x4, 0xcbb4c65c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f2d5a51 # load x3 with 32 MSBs 0x000000003f2d5a51
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003f2d5a51
sw x3, 0(x2) # store x3 (0x3f2d5a51) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000003f2d5a51 from memory into f1
li x3, 0x55903afc # load x3 with 32 MSBs 0x0000000055903afc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000055903afc
sw x3, 0(x2) # store x3 (0x55903afc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000055903afc from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
fnmsub.d f4, f1, f19, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8000000000000001)
li x19, 0x8292fdf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9051b584 # load x3 with 32 MSBs 0x000000009051b584
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009051b584
sw x3, 0(x2) # store x3 (0x9051b584) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000009051b584 from memory into f7
li x3, 0x8dfa602c # load x3 with 32 MSBs 0x000000008dfa602c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008dfa602c
sw x3, 0(x2) # store x3 (0x8dfa602c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000008dfa602c from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
fnmsub.d f19, f7, f10, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ff0000000000000)
li x15, 0xcac8bdd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcb23566b # load x3 with 32 MSBs 0x00000000cb23566b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cb23566b
sw x3, 0(x2) # store x3 (0xcb23566b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000cb23566b from memory into f8
li x3, 0x16247012 # load x3 with 32 MSBs 0x0000000016247012
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000016247012
sw x3, 0(x2) # store x3 (0x16247012) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000016247012 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
fnmsub.d f15, f8, f6, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfff0000000000000)
li x12, 0x129fb128 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf520012d # load x3 with 32 MSBs 0x00000000f520012d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f520012d
sw x3, 0(x2) # store x3 (0xf520012d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000f520012d from memory into f3
li x3, 0x33161e4b # load x3 with 32 MSBs 0x0000000033161e4b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000033161e4b
sw x3, 0(x2) # store x3 (0x33161e4b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000033161e4b from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
fnmsub.d f12, f3, f18, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ff8000000000000)
li x23, 0x16496f70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7d9c7dc1 # load x3 with 32 MSBs 0x000000007d9c7dc1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007d9c7dc1
sw x3, 0(x2) # store x3 (0x7d9c7dc1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000007d9c7dc1 from memory into f3
li x3, 0x6286a2f3 # load x3 with 32 MSBs 0x000000006286a2f3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006286a2f3
sw x3, 0(x2) # store x3 (0x6286a2f3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000006286a2f3 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
fnmsub.d f23, f3, f28, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffffffffffff)
li x25, 0x00aa5f68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff50302c # load x3 with 32 MSBs 0x00000000ff50302c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff50302c
sw x3, 0(x2) # store x3 (0xff50302c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000ff50302c from memory into f12
li x3, 0xc06778a1 # load x3 with 32 MSBs 0x00000000c06778a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c06778a1
sw x3, 0(x2) # store x3 (0xc06778a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000c06778a1 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
fnmsub.d f25, f12, f2, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ff0000000000001)
li x24, 0x08577499 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5191b552 # load x3 with 32 MSBs 0x000000005191b552
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005191b552
sw x3, 0(x2) # store x3 (0x5191b552) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000005191b552 from memory into f29
li x3, 0x1a2fd5c1 # load x3 with 32 MSBs 0x000000001a2fd5c1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001a2fd5c1
sw x3, 0(x2) # store x3 (0x1a2fd5c1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000001a2fd5c1 from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
fnmsub.d f24, f29, f15, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ff7ffffffffffff)
li x5, 0x0d0ef04a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x162d51a0 # load x3 with 32 MSBs 0x00000000162d51a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000162d51a0
sw x3, 0(x2) # store x3 (0x162d51a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000162d51a0 from memory into f16
li x3, 0xd6d8cb66 # load x3 with 32 MSBs 0x00000000d6d8cb66
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d6d8cb66
sw x3, 0(x2) # store x3 (0xd6d8cb66) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000d6d8cb66 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
fnmsub.d f5, f16, f20, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x5a392534a57711ad)
li x19, 0xed2a86c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x766fe409 # load x3 with 32 MSBs 0x00000000766fe409
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000766fe409
sw x3, 0(x2) # store x3 (0x766fe409) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000766fe409 from memory into f2
li x3, 0x029c9b63 # load x3 with 32 MSBs 0x00000000029c9b63
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000029c9b63
sw x3, 0(x2) # store x3 (0x029c9b63) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000029c9b63 from memory into f13
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
fnmsub.d f19, f2, f13, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xa6e895993737426c)
li x28, 0x547a92c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc58a2dab # load x3 with 32 MSBs 0x00000000c58a2dab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c58a2dab
sw x3, 0(x2) # store x3 (0xc58a2dab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000c58a2dab from memory into f5
li x3, 0x54ac2f6b # load x3 with 32 MSBs 0x0000000054ac2f6b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000054ac2f6b
sw x3, 0(x2) # store x3 (0x54ac2f6b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000054ac2f6b from memory into f12
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
fnmsub.d f28, f5, f12, f25 # perform operation

# Testcase cp_frm
li x20, 0x0ce0b254 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0daebcdf # load x3 with 32 MSBs 0x000000000daebcdf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000daebcdf
sw x3, 0(x2) # store x3 (0x0daebcdf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000000daebcdf from memory into f27
li x3, 0xd1a03ee5 # load x3 with 32 MSBs 0x00000000d1a03ee5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1a03ee5
sw x3, 0(x2) # store x3 (0xd1a03ee5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000d1a03ee5 from memory into f13
li x3, 0x00000007 # load x3 with 32 MSBs 0x0000000000000007
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000007
sw x3, 0(x2) # store x3 (0x00000007) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000007 from memory into f7
fnmsub.d f20, f27, f13, f7, dyn # perform operation
fnmsub.d f20, f27, f13, f7, rdn # perform operation
fnmsub.d f20, f27, f13, f7, rmm # perform operation
fnmsub.d f20, f27, f13, f7, rne # perform operation
fnmsub.d f20, f27, f13, f7, rtz # perform operation
fnmsub.d f20, f27, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f27, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f27, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f27, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f27, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f27, f13, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
li x24, 0x5433bc47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
li x3, 0xb3231e78 # load x3 with 32 MSBs 0x00000000b3231e78
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3231e78
sw x3, 0(x2) # store x3 (0xb3231e78) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000b3231e78 from memory into f3
fnmsub.d f24, f18, f4, f3, dyn # perform operation
fnmsub.d f24, f18, f4, f3, rdn # perform operation
fnmsub.d f24, f18, f4, f3, rmm # perform operation
fnmsub.d f24, f18, f4, f3, rne # perform operation
fnmsub.d f24, f18, f4, f3, rtz # perform operation
fnmsub.d f24, f18, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f18, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f18, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f18, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f18, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f18, f4, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000000)
li x23, 0xa8108ada # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000000 from memory into f15
li x3, 0xa9c425a7 # load x3 with 32 MSBs 0x00000000a9c425a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9c425a7
sw x3, 0(x2) # store x3 (0xa9c425a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000a9c425a7 from memory into f18
fnmsub.d f23, f13, f15, f18, dyn # perform operation
fnmsub.d f23, f13, f15, f18, rdn # perform operation
fnmsub.d f23, f13, f15, f18, rmm # perform operation
fnmsub.d f23, f13, f15, f18, rne # perform operation
fnmsub.d f23, f13, f15, f18, rtz # perform operation
fnmsub.d f23, f13, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f13, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f13, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f13, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f13, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f13, f15, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff0000000000000)
li x1, 0xe22918c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
li x3, 0x0eaa1666 # load x3 with 32 MSBs 0x000000000eaa1666
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000eaa1666
sw x3, 0(x2) # store x3 (0x0eaa1666) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000000eaa1666 from memory into f25
fnmsub.d f1, f7, f16, f25, dyn # perform operation
fnmsub.d f1, f7, f16, f25, rdn # perform operation
fnmsub.d f1, f7, f16, f25, rmm # perform operation
fnmsub.d f1, f7, f16, f25, rne # perform operation
fnmsub.d f1, f7, f16, f25, rtz # perform operation
fnmsub.d f1, f7, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f7, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f7, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f7, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f7, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f7, f16, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff0000000000000)
li x25, 0x28bea6b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
li x3, 0x3ec98845 # load x3 with 32 MSBs 0x000000003ec98845
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003ec98845
sw x3, 0(x2) # store x3 (0x3ec98845) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000003ec98845 from memory into f13
fnmsub.d f25, f16, f29, f13, dyn # perform operation
fnmsub.d f25, f16, f29, f13, rdn # perform operation
fnmsub.d f25, f16, f29, f13, rmm # perform operation
fnmsub.d f25, f16, f29, f13, rne # perform operation
fnmsub.d f25, f16, f29, f13, rtz # perform operation
fnmsub.d f25, f16, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f16, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f16, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f16, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f16, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f16, f29, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff8000000000000)
li x8, 0xcd350dd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
li x3, 0x20e9f494 # load x3 with 32 MSBs 0x0000000020e9f494
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020e9f494
sw x3, 0(x2) # store x3 (0x20e9f494) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000020e9f494 from memory into f9
fnmsub.d f8, f21, f24, f9, dyn # perform operation
fnmsub.d f8, f21, f24, f9, rdn # perform operation
fnmsub.d f8, f21, f24, f9, rmm # perform operation
fnmsub.d f8, f21, f24, f9, rne # perform operation
fnmsub.d f8, f21, f24, f9, rtz # perform operation
fnmsub.d f8, f21, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f21, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff8000000000000)
li x24, 0xca769646 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
li x3, 0x2d9b042b # load x3 with 32 MSBs 0x000000002d9b042b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d9b042b
sw x3, 0(x2) # store x3 (0x2d9b042b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000002d9b042b from memory into f25
fnmsub.d f24, f12, f19, f25, dyn # perform operation
fnmsub.d f24, f12, f19, f25, rdn # perform operation
fnmsub.d f24, f12, f19, f25, rmm # perform operation
fnmsub.d f24, f12, f19, f25, rne # perform operation
fnmsub.d f24, f12, f19, f25, rtz # perform operation
fnmsub.d f24, f12, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f12, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f12, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f12, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f12, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f12, f19, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x4000000000000000)
li x19, 0xd5f19fee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
li x3, 0x8e6beee4 # load x3 with 32 MSBs 0x000000008e6beee4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e6beee4
sw x3, 0(x2) # store x3 (0x8e6beee4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000008e6beee4 from memory into f13
fnmsub.d f19, f24, f6, f13, dyn # perform operation
fnmsub.d f19, f24, f6, f13, rdn # perform operation
fnmsub.d f19, f24, f6, f13, rmm # perform operation
fnmsub.d f19, f24, f6, f13, rne # perform operation
fnmsub.d f19, f24, f6, f13, rtz # perform operation
fnmsub.d f19, f24, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f24, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f24, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f24, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f24, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f24, f6, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc000000000000000)
li x17, 0x5eb4c510 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0x35d2ea14 # load x3 with 32 MSBs 0x0000000035d2ea14
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035d2ea14
sw x3, 0(x2) # store x3 (0x35d2ea14) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000035d2ea14 from memory into f9
fnmsub.d f17, f6, f1, f9, dyn # perform operation
fnmsub.d f17, f6, f1, f9, rdn # perform operation
fnmsub.d f17, f6, f1, f9, rmm # perform operation
fnmsub.d f17, f6, f1, f9, rne # perform operation
fnmsub.d f17, f6, f1, f9, rtz # perform operation
fnmsub.d f17, f6, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f6, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f6, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f6, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f6, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f6, f1, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x10000000000000)
li x20, 0x5d6f34ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
li x3, 0x9f706035 # load x3 with 32 MSBs 0x000000009f706035
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f706035
sw x3, 0(x2) # store x3 (0x9f706035) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000009f706035 from memory into f18
fnmsub.d f20, f19, f29, f18, dyn # perform operation
fnmsub.d f20, f19, f29, f18, rdn # perform operation
fnmsub.d f20, f19, f29, f18, rmm # perform operation
fnmsub.d f20, f19, f29, f18, rne # perform operation
fnmsub.d f20, f19, f29, f18, rtz # perform operation
fnmsub.d f20, f19, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f19, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f19, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f19, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f19, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f19, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8010000000000000)
li x3, 0x3760ed57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8010000000000000 from memory into f12
li x3, 0x2e5439f4 # load x3 with 32 MSBs 0x000000002e5439f4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e5439f4
sw x3, 0(x2) # store x3 (0x2e5439f4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000002e5439f4 from memory into f11
fnmsub.d f3, f22, f12, f11, dyn # perform operation
fnmsub.d f3, f22, f12, f11, rdn # perform operation
fnmsub.d f3, f22, f12, f11, rmm # perform operation
fnmsub.d f3, f22, f12, f11, rne # perform operation
fnmsub.d f3, f22, f12, f11, rtz # perform operation
fnmsub.d f3, f22, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f22, f12, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fefffffffffffff)
li x9, 0x89fa56d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
li x3, 0x060651db # load x3 with 32 MSBs 0x00000000060651db
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000060651db
sw x3, 0(x2) # store x3 (0x060651db) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000060651db from memory into f25
fnmsub.d f9, f3, f18, f25, dyn # perform operation
fnmsub.d f9, f3, f18, f25, rdn # perform operation
fnmsub.d f9, f3, f18, f25, rmm # perform operation
fnmsub.d f9, f3, f18, f25, rne # perform operation
fnmsub.d f9, f3, f18, f25, rtz # perform operation
fnmsub.d f9, f3, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f3, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f3, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f3, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f3, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f3, f18, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffefffffffffffff)
li x21, 0xfd556fce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
li x3, 0x3707697e # load x3 with 32 MSBs 0x000000003707697e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003707697e
sw x3, 0(x2) # store x3 (0x3707697e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000003707697e from memory into f22
fnmsub.d f21, f27, f12, f22, dyn # perform operation
fnmsub.d f21, f27, f12, f22, rdn # perform operation
fnmsub.d f21, f27, f12, f22, rmm # perform operation
fnmsub.d f21, f27, f12, f22, rne # perform operation
fnmsub.d f21, f27, f12, f22, rtz # perform operation
fnmsub.d f21, f27, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f27, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f27, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f27, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f27, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f27, f12, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfffffffffffff)
li x30, 0xdba3462d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
li x3, 0x1804105d # load x3 with 32 MSBs 0x000000001804105d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001804105d
sw x3, 0(x2) # store x3 (0x1804105d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000001804105d from memory into f31
fnmsub.d f30, f29, f22, f31, dyn # perform operation
fnmsub.d f30, f29, f22, f31, rdn # perform operation
fnmsub.d f30, f29, f22, f31, rmm # perform operation
fnmsub.d f30, f29, f22, f31, rne # perform operation
fnmsub.d f30, f29, f22, f31, rtz # perform operation
fnmsub.d f30, f29, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f29, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f29, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f29, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f29, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f29, f22, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800fffffffffffff)
li x26, 0x36075385 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
li x3, 0x9c3f9fdb # load x3 with 32 MSBs 0x000000009c3f9fdb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009c3f9fdb
sw x3, 0(x2) # store x3 (0x9c3f9fdb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000009c3f9fdb from memory into f19
fnmsub.d f26, f7, f12, f19, dyn # perform operation
fnmsub.d f26, f7, f12, f19, rdn # perform operation
fnmsub.d f26, f7, f12, f19, rmm # perform operation
fnmsub.d f26, f7, f12, f19, rne # perform operation
fnmsub.d f26, f7, f12, f19, rtz # perform operation
fnmsub.d f26, f7, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f7, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f7, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f7, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f7, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f7, f12, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000)
li x7, 0x870f9551 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0xb58a244c # load x3 with 32 MSBs 0x00000000b58a244c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b58a244c
sw x3, 0(x2) # store x3 (0xb58a244c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000b58a244c from memory into f5
fnmsub.d f7, f27, f20, f5, dyn # perform operation
fnmsub.d f7, f27, f20, f5, rdn # perform operation
fnmsub.d f7, f27, f20, f5, rmm # perform operation
fnmsub.d f7, f27, f20, f5, rne # perform operation
fnmsub.d f7, f27, f20, f5, rtz # perform operation
fnmsub.d f7, f27, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f27, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f27, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f27, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f27, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f27, f20, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8008000000000000)
li x11, 0xca6cd41f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
li x3, 0xa2f68ff8 # load x3 with 32 MSBs 0x00000000a2f68ff8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a2f68ff8
sw x3, 0(x2) # store x3 (0xa2f68ff8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000a2f68ff8 from memory into f24
fnmsub.d f11, f23, f31, f24, dyn # perform operation
fnmsub.d f11, f23, f31, f24, rdn # perform operation
fnmsub.d f11, f23, f31, f24, rmm # perform operation
fnmsub.d f11, f23, f31, f24, rne # perform operation
fnmsub.d f11, f23, f31, f24, rtz # perform operation
fnmsub.d f11, f23, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f23, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f23, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f23, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f23, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f23, f31, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
li x2, 0x97dc0ea6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0xa7e5b2c1 # load x3 with 32 MSBs 0x00000000a7e5b2c1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a7e5b2c1
sw x3, 0(x2) # store x3 (0xa7e5b2c1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000a7e5b2c1 from memory into f1
fnmsub.d f2, f9, f24, f1, dyn # perform operation
fnmsub.d f2, f9, f24, f1, rdn # perform operation
fnmsub.d f2, f9, f24, f1, rmm # perform operation
fnmsub.d f2, f9, f24, f1, rne # perform operation
fnmsub.d f2, f9, f24, f1, rtz # perform operation
fnmsub.d f2, f9, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f9, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f9, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f9, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f9, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f9, f24, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000001)
li x7, 0x826e1481 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
li x3, 0x9f1e65d8 # load x3 with 32 MSBs 0x000000009f1e65d8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f1e65d8
sw x3, 0(x2) # store x3 (0x9f1e65d8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000009f1e65d8 from memory into f19
fnmsub.d f7, f13, f29, f19, dyn # perform operation
fnmsub.d f7, f13, f29, f19, rdn # perform operation
fnmsub.d f7, f13, f29, f19, rmm # perform operation
fnmsub.d f7, f13, f29, f19, rne # perform operation
fnmsub.d f7, f13, f29, f19, rtz # perform operation
fnmsub.d f7, f13, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f13, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f13, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f13, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f13, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f13, f29, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000000)
li x21, 0x68216d3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
li x3, 0xe125cd42 # load x3 with 32 MSBs 0x00000000e125cd42
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e125cd42
sw x3, 0(x2) # store x3 (0xe125cd42) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e125cd42 from memory into f19
fnmsub.d f21, f7, f5, f19, dyn # perform operation
fnmsub.d f21, f7, f5, f19, rdn # perform operation
fnmsub.d f21, f7, f5, f19, rmm # perform operation
fnmsub.d f21, f7, f5, f19, rne # perform operation
fnmsub.d f21, f7, f5, f19, rtz # perform operation
fnmsub.d f21, f7, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f7, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f7, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f7, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f7, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f7, f5, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfff0000000000000)
li x29, 0x462095ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
li x3, 0xc12c1ef6 # load x3 with 32 MSBs 0x00000000c12c1ef6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c12c1ef6
sw x3, 0(x2) # store x3 (0xc12c1ef6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000c12c1ef6 from memory into f21
fnmsub.d f29, f2, f25, f21, dyn # perform operation
fnmsub.d f29, f2, f25, f21, rdn # perform operation
fnmsub.d f29, f2, f25, f21, rmm # perform operation
fnmsub.d f29, f2, f25, f21, rne # perform operation
fnmsub.d f29, f2, f25, f21, rtz # perform operation
fnmsub.d f29, f2, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f2, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f2, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f2, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f2, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f2, f25, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff8000000000000)
li x31, 0x2cf75760 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
li x3, 0x28b04a99 # load x3 with 32 MSBs 0x0000000028b04a99
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028b04a99
sw x3, 0(x2) # store x3 (0x28b04a99) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000028b04a99 from memory into f29
fnmsub.d f31, f9, f23, f29, dyn # perform operation
fnmsub.d f31, f9, f23, f29, rdn # perform operation
fnmsub.d f31, f9, f23, f29, rmm # perform operation
fnmsub.d f31, f9, f23, f29, rne # perform operation
fnmsub.d f31, f9, f23, f29, rtz # perform operation
fnmsub.d f31, f9, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f9, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f9, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f9, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f9, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f9, f23, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffffffffffff)
li x31, 0x3deafc78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
li x3, 0xa3055421 # load x3 with 32 MSBs 0x00000000a3055421
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a3055421
sw x3, 0(x2) # store x3 (0xa3055421) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000a3055421 from memory into f26
fnmsub.d f31, f14, f27, f26, dyn # perform operation
fnmsub.d f31, f14, f27, f26, rdn # perform operation
fnmsub.d f31, f14, f27, f26, rmm # perform operation
fnmsub.d f31, f14, f27, f26, rne # perform operation
fnmsub.d f31, f14, f27, f26, rtz # perform operation
fnmsub.d f31, f14, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f14, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f14, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f14, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f14, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f14, f27, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000001)
li x5, 0x8ead0e9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
li x3, 0xb2371e03 # load x3 with 32 MSBs 0x00000000b2371e03
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2371e03
sw x3, 0(x2) # store x3 (0xb2371e03) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000b2371e03 from memory into f10
fnmsub.d f5, f26, f27, f10, dyn # perform operation
fnmsub.d f5, f26, f27, f10, rdn # perform operation
fnmsub.d f5, f26, f27, f10, rmm # perform operation
fnmsub.d f5, f26, f27, f10, rne # perform operation
fnmsub.d f5, f26, f27, f10, rtz # perform operation
fnmsub.d f5, f26, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f26, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f26, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f26, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f26, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f26, f27, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff7ffffffffffff)
li x21, 0x19544de7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000000 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0x9fcfa41f # load x3 with 32 MSBs 0x000000009fcfa41f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009fcfa41f
sw x3, 0(x2) # store x3 (0x9fcfa41f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000009fcfa41f from memory into f26
fnmsub.d f21, f17, f15, f26, dyn # perform operation
fnmsub.d f21, f17, f15, f26, rdn # perform operation
fnmsub.d f21, f17, f15, f26, rmm # perform operation
fnmsub.d f21, f17, f15, f26, rne # perform operation
fnmsub.d f21, f17, f15, f26, rtz # perform operation
fnmsub.d f21, f17, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f17, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f17, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f17, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f17, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f17, f15, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x5a392534a57711ad)
li x26, 0xcdef3073 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
li x3, 0x7a0d70b4 # load x3 with 32 MSBs 0x000000007a0d70b4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007a0d70b4
sw x3, 0(x2) # store x3 (0x7a0d70b4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000007a0d70b4 from memory into f31
fnmsub.d f26, f25, f23, f31, dyn # perform operation
fnmsub.d f26, f25, f23, f31, rdn # perform operation
fnmsub.d f26, f25, f23, f31, rmm # perform operation
fnmsub.d f26, f25, f23, f31, rne # perform operation
fnmsub.d f26, f25, f23, f31, rtz # perform operation
fnmsub.d f26, f25, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f25, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f25, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f25, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f25, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f25, f23, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xa6e895993737426c)
li x1, 0x3a6f534c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
li x3, 0x2970a3d8 # load x3 with 32 MSBs 0x000000002970a3d8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002970a3d8
sw x3, 0(x2) # store x3 (0x2970a3d8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000002970a3d8 from memory into f22
fnmsub.d f1, f5, f24, f22, dyn # perform operation
fnmsub.d f1, f5, f24, f22, rdn # perform operation
fnmsub.d f1, f5, f24, f22, rmm # perform operation
fnmsub.d f1, f5, f24, f22, rne # perform operation
fnmsub.d f1, f5, f24, f22, rtz # perform operation
fnmsub.d f1, f5, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f5, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f5, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f5, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f5, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f5, f24, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x0)
li x5, 0x87ae388d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0x2b8a64c2 # load x3 with 32 MSBs 0x000000002b8a64c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002b8a64c2
sw x3, 0(x2) # store x3 (0x2b8a64c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000002b8a64c2 from memory into f8
fnmsub.d f5, f31, f2, f8, dyn # perform operation
fnmsub.d f5, f31, f2, f8, rdn # perform operation
fnmsub.d f5, f31, f2, f8, rmm # perform operation
fnmsub.d f5, f31, f2, f8, rne # perform operation
fnmsub.d f5, f31, f2, f8, rtz # perform operation
fnmsub.d f5, f31, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f31, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f31, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f31, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f31, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f31, f2, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000000)
li x14, 0x1b3393da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
li x3, 0xc7f27b67 # load x3 with 32 MSBs 0x00000000c7f27b67
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c7f27b67
sw x3, 0(x2) # store x3 (0xc7f27b67) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000c7f27b67 from memory into f21
fnmsub.d f14, f20, f3, f21, dyn # perform operation
fnmsub.d f14, f20, f3, f21, rdn # perform operation
fnmsub.d f14, f20, f3, f21, rmm # perform operation
fnmsub.d f14, f20, f3, f21, rne # perform operation
fnmsub.d f14, f20, f3, f21, rtz # perform operation
fnmsub.d f14, f20, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f20, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f20, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f20, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f20, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f20, f3, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff0000000000000)
li x15, 0xecfea101 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
li x3, 0xf701c70f # load x3 with 32 MSBs 0x00000000f701c70f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f701c70f
sw x3, 0(x2) # store x3 (0xf701c70f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000f701c70f from memory into f18
fnmsub.d f15, f22, f26, f18, dyn # perform operation
fnmsub.d f15, f22, f26, f18, rdn # perform operation
fnmsub.d f15, f22, f26, f18, rmm # perform operation
fnmsub.d f15, f22, f26, f18, rne # perform operation
fnmsub.d f15, f22, f26, f18, rtz # perform operation
fnmsub.d f15, f22, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f22, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f22, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f22, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f22, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f22, f26, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff0000000000000)
li x2, 0x2f52bc2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
li x3, 0x217a7b83 # load x3 with 32 MSBs 0x00000000217a7b83
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000217a7b83
sw x3, 0(x2) # store x3 (0x217a7b83) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000217a7b83 from memory into f20
fnmsub.d f2, f8, f22, f20, dyn # perform operation
fnmsub.d f2, f8, f22, f20, rdn # perform operation
fnmsub.d f2, f8, f22, f20, rmm # perform operation
fnmsub.d f2, f8, f22, f20, rne # perform operation
fnmsub.d f2, f8, f22, f20, rtz # perform operation
fnmsub.d f2, f8, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f8, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f8, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f8, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f8, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f8, f22, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff8000000000000)
li x4, 0xc46e08b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
li x3, 0xa4e0fe06 # load x3 with 32 MSBs 0x00000000a4e0fe06
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a4e0fe06
sw x3, 0(x2) # store x3 (0xa4e0fe06) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000a4e0fe06 from memory into f7
fnmsub.d f4, f1, f13, f7, dyn # perform operation
fnmsub.d f4, f1, f13, f7, rdn # perform operation
fnmsub.d f4, f1, f13, f7, rmm # perform operation
fnmsub.d f4, f1, f13, f7, rne # perform operation
fnmsub.d f4, f1, f13, f7, rtz # perform operation
fnmsub.d f4, f1, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f1, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f1, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f1, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f1, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f1, f13, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff8000000000000)
li x1, 0x534f1af3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
li x3, 0x7f4203c1 # load x3 with 32 MSBs 0x000000007f4203c1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f4203c1
sw x3, 0(x2) # store x3 (0x7f4203c1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000007f4203c1 from memory into f10
fnmsub.d f1, f3, f17, f10, dyn # perform operation
fnmsub.d f1, f3, f17, f10, rdn # perform operation
fnmsub.d f1, f3, f17, f10, rmm # perform operation
fnmsub.d f1, f3, f17, f10, rne # perform operation
fnmsub.d f1, f3, f17, f10, rtz # perform operation
fnmsub.d f1, f3, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f3, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f3, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f3, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f3, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f3, f17, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x4000000000000000)
li x9, 0xe7767e3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
li x3, 0xdd6ee595 # load x3 with 32 MSBs 0x00000000dd6ee595
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd6ee595
sw x3, 0(x2) # store x3 (0xdd6ee595) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000dd6ee595 from memory into f26
fnmsub.d f9, f6, f14, f26, dyn # perform operation
fnmsub.d f9, f6, f14, f26, rdn # perform operation
fnmsub.d f9, f6, f14, f26, rmm # perform operation
fnmsub.d f9, f6, f14, f26, rne # perform operation
fnmsub.d f9, f6, f14, f26, rtz # perform operation
fnmsub.d f9, f6, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f6, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f6, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f6, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f6, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f6, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xc000000000000000)
li x20, 0x6bbec3cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
li x3, 0x643b28b0 # load x3 with 32 MSBs 0x00000000643b28b0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000643b28b0
sw x3, 0(x2) # store x3 (0x643b28b0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000643b28b0 from memory into f17
fnmsub.d f20, f10, f27, f17, dyn # perform operation
fnmsub.d f20, f10, f27, f17, rdn # perform operation
fnmsub.d f20, f10, f27, f17, rmm # perform operation
fnmsub.d f20, f10, f27, f17, rne # perform operation
fnmsub.d f20, f10, f27, f17, rtz # perform operation
fnmsub.d f20, f10, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f10, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f10, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f10, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f10, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f10, f27, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x10000000000000)
li x26, 0xe85f7099 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
li x3, 0xca6a91c9 # load x3 with 32 MSBs 0x00000000ca6a91c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ca6a91c9
sw x3, 0(x2) # store x3 (0xca6a91c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000ca6a91c9 from memory into f10
fnmsub.d f26, f25, f12, f10, dyn # perform operation
fnmsub.d f26, f25, f12, f10, rdn # perform operation
fnmsub.d f26, f25, f12, f10, rmm # perform operation
fnmsub.d f26, f25, f12, f10, rne # perform operation
fnmsub.d f26, f25, f12, f10, rtz # perform operation
fnmsub.d f26, f25, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f25, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f25, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f25, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f25, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f25, f12, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8010000000000000)
li x3, 0xbd4af04b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
li x3, 0xb28e1cf2 # load x3 with 32 MSBs 0x00000000b28e1cf2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b28e1cf2
sw x3, 0(x2) # store x3 (0xb28e1cf2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000b28e1cf2 from memory into f16
fnmsub.d f3, f19, f31, f16, dyn # perform operation
fnmsub.d f3, f19, f31, f16, rdn # perform operation
fnmsub.d f3, f19, f31, f16, rmm # perform operation
fnmsub.d f3, f19, f31, f16, rne # perform operation
fnmsub.d f3, f19, f31, f16, rtz # perform operation
fnmsub.d f3, f19, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f19, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f19, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f19, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f19, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f19, f31, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fefffffffffffff)
li x21, 0x020d6a33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000000 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
li x3, 0x3061f95e # load x3 with 32 MSBs 0x000000003061f95e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003061f95e
sw x3, 0(x2) # store x3 (0x3061f95e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000003061f95e from memory into f8
fnmsub.d f21, f19, f11, f8, dyn # perform operation
fnmsub.d f21, f19, f11, f8, rdn # perform operation
fnmsub.d f21, f19, f11, f8, rmm # perform operation
fnmsub.d f21, f19, f11, f8, rne # perform operation
fnmsub.d f21, f19, f11, f8, rtz # perform operation
fnmsub.d f21, f19, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f19, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f19, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f19, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f19, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f19, f11, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xffefffffffffffff)
li x29, 0xbf5cf25c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
li x3, 0xb4560f6a # load x3 with 32 MSBs 0x00000000b4560f6a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b4560f6a
sw x3, 0(x2) # store x3 (0xb4560f6a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000b4560f6a from memory into f21
fnmsub.d f29, f25, f28, f21, dyn # perform operation
fnmsub.d f29, f25, f28, f21, rdn # perform operation
fnmsub.d f29, f25, f28, f21, rmm # perform operation
fnmsub.d f29, f25, f28, f21, rne # perform operation
fnmsub.d f29, f25, f28, f21, rtz # perform operation
fnmsub.d f29, f25, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f25, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f25, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f25, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f25, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f25, f28, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfffffffffffff)
li x29, 0xea454301 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
li x3, 0x96390748 # load x3 with 32 MSBs 0x0000000096390748
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000096390748
sw x3, 0(x2) # store x3 (0x96390748) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000096390748 from memory into f8
fnmsub.d f29, f25, f9, f8, dyn # perform operation
fnmsub.d f29, f25, f9, f8, rdn # perform operation
fnmsub.d f29, f25, f9, f8, rmm # perform operation
fnmsub.d f29, f25, f9, f8, rne # perform operation
fnmsub.d f29, f25, f9, f8, rtz # perform operation
fnmsub.d f29, f25, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f25, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f25, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f25, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f25, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f25, f9, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x800fffffffffffff)
li x1, 0x60b24a7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
li x3, 0xbc37946b # load x3 with 32 MSBs 0x00000000bc37946b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc37946b
sw x3, 0(x2) # store x3 (0xbc37946b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000bc37946b from memory into f22
fnmsub.d f1, f12, f2, f22, dyn # perform operation
fnmsub.d f1, f12, f2, f22, rdn # perform operation
fnmsub.d f1, f12, f2, f22, rmm # perform operation
fnmsub.d f1, f12, f2, f22, rne # perform operation
fnmsub.d f1, f12, f2, f22, rtz # perform operation
fnmsub.d f1, f12, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f12, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f12, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f12, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f12, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f12, f2, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000)
li x1, 0xae14ba0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
li x3, 0x09afa2e1 # load x3 with 32 MSBs 0x0000000009afa2e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000009afa2e1
sw x3, 0(x2) # store x3 (0x09afa2e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000009afa2e1 from memory into f6
fnmsub.d f1, f22, f27, f6, dyn # perform operation
fnmsub.d f1, f22, f27, f6, rdn # perform operation
fnmsub.d f1, f22, f27, f6, rmm # perform operation
fnmsub.d f1, f22, f27, f6, rne # perform operation
fnmsub.d f1, f22, f27, f6, rtz # perform operation
fnmsub.d f1, f22, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f22, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f22, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f22, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f22, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f22, f27, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8008000000000000)
li x27, 0x996630d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
li x3, 0x1f31a96f # load x3 with 32 MSBs 0x000000001f31a96f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001f31a96f
sw x3, 0(x2) # store x3 (0x1f31a96f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000001f31a96f from memory into f4
fnmsub.d f27, f18, f12, f4, dyn # perform operation
fnmsub.d f27, f18, f12, f4, rdn # perform operation
fnmsub.d f27, f18, f12, f4, rmm # perform operation
fnmsub.d f27, f18, f12, f4, rne # perform operation
fnmsub.d f27, f18, f12, f4, rtz # perform operation
fnmsub.d f27, f18, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f18, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f18, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f18, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f18, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f18, f12, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x1)
li x25, 0xe4eee666 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
li x3, 0xbef74953 # load x3 with 32 MSBs 0x00000000bef74953
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bef74953
sw x3, 0(x2) # store x3 (0xbef74953) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000bef74953 from memory into f11
fnmsub.d f25, f10, f12, f11, dyn # perform operation
fnmsub.d f25, f10, f12, f11, rdn # perform operation
fnmsub.d f25, f10, f12, f11, rmm # perform operation
fnmsub.d f25, f10, f12, f11, rne # perform operation
fnmsub.d f25, f10, f12, f11, rtz # perform operation
fnmsub.d f25, f10, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f10, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f10, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f10, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f10, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f10, f12, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000001)
li x28, 0xa2e0a890 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
li x3, 0x546747d2 # load x3 with 32 MSBs 0x00000000546747d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000546747d2
sw x3, 0(x2) # store x3 (0x546747d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000546747d2 from memory into f17
fnmsub.d f28, f14, f1, f17, dyn # perform operation
fnmsub.d f28, f14, f1, f17, rdn # perform operation
fnmsub.d f28, f14, f1, f17, rmm # perform operation
fnmsub.d f28, f14, f1, f17, rne # perform operation
fnmsub.d f28, f14, f1, f17, rtz # perform operation
fnmsub.d f28, f14, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f14, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f14, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f14, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f14, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f14, f1, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000000)
li x15, 0x0c00f6ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
li x3, 0x4a73bdc1 # load x3 with 32 MSBs 0x000000004a73bdc1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004a73bdc1
sw x3, 0(x2) # store x3 (0x4a73bdc1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000004a73bdc1 from memory into f29
fnmsub.d f15, f10, f19, f29, dyn # perform operation
fnmsub.d f15, f10, f19, f29, rdn # perform operation
fnmsub.d f15, f10, f19, f29, rmm # perform operation
fnmsub.d f15, f10, f19, f29, rne # perform operation
fnmsub.d f15, f10, f19, f29, rtz # perform operation
fnmsub.d f15, f10, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f10, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f10, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f10, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f10, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f10, f19, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfff0000000000000)
li x17, 0x7e8b3777 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
li x3, 0xecf39a30 # load x3 with 32 MSBs 0x00000000ecf39a30
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ecf39a30
sw x3, 0(x2) # store x3 (0xecf39a30) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000ecf39a30 from memory into f21
fnmsub.d f17, f4, f25, f21, dyn # perform operation
fnmsub.d f17, f4, f25, f21, rdn # perform operation
fnmsub.d f17, f4, f25, f21, rmm # perform operation
fnmsub.d f17, f4, f25, f21, rne # perform operation
fnmsub.d f17, f4, f25, f21, rtz # perform operation
fnmsub.d f17, f4, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f4, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f4, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f4, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f4, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f4, f25, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff8000000000000)
li x17, 0xc14cb2ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
li x3, 0xc3e717a0 # load x3 with 32 MSBs 0x00000000c3e717a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c3e717a0
sw x3, 0(x2) # store x3 (0xc3e717a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000c3e717a0 from memory into f19
fnmsub.d f17, f4, f8, f19, dyn # perform operation
fnmsub.d f17, f4, f8, f19, rdn # perform operation
fnmsub.d f17, f4, f8, f19, rmm # perform operation
fnmsub.d f17, f4, f8, f19, rne # perform operation
fnmsub.d f17, f4, f8, f19, rtz # perform operation
fnmsub.d f17, f4, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f4, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f4, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f4, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f4, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f4, f8, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fffffffffffffff)
li x2, 0xac942c74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
li x3, 0x9b0ca828 # load x3 with 32 MSBs 0x000000009b0ca828
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b0ca828
sw x3, 0(x2) # store x3 (0x9b0ca828) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000009b0ca828 from memory into f23
fnmsub.d f2, f5, f22, f23, dyn # perform operation
fnmsub.d f2, f5, f22, f23, rdn # perform operation
fnmsub.d f2, f5, f22, f23, rmm # perform operation
fnmsub.d f2, f5, f22, f23, rne # perform operation
fnmsub.d f2, f5, f22, f23, rtz # perform operation
fnmsub.d f2, f5, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f5, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f5, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f5, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f5, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f5, f22, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000001)
li x13, 0xd0f5e6f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0xecc4e32c # load x3 with 32 MSBs 0x00000000ecc4e32c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ecc4e32c
sw x3, 0(x2) # store x3 (0xecc4e32c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000ecc4e32c from memory into f27
fnmsub.d f13, f29, f3, f27, dyn # perform operation
fnmsub.d f13, f29, f3, f27, rdn # perform operation
fnmsub.d f13, f29, f3, f27, rmm # perform operation
fnmsub.d f13, f29, f3, f27, rne # perform operation
fnmsub.d f13, f29, f3, f27, rtz # perform operation
fnmsub.d f13, f29, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f29, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f29, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f29, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f29, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f29, f3, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff7ffffffffffff)
li x10, 0xd68ec1d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
li x3, 0xa21d1e31 # load x3 with 32 MSBs 0x00000000a21d1e31
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a21d1e31
sw x3, 0(x2) # store x3 (0xa21d1e31) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000a21d1e31 from memory into f24
fnmsub.d f10, f2, f14, f24, dyn # perform operation
fnmsub.d f10, f2, f14, f24, rdn # perform operation
fnmsub.d f10, f2, f14, f24, rmm # perform operation
fnmsub.d f10, f2, f14, f24, rne # perform operation
fnmsub.d f10, f2, f14, f24, rtz # perform operation
fnmsub.d f10, f2, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f2, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f2, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f2, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f2, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f2, f14, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x5a392534a57711ad)
li x26, 0x343f10fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
li x3, 0xff32b4b3 # load x3 with 32 MSBs 0x00000000ff32b4b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff32b4b3
sw x3, 0(x2) # store x3 (0xff32b4b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000ff32b4b3 from memory into f18
fnmsub.d f26, f1, f10, f18, dyn # perform operation
fnmsub.d f26, f1, f10, f18, rdn # perform operation
fnmsub.d f26, f1, f10, f18, rmm # perform operation
fnmsub.d f26, f1, f10, f18, rne # perform operation
fnmsub.d f26, f1, f10, f18, rtz # perform operation
fnmsub.d f26, f1, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f1, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f1, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f1, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f1, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f1, f10, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xa6e895993737426c)
li x30, 0xe8e63bcd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
li x3, 0x2399bfec # load x3 with 32 MSBs 0x000000002399bfec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002399bfec
sw x3, 0(x2) # store x3 (0x2399bfec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000002399bfec from memory into f12
fnmsub.d f30, f26, f10, f12, dyn # perform operation
fnmsub.d f30, f26, f10, f12, rdn # perform operation
fnmsub.d f30, f26, f10, f12, rmm # perform operation
fnmsub.d f30, f26, f10, f12, rne # perform operation
fnmsub.d f30, f26, f10, f12, rtz # perform operation
fnmsub.d f30, f26, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f26, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f26, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f26, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f26, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f26, f10, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x0)
li x5, 0xd1039983 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
li x3, 0x899b7e91 # load x3 with 32 MSBs 0x00000000899b7e91
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000899b7e91
sw x3, 0(x2) # store x3 (0x899b7e91) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000899b7e91 from memory into f22
fnmsub.d f5, f10, f31, f22, dyn # perform operation
fnmsub.d f5, f10, f31, f22, rdn # perform operation
fnmsub.d f5, f10, f31, f22, rmm # perform operation
fnmsub.d f5, f10, f31, f22, rne # perform operation
fnmsub.d f5, f10, f31, f22, rtz # perform operation
fnmsub.d f5, f10, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f10, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f10, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f10, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f10, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f10, f31, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000000)
li x30, 0xaae865c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000000 from memory into f8
li x3, 0x35531716 # load x3 with 32 MSBs 0x0000000035531716
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035531716
sw x3, 0(x2) # store x3 (0x35531716) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000035531716 from memory into f1
fnmsub.d f30, f11, f8, f1, dyn # perform operation
fnmsub.d f30, f11, f8, f1, rdn # perform operation
fnmsub.d f30, f11, f8, f1, rmm # perform operation
fnmsub.d f30, f11, f8, f1, rne # perform operation
fnmsub.d f30, f11, f8, f1, rtz # perform operation
fnmsub.d f30, f11, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f11, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f11, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f11, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f11, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f11, f8, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff0000000000000)
li x19, 0xa96e0715 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0xc666464b # load x3 with 32 MSBs 0x00000000c666464b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c666464b
sw x3, 0(x2) # store x3 (0xc666464b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000c666464b from memory into f1
fnmsub.d f19, f11, f15, f1, dyn # perform operation
fnmsub.d f19, f11, f15, f1, rdn # perform operation
fnmsub.d f19, f11, f15, f1, rmm # perform operation
fnmsub.d f19, f11, f15, f1, rne # perform operation
fnmsub.d f19, f11, f15, f1, rtz # perform operation
fnmsub.d f19, f11, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f11, f15, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff0000000000000)
li x8, 0xb7df3542 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0x3e49b971 # load x3 with 32 MSBs 0x000000003e49b971
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e49b971
sw x3, 0(x2) # store x3 (0x3e49b971) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000003e49b971 from memory into f31
fnmsub.d f8, f27, f11, f31, dyn # perform operation
fnmsub.d f8, f27, f11, f31, rdn # perform operation
fnmsub.d f8, f27, f11, f31, rmm # perform operation
fnmsub.d f8, f27, f11, f31, rne # perform operation
fnmsub.d f8, f27, f11, f31, rtz # perform operation
fnmsub.d f8, f27, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f27, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f27, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f27, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f27, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f27, f11, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff8000000000000)
li x29, 0x5d49f098 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
li x3, 0xd65361fa # load x3 with 32 MSBs 0x00000000d65361fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d65361fa
sw x3, 0(x2) # store x3 (0xd65361fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000d65361fa from memory into f9
fnmsub.d f29, f6, f19, f9, dyn # perform operation
fnmsub.d f29, f6, f19, f9, rdn # perform operation
fnmsub.d f29, f6, f19, f9, rmm # perform operation
fnmsub.d f29, f6, f19, f9, rne # perform operation
fnmsub.d f29, f6, f19, f9, rtz # perform operation
fnmsub.d f29, f6, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f6, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f6, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f6, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f6, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f6, f19, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff8000000000000)
li x8, 0xa5742e39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
li x3, 0x0d78a1b0 # load x3 with 32 MSBs 0x000000000d78a1b0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d78a1b0
sw x3, 0(x2) # store x3 (0x0d78a1b0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000000d78a1b0 from memory into f17
fnmsub.d f8, f2, f24, f17, dyn # perform operation
fnmsub.d f8, f2, f24, f17, rdn # perform operation
fnmsub.d f8, f2, f24, f17, rmm # perform operation
fnmsub.d f8, f2, f24, f17, rne # perform operation
fnmsub.d f8, f2, f24, f17, rtz # perform operation
fnmsub.d f8, f2, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f2, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f2, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f2, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f2, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f2, f24, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x4000000000000000)
li x10, 0x484891ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
li x3, 0xfee6d391 # load x3 with 32 MSBs 0x00000000fee6d391
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fee6d391
sw x3, 0(x2) # store x3 (0xfee6d391) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000fee6d391 from memory into f9
fnmsub.d f10, f22, f18, f9, dyn # perform operation
fnmsub.d f10, f22, f18, f9, rdn # perform operation
fnmsub.d f10, f22, f18, f9, rmm # perform operation
fnmsub.d f10, f22, f18, f9, rne # perform operation
fnmsub.d f10, f22, f18, f9, rtz # perform operation
fnmsub.d f10, f22, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f22, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f22, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f22, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f22, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f22, f18, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xc000000000000000)
li x12, 0xbfb5e89a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
li x3, 0x647eb9ba # load x3 with 32 MSBs 0x00000000647eb9ba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000647eb9ba
sw x3, 0(x2) # store x3 (0x647eb9ba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000647eb9ba from memory into f18
fnmsub.d f12, f17, f7, f18, dyn # perform operation
fnmsub.d f12, f17, f7, f18, rdn # perform operation
fnmsub.d f12, f17, f7, f18, rmm # perform operation
fnmsub.d f12, f17, f7, f18, rne # perform operation
fnmsub.d f12, f17, f7, f18, rtz # perform operation
fnmsub.d f12, f17, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f17, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f17, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f17, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f17, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f17, f7, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x10000000000000)
li x13, 0xe3ee8c7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
li x3, 0xbeedc831 # load x3 with 32 MSBs 0x00000000beedc831
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000beedc831
sw x3, 0(x2) # store x3 (0xbeedc831) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000beedc831 from memory into f23
fnmsub.d f13, f26, f9, f23, dyn # perform operation
fnmsub.d f13, f26, f9, f23, rdn # perform operation
fnmsub.d f13, f26, f9, f23, rmm # perform operation
fnmsub.d f13, f26, f9, f23, rne # perform operation
fnmsub.d f13, f26, f9, f23, rtz # perform operation
fnmsub.d f13, f26, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f26, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f26, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f26, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f26, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f26, f9, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8010000000000000)
li x17, 0x8b434d8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
li x3, 0x82e83671 # load x3 with 32 MSBs 0x0000000082e83671
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000082e83671
sw x3, 0(x2) # store x3 (0x82e83671) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000082e83671 from memory into f19
fnmsub.d f17, f31, f2, f19, dyn # perform operation
fnmsub.d f17, f31, f2, f19, rdn # perform operation
fnmsub.d f17, f31, f2, f19, rmm # perform operation
fnmsub.d f17, f31, f2, f19, rne # perform operation
fnmsub.d f17, f31, f2, f19, rtz # perform operation
fnmsub.d f17, f31, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f31, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f31, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f31, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f31, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f31, f2, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fefffffffffffff)
li x11, 0x1ff59d4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
li x3, 0xa9f3b917 # load x3 with 32 MSBs 0x00000000a9f3b917
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9f3b917
sw x3, 0(x2) # store x3 (0xa9f3b917) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000a9f3b917 from memory into f13
fnmsub.d f11, f26, f1, f13, dyn # perform operation
fnmsub.d f11, f26, f1, f13, rdn # perform operation
fnmsub.d f11, f26, f1, f13, rmm # perform operation
fnmsub.d f11, f26, f1, f13, rne # perform operation
fnmsub.d f11, f26, f1, f13, rtz # perform operation
fnmsub.d f11, f26, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f26, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f26, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f26, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f26, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f26, f1, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xffefffffffffffff)
li x10, 0x0c875edc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xffefffffffffffff from memory into f21
li x3, 0x063c85b2 # load x3 with 32 MSBs 0x00000000063c85b2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000063c85b2
sw x3, 0(x2) # store x3 (0x063c85b2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000063c85b2 from memory into f12
fnmsub.d f10, f28, f21, f12, dyn # perform operation
fnmsub.d f10, f28, f21, f12, rdn # perform operation
fnmsub.d f10, f28, f21, f12, rmm # perform operation
fnmsub.d f10, f28, f21, f12, rne # perform operation
fnmsub.d f10, f28, f21, f12, rtz # perform operation
fnmsub.d f10, f28, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f28, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f28, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f28, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f28, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f28, f21, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfffffffffffff)
li x27, 0xf232b183 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
li x3, 0x906c3230 # load x3 with 32 MSBs 0x00000000906c3230
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000906c3230
sw x3, 0(x2) # store x3 (0x906c3230) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000906c3230 from memory into f2
fnmsub.d f27, f29, f25, f2, dyn # perform operation
fnmsub.d f27, f29, f25, f2, rdn # perform operation
fnmsub.d f27, f29, f25, f2, rmm # perform operation
fnmsub.d f27, f29, f25, f2, rne # perform operation
fnmsub.d f27, f29, f25, f2, rtz # perform operation
fnmsub.d f27, f29, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f29, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f29, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f29, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f29, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f29, f25, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x800fffffffffffff)
li x22, 0x95f27cbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
li x3, 0x2528e95e # load x3 with 32 MSBs 0x000000002528e95e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002528e95e
sw x3, 0(x2) # store x3 (0x2528e95e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000002528e95e from memory into f21
fnmsub.d f22, f16, f20, f21, dyn # perform operation
fnmsub.d f22, f16, f20, f21, rdn # perform operation
fnmsub.d f22, f16, f20, f21, rmm # perform operation
fnmsub.d f22, f16, f20, f21, rne # perform operation
fnmsub.d f22, f16, f20, f21, rtz # perform operation
fnmsub.d f22, f16, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f16, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f16, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f16, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f16, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f16, f20, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000)
li x25, 0xaf2c668b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
li x3, 0x3b0a628b # load x3 with 32 MSBs 0x000000003b0a628b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003b0a628b
sw x3, 0(x2) # store x3 (0x3b0a628b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000003b0a628b from memory into f21
fnmsub.d f25, f28, f27, f21, dyn # perform operation
fnmsub.d f25, f28, f27, f21, rdn # perform operation
fnmsub.d f25, f28, f27, f21, rmm # perform operation
fnmsub.d f25, f28, f27, f21, rne # perform operation
fnmsub.d f25, f28, f27, f21, rtz # perform operation
fnmsub.d f25, f28, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f28, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f28, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f28, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f28, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f28, f27, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8008000000000000)
li x3, 0xff477b19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
li x3, 0x659d979b # load x3 with 32 MSBs 0x00000000659d979b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000659d979b
sw x3, 0(x2) # store x3 (0x659d979b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000659d979b from memory into f2
fnmsub.d f3, f11, f17, f2, dyn # perform operation
fnmsub.d f3, f11, f17, f2, rdn # perform operation
fnmsub.d f3, f11, f17, f2, rmm # perform operation
fnmsub.d f3, f11, f17, f2, rne # perform operation
fnmsub.d f3, f11, f17, f2, rtz # perform operation
fnmsub.d f3, f11, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f11, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x1)
li x14, 0x30cc61d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
li x3, 0xc74ff9b1 # load x3 with 32 MSBs 0x00000000c74ff9b1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c74ff9b1
sw x3, 0(x2) # store x3 (0xc74ff9b1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000c74ff9b1 from memory into f23
fnmsub.d f14, f11, f19, f23, dyn # perform operation
fnmsub.d f14, f11, f19, f23, rdn # perform operation
fnmsub.d f14, f11, f19, f23, rmm # perform operation
fnmsub.d f14, f11, f19, f23, rne # perform operation
fnmsub.d f14, f11, f19, f23, rtz # perform operation
fnmsub.d f14, f11, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f11, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f11, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f11, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f11, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f11, f19, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000001)
li x11, 0xf68ddcf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
li x3, 0x54e0cb85 # load x3 with 32 MSBs 0x0000000054e0cb85
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000054e0cb85
sw x3, 0(x2) # store x3 (0x54e0cb85) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000054e0cb85 from memory into f7
fnmsub.d f11, f14, f27, f7, dyn # perform operation
fnmsub.d f11, f14, f27, f7, rdn # perform operation
fnmsub.d f11, f14, f27, f7, rmm # perform operation
fnmsub.d f11, f14, f27, f7, rne # perform operation
fnmsub.d f11, f14, f27, f7, rtz # perform operation
fnmsub.d f11, f14, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f14, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f14, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f14, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f14, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f14, f27, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000000)
li x3, 0x581eaed2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000000 from memory into f2
li x3, 0x7c0e0ff3 # load x3 with 32 MSBs 0x000000007c0e0ff3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007c0e0ff3
sw x3, 0(x2) # store x3 (0x7c0e0ff3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000007c0e0ff3 from memory into f18
fnmsub.d f3, f31, f2, f18, dyn # perform operation
fnmsub.d f3, f31, f2, f18, rdn # perform operation
fnmsub.d f3, f31, f2, f18, rmm # perform operation
fnmsub.d f3, f31, f2, f18, rne # perform operation
fnmsub.d f3, f31, f2, f18, rtz # perform operation
fnmsub.d f3, f31, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f31, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f31, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f31, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f31, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f31, f2, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfff0000000000000)
li x11, 0x0aee9f7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
li x3, 0xcd60e428 # load x3 with 32 MSBs 0x00000000cd60e428
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cd60e428
sw x3, 0(x2) # store x3 (0xcd60e428) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000cd60e428 from memory into f28
fnmsub.d f11, f2, f30, f28, dyn # perform operation
fnmsub.d f11, f2, f30, f28, rdn # perform operation
fnmsub.d f11, f2, f30, f28, rmm # perform operation
fnmsub.d f11, f2, f30, f28, rne # perform operation
fnmsub.d f11, f2, f30, f28, rtz # perform operation
fnmsub.d f11, f2, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f2, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f2, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f2, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f2, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f2, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff8000000000000)
li x27, 0xf8bfb470 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0x551e1f2e # load x3 with 32 MSBs 0x00000000551e1f2e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000551e1f2e
sw x3, 0(x2) # store x3 (0x551e1f2e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000551e1f2e from memory into f20
fnmsub.d f27, f22, f6, f20, dyn # perform operation
fnmsub.d f27, f22, f6, f20, rdn # perform operation
fnmsub.d f27, f22, f6, f20, rmm # perform operation
fnmsub.d f27, f22, f6, f20, rne # perform operation
fnmsub.d f27, f22, f6, f20, rtz # perform operation
fnmsub.d f27, f22, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f22, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f22, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f22, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f22, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f22, f6, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fffffffffffffff)
li x1, 0xe0b810f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
li x3, 0x04c4b586 # load x3 with 32 MSBs 0x0000000004c4b586
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000004c4b586
sw x3, 0(x2) # store x3 (0x04c4b586) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000004c4b586 from memory into f4
fnmsub.d f1, f16, f15, f4, dyn # perform operation
fnmsub.d f1, f16, f15, f4, rdn # perform operation
fnmsub.d f1, f16, f15, f4, rmm # perform operation
fnmsub.d f1, f16, f15, f4, rne # perform operation
fnmsub.d f1, f16, f15, f4, rtz # perform operation
fnmsub.d f1, f16, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f16, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f16, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f16, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f16, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f16, f15, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000001)
li x30, 0x8d5453ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
li x3, 0x08de0cd7 # load x3 with 32 MSBs 0x0000000008de0cd7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000008de0cd7
sw x3, 0(x2) # store x3 (0x08de0cd7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000008de0cd7 from memory into f17
fnmsub.d f30, f27, f13, f17, dyn # perform operation
fnmsub.d f30, f27, f13, f17, rdn # perform operation
fnmsub.d f30, f27, f13, f17, rmm # perform operation
fnmsub.d f30, f27, f13, f17, rne # perform operation
fnmsub.d f30, f27, f13, f17, rtz # perform operation
fnmsub.d f30, f27, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f27, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f27, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f27, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f27, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f27, f13, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x28, 0x36efa94c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
li x3, 0x16b0f6af # load x3 with 32 MSBs 0x0000000016b0f6af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000016b0f6af
sw x3, 0(x2) # store x3 (0x16b0f6af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000016b0f6af from memory into f6
fnmsub.d f28, f20, f3, f6, dyn # perform operation
fnmsub.d f28, f20, f3, f6, rdn # perform operation
fnmsub.d f28, f20, f3, f6, rmm # perform operation
fnmsub.d f28, f20, f3, f6, rne # perform operation
fnmsub.d f28, f20, f3, f6, rtz # perform operation
fnmsub.d f28, f20, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f20, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f20, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f20, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f20, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f20, f3, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x5a392534a57711ad)
li x4, 0x14487914 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
li x3, 0x8c5bfdc6 # load x3 with 32 MSBs 0x000000008c5bfdc6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c5bfdc6
sw x3, 0(x2) # store x3 (0x8c5bfdc6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000008c5bfdc6 from memory into f25
fnmsub.d f4, f11, f28, f25, dyn # perform operation
fnmsub.d f4, f11, f28, f25, rdn # perform operation
fnmsub.d f4, f11, f28, f25, rmm # perform operation
fnmsub.d f4, f11, f28, f25, rne # perform operation
fnmsub.d f4, f11, f28, f25, rtz # perform operation
fnmsub.d f4, f11, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f11, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f11, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f11, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f11, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f11, f28, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xa6e895993737426c)
li x16, 0xbeda4669 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff0000000000000 from memory into f4
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
li x3, 0xa44b2934 # load x3 with 32 MSBs 0x00000000a44b2934
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a44b2934
sw x3, 0(x2) # store x3 (0xa44b2934) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000a44b2934 from memory into f6
fnmsub.d f16, f4, f30, f6, dyn # perform operation
fnmsub.d f16, f4, f30, f6, rdn # perform operation
fnmsub.d f16, f4, f30, f6, rmm # perform operation
fnmsub.d f16, f4, f30, f6, rne # perform operation
fnmsub.d f16, f4, f30, f6, rtz # perform operation
fnmsub.d f16, f4, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f4, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f4, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f4, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f4, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f4, f30, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x0)
li x29, 0x7dccd222 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0xd44fb5ca # load x3 with 32 MSBs 0x00000000d44fb5ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d44fb5ca
sw x3, 0(x2) # store x3 (0xd44fb5ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000d44fb5ca from memory into f25
fnmsub.d f29, f24, f2, f25, dyn # perform operation
fnmsub.d f29, f24, f2, f25, rdn # perform operation
fnmsub.d f29, f24, f2, f25, rmm # perform operation
fnmsub.d f29, f24, f2, f25, rne # perform operation
fnmsub.d f29, f24, f2, f25, rtz # perform operation
fnmsub.d f29, f24, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f24, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f24, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f24, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f24, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f24, f2, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000000)
li x18, 0x1a1426ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
li x3, 0x69212da7 # load x3 with 32 MSBs 0x0000000069212da7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000069212da7
sw x3, 0(x2) # store x3 (0x69212da7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000069212da7 from memory into f1
fnmsub.d f18, f24, f25, f1, dyn # perform operation
fnmsub.d f18, f24, f25, f1, rdn # perform operation
fnmsub.d f18, f24, f25, f1, rmm # perform operation
fnmsub.d f18, f24, f25, f1, rne # perform operation
fnmsub.d f18, f24, f25, f1, rtz # perform operation
fnmsub.d f18, f24, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f24, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f24, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f24, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f24, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f24, f25, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff0000000000000)
li x9, 0x754d928a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
li x3, 0x635f0d60 # load x3 with 32 MSBs 0x00000000635f0d60
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000635f0d60
sw x3, 0(x2) # store x3 (0x635f0d60) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000635f0d60 from memory into f21
fnmsub.d f9, f13, f7, f21, dyn # perform operation
fnmsub.d f9, f13, f7, f21, rdn # perform operation
fnmsub.d f9, f13, f7, f21, rmm # perform operation
fnmsub.d f9, f13, f7, f21, rne # perform operation
fnmsub.d f9, f13, f7, f21, rtz # perform operation
fnmsub.d f9, f13, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f13, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f13, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f13, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f13, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f13, f7, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff0000000000000)
li x23, 0xe019755b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff0000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
li x3, 0x153c17d5 # load x3 with 32 MSBs 0x00000000153c17d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000153c17d5
sw x3, 0(x2) # store x3 (0x153c17d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000153c17d5 from memory into f20
fnmsub.d f23, f14, f30, f20, dyn # perform operation
fnmsub.d f23, f14, f30, f20, rdn # perform operation
fnmsub.d f23, f14, f30, f20, rmm # perform operation
fnmsub.d f23, f14, f30, f20, rne # perform operation
fnmsub.d f23, f14, f30, f20, rtz # perform operation
fnmsub.d f23, f14, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f14, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f14, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f14, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f14, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f14, f30, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff8000000000000)
li x12, 0x06871ac4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
li x3, 0x53f705af # load x3 with 32 MSBs 0x0000000053f705af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000053f705af
sw x3, 0(x2) # store x3 (0x53f705af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000053f705af from memory into f1
fnmsub.d f12, f28, f13, f1, dyn # perform operation
fnmsub.d f12, f28, f13, f1, rdn # perform operation
fnmsub.d f12, f28, f13, f1, rmm # perform operation
fnmsub.d f12, f28, f13, f1, rne # perform operation
fnmsub.d f12, f28, f13, f1, rtz # perform operation
fnmsub.d f12, f28, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f28, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f28, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f28, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f28, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f28, f13, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff8000000000000)
li x23, 0xcfcb333f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
li x3, 0xa86f65e4 # load x3 with 32 MSBs 0x00000000a86f65e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a86f65e4
sw x3, 0(x2) # store x3 (0xa86f65e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000a86f65e4 from memory into f7
fnmsub.d f23, f3, f16, f7, dyn # perform operation
fnmsub.d f23, f3, f16, f7, rdn # perform operation
fnmsub.d f23, f3, f16, f7, rmm # perform operation
fnmsub.d f23, f3, f16, f7, rne # perform operation
fnmsub.d f23, f3, f16, f7, rtz # perform operation
fnmsub.d f23, f3, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f3, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f3, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f3, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f3, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f3, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x4000000000000000)
li x1, 0x9c48fda7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0xe4bb6231 # load x3 with 32 MSBs 0x00000000e4bb6231
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4bb6231
sw x3, 0(x2) # store x3 (0xe4bb6231) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000e4bb6231 from memory into f22
fnmsub.d f1, f2, f26, f22, dyn # perform operation
fnmsub.d f1, f2, f26, f22, rdn # perform operation
fnmsub.d f1, f2, f26, f22, rmm # perform operation
fnmsub.d f1, f2, f26, f22, rne # perform operation
fnmsub.d f1, f2, f26, f22, rtz # perform operation
fnmsub.d f1, f2, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f2, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f2, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f2, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f2, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f2, f26, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xc000000000000000)
li x10, 0xcfb85684 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
li x3, 0x26dd1633 # load x3 with 32 MSBs 0x0000000026dd1633
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000026dd1633
sw x3, 0(x2) # store x3 (0x26dd1633) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000026dd1633 from memory into f11
fnmsub.d f10, f2, f29, f11, dyn # perform operation
fnmsub.d f10, f2, f29, f11, rdn # perform operation
fnmsub.d f10, f2, f29, f11, rmm # perform operation
fnmsub.d f10, f2, f29, f11, rne # perform operation
fnmsub.d f10, f2, f29, f11, rtz # perform operation
fnmsub.d f10, f2, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f2, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f2, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f2, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f2, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f2, f29, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x10000000000000)
li x6, 0x3e6dee7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0x732936e4 # load x3 with 32 MSBs 0x00000000732936e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000732936e4
sw x3, 0(x2) # store x3 (0x732936e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000732936e4 from memory into f10
fnmsub.d f6, f1, f15, f10, dyn # perform operation
fnmsub.d f6, f1, f15, f10, rdn # perform operation
fnmsub.d f6, f1, f15, f10, rmm # perform operation
fnmsub.d f6, f1, f15, f10, rne # perform operation
fnmsub.d f6, f1, f15, f10, rtz # perform operation
fnmsub.d f6, f1, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f1, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f1, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f1, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f1, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f1, f15, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8010000000000000)
li x9, 0x20fea9e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
li x3, 0xeb222a94 # load x3 with 32 MSBs 0x00000000eb222a94
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb222a94
sw x3, 0(x2) # store x3 (0xeb222a94) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000eb222a94 from memory into f4
fnmsub.d f9, f24, f3, f4, dyn # perform operation
fnmsub.d f9, f24, f3, f4, rdn # perform operation
fnmsub.d f9, f24, f3, f4, rmm # perform operation
fnmsub.d f9, f24, f3, f4, rne # perform operation
fnmsub.d f9, f24, f3, f4, rtz # perform operation
fnmsub.d f9, f24, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f24, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f24, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f24, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f24, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f24, f3, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fefffffffffffff)
li x1, 0xa37cbdcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0x904571a9 # load x3 with 32 MSBs 0x00000000904571a9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000904571a9
sw x3, 0(x2) # store x3 (0x904571a9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000904571a9 from memory into f21
fnmsub.d f1, f29, f17, f21, dyn # perform operation
fnmsub.d f1, f29, f17, f21, rdn # perform operation
fnmsub.d f1, f29, f17, f21, rmm # perform operation
fnmsub.d f1, f29, f17, f21, rne # perform operation
fnmsub.d f1, f29, f17, f21, rtz # perform operation
fnmsub.d f1, f29, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f29, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f29, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f29, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f29, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f29, f17, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xffefffffffffffff)
li x24, 0x97cab75d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
li x3, 0xfc02091c # load x3 with 32 MSBs 0x00000000fc02091c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fc02091c
sw x3, 0(x2) # store x3 (0xfc02091c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000fc02091c from memory into f25
fnmsub.d f24, f5, f4, f25, dyn # perform operation
fnmsub.d f24, f5, f4, f25, rdn # perform operation
fnmsub.d f24, f5, f4, f25, rmm # perform operation
fnmsub.d f24, f5, f4, f25, rne # perform operation
fnmsub.d f24, f5, f4, f25, rtz # perform operation
fnmsub.d f24, f5, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f5, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f5, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f5, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f5, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f5, f4, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfffffffffffff)
li x22, 0xd01c0466 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
li x3, 0xd66c402f # load x3 with 32 MSBs 0x00000000d66c402f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d66c402f
sw x3, 0(x2) # store x3 (0xd66c402f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000d66c402f from memory into f18
fnmsub.d f22, f21, f9, f18, dyn # perform operation
fnmsub.d f22, f21, f9, f18, rdn # perform operation
fnmsub.d f22, f21, f9, f18, rmm # perform operation
fnmsub.d f22, f21, f9, f18, rne # perform operation
fnmsub.d f22, f21, f9, f18, rtz # perform operation
fnmsub.d f22, f21, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f21, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f21, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f21, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f21, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f21, f9, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x800fffffffffffff)
li x4, 0x8472e0ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
li x3, 0x382382ec # load x3 with 32 MSBs 0x00000000382382ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000382382ec
sw x3, 0(x2) # store x3 (0x382382ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000382382ec from memory into f2
fnmsub.d f4, f11, f3, f2, dyn # perform operation
fnmsub.d f4, f11, f3, f2, rdn # perform operation
fnmsub.d f4, f11, f3, f2, rmm # perform operation
fnmsub.d f4, f11, f3, f2, rne # perform operation
fnmsub.d f4, f11, f3, f2, rtz # perform operation
fnmsub.d f4, f11, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f11, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f11, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f11, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f11, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f11, f3, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000)
li x2, 0x59068630 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0x24a0b482 # load x3 with 32 MSBs 0x0000000024a0b482
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000024a0b482
sw x3, 0(x2) # store x3 (0x24a0b482) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000024a0b482 from memory into f11
fnmsub.d f2, f13, f31, f11, dyn # perform operation
fnmsub.d f2, f13, f31, f11, rdn # perform operation
fnmsub.d f2, f13, f31, f11, rmm # perform operation
fnmsub.d f2, f13, f31, f11, rne # perform operation
fnmsub.d f2, f13, f31, f11, rtz # perform operation
fnmsub.d f2, f13, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f13, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f13, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f13, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f13, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f13, f31, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8008000000000000)
li x8, 0x7405532f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
li x3, 0xf1ac2de0 # load x3 with 32 MSBs 0x00000000f1ac2de0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f1ac2de0
sw x3, 0(x2) # store x3 (0xf1ac2de0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000f1ac2de0 from memory into f20
fnmsub.d f8, f4, f13, f20, dyn # perform operation
fnmsub.d f8, f4, f13, f20, rdn # perform operation
fnmsub.d f8, f4, f13, f20, rmm # perform operation
fnmsub.d f8, f4, f13, f20, rne # perform operation
fnmsub.d f8, f4, f13, f20, rtz # perform operation
fnmsub.d f8, f4, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f4, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f4, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f4, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f4, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f4, f13, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x1)
li x8, 0xb854b050 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
li x3, 0xf88a6e77 # load x3 with 32 MSBs 0x00000000f88a6e77
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f88a6e77
sw x3, 0(x2) # store x3 (0xf88a6e77) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000f88a6e77 from memory into f27
fnmsub.d f8, f21, f23, f27, dyn # perform operation
fnmsub.d f8, f21, f23, f27, rdn # perform operation
fnmsub.d f8, f21, f23, f27, rmm # perform operation
fnmsub.d f8, f21, f23, f27, rne # perform operation
fnmsub.d f8, f21, f23, f27, rtz # perform operation
fnmsub.d f8, f21, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f21, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f21, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f21, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f21, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f21, f23, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000001)
li x4, 0x4b5427a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
li x3, 0x6be80d90 # load x3 with 32 MSBs 0x000000006be80d90
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006be80d90
sw x3, 0(x2) # store x3 (0x6be80d90) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000006be80d90 from memory into f16
fnmsub.d f4, f3, f2, f16, dyn # perform operation
fnmsub.d f4, f3, f2, f16, rdn # perform operation
fnmsub.d f4, f3, f2, f16, rmm # perform operation
fnmsub.d f4, f3, f2, f16, rne # perform operation
fnmsub.d f4, f3, f2, f16, rtz # perform operation
fnmsub.d f4, f3, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f3, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f3, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f3, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f3, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f3, f2, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000000)
li x14, 0x52cdf7bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
li x3, 0x12f14de1 # load x3 with 32 MSBs 0x0000000012f14de1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000012f14de1
sw x3, 0(x2) # store x3 (0x12f14de1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000012f14de1 from memory into f19
fnmsub.d f14, f27, f26, f19, dyn # perform operation
fnmsub.d f14, f27, f26, f19, rdn # perform operation
fnmsub.d f14, f27, f26, f19, rmm # perform operation
fnmsub.d f14, f27, f26, f19, rne # perform operation
fnmsub.d f14, f27, f26, f19, rtz # perform operation
fnmsub.d f14, f27, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f27, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f27, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f27, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f27, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f27, f26, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfff0000000000000)
li x12, 0x16226675 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0x3cd1d8d8 # load x3 with 32 MSBs 0x000000003cd1d8d8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003cd1d8d8
sw x3, 0(x2) # store x3 (0x3cd1d8d8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000003cd1d8d8 from memory into f27
fnmsub.d f12, f26, f1, f27, dyn # perform operation
fnmsub.d f12, f26, f1, f27, rdn # perform operation
fnmsub.d f12, f26, f1, f27, rmm # perform operation
fnmsub.d f12, f26, f1, f27, rne # perform operation
fnmsub.d f12, f26, f1, f27, rtz # perform operation
fnmsub.d f12, f26, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f26, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f26, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f26, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f26, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f26, f1, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff8000000000000)
li x24, 0x354aa1f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
li x3, 0x0d47f51a # load x3 with 32 MSBs 0x000000000d47f51a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d47f51a
sw x3, 0(x2) # store x3 (0x0d47f51a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000000d47f51a from memory into f4
fnmsub.d f24, f8, f3, f4, dyn # perform operation
fnmsub.d f24, f8, f3, f4, rdn # perform operation
fnmsub.d f24, f8, f3, f4, rmm # perform operation
fnmsub.d f24, f8, f3, f4, rne # perform operation
fnmsub.d f24, f8, f3, f4, rtz # perform operation
fnmsub.d f24, f8, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f8, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f8, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f8, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f8, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f8, f3, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fffffffffffffff)
li x29, 0xf5bcd0c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
li x3, 0x54190cfe # load x3 with 32 MSBs 0x0000000054190cfe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000054190cfe
sw x3, 0(x2) # store x3 (0x54190cfe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000054190cfe from memory into f2
fnmsub.d f29, f10, f31, f2, dyn # perform operation
fnmsub.d f29, f10, f31, f2, rdn # perform operation
fnmsub.d f29, f10, f31, f2, rmm # perform operation
fnmsub.d f29, f10, f31, f2, rne # perform operation
fnmsub.d f29, f10, f31, f2, rtz # perform operation
fnmsub.d f29, f10, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f10, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f10, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f10, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f10, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f10, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000001)
li x13, 0xbb8a89c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0x8bac5053 # load x3 with 32 MSBs 0x000000008bac5053
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008bac5053
sw x3, 0(x2) # store x3 (0x8bac5053) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000008bac5053 from memory into f21
fnmsub.d f13, f12, f3, f21, dyn # perform operation
fnmsub.d f13, f12, f3, f21, rdn # perform operation
fnmsub.d f13, f12, f3, f21, rmm # perform operation
fnmsub.d f13, f12, f3, f21, rne # perform operation
fnmsub.d f13, f12, f3, f21, rtz # perform operation
fnmsub.d f13, f12, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f12, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f12, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f12, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f12, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f12, f3, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x27, 0xe519667f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0x798c8255 # load x3 with 32 MSBs 0x00000000798c8255
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000798c8255
sw x3, 0(x2) # store x3 (0x798c8255) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000798c8255 from memory into f14
fnmsub.d f27, f23, f15, f14, dyn # perform operation
fnmsub.d f27, f23, f15, f14, rdn # perform operation
fnmsub.d f27, f23, f15, f14, rmm # perform operation
fnmsub.d f27, f23, f15, f14, rne # perform operation
fnmsub.d f27, f23, f15, f14, rtz # perform operation
fnmsub.d f27, f23, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f23, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f23, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f23, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f23, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f23, f15, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x5a392534a57711ad)
li x26, 0xf4c9930b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
li x3, 0xe8c8583b # load x3 with 32 MSBs 0x00000000e8c8583b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8c8583b
sw x3, 0(x2) # store x3 (0xe8c8583b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000e8c8583b from memory into f28
fnmsub.d f26, f11, f9, f28, dyn # perform operation
fnmsub.d f26, f11, f9, f28, rdn # perform operation
fnmsub.d f26, f11, f9, f28, rmm # perform operation
fnmsub.d f26, f11, f9, f28, rne # perform operation
fnmsub.d f26, f11, f9, f28, rtz # perform operation
fnmsub.d f26, f11, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f11, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f11, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f11, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f11, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f11, f9, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xa6e895993737426c)
li x6, 0xebac995c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xa6e895993737426c from memory into f13
li x3, 0x56a149d1 # load x3 with 32 MSBs 0x0000000056a149d1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000056a149d1
sw x3, 0(x2) # store x3 (0x56a149d1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000056a149d1 from memory into f14
fnmsub.d f6, f12, f13, f14, dyn # perform operation
fnmsub.d f6, f12, f13, f14, rdn # perform operation
fnmsub.d f6, f12, f13, f14, rmm # perform operation
fnmsub.d f6, f12, f13, f14, rne # perform operation
fnmsub.d f6, f12, f13, f14, rtz # perform operation
fnmsub.d f6, f12, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f12, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f12, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f12, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f12, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f12, f13, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x0)
li x14, 0xca0b279d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
li x3, 0xb1102b10 # load x3 with 32 MSBs 0x00000000b1102b10
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1102b10
sw x3, 0(x2) # store x3 (0xb1102b10) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000b1102b10 from memory into f19
fnmsub.d f14, f16, f31, f19, dyn # perform operation
fnmsub.d f14, f16, f31, f19, rdn # perform operation
fnmsub.d f14, f16, f31, f19, rmm # perform operation
fnmsub.d f14, f16, f31, f19, rne # perform operation
fnmsub.d f14, f16, f31, f19, rtz # perform operation
fnmsub.d f14, f16, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f16, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f16, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f16, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f16, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f16, f31, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000000)
li x1, 0xdbab4ffb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
li x3, 0x43443a76 # load x3 with 32 MSBs 0x0000000043443a76
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000043443a76
sw x3, 0(x2) # store x3 (0x43443a76) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000043443a76 from memory into f4
fnmsub.d f1, f31, f27, f4, dyn # perform operation
fnmsub.d f1, f31, f27, f4, rdn # perform operation
fnmsub.d f1, f31, f27, f4, rmm # perform operation
fnmsub.d f1, f31, f27, f4, rne # perform operation
fnmsub.d f1, f31, f27, f4, rtz # perform operation
fnmsub.d f1, f31, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f31, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f31, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f31, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f31, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f31, f27, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff0000000000000)
li x30, 0x564e84ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0x4f3fae35 # load x3 with 32 MSBs 0x000000004f3fae35
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f3fae35
sw x3, 0(x2) # store x3 (0x4f3fae35) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000004f3fae35 from memory into f28
fnmsub.d f30, f27, f6, f28, dyn # perform operation
fnmsub.d f30, f27, f6, f28, rdn # perform operation
fnmsub.d f30, f27, f6, f28, rmm # perform operation
fnmsub.d f30, f27, f6, f28, rne # perform operation
fnmsub.d f30, f27, f6, f28, rtz # perform operation
fnmsub.d f30, f27, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f27, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f27, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f27, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f27, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f27, f6, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff0000000000000)
li x25, 0xd23e5c4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
li x3, 0xd1b42f14 # load x3 with 32 MSBs 0x00000000d1b42f14
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1b42f14
sw x3, 0(x2) # store x3 (0xd1b42f14) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000d1b42f14 from memory into f24
fnmsub.d f25, f26, f20, f24, dyn # perform operation
fnmsub.d f25, f26, f20, f24, rdn # perform operation
fnmsub.d f25, f26, f20, f24, rmm # perform operation
fnmsub.d f25, f26, f20, f24, rne # perform operation
fnmsub.d f25, f26, f20, f24, rtz # perform operation
fnmsub.d f25, f26, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f26, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f26, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f26, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f26, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f26, f20, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff8000000000000)
li x28, 0x97824cdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
li x3, 0x54beb73e # load x3 with 32 MSBs 0x0000000054beb73e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000054beb73e
sw x3, 0(x2) # store x3 (0x54beb73e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000054beb73e from memory into f6
fnmsub.d f28, f21, f20, f6, dyn # perform operation
fnmsub.d f28, f21, f20, f6, rdn # perform operation
fnmsub.d f28, f21, f20, f6, rmm # perform operation
fnmsub.d f28, f21, f20, f6, rne # perform operation
fnmsub.d f28, f21, f20, f6, rtz # perform operation
fnmsub.d f28, f21, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f21, f20, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff8000000000000)
li x26, 0xfedc6915 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
li x3, 0x036e44dd # load x3 with 32 MSBs 0x00000000036e44dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000036e44dd
sw x3, 0(x2) # store x3 (0x036e44dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000036e44dd from memory into f12
fnmsub.d f26, f7, f22, f12, dyn # perform operation
fnmsub.d f26, f7, f22, f12, rdn # perform operation
fnmsub.d f26, f7, f22, f12, rmm # perform operation
fnmsub.d f26, f7, f22, f12, rne # perform operation
fnmsub.d f26, f7, f22, f12, rtz # perform operation
fnmsub.d f26, f7, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f7, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f7, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f7, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f7, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f7, f22, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x4000000000000000)
li x18, 0xcf1f59f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0x191cbc0b # load x3 with 32 MSBs 0x00000000191cbc0b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000191cbc0b
sw x3, 0(x2) # store x3 (0x191cbc0b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000191cbc0b from memory into f2
fnmsub.d f18, f3, f12, f2, dyn # perform operation
fnmsub.d f18, f3, f12, f2, rdn # perform operation
fnmsub.d f18, f3, f12, f2, rmm # perform operation
fnmsub.d f18, f3, f12, f2, rne # perform operation
fnmsub.d f18, f3, f12, f2, rtz # perform operation
fnmsub.d f18, f3, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f3, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f3, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f3, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f3, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f3, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xc000000000000000)
li x7, 0x5db56eb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
li x3, 0xdaa7bac8 # load x3 with 32 MSBs 0x00000000daa7bac8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000daa7bac8
sw x3, 0(x2) # store x3 (0xdaa7bac8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000daa7bac8 from memory into f19
fnmsub.d f7, f11, f29, f19, dyn # perform operation
fnmsub.d f7, f11, f29, f19, rdn # perform operation
fnmsub.d f7, f11, f29, f19, rmm # perform operation
fnmsub.d f7, f11, f29, f19, rne # perform operation
fnmsub.d f7, f11, f29, f19, rtz # perform operation
fnmsub.d f7, f11, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f11, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f11, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f11, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f11, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f11, f29, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x10000000000000)
li x31, 0x65e62873 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
li x3, 0x914901f1 # load x3 with 32 MSBs 0x00000000914901f1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000914901f1
sw x3, 0(x2) # store x3 (0x914901f1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000914901f1 from memory into f5
fnmsub.d f31, f20, f11, f5, dyn # perform operation
fnmsub.d f31, f20, f11, f5, rdn # perform operation
fnmsub.d f31, f20, f11, f5, rmm # perform operation
fnmsub.d f31, f20, f11, f5, rne # perform operation
fnmsub.d f31, f20, f11, f5, rtz # perform operation
fnmsub.d f31, f20, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f20, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f20, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f20, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f20, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f20, f11, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8010000000000000)
li x31, 0x9944e9e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
li x3, 0x84240bfc # load x3 with 32 MSBs 0x0000000084240bfc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084240bfc
sw x3, 0(x2) # store x3 (0x84240bfc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000084240bfc from memory into f9
fnmsub.d f31, f23, f4, f9, dyn # perform operation
fnmsub.d f31, f23, f4, f9, rdn # perform operation
fnmsub.d f31, f23, f4, f9, rmm # perform operation
fnmsub.d f31, f23, f4, f9, rne # perform operation
fnmsub.d f31, f23, f4, f9, rtz # perform operation
fnmsub.d f31, f23, f4, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f23, f4, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f23, f4, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f23, f4, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f23, f4, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f23, f4, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fefffffffffffff)
li x18, 0xc0e12eda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0x9dc28d52 # load x3 with 32 MSBs 0x000000009dc28d52
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009dc28d52
sw x3, 0(x2) # store x3 (0x9dc28d52) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000009dc28d52 from memory into f3
fnmsub.d f18, f15, f17, f3, dyn # perform operation
fnmsub.d f18, f15, f17, f3, rdn # perform operation
fnmsub.d f18, f15, f17, f3, rmm # perform operation
fnmsub.d f18, f15, f17, f3, rne # perform operation
fnmsub.d f18, f15, f17, f3, rtz # perform operation
fnmsub.d f18, f15, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f15, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f15, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f15, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f15, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f15, f17, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xffefffffffffffff)
li x12, 0x2b0eab1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
li x3, 0x4ad1f072 # load x3 with 32 MSBs 0x000000004ad1f072
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ad1f072
sw x3, 0(x2) # store x3 (0x4ad1f072) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000004ad1f072 from memory into f25
fnmsub.d f12, f22, f8, f25, dyn # perform operation
fnmsub.d f12, f22, f8, f25, rdn # perform operation
fnmsub.d f12, f22, f8, f25, rmm # perform operation
fnmsub.d f12, f22, f8, f25, rne # perform operation
fnmsub.d f12, f22, f8, f25, rtz # perform operation
fnmsub.d f12, f22, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f22, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f22, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f22, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f22, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f22, f8, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfffffffffffff)
li x1, 0xdd78839f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0xfa547d52 # load x3 with 32 MSBs 0x00000000fa547d52
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fa547d52
sw x3, 0(x2) # store x3 (0xfa547d52) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000fa547d52 from memory into f17
fnmsub.d f1, f16, f8, f17, dyn # perform operation
fnmsub.d f1, f16, f8, f17, rdn # perform operation
fnmsub.d f1, f16, f8, f17, rmm # perform operation
fnmsub.d f1, f16, f8, f17, rne # perform operation
fnmsub.d f1, f16, f8, f17, rtz # perform operation
fnmsub.d f1, f16, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f16, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f16, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f16, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f16, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f16, f8, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x800fffffffffffff)
li x17, 0x023b60d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
li x3, 0x1e9ab9bd # load x3 with 32 MSBs 0x000000001e9ab9bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e9ab9bd
sw x3, 0(x2) # store x3 (0x1e9ab9bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000001e9ab9bd from memory into f25
fnmsub.d f17, f29, f15, f25, dyn # perform operation
fnmsub.d f17, f29, f15, f25, rdn # perform operation
fnmsub.d f17, f29, f15, f25, rmm # perform operation
fnmsub.d f17, f29, f15, f25, rne # perform operation
fnmsub.d f17, f29, f15, f25, rtz # perform operation
fnmsub.d f17, f29, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f29, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f29, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f29, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f29, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f29, f15, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000)
li x26, 0x35e56805 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0008000000000000 from memory into f4
li x3, 0xdf4d3064 # load x3 with 32 MSBs 0x00000000df4d3064
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000df4d3064
sw x3, 0(x2) # store x3 (0xdf4d3064) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000df4d3064 from memory into f12
fnmsub.d f26, f16, f4, f12, dyn # perform operation
fnmsub.d f26, f16, f4, f12, rdn # perform operation
fnmsub.d f26, f16, f4, f12, rmm # perform operation
fnmsub.d f26, f16, f4, f12, rne # perform operation
fnmsub.d f26, f16, f4, f12, rtz # perform operation
fnmsub.d f26, f16, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f16, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f16, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f16, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f16, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f16, f4, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8008000000000000)
li x29, 0xfb7df634 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0x26d15131 # load x3 with 32 MSBs 0x0000000026d15131
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000026d15131
sw x3, 0(x2) # store x3 (0x26d15131) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000026d15131 from memory into f15
fnmsub.d f29, f12, f23, f15, dyn # perform operation
fnmsub.d f29, f12, f23, f15, rdn # perform operation
fnmsub.d f29, f12, f23, f15, rmm # perform operation
fnmsub.d f29, f12, f23, f15, rne # perform operation
fnmsub.d f29, f12, f23, f15, rtz # perform operation
fnmsub.d f29, f12, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f12, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f12, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f12, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f12, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f12, f23, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x1)
li x25, 0x03b17fcf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
li x3, 0x575a24aa # load x3 with 32 MSBs 0x00000000575a24aa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000575a24aa
sw x3, 0(x2) # store x3 (0x575a24aa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000575a24aa from memory into f4
fnmsub.d f25, f12, f11, f4, dyn # perform operation
fnmsub.d f25, f12, f11, f4, rdn # perform operation
fnmsub.d f25, f12, f11, f4, rmm # perform operation
fnmsub.d f25, f12, f11, f4, rne # perform operation
fnmsub.d f25, f12, f11, f4, rtz # perform operation
fnmsub.d f25, f12, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f12, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f12, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f12, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f12, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f12, f11, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000001)
li x6, 0x078773a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
li x3, 0xfb9afd17 # load x3 with 32 MSBs 0x00000000fb9afd17
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fb9afd17
sw x3, 0(x2) # store x3 (0xfb9afd17) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000fb9afd17 from memory into f11
fnmsub.d f6, f4, f26, f11, dyn # perform operation
fnmsub.d f6, f4, f26, f11, rdn # perform operation
fnmsub.d f6, f4, f26, f11, rmm # perform operation
fnmsub.d f6, f4, f26, f11, rne # perform operation
fnmsub.d f6, f4, f26, f11, rtz # perform operation
fnmsub.d f6, f4, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f4, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f4, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f4, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f4, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f4, f26, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000000)
li x5, 0x6347e01b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
li x3, 0x1e11367c # load x3 with 32 MSBs 0x000000001e11367c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e11367c
sw x3, 0(x2) # store x3 (0x1e11367c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000001e11367c from memory into f19
fnmsub.d f5, f20, f4, f19, dyn # perform operation
fnmsub.d f5, f20, f4, f19, rdn # perform operation
fnmsub.d f5, f20, f4, f19, rmm # perform operation
fnmsub.d f5, f20, f4, f19, rne # perform operation
fnmsub.d f5, f20, f4, f19, rtz # perform operation
fnmsub.d f5, f20, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f20, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f20, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f20, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f20, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f20, f4, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfff0000000000000)
li x20, 0xf8f11805 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
li x3, 0x8f04265c # load x3 with 32 MSBs 0x000000008f04265c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f04265c
sw x3, 0(x2) # store x3 (0x8f04265c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000008f04265c from memory into f12
fnmsub.d f20, f21, f24, f12, dyn # perform operation
fnmsub.d f20, f21, f24, f12, rdn # perform operation
fnmsub.d f20, f21, f24, f12, rmm # perform operation
fnmsub.d f20, f21, f24, f12, rne # perform operation
fnmsub.d f20, f21, f24, f12, rtz # perform operation
fnmsub.d f20, f21, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f21, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f21, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f21, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f21, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f21, f24, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff8000000000000)
li x22, 0xc5e8ec07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
li x3, 0xb90a0483 # load x3 with 32 MSBs 0x00000000b90a0483
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b90a0483
sw x3, 0(x2) # store x3 (0xb90a0483) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000b90a0483 from memory into f27
fnmsub.d f22, f31, f2, f27, dyn # perform operation
fnmsub.d f22, f31, f2, f27, rdn # perform operation
fnmsub.d f22, f31, f2, f27, rmm # perform operation
fnmsub.d f22, f31, f2, f27, rne # perform operation
fnmsub.d f22, f31, f2, f27, rtz # perform operation
fnmsub.d f22, f31, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f31, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f31, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f31, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f31, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f31, f2, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fffffffffffffff)
li x4, 0xd354335d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff8000000000000 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
li x3, 0x0557267a # load x3 with 32 MSBs 0x000000000557267a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000557267a
sw x3, 0(x2) # store x3 (0x0557267a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000000557267a from memory into f14
fnmsub.d f4, f17, f18, f14, dyn # perform operation
fnmsub.d f4, f17, f18, f14, rdn # perform operation
fnmsub.d f4, f17, f18, f14, rmm # perform operation
fnmsub.d f4, f17, f18, f14, rne # perform operation
fnmsub.d f4, f17, f18, f14, rtz # perform operation
fnmsub.d f4, f17, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f17, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f17, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f17, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f17, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f17, f18, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000001)
li x8, 0x22bb1b2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
li x3, 0x24416f0b # load x3 with 32 MSBs 0x0000000024416f0b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000024416f0b
sw x3, 0(x2) # store x3 (0x24416f0b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000024416f0b from memory into f29
fnmsub.d f8, f12, f26, f29, dyn # perform operation
fnmsub.d f8, f12, f26, f29, rdn # perform operation
fnmsub.d f8, f12, f26, f29, rmm # perform operation
fnmsub.d f8, f12, f26, f29, rne # perform operation
fnmsub.d f8, f12, f26, f29, rtz # perform operation
fnmsub.d f8, f12, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f12, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f12, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f12, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f12, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f12, f26, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x15, 0x0df538a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
li x3, 0x518d970f # load x3 with 32 MSBs 0x00000000518d970f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000518d970f
sw x3, 0(x2) # store x3 (0x518d970f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000518d970f from memory into f6
fnmsub.d f15, f7, f18, f6, dyn # perform operation
fnmsub.d f15, f7, f18, f6, rdn # perform operation
fnmsub.d f15, f7, f18, f6, rmm # perform operation
fnmsub.d f15, f7, f18, f6, rne # perform operation
fnmsub.d f15, f7, f18, f6, rtz # perform operation
fnmsub.d f15, f7, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f7, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f7, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f7, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f7, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f7, f18, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x5a392534a57711ad)
li x23, 0x8284756e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
li x3, 0x8f37b763 # load x3 with 32 MSBs 0x000000008f37b763
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f37b763
sw x3, 0(x2) # store x3 (0x8f37b763) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000008f37b763 from memory into f16
fnmsub.d f23, f10, f26, f16, dyn # perform operation
fnmsub.d f23, f10, f26, f16, rdn # perform operation
fnmsub.d f23, f10, f26, f16, rmm # perform operation
fnmsub.d f23, f10, f26, f16, rne # perform operation
fnmsub.d f23, f10, f26, f16, rtz # perform operation
fnmsub.d f23, f10, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f10, f26, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xa6e895993737426c)
li x11, 0xe87e2fe6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
li x3, 0xe4ec2703 # load x3 with 32 MSBs 0x00000000e4ec2703
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4ec2703
sw x3, 0(x2) # store x3 (0xe4ec2703) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000e4ec2703 from memory into f9
fnmsub.d f11, f18, f29, f9, dyn # perform operation
fnmsub.d f11, f18, f29, f9, rdn # perform operation
fnmsub.d f11, f18, f29, f9, rmm # perform operation
fnmsub.d f11, f18, f29, f9, rne # perform operation
fnmsub.d f11, f18, f29, f9, rtz # perform operation
fnmsub.d f11, f18, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f18, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f18, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f18, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f18, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f18, f29, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x0)
li x15, 0x2828dcd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000000 from memory into f17
li x3, 0xb72ea2e7 # load x3 with 32 MSBs 0x00000000b72ea2e7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b72ea2e7
sw x3, 0(x2) # store x3 (0xb72ea2e7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000b72ea2e7 from memory into f24
fnmsub.d f15, f23, f17, f24, dyn # perform operation
fnmsub.d f15, f23, f17, f24, rdn # perform operation
fnmsub.d f15, f23, f17, f24, rmm # perform operation
fnmsub.d f15, f23, f17, f24, rne # perform operation
fnmsub.d f15, f23, f17, f24, rtz # perform operation
fnmsub.d f15, f23, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f23, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f23, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f23, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f23, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f23, f17, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000000)
li x24, 0x56343045 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
li x3, 0x13695b56 # load x3 with 32 MSBs 0x0000000013695b56
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000013695b56
sw x3, 0(x2) # store x3 (0x13695b56) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000013695b56 from memory into f23
fnmsub.d f24, f10, f6, f23, dyn # perform operation
fnmsub.d f24, f10, f6, f23, rdn # perform operation
fnmsub.d f24, f10, f6, f23, rmm # perform operation
fnmsub.d f24, f10, f6, f23, rne # perform operation
fnmsub.d f24, f10, f6, f23, rtz # perform operation
fnmsub.d f24, f10, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f10, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f10, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f10, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f10, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f10, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff0000000000000)
li x17, 0x0934e754 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
li x3, 0x37445eac # load x3 with 32 MSBs 0x0000000037445eac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000037445eac
sw x3, 0(x2) # store x3 (0x37445eac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000037445eac from memory into f29
fnmsub.d f17, f6, f21, f29, dyn # perform operation
fnmsub.d f17, f6, f21, f29, rdn # perform operation
fnmsub.d f17, f6, f21, f29, rmm # perform operation
fnmsub.d f17, f6, f21, f29, rne # perform operation
fnmsub.d f17, f6, f21, f29, rtz # perform operation
fnmsub.d f17, f6, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f6, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f6, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f6, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f6, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f6, f21, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff0000000000000)
li x28, 0x80427303 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
li x3, 0xfb654965 # load x3 with 32 MSBs 0x00000000fb654965
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fb654965
sw x3, 0(x2) # store x3 (0xfb654965) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000fb654965 from memory into f13
fnmsub.d f28, f6, f7, f13, dyn # perform operation
fnmsub.d f28, f6, f7, f13, rdn # perform operation
fnmsub.d f28, f6, f7, f13, rmm # perform operation
fnmsub.d f28, f6, f7, f13, rne # perform operation
fnmsub.d f28, f6, f7, f13, rtz # perform operation
fnmsub.d f28, f6, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f6, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f6, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f6, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f6, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f6, f7, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff8000000000000)
li x29, 0x1c5f9ca3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
li x3, 0x5e38d7fc # load x3 with 32 MSBs 0x000000005e38d7fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e38d7fc
sw x3, 0(x2) # store x3 (0x5e38d7fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000005e38d7fc from memory into f1
fnmsub.d f29, f21, f24, f1, dyn # perform operation
fnmsub.d f29, f21, f24, f1, rdn # perform operation
fnmsub.d f29, f21, f24, f1, rmm # perform operation
fnmsub.d f29, f21, f24, f1, rne # perform operation
fnmsub.d f29, f21, f24, f1, rtz # perform operation
fnmsub.d f29, f21, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f21, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f21, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f21, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f21, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f21, f24, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff8000000000000)
li x19, 0x19a4374a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
li x3, 0x544127fd # load x3 with 32 MSBs 0x00000000544127fd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000544127fd
sw x3, 0(x2) # store x3 (0x544127fd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000544127fd from memory into f27
fnmsub.d f19, f25, f1, f27, dyn # perform operation
fnmsub.d f19, f25, f1, f27, rdn # perform operation
fnmsub.d f19, f25, f1, f27, rmm # perform operation
fnmsub.d f19, f25, f1, f27, rne # perform operation
fnmsub.d f19, f25, f1, f27, rtz # perform operation
fnmsub.d f19, f25, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f25, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f25, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f25, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f25, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f25, f1, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x4000000000000000)
li x29, 0x8ed36969 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
li x3, 0x8d05c30c # load x3 with 32 MSBs 0x000000008d05c30c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008d05c30c
sw x3, 0(x2) # store x3 (0x8d05c30c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000008d05c30c from memory into f6
fnmsub.d f29, f18, f16, f6, dyn # perform operation
fnmsub.d f29, f18, f16, f6, rdn # perform operation
fnmsub.d f29, f18, f16, f6, rmm # perform operation
fnmsub.d f29, f18, f16, f6, rne # perform operation
fnmsub.d f29, f18, f16, f6, rtz # perform operation
fnmsub.d f29, f18, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f18, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f18, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f18, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f18, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f18, f16, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xc000000000000000)
li x30, 0x06badf0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
li x3, 0xa6a5008d # load x3 with 32 MSBs 0x00000000a6a5008d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a6a5008d
sw x3, 0(x2) # store x3 (0xa6a5008d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000a6a5008d from memory into f2
fnmsub.d f30, f22, f9, f2, dyn # perform operation
fnmsub.d f30, f22, f9, f2, rdn # perform operation
fnmsub.d f30, f22, f9, f2, rmm # perform operation
fnmsub.d f30, f22, f9, f2, rne # perform operation
fnmsub.d f30, f22, f9, f2, rtz # perform operation
fnmsub.d f30, f22, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f22, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f22, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f22, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f22, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f22, f9, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x10000000000000)
li x8, 0xd0103ad5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
li x3, 0xfd190e33 # load x3 with 32 MSBs 0x00000000fd190e33
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fd190e33
sw x3, 0(x2) # store x3 (0xfd190e33) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000fd190e33 from memory into f14
fnmsub.d f8, f21, f24, f14, dyn # perform operation
fnmsub.d f8, f21, f24, f14, rdn # perform operation
fnmsub.d f8, f21, f24, f14, rmm # perform operation
fnmsub.d f8, f21, f24, f14, rne # perform operation
fnmsub.d f8, f21, f24, f14, rtz # perform operation
fnmsub.d f8, f21, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f21, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f21, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f21, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f21, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f21, f24, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8010000000000000)
li x24, 0x86b7377f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
li x3, 0x74cc5875 # load x3 with 32 MSBs 0x0000000074cc5875
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000074cc5875
sw x3, 0(x2) # store x3 (0x74cc5875) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000074cc5875 from memory into f22
fnmsub.d f24, f6, f11, f22, dyn # perform operation
fnmsub.d f24, f6, f11, f22, rdn # perform operation
fnmsub.d f24, f6, f11, f22, rmm # perform operation
fnmsub.d f24, f6, f11, f22, rne # perform operation
fnmsub.d f24, f6, f11, f22, rtz # perform operation
fnmsub.d f24, f6, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f6, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f6, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f6, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f6, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f6, f11, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fefffffffffffff)
li x13, 0x9e9ece07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0x95a615ff # load x3 with 32 MSBs 0x0000000095a615ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095a615ff
sw x3, 0(x2) # store x3 (0x95a615ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000095a615ff from memory into f14
fnmsub.d f13, f3, f17, f14, dyn # perform operation
fnmsub.d f13, f3, f17, f14, rdn # perform operation
fnmsub.d f13, f3, f17, f14, rmm # perform operation
fnmsub.d f13, f3, f17, f14, rne # perform operation
fnmsub.d f13, f3, f17, f14, rtz # perform operation
fnmsub.d f13, f3, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f3, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f3, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f3, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f3, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f3, f17, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xffefffffffffffff)
li x28, 0x638b1002 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
li x3, 0xad0b624d # load x3 with 32 MSBs 0x00000000ad0b624d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ad0b624d
sw x3, 0(x2) # store x3 (0xad0b624d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000ad0b624d from memory into f11
fnmsub.d f28, f9, f12, f11, dyn # perform operation
fnmsub.d f28, f9, f12, f11, rdn # perform operation
fnmsub.d f28, f9, f12, f11, rmm # perform operation
fnmsub.d f28, f9, f12, f11, rne # perform operation
fnmsub.d f28, f9, f12, f11, rtz # perform operation
fnmsub.d f28, f9, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f9, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f9, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f9, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f9, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f9, f12, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfffffffffffff)
li x22, 0xcc837b7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
li x3, 0x653f6030 # load x3 with 32 MSBs 0x00000000653f6030
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000653f6030
sw x3, 0(x2) # store x3 (0x653f6030) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000653f6030 from memory into f18
fnmsub.d f22, f16, f19, f18, dyn # perform operation
fnmsub.d f22, f16, f19, f18, rdn # perform operation
fnmsub.d f22, f16, f19, f18, rmm # perform operation
fnmsub.d f22, f16, f19, f18, rne # perform operation
fnmsub.d f22, f16, f19, f18, rtz # perform operation
fnmsub.d f22, f16, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f16, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f16, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f16, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f16, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f16, f19, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x800fffffffffffff)
li x31, 0xe329984e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
li x3, 0x2b3b675e # load x3 with 32 MSBs 0x000000002b3b675e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002b3b675e
sw x3, 0(x2) # store x3 (0x2b3b675e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000002b3b675e from memory into f4
fnmsub.d f31, f22, f2, f4, dyn # perform operation
fnmsub.d f31, f22, f2, f4, rdn # perform operation
fnmsub.d f31, f22, f2, f4, rmm # perform operation
fnmsub.d f31, f22, f2, f4, rne # perform operation
fnmsub.d f31, f22, f2, f4, rtz # perform operation
fnmsub.d f31, f22, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f22, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f22, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f22, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f22, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f22, f2, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000)
li x4, 0x4a2cc587 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0x57c60f4e # load x3 with 32 MSBs 0x0000000057c60f4e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000057c60f4e
sw x3, 0(x2) # store x3 (0x57c60f4e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000057c60f4e from memory into f20
fnmsub.d f4, f9, f31, f20, dyn # perform operation
fnmsub.d f4, f9, f31, f20, rdn # perform operation
fnmsub.d f4, f9, f31, f20, rmm # perform operation
fnmsub.d f4, f9, f31, f20, rne # perform operation
fnmsub.d f4, f9, f31, f20, rtz # perform operation
fnmsub.d f4, f9, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f9, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f9, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f9, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f9, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f9, f31, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8008000000000000)
li x22, 0x0788c6d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
li x3, 0xc75eaae7 # load x3 with 32 MSBs 0x00000000c75eaae7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c75eaae7
sw x3, 0(x2) # store x3 (0xc75eaae7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000c75eaae7 from memory into f7
fnmsub.d f22, f29, f14, f7, dyn # perform operation
fnmsub.d f22, f29, f14, f7, rdn # perform operation
fnmsub.d f22, f29, f14, f7, rmm # perform operation
fnmsub.d f22, f29, f14, f7, rne # perform operation
fnmsub.d f22, f29, f14, f7, rtz # perform operation
fnmsub.d f22, f29, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f29, f14, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x1)
li x23, 0xfe388972 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
li x3, 0xafcd1832 # load x3 with 32 MSBs 0x00000000afcd1832
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000afcd1832
sw x3, 0(x2) # store x3 (0xafcd1832) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000afcd1832 from memory into f25
fnmsub.d f23, f3, f4, f25, dyn # perform operation
fnmsub.d f23, f3, f4, f25, rdn # perform operation
fnmsub.d f23, f3, f4, f25, rmm # perform operation
fnmsub.d f23, f3, f4, f25, rne # perform operation
fnmsub.d f23, f3, f4, f25, rtz # perform operation
fnmsub.d f23, f3, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f3, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f3, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f3, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f3, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f3, f4, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000001)
li x11, 0x28cbded1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
li x3, 0xb9549c00 # load x3 with 32 MSBs 0x00000000b9549c00
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b9549c00
sw x3, 0(x2) # store x3 (0xb9549c00) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b9549c00 from memory into f23
fnmsub.d f11, f7, f21, f23, dyn # perform operation
fnmsub.d f11, f7, f21, f23, rdn # perform operation
fnmsub.d f11, f7, f21, f23, rmm # perform operation
fnmsub.d f11, f7, f21, f23, rne # perform operation
fnmsub.d f11, f7, f21, f23, rtz # perform operation
fnmsub.d f11, f7, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f7, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f7, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f7, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f7, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f7, f21, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000000)
li x15, 0x2b634da5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
li x3, 0xa5b3ed52 # load x3 with 32 MSBs 0x00000000a5b3ed52
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a5b3ed52
sw x3, 0(x2) # store x3 (0xa5b3ed52) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000a5b3ed52 from memory into f8
fnmsub.d f15, f5, f30, f8, dyn # perform operation
fnmsub.d f15, f5, f30, f8, rdn # perform operation
fnmsub.d f15, f5, f30, f8, rmm # perform operation
fnmsub.d f15, f5, f30, f8, rne # perform operation
fnmsub.d f15, f5, f30, f8, rtz # perform operation
fnmsub.d f15, f5, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f5, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f5, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f5, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f5, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f5, f30, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfff0000000000000)
li x20, 0x066bfa2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xfff0000000000000 from memory into f4
li x3, 0x2dc7db61 # load x3 with 32 MSBs 0x000000002dc7db61
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002dc7db61
sw x3, 0(x2) # store x3 (0x2dc7db61) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000002dc7db61 from memory into f22
fnmsub.d f20, f11, f4, f22, dyn # perform operation
fnmsub.d f20, f11, f4, f22, rdn # perform operation
fnmsub.d f20, f11, f4, f22, rmm # perform operation
fnmsub.d f20, f11, f4, f22, rne # perform operation
fnmsub.d f20, f11, f4, f22, rtz # perform operation
fnmsub.d f20, f11, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f11, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f11, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f11, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f11, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f11, f4, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff8000000000000)
li x6, 0xf2e5c815 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
li x3, 0xd7033e7f # load x3 with 32 MSBs 0x00000000d7033e7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7033e7f
sw x3, 0(x2) # store x3 (0xd7033e7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000d7033e7f from memory into f12
fnmsub.d f6, f4, f5, f12, dyn # perform operation
fnmsub.d f6, f4, f5, f12, rdn # perform operation
fnmsub.d f6, f4, f5, f12, rmm # perform operation
fnmsub.d f6, f4, f5, f12, rne # perform operation
fnmsub.d f6, f4, f5, f12, rtz # perform operation
fnmsub.d f6, f4, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f4, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f4, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f4, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f4, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f4, f5, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fffffffffffffff)
li x4, 0xea3255b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
li x3, 0xc5905baf # load x3 with 32 MSBs 0x00000000c5905baf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c5905baf
sw x3, 0(x2) # store x3 (0xc5905baf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000c5905baf from memory into f13
fnmsub.d f4, f18, f25, f13, dyn # perform operation
fnmsub.d f4, f18, f25, f13, rdn # perform operation
fnmsub.d f4, f18, f25, f13, rmm # perform operation
fnmsub.d f4, f18, f25, f13, rne # perform operation
fnmsub.d f4, f18, f25, f13, rtz # perform operation
fnmsub.d f4, f18, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f18, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f18, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f18, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f18, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f18, f25, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000001)
li x1, 0x8b1179a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
li x3, 0xe4756283 # load x3 with 32 MSBs 0x00000000e4756283
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4756283
sw x3, 0(x2) # store x3 (0xe4756283) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000e4756283 from memory into f16
fnmsub.d f1, f7, f23, f16, dyn # perform operation
fnmsub.d f1, f7, f23, f16, rdn # perform operation
fnmsub.d f1, f7, f23, f16, rmm # perform operation
fnmsub.d f1, f7, f23, f16, rne # perform operation
fnmsub.d f1, f7, f23, f16, rtz # perform operation
fnmsub.d f1, f7, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f7, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f7, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f7, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f7, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f7, f23, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x9, 0xce52a0a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
li x3, 0xfcadea83 # load x3 with 32 MSBs 0x00000000fcadea83
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fcadea83
sw x3, 0(x2) # store x3 (0xfcadea83) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000fcadea83 from memory into f3
fnmsub.d f9, f10, f1, f3, dyn # perform operation
fnmsub.d f9, f10, f1, f3, rdn # perform operation
fnmsub.d f9, f10, f1, f3, rmm # perform operation
fnmsub.d f9, f10, f1, f3, rne # perform operation
fnmsub.d f9, f10, f1, f3, rtz # perform operation
fnmsub.d f9, f10, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f10, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f10, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f10, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f10, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f10, f1, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x5a392534a57711ad)
li x1, 0xa3c4b168 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
li x3, 0x5487305b # load x3 with 32 MSBs 0x000000005487305b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005487305b
sw x3, 0(x2) # store x3 (0x5487305b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000005487305b from memory into f11
fnmsub.d f1, f25, f5, f11, dyn # perform operation
fnmsub.d f1, f25, f5, f11, rdn # perform operation
fnmsub.d f1, f25, f5, f11, rmm # perform operation
fnmsub.d f1, f25, f5, f11, rne # perform operation
fnmsub.d f1, f25, f5, f11, rtz # perform operation
fnmsub.d f1, f25, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f25, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f25, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f25, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f25, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f25, f5, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xa6e895993737426c)
li x3, 0xb941e453 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xa6e895993737426c from memory into f4
li x3, 0xb66c30b4 # load x3 with 32 MSBs 0x00000000b66c30b4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b66c30b4
sw x3, 0(x2) # store x3 (0xb66c30b4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000b66c30b4 from memory into f21
fnmsub.d f3, f27, f4, f21, dyn # perform operation
fnmsub.d f3, f27, f4, f21, rdn # perform operation
fnmsub.d f3, f27, f4, f21, rmm # perform operation
fnmsub.d f3, f27, f4, f21, rne # perform operation
fnmsub.d f3, f27, f4, f21, rtz # perform operation
fnmsub.d f3, f27, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f27, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f27, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f27, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f27, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f27, f4, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x0)
li x10, 0xff20cf2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
li x3, 0xb30767e3 # load x3 with 32 MSBs 0x00000000b30767e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b30767e3
sw x3, 0(x2) # store x3 (0xb30767e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000b30767e3 from memory into f24
fnmsub.d f10, f13, f6, f24, dyn # perform operation
fnmsub.d f10, f13, f6, f24, rdn # perform operation
fnmsub.d f10, f13, f6, f24, rmm # perform operation
fnmsub.d f10, f13, f6, f24, rne # perform operation
fnmsub.d f10, f13, f6, f24, rtz # perform operation
fnmsub.d f10, f13, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f13, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f13, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f13, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f13, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f13, f6, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000000)
li x21, 0xf9fa9096 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
li x3, 0xba30e6c7 # load x3 with 32 MSBs 0x00000000ba30e6c7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ba30e6c7
sw x3, 0(x2) # store x3 (0xba30e6c7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000ba30e6c7 from memory into f5
fnmsub.d f21, f20, f30, f5, dyn # perform operation
fnmsub.d f21, f20, f30, f5, rdn # perform operation
fnmsub.d f21, f20, f30, f5, rmm # perform operation
fnmsub.d f21, f20, f30, f5, rne # perform operation
fnmsub.d f21, f20, f30, f5, rtz # perform operation
fnmsub.d f21, f20, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f20, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f20, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f20, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f20, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f20, f30, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff0000000000000)
li x14, 0xc9018aa5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0x246b8215 # load x3 with 32 MSBs 0x00000000246b8215
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000246b8215
sw x3, 0(x2) # store x3 (0x246b8215) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000246b8215 from memory into f11
fnmsub.d f14, f23, f15, f11, dyn # perform operation
fnmsub.d f14, f23, f15, f11, rdn # perform operation
fnmsub.d f14, f23, f15, f11, rmm # perform operation
fnmsub.d f14, f23, f15, f11, rne # perform operation
fnmsub.d f14, f23, f15, f11, rtz # perform operation
fnmsub.d f14, f23, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f23, f15, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff0000000000000)
li x4, 0xe4cd4c7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
li x3, 0x8dc7fec7 # load x3 with 32 MSBs 0x000000008dc7fec7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008dc7fec7
sw x3, 0(x2) # store x3 (0x8dc7fec7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000008dc7fec7 from memory into f12
fnmsub.d f4, f2, f22, f12, dyn # perform operation
fnmsub.d f4, f2, f22, f12, rdn # perform operation
fnmsub.d f4, f2, f22, f12, rmm # perform operation
fnmsub.d f4, f2, f22, f12, rne # perform operation
fnmsub.d f4, f2, f22, f12, rtz # perform operation
fnmsub.d f4, f2, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f2, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f2, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f2, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f2, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f2, f22, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff8000000000000)
li x13, 0x401d0681 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
li x3, 0xfccd9247 # load x3 with 32 MSBs 0x00000000fccd9247
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fccd9247
sw x3, 0(x2) # store x3 (0xfccd9247) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000fccd9247 from memory into f2
fnmsub.d f13, f11, f4, f2, dyn # perform operation
fnmsub.d f13, f11, f4, f2, rdn # perform operation
fnmsub.d f13, f11, f4, f2, rmm # perform operation
fnmsub.d f13, f11, f4, f2, rne # perform operation
fnmsub.d f13, f11, f4, f2, rtz # perform operation
fnmsub.d f13, f11, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f11, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f11, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f11, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f11, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f11, f4, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff8000000000000)
li x13, 0x3fdf6fbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
li x3, 0x426a4e93 # load x3 with 32 MSBs 0x00000000426a4e93
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000426a4e93
sw x3, 0(x2) # store x3 (0x426a4e93) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000426a4e93 from memory into f21
fnmsub.d f13, f10, f6, f21, dyn # perform operation
fnmsub.d f13, f10, f6, f21, rdn # perform operation
fnmsub.d f13, f10, f6, f21, rmm # perform operation
fnmsub.d f13, f10, f6, f21, rne # perform operation
fnmsub.d f13, f10, f6, f21, rtz # perform operation
fnmsub.d f13, f10, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f10, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f10, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f10, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f10, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f10, f6, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x4000000000000000)
li x2, 0x8dc8a9fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
li x3, 0x3b08ca69 # load x3 with 32 MSBs 0x000000003b08ca69
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003b08ca69
sw x3, 0(x2) # store x3 (0x3b08ca69) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000003b08ca69 from memory into f10
fnmsub.d f2, f25, f22, f10, dyn # perform operation
fnmsub.d f2, f25, f22, f10, rdn # perform operation
fnmsub.d f2, f25, f22, f10, rmm # perform operation
fnmsub.d f2, f25, f22, f10, rne # perform operation
fnmsub.d f2, f25, f22, f10, rtz # perform operation
fnmsub.d f2, f25, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f25, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f25, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f25, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f25, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f25, f22, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xc000000000000000)
li x5, 0x3c968cfd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xc000000000000000 from memory into f4
li x3, 0x8af8a838 # load x3 with 32 MSBs 0x000000008af8a838
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008af8a838
sw x3, 0(x2) # store x3 (0x8af8a838) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000008af8a838 from memory into f18
fnmsub.d f5, f26, f4, f18, dyn # perform operation
fnmsub.d f5, f26, f4, f18, rdn # perform operation
fnmsub.d f5, f26, f4, f18, rmm # perform operation
fnmsub.d f5, f26, f4, f18, rne # perform operation
fnmsub.d f5, f26, f4, f18, rtz # perform operation
fnmsub.d f5, f26, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f26, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f26, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f26, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f26, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f26, f4, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x10000000000000)
li x13, 0xd0bbeb6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x4000000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
li x3, 0x74e4feaf # load x3 with 32 MSBs 0x0000000074e4feaf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000074e4feaf
sw x3, 0(x2) # store x3 (0x74e4feaf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000074e4feaf from memory into f6
fnmsub.d f13, f3, f11, f6, dyn # perform operation
fnmsub.d f13, f3, f11, f6, rdn # perform operation
fnmsub.d f13, f3, f11, f6, rmm # perform operation
fnmsub.d f13, f3, f11, f6, rne # perform operation
fnmsub.d f13, f3, f11, f6, rtz # perform operation
fnmsub.d f13, f3, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f3, f11, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8010000000000000)
li x28, 0x3b2e1be7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
li x3, 0x3134207c # load x3 with 32 MSBs 0x000000003134207c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003134207c
sw x3, 0(x2) # store x3 (0x3134207c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000003134207c from memory into f8
fnmsub.d f28, f25, f10, f8, dyn # perform operation
fnmsub.d f28, f25, f10, f8, rdn # perform operation
fnmsub.d f28, f25, f10, f8, rmm # perform operation
fnmsub.d f28, f25, f10, f8, rne # perform operation
fnmsub.d f28, f25, f10, f8, rtz # perform operation
fnmsub.d f28, f25, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f25, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f25, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f25, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f25, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f25, f10, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fefffffffffffff)
li x18, 0x29f26acf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
li x3, 0x81f4ccaf # load x3 with 32 MSBs 0x0000000081f4ccaf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000081f4ccaf
sw x3, 0(x2) # store x3 (0x81f4ccaf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000081f4ccaf from memory into f25
fnmsub.d f18, f15, f20, f25, dyn # perform operation
fnmsub.d f18, f15, f20, f25, rdn # perform operation
fnmsub.d f18, f15, f20, f25, rmm # perform operation
fnmsub.d f18, f15, f20, f25, rne # perform operation
fnmsub.d f18, f15, f20, f25, rtz # perform operation
fnmsub.d f18, f15, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f15, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f15, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f15, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f15, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f15, f20, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xffefffffffffffff)
li x1, 0x3805c55b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0xb1ac1237 # load x3 with 32 MSBs 0x00000000b1ac1237
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1ac1237
sw x3, 0(x2) # store x3 (0xb1ac1237) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000b1ac1237 from memory into f7
fnmsub.d f1, f5, f25, f7, dyn # perform operation
fnmsub.d f1, f5, f25, f7, rdn # perform operation
fnmsub.d f1, f5, f25, f7, rmm # perform operation
fnmsub.d f1, f5, f25, f7, rne # perform operation
fnmsub.d f1, f5, f25, f7, rtz # perform operation
fnmsub.d f1, f5, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f5, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f5, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f5, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f5, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f5, f25, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfffffffffffff)
li x6, 0x7273971a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
li x3, 0x40e0f133 # load x3 with 32 MSBs 0x0000000040e0f133
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000040e0f133
sw x3, 0(x2) # store x3 (0x40e0f133) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000040e0f133 from memory into f27
fnmsub.d f6, f1, f2, f27, dyn # perform operation
fnmsub.d f6, f1, f2, f27, rdn # perform operation
fnmsub.d f6, f1, f2, f27, rmm # perform operation
fnmsub.d f6, f1, f2, f27, rne # perform operation
fnmsub.d f6, f1, f2, f27, rtz # perform operation
fnmsub.d f6, f1, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f1, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f1, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f1, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f1, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f1, f2, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x800fffffffffffff)
li x20, 0xc0fe06ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
li x3, 0xa2ceeb17 # load x3 with 32 MSBs 0x00000000a2ceeb17
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a2ceeb17
sw x3, 0(x2) # store x3 (0xa2ceeb17) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000a2ceeb17 from memory into f2
fnmsub.d f20, f19, f29, f2, dyn # perform operation
fnmsub.d f20, f19, f29, f2, rdn # perform operation
fnmsub.d f20, f19, f29, f2, rmm # perform operation
fnmsub.d f20, f19, f29, f2, rne # perform operation
fnmsub.d f20, f19, f29, f2, rtz # perform operation
fnmsub.d f20, f19, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f19, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f19, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f19, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f19, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f19, f29, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000)
li x9, 0xf7d28a86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
li x3, 0x4674a69c # load x3 with 32 MSBs 0x000000004674a69c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004674a69c
sw x3, 0(x2) # store x3 (0x4674a69c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000004674a69c from memory into f19
fnmsub.d f9, f22, f21, f19, dyn # perform operation
fnmsub.d f9, f22, f21, f19, rdn # perform operation
fnmsub.d f9, f22, f21, f19, rmm # perform operation
fnmsub.d f9, f22, f21, f19, rne # perform operation
fnmsub.d f9, f22, f21, f19, rtz # perform operation
fnmsub.d f9, f22, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f22, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f22, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f22, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f22, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f22, f21, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8008000000000000)
li x1, 0xc936c235 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
li x3, 0xe1c86542 # load x3 with 32 MSBs 0x00000000e1c86542
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e1c86542
sw x3, 0(x2) # store x3 (0xe1c86542) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000e1c86542 from memory into f7
fnmsub.d f1, f9, f30, f7, dyn # perform operation
fnmsub.d f1, f9, f30, f7, rdn # perform operation
fnmsub.d f1, f9, f30, f7, rmm # perform operation
fnmsub.d f1, f9, f30, f7, rne # perform operation
fnmsub.d f1, f9, f30, f7, rtz # perform operation
fnmsub.d f1, f9, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f9, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f9, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f9, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f9, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f9, f30, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x1)
li x23, 0x08fb9d58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
li x3, 0x3d2800ac # load x3 with 32 MSBs 0x000000003d2800ac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d2800ac
sw x3, 0(x2) # store x3 (0x3d2800ac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000003d2800ac from memory into f16
fnmsub.d f23, f25, f28, f16, dyn # perform operation
fnmsub.d f23, f25, f28, f16, rdn # perform operation
fnmsub.d f23, f25, f28, f16, rmm # perform operation
fnmsub.d f23, f25, f28, f16, rne # perform operation
fnmsub.d f23, f25, f28, f16, rtz # perform operation
fnmsub.d f23, f25, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f25, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f25, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f25, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f25, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f25, f28, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000001)
li x6, 0x66a5197e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000001 from memory into f14
li x3, 0x60aa36c4 # load x3 with 32 MSBs 0x0000000060aa36c4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000060aa36c4
sw x3, 0(x2) # store x3 (0x60aa36c4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000060aa36c4 from memory into f18
fnmsub.d f6, f12, f14, f18, dyn # perform operation
fnmsub.d f6, f12, f14, f18, rdn # perform operation
fnmsub.d f6, f12, f14, f18, rmm # perform operation
fnmsub.d f6, f12, f14, f18, rne # perform operation
fnmsub.d f6, f12, f14, f18, rtz # perform operation
fnmsub.d f6, f12, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f12, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f12, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f12, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f12, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f12, f14, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000000)
li x8, 0x042f6edc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
li x3, 0xe4282dd6 # load x3 with 32 MSBs 0x00000000e4282dd6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4282dd6
sw x3, 0(x2) # store x3 (0xe4282dd6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000e4282dd6 from memory into f2
fnmsub.d f8, f18, f25, f2, dyn # perform operation
fnmsub.d f8, f18, f25, f2, rdn # perform operation
fnmsub.d f8, f18, f25, f2, rmm # perform operation
fnmsub.d f8, f18, f25, f2, rne # perform operation
fnmsub.d f8, f18, f25, f2, rtz # perform operation
fnmsub.d f8, f18, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f18, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f18, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f18, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f18, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f18, f25, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfff0000000000000)
li x14, 0x88d54134 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
li x3, 0x96c0f922 # load x3 with 32 MSBs 0x0000000096c0f922
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000096c0f922
sw x3, 0(x2) # store x3 (0x96c0f922) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000096c0f922 from memory into f4
fnmsub.d f14, f8, f9, f4, dyn # perform operation
fnmsub.d f14, f8, f9, f4, rdn # perform operation
fnmsub.d f14, f8, f9, f4, rmm # perform operation
fnmsub.d f14, f8, f9, f4, rne # perform operation
fnmsub.d f14, f8, f9, f4, rtz # perform operation
fnmsub.d f14, f8, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f8, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f8, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f8, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f8, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f8, f9, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff8000000000000)
li x7, 0xe2f9ff0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff8000000000000 from memory into f4
li x3, 0xff2f4958 # load x3 with 32 MSBs 0x00000000ff2f4958
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff2f4958
sw x3, 0(x2) # store x3 (0xff2f4958) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000ff2f4958 from memory into f31
fnmsub.d f7, f20, f4, f31, dyn # perform operation
fnmsub.d f7, f20, f4, f31, rdn # perform operation
fnmsub.d f7, f20, f4, f31, rmm # perform operation
fnmsub.d f7, f20, f4, f31, rne # perform operation
fnmsub.d f7, f20, f4, f31, rtz # perform operation
fnmsub.d f7, f20, f4, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f20, f4, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f20, f4, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f20, f4, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f20, f4, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f20, f4, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fffffffffffffff)
li x6, 0xf0a9d111 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fffffffffffffff from memory into f10
li x3, 0x8325aa88 # load x3 with 32 MSBs 0x000000008325aa88
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008325aa88
sw x3, 0(x2) # store x3 (0x8325aa88) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000008325aa88 from memory into f14
fnmsub.d f6, f17, f10, f14, dyn # perform operation
fnmsub.d f6, f17, f10, f14, rdn # perform operation
fnmsub.d f6, f17, f10, f14, rmm # perform operation
fnmsub.d f6, f17, f10, f14, rne # perform operation
fnmsub.d f6, f17, f10, f14, rtz # perform operation
fnmsub.d f6, f17, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f17, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f17, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f17, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f17, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f17, f10, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000001)
li x7, 0x6c9ea59e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0xfaeedbac # load x3 with 32 MSBs 0x00000000faeedbac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000faeedbac
sw x3, 0(x2) # store x3 (0xfaeedbac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000faeedbac from memory into f22
fnmsub.d f7, f15, f3, f22, dyn # perform operation
fnmsub.d f7, f15, f3, f22, rdn # perform operation
fnmsub.d f7, f15, f3, f22, rmm # perform operation
fnmsub.d f7, f15, f3, f22, rne # perform operation
fnmsub.d f7, f15, f3, f22, rtz # perform operation
fnmsub.d f7, f15, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f15, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f15, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f15, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f15, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f15, f3, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff7ffffffffffff)
li x30, 0x3849432e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x317c1037 # load x3 with 32 MSBs 0x00000000317c1037
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000317c1037
sw x3, 0(x2) # store x3 (0x317c1037) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000317c1037 from memory into f17
fnmsub.d f30, f18, f11, f17, dyn # perform operation
fnmsub.d f30, f18, f11, f17, rdn # perform operation
fnmsub.d f30, f18, f11, f17, rmm # perform operation
fnmsub.d f30, f18, f11, f17, rne # perform operation
fnmsub.d f30, f18, f11, f17, rtz # perform operation
fnmsub.d f30, f18, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f18, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f18, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f18, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f18, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f18, f11, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x5a392534a57711ad)
li x17, 0x6e930841 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
li x3, 0x68066905 # load x3 with 32 MSBs 0x0000000068066905
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000068066905
sw x3, 0(x2) # store x3 (0x68066905) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000068066905 from memory into f25
fnmsub.d f17, f23, f22, f25, dyn # perform operation
fnmsub.d f17, f23, f22, f25, rdn # perform operation
fnmsub.d f17, f23, f22, f25, rmm # perform operation
fnmsub.d f17, f23, f22, f25, rne # perform operation
fnmsub.d f17, f23, f22, f25, rtz # perform operation
fnmsub.d f17, f23, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f23, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f23, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f23, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f23, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f23, f22, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xa6e895993737426c)
li x7, 0x016bb48a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
li x3, 0xebd683cd # load x3 with 32 MSBs 0x00000000ebd683cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ebd683cd
sw x3, 0(x2) # store x3 (0xebd683cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000ebd683cd from memory into f25
fnmsub.d f7, f17, f3, f25, dyn # perform operation
fnmsub.d f7, f17, f3, f25, rdn # perform operation
fnmsub.d f7, f17, f3, f25, rmm # perform operation
fnmsub.d f7, f17, f3, f25, rne # perform operation
fnmsub.d f7, f17, f3, f25, rtz # perform operation
fnmsub.d f7, f17, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f17, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f17, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f17, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f17, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f17, f3, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x0)
li x23, 0x95cec498 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000000 from memory into f10
li x3, 0x017c347d # load x3 with 32 MSBs 0x00000000017c347d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000017c347d
sw x3, 0(x2) # store x3 (0x017c347d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000017c347d from memory into f29
fnmsub.d f23, f31, f10, f29, dyn # perform operation
fnmsub.d f23, f31, f10, f29, rdn # perform operation
fnmsub.d f23, f31, f10, f29, rmm # perform operation
fnmsub.d f23, f31, f10, f29, rne # perform operation
fnmsub.d f23, f31, f10, f29, rtz # perform operation
fnmsub.d f23, f31, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f31, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f31, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f31, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f31, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f31, f10, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000000)
li x20, 0x39a2e13e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
li x3, 0x693a8926 # load x3 with 32 MSBs 0x00000000693a8926
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000693a8926
sw x3, 0(x2) # store x3 (0x693a8926) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000693a8926 from memory into f4
fnmsub.d f20, f12, f9, f4, dyn # perform operation
fnmsub.d f20, f12, f9, f4, rdn # perform operation
fnmsub.d f20, f12, f9, f4, rmm # perform operation
fnmsub.d f20, f12, f9, f4, rne # perform operation
fnmsub.d f20, f12, f9, f4, rtz # perform operation
fnmsub.d f20, f12, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f12, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f12, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f12, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f12, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f12, f9, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff0000000000000)
li x4, 0xfdcf7a95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0x864b78b6 # load x3 with 32 MSBs 0x00000000864b78b6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000864b78b6
sw x3, 0(x2) # store x3 (0x864b78b6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000864b78b6 from memory into f18
fnmsub.d f4, f7, f6, f18, dyn # perform operation
fnmsub.d f4, f7, f6, f18, rdn # perform operation
fnmsub.d f4, f7, f6, f18, rmm # perform operation
fnmsub.d f4, f7, f6, f18, rne # perform operation
fnmsub.d f4, f7, f6, f18, rtz # perform operation
fnmsub.d f4, f7, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f7, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f7, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f7, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f7, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f7, f6, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff0000000000000)
li x10, 0x0adb7571 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
li x3, 0xcac38b11 # load x3 with 32 MSBs 0x00000000cac38b11
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cac38b11
sw x3, 0(x2) # store x3 (0xcac38b11) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000cac38b11 from memory into f4
fnmsub.d f10, f5, f26, f4, dyn # perform operation
fnmsub.d f10, f5, f26, f4, rdn # perform operation
fnmsub.d f10, f5, f26, f4, rmm # perform operation
fnmsub.d f10, f5, f26, f4, rne # perform operation
fnmsub.d f10, f5, f26, f4, rtz # perform operation
fnmsub.d f10, f5, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f5, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f5, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f5, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f5, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f5, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff8000000000000)
li x28, 0x4a78b5d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0xbd0ed0fe # load x3 with 32 MSBs 0x00000000bd0ed0fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bd0ed0fe
sw x3, 0(x2) # store x3 (0xbd0ed0fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000bd0ed0fe from memory into f17
fnmsub.d f28, f29, f18, f17, dyn # perform operation
fnmsub.d f28, f29, f18, f17, rdn # perform operation
fnmsub.d f28, f29, f18, f17, rmm # perform operation
fnmsub.d f28, f29, f18, f17, rne # perform operation
fnmsub.d f28, f29, f18, f17, rtz # perform operation
fnmsub.d f28, f29, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f29, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f29, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f29, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f29, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f29, f18, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff8000000000000)
li x7, 0x6df98521 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
li x3, 0xf0de6b52 # load x3 with 32 MSBs 0x00000000f0de6b52
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f0de6b52
sw x3, 0(x2) # store x3 (0xf0de6b52) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000f0de6b52 from memory into f23
fnmsub.d f7, f1, f16, f23, dyn # perform operation
fnmsub.d f7, f1, f16, f23, rdn # perform operation
fnmsub.d f7, f1, f16, f23, rmm # perform operation
fnmsub.d f7, f1, f16, f23, rne # perform operation
fnmsub.d f7, f1, f16, f23, rtz # perform operation
fnmsub.d f7, f1, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f1, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f1, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f1, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f1, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f1, f16, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x4000000000000000)
li x19, 0x95ee4264 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
li x3, 0x33108a0e # load x3 with 32 MSBs 0x0000000033108a0e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000033108a0e
sw x3, 0(x2) # store x3 (0x33108a0e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000033108a0e from memory into f13
fnmsub.d f19, f7, f4, f13, dyn # perform operation
fnmsub.d f19, f7, f4, f13, rdn # perform operation
fnmsub.d f19, f7, f4, f13, rmm # perform operation
fnmsub.d f19, f7, f4, f13, rne # perform operation
fnmsub.d f19, f7, f4, f13, rtz # perform operation
fnmsub.d f19, f7, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f7, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f7, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f7, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f7, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f7, f4, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xc000000000000000)
li x25, 0x0c003fb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
li x3, 0x513a966d # load x3 with 32 MSBs 0x00000000513a966d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000513a966d
sw x3, 0(x2) # store x3 (0x513a966d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000513a966d from memory into f5
fnmsub.d f25, f24, f15, f5, dyn # perform operation
fnmsub.d f25, f24, f15, f5, rdn # perform operation
fnmsub.d f25, f24, f15, f5, rmm # perform operation
fnmsub.d f25, f24, f15, f5, rne # perform operation
fnmsub.d f25, f24, f15, f5, rtz # perform operation
fnmsub.d f25, f24, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f24, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f24, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f24, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f24, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f24, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x10000000000000)
li x6, 0x42074328 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
li x3, 0xfc834b07 # load x3 with 32 MSBs 0x00000000fc834b07
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fc834b07
sw x3, 0(x2) # store x3 (0xfc834b07) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000fc834b07 from memory into f17
fnmsub.d f6, f20, f9, f17, dyn # perform operation
fnmsub.d f6, f20, f9, f17, rdn # perform operation
fnmsub.d f6, f20, f9, f17, rmm # perform operation
fnmsub.d f6, f20, f9, f17, rne # perform operation
fnmsub.d f6, f20, f9, f17, rtz # perform operation
fnmsub.d f6, f20, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f20, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f20, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f20, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f20, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f20, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8010000000000000)
li x9, 0x69a2f476 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
li x3, 0x906141d3 # load x3 with 32 MSBs 0x00000000906141d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000906141d3
sw x3, 0(x2) # store x3 (0x906141d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000906141d3 from memory into f25
fnmsub.d f9, f2, f28, f25, dyn # perform operation
fnmsub.d f9, f2, f28, f25, rdn # perform operation
fnmsub.d f9, f2, f28, f25, rmm # perform operation
fnmsub.d f9, f2, f28, f25, rne # perform operation
fnmsub.d f9, f2, f28, f25, rtz # perform operation
fnmsub.d f9, f2, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f2, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f2, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f2, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f2, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f2, f28, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fefffffffffffff)
li x25, 0x1e4a8bb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0x2d99a0b2 # load x3 with 32 MSBs 0x000000002d99a0b2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d99a0b2
sw x3, 0(x2) # store x3 (0x2d99a0b2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000002d99a0b2 from memory into f3
fnmsub.d f25, f8, f30, f3, dyn # perform operation
fnmsub.d f25, f8, f30, f3, rdn # perform operation
fnmsub.d f25, f8, f30, f3, rmm # perform operation
fnmsub.d f25, f8, f30, f3, rne # perform operation
fnmsub.d f25, f8, f30, f3, rtz # perform operation
fnmsub.d f25, f8, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f8, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f8, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f8, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f8, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f8, f30, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xffefffffffffffff)
li x1, 0x94297573 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
li x3, 0xee85e5b6 # load x3 with 32 MSBs 0x00000000ee85e5b6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee85e5b6
sw x3, 0(x2) # store x3 (0xee85e5b6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000ee85e5b6 from memory into f7
fnmsub.d f1, f31, f15, f7, dyn # perform operation
fnmsub.d f1, f31, f15, f7, rdn # perform operation
fnmsub.d f1, f31, f15, f7, rmm # perform operation
fnmsub.d f1, f31, f15, f7, rne # perform operation
fnmsub.d f1, f31, f15, f7, rtz # perform operation
fnmsub.d f1, f31, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f31, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f31, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f31, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f31, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f31, f15, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfffffffffffff)
li x8, 0x3e3f23b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
li x3, 0xf25a9e47 # load x3 with 32 MSBs 0x00000000f25a9e47
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f25a9e47
sw x3, 0(x2) # store x3 (0xf25a9e47) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000f25a9e47 from memory into f4
fnmsub.d f8, f13, f19, f4, dyn # perform operation
fnmsub.d f8, f13, f19, f4, rdn # perform operation
fnmsub.d f8, f13, f19, f4, rmm # perform operation
fnmsub.d f8, f13, f19, f4, rne # perform operation
fnmsub.d f8, f13, f19, f4, rtz # perform operation
fnmsub.d f8, f13, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f13, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f13, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f13, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f13, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f13, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x800fffffffffffff)
li x30, 0x21568cd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
li x3, 0x61a3dfea # load x3 with 32 MSBs 0x0000000061a3dfea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000061a3dfea
sw x3, 0(x2) # store x3 (0x61a3dfea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000061a3dfea from memory into f27
fnmsub.d f30, f29, f15, f27, dyn # perform operation
fnmsub.d f30, f29, f15, f27, rdn # perform operation
fnmsub.d f30, f29, f15, f27, rmm # perform operation
fnmsub.d f30, f29, f15, f27, rne # perform operation
fnmsub.d f30, f29, f15, f27, rtz # perform operation
fnmsub.d f30, f29, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f29, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f29, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f29, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f29, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f29, f15, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000)
li x20, 0x02fa4c4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
li x3, 0xee61fa42 # load x3 with 32 MSBs 0x00000000ee61fa42
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee61fa42
sw x3, 0(x2) # store x3 (0xee61fa42) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000ee61fa42 from memory into f12
fnmsub.d f20, f10, f26, f12, dyn # perform operation
fnmsub.d f20, f10, f26, f12, rdn # perform operation
fnmsub.d f20, f10, f26, f12, rmm # perform operation
fnmsub.d f20, f10, f26, f12, rne # perform operation
fnmsub.d f20, f10, f26, f12, rtz # perform operation
fnmsub.d f20, f10, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f10, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f10, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f10, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f10, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f10, f26, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8008000000000000)
li x14, 0x4b604520 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
li x3, 0x33d2271c # load x3 with 32 MSBs 0x0000000033d2271c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000033d2271c
sw x3, 0(x2) # store x3 (0x33d2271c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000033d2271c from memory into f30
fnmsub.d f14, f19, f15, f30, dyn # perform operation
fnmsub.d f14, f19, f15, f30, rdn # perform operation
fnmsub.d f14, f19, f15, f30, rmm # perform operation
fnmsub.d f14, f19, f15, f30, rne # perform operation
fnmsub.d f14, f19, f15, f30, rtz # perform operation
fnmsub.d f14, f19, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f19, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f19, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f19, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f19, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f19, f15, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x1)
li x6, 0x9388668f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
li x3, 0xebb353f2 # load x3 with 32 MSBs 0x00000000ebb353f2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ebb353f2
sw x3, 0(x2) # store x3 (0xebb353f2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000ebb353f2 from memory into f23
fnmsub.d f6, f5, f28, f23, dyn # perform operation
fnmsub.d f6, f5, f28, f23, rdn # perform operation
fnmsub.d f6, f5, f28, f23, rmm # perform operation
fnmsub.d f6, f5, f28, f23, rne # perform operation
fnmsub.d f6, f5, f28, f23, rtz # perform operation
fnmsub.d f6, f5, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f5, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f5, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f5, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f5, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f5, f28, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000001)
li x12, 0x6399ff7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
li x3, 0xb8051a59 # load x3 with 32 MSBs 0x00000000b8051a59
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b8051a59
sw x3, 0(x2) # store x3 (0xb8051a59) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000b8051a59 from memory into f11
fnmsub.d f12, f13, f20, f11, dyn # perform operation
fnmsub.d f12, f13, f20, f11, rdn # perform operation
fnmsub.d f12, f13, f20, f11, rmm # perform operation
fnmsub.d f12, f13, f20, f11, rne # perform operation
fnmsub.d f12, f13, f20, f11, rtz # perform operation
fnmsub.d f12, f13, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f13, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f13, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f13, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f13, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f13, f20, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000000)
li x24, 0x667c972f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
li x3, 0x9bc38505 # load x3 with 32 MSBs 0x000000009bc38505
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009bc38505
sw x3, 0(x2) # store x3 (0x9bc38505) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000009bc38505 from memory into f6
fnmsub.d f24, f13, f22, f6, dyn # perform operation
fnmsub.d f24, f13, f22, f6, rdn # perform operation
fnmsub.d f24, f13, f22, f6, rmm # perform operation
fnmsub.d f24, f13, f22, f6, rne # perform operation
fnmsub.d f24, f13, f22, f6, rtz # perform operation
fnmsub.d f24, f13, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f13, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f13, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f13, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f13, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f13, f22, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfff0000000000000)
li x14, 0x522fca27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
li x3, 0xa24908a4 # load x3 with 32 MSBs 0x00000000a24908a4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a24908a4
sw x3, 0(x2) # store x3 (0xa24908a4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000a24908a4 from memory into f9
fnmsub.d f14, f30, f15, f9, dyn # perform operation
fnmsub.d f14, f30, f15, f9, rdn # perform operation
fnmsub.d f14, f30, f15, f9, rmm # perform operation
fnmsub.d f14, f30, f15, f9, rne # perform operation
fnmsub.d f14, f30, f15, f9, rtz # perform operation
fnmsub.d f14, f30, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f30, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f30, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f30, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f30, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f30, f15, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff8000000000000)
li x31, 0x8b9fa45a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
li x3, 0xa955b218 # load x3 with 32 MSBs 0x00000000a955b218
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a955b218
sw x3, 0(x2) # store x3 (0xa955b218) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000a955b218 from memory into f27
fnmsub.d f31, f19, f14, f27, dyn # perform operation
fnmsub.d f31, f19, f14, f27, rdn # perform operation
fnmsub.d f31, f19, f14, f27, rmm # perform operation
fnmsub.d f31, f19, f14, f27, rne # perform operation
fnmsub.d f31, f19, f14, f27, rtz # perform operation
fnmsub.d f31, f19, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f19, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f19, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f19, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f19, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f19, f14, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fffffffffffffff)
li x2, 0x26b994ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xc000000000000000 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
li x3, 0x13e148c4 # load x3 with 32 MSBs 0x0000000013e148c4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000013e148c4
sw x3, 0(x2) # store x3 (0x13e148c4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000013e148c4 from memory into f24
fnmsub.d f2, f4, f7, f24, dyn # perform operation
fnmsub.d f2, f4, f7, f24, rdn # perform operation
fnmsub.d f2, f4, f7, f24, rmm # perform operation
fnmsub.d f2, f4, f7, f24, rne # perform operation
fnmsub.d f2, f4, f7, f24, rtz # perform operation
fnmsub.d f2, f4, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f4, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f4, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f4, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f4, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f4, f7, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000001)
li x9, 0xb22718e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
li x3, 0xab20009a # load x3 with 32 MSBs 0x00000000ab20009a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ab20009a
sw x3, 0(x2) # store x3 (0xab20009a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000ab20009a from memory into f29
fnmsub.d f9, f30, f21, f29, dyn # perform operation
fnmsub.d f9, f30, f21, f29, rdn # perform operation
fnmsub.d f9, f30, f21, f29, rmm # perform operation
fnmsub.d f9, f30, f21, f29, rne # perform operation
fnmsub.d f9, f30, f21, f29, rtz # perform operation
fnmsub.d f9, f30, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f30, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f30, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f30, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f30, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f30, f21, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff7ffffffffffff)
li x25, 0xdf45542a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
li x3, 0x903b2780 # load x3 with 32 MSBs 0x00000000903b2780
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000903b2780
sw x3, 0(x2) # store x3 (0x903b2780) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000903b2780 from memory into f17
fnmsub.d f25, f6, f7, f17, dyn # perform operation
fnmsub.d f25, f6, f7, f17, rdn # perform operation
fnmsub.d f25, f6, f7, f17, rmm # perform operation
fnmsub.d f25, f6, f7, f17, rne # perform operation
fnmsub.d f25, f6, f7, f17, rtz # perform operation
fnmsub.d f25, f6, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f6, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f6, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f6, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f6, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f6, f7, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x5a392534a57711ad)
li x29, 0x439d9731 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
li x3, 0xa43d800c # load x3 with 32 MSBs 0x00000000a43d800c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a43d800c
sw x3, 0(x2) # store x3 (0xa43d800c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000a43d800c from memory into f7
fnmsub.d f29, f30, f26, f7, dyn # perform operation
fnmsub.d f29, f30, f26, f7, rdn # perform operation
fnmsub.d f29, f30, f26, f7, rmm # perform operation
fnmsub.d f29, f30, f26, f7, rne # perform operation
fnmsub.d f29, f30, f26, f7, rtz # perform operation
fnmsub.d f29, f30, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f30, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f30, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f30, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f30, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f30, f26, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xa6e895993737426c)
li x8, 0xa8b3334c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
li x3, 0x3f5ffcae # load x3 with 32 MSBs 0x000000003f5ffcae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003f5ffcae
sw x3, 0(x2) # store x3 (0x3f5ffcae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000003f5ffcae from memory into f31
fnmsub.d f8, f25, f24, f31, dyn # perform operation
fnmsub.d f8, f25, f24, f31, rdn # perform operation
fnmsub.d f8, f25, f24, f31, rmm # perform operation
fnmsub.d f8, f25, f24, f31, rne # perform operation
fnmsub.d f8, f25, f24, f31, rtz # perform operation
fnmsub.d f8, f25, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f25, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f25, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f25, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f25, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f25, f24, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x0)
li x16, 0x42c401c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
li x3, 0xf4077169 # load x3 with 32 MSBs 0x00000000f4077169
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f4077169
sw x3, 0(x2) # store x3 (0xf4077169) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000f4077169 from memory into f8
fnmsub.d f16, f27, f11, f8, dyn # perform operation
fnmsub.d f16, f27, f11, f8, rdn # perform operation
fnmsub.d f16, f27, f11, f8, rmm # perform operation
fnmsub.d f16, f27, f11, f8, rne # perform operation
fnmsub.d f16, f27, f11, f8, rtz # perform operation
fnmsub.d f16, f27, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f27, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f27, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f27, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f27, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f27, f11, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000000)
li x28, 0xba323197 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
li x3, 0xf7b820cd # load x3 with 32 MSBs 0x00000000f7b820cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f7b820cd
sw x3, 0(x2) # store x3 (0xf7b820cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000f7b820cd from memory into f30
fnmsub.d f28, f12, f14, f30, dyn # perform operation
fnmsub.d f28, f12, f14, f30, rdn # perform operation
fnmsub.d f28, f12, f14, f30, rmm # perform operation
fnmsub.d f28, f12, f14, f30, rne # perform operation
fnmsub.d f28, f12, f14, f30, rtz # perform operation
fnmsub.d f28, f12, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f12, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f12, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f12, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f12, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f12, f14, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff0000000000000)
li x29, 0xdf86cdfc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0010000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0x0ac83f8d # load x3 with 32 MSBs 0x000000000ac83f8d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000ac83f8d
sw x3, 0(x2) # store x3 (0x0ac83f8d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000000ac83f8d from memory into f27
fnmsub.d f29, f13, f1, f27, dyn # perform operation
fnmsub.d f29, f13, f1, f27, rdn # perform operation
fnmsub.d f29, f13, f1, f27, rmm # perform operation
fnmsub.d f29, f13, f1, f27, rne # perform operation
fnmsub.d f29, f13, f1, f27, rtz # perform operation
fnmsub.d f29, f13, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f13, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f13, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f13, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f13, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f13, f1, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff0000000000000)
li x2, 0xc3776dc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
li x3, 0xbfd08b62 # load x3 with 32 MSBs 0x00000000bfd08b62
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bfd08b62
sw x3, 0(x2) # store x3 (0xbfd08b62) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000bfd08b62 from memory into f22
fnmsub.d f2, f30, f15, f22, dyn # perform operation
fnmsub.d f2, f30, f15, f22, rdn # perform operation
fnmsub.d f2, f30, f15, f22, rmm # perform operation
fnmsub.d f2, f30, f15, f22, rne # perform operation
fnmsub.d f2, f30, f15, f22, rtz # perform operation
fnmsub.d f2, f30, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f30, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f30, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f30, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f30, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f30, f15, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff8000000000000)
li x28, 0x1822d612 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
li x3, 0x0686e0db # load x3 with 32 MSBs 0x000000000686e0db
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000686e0db
sw x3, 0(x2) # store x3 (0x0686e0db) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000000686e0db from memory into f19
fnmsub.d f28, f16, f2, f19, dyn # perform operation
fnmsub.d f28, f16, f2, f19, rdn # perform operation
fnmsub.d f28, f16, f2, f19, rmm # perform operation
fnmsub.d f28, f16, f2, f19, rne # perform operation
fnmsub.d f28, f16, f2, f19, rtz # perform operation
fnmsub.d f28, f16, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f16, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f16, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f16, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f16, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f16, f2, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff8000000000000)
li x26, 0xcc3ad270 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
li x3, 0x7d2e02cd # load x3 with 32 MSBs 0x000000007d2e02cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007d2e02cd
sw x3, 0(x2) # store x3 (0x7d2e02cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000007d2e02cd from memory into f1
fnmsub.d f26, f15, f5, f1, dyn # perform operation
fnmsub.d f26, f15, f5, f1, rdn # perform operation
fnmsub.d f26, f15, f5, f1, rmm # perform operation
fnmsub.d f26, f15, f5, f1, rne # perform operation
fnmsub.d f26, f15, f5, f1, rtz # perform operation
fnmsub.d f26, f15, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f15, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f15, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f15, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f15, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f15, f5, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x4000000000000000)
li x6, 0x6289128b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
li x3, 0x1de50b22 # load x3 with 32 MSBs 0x000000001de50b22
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001de50b22
sw x3, 0(x2) # store x3 (0x1de50b22) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000001de50b22 from memory into f28
fnmsub.d f6, f15, f4, f28, dyn # perform operation
fnmsub.d f6, f15, f4, f28, rdn # perform operation
fnmsub.d f6, f15, f4, f28, rmm # perform operation
fnmsub.d f6, f15, f4, f28, rne # perform operation
fnmsub.d f6, f15, f4, f28, rtz # perform operation
fnmsub.d f6, f15, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f15, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f15, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f15, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f15, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f15, f4, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xc000000000000000)
li x8, 0xf388318f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
li x3, 0x7421cdcc # load x3 with 32 MSBs 0x000000007421cdcc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007421cdcc
sw x3, 0(x2) # store x3 (0x7421cdcc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000007421cdcc from memory into f13
fnmsub.d f8, f5, f7, f13, dyn # perform operation
fnmsub.d f8, f5, f7, f13, rdn # perform operation
fnmsub.d f8, f5, f7, f13, rmm # perform operation
fnmsub.d f8, f5, f7, f13, rne # perform operation
fnmsub.d f8, f5, f7, f13, rtz # perform operation
fnmsub.d f8, f5, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f5, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f5, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f5, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f5, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f5, f7, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x10000000000000)
li x30, 0x23e59e62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
li x3, 0xf580322a # load x3 with 32 MSBs 0x00000000f580322a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f580322a
sw x3, 0(x2) # store x3 (0xf580322a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000f580322a from memory into f27
fnmsub.d f30, f21, f14, f27, dyn # perform operation
fnmsub.d f30, f21, f14, f27, rdn # perform operation
fnmsub.d f30, f21, f14, f27, rmm # perform operation
fnmsub.d f30, f21, f14, f27, rne # perform operation
fnmsub.d f30, f21, f14, f27, rtz # perform operation
fnmsub.d f30, f21, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f21, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f21, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f21, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f21, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f21, f14, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8010000000000000)
li x12, 0x0ef01742 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
li x3, 0x7304de65 # load x3 with 32 MSBs 0x000000007304de65
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007304de65
sw x3, 0(x2) # store x3 (0x7304de65) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000007304de65 from memory into f17
fnmsub.d f12, f1, f27, f17, dyn # perform operation
fnmsub.d f12, f1, f27, f17, rdn # perform operation
fnmsub.d f12, f1, f27, f17, rmm # perform operation
fnmsub.d f12, f1, f27, f17, rne # perform operation
fnmsub.d f12, f1, f27, f17, rtz # perform operation
fnmsub.d f12, f1, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f1, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f1, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f1, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f1, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f1, f27, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fefffffffffffff)
li x18, 0x9a7c01b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0x16d65648 # load x3 with 32 MSBs 0x0000000016d65648
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000016d65648
sw x3, 0(x2) # store x3 (0x16d65648) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000016d65648 from memory into f24
fnmsub.d f18, f6, f23, f24, dyn # perform operation
fnmsub.d f18, f6, f23, f24, rdn # perform operation
fnmsub.d f18, f6, f23, f24, rmm # perform operation
fnmsub.d f18, f6, f23, f24, rne # perform operation
fnmsub.d f18, f6, f23, f24, rtz # perform operation
fnmsub.d f18, f6, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f6, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f6, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f6, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f6, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f6, f23, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xffefffffffffffff)
li x21, 0x861ce094 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
li x3, 0xa56b5d43 # load x3 with 32 MSBs 0x00000000a56b5d43
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a56b5d43
sw x3, 0(x2) # store x3 (0xa56b5d43) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000a56b5d43 from memory into f31
fnmsub.d f21, f4, f19, f31, dyn # perform operation
fnmsub.d f21, f4, f19, f31, rdn # perform operation
fnmsub.d f21, f4, f19, f31, rmm # perform operation
fnmsub.d f21, f4, f19, f31, rne # perform operation
fnmsub.d f21, f4, f19, f31, rtz # perform operation
fnmsub.d f21, f4, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f4, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f4, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f4, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f4, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f4, f19, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfffffffffffff)
li x3, 0x15da8ef9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000fffffffffffff from memory into f16
li x3, 0xf475a3f2 # load x3 with 32 MSBs 0x00000000f475a3f2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f475a3f2
sw x3, 0(x2) # store x3 (0xf475a3f2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000f475a3f2 from memory into f10
fnmsub.d f3, f2, f16, f10, dyn # perform operation
fnmsub.d f3, f2, f16, f10, rdn # perform operation
fnmsub.d f3, f2, f16, f10, rmm # perform operation
fnmsub.d f3, f2, f16, f10, rne # perform operation
fnmsub.d f3, f2, f16, f10, rtz # perform operation
fnmsub.d f3, f2, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f2, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f2, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f2, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f2, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f2, f16, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x800fffffffffffff)
li x29, 0x98b103e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
li x3, 0x5e529de1 # load x3 with 32 MSBs 0x000000005e529de1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e529de1
sw x3, 0(x2) # store x3 (0x5e529de1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000005e529de1 from memory into f13
fnmsub.d f29, f26, f7, f13, dyn # perform operation
fnmsub.d f29, f26, f7, f13, rdn # perform operation
fnmsub.d f29, f26, f7, f13, rmm # perform operation
fnmsub.d f29, f26, f7, f13, rne # perform operation
fnmsub.d f29, f26, f7, f13, rtz # perform operation
fnmsub.d f29, f26, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f26, f7, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000)
li x1, 0x2b1b88d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
li x3, 0xe8802a00 # load x3 with 32 MSBs 0x00000000e8802a00
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8802a00
sw x3, 0(x2) # store x3 (0xe8802a00) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000e8802a00 from memory into f7
fnmsub.d f1, f10, f29, f7, dyn # perform operation
fnmsub.d f1, f10, f29, f7, rdn # perform operation
fnmsub.d f1, f10, f29, f7, rmm # perform operation
fnmsub.d f1, f10, f29, f7, rne # perform operation
fnmsub.d f1, f10, f29, f7, rtz # perform operation
fnmsub.d f1, f10, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f10, f29, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8008000000000000)
li x25, 0x2b81d968 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
li x3, 0xa89e8cd5 # load x3 with 32 MSBs 0x00000000a89e8cd5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a89e8cd5
sw x3, 0(x2) # store x3 (0xa89e8cd5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000a89e8cd5 from memory into f8
fnmsub.d f25, f15, f19, f8, dyn # perform operation
fnmsub.d f25, f15, f19, f8, rdn # perform operation
fnmsub.d f25, f15, f19, f8, rmm # perform operation
fnmsub.d f25, f15, f19, f8, rne # perform operation
fnmsub.d f25, f15, f19, f8, rtz # perform operation
fnmsub.d f25, f15, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f15, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f15, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f15, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f15, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f15, f19, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x1)
li x19, 0xca108830 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
li x3, 0x7df9e5d3 # load x3 with 32 MSBs 0x000000007df9e5d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007df9e5d3
sw x3, 0(x2) # store x3 (0x7df9e5d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000007df9e5d3 from memory into f2
fnmsub.d f19, f9, f1, f2, dyn # perform operation
fnmsub.d f19, f9, f1, f2, rdn # perform operation
fnmsub.d f19, f9, f1, f2, rmm # perform operation
fnmsub.d f19, f9, f1, f2, rne # perform operation
fnmsub.d f19, f9, f1, f2, rtz # perform operation
fnmsub.d f19, f9, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f9, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f9, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f9, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f9, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f9, f1, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000001)
li x17, 0x634ca9d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
li x3, 0xb2a2d4d2 # load x3 with 32 MSBs 0x00000000b2a2d4d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2a2d4d2
sw x3, 0(x2) # store x3 (0xb2a2d4d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000b2a2d4d2 from memory into f19
fnmsub.d f17, f29, f20, f19, dyn # perform operation
fnmsub.d f17, f29, f20, f19, rdn # perform operation
fnmsub.d f17, f29, f20, f19, rmm # perform operation
fnmsub.d f17, f29, f20, f19, rne # perform operation
fnmsub.d f17, f29, f20, f19, rtz # perform operation
fnmsub.d f17, f29, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f29, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f29, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f29, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f29, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f29, f20, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000000)
li x6, 0x3195d973 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
li x3, 0xe87d899d # load x3 with 32 MSBs 0x00000000e87d899d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e87d899d
sw x3, 0(x2) # store x3 (0xe87d899d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000e87d899d from memory into f16
fnmsub.d f6, f17, f1, f16, dyn # perform operation
fnmsub.d f6, f17, f1, f16, rdn # perform operation
fnmsub.d f6, f17, f1, f16, rmm # perform operation
fnmsub.d f6, f17, f1, f16, rne # perform operation
fnmsub.d f6, f17, f1, f16, rtz # perform operation
fnmsub.d f6, f17, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f17, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f17, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f17, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f17, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f17, f1, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfff0000000000000)
li x8, 0x894a494a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0x2331f730 # load x3 with 32 MSBs 0x000000002331f730
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002331f730
sw x3, 0(x2) # store x3 (0x2331f730) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000002331f730 from memory into f7
fnmsub.d f8, f9, f1, f7, dyn # perform operation
fnmsub.d f8, f9, f1, f7, rdn # perform operation
fnmsub.d f8, f9, f1, f7, rmm # perform operation
fnmsub.d f8, f9, f1, f7, rne # perform operation
fnmsub.d f8, f9, f1, f7, rtz # perform operation
fnmsub.d f8, f9, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f9, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f9, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f9, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f9, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f9, f1, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff8000000000000)
li x19, 0x4982c7ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
li x3, 0xaf2269db # load x3 with 32 MSBs 0x00000000af2269db
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af2269db
sw x3, 0(x2) # store x3 (0xaf2269db) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000af2269db from memory into f28
fnmsub.d f19, f25, f31, f28, dyn # perform operation
fnmsub.d f19, f25, f31, f28, rdn # perform operation
fnmsub.d f19, f25, f31, f28, rmm # perform operation
fnmsub.d f19, f25, f31, f28, rne # perform operation
fnmsub.d f19, f25, f31, f28, rtz # perform operation
fnmsub.d f19, f25, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f25, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f25, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f25, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f25, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f25, f31, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fffffffffffffff)
li x8, 0x79ec1766 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
li x3, 0x56e2d8e1 # load x3 with 32 MSBs 0x0000000056e2d8e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000056e2d8e1
sw x3, 0(x2) # store x3 (0x56e2d8e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000056e2d8e1 from memory into f2
fnmsub.d f8, f6, f14, f2, dyn # perform operation
fnmsub.d f8, f6, f14, f2, rdn # perform operation
fnmsub.d f8, f6, f14, f2, rmm # perform operation
fnmsub.d f8, f6, f14, f2, rne # perform operation
fnmsub.d f8, f6, f14, f2, rtz # perform operation
fnmsub.d f8, f6, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f6, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f6, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f6, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f6, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f6, f14, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000001)
li x12, 0x2800f9f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
li x3, 0x4d5ceb25 # load x3 with 32 MSBs 0x000000004d5ceb25
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d5ceb25
sw x3, 0(x2) # store x3 (0x4d5ceb25) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000004d5ceb25 from memory into f30
fnmsub.d f12, f15, f19, f30, dyn # perform operation
fnmsub.d f12, f15, f19, f30, rdn # perform operation
fnmsub.d f12, f15, f19, f30, rmm # perform operation
fnmsub.d f12, f15, f19, f30, rne # perform operation
fnmsub.d f12, f15, f19, f30, rtz # perform operation
fnmsub.d f12, f15, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f15, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f15, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f15, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f15, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f15, f19, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff7ffffffffffff)
li x28, 0x99a1bc99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
li x3, 0xe38074ff # load x3 with 32 MSBs 0x00000000e38074ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e38074ff
sw x3, 0(x2) # store x3 (0xe38074ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000e38074ff from memory into f10
fnmsub.d f28, f19, f24, f10, dyn # perform operation
fnmsub.d f28, f19, f24, f10, rdn # perform operation
fnmsub.d f28, f19, f24, f10, rmm # perform operation
fnmsub.d f28, f19, f24, f10, rne # perform operation
fnmsub.d f28, f19, f24, f10, rtz # perform operation
fnmsub.d f28, f19, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f19, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f19, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f19, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f19, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f19, f24, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x5a392534a57711ad)
li x9, 0x6dd9c629 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
li x3, 0x8a48384a # load x3 with 32 MSBs 0x000000008a48384a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008a48384a
sw x3, 0(x2) # store x3 (0x8a48384a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000008a48384a from memory into f18
fnmsub.d f9, f11, f5, f18, dyn # perform operation
fnmsub.d f9, f11, f5, f18, rdn # perform operation
fnmsub.d f9, f11, f5, f18, rmm # perform operation
fnmsub.d f9, f11, f5, f18, rne # perform operation
fnmsub.d f9, f11, f5, f18, rtz # perform operation
fnmsub.d f9, f11, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f11, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f11, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f11, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f11, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f11, f5, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xa6e895993737426c)
li x6, 0xd686d761 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
li x3, 0xd8679160 # load x3 with 32 MSBs 0x00000000d8679160
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d8679160
sw x3, 0(x2) # store x3 (0xd8679160) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000d8679160 from memory into f22
fnmsub.d f6, f24, f12, f22, dyn # perform operation
fnmsub.d f6, f24, f12, f22, rdn # perform operation
fnmsub.d f6, f24, f12, f22, rmm # perform operation
fnmsub.d f6, f24, f12, f22, rne # perform operation
fnmsub.d f6, f24, f12, f22, rtz # perform operation
fnmsub.d f6, f24, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f24, f12, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x0)
li x10, 0xe3a42eb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
li x3, 0x94a56d1c # load x3 with 32 MSBs 0x0000000094a56d1c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000094a56d1c
sw x3, 0(x2) # store x3 (0x94a56d1c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000094a56d1c from memory into f11
fnmsub.d f10, f3, f28, f11, dyn # perform operation
fnmsub.d f10, f3, f28, f11, rdn # perform operation
fnmsub.d f10, f3, f28, f11, rmm # perform operation
fnmsub.d f10, f3, f28, f11, rne # perform operation
fnmsub.d f10, f3, f28, f11, rtz # perform operation
fnmsub.d f10, f3, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f3, f28, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000000)
li x1, 0x5c215132 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
li x3, 0xdc24681f # load x3 with 32 MSBs 0x00000000dc24681f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc24681f
sw x3, 0(x2) # store x3 (0xdc24681f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000dc24681f from memory into f6
fnmsub.d f1, f4, f24, f6, dyn # perform operation
fnmsub.d f1, f4, f24, f6, rdn # perform operation
fnmsub.d f1, f4, f24, f6, rmm # perform operation
fnmsub.d f1, f4, f24, f6, rne # perform operation
fnmsub.d f1, f4, f24, f6, rtz # perform operation
fnmsub.d f1, f4, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f4, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f4, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f4, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f4, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f4, f24, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff0000000000000)
li x4, 0x927af3eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0xd53932eb # load x3 with 32 MSBs 0x00000000d53932eb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d53932eb
sw x3, 0(x2) # store x3 (0xd53932eb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000d53932eb from memory into f27
fnmsub.d f4, f25, f15, f27, dyn # perform operation
fnmsub.d f4, f25, f15, f27, rdn # perform operation
fnmsub.d f4, f25, f15, f27, rmm # perform operation
fnmsub.d f4, f25, f15, f27, rne # perform operation
fnmsub.d f4, f25, f15, f27, rtz # perform operation
fnmsub.d f4, f25, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f25, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f25, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f25, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f25, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f25, f15, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff0000000000000)
li x16, 0x9d416040 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
li x3, 0x6fef164b # load x3 with 32 MSBs 0x000000006fef164b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006fef164b
sw x3, 0(x2) # store x3 (0x6fef164b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000006fef164b from memory into f7
fnmsub.d f16, f10, f6, f7, dyn # perform operation
fnmsub.d f16, f10, f6, f7, rdn # perform operation
fnmsub.d f16, f10, f6, f7, rmm # perform operation
fnmsub.d f16, f10, f6, f7, rne # perform operation
fnmsub.d f16, f10, f6, f7, rtz # perform operation
fnmsub.d f16, f10, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f10, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f10, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f10, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f10, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f10, f6, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff8000000000000)
li x6, 0x6d7b1cf8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
li x3, 0xddbb464e # load x3 with 32 MSBs 0x00000000ddbb464e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ddbb464e
sw x3, 0(x2) # store x3 (0xddbb464e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000ddbb464e from memory into f9
fnmsub.d f6, f18, f15, f9, dyn # perform operation
fnmsub.d f6, f18, f15, f9, rdn # perform operation
fnmsub.d f6, f18, f15, f9, rmm # perform operation
fnmsub.d f6, f18, f15, f9, rne # perform operation
fnmsub.d f6, f18, f15, f9, rtz # perform operation
fnmsub.d f6, f18, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f18, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f18, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f18, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f18, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f18, f15, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff8000000000000)
li x11, 0xe8515256 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
li x3, 0x8feda830 # load x3 with 32 MSBs 0x000000008feda830
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008feda830
sw x3, 0(x2) # store x3 (0x8feda830) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000008feda830 from memory into f23
fnmsub.d f11, f21, f14, f23, dyn # perform operation
fnmsub.d f11, f21, f14, f23, rdn # perform operation
fnmsub.d f11, f21, f14, f23, rmm # perform operation
fnmsub.d f11, f21, f14, f23, rne # perform operation
fnmsub.d f11, f21, f14, f23, rtz # perform operation
fnmsub.d f11, f21, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f21, f14, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x4000000000000000)
li x23, 0x581e34f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x4000000000000000 from memory into f3
li x3, 0x350080bc # load x3 with 32 MSBs 0x00000000350080bc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000350080bc
sw x3, 0(x2) # store x3 (0x350080bc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000350080bc from memory into f12
fnmsub.d f23, f18, f3, f12, dyn # perform operation
fnmsub.d f23, f18, f3, f12, rdn # perform operation
fnmsub.d f23, f18, f3, f12, rmm # perform operation
fnmsub.d f23, f18, f3, f12, rne # perform operation
fnmsub.d f23, f18, f3, f12, rtz # perform operation
fnmsub.d f23, f18, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f18, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f18, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f18, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f18, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f18, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xc000000000000000)
li x11, 0xf8d9ade1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0x3145166b # load x3 with 32 MSBs 0x000000003145166b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003145166b
sw x3, 0(x2) # store x3 (0x3145166b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000003145166b from memory into f13
fnmsub.d f11, f24, f25, f13, dyn # perform operation
fnmsub.d f11, f24, f25, f13, rdn # perform operation
fnmsub.d f11, f24, f25, f13, rmm # perform operation
fnmsub.d f11, f24, f25, f13, rne # perform operation
fnmsub.d f11, f24, f25, f13, rtz # perform operation
fnmsub.d f11, f24, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f24, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f24, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f24, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f24, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f24, f25, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x10000000000000)
li x14, 0xb8e5f74c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
li x3, 0xc06534be # load x3 with 32 MSBs 0x00000000c06534be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c06534be
sw x3, 0(x2) # store x3 (0xc06534be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000c06534be from memory into f31
fnmsub.d f14, f6, f9, f31, dyn # perform operation
fnmsub.d f14, f6, f9, f31, rdn # perform operation
fnmsub.d f14, f6, f9, f31, rmm # perform operation
fnmsub.d f14, f6, f9, f31, rne # perform operation
fnmsub.d f14, f6, f9, f31, rtz # perform operation
fnmsub.d f14, f6, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f6, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f6, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f6, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f6, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f6, f9, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8010000000000000)
li x5, 0xbaa3a52f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8010000000000000 from memory into f1
li x3, 0x062abd8d # load x3 with 32 MSBs 0x00000000062abd8d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000062abd8d
sw x3, 0(x2) # store x3 (0x062abd8d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000062abd8d from memory into f26
fnmsub.d f5, f18, f1, f26, dyn # perform operation
fnmsub.d f5, f18, f1, f26, rdn # perform operation
fnmsub.d f5, f18, f1, f26, rmm # perform operation
fnmsub.d f5, f18, f1, f26, rne # perform operation
fnmsub.d f5, f18, f1, f26, rtz # perform operation
fnmsub.d f5, f18, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f18, f1, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fefffffffffffff)
li x21, 0x2351dfe3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
li x3, 0x96582537 # load x3 with 32 MSBs 0x0000000096582537
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000096582537
sw x3, 0(x2) # store x3 (0x96582537) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000096582537 from memory into f20
fnmsub.d f21, f14, f31, f20, dyn # perform operation
fnmsub.d f21, f14, f31, f20, rdn # perform operation
fnmsub.d f21, f14, f31, f20, rmm # perform operation
fnmsub.d f21, f14, f31, f20, rne # perform operation
fnmsub.d f21, f14, f31, f20, rtz # perform operation
fnmsub.d f21, f14, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f14, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f14, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f14, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f14, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f14, f31, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xffefffffffffffff)
li x13, 0x3b3045ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
li x3, 0x72fef51b # load x3 with 32 MSBs 0x0000000072fef51b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000072fef51b
sw x3, 0(x2) # store x3 (0x72fef51b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000072fef51b from memory into f20
fnmsub.d f13, f24, f27, f20, dyn # perform operation
fnmsub.d f13, f24, f27, f20, rdn # perform operation
fnmsub.d f13, f24, f27, f20, rmm # perform operation
fnmsub.d f13, f24, f27, f20, rne # perform operation
fnmsub.d f13, f24, f27, f20, rtz # perform operation
fnmsub.d f13, f24, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f24, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f24, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f24, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f24, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f24, f27, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfffffffffffff)
li x5, 0x5e9b351e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
li x3, 0x2d0c6cb3 # load x3 with 32 MSBs 0x000000002d0c6cb3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d0c6cb3
sw x3, 0(x2) # store x3 (0x2d0c6cb3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000002d0c6cb3 from memory into f14
fnmsub.d f5, f31, f24, f14, dyn # perform operation
fnmsub.d f5, f31, f24, f14, rdn # perform operation
fnmsub.d f5, f31, f24, f14, rmm # perform operation
fnmsub.d f5, f31, f24, f14, rne # perform operation
fnmsub.d f5, f31, f24, f14, rtz # perform operation
fnmsub.d f5, f31, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f31, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f31, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f31, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f31, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f31, f24, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x800fffffffffffff)
li x22, 0xe6828e90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
li x3, 0xf15027b3 # load x3 with 32 MSBs 0x00000000f15027b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f15027b3
sw x3, 0(x2) # store x3 (0xf15027b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000f15027b3 from memory into f5
fnmsub.d f22, f31, f15, f5, dyn # perform operation
fnmsub.d f22, f31, f15, f5, rdn # perform operation
fnmsub.d f22, f31, f15, f5, rmm # perform operation
fnmsub.d f22, f31, f15, f5, rne # perform operation
fnmsub.d f22, f31, f15, f5, rtz # perform operation
fnmsub.d f22, f31, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f31, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f31, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f31, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f31, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f31, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000)
li x14, 0x53a56544 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
li x3, 0x07ae1f35 # load x3 with 32 MSBs 0x0000000007ae1f35
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000007ae1f35
sw x3, 0(x2) # store x3 (0x07ae1f35) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000007ae1f35 from memory into f8
fnmsub.d f14, f17, f6, f8, dyn # perform operation
fnmsub.d f14, f17, f6, f8, rdn # perform operation
fnmsub.d f14, f17, f6, f8, rmm # perform operation
fnmsub.d f14, f17, f6, f8, rne # perform operation
fnmsub.d f14, f17, f6, f8, rtz # perform operation
fnmsub.d f14, f17, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f17, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f17, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f17, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f17, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f17, f6, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8008000000000000)
li x26, 0x0fad9a36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
li x3, 0xb1999645 # load x3 with 32 MSBs 0x00000000b1999645
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1999645
sw x3, 0(x2) # store x3 (0xb1999645) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000b1999645 from memory into f18
fnmsub.d f26, f21, f28, f18, dyn # perform operation
fnmsub.d f26, f21, f28, f18, rdn # perform operation
fnmsub.d f26, f21, f28, f18, rmm # perform operation
fnmsub.d f26, f21, f28, f18, rne # perform operation
fnmsub.d f26, f21, f28, f18, rtz # perform operation
fnmsub.d f26, f21, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f21, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f21, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f21, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f21, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f21, f28, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x1)
li x13, 0x53dcad7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
li x3, 0x11eaf30f # load x3 with 32 MSBs 0x0000000011eaf30f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000011eaf30f
sw x3, 0(x2) # store x3 (0x11eaf30f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000011eaf30f from memory into f23
fnmsub.d f13, f8, f19, f23, dyn # perform operation
fnmsub.d f13, f8, f19, f23, rdn # perform operation
fnmsub.d f13, f8, f19, f23, rmm # perform operation
fnmsub.d f13, f8, f19, f23, rne # perform operation
fnmsub.d f13, f8, f19, f23, rtz # perform operation
fnmsub.d f13, f8, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f8, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f8, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f8, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f8, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f8, f19, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000001)
li x19, 0xfeb5b18d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
li x3, 0xa143a4ed # load x3 with 32 MSBs 0x00000000a143a4ed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a143a4ed
sw x3, 0(x2) # store x3 (0xa143a4ed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000a143a4ed from memory into f13
fnmsub.d f19, f2, f30, f13, dyn # perform operation
fnmsub.d f19, f2, f30, f13, rdn # perform operation
fnmsub.d f19, f2, f30, f13, rmm # perform operation
fnmsub.d f19, f2, f30, f13, rne # perform operation
fnmsub.d f19, f2, f30, f13, rtz # perform operation
fnmsub.d f19, f2, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f2, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f2, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f2, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f2, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f2, f30, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000000)
li x17, 0x1c091153 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
li x3, 0x8efe5760 # load x3 with 32 MSBs 0x000000008efe5760
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008efe5760
sw x3, 0(x2) # store x3 (0x8efe5760) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000008efe5760 from memory into f3
fnmsub.d f17, f13, f4, f3, dyn # perform operation
fnmsub.d f17, f13, f4, f3, rdn # perform operation
fnmsub.d f17, f13, f4, f3, rmm # perform operation
fnmsub.d f17, f13, f4, f3, rne # perform operation
fnmsub.d f17, f13, f4, f3, rtz # perform operation
fnmsub.d f17, f13, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f13, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f13, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f13, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f13, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f13, f4, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfff0000000000000)
li x2, 0xd648b343 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
li x3, 0x84e6086e # load x3 with 32 MSBs 0x0000000084e6086e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084e6086e
sw x3, 0(x2) # store x3 (0x84e6086e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000084e6086e from memory into f28
fnmsub.d f2, f27, f26, f28, dyn # perform operation
fnmsub.d f2, f27, f26, f28, rdn # perform operation
fnmsub.d f2, f27, f26, f28, rmm # perform operation
fnmsub.d f2, f27, f26, f28, rne # perform operation
fnmsub.d f2, f27, f26, f28, rtz # perform operation
fnmsub.d f2, f27, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f27, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f27, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f27, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f27, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f27, f26, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff8000000000000)
li x11, 0x7ba283ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
li x3, 0xc0997e6c # load x3 with 32 MSBs 0x00000000c0997e6c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c0997e6c
sw x3, 0(x2) # store x3 (0xc0997e6c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000c0997e6c from memory into f8
fnmsub.d f11, f19, f18, f8, dyn # perform operation
fnmsub.d f11, f19, f18, f8, rdn # perform operation
fnmsub.d f11, f19, f18, f8, rmm # perform operation
fnmsub.d f11, f19, f18, f8, rne # perform operation
fnmsub.d f11, f19, f18, f8, rtz # perform operation
fnmsub.d f11, f19, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f19, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f19, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f19, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f19, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f19, f18, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fffffffffffffff)
li x12, 0x868db0c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
li x3, 0x36b92736 # load x3 with 32 MSBs 0x0000000036b92736
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000036b92736
sw x3, 0(x2) # store x3 (0x36b92736) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000036b92736 from memory into f30
fnmsub.d f12, f7, f25, f30, dyn # perform operation
fnmsub.d f12, f7, f25, f30, rdn # perform operation
fnmsub.d f12, f7, f25, f30, rmm # perform operation
fnmsub.d f12, f7, f25, f30, rne # perform operation
fnmsub.d f12, f7, f25, f30, rtz # perform operation
fnmsub.d f12, f7, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f7, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f7, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f7, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f7, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f7, f25, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000001)
li x13, 0x42e64f4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8010000000000000 from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
li x3, 0xe6eeb103 # load x3 with 32 MSBs 0x00000000e6eeb103
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e6eeb103
sw x3, 0(x2) # store x3 (0xe6eeb103) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000e6eeb103 from memory into f21
fnmsub.d f13, f1, f9, f21, dyn # perform operation
fnmsub.d f13, f1, f9, f21, rdn # perform operation
fnmsub.d f13, f1, f9, f21, rmm # perform operation
fnmsub.d f13, f1, f9, f21, rne # perform operation
fnmsub.d f13, f1, f9, f21, rtz # perform operation
fnmsub.d f13, f1, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f1, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f1, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f1, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f1, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f1, f9, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff7ffffffffffff)
li x18, 0x4a07a49c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
li x3, 0x049ef831 # load x3 with 32 MSBs 0x00000000049ef831
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000049ef831
sw x3, 0(x2) # store x3 (0x049ef831) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000049ef831 from memory into f1
fnmsub.d f18, f5, f25, f1, dyn # perform operation
fnmsub.d f18, f5, f25, f1, rdn # perform operation
fnmsub.d f18, f5, f25, f1, rmm # perform operation
fnmsub.d f18, f5, f25, f1, rne # perform operation
fnmsub.d f18, f5, f25, f1, rtz # perform operation
fnmsub.d f18, f5, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f5, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f5, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f5, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f5, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f5, f25, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x5a392534a57711ad)
li x14, 0x5385417c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0x121d3dbb # load x3 with 32 MSBs 0x00000000121d3dbb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000121d3dbb
sw x3, 0(x2) # store x3 (0x121d3dbb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000121d3dbb from memory into f28
fnmsub.d f14, f17, f31, f28, dyn # perform operation
fnmsub.d f14, f17, f31, f28, rdn # perform operation
fnmsub.d f14, f17, f31, f28, rmm # perform operation
fnmsub.d f14, f17, f31, f28, rne # perform operation
fnmsub.d f14, f17, f31, f28, rtz # perform operation
fnmsub.d f14, f17, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f17, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f17, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f17, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f17, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f17, f31, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xa6e895993737426c)
li x28, 0x093f1d3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
li x3, 0x2bc888d2 # load x3 with 32 MSBs 0x000000002bc888d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002bc888d2
sw x3, 0(x2) # store x3 (0x2bc888d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000002bc888d2 from memory into f26
fnmsub.d f28, f18, f1, f26, dyn # perform operation
fnmsub.d f28, f18, f1, f26, rdn # perform operation
fnmsub.d f28, f18, f1, f26, rmm # perform operation
fnmsub.d f28, f18, f1, f26, rne # perform operation
fnmsub.d f28, f18, f1, f26, rtz # perform operation
fnmsub.d f28, f18, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f18, f1, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x0)
li x17, 0x1940abdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
li x3, 0x272e2db1 # load x3 with 32 MSBs 0x00000000272e2db1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000272e2db1
sw x3, 0(x2) # store x3 (0x272e2db1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000272e2db1 from memory into f6
fnmsub.d f17, f4, f16, f6, dyn # perform operation
fnmsub.d f17, f4, f16, f6, rdn # perform operation
fnmsub.d f17, f4, f16, f6, rmm # perform operation
fnmsub.d f17, f4, f16, f6, rne # perform operation
fnmsub.d f17, f4, f16, f6, rtz # perform operation
fnmsub.d f17, f4, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f4, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f4, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f4, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f4, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f4, f16, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000000)
li x2, 0xe38c8708 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
li x3, 0x5bd29778 # load x3 with 32 MSBs 0x000000005bd29778
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005bd29778
sw x3, 0(x2) # store x3 (0x5bd29778) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000005bd29778 from memory into f5
fnmsub.d f2, f1, f25, f5, dyn # perform operation
fnmsub.d f2, f1, f25, f5, rdn # perform operation
fnmsub.d f2, f1, f25, f5, rmm # perform operation
fnmsub.d f2, f1, f25, f5, rne # perform operation
fnmsub.d f2, f1, f25, f5, rtz # perform operation
fnmsub.d f2, f1, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f1, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f1, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f1, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f1, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f1, f25, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff0000000000000)
li x24, 0xb6493e51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
li x3, 0xffd6d51e # load x3 with 32 MSBs 0x00000000ffd6d51e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ffd6d51e
sw x3, 0(x2) # store x3 (0xffd6d51e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000ffd6d51e from memory into f5
fnmsub.d f24, f19, f18, f5, dyn # perform operation
fnmsub.d f24, f19, f18, f5, rdn # perform operation
fnmsub.d f24, f19, f18, f5, rmm # perform operation
fnmsub.d f24, f19, f18, f5, rne # perform operation
fnmsub.d f24, f19, f18, f5, rtz # perform operation
fnmsub.d f24, f19, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f19, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f19, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f19, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f19, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f19, f18, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff0000000000000)
li x24, 0x8166e621 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0x4fa737d3 # load x3 with 32 MSBs 0x000000004fa737d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004fa737d3
sw x3, 0(x2) # store x3 (0x4fa737d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000004fa737d3 from memory into f7
fnmsub.d f24, f2, f13, f7, dyn # perform operation
fnmsub.d f24, f2, f13, f7, rdn # perform operation
fnmsub.d f24, f2, f13, f7, rmm # perform operation
fnmsub.d f24, f2, f13, f7, rne # perform operation
fnmsub.d f24, f2, f13, f7, rtz # perform operation
fnmsub.d f24, f2, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f2, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f2, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f2, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f2, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f2, f13, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff8000000000000)
li x14, 0xa5494655 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
li x3, 0x7da0accd # load x3 with 32 MSBs 0x000000007da0accd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007da0accd
sw x3, 0(x2) # store x3 (0x7da0accd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000007da0accd from memory into f12
fnmsub.d f14, f15, f9, f12, dyn # perform operation
fnmsub.d f14, f15, f9, f12, rdn # perform operation
fnmsub.d f14, f15, f9, f12, rmm # perform operation
fnmsub.d f14, f15, f9, f12, rne # perform operation
fnmsub.d f14, f15, f9, f12, rtz # perform operation
fnmsub.d f14, f15, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f15, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f15, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f15, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f15, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f15, f9, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff8000000000000)
li x25, 0x3af438c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
li x3, 0x78cdf8a3 # load x3 with 32 MSBs 0x0000000078cdf8a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000078cdf8a3
sw x3, 0(x2) # store x3 (0x78cdf8a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000078cdf8a3 from memory into f31
fnmsub.d f25, f13, f11, f31, dyn # perform operation
fnmsub.d f25, f13, f11, f31, rdn # perform operation
fnmsub.d f25, f13, f11, f31, rmm # perform operation
fnmsub.d f25, f13, f11, f31, rne # perform operation
fnmsub.d f25, f13, f11, f31, rtz # perform operation
fnmsub.d f25, f13, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f13, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f13, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f13, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f13, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f13, f11, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x4000000000000000)
li x26, 0x2f1f523a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
li x3, 0xef0d97f5 # load x3 with 32 MSBs 0x00000000ef0d97f5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef0d97f5
sw x3, 0(x2) # store x3 (0xef0d97f5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000ef0d97f5 from memory into f8
fnmsub.d f26, f4, f6, f8, dyn # perform operation
fnmsub.d f26, f4, f6, f8, rdn # perform operation
fnmsub.d f26, f4, f6, f8, rmm # perform operation
fnmsub.d f26, f4, f6, f8, rne # perform operation
fnmsub.d f26, f4, f6, f8, rtz # perform operation
fnmsub.d f26, f4, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f4, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f4, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f4, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f4, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f4, f6, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xc000000000000000)
li x18, 0xb2ab03bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0xf018ea39 # load x3 with 32 MSBs 0x00000000f018ea39
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f018ea39
sw x3, 0(x2) # store x3 (0xf018ea39) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000f018ea39 from memory into f2
fnmsub.d f18, f29, f25, f2, dyn # perform operation
fnmsub.d f18, f29, f25, f2, rdn # perform operation
fnmsub.d f18, f29, f25, f2, rmm # perform operation
fnmsub.d f18, f29, f25, f2, rne # perform operation
fnmsub.d f18, f29, f25, f2, rtz # perform operation
fnmsub.d f18, f29, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f29, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f29, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f29, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f29, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f29, f25, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x10000000000000)
li x8, 0x980c3686 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
li x3, 0x2c2d4608 # load x3 with 32 MSBs 0x000000002c2d4608
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002c2d4608
sw x3, 0(x2) # store x3 (0x2c2d4608) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000002c2d4608 from memory into f18
fnmsub.d f8, f9, f4, f18, dyn # perform operation
fnmsub.d f8, f9, f4, f18, rdn # perform operation
fnmsub.d f8, f9, f4, f18, rmm # perform operation
fnmsub.d f8, f9, f4, f18, rne # perform operation
fnmsub.d f8, f9, f4, f18, rtz # perform operation
fnmsub.d f8, f9, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f9, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f9, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f9, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f9, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f9, f4, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8010000000000000)
li x17, 0x34eac2e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
li x3, 0xe0b9c1a8 # load x3 with 32 MSBs 0x00000000e0b9c1a8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e0b9c1a8
sw x3, 0(x2) # store x3 (0xe0b9c1a8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000e0b9c1a8 from memory into f9
fnmsub.d f17, f23, f18, f9, dyn # perform operation
fnmsub.d f17, f23, f18, f9, rdn # perform operation
fnmsub.d f17, f23, f18, f9, rmm # perform operation
fnmsub.d f17, f23, f18, f9, rne # perform operation
fnmsub.d f17, f23, f18, f9, rtz # perform operation
fnmsub.d f17, f23, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f23, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f23, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f23, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f23, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f23, f18, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fefffffffffffff)
li x13, 0xfbdf8851 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
li x3, 0x89c754c9 # load x3 with 32 MSBs 0x0000000089c754c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000089c754c9
sw x3, 0(x2) # store x3 (0x89c754c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000089c754c9 from memory into f21
fnmsub.d f13, f27, f10, f21, dyn # perform operation
fnmsub.d f13, f27, f10, f21, rdn # perform operation
fnmsub.d f13, f27, f10, f21, rmm # perform operation
fnmsub.d f13, f27, f10, f21, rne # perform operation
fnmsub.d f13, f27, f10, f21, rtz # perform operation
fnmsub.d f13, f27, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f27, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f27, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f27, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f27, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f27, f10, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xffefffffffffffff)
li x5, 0x7867c39d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0xbb3bd9b5 # load x3 with 32 MSBs 0x00000000bb3bd9b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb3bd9b5
sw x3, 0(x2) # store x3 (0xbb3bd9b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000bb3bd9b5 from memory into f7
fnmsub.d f5, f11, f25, f7, dyn # perform operation
fnmsub.d f5, f11, f25, f7, rdn # perform operation
fnmsub.d f5, f11, f25, f7, rmm # perform operation
fnmsub.d f5, f11, f25, f7, rne # perform operation
fnmsub.d f5, f11, f25, f7, rtz # perform operation
fnmsub.d f5, f11, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f11, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f11, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f11, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f11, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f11, f25, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfffffffffffff)
li x1, 0x29cd3b8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
li x3, 0x71cb62a0 # load x3 with 32 MSBs 0x0000000071cb62a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000071cb62a0
sw x3, 0(x2) # store x3 (0x71cb62a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000071cb62a0 from memory into f7
fnmsub.d f1, f14, f12, f7, dyn # perform operation
fnmsub.d f1, f14, f12, f7, rdn # perform operation
fnmsub.d f1, f14, f12, f7, rmm # perform operation
fnmsub.d f1, f14, f12, f7, rne # perform operation
fnmsub.d f1, f14, f12, f7, rtz # perform operation
fnmsub.d f1, f14, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f14, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f14, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f14, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f14, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f14, f12, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x800fffffffffffff)
li x12, 0xba7f2250 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
li x3, 0x00425373 # load x3 with 32 MSBs 0x0000000000425373
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000425373
sw x3, 0(x2) # store x3 (0x00425373) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000425373 from memory into f1
fnmsub.d f12, f7, f27, f1, dyn # perform operation
fnmsub.d f12, f7, f27, f1, rdn # perform operation
fnmsub.d f12, f7, f27, f1, rmm # perform operation
fnmsub.d f12, f7, f27, f1, rne # perform operation
fnmsub.d f12, f7, f27, f1, rtz # perform operation
fnmsub.d f12, f7, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f7, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f7, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f7, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f7, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f7, f27, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000)
li x23, 0xb7155391 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
li x3, 0xf7fde392 # load x3 with 32 MSBs 0x00000000f7fde392
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f7fde392
sw x3, 0(x2) # store x3 (0xf7fde392) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000f7fde392 from memory into f25
fnmsub.d f23, f3, f24, f25, dyn # perform operation
fnmsub.d f23, f3, f24, f25, rdn # perform operation
fnmsub.d f23, f3, f24, f25, rmm # perform operation
fnmsub.d f23, f3, f24, f25, rne # perform operation
fnmsub.d f23, f3, f24, f25, rtz # perform operation
fnmsub.d f23, f3, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f3, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f3, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f3, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f3, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f3, f24, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8008000000000000)
li x26, 0xc8343749 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
li x3, 0xda135a76 # load x3 with 32 MSBs 0x00000000da135a76
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da135a76
sw x3, 0(x2) # store x3 (0xda135a76) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000da135a76 from memory into f28
fnmsub.d f26, f30, f31, f28, dyn # perform operation
fnmsub.d f26, f30, f31, f28, rdn # perform operation
fnmsub.d f26, f30, f31, f28, rmm # perform operation
fnmsub.d f26, f30, f31, f28, rne # perform operation
fnmsub.d f26, f30, f31, f28, rtz # perform operation
fnmsub.d f26, f30, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f30, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f30, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f30, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f30, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f30, f31, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x1)
li x5, 0x3eee50ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
li x3, 0x268c6fd0 # load x3 with 32 MSBs 0x00000000268c6fd0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000268c6fd0
sw x3, 0(x2) # store x3 (0x268c6fd0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000268c6fd0 from memory into f13
fnmsub.d f5, f23, f26, f13, dyn # perform operation
fnmsub.d f5, f23, f26, f13, rdn # perform operation
fnmsub.d f5, f23, f26, f13, rmm # perform operation
fnmsub.d f5, f23, f26, f13, rne # perform operation
fnmsub.d f5, f23, f26, f13, rtz # perform operation
fnmsub.d f5, f23, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f23, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f23, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f23, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f23, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f23, f26, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000001)
li x22, 0x0864931c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
li x3, 0xe7a78fda # load x3 with 32 MSBs 0x00000000e7a78fda
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e7a78fda
sw x3, 0(x2) # store x3 (0xe7a78fda) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000e7a78fda from memory into f21
fnmsub.d f22, f6, f2, f21, dyn # perform operation
fnmsub.d f22, f6, f2, f21, rdn # perform operation
fnmsub.d f22, f6, f2, f21, rmm # perform operation
fnmsub.d f22, f6, f2, f21, rne # perform operation
fnmsub.d f22, f6, f2, f21, rtz # perform operation
fnmsub.d f22, f6, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f6, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f6, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f6, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f6, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f6, f2, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000000)
li x28, 0x94d24ed2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
li x3, 0x1b67f4f6 # load x3 with 32 MSBs 0x000000001b67f4f6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b67f4f6
sw x3, 0(x2) # store x3 (0x1b67f4f6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000001b67f4f6 from memory into f22
fnmsub.d f28, f30, f19, f22, dyn # perform operation
fnmsub.d f28, f30, f19, f22, rdn # perform operation
fnmsub.d f28, f30, f19, f22, rmm # perform operation
fnmsub.d f28, f30, f19, f22, rne # perform operation
fnmsub.d f28, f30, f19, f22, rtz # perform operation
fnmsub.d f28, f30, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f30, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f30, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f30, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f30, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f30, f19, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfff0000000000000)
li x13, 0x2d79ec2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
li x3, 0x6b084137 # load x3 with 32 MSBs 0x000000006b084137
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b084137
sw x3, 0(x2) # store x3 (0x6b084137) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000006b084137 from memory into f31
fnmsub.d f13, f30, f7, f31, dyn # perform operation
fnmsub.d f13, f30, f7, f31, rdn # perform operation
fnmsub.d f13, f30, f7, f31, rmm # perform operation
fnmsub.d f13, f30, f7, f31, rne # perform operation
fnmsub.d f13, f30, f7, f31, rtz # perform operation
fnmsub.d f13, f30, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f30, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f30, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f30, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f30, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f30, f7, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff8000000000000)
li x6, 0x64998ca0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
li x3, 0x4e764085 # load x3 with 32 MSBs 0x000000004e764085
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004e764085
sw x3, 0(x2) # store x3 (0x4e764085) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000004e764085 from memory into f21
fnmsub.d f6, f9, f25, f21, dyn # perform operation
fnmsub.d f6, f9, f25, f21, rdn # perform operation
fnmsub.d f6, f9, f25, f21, rmm # perform operation
fnmsub.d f6, f9, f25, f21, rne # perform operation
fnmsub.d f6, f9, f25, f21, rtz # perform operation
fnmsub.d f6, f9, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f9, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f9, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f9, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f9, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f9, f25, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fffffffffffffff)
li x16, 0x4d5f40a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
li x3, 0x2f48247b # load x3 with 32 MSBs 0x000000002f48247b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f48247b
sw x3, 0(x2) # store x3 (0x2f48247b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000002f48247b from memory into f21
fnmsub.d f16, f2, f7, f21, dyn # perform operation
fnmsub.d f16, f2, f7, f21, rdn # perform operation
fnmsub.d f16, f2, f7, f21, rmm # perform operation
fnmsub.d f16, f2, f7, f21, rne # perform operation
fnmsub.d f16, f2, f7, f21, rtz # perform operation
fnmsub.d f16, f2, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f2, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f2, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f2, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f2, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f2, f7, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000001)
li x25, 0x226240e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0xc311457d # load x3 with 32 MSBs 0x00000000c311457d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c311457d
sw x3, 0(x2) # store x3 (0xc311457d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000c311457d from memory into f26
fnmsub.d f25, f18, f4, f26, dyn # perform operation
fnmsub.d f25, f18, f4, f26, rdn # perform operation
fnmsub.d f25, f18, f4, f26, rmm # perform operation
fnmsub.d f25, f18, f4, f26, rne # perform operation
fnmsub.d f25, f18, f4, f26, rtz # perform operation
fnmsub.d f25, f18, f4, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f18, f4, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f18, f4, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f18, f4, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f18, f4, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f18, f4, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff7ffffffffffff)
li x31, 0x6055b995 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
li x3, 0x69547084 # load x3 with 32 MSBs 0x0000000069547084
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000069547084
sw x3, 0(x2) # store x3 (0x69547084) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000069547084 from memory into f23
fnmsub.d f31, f2, f29, f23, dyn # perform operation
fnmsub.d f31, f2, f29, f23, rdn # perform operation
fnmsub.d f31, f2, f29, f23, rmm # perform operation
fnmsub.d f31, f2, f29, f23, rne # perform operation
fnmsub.d f31, f2, f29, f23, rtz # perform operation
fnmsub.d f31, f2, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f2, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f2, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f2, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f2, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f2, f29, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x5a392534a57711ad)
li x25, 0xecaab24b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
li x3, 0x6369a526 # load x3 with 32 MSBs 0x000000006369a526
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006369a526
sw x3, 0(x2) # store x3 (0x6369a526) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000006369a526 from memory into f28
fnmsub.d f25, f2, f23, f28, dyn # perform operation
fnmsub.d f25, f2, f23, f28, rdn # perform operation
fnmsub.d f25, f2, f23, f28, rmm # perform operation
fnmsub.d f25, f2, f23, f28, rne # perform operation
fnmsub.d f25, f2, f23, f28, rtz # perform operation
fnmsub.d f25, f2, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f2, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f2, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f2, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f2, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f2, f23, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xa6e895993737426c)
li x13, 0xaf3f8ffa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
li x3, 0x65663ba3 # load x3 with 32 MSBs 0x0000000065663ba3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000065663ba3
sw x3, 0(x2) # store x3 (0x65663ba3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000065663ba3 from memory into f14
fnmsub.d f13, f4, f27, f14, dyn # perform operation
fnmsub.d f13, f4, f27, f14, rdn # perform operation
fnmsub.d f13, f4, f27, f14, rmm # perform operation
fnmsub.d f13, f4, f27, f14, rne # perform operation
fnmsub.d f13, f4, f27, f14, rtz # perform operation
fnmsub.d f13, f4, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f4, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f4, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f4, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f4, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f4, f27, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x0)
li x6, 0x3af8e982 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000000 from memory into f18
li x3, 0xb815f982 # load x3 with 32 MSBs 0x00000000b815f982
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b815f982
sw x3, 0(x2) # store x3 (0xb815f982) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000b815f982 from memory into f4
fnmsub.d f6, f25, f18, f4, dyn # perform operation
fnmsub.d f6, f25, f18, f4, rdn # perform operation
fnmsub.d f6, f25, f18, f4, rmm # perform operation
fnmsub.d f6, f25, f18, f4, rne # perform operation
fnmsub.d f6, f25, f18, f4, rtz # perform operation
fnmsub.d f6, f25, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f25, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f25, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f25, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f25, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f25, f18, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000000)
li x20, 0xbe02a086 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
li x3, 0xd0b5519a # load x3 with 32 MSBs 0x00000000d0b5519a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0b5519a
sw x3, 0(x2) # store x3 (0xd0b5519a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000d0b5519a from memory into f11
fnmsub.d f20, f23, f9, f11, dyn # perform operation
fnmsub.d f20, f23, f9, f11, rdn # perform operation
fnmsub.d f20, f23, f9, f11, rmm # perform operation
fnmsub.d f20, f23, f9, f11, rne # perform operation
fnmsub.d f20, f23, f9, f11, rtz # perform operation
fnmsub.d f20, f23, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f23, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f23, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f23, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f23, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f23, f9, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff0000000000000)
li x30, 0x9b80a521 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
li x3, 0xedf8f5fd # load x3 with 32 MSBs 0x00000000edf8f5fd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000edf8f5fd
sw x3, 0(x2) # store x3 (0xedf8f5fd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000edf8f5fd from memory into f4
fnmsub.d f30, f11, f9, f4, dyn # perform operation
fnmsub.d f30, f11, f9, f4, rdn # perform operation
fnmsub.d f30, f11, f9, f4, rmm # perform operation
fnmsub.d f30, f11, f9, f4, rne # perform operation
fnmsub.d f30, f11, f9, f4, rtz # perform operation
fnmsub.d f30, f11, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f11, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f11, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f11, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f11, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f11, f9, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff0000000000000)
li x22, 0x65181660 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
li x3, 0x5813dba2 # load x3 with 32 MSBs 0x000000005813dba2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005813dba2
sw x3, 0(x2) # store x3 (0x5813dba2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000005813dba2 from memory into f2
fnmsub.d f22, f29, f20, f2, dyn # perform operation
fnmsub.d f22, f29, f20, f2, rdn # perform operation
fnmsub.d f22, f29, f20, f2, rmm # perform operation
fnmsub.d f22, f29, f20, f2, rne # perform operation
fnmsub.d f22, f29, f20, f2, rtz # perform operation
fnmsub.d f22, f29, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f29, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f29, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f29, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f29, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f29, f20, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff8000000000000)
li x5, 0x8d1f7d27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
li x3, 0xa3092564 # load x3 with 32 MSBs 0x00000000a3092564
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a3092564
sw x3, 0(x2) # store x3 (0xa3092564) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000a3092564 from memory into f12
fnmsub.d f5, f19, f10, f12, dyn # perform operation
fnmsub.d f5, f19, f10, f12, rdn # perform operation
fnmsub.d f5, f19, f10, f12, rmm # perform operation
fnmsub.d f5, f19, f10, f12, rne # perform operation
fnmsub.d f5, f19, f10, f12, rtz # perform operation
fnmsub.d f5, f19, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f19, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f19, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f19, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f19, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f19, f10, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff8000000000000)
li x22, 0x7937fa30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
li x3, 0xaf4cee13 # load x3 with 32 MSBs 0x00000000af4cee13
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af4cee13
sw x3, 0(x2) # store x3 (0xaf4cee13) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000af4cee13 from memory into f27
fnmsub.d f22, f11, f25, f27, dyn # perform operation
fnmsub.d f22, f11, f25, f27, rdn # perform operation
fnmsub.d f22, f11, f25, f27, rmm # perform operation
fnmsub.d f22, f11, f25, f27, rne # perform operation
fnmsub.d f22, f11, f25, f27, rtz # perform operation
fnmsub.d f22, f11, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f11, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f11, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f11, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f11, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f11, f25, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x4000000000000000)
li x8, 0xa2d6f4c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xffefffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
li x3, 0xdf81e617 # load x3 with 32 MSBs 0x00000000df81e617
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000df81e617
sw x3, 0(x2) # store x3 (0xdf81e617) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000df81e617 from memory into f19
fnmsub.d f8, f21, f20, f19, dyn # perform operation
fnmsub.d f8, f21, f20, f19, rdn # perform operation
fnmsub.d f8, f21, f20, f19, rmm # perform operation
fnmsub.d f8, f21, f20, f19, rne # perform operation
fnmsub.d f8, f21, f20, f19, rtz # perform operation
fnmsub.d f8, f21, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f21, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f21, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f21, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f21, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f21, f20, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xc000000000000000)
li x3, 0x4008c1ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0x045b1e95 # load x3 with 32 MSBs 0x00000000045b1e95
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000045b1e95
sw x3, 0(x2) # store x3 (0x045b1e95) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000045b1e95 from memory into f18
fnmsub.d f3, f14, f30, f18, dyn # perform operation
fnmsub.d f3, f14, f30, f18, rdn # perform operation
fnmsub.d f3, f14, f30, f18, rmm # perform operation
fnmsub.d f3, f14, f30, f18, rne # perform operation
fnmsub.d f3, f14, f30, f18, rtz # perform operation
fnmsub.d f3, f14, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f14, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f14, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f14, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f14, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f14, f30, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x10000000000000)
li x23, 0x87efb479 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
li x3, 0xef6d4c2e # load x3 with 32 MSBs 0x00000000ef6d4c2e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef6d4c2e
sw x3, 0(x2) # store x3 (0xef6d4c2e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000ef6d4c2e from memory into f18
fnmsub.d f23, f2, f6, f18, dyn # perform operation
fnmsub.d f23, f2, f6, f18, rdn # perform operation
fnmsub.d f23, f2, f6, f18, rmm # perform operation
fnmsub.d f23, f2, f6, f18, rne # perform operation
fnmsub.d f23, f2, f6, f18, rtz # perform operation
fnmsub.d f23, f2, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f2, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f2, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f2, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f2, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f2, f6, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8010000000000000)
li x24, 0x7a998950 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0x4fff9af4 # load x3 with 32 MSBs 0x000000004fff9af4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004fff9af4
sw x3, 0(x2) # store x3 (0x4fff9af4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000004fff9af4 from memory into f17
fnmsub.d f24, f30, f14, f17, dyn # perform operation
fnmsub.d f24, f30, f14, f17, rdn # perform operation
fnmsub.d f24, f30, f14, f17, rmm # perform operation
fnmsub.d f24, f30, f14, f17, rne # perform operation
fnmsub.d f24, f30, f14, f17, rtz # perform operation
fnmsub.d f24, f30, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f30, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f30, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f30, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f30, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f30, f14, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fefffffffffffff)
li x28, 0x86c7ca71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
li x3, 0x1f1a0118 # load x3 with 32 MSBs 0x000000001f1a0118
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001f1a0118
sw x3, 0(x2) # store x3 (0x1f1a0118) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000001f1a0118 from memory into f3
fnmsub.d f28, f13, f1, f3, dyn # perform operation
fnmsub.d f28, f13, f1, f3, rdn # perform operation
fnmsub.d f28, f13, f1, f3, rmm # perform operation
fnmsub.d f28, f13, f1, f3, rne # perform operation
fnmsub.d f28, f13, f1, f3, rtz # perform operation
fnmsub.d f28, f13, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f13, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f13, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f13, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f13, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f13, f1, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xffefffffffffffff)
li x13, 0xb09158d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
li x3, 0xdfd6f0d7 # load x3 with 32 MSBs 0x00000000dfd6f0d7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dfd6f0d7
sw x3, 0(x2) # store x3 (0xdfd6f0d7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000dfd6f0d7 from memory into f29
fnmsub.d f13, f25, f31, f29, dyn # perform operation
fnmsub.d f13, f25, f31, f29, rdn # perform operation
fnmsub.d f13, f25, f31, f29, rmm # perform operation
fnmsub.d f13, f25, f31, f29, rne # perform operation
fnmsub.d f13, f25, f31, f29, rtz # perform operation
fnmsub.d f13, f25, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f25, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f25, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f25, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f25, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f25, f31, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfffffffffffff)
li x14, 0xb66babe2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
li x3, 0xf01a10c2 # load x3 with 32 MSBs 0x00000000f01a10c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f01a10c2
sw x3, 0(x2) # store x3 (0xf01a10c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000f01a10c2 from memory into f1
fnmsub.d f14, f3, f20, f1, dyn # perform operation
fnmsub.d f14, f3, f20, f1, rdn # perform operation
fnmsub.d f14, f3, f20, f1, rmm # perform operation
fnmsub.d f14, f3, f20, f1, rne # perform operation
fnmsub.d f14, f3, f20, f1, rtz # perform operation
fnmsub.d f14, f3, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f3, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f3, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f3, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f3, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f3, f20, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x800fffffffffffff)
li x24, 0xe71f7fc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x800fffffffffffff from memory into f30
li x3, 0xe324099f # load x3 with 32 MSBs 0x00000000e324099f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e324099f
sw x3, 0(x2) # store x3 (0xe324099f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000e324099f from memory into f29
fnmsub.d f24, f7, f30, f29, dyn # perform operation
fnmsub.d f24, f7, f30, f29, rdn # perform operation
fnmsub.d f24, f7, f30, f29, rmm # perform operation
fnmsub.d f24, f7, f30, f29, rne # perform operation
fnmsub.d f24, f7, f30, f29, rtz # perform operation
fnmsub.d f24, f7, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f7, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f7, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f7, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f7, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f7, f30, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000)
li x12, 0x457c4065 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0008000000000000 from memory into f4
li x3, 0x0f660c1f # load x3 with 32 MSBs 0x000000000f660c1f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f660c1f
sw x3, 0(x2) # store x3 (0x0f660c1f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000000f660c1f from memory into f14
fnmsub.d f12, f10, f4, f14, dyn # perform operation
fnmsub.d f12, f10, f4, f14, rdn # perform operation
fnmsub.d f12, f10, f4, f14, rmm # perform operation
fnmsub.d f12, f10, f4, f14, rne # perform operation
fnmsub.d f12, f10, f4, f14, rtz # perform operation
fnmsub.d f12, f10, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f10, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f10, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f10, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f10, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f10, f4, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8008000000000000)
li x10, 0xad6572ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
li x3, 0xe2178112 # load x3 with 32 MSBs 0x00000000e2178112
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e2178112
sw x3, 0(x2) # store x3 (0xe2178112) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000e2178112 from memory into f3
fnmsub.d f10, f16, f19, f3, dyn # perform operation
fnmsub.d f10, f16, f19, f3, rdn # perform operation
fnmsub.d f10, f16, f19, f3, rmm # perform operation
fnmsub.d f10, f16, f19, f3, rne # perform operation
fnmsub.d f10, f16, f19, f3, rtz # perform operation
fnmsub.d f10, f16, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f16, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f16, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f16, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f16, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f16, f19, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x1)
li x3, 0xc854ccf4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
li x3, 0x9ede79b5 # load x3 with 32 MSBs 0x000000009ede79b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ede79b5
sw x3, 0(x2) # store x3 (0x9ede79b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000009ede79b5 from memory into f10
fnmsub.d f3, f22, f4, f10, dyn # perform operation
fnmsub.d f3, f22, f4, f10, rdn # perform operation
fnmsub.d f3, f22, f4, f10, rmm # perform operation
fnmsub.d f3, f22, f4, f10, rne # perform operation
fnmsub.d f3, f22, f4, f10, rtz # perform operation
fnmsub.d f3, f22, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f22, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f22, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f22, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f22, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f22, f4, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000001)
li x11, 0x8262b691 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
li x3, 0x14a7b1b4 # load x3 with 32 MSBs 0x0000000014a7b1b4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014a7b1b4
sw x3, 0(x2) # store x3 (0x14a7b1b4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000014a7b1b4 from memory into f10
fnmsub.d f11, f20, f1, f10, dyn # perform operation
fnmsub.d f11, f20, f1, f10, rdn # perform operation
fnmsub.d f11, f20, f1, f10, rmm # perform operation
fnmsub.d f11, f20, f1, f10, rne # perform operation
fnmsub.d f11, f20, f1, f10, rtz # perform operation
fnmsub.d f11, f20, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f20, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f20, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f20, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f20, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f20, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000000)
li x14, 0x41563c97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
li x3, 0x699bb96c # load x3 with 32 MSBs 0x00000000699bb96c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000699bb96c
sw x3, 0(x2) # store x3 (0x699bb96c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000699bb96c from memory into f21
fnmsub.d f14, f26, f28, f21, dyn # perform operation
fnmsub.d f14, f26, f28, f21, rdn # perform operation
fnmsub.d f14, f26, f28, f21, rmm # perform operation
fnmsub.d f14, f26, f28, f21, rne # perform operation
fnmsub.d f14, f26, f28, f21, rtz # perform operation
fnmsub.d f14, f26, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f26, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f26, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f26, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f26, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f26, f28, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfff0000000000000)
li x3, 0xe241513e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
li x3, 0xb9a5f836 # load x3 with 32 MSBs 0x00000000b9a5f836
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b9a5f836
sw x3, 0(x2) # store x3 (0xb9a5f836) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000b9a5f836 from memory into f8
fnmsub.d f3, f16, f6, f8, dyn # perform operation
fnmsub.d f3, f16, f6, f8, rdn # perform operation
fnmsub.d f3, f16, f6, f8, rmm # perform operation
fnmsub.d f3, f16, f6, f8, rne # perform operation
fnmsub.d f3, f16, f6, f8, rtz # perform operation
fnmsub.d f3, f16, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f16, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f16, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f16, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f16, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f16, f6, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff8000000000000)
li x31, 0x98ca53c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
li x3, 0x2a9a5887 # load x3 with 32 MSBs 0x000000002a9a5887
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a9a5887
sw x3, 0(x2) # store x3 (0x2a9a5887) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000002a9a5887 from memory into f18
fnmsub.d f31, f11, f2, f18, dyn # perform operation
fnmsub.d f31, f11, f2, f18, rdn # perform operation
fnmsub.d f31, f11, f2, f18, rmm # perform operation
fnmsub.d f31, f11, f2, f18, rne # perform operation
fnmsub.d f31, f11, f2, f18, rtz # perform operation
fnmsub.d f31, f11, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f11, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f11, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f11, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f11, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f11, f2, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fffffffffffffff)
li x20, 0x3d4f3604 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
li x3, 0x5d74e280 # load x3 with 32 MSBs 0x000000005d74e280
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d74e280
sw x3, 0(x2) # store x3 (0x5d74e280) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000005d74e280 from memory into f21
fnmsub.d f20, f22, f24, f21, dyn # perform operation
fnmsub.d f20, f22, f24, f21, rdn # perform operation
fnmsub.d f20, f22, f24, f21, rmm # perform operation
fnmsub.d f20, f22, f24, f21, rne # perform operation
fnmsub.d f20, f22, f24, f21, rtz # perform operation
fnmsub.d f20, f22, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f22, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f22, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f22, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f22, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f22, f24, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000001)
li x6, 0xf9f0800b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
li x3, 0xad74d897 # load x3 with 32 MSBs 0x00000000ad74d897
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ad74d897
sw x3, 0(x2) # store x3 (0xad74d897) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000ad74d897 from memory into f7
fnmsub.d f6, f15, f17, f7, dyn # perform operation
fnmsub.d f6, f15, f17, f7, rdn # perform operation
fnmsub.d f6, f15, f17, f7, rmm # perform operation
fnmsub.d f6, f15, f17, f7, rne # perform operation
fnmsub.d f6, f15, f17, f7, rtz # perform operation
fnmsub.d f6, f15, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f15, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f15, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f15, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f15, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f15, f17, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff7ffffffffffff)
li x21, 0xc46576ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
li x3, 0xbd20ab1d # load x3 with 32 MSBs 0x00000000bd20ab1d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bd20ab1d
sw x3, 0(x2) # store x3 (0xbd20ab1d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000bd20ab1d from memory into f12
fnmsub.d f21, f7, f30, f12, dyn # perform operation
fnmsub.d f21, f7, f30, f12, rdn # perform operation
fnmsub.d f21, f7, f30, f12, rmm # perform operation
fnmsub.d f21, f7, f30, f12, rne # perform operation
fnmsub.d f21, f7, f30, f12, rtz # perform operation
fnmsub.d f21, f7, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f7, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f7, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f7, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f7, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f7, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x5a392534a57711ad)
li x14, 0x2ee3432f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
li x3, 0xc668a198 # load x3 with 32 MSBs 0x00000000c668a198
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c668a198
sw x3, 0(x2) # store x3 (0xc668a198) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000c668a198 from memory into f28
fnmsub.d f14, f6, f9, f28, dyn # perform operation
fnmsub.d f14, f6, f9, f28, rdn # perform operation
fnmsub.d f14, f6, f9, f28, rmm # perform operation
fnmsub.d f14, f6, f9, f28, rne # perform operation
fnmsub.d f14, f6, f9, f28, rtz # perform operation
fnmsub.d f14, f6, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f6, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f6, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f6, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f6, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f6, f9, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xa6e895993737426c)
li x28, 0x4d5838a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
li x3, 0x2e62b58c # load x3 with 32 MSBs 0x000000002e62b58c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e62b58c
sw x3, 0(x2) # store x3 (0x2e62b58c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000002e62b58c from memory into f29
fnmsub.d f28, f10, f5, f29, dyn # perform operation
fnmsub.d f28, f10, f5, f29, rdn # perform operation
fnmsub.d f28, f10, f5, f29, rmm # perform operation
fnmsub.d f28, f10, f5, f29, rne # perform operation
fnmsub.d f28, f10, f5, f29, rtz # perform operation
fnmsub.d f28, f10, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f10, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f10, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f10, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f10, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f10, f5, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x0)
li x14, 0x7fb2391e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000fffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
li x3, 0xc75568d9 # load x3 with 32 MSBs 0x00000000c75568d9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c75568d9
sw x3, 0(x2) # store x3 (0xc75568d9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000c75568d9 from memory into f18
fnmsub.d f14, f16, f26, f18, dyn # perform operation
fnmsub.d f14, f16, f26, f18, rdn # perform operation
fnmsub.d f14, f16, f26, f18, rmm # perform operation
fnmsub.d f14, f16, f26, f18, rne # perform operation
fnmsub.d f14, f16, f26, f18, rtz # perform operation
fnmsub.d f14, f16, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f16, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f16, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f16, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f16, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f16, f26, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000000)
li x29, 0x953c0f2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
li x3, 0x65e274c8 # load x3 with 32 MSBs 0x0000000065e274c8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000065e274c8
sw x3, 0(x2) # store x3 (0x65e274c8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000065e274c8 from memory into f13
fnmsub.d f29, f18, f3, f13, dyn # perform operation
fnmsub.d f29, f18, f3, f13, rdn # perform operation
fnmsub.d f29, f18, f3, f13, rmm # perform operation
fnmsub.d f29, f18, f3, f13, rne # perform operation
fnmsub.d f29, f18, f3, f13, rtz # perform operation
fnmsub.d f29, f18, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f18, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f18, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f18, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f18, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f18, f3, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff0000000000000)
li x24, 0xcdec5851 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
li x3, 0x0e2fc3b8 # load x3 with 32 MSBs 0x000000000e2fc3b8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000e2fc3b8
sw x3, 0(x2) # store x3 (0x0e2fc3b8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000000e2fc3b8 from memory into f29
fnmsub.d f24, f9, f16, f29, dyn # perform operation
fnmsub.d f24, f9, f16, f29, rdn # perform operation
fnmsub.d f24, f9, f16, f29, rmm # perform operation
fnmsub.d f24, f9, f16, f29, rne # perform operation
fnmsub.d f24, f9, f16, f29, rtz # perform operation
fnmsub.d f24, f9, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f9, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f9, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f9, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f9, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f9, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff0000000000000)
li x8, 0xe65285c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
li x3, 0x45bd8f12 # load x3 with 32 MSBs 0x0000000045bd8f12
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000045bd8f12
sw x3, 0(x2) # store x3 (0x45bd8f12) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000045bd8f12 from memory into f11
fnmsub.d f8, f10, f26, f11, dyn # perform operation
fnmsub.d f8, f10, f26, f11, rdn # perform operation
fnmsub.d f8, f10, f26, f11, rmm # perform operation
fnmsub.d f8, f10, f26, f11, rne # perform operation
fnmsub.d f8, f10, f26, f11, rtz # perform operation
fnmsub.d f8, f10, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f10, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f10, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f10, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f10, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f10, f26, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff8000000000000)
li x11, 0x5ec1c8a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
li x3, 0x8c08e1a8 # load x3 with 32 MSBs 0x000000008c08e1a8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c08e1a8
sw x3, 0(x2) # store x3 (0x8c08e1a8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000008c08e1a8 from memory into f4
fnmsub.d f11, f20, f3, f4, dyn # perform operation
fnmsub.d f11, f20, f3, f4, rdn # perform operation
fnmsub.d f11, f20, f3, f4, rmm # perform operation
fnmsub.d f11, f20, f3, f4, rne # perform operation
fnmsub.d f11, f20, f3, f4, rtz # perform operation
fnmsub.d f11, f20, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f20, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f20, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f20, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f20, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f20, f3, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff8000000000000)
li x1, 0xb2038174 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
li x3, 0x7a86d8fc # load x3 with 32 MSBs 0x000000007a86d8fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007a86d8fc
sw x3, 0(x2) # store x3 (0x7a86d8fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000007a86d8fc from memory into f9
fnmsub.d f1, f27, f13, f9, dyn # perform operation
fnmsub.d f1, f27, f13, f9, rdn # perform operation
fnmsub.d f1, f27, f13, f9, rmm # perform operation
fnmsub.d f1, f27, f13, f9, rne # perform operation
fnmsub.d f1, f27, f13, f9, rtz # perform operation
fnmsub.d f1, f27, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f27, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f27, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f27, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f27, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f27, f13, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x4000000000000000)
li x23, 0x7755543c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
li x3, 0xe16817f9 # load x3 with 32 MSBs 0x00000000e16817f9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e16817f9
sw x3, 0(x2) # store x3 (0xe16817f9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000e16817f9 from memory into f1
fnmsub.d f23, f18, f16, f1, dyn # perform operation
fnmsub.d f23, f18, f16, f1, rdn # perform operation
fnmsub.d f23, f18, f16, f1, rmm # perform operation
fnmsub.d f23, f18, f16, f1, rne # perform operation
fnmsub.d f23, f18, f16, f1, rtz # perform operation
fnmsub.d f23, f18, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f18, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f18, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f18, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f18, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f18, f16, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xc000000000000000)
li x13, 0x305b9e1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
li x3, 0xf8a8c922 # load x3 with 32 MSBs 0x00000000f8a8c922
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f8a8c922
sw x3, 0(x2) # store x3 (0xf8a8c922) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000f8a8c922 from memory into f26
fnmsub.d f13, f18, f11, f26, dyn # perform operation
fnmsub.d f13, f18, f11, f26, rdn # perform operation
fnmsub.d f13, f18, f11, f26, rmm # perform operation
fnmsub.d f13, f18, f11, f26, rne # perform operation
fnmsub.d f13, f18, f11, f26, rtz # perform operation
fnmsub.d f13, f18, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f18, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f18, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f18, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f18, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f18, f11, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x10000000000000)
li x4, 0xc518d20b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
li x3, 0x9ba0b685 # load x3 with 32 MSBs 0x000000009ba0b685
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ba0b685
sw x3, 0(x2) # store x3 (0x9ba0b685) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000009ba0b685 from memory into f23
fnmsub.d f4, f17, f29, f23, dyn # perform operation
fnmsub.d f4, f17, f29, f23, rdn # perform operation
fnmsub.d f4, f17, f29, f23, rmm # perform operation
fnmsub.d f4, f17, f29, f23, rne # perform operation
fnmsub.d f4, f17, f29, f23, rtz # perform operation
fnmsub.d f4, f17, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f17, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f17, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f17, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f17, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f17, f29, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8010000000000000)
li x13, 0x62d7cdf7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
li x3, 0xd912650a # load x3 with 32 MSBs 0x00000000d912650a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d912650a
sw x3, 0(x2) # store x3 (0xd912650a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000d912650a from memory into f24
fnmsub.d f13, f8, f7, f24, dyn # perform operation
fnmsub.d f13, f8, f7, f24, rdn # perform operation
fnmsub.d f13, f8, f7, f24, rmm # perform operation
fnmsub.d f13, f8, f7, f24, rne # perform operation
fnmsub.d f13, f8, f7, f24, rtz # perform operation
fnmsub.d f13, f8, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f8, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f8, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f8, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f8, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f8, f7, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fefffffffffffff)
li x9, 0x7e77e3e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
li x3, 0x132fe757 # load x3 with 32 MSBs 0x00000000132fe757
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000132fe757
sw x3, 0(x2) # store x3 (0x132fe757) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000132fe757 from memory into f28
fnmsub.d f9, f26, f20, f28, dyn # perform operation
fnmsub.d f9, f26, f20, f28, rdn # perform operation
fnmsub.d f9, f26, f20, f28, rmm # perform operation
fnmsub.d f9, f26, f20, f28, rne # perform operation
fnmsub.d f9, f26, f20, f28, rtz # perform operation
fnmsub.d f9, f26, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f26, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f26, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f26, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f26, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f26, f20, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xffefffffffffffff)
li x19, 0xc08257f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
li x3, 0xff8e28d6 # load x3 with 32 MSBs 0x00000000ff8e28d6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff8e28d6
sw x3, 0(x2) # store x3 (0xff8e28d6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000ff8e28d6 from memory into f20
fnmsub.d f19, f6, f2, f20, dyn # perform operation
fnmsub.d f19, f6, f2, f20, rdn # perform operation
fnmsub.d f19, f6, f2, f20, rmm # perform operation
fnmsub.d f19, f6, f2, f20, rne # perform operation
fnmsub.d f19, f6, f2, f20, rtz # perform operation
fnmsub.d f19, f6, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f6, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f6, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f6, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f6, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f6, f2, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfffffffffffff)
li x4, 0x0c633e44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
li x3, 0x21040d32 # load x3 with 32 MSBs 0x0000000021040d32
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000021040d32
sw x3, 0(x2) # store x3 (0x21040d32) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000021040d32 from memory into f6
fnmsub.d f4, f30, f24, f6, dyn # perform operation
fnmsub.d f4, f30, f24, f6, rdn # perform operation
fnmsub.d f4, f30, f24, f6, rmm # perform operation
fnmsub.d f4, f30, f24, f6, rne # perform operation
fnmsub.d f4, f30, f24, f6, rtz # perform operation
fnmsub.d f4, f30, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f30, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f30, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f30, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f30, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f30, f24, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x800fffffffffffff)
li x21, 0xd660ce3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
li x3, 0x20a7ab66 # load x3 with 32 MSBs 0x0000000020a7ab66
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020a7ab66
sw x3, 0(x2) # store x3 (0x20a7ab66) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000020a7ab66 from memory into f5
fnmsub.d f21, f8, f13, f5, dyn # perform operation
fnmsub.d f21, f8, f13, f5, rdn # perform operation
fnmsub.d f21, f8, f13, f5, rmm # perform operation
fnmsub.d f21, f8, f13, f5, rne # perform operation
fnmsub.d f21, f8, f13, f5, rtz # perform operation
fnmsub.d f21, f8, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f8, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f8, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f8, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f8, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f8, f13, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000)
li x19, 0xd8335fbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0008000000000000 from memory into f18
li x3, 0x71356918 # load x3 with 32 MSBs 0x0000000071356918
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000071356918
sw x3, 0(x2) # store x3 (0x71356918) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000071356918 from memory into f20
fnmsub.d f19, f11, f18, f20, dyn # perform operation
fnmsub.d f19, f11, f18, f20, rdn # perform operation
fnmsub.d f19, f11, f18, f20, rmm # perform operation
fnmsub.d f19, f11, f18, f20, rne # perform operation
fnmsub.d f19, f11, f18, f20, rtz # perform operation
fnmsub.d f19, f11, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f11, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f11, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f11, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f11, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f11, f18, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8008000000000000)
li x3, 0x7436cd4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
li x3, 0x446cfddf # load x3 with 32 MSBs 0x00000000446cfddf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000446cfddf
sw x3, 0(x2) # store x3 (0x446cfddf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000446cfddf from memory into f15
fnmsub.d f3, f20, f7, f15, dyn # perform operation
fnmsub.d f3, f20, f7, f15, rdn # perform operation
fnmsub.d f3, f20, f7, f15, rmm # perform operation
fnmsub.d f3, f20, f7, f15, rne # perform operation
fnmsub.d f3, f20, f7, f15, rtz # perform operation
fnmsub.d f3, f20, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f20, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f20, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f20, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f20, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f20, f7, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x1)
li x6, 0xe5dda4f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
li x3, 0xfe87638f # load x3 with 32 MSBs 0x00000000fe87638f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fe87638f
sw x3, 0(x2) # store x3 (0xfe87638f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000fe87638f from memory into f13
fnmsub.d f6, f9, f18, f13, dyn # perform operation
fnmsub.d f6, f9, f18, f13, rdn # perform operation
fnmsub.d f6, f9, f18, f13, rmm # perform operation
fnmsub.d f6, f9, f18, f13, rne # perform operation
fnmsub.d f6, f9, f18, f13, rtz # perform operation
fnmsub.d f6, f9, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f9, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f9, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f9, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f9, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f9, f18, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000001)
li x16, 0x0a980770 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
li x3, 0x584db8fb # load x3 with 32 MSBs 0x00000000584db8fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000584db8fb
sw x3, 0(x2) # store x3 (0x584db8fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000584db8fb from memory into f14
fnmsub.d f16, f13, f17, f14, dyn # perform operation
fnmsub.d f16, f13, f17, f14, rdn # perform operation
fnmsub.d f16, f13, f17, f14, rmm # perform operation
fnmsub.d f16, f13, f17, f14, rne # perform operation
fnmsub.d f16, f13, f17, f14, rtz # perform operation
fnmsub.d f16, f13, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f13, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f13, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f13, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f13, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f13, f17, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000000)
li x31, 0x343460fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000fffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
li x3, 0x04b97962 # load x3 with 32 MSBs 0x0000000004b97962
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000004b97962
sw x3, 0(x2) # store x3 (0x04b97962) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000004b97962 from memory into f6
fnmsub.d f31, f16, f7, f6, dyn # perform operation
fnmsub.d f31, f16, f7, f6, rdn # perform operation
fnmsub.d f31, f16, f7, f6, rmm # perform operation
fnmsub.d f31, f16, f7, f6, rne # perform operation
fnmsub.d f31, f16, f7, f6, rtz # perform operation
fnmsub.d f31, f16, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f16, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f16, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f16, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f16, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f16, f7, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfff0000000000000)
li x4, 0xc715b4c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
li x3, 0xb3e125a5 # load x3 with 32 MSBs 0x00000000b3e125a5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3e125a5
sw x3, 0(x2) # store x3 (0xb3e125a5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000b3e125a5 from memory into f9
fnmsub.d f4, f2, f30, f9, dyn # perform operation
fnmsub.d f4, f2, f30, f9, rdn # perform operation
fnmsub.d f4, f2, f30, f9, rmm # perform operation
fnmsub.d f4, f2, f30, f9, rne # perform operation
fnmsub.d f4, f2, f30, f9, rtz # perform operation
fnmsub.d f4, f2, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f2, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f2, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f2, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f2, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f2, f30, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff8000000000000)
li x9, 0xd7f7c76e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0xff02b68a # load x3 with 32 MSBs 0x00000000ff02b68a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff02b68a
sw x3, 0(x2) # store x3 (0xff02b68a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000ff02b68a from memory into f14
fnmsub.d f9, f26, f24, f14, dyn # perform operation
fnmsub.d f9, f26, f24, f14, rdn # perform operation
fnmsub.d f9, f26, f24, f14, rmm # perform operation
fnmsub.d f9, f26, f24, f14, rne # perform operation
fnmsub.d f9, f26, f24, f14, rtz # perform operation
fnmsub.d f9, f26, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f26, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f26, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f26, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f26, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f26, f24, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fffffffffffffff)
li x30, 0xead19c9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
li x3, 0x7569b769 # load x3 with 32 MSBs 0x000000007569b769
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007569b769
sw x3, 0(x2) # store x3 (0x7569b769) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000007569b769 from memory into f19
fnmsub.d f30, f21, f14, f19, dyn # perform operation
fnmsub.d f30, f21, f14, f19, rdn # perform operation
fnmsub.d f30, f21, f14, f19, rmm # perform operation
fnmsub.d f30, f21, f14, f19, rne # perform operation
fnmsub.d f30, f21, f14, f19, rtz # perform operation
fnmsub.d f30, f21, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f21, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f21, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f21, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f21, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f21, f14, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000001)
li x11, 0x3212da1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0x4c493e3a # load x3 with 32 MSBs 0x000000004c493e3a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004c493e3a
sw x3, 0(x2) # store x3 (0x4c493e3a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000004c493e3a from memory into f9
fnmsub.d f11, f30, f29, f9, dyn # perform operation
fnmsub.d f11, f30, f29, f9, rdn # perform operation
fnmsub.d f11, f30, f29, f9, rmm # perform operation
fnmsub.d f11, f30, f29, f9, rne # perform operation
fnmsub.d f11, f30, f29, f9, rtz # perform operation
fnmsub.d f11, f30, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f30, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f30, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f30, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f30, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f30, f29, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff7ffffffffffff)
li x12, 0xf2d54ba2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff7ffffffffffff from memory into f21
li x3, 0xffa78e26 # load x3 with 32 MSBs 0x00000000ffa78e26
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ffa78e26
sw x3, 0(x2) # store x3 (0xffa78e26) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000ffa78e26 from memory into f4
fnmsub.d f12, f7, f21, f4, dyn # perform operation
fnmsub.d f12, f7, f21, f4, rdn # perform operation
fnmsub.d f12, f7, f21, f4, rmm # perform operation
fnmsub.d f12, f7, f21, f4, rne # perform operation
fnmsub.d f12, f7, f21, f4, rtz # perform operation
fnmsub.d f12, f7, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f7, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f7, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f7, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f7, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f7, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x5a392534a57711ad)
li x4, 0x646e2cbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0xbb89b798 # load x3 with 32 MSBs 0x00000000bb89b798
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb89b798
sw x3, 0(x2) # store x3 (0xbb89b798) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000bb89b798 from memory into f25
fnmsub.d f4, f23, f1, f25, dyn # perform operation
fnmsub.d f4, f23, f1, f25, rdn # perform operation
fnmsub.d f4, f23, f1, f25, rmm # perform operation
fnmsub.d f4, f23, f1, f25, rne # perform operation
fnmsub.d f4, f23, f1, f25, rtz # perform operation
fnmsub.d f4, f23, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f23, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f23, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f23, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f23, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f23, f1, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xa6e895993737426c)
li x29, 0xa4f29165 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
li x3, 0x53aef3e4 # load x3 with 32 MSBs 0x0000000053aef3e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000053aef3e4
sw x3, 0(x2) # store x3 (0x53aef3e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000053aef3e4 from memory into f6
fnmsub.d f29, f28, f1, f6, dyn # perform operation
fnmsub.d f29, f28, f1, f6, rdn # perform operation
fnmsub.d f29, f28, f1, f6, rmm # perform operation
fnmsub.d f29, f28, f1, f6, rne # perform operation
fnmsub.d f29, f28, f1, f6, rtz # perform operation
fnmsub.d f29, f28, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f28, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f28, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f28, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f28, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f28, f1, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x0)
li x11, 0x83620903 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
li x3, 0xd24f8716 # load x3 with 32 MSBs 0x00000000d24f8716
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d24f8716
sw x3, 0(x2) # store x3 (0xd24f8716) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000d24f8716 from memory into f5
fnmsub.d f11, f6, f8, f5, dyn # perform operation
fnmsub.d f11, f6, f8, f5, rdn # perform operation
fnmsub.d f11, f6, f8, f5, rmm # perform operation
fnmsub.d f11, f6, f8, f5, rne # perform operation
fnmsub.d f11, f6, f8, f5, rtz # perform operation
fnmsub.d f11, f6, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f6, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f6, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f6, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f6, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f6, f8, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000000)
li x7, 0x352de2a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
li x3, 0xb312b087 # load x3 with 32 MSBs 0x00000000b312b087
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b312b087
sw x3, 0(x2) # store x3 (0xb312b087) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000b312b087 from memory into f31
fnmsub.d f7, f2, f16, f31, dyn # perform operation
fnmsub.d f7, f2, f16, f31, rdn # perform operation
fnmsub.d f7, f2, f16, f31, rmm # perform operation
fnmsub.d f7, f2, f16, f31, rne # perform operation
fnmsub.d f7, f2, f16, f31, rtz # perform operation
fnmsub.d f7, f2, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f2, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f2, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f2, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f2, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f2, f16, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff0000000000000)
li x29, 0xf4624954 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
li x3, 0x1f254af6 # load x3 with 32 MSBs 0x000000001f254af6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001f254af6
sw x3, 0(x2) # store x3 (0x1f254af6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000001f254af6 from memory into f2
fnmsub.d f29, f8, f16, f2, dyn # perform operation
fnmsub.d f29, f8, f16, f2, rdn # perform operation
fnmsub.d f29, f8, f16, f2, rmm # perform operation
fnmsub.d f29, f8, f16, f2, rne # perform operation
fnmsub.d f29, f8, f16, f2, rtz # perform operation
fnmsub.d f29, f8, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f8, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f8, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f8, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f8, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f8, f16, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff0000000000000)
li x17, 0xc2a76662 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0x6b34935c # load x3 with 32 MSBs 0x000000006b34935c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b34935c
sw x3, 0(x2) # store x3 (0x6b34935c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000006b34935c from memory into f22
fnmsub.d f17, f1, f27, f22, dyn # perform operation
fnmsub.d f17, f1, f27, f22, rdn # perform operation
fnmsub.d f17, f1, f27, f22, rmm # perform operation
fnmsub.d f17, f1, f27, f22, rne # perform operation
fnmsub.d f17, f1, f27, f22, rtz # perform operation
fnmsub.d f17, f1, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f1, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f1, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f1, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f1, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f1, f27, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff8000000000000)
li x23, 0x7b788ad8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
li x3, 0xc4bb4856 # load x3 with 32 MSBs 0x00000000c4bb4856
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4bb4856
sw x3, 0(x2) # store x3 (0xc4bb4856) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000c4bb4856 from memory into f20
fnmsub.d f23, f9, f6, f20, dyn # perform operation
fnmsub.d f23, f9, f6, f20, rdn # perform operation
fnmsub.d f23, f9, f6, f20, rmm # perform operation
fnmsub.d f23, f9, f6, f20, rne # perform operation
fnmsub.d f23, f9, f6, f20, rtz # perform operation
fnmsub.d f23, f9, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f9, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f9, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f9, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f9, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f9, f6, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff8000000000000)
li x19, 0xb8863fab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff8000000000000 from memory into f2
li x3, 0x2f9c2009 # load x3 with 32 MSBs 0x000000002f9c2009
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f9c2009
sw x3, 0(x2) # store x3 (0x2f9c2009) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000002f9c2009 from memory into f9
fnmsub.d f19, f28, f2, f9, dyn # perform operation
fnmsub.d f19, f28, f2, f9, rdn # perform operation
fnmsub.d f19, f28, f2, f9, rmm # perform operation
fnmsub.d f19, f28, f2, f9, rne # perform operation
fnmsub.d f19, f28, f2, f9, rtz # perform operation
fnmsub.d f19, f28, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f28, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f28, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f28, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f28, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f28, f2, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x4000000000000000)
li x2, 0xec305589 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
li x3, 0xb22679d6 # load x3 with 32 MSBs 0x00000000b22679d6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b22679d6
sw x3, 0(x2) # store x3 (0xb22679d6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000b22679d6 from memory into f15
fnmsub.d f2, f29, f30, f15, dyn # perform operation
fnmsub.d f2, f29, f30, f15, rdn # perform operation
fnmsub.d f2, f29, f30, f15, rmm # perform operation
fnmsub.d f2, f29, f30, f15, rne # perform operation
fnmsub.d f2, f29, f30, f15, rtz # perform operation
fnmsub.d f2, f29, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f29, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f29, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f29, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f29, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f29, f30, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xc000000000000000)
li x14, 0x8dbbac55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0x6563e8e1 # load x3 with 32 MSBs 0x000000006563e8e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006563e8e1
sw x3, 0(x2) # store x3 (0x6563e8e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000006563e8e1 from memory into f1
fnmsub.d f14, f23, f28, f1, dyn # perform operation
fnmsub.d f14, f23, f28, f1, rdn # perform operation
fnmsub.d f14, f23, f28, f1, rmm # perform operation
fnmsub.d f14, f23, f28, f1, rne # perform operation
fnmsub.d f14, f23, f28, f1, rtz # perform operation
fnmsub.d f14, f23, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f23, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f23, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f23, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f23, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f23, f28, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x10000000000000)
li x29, 0x21c07832 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0x1326f2e3 # load x3 with 32 MSBs 0x000000001326f2e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001326f2e3
sw x3, 0(x2) # store x3 (0x1326f2e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000001326f2e3 from memory into f15
fnmsub.d f29, f18, f21, f15, dyn # perform operation
fnmsub.d f29, f18, f21, f15, rdn # perform operation
fnmsub.d f29, f18, f21, f15, rmm # perform operation
fnmsub.d f29, f18, f21, f15, rne # perform operation
fnmsub.d f29, f18, f21, f15, rtz # perform operation
fnmsub.d f29, f18, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f18, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f18, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f18, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f18, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f18, f21, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8010000000000000)
li x10, 0xa22af226 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
li x3, 0x221af0ca # load x3 with 32 MSBs 0x00000000221af0ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000221af0ca
sw x3, 0(x2) # store x3 (0x221af0ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000221af0ca from memory into f15
fnmsub.d f10, f14, f18, f15, dyn # perform operation
fnmsub.d f10, f14, f18, f15, rdn # perform operation
fnmsub.d f10, f14, f18, f15, rmm # perform operation
fnmsub.d f10, f14, f18, f15, rne # perform operation
fnmsub.d f10, f14, f18, f15, rtz # perform operation
fnmsub.d f10, f14, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f14, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f14, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f14, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f14, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f14, f18, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fefffffffffffff)
li x17, 0x190665c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
li x3, 0x441d08c1 # load x3 with 32 MSBs 0x00000000441d08c1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000441d08c1
sw x3, 0(x2) # store x3 (0x441d08c1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000441d08c1 from memory into f10
fnmsub.d f17, f1, f7, f10, dyn # perform operation
fnmsub.d f17, f1, f7, f10, rdn # perform operation
fnmsub.d f17, f1, f7, f10, rmm # perform operation
fnmsub.d f17, f1, f7, f10, rne # perform operation
fnmsub.d f17, f1, f7, f10, rtz # perform operation
fnmsub.d f17, f1, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f1, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f1, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f1, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f1, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f1, f7, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xffefffffffffffff)
li x30, 0x6966f8aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
li x3, 0xa31739fa # load x3 with 32 MSBs 0x00000000a31739fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a31739fa
sw x3, 0(x2) # store x3 (0xa31739fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000a31739fa from memory into f28
fnmsub.d f30, f24, f13, f28, dyn # perform operation
fnmsub.d f30, f24, f13, f28, rdn # perform operation
fnmsub.d f30, f24, f13, f28, rmm # perform operation
fnmsub.d f30, f24, f13, f28, rne # perform operation
fnmsub.d f30, f24, f13, f28, rtz # perform operation
fnmsub.d f30, f24, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f24, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f24, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f24, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f24, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f24, f13, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfffffffffffff)
li x29, 0x8f834ea6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
li x3, 0xb8894b0b # load x3 with 32 MSBs 0x00000000b8894b0b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b8894b0b
sw x3, 0(x2) # store x3 (0xb8894b0b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b8894b0b from memory into f23
fnmsub.d f29, f24, f6, f23, dyn # perform operation
fnmsub.d f29, f24, f6, f23, rdn # perform operation
fnmsub.d f29, f24, f6, f23, rmm # perform operation
fnmsub.d f29, f24, f6, f23, rne # perform operation
fnmsub.d f29, f24, f6, f23, rtz # perform operation
fnmsub.d f29, f24, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f24, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f24, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f24, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f24, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f24, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x800fffffffffffff)
li x16, 0x233c30c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
li x3, 0xef7fdd07 # load x3 with 32 MSBs 0x00000000ef7fdd07
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef7fdd07
sw x3, 0(x2) # store x3 (0xef7fdd07) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000ef7fdd07 from memory into f12
fnmsub.d f16, f26, f18, f12, dyn # perform operation
fnmsub.d f16, f26, f18, f12, rdn # perform operation
fnmsub.d f16, f26, f18, f12, rmm # perform operation
fnmsub.d f16, f26, f18, f12, rne # perform operation
fnmsub.d f16, f26, f18, f12, rtz # perform operation
fnmsub.d f16, f26, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f26, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f26, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f26, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f26, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f26, f18, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000)
li x26, 0x7b569007 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0xf77211b4 # load x3 with 32 MSBs 0x00000000f77211b4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f77211b4
sw x3, 0(x2) # store x3 (0xf77211b4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000f77211b4 from memory into f6
fnmsub.d f26, f22, f31, f6, dyn # perform operation
fnmsub.d f26, f22, f31, f6, rdn # perform operation
fnmsub.d f26, f22, f31, f6, rmm # perform operation
fnmsub.d f26, f22, f31, f6, rne # perform operation
fnmsub.d f26, f22, f31, f6, rtz # perform operation
fnmsub.d f26, f22, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f22, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f22, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f22, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f22, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f22, f31, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8008000000000000)
li x18, 0x7b5545c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
li x3, 0xbefd8b46 # load x3 with 32 MSBs 0x00000000befd8b46
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000befd8b46
sw x3, 0(x2) # store x3 (0xbefd8b46) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000befd8b46 from memory into f13
fnmsub.d f18, f8, f28, f13, dyn # perform operation
fnmsub.d f18, f8, f28, f13, rdn # perform operation
fnmsub.d f18, f8, f28, f13, rmm # perform operation
fnmsub.d f18, f8, f28, f13, rne # perform operation
fnmsub.d f18, f8, f28, f13, rtz # perform operation
fnmsub.d f18, f8, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f8, f28, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x1)
li x14, 0xf284dfc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
li x3, 0x798eee1b # load x3 with 32 MSBs 0x00000000798eee1b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000798eee1b
sw x3, 0(x2) # store x3 (0x798eee1b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000798eee1b from memory into f16
fnmsub.d f14, f25, f2, f16, dyn # perform operation
fnmsub.d f14, f25, f2, f16, rdn # perform operation
fnmsub.d f14, f25, f2, f16, rmm # perform operation
fnmsub.d f14, f25, f2, f16, rne # perform operation
fnmsub.d f14, f25, f2, f16, rtz # perform operation
fnmsub.d f14, f25, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f25, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f25, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f25, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f25, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f25, f2, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000001)
li x11, 0x798d6045 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
li x3, 0xfd1f926b # load x3 with 32 MSBs 0x00000000fd1f926b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fd1f926b
sw x3, 0(x2) # store x3 (0xfd1f926b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000fd1f926b from memory into f8
fnmsub.d f11, f20, f31, f8, dyn # perform operation
fnmsub.d f11, f20, f31, f8, rdn # perform operation
fnmsub.d f11, f20, f31, f8, rmm # perform operation
fnmsub.d f11, f20, f31, f8, rne # perform operation
fnmsub.d f11, f20, f31, f8, rtz # perform operation
fnmsub.d f11, f20, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f20, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f20, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f20, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f20, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f20, f31, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000000)
li x5, 0x7e61ae8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
li x3, 0x85684370 # load x3 with 32 MSBs 0x0000000085684370
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000085684370
sw x3, 0(x2) # store x3 (0x85684370) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000085684370 from memory into f6
fnmsub.d f5, f26, f1, f6, dyn # perform operation
fnmsub.d f5, f26, f1, f6, rdn # perform operation
fnmsub.d f5, f26, f1, f6, rmm # perform operation
fnmsub.d f5, f26, f1, f6, rne # perform operation
fnmsub.d f5, f26, f1, f6, rtz # perform operation
fnmsub.d f5, f26, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f26, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f26, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f26, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f26, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f26, f1, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfff0000000000000)
li x1, 0x45d23c19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
li x3, 0xc0ec069a # load x3 with 32 MSBs 0x00000000c0ec069a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c0ec069a
sw x3, 0(x2) # store x3 (0xc0ec069a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000c0ec069a from memory into f10
fnmsub.d f1, f29, f16, f10, dyn # perform operation
fnmsub.d f1, f29, f16, f10, rdn # perform operation
fnmsub.d f1, f29, f16, f10, rmm # perform operation
fnmsub.d f1, f29, f16, f10, rne # perform operation
fnmsub.d f1, f29, f16, f10, rtz # perform operation
fnmsub.d f1, f29, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f29, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f29, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f29, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f29, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f29, f16, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff8000000000000)
li x23, 0xf7429d91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0x3bf2217e # load x3 with 32 MSBs 0x000000003bf2217e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003bf2217e
sw x3, 0(x2) # store x3 (0x3bf2217e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000003bf2217e from memory into f29
fnmsub.d f23, f19, f7, f29, dyn # perform operation
fnmsub.d f23, f19, f7, f29, rdn # perform operation
fnmsub.d f23, f19, f7, f29, rmm # perform operation
fnmsub.d f23, f19, f7, f29, rne # perform operation
fnmsub.d f23, f19, f7, f29, rtz # perform operation
fnmsub.d f23, f19, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f19, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f19, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f19, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f19, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f19, f7, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fffffffffffffff)
li x7, 0x2e4a4b84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
li x3, 0x1896681e # load x3 with 32 MSBs 0x000000001896681e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001896681e
sw x3, 0(x2) # store x3 (0x1896681e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000001896681e from memory into f2
fnmsub.d f7, f29, f28, f2, dyn # perform operation
fnmsub.d f7, f29, f28, f2, rdn # perform operation
fnmsub.d f7, f29, f28, f2, rmm # perform operation
fnmsub.d f7, f29, f28, f2, rne # perform operation
fnmsub.d f7, f29, f28, f2, rtz # perform operation
fnmsub.d f7, f29, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f29, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f29, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f29, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f29, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f29, f28, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000001)
li x15, 0xec7763fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000001 from memory into f25
li x3, 0x770dcf84 # load x3 with 32 MSBs 0x00000000770dcf84
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000770dcf84
sw x3, 0(x2) # store x3 (0x770dcf84) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000770dcf84 from memory into f13
fnmsub.d f15, f27, f25, f13, dyn # perform operation
fnmsub.d f15, f27, f25, f13, rdn # perform operation
fnmsub.d f15, f27, f25, f13, rmm # perform operation
fnmsub.d f15, f27, f25, f13, rne # perform operation
fnmsub.d f15, f27, f25, f13, rtz # perform operation
fnmsub.d f15, f27, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f27, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f27, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f27, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f27, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f27, f25, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff7ffffffffffff)
li x23, 0xeb5978f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
li x3, 0x1e1e94f3 # load x3 with 32 MSBs 0x000000001e1e94f3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e1e94f3
sw x3, 0(x2) # store x3 (0x1e1e94f3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000001e1e94f3 from memory into f20
fnmsub.d f23, f17, f30, f20, dyn # perform operation
fnmsub.d f23, f17, f30, f20, rdn # perform operation
fnmsub.d f23, f17, f30, f20, rmm # perform operation
fnmsub.d f23, f17, f30, f20, rne # perform operation
fnmsub.d f23, f17, f30, f20, rtz # perform operation
fnmsub.d f23, f17, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f17, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f17, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f17, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f17, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f17, f30, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x5a392534a57711ad)
li x13, 0x6ae91a33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0x96a4202a # load x3 with 32 MSBs 0x0000000096a4202a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000096a4202a
sw x3, 0(x2) # store x3 (0x96a4202a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000096a4202a from memory into f4
fnmsub.d f13, f15, f1, f4, dyn # perform operation
fnmsub.d f13, f15, f1, f4, rdn # perform operation
fnmsub.d f13, f15, f1, f4, rmm # perform operation
fnmsub.d f13, f15, f1, f4, rne # perform operation
fnmsub.d f13, f15, f1, f4, rtz # perform operation
fnmsub.d f13, f15, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f15, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f15, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f15, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f15, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f15, f1, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xa6e895993737426c)
li x27, 0x7146676d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x31e88bea # load x3 with 32 MSBs 0x0000000031e88bea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031e88bea
sw x3, 0(x2) # store x3 (0x31e88bea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000031e88bea from memory into f19
fnmsub.d f27, f23, f6, f19, dyn # perform operation
fnmsub.d f27, f23, f6, f19, rdn # perform operation
fnmsub.d f27, f23, f6, f19, rmm # perform operation
fnmsub.d f27, f23, f6, f19, rne # perform operation
fnmsub.d f27, f23, f6, f19, rtz # perform operation
fnmsub.d f27, f23, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f23, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f23, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f23, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f23, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f23, f6, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x0)
li x10, 0x2f24e96d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
li x3, 0xa9e8d587 # load x3 with 32 MSBs 0x00000000a9e8d587
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9e8d587
sw x3, 0(x2) # store x3 (0xa9e8d587) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000a9e8d587 from memory into f27
fnmsub.d f10, f22, f11, f27, dyn # perform operation
fnmsub.d f10, f22, f11, f27, rdn # perform operation
fnmsub.d f10, f22, f11, f27, rmm # perform operation
fnmsub.d f10, f22, f11, f27, rne # perform operation
fnmsub.d f10, f22, f11, f27, rtz # perform operation
fnmsub.d f10, f22, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f22, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f22, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f22, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f22, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f22, f11, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000000)
li x3, 0x485ded45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
li x3, 0xa35e50d6 # load x3 with 32 MSBs 0x00000000a35e50d6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a35e50d6
sw x3, 0(x2) # store x3 (0xa35e50d6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000a35e50d6 from memory into f13
fnmsub.d f3, f8, f17, f13, dyn # perform operation
fnmsub.d f3, f8, f17, f13, rdn # perform operation
fnmsub.d f3, f8, f17, f13, rmm # perform operation
fnmsub.d f3, f8, f17, f13, rne # perform operation
fnmsub.d f3, f8, f17, f13, rtz # perform operation
fnmsub.d f3, f8, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f8, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f8, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f8, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f8, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f8, f17, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff0000000000000)
li x31, 0xcddf9a4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
li x3, 0x1329582d # load x3 with 32 MSBs 0x000000001329582d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001329582d
sw x3, 0(x2) # store x3 (0x1329582d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000001329582d from memory into f2
fnmsub.d f31, f10, f29, f2, dyn # perform operation
fnmsub.d f31, f10, f29, f2, rdn # perform operation
fnmsub.d f31, f10, f29, f2, rmm # perform operation
fnmsub.d f31, f10, f29, f2, rne # perform operation
fnmsub.d f31, f10, f29, f2, rtz # perform operation
fnmsub.d f31, f10, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f10, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f10, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f10, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f10, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f10, f29, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff0000000000000)
li x20, 0x38402194 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0xbb07867e # load x3 with 32 MSBs 0x00000000bb07867e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb07867e
sw x3, 0(x2) # store x3 (0xbb07867e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000bb07867e from memory into f24
fnmsub.d f20, f2, f12, f24, dyn # perform operation
fnmsub.d f20, f2, f12, f24, rdn # perform operation
fnmsub.d f20, f2, f12, f24, rmm # perform operation
fnmsub.d f20, f2, f12, f24, rne # perform operation
fnmsub.d f20, f2, f12, f24, rtz # perform operation
fnmsub.d f20, f2, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f2, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f2, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f2, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f2, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f2, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff8000000000000)
li x23, 0x184dc2f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0x056d5b82 # load x3 with 32 MSBs 0x00000000056d5b82
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000056d5b82
sw x3, 0(x2) # store x3 (0x056d5b82) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000056d5b82 from memory into f28
fnmsub.d f23, f29, f31, f28, dyn # perform operation
fnmsub.d f23, f29, f31, f28, rdn # perform operation
fnmsub.d f23, f29, f31, f28, rmm # perform operation
fnmsub.d f23, f29, f31, f28, rne # perform operation
fnmsub.d f23, f29, f31, f28, rtz # perform operation
fnmsub.d f23, f29, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f29, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f29, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f29, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f29, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f29, f31, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff8000000000000)
li x15, 0x1b2ac7e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
li x3, 0x8c9249a9 # load x3 with 32 MSBs 0x000000008c9249a9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c9249a9
sw x3, 0(x2) # store x3 (0x8c9249a9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000008c9249a9 from memory into f9
fnmsub.d f15, f7, f1, f9, dyn # perform operation
fnmsub.d f15, f7, f1, f9, rdn # perform operation
fnmsub.d f15, f7, f1, f9, rmm # perform operation
fnmsub.d f15, f7, f1, f9, rne # perform operation
fnmsub.d f15, f7, f1, f9, rtz # perform operation
fnmsub.d f15, f7, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f7, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f7, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f7, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f7, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f7, f1, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x4000000000000000)
li x31, 0xb9189732 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
li x3, 0x8058db98 # load x3 with 32 MSBs 0x000000008058db98
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008058db98
sw x3, 0(x2) # store x3 (0x8058db98) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000008058db98 from memory into f4
fnmsub.d f31, f19, f24, f4, dyn # perform operation
fnmsub.d f31, f19, f24, f4, rdn # perform operation
fnmsub.d f31, f19, f24, f4, rmm # perform operation
fnmsub.d f31, f19, f24, f4, rne # perform operation
fnmsub.d f31, f19, f24, f4, rtz # perform operation
fnmsub.d f31, f19, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f19, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f19, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f19, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f19, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f19, f24, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xc000000000000000)
li x21, 0x189c879a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0008000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
li x3, 0x78909a38 # load x3 with 32 MSBs 0x0000000078909a38
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000078909a38
sw x3, 0(x2) # store x3 (0x78909a38) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000078909a38 from memory into f11
fnmsub.d f21, f18, f22, f11, dyn # perform operation
fnmsub.d f21, f18, f22, f11, rdn # perform operation
fnmsub.d f21, f18, f22, f11, rmm # perform operation
fnmsub.d f21, f18, f22, f11, rne # perform operation
fnmsub.d f21, f18, f22, f11, rtz # perform operation
fnmsub.d f21, f18, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f18, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f18, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f18, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f18, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f18, f22, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x10000000000000)
li x6, 0xacc85e9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
li x3, 0x711d1526 # load x3 with 32 MSBs 0x00000000711d1526
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000711d1526
sw x3, 0(x2) # store x3 (0x711d1526) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000711d1526 from memory into f16
fnmsub.d f6, f20, f1, f16, dyn # perform operation
fnmsub.d f6, f20, f1, f16, rdn # perform operation
fnmsub.d f6, f20, f1, f16, rmm # perform operation
fnmsub.d f6, f20, f1, f16, rne # perform operation
fnmsub.d f6, f20, f1, f16, rtz # perform operation
fnmsub.d f6, f20, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f20, f1, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8010000000000000)
li x27, 0xe84e0d7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
li x3, 0xacd248c2 # load x3 with 32 MSBs 0x00000000acd248c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000acd248c2
sw x3, 0(x2) # store x3 (0xacd248c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000acd248c2 from memory into f3
fnmsub.d f27, f6, f4, f3, dyn # perform operation
fnmsub.d f27, f6, f4, f3, rdn # perform operation
fnmsub.d f27, f6, f4, f3, rmm # perform operation
fnmsub.d f27, f6, f4, f3, rne # perform operation
fnmsub.d f27, f6, f4, f3, rtz # perform operation
fnmsub.d f27, f6, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f6, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f6, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f6, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f6, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f6, f4, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fefffffffffffff)
li x14, 0x17e7c92b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
li x3, 0x720fbea7 # load x3 with 32 MSBs 0x00000000720fbea7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000720fbea7
sw x3, 0(x2) # store x3 (0x720fbea7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000720fbea7 from memory into f7
fnmsub.d f14, f1, f12, f7, dyn # perform operation
fnmsub.d f14, f1, f12, f7, rdn # perform operation
fnmsub.d f14, f1, f12, f7, rmm # perform operation
fnmsub.d f14, f1, f12, f7, rne # perform operation
fnmsub.d f14, f1, f12, f7, rtz # perform operation
fnmsub.d f14, f1, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f1, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f1, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f1, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f1, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f1, f12, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xffefffffffffffff)
li x31, 0x36a573b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
li x3, 0xc87d8706 # load x3 with 32 MSBs 0x00000000c87d8706
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c87d8706
sw x3, 0(x2) # store x3 (0xc87d8706) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000c87d8706 from memory into f29
fnmsub.d f31, f3, f12, f29, dyn # perform operation
fnmsub.d f31, f3, f12, f29, rdn # perform operation
fnmsub.d f31, f3, f12, f29, rmm # perform operation
fnmsub.d f31, f3, f12, f29, rne # perform operation
fnmsub.d f31, f3, f12, f29, rtz # perform operation
fnmsub.d f31, f3, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f3, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f3, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f3, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f3, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f3, f12, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfffffffffffff)
li x21, 0x91ab69e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
li x3, 0x686fd063 # load x3 with 32 MSBs 0x00000000686fd063
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000686fd063
sw x3, 0(x2) # store x3 (0x686fd063) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000686fd063 from memory into f23
fnmsub.d f21, f3, f22, f23, dyn # perform operation
fnmsub.d f21, f3, f22, f23, rdn # perform operation
fnmsub.d f21, f3, f22, f23, rmm # perform operation
fnmsub.d f21, f3, f22, f23, rne # perform operation
fnmsub.d f21, f3, f22, f23, rtz # perform operation
fnmsub.d f21, f3, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f3, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f3, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f3, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f3, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f3, f22, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x800fffffffffffff)
li x23, 0x958c2070 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
li x3, 0xb872becb # load x3 with 32 MSBs 0x00000000b872becb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b872becb
sw x3, 0(x2) # store x3 (0xb872becb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000b872becb from memory into f25
fnmsub.d f23, f11, f5, f25, dyn # perform operation
fnmsub.d f23, f11, f5, f25, rdn # perform operation
fnmsub.d f23, f11, f5, f25, rmm # perform operation
fnmsub.d f23, f11, f5, f25, rne # perform operation
fnmsub.d f23, f11, f5, f25, rtz # perform operation
fnmsub.d f23, f11, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f11, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f11, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f11, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f11, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f11, f5, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000)
li x28, 0x14e902d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
li x3, 0xa69e3cfd # load x3 with 32 MSBs 0x00000000a69e3cfd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a69e3cfd
sw x3, 0(x2) # store x3 (0xa69e3cfd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000a69e3cfd from memory into f26
fnmsub.d f28, f9, f27, f26, dyn # perform operation
fnmsub.d f28, f9, f27, f26, rdn # perform operation
fnmsub.d f28, f9, f27, f26, rmm # perform operation
fnmsub.d f28, f9, f27, f26, rne # perform operation
fnmsub.d f28, f9, f27, f26, rtz # perform operation
fnmsub.d f28, f9, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f9, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f9, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f9, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f9, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f9, f27, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8008000000000000)
li x18, 0xa1d10bdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
li x3, 0x6eb98079 # load x3 with 32 MSBs 0x000000006eb98079
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006eb98079
sw x3, 0(x2) # store x3 (0x6eb98079) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000006eb98079 from memory into f9
fnmsub.d f18, f15, f29, f9, dyn # perform operation
fnmsub.d f18, f15, f29, f9, rdn # perform operation
fnmsub.d f18, f15, f29, f9, rmm # perform operation
fnmsub.d f18, f15, f29, f9, rne # perform operation
fnmsub.d f18, f15, f29, f9, rtz # perform operation
fnmsub.d f18, f15, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f15, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f15, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f15, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f15, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f15, f29, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x1)
li x22, 0x6d5a6ced # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
li x3, 0x59445430 # load x3 with 32 MSBs 0x0000000059445430
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000059445430
sw x3, 0(x2) # store x3 (0x59445430) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000059445430 from memory into f12
fnmsub.d f22, f27, f18, f12, dyn # perform operation
fnmsub.d f22, f27, f18, f12, rdn # perform operation
fnmsub.d f22, f27, f18, f12, rmm # perform operation
fnmsub.d f22, f27, f18, f12, rne # perform operation
fnmsub.d f22, f27, f18, f12, rtz # perform operation
fnmsub.d f22, f27, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f27, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f27, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f27, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f27, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f27, f18, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000001)
li x30, 0x08f3e0be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
li x3, 0x323f115e # load x3 with 32 MSBs 0x00000000323f115e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000323f115e
sw x3, 0(x2) # store x3 (0x323f115e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000323f115e from memory into f27
fnmsub.d f30, f9, f12, f27, dyn # perform operation
fnmsub.d f30, f9, f12, f27, rdn # perform operation
fnmsub.d f30, f9, f12, f27, rmm # perform operation
fnmsub.d f30, f9, f12, f27, rne # perform operation
fnmsub.d f30, f9, f12, f27, rtz # perform operation
fnmsub.d f30, f9, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f9, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f9, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f9, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f9, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f9, f12, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000000)
li x5, 0x1adad5e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
li x3, 0x47f839b3 # load x3 with 32 MSBs 0x0000000047f839b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000047f839b3
sw x3, 0(x2) # store x3 (0x47f839b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000047f839b3 from memory into f7
fnmsub.d f5, f21, f26, f7, dyn # perform operation
fnmsub.d f5, f21, f26, f7, rdn # perform operation
fnmsub.d f5, f21, f26, f7, rmm # perform operation
fnmsub.d f5, f21, f26, f7, rne # perform operation
fnmsub.d f5, f21, f26, f7, rtz # perform operation
fnmsub.d f5, f21, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f21, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f21, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f21, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f21, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f21, f26, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfff0000000000000)
li x18, 0xb82946d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
li x3, 0x1ca6de6a # load x3 with 32 MSBs 0x000000001ca6de6a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ca6de6a
sw x3, 0(x2) # store x3 (0x1ca6de6a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000001ca6de6a from memory into f25
fnmsub.d f18, f30, f17, f25, dyn # perform operation
fnmsub.d f18, f30, f17, f25, rdn # perform operation
fnmsub.d f18, f30, f17, f25, rmm # perform operation
fnmsub.d f18, f30, f17, f25, rne # perform operation
fnmsub.d f18, f30, f17, f25, rtz # perform operation
fnmsub.d f18, f30, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f30, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f30, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f30, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f30, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f30, f17, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff8000000000000)
li x3, 0x528fb7b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
li x3, 0xa5478983 # load x3 with 32 MSBs 0x00000000a5478983
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a5478983
sw x3, 0(x2) # store x3 (0xa5478983) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000a5478983 from memory into f11
fnmsub.d f3, f5, f8, f11, dyn # perform operation
fnmsub.d f3, f5, f8, f11, rdn # perform operation
fnmsub.d f3, f5, f8, f11, rmm # perform operation
fnmsub.d f3, f5, f8, f11, rne # perform operation
fnmsub.d f3, f5, f8, f11, rtz # perform operation
fnmsub.d f3, f5, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f5, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f5, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f5, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f5, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f5, f8, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fffffffffffffff)
li x28, 0x6f877fd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
li x3, 0x1e2bb109 # load x3 with 32 MSBs 0x000000001e2bb109
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e2bb109
sw x3, 0(x2) # store x3 (0x1e2bb109) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000001e2bb109 from memory into f29
fnmsub.d f28, f21, f20, f29, dyn # perform operation
fnmsub.d f28, f21, f20, f29, rdn # perform operation
fnmsub.d f28, f21, f20, f29, rmm # perform operation
fnmsub.d f28, f21, f20, f29, rne # perform operation
fnmsub.d f28, f21, f20, f29, rtz # perform operation
fnmsub.d f28, f21, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f21, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f21, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f21, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f21, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f21, f20, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000001)
li x4, 0xc80ab52e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
li x3, 0x7883d478 # load x3 with 32 MSBs 0x000000007883d478
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007883d478
sw x3, 0(x2) # store x3 (0x7883d478) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000007883d478 from memory into f16
fnmsub.d f4, f2, f8, f16, dyn # perform operation
fnmsub.d f4, f2, f8, f16, rdn # perform operation
fnmsub.d f4, f2, f8, f16, rmm # perform operation
fnmsub.d f4, f2, f8, f16, rne # perform operation
fnmsub.d f4, f2, f8, f16, rtz # perform operation
fnmsub.d f4, f2, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f2, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f2, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f2, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f2, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f2, f8, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff7ffffffffffff)
li x29, 0x4a5ef05a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
li x3, 0x68f472b9 # load x3 with 32 MSBs 0x0000000068f472b9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000068f472b9
sw x3, 0(x2) # store x3 (0x68f472b9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000068f472b9 from memory into f17
fnmsub.d f29, f7, f13, f17, dyn # perform operation
fnmsub.d f29, f7, f13, f17, rdn # perform operation
fnmsub.d f29, f7, f13, f17, rmm # perform operation
fnmsub.d f29, f7, f13, f17, rne # perform operation
fnmsub.d f29, f7, f13, f17, rtz # perform operation
fnmsub.d f29, f7, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f7, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f7, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f7, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f7, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f7, f13, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x5a392534a57711ad)
li x21, 0xf69e92c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0008000000000000 from memory into f23
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
li x3, 0x267ac704 # load x3 with 32 MSBs 0x00000000267ac704
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000267ac704
sw x3, 0(x2) # store x3 (0x267ac704) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000267ac704 from memory into f29
fnmsub.d f21, f23, f25, f29, dyn # perform operation
fnmsub.d f21, f23, f25, f29, rdn # perform operation
fnmsub.d f21, f23, f25, f29, rmm # perform operation
fnmsub.d f21, f23, f25, f29, rne # perform operation
fnmsub.d f21, f23, f25, f29, rtz # perform operation
fnmsub.d f21, f23, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f23, f25, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xa6e895993737426c)
li x29, 0x2774af7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
li x3, 0xfe851c94 # load x3 with 32 MSBs 0x00000000fe851c94
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fe851c94
sw x3, 0(x2) # store x3 (0xfe851c94) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000fe851c94 from memory into f5
fnmsub.d f29, f24, f7, f5, dyn # perform operation
fnmsub.d f29, f24, f7, f5, rdn # perform operation
fnmsub.d f29, f24, f7, f5, rmm # perform operation
fnmsub.d f29, f24, f7, f5, rne # perform operation
fnmsub.d f29, f24, f7, f5, rtz # perform operation
fnmsub.d f29, f24, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f24, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f24, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f24, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f24, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f24, f7, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x0)
li x31, 0xe2ba5268 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
li x3, 0xb360a96a # load x3 with 32 MSBs 0x00000000b360a96a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b360a96a
sw x3, 0(x2) # store x3 (0xb360a96a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000b360a96a from memory into f8
fnmsub.d f31, f19, f30, f8, dyn # perform operation
fnmsub.d f31, f19, f30, f8, rdn # perform operation
fnmsub.d f31, f19, f30, f8, rmm # perform operation
fnmsub.d f31, f19, f30, f8, rne # perform operation
fnmsub.d f31, f19, f30, f8, rtz # perform operation
fnmsub.d f31, f19, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f19, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f19, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f19, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f19, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f19, f30, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000000)
li x26, 0xf76fe8fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000000 from memory into f28
li x3, 0xac41e492 # load x3 with 32 MSBs 0x00000000ac41e492
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac41e492
sw x3, 0(x2) # store x3 (0xac41e492) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000ac41e492 from memory into f29
fnmsub.d f26, f5, f28, f29, dyn # perform operation
fnmsub.d f26, f5, f28, f29, rdn # perform operation
fnmsub.d f26, f5, f28, f29, rmm # perform operation
fnmsub.d f26, f5, f28, f29, rne # perform operation
fnmsub.d f26, f5, f28, f29, rtz # perform operation
fnmsub.d f26, f5, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f5, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f5, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f5, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f5, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f5, f28, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff0000000000000)
li x31, 0xd63642d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8008000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0x55b9c518 # load x3 with 32 MSBs 0x0000000055b9c518
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000055b9c518
sw x3, 0(x2) # store x3 (0x55b9c518) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000055b9c518 from memory into f26
fnmsub.d f31, f24, f1, f26, dyn # perform operation
fnmsub.d f31, f24, f1, f26, rdn # perform operation
fnmsub.d f31, f24, f1, f26, rmm # perform operation
fnmsub.d f31, f24, f1, f26, rne # perform operation
fnmsub.d f31, f24, f1, f26, rtz # perform operation
fnmsub.d f31, f24, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f24, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f24, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f24, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f24, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f24, f1, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff0000000000000)
li x26, 0x216b5f2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
li x3, 0x8f8028d2 # load x3 with 32 MSBs 0x000000008f8028d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f8028d2
sw x3, 0(x2) # store x3 (0x8f8028d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000008f8028d2 from memory into f14
fnmsub.d f26, f13, f3, f14, dyn # perform operation
fnmsub.d f26, f13, f3, f14, rdn # perform operation
fnmsub.d f26, f13, f3, f14, rmm # perform operation
fnmsub.d f26, f13, f3, f14, rne # perform operation
fnmsub.d f26, f13, f3, f14, rtz # perform operation
fnmsub.d f26, f13, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f13, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f13, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f13, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f13, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f13, f3, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff8000000000000)
li x29, 0x5be5a9fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
li x3, 0xf85bbf05 # load x3 with 32 MSBs 0x00000000f85bbf05
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f85bbf05
sw x3, 0(x2) # store x3 (0xf85bbf05) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000f85bbf05 from memory into f18
fnmsub.d f29, f31, f28, f18, dyn # perform operation
fnmsub.d f29, f31, f28, f18, rdn # perform operation
fnmsub.d f29, f31, f28, f18, rmm # perform operation
fnmsub.d f29, f31, f28, f18, rne # perform operation
fnmsub.d f29, f31, f28, f18, rtz # perform operation
fnmsub.d f29, f31, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f31, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f31, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f31, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f31, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f31, f28, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff8000000000000)
li x11, 0xdfa74d82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
li x3, 0xeb58e959 # load x3 with 32 MSBs 0x00000000eb58e959
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb58e959
sw x3, 0(x2) # store x3 (0xeb58e959) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000eb58e959 from memory into f16
fnmsub.d f11, f13, f25, f16, dyn # perform operation
fnmsub.d f11, f13, f25, f16, rdn # perform operation
fnmsub.d f11, f13, f25, f16, rmm # perform operation
fnmsub.d f11, f13, f25, f16, rne # perform operation
fnmsub.d f11, f13, f25, f16, rtz # perform operation
fnmsub.d f11, f13, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f13, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f13, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f13, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f13, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f13, f25, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x4000000000000000)
li x17, 0x37810aec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
li x3, 0x9fb0d10c # load x3 with 32 MSBs 0x000000009fb0d10c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009fb0d10c
sw x3, 0(x2) # store x3 (0x9fb0d10c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000009fb0d10c from memory into f26
fnmsub.d f17, f3, f19, f26, dyn # perform operation
fnmsub.d f17, f3, f19, f26, rdn # perform operation
fnmsub.d f17, f3, f19, f26, rmm # perform operation
fnmsub.d f17, f3, f19, f26, rne # perform operation
fnmsub.d f17, f3, f19, f26, rtz # perform operation
fnmsub.d f17, f3, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f3, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f3, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f3, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f3, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f3, f19, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xc000000000000000)
li x27, 0xcf6e4b6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
li x3, 0xd25a70e9 # load x3 with 32 MSBs 0x00000000d25a70e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d25a70e9
sw x3, 0(x2) # store x3 (0xd25a70e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000d25a70e9 from memory into f26
fnmsub.d f27, f11, f9, f26, dyn # perform operation
fnmsub.d f27, f11, f9, f26, rdn # perform operation
fnmsub.d f27, f11, f9, f26, rmm # perform operation
fnmsub.d f27, f11, f9, f26, rne # perform operation
fnmsub.d f27, f11, f9, f26, rtz # perform operation
fnmsub.d f27, f11, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f11, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f11, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f11, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f11, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f11, f9, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x10000000000000)
li x6, 0xe1d2a029 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
li x3, 0x06222ed9 # load x3 with 32 MSBs 0x0000000006222ed9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000006222ed9
sw x3, 0(x2) # store x3 (0x06222ed9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000006222ed9 from memory into f18
fnmsub.d f6, f28, f26, f18, dyn # perform operation
fnmsub.d f6, f28, f26, f18, rdn # perform operation
fnmsub.d f6, f28, f26, f18, rmm # perform operation
fnmsub.d f6, f28, f26, f18, rne # perform operation
fnmsub.d f6, f28, f26, f18, rtz # perform operation
fnmsub.d f6, f28, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f28, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f28, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f28, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f28, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f28, f26, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8010000000000000)
li x14, 0xb299f4cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
li x3, 0x2e215946 # load x3 with 32 MSBs 0x000000002e215946
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e215946
sw x3, 0(x2) # store x3 (0x2e215946) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000002e215946 from memory into f4
fnmsub.d f14, f18, f27, f4, dyn # perform operation
fnmsub.d f14, f18, f27, f4, rdn # perform operation
fnmsub.d f14, f18, f27, f4, rmm # perform operation
fnmsub.d f14, f18, f27, f4, rne # perform operation
fnmsub.d f14, f18, f27, f4, rtz # perform operation
fnmsub.d f14, f18, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f18, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f18, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f18, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f18, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f18, f27, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fefffffffffffff)
li x3, 0xbe216be4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
li x3, 0xf0edf3ab # load x3 with 32 MSBs 0x00000000f0edf3ab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f0edf3ab
sw x3, 0(x2) # store x3 (0xf0edf3ab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000f0edf3ab from memory into f31
fnmsub.d f3, f14, f15, f31, dyn # perform operation
fnmsub.d f3, f14, f15, f31, rdn # perform operation
fnmsub.d f3, f14, f15, f31, rmm # perform operation
fnmsub.d f3, f14, f15, f31, rne # perform operation
fnmsub.d f3, f14, f15, f31, rtz # perform operation
fnmsub.d f3, f14, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f14, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f14, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f14, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f14, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f14, f15, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xffefffffffffffff)
li x13, 0x1be69c6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
li x3, 0x20b0bb8a # load x3 with 32 MSBs 0x0000000020b0bb8a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020b0bb8a
sw x3, 0(x2) # store x3 (0x20b0bb8a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000020b0bb8a from memory into f4
fnmsub.d f13, f27, f7, f4, dyn # perform operation
fnmsub.d f13, f27, f7, f4, rdn # perform operation
fnmsub.d f13, f27, f7, f4, rmm # perform operation
fnmsub.d f13, f27, f7, f4, rne # perform operation
fnmsub.d f13, f27, f7, f4, rtz # perform operation
fnmsub.d f13, f27, f7, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f27, f7, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f27, f7, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f27, f7, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f27, f7, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f27, f7, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfffffffffffff)
li x27, 0x66071672 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0xfdc0c9b3 # load x3 with 32 MSBs 0x00000000fdc0c9b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fdc0c9b3
sw x3, 0(x2) # store x3 (0xfdc0c9b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000fdc0c9b3 from memory into f30
fnmsub.d f27, f21, f31, f30, dyn # perform operation
fnmsub.d f27, f21, f31, f30, rdn # perform operation
fnmsub.d f27, f21, f31, f30, rmm # perform operation
fnmsub.d f27, f21, f31, f30, rne # perform operation
fnmsub.d f27, f21, f31, f30, rtz # perform operation
fnmsub.d f27, f21, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f21, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f21, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f21, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f21, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f21, f31, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x800fffffffffffff)
li x21, 0xcc886d2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
li x3, 0x230e24ae # load x3 with 32 MSBs 0x00000000230e24ae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000230e24ae
sw x3, 0(x2) # store x3 (0x230e24ae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000230e24ae from memory into f7
fnmsub.d f21, f11, f17, f7, dyn # perform operation
fnmsub.d f21, f11, f17, f7, rdn # perform operation
fnmsub.d f21, f11, f17, f7, rmm # perform operation
fnmsub.d f21, f11, f17, f7, rne # perform operation
fnmsub.d f21, f11, f17, f7, rtz # perform operation
fnmsub.d f21, f11, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f11, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f11, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f11, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f11, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f11, f17, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000)
li x30, 0x1fe7f700 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
li x3, 0x8673dbd7 # load x3 with 32 MSBs 0x000000008673dbd7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008673dbd7
sw x3, 0(x2) # store x3 (0x8673dbd7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000008673dbd7 from memory into f8
fnmsub.d f30, f7, f15, f8, dyn # perform operation
fnmsub.d f30, f7, f15, f8, rdn # perform operation
fnmsub.d f30, f7, f15, f8, rmm # perform operation
fnmsub.d f30, f7, f15, f8, rne # perform operation
fnmsub.d f30, f7, f15, f8, rtz # perform operation
fnmsub.d f30, f7, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f7, f15, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8008000000000000)
li x12, 0xcd3e6093 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
li x3, 0x22b26b66 # load x3 with 32 MSBs 0x0000000022b26b66
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000022b26b66
sw x3, 0(x2) # store x3 (0x22b26b66) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000022b26b66 from memory into f5
fnmsub.d f12, f6, f31, f5, dyn # perform operation
fnmsub.d f12, f6, f31, f5, rdn # perform operation
fnmsub.d f12, f6, f31, f5, rmm # perform operation
fnmsub.d f12, f6, f31, f5, rne # perform operation
fnmsub.d f12, f6, f31, f5, rtz # perform operation
fnmsub.d f12, f6, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f6, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f6, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f6, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f6, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f6, f31, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x1)
li x30, 0x6bb0c6c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
li x3, 0xe35705e4 # load x3 with 32 MSBs 0x00000000e35705e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e35705e4
sw x3, 0(x2) # store x3 (0xe35705e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000e35705e4 from memory into f22
fnmsub.d f30, f8, f26, f22, dyn # perform operation
fnmsub.d f30, f8, f26, f22, rdn # perform operation
fnmsub.d f30, f8, f26, f22, rmm # perform operation
fnmsub.d f30, f8, f26, f22, rne # perform operation
fnmsub.d f30, f8, f26, f22, rtz # perform operation
fnmsub.d f30, f8, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f8, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f8, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f8, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f8, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f8, f26, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000001)
li x13, 0xcc76e05b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000001 from memory into f10
li x3, 0xc3aa7640 # load x3 with 32 MSBs 0x00000000c3aa7640
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c3aa7640
sw x3, 0(x2) # store x3 (0xc3aa7640) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000c3aa7640 from memory into f21
fnmsub.d f13, f31, f10, f21, dyn # perform operation
fnmsub.d f13, f31, f10, f21, rdn # perform operation
fnmsub.d f13, f31, f10, f21, rmm # perform operation
fnmsub.d f13, f31, f10, f21, rne # perform operation
fnmsub.d f13, f31, f10, f21, rtz # perform operation
fnmsub.d f13, f31, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f31, f10, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000000)
li x2, 0xac33ec43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
li x3, 0x3bc9c298 # load x3 with 32 MSBs 0x000000003bc9c298
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003bc9c298
sw x3, 0(x2) # store x3 (0x3bc9c298) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000003bc9c298 from memory into f13
fnmsub.d f2, f19, f25, f13, dyn # perform operation
fnmsub.d f2, f19, f25, f13, rdn # perform operation
fnmsub.d f2, f19, f25, f13, rmm # perform operation
fnmsub.d f2, f19, f25, f13, rne # perform operation
fnmsub.d f2, f19, f25, f13, rtz # perform operation
fnmsub.d f2, f19, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f19, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f19, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f19, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f19, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f19, f25, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfff0000000000000)
li x5, 0xde55a54b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
li x3, 0xe9097edf # load x3 with 32 MSBs 0x00000000e9097edf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e9097edf
sw x3, 0(x2) # store x3 (0xe9097edf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000e9097edf from memory into f28
fnmsub.d f5, f13, f20, f28, dyn # perform operation
fnmsub.d f5, f13, f20, f28, rdn # perform operation
fnmsub.d f5, f13, f20, f28, rmm # perform operation
fnmsub.d f5, f13, f20, f28, rne # perform operation
fnmsub.d f5, f13, f20, f28, rtz # perform operation
fnmsub.d f5, f13, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f13, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f13, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f13, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f13, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f13, f20, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff8000000000000)
li x7, 0x0da3488d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
li x3, 0x96e8a865 # load x3 with 32 MSBs 0x0000000096e8a865
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000096e8a865
sw x3, 0(x2) # store x3 (0x96e8a865) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000096e8a865 from memory into f19
fnmsub.d f7, f25, f27, f19, dyn # perform operation
fnmsub.d f7, f25, f27, f19, rdn # perform operation
fnmsub.d f7, f25, f27, f19, rmm # perform operation
fnmsub.d f7, f25, f27, f19, rne # perform operation
fnmsub.d f7, f25, f27, f19, rtz # perform operation
fnmsub.d f7, f25, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f25, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f25, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f25, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f25, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f25, f27, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fffffffffffffff)
li x20, 0xc6cb5f3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
li x3, 0xc2d43caf # load x3 with 32 MSBs 0x00000000c2d43caf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c2d43caf
sw x3, 0(x2) # store x3 (0xc2d43caf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000c2d43caf from memory into f21
fnmsub.d f20, f6, f15, f21, dyn # perform operation
fnmsub.d f20, f6, f15, f21, rdn # perform operation
fnmsub.d f20, f6, f15, f21, rmm # perform operation
fnmsub.d f20, f6, f15, f21, rne # perform operation
fnmsub.d f20, f6, f15, f21, rtz # perform operation
fnmsub.d f20, f6, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f6, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f6, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f6, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f6, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f6, f15, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000001)
li x17, 0xa1fd7592 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
li x3, 0x188a09a7 # load x3 with 32 MSBs 0x00000000188a09a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000188a09a7
sw x3, 0(x2) # store x3 (0x188a09a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000188a09a7 from memory into f23
fnmsub.d f17, f29, f11, f23, dyn # perform operation
fnmsub.d f17, f29, f11, f23, rdn # perform operation
fnmsub.d f17, f29, f11, f23, rmm # perform operation
fnmsub.d f17, f29, f11, f23, rne # perform operation
fnmsub.d f17, f29, f11, f23, rtz # perform operation
fnmsub.d f17, f29, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f29, f11, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff7ffffffffffff)
li x2, 0xba16091e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
li x3, 0xb3b02a9f # load x3 with 32 MSBs 0x00000000b3b02a9f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3b02a9f
sw x3, 0(x2) # store x3 (0xb3b02a9f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000b3b02a9f from memory into f15
fnmsub.d f2, f14, f1, f15, dyn # perform operation
fnmsub.d f2, f14, f1, f15, rdn # perform operation
fnmsub.d f2, f14, f1, f15, rmm # perform operation
fnmsub.d f2, f14, f1, f15, rne # perform operation
fnmsub.d f2, f14, f1, f15, rtz # perform operation
fnmsub.d f2, f14, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f14, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f14, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f14, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f14, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f14, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x5a392534a57711ad)
li x21, 0x9f00f878 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
li x3, 0xcbe28ded # load x3 with 32 MSBs 0x00000000cbe28ded
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cbe28ded
sw x3, 0(x2) # store x3 (0xcbe28ded) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000cbe28ded from memory into f19
fnmsub.d f21, f29, f14, f19, dyn # perform operation
fnmsub.d f21, f29, f14, f19, rdn # perform operation
fnmsub.d f21, f29, f14, f19, rmm # perform operation
fnmsub.d f21, f29, f14, f19, rne # perform operation
fnmsub.d f21, f29, f14, f19, rtz # perform operation
fnmsub.d f21, f29, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f29, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f29, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f29, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f29, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f29, f14, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xa6e895993737426c)
li x22, 0x21d1aa79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
li x3, 0xa8889c06 # load x3 with 32 MSBs 0x00000000a8889c06
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a8889c06
sw x3, 0(x2) # store x3 (0xa8889c06) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000a8889c06 from memory into f7
fnmsub.d f22, f17, f21, f7, dyn # perform operation
fnmsub.d f22, f17, f21, f7, rdn # perform operation
fnmsub.d f22, f17, f21, f7, rmm # perform operation
fnmsub.d f22, f17, f21, f7, rne # perform operation
fnmsub.d f22, f17, f21, f7, rtz # perform operation
fnmsub.d f22, f17, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f17, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f17, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f17, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f17, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f17, f21, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
li x2, 0x918204fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000001 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
li x3, 0x41f6c7c7 # load x3 with 32 MSBs 0x0000000041f6c7c7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000041f6c7c7
sw x3, 0(x2) # store x3 (0x41f6c7c7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000041f6c7c7 from memory into f25
fnmsub.d f2, f5, f24, f25, dyn # perform operation
fnmsub.d f2, f5, f24, f25, rdn # perform operation
fnmsub.d f2, f5, f24, f25, rmm # perform operation
fnmsub.d f2, f5, f24, f25, rne # perform operation
fnmsub.d f2, f5, f24, f25, rtz # perform operation
fnmsub.d f2, f5, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f5, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f5, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f5, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f5, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f5, f24, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000000)
li x22, 0xdfdb1184 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
li x3, 0x8188b0fb # load x3 with 32 MSBs 0x000000008188b0fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008188b0fb
sw x3, 0(x2) # store x3 (0x8188b0fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000008188b0fb from memory into f23
fnmsub.d f22, f19, f27, f23, dyn # perform operation
fnmsub.d f22, f19, f27, f23, rdn # perform operation
fnmsub.d f22, f19, f27, f23, rmm # perform operation
fnmsub.d f22, f19, f27, f23, rne # perform operation
fnmsub.d f22, f19, f27, f23, rtz # perform operation
fnmsub.d f22, f19, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f19, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f19, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f19, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f19, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f19, f27, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff0000000000000)
li x9, 0x240c4a18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0x5f5d72d2 # load x3 with 32 MSBs 0x000000005f5d72d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005f5d72d2
sw x3, 0(x2) # store x3 (0x5f5d72d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000005f5d72d2 from memory into f24
fnmsub.d f9, f31, f15, f24, dyn # perform operation
fnmsub.d f9, f31, f15, f24, rdn # perform operation
fnmsub.d f9, f31, f15, f24, rmm # perform operation
fnmsub.d f9, f31, f15, f24, rne # perform operation
fnmsub.d f9, f31, f15, f24, rtz # perform operation
fnmsub.d f9, f31, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f31, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f31, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f31, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f31, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f31, f15, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff0000000000000)
li x27, 0xfb60b373 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
li x3, 0xc7bcc128 # load x3 with 32 MSBs 0x00000000c7bcc128
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c7bcc128
sw x3, 0(x2) # store x3 (0xc7bcc128) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000c7bcc128 from memory into f2
fnmsub.d f27, f29, f4, f2, dyn # perform operation
fnmsub.d f27, f29, f4, f2, rdn # perform operation
fnmsub.d f27, f29, f4, f2, rmm # perform operation
fnmsub.d f27, f29, f4, f2, rne # perform operation
fnmsub.d f27, f29, f4, f2, rtz # perform operation
fnmsub.d f27, f29, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f29, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f29, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f29, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f29, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f29, f4, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff8000000000000)
li x11, 0x3831b386 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
li x3, 0xcb3026f5 # load x3 with 32 MSBs 0x00000000cb3026f5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cb3026f5
sw x3, 0(x2) # store x3 (0xcb3026f5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000cb3026f5 from memory into f19
fnmsub.d f11, f4, f20, f19, dyn # perform operation
fnmsub.d f11, f4, f20, f19, rdn # perform operation
fnmsub.d f11, f4, f20, f19, rmm # perform operation
fnmsub.d f11, f4, f20, f19, rne # perform operation
fnmsub.d f11, f4, f20, f19, rtz # perform operation
fnmsub.d f11, f4, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f4, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f4, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f4, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f4, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f4, f20, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff8000000000000)
li x18, 0xb2c095f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
li x3, 0xd6a6462b # load x3 with 32 MSBs 0x00000000d6a6462b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d6a6462b
sw x3, 0(x2) # store x3 (0xd6a6462b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000d6a6462b from memory into f26
fnmsub.d f18, f17, f14, f26, dyn # perform operation
fnmsub.d f18, f17, f14, f26, rdn # perform operation
fnmsub.d f18, f17, f14, f26, rmm # perform operation
fnmsub.d f18, f17, f14, f26, rne # perform operation
fnmsub.d f18, f17, f14, f26, rtz # perform operation
fnmsub.d f18, f17, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f17, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f17, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f17, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f17, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f17, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x4000000000000000)
li x8, 0xe54386ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
li x3, 0xd0374492 # load x3 with 32 MSBs 0x00000000d0374492
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0374492
sw x3, 0(x2) # store x3 (0xd0374492) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000d0374492 from memory into f18
fnmsub.d f8, f3, f24, f18, dyn # perform operation
fnmsub.d f8, f3, f24, f18, rdn # perform operation
fnmsub.d f8, f3, f24, f18, rmm # perform operation
fnmsub.d f8, f3, f24, f18, rne # perform operation
fnmsub.d f8, f3, f24, f18, rtz # perform operation
fnmsub.d f8, f3, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f3, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f3, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f3, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f3, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f3, f24, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc000000000000000)
li x21, 0xecc72b7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0x77dac26a # load x3 with 32 MSBs 0x0000000077dac26a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000077dac26a
sw x3, 0(x2) # store x3 (0x77dac26a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000077dac26a from memory into f25
fnmsub.d f21, f6, f30, f25, dyn # perform operation
fnmsub.d f21, f6, f30, f25, rdn # perform operation
fnmsub.d f21, f6, f30, f25, rmm # perform operation
fnmsub.d f21, f6, f30, f25, rne # perform operation
fnmsub.d f21, f6, f30, f25, rtz # perform operation
fnmsub.d f21, f6, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f6, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f6, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f6, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f6, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f6, f30, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x10000000000000)
li x1, 0x680c833a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0xbaf3c562 # load x3 with 32 MSBs 0x00000000baf3c562
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000baf3c562
sw x3, 0(x2) # store x3 (0xbaf3c562) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000baf3c562 from memory into f13
fnmsub.d f1, f8, f21, f13, dyn # perform operation
fnmsub.d f1, f8, f21, f13, rdn # perform operation
fnmsub.d f1, f8, f21, f13, rmm # perform operation
fnmsub.d f1, f8, f21, f13, rne # perform operation
fnmsub.d f1, f8, f21, f13, rtz # perform operation
fnmsub.d f1, f8, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f8, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f8, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f8, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f8, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f8, f21, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8010000000000000)
li x20, 0x7ecb30d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
li x3, 0x03e92e55 # load x3 with 32 MSBs 0x0000000003e92e55
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000003e92e55
sw x3, 0(x2) # store x3 (0x03e92e55) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000003e92e55 from memory into f25
fnmsub.d f20, f22, f2, f25, dyn # perform operation
fnmsub.d f20, f22, f2, f25, rdn # perform operation
fnmsub.d f20, f22, f2, f25, rmm # perform operation
fnmsub.d f20, f22, f2, f25, rne # perform operation
fnmsub.d f20, f22, f2, f25, rtz # perform operation
fnmsub.d f20, f22, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f22, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f22, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f22, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f22, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f22, f2, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fefffffffffffff)
li x6, 0x44727283 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0x4cc3f9fd # load x3 with 32 MSBs 0x000000004cc3f9fd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004cc3f9fd
sw x3, 0(x2) # store x3 (0x4cc3f9fd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000004cc3f9fd from memory into f8
fnmsub.d f6, f28, f17, f8, dyn # perform operation
fnmsub.d f6, f28, f17, f8, rdn # perform operation
fnmsub.d f6, f28, f17, f8, rmm # perform operation
fnmsub.d f6, f28, f17, f8, rne # perform operation
fnmsub.d f6, f28, f17, f8, rtz # perform operation
fnmsub.d f6, f28, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f28, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f28, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f28, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f28, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f28, f17, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffefffffffffffff)
li x3, 0x781bd166 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
li x3, 0xc03e4821 # load x3 with 32 MSBs 0x00000000c03e4821
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c03e4821
sw x3, 0(x2) # store x3 (0xc03e4821) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000c03e4821 from memory into f19
fnmsub.d f3, f31, f5, f19, dyn # perform operation
fnmsub.d f3, f31, f5, f19, rdn # perform operation
fnmsub.d f3, f31, f5, f19, rmm # perform operation
fnmsub.d f3, f31, f5, f19, rne # perform operation
fnmsub.d f3, f31, f5, f19, rtz # perform operation
fnmsub.d f3, f31, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f31, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f31, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f31, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f31, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f31, f5, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfffffffffffff)
li x7, 0x1a48fdf1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0xaaeb5cb2 # load x3 with 32 MSBs 0x00000000aaeb5cb2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aaeb5cb2
sw x3, 0(x2) # store x3 (0xaaeb5cb2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000aaeb5cb2 from memory into f31
fnmsub.d f7, f16, f30, f31, dyn # perform operation
fnmsub.d f7, f16, f30, f31, rdn # perform operation
fnmsub.d f7, f16, f30, f31, rmm # perform operation
fnmsub.d f7, f16, f30, f31, rne # perform operation
fnmsub.d f7, f16, f30, f31, rtz # perform operation
fnmsub.d f7, f16, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f16, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f16, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f16, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f16, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f16, f30, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800fffffffffffff)
li x5, 0x5d4a5fa8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
li x3, 0xb2938f52 # load x3 with 32 MSBs 0x00000000b2938f52
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2938f52
sw x3, 0(x2) # store x3 (0xb2938f52) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000b2938f52 from memory into f11
fnmsub.d f5, f3, f7, f11, dyn # perform operation
fnmsub.d f5, f3, f7, f11, rdn # perform operation
fnmsub.d f5, f3, f7, f11, rmm # perform operation
fnmsub.d f5, f3, f7, f11, rne # perform operation
fnmsub.d f5, f3, f7, f11, rtz # perform operation
fnmsub.d f5, f3, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f3, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f3, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f3, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f3, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f3, f7, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000)
li x17, 0x31745e81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
li x3, 0x5d0f604a # load x3 with 32 MSBs 0x000000005d0f604a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d0f604a
sw x3, 0(x2) # store x3 (0x5d0f604a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000005d0f604a from memory into f9
fnmsub.d f17, f13, f29, f9, dyn # perform operation
fnmsub.d f17, f13, f29, f9, rdn # perform operation
fnmsub.d f17, f13, f29, f9, rmm # perform operation
fnmsub.d f17, f13, f29, f9, rne # perform operation
fnmsub.d f17, f13, f29, f9, rtz # perform operation
fnmsub.d f17, f13, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f13, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f13, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f13, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f13, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f13, f29, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8008000000000000)
li x17, 0xadb3ccef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
li x3, 0x376bec9e # load x3 with 32 MSBs 0x00000000376bec9e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000376bec9e
sw x3, 0(x2) # store x3 (0x376bec9e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000376bec9e from memory into f25
fnmsub.d f17, f3, f27, f25, dyn # perform operation
fnmsub.d f17, f3, f27, f25, rdn # perform operation
fnmsub.d f17, f3, f27, f25, rmm # perform operation
fnmsub.d f17, f3, f27, f25, rne # perform operation
fnmsub.d f17, f3, f27, f25, rtz # perform operation
fnmsub.d f17, f3, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f3, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f3, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f3, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f3, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f3, f27, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
li x6, 0xbd3517f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
li x3, 0xe33b378a # load x3 with 32 MSBs 0x00000000e33b378a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e33b378a
sw x3, 0(x2) # store x3 (0xe33b378a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000e33b378a from memory into f29
fnmsub.d f6, f22, f18, f29, dyn # perform operation
fnmsub.d f6, f22, f18, f29, rdn # perform operation
fnmsub.d f6, f22, f18, f29, rmm # perform operation
fnmsub.d f6, f22, f18, f29, rne # perform operation
fnmsub.d f6, f22, f18, f29, rtz # perform operation
fnmsub.d f6, f22, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f22, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f22, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f22, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f22, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f22, f18, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000001)
li x9, 0xa013a386 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
li x3, 0x7d1eb8d0 # load x3 with 32 MSBs 0x000000007d1eb8d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007d1eb8d0
sw x3, 0(x2) # store x3 (0x7d1eb8d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000007d1eb8d0 from memory into f7
fnmsub.d f9, f11, f27, f7, dyn # perform operation
fnmsub.d f9, f11, f27, f7, rdn # perform operation
fnmsub.d f9, f11, f27, f7, rmm # perform operation
fnmsub.d f9, f11, f27, f7, rne # perform operation
fnmsub.d f9, f11, f27, f7, rtz # perform operation
fnmsub.d f9, f11, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f11, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f11, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f11, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f11, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f11, f27, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000000)
li x10, 0x7e0db8f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
li x3, 0x75b54a14 # load x3 with 32 MSBs 0x0000000075b54a14
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075b54a14
sw x3, 0(x2) # store x3 (0x75b54a14) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000075b54a14 from memory into f9
fnmsub.d f10, f27, f17, f9, dyn # perform operation
fnmsub.d f10, f27, f17, f9, rdn # perform operation
fnmsub.d f10, f27, f17, f9, rmm # perform operation
fnmsub.d f10, f27, f17, f9, rne # perform operation
fnmsub.d f10, f27, f17, f9, rtz # perform operation
fnmsub.d f10, f27, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f27, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f27, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f27, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f27, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f27, f17, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfff0000000000000)
li x19, 0x7c447027 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xfff0000000000000 from memory into f4
li x3, 0x57afdd13 # load x3 with 32 MSBs 0x0000000057afdd13
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000057afdd13
sw x3, 0(x2) # store x3 (0x57afdd13) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000057afdd13 from memory into f1
fnmsub.d f19, f10, f4, f1, dyn # perform operation
fnmsub.d f19, f10, f4, f1, rdn # perform operation
fnmsub.d f19, f10, f4, f1, rmm # perform operation
fnmsub.d f19, f10, f4, f1, rne # perform operation
fnmsub.d f19, f10, f4, f1, rtz # perform operation
fnmsub.d f19, f10, f4, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f10, f4, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f10, f4, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f10, f4, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f10, f4, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f10, f4, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff8000000000000)
li x15, 0xf94606ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
li x3, 0x81f572ec # load x3 with 32 MSBs 0x0000000081f572ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000081f572ec
sw x3, 0(x2) # store x3 (0x81f572ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000081f572ec from memory into f12
fnmsub.d f15, f6, f18, f12, dyn # perform operation
fnmsub.d f15, f6, f18, f12, rdn # perform operation
fnmsub.d f15, f6, f18, f12, rmm # perform operation
fnmsub.d f15, f6, f18, f12, rne # perform operation
fnmsub.d f15, f6, f18, f12, rtz # perform operation
fnmsub.d f15, f6, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f6, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f6, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f6, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f6, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f6, f18, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffffffffffff)
li x19, 0x51c469e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
li x3, 0x1f643456 # load x3 with 32 MSBs 0x000000001f643456
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001f643456
sw x3, 0(x2) # store x3 (0x1f643456) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000001f643456 from memory into f14
fnmsub.d f19, f11, f2, f14, dyn # perform operation
fnmsub.d f19, f11, f2, f14, rdn # perform operation
fnmsub.d f19, f11, f2, f14, rmm # perform operation
fnmsub.d f19, f11, f2, f14, rne # perform operation
fnmsub.d f19, f11, f2, f14, rtz # perform operation
fnmsub.d f19, f11, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f11, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f11, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f11, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f11, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f11, f2, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000001)
li x10, 0x8f92e122 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000001 from memory into f20
li x3, 0xbb25dcd4 # load x3 with 32 MSBs 0x00000000bb25dcd4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb25dcd4
sw x3, 0(x2) # store x3 (0xbb25dcd4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000bb25dcd4 from memory into f23
fnmsub.d f10, f3, f20, f23, dyn # perform operation
fnmsub.d f10, f3, f20, f23, rdn # perform operation
fnmsub.d f10, f3, f20, f23, rmm # perform operation
fnmsub.d f10, f3, f20, f23, rne # perform operation
fnmsub.d f10, f3, f20, f23, rtz # perform operation
fnmsub.d f10, f3, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f3, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f3, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f3, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f3, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f3, f20, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff7ffffffffffff)
li x4, 0xc7ce0a9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
li x3, 0x7523d6cc # load x3 with 32 MSBs 0x000000007523d6cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007523d6cc
sw x3, 0(x2) # store x3 (0x7523d6cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000007523d6cc from memory into f19
fnmsub.d f4, f21, f26, f19, dyn # perform operation
fnmsub.d f4, f21, f26, f19, rdn # perform operation
fnmsub.d f4, f21, f26, f19, rmm # perform operation
fnmsub.d f4, f21, f26, f19, rne # perform operation
fnmsub.d f4, f21, f26, f19, rtz # perform operation
fnmsub.d f4, f21, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f21, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f21, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f21, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f21, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f21, f26, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x5a392534a57711ad)
li x8, 0xf647ae5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
li x3, 0x3cdb4359 # load x3 with 32 MSBs 0x000000003cdb4359
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003cdb4359
sw x3, 0(x2) # store x3 (0x3cdb4359) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000003cdb4359 from memory into f27
fnmsub.d f8, f18, f9, f27, dyn # perform operation
fnmsub.d f8, f18, f9, f27, rdn # perform operation
fnmsub.d f8, f18, f9, f27, rmm # perform operation
fnmsub.d f8, f18, f9, f27, rne # perform operation
fnmsub.d f8, f18, f9, f27, rtz # perform operation
fnmsub.d f8, f18, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f18, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f18, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f18, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f18, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f18, f9, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xa6e895993737426c)
li x15, 0x3d247399 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
li x3, 0x761c6034 # load x3 with 32 MSBs 0x00000000761c6034
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000761c6034
sw x3, 0(x2) # store x3 (0x761c6034) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000761c6034 from memory into f17
fnmsub.d f15, f25, f5, f17, dyn # perform operation
fnmsub.d f15, f25, f5, f17, rdn # perform operation
fnmsub.d f15, f25, f5, f17, rmm # perform operation
fnmsub.d f15, f25, f5, f17, rne # perform operation
fnmsub.d f15, f25, f5, f17, rtz # perform operation
fnmsub.d f15, f25, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f25, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f25, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f25, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f25, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f25, f5, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x0)
li x6, 0x3b3e838a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
li x3, 0x56b421a0 # load x3 with 32 MSBs 0x0000000056b421a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000056b421a0
sw x3, 0(x2) # store x3 (0x56b421a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000056b421a0 from memory into f18
fnmsub.d f6, f19, f7, f18, dyn # perform operation
fnmsub.d f6, f19, f7, f18, rdn # perform operation
fnmsub.d f6, f19, f7, f18, rmm # perform operation
fnmsub.d f6, f19, f7, f18, rne # perform operation
fnmsub.d f6, f19, f7, f18, rtz # perform operation
fnmsub.d f6, f19, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f19, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f19, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f19, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f19, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f19, f7, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000000)
li x15, 0x3de91dc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
li x3, 0x4020e832 # load x3 with 32 MSBs 0x000000004020e832
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004020e832
sw x3, 0(x2) # store x3 (0x4020e832) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000004020e832 from memory into f5
fnmsub.d f15, f21, f9, f5, dyn # perform operation
fnmsub.d f15, f21, f9, f5, rdn # perform operation
fnmsub.d f15, f21, f9, f5, rmm # perform operation
fnmsub.d f15, f21, f9, f5, rne # perform operation
fnmsub.d f15, f21, f9, f5, rtz # perform operation
fnmsub.d f15, f21, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f21, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f21, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f21, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f21, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f21, f9, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff0000000000000)
li x25, 0x63fa4759 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
li x3, 0xcb462c2c # load x3 with 32 MSBs 0x00000000cb462c2c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cb462c2c
sw x3, 0(x2) # store x3 (0xcb462c2c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000cb462c2c from memory into f23
fnmsub.d f25, f26, f14, f23, dyn # perform operation
fnmsub.d f25, f26, f14, f23, rdn # perform operation
fnmsub.d f25, f26, f14, f23, rmm # perform operation
fnmsub.d f25, f26, f14, f23, rne # perform operation
fnmsub.d f25, f26, f14, f23, rtz # perform operation
fnmsub.d f25, f26, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f26, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f26, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f26, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f26, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f26, f14, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff0000000000000)
li x31, 0xf6f88959 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0x43530afa # load x3 with 32 MSBs 0x0000000043530afa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000043530afa
sw x3, 0(x2) # store x3 (0x43530afa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000043530afa from memory into f30
fnmsub.d f31, f21, f11, f30, dyn # perform operation
fnmsub.d f31, f21, f11, f30, rdn # perform operation
fnmsub.d f31, f21, f11, f30, rmm # perform operation
fnmsub.d f31, f21, f11, f30, rne # perform operation
fnmsub.d f31, f21, f11, f30, rtz # perform operation
fnmsub.d f31, f21, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f21, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f21, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f21, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f21, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f21, f11, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff8000000000000)
li x18, 0xf8a4ef88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
li x3, 0x08406466 # load x3 with 32 MSBs 0x0000000008406466
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000008406466
sw x3, 0(x2) # store x3 (0x08406466) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000008406466 from memory into f4
fnmsub.d f18, f29, f22, f4, dyn # perform operation
fnmsub.d f18, f29, f22, f4, rdn # perform operation
fnmsub.d f18, f29, f22, f4, rmm # perform operation
fnmsub.d f18, f29, f22, f4, rne # perform operation
fnmsub.d f18, f29, f22, f4, rtz # perform operation
fnmsub.d f18, f29, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f29, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f29, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f29, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f29, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f29, f22, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff8000000000000)
li x5, 0x18e7dc46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
li x3, 0x32c771c1 # load x3 with 32 MSBs 0x0000000032c771c1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000032c771c1
sw x3, 0(x2) # store x3 (0x32c771c1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000032c771c1 from memory into f23
fnmsub.d f5, f30, f13, f23, dyn # perform operation
fnmsub.d f5, f30, f13, f23, rdn # perform operation
fnmsub.d f5, f30, f13, f23, rmm # perform operation
fnmsub.d f5, f30, f13, f23, rne # perform operation
fnmsub.d f5, f30, f13, f23, rtz # perform operation
fnmsub.d f5, f30, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f30, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f30, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f30, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f30, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f30, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x4000000000000000)
li x25, 0x6c22bc2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
li x3, 0xaee0992c # load x3 with 32 MSBs 0x00000000aee0992c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aee0992c
sw x3, 0(x2) # store x3 (0xaee0992c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000aee0992c from memory into f24
fnmsub.d f25, f2, f21, f24, dyn # perform operation
fnmsub.d f25, f2, f21, f24, rdn # perform operation
fnmsub.d f25, f2, f21, f24, rmm # perform operation
fnmsub.d f25, f2, f21, f24, rne # perform operation
fnmsub.d f25, f2, f21, f24, rtz # perform operation
fnmsub.d f25, f2, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f2, f21, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xc000000000000000)
li x31, 0x6a8dd48a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xc000000000000000 from memory into f14
li x3, 0xb737d0b9 # load x3 with 32 MSBs 0x00000000b737d0b9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b737d0b9
sw x3, 0(x2) # store x3 (0xb737d0b9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000b737d0b9 from memory into f6
fnmsub.d f31, f30, f14, f6, dyn # perform operation
fnmsub.d f31, f30, f14, f6, rdn # perform operation
fnmsub.d f31, f30, f14, f6, rmm # perform operation
fnmsub.d f31, f30, f14, f6, rne # perform operation
fnmsub.d f31, f30, f14, f6, rtz # perform operation
fnmsub.d f31, f30, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f30, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f30, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f30, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f30, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f30, f14, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x10000000000000)
li x15, 0x61a21ce1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
li x3, 0xc9147300 # load x3 with 32 MSBs 0x00000000c9147300
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c9147300
sw x3, 0(x2) # store x3 (0xc9147300) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000c9147300 from memory into f13
fnmsub.d f15, f8, f19, f13, dyn # perform operation
fnmsub.d f15, f8, f19, f13, rdn # perform operation
fnmsub.d f15, f8, f19, f13, rmm # perform operation
fnmsub.d f15, f8, f19, f13, rne # perform operation
fnmsub.d f15, f8, f19, f13, rtz # perform operation
fnmsub.d f15, f8, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f8, f19, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8010000000000000)
li x20, 0x8c8e4048 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
li x3, 0x0531fcb7 # load x3 with 32 MSBs 0x000000000531fcb7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000531fcb7
sw x3, 0(x2) # store x3 (0x0531fcb7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000000531fcb7 from memory into f17
fnmsub.d f20, f26, f24, f17, dyn # perform operation
fnmsub.d f20, f26, f24, f17, rdn # perform operation
fnmsub.d f20, f26, f24, f17, rmm # perform operation
fnmsub.d f20, f26, f24, f17, rne # perform operation
fnmsub.d f20, f26, f24, f17, rtz # perform operation
fnmsub.d f20, f26, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f26, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f26, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f26, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f26, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f26, f24, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fefffffffffffff)
li x9, 0x543fc893 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
li x3, 0x89f71f01 # load x3 with 32 MSBs 0x0000000089f71f01
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000089f71f01
sw x3, 0(x2) # store x3 (0x89f71f01) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000089f71f01 from memory into f22
fnmsub.d f9, f11, f16, f22, dyn # perform operation
fnmsub.d f9, f11, f16, f22, rdn # perform operation
fnmsub.d f9, f11, f16, f22, rmm # perform operation
fnmsub.d f9, f11, f16, f22, rne # perform operation
fnmsub.d f9, f11, f16, f22, rtz # perform operation
fnmsub.d f9, f11, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f11, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f11, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f11, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f11, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f11, f16, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xffefffffffffffff)
li x27, 0x4b1280f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
li x3, 0x2bf42e70 # load x3 with 32 MSBs 0x000000002bf42e70
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002bf42e70
sw x3, 0(x2) # store x3 (0x2bf42e70) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000002bf42e70 from memory into f19
fnmsub.d f27, f11, f15, f19, dyn # perform operation
fnmsub.d f27, f11, f15, f19, rdn # perform operation
fnmsub.d f27, f11, f15, f19, rmm # perform operation
fnmsub.d f27, f11, f15, f19, rne # perform operation
fnmsub.d f27, f11, f15, f19, rtz # perform operation
fnmsub.d f27, f11, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f11, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f11, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f11, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f11, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f11, f15, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfffffffffffff)
li x18, 0x71c896ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
li x3, 0x3e7a16d5 # load x3 with 32 MSBs 0x000000003e7a16d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e7a16d5
sw x3, 0(x2) # store x3 (0x3e7a16d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000003e7a16d5 from memory into f4
fnmsub.d f18, f15, f27, f4, dyn # perform operation
fnmsub.d f18, f15, f27, f4, rdn # perform operation
fnmsub.d f18, f15, f27, f4, rmm # perform operation
fnmsub.d f18, f15, f27, f4, rne # perform operation
fnmsub.d f18, f15, f27, f4, rtz # perform operation
fnmsub.d f18, f15, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f15, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f15, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f15, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f15, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f15, f27, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x800fffffffffffff)
li x21, 0x4e271a33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
li x3, 0x71b8a9a2 # load x3 with 32 MSBs 0x0000000071b8a9a2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000071b8a9a2
sw x3, 0(x2) # store x3 (0x71b8a9a2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000071b8a9a2 from memory into f2
fnmsub.d f21, f17, f7, f2, dyn # perform operation
fnmsub.d f21, f17, f7, f2, rdn # perform operation
fnmsub.d f21, f17, f7, f2, rmm # perform operation
fnmsub.d f21, f17, f7, f2, rne # perform operation
fnmsub.d f21, f17, f7, f2, rtz # perform operation
fnmsub.d f21, f17, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f17, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f17, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f17, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f17, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f17, f7, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000)
li x31, 0x37fe8c04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000001 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
li x3, 0xb2d97c9c # load x3 with 32 MSBs 0x00000000b2d97c9c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2d97c9c
sw x3, 0(x2) # store x3 (0xb2d97c9c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000b2d97c9c from memory into f17
fnmsub.d f31, f5, f24, f17, dyn # perform operation
fnmsub.d f31, f5, f24, f17, rdn # perform operation
fnmsub.d f31, f5, f24, f17, rmm # perform operation
fnmsub.d f31, f5, f24, f17, rne # perform operation
fnmsub.d f31, f5, f24, f17, rtz # perform operation
fnmsub.d f31, f5, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f5, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f5, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f5, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f5, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f5, f24, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8008000000000000)
li x3, 0xb7e16f88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
li x3, 0x01fa2478 # load x3 with 32 MSBs 0x0000000001fa2478
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000001fa2478
sw x3, 0(x2) # store x3 (0x01fa2478) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000001fa2478 from memory into f19
fnmsub.d f3, f7, f11, f19, dyn # perform operation
fnmsub.d f3, f7, f11, f19, rdn # perform operation
fnmsub.d f3, f7, f11, f19, rmm # perform operation
fnmsub.d f3, f7, f11, f19, rne # perform operation
fnmsub.d f3, f7, f11, f19, rtz # perform operation
fnmsub.d f3, f7, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f7, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f7, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f7, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f7, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f7, f11, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x1)
li x2, 0xe0bee5c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000001 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
li x3, 0xb3ab44e4 # load x3 with 32 MSBs 0x00000000b3ab44e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3ab44e4
sw x3, 0(x2) # store x3 (0xb3ab44e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000b3ab44e4 from memory into f28
fnmsub.d f2, f14, f8, f28, dyn # perform operation
fnmsub.d f2, f14, f8, f28, rdn # perform operation
fnmsub.d f2, f14, f8, f28, rmm # perform operation
fnmsub.d f2, f14, f8, f28, rne # perform operation
fnmsub.d f2, f14, f8, f28, rtz # perform operation
fnmsub.d f2, f14, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f14, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f14, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f14, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f14, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f14, f8, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000001)
li x27, 0x1b76167a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
li x3, 0x962aad4a # load x3 with 32 MSBs 0x00000000962aad4a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000962aad4a
sw x3, 0(x2) # store x3 (0x962aad4a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000962aad4a from memory into f13
fnmsub.d f27, f26, f11, f13, dyn # perform operation
fnmsub.d f27, f26, f11, f13, rdn # perform operation
fnmsub.d f27, f26, f11, f13, rmm # perform operation
fnmsub.d f27, f26, f11, f13, rne # perform operation
fnmsub.d f27, f26, f11, f13, rtz # perform operation
fnmsub.d f27, f26, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f26, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f26, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f26, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f26, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f26, f11, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000000)
li x18, 0xd84e68b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
li x3, 0xced39263 # load x3 with 32 MSBs 0x00000000ced39263
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ced39263
sw x3, 0(x2) # store x3 (0xced39263) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000ced39263 from memory into f31
fnmsub.d f18, f2, f21, f31, dyn # perform operation
fnmsub.d f18, f2, f21, f31, rdn # perform operation
fnmsub.d f18, f2, f21, f31, rmm # perform operation
fnmsub.d f18, f2, f21, f31, rne # perform operation
fnmsub.d f18, f2, f21, f31, rtz # perform operation
fnmsub.d f18, f2, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f2, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f2, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f2, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f2, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f2, f21, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfff0000000000000)
li x31, 0x72ae506c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0xda58ec3f # load x3 with 32 MSBs 0x00000000da58ec3f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da58ec3f
sw x3, 0(x2) # store x3 (0xda58ec3f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000da58ec3f from memory into f26
fnmsub.d f31, f18, f1, f26, dyn # perform operation
fnmsub.d f31, f18, f1, f26, rdn # perform operation
fnmsub.d f31, f18, f1, f26, rmm # perform operation
fnmsub.d f31, f18, f1, f26, rne # perform operation
fnmsub.d f31, f18, f1, f26, rtz # perform operation
fnmsub.d f31, f18, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f18, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f18, f1, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff8000000000000)
li x29, 0x2cc2375a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff8000000000000 from memory into f9
li x3, 0x31c2ca6e # load x3 with 32 MSBs 0x0000000031c2ca6e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031c2ca6e
sw x3, 0(x2) # store x3 (0x31c2ca6e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000031c2ca6e from memory into f21
fnmsub.d f29, f3, f9, f21, dyn # perform operation
fnmsub.d f29, f3, f9, f21, rdn # perform operation
fnmsub.d f29, f3, f9, f21, rmm # perform operation
fnmsub.d f29, f3, f9, f21, rne # perform operation
fnmsub.d f29, f3, f9, f21, rtz # perform operation
fnmsub.d f29, f3, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f3, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f3, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f3, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f3, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f3, f9, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fffffffffffffff)
li x12, 0xbae28bfc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
li x3, 0x7395bb00 # load x3 with 32 MSBs 0x000000007395bb00
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007395bb00
sw x3, 0(x2) # store x3 (0x7395bb00) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000007395bb00 from memory into f25
fnmsub.d f12, f31, f26, f25, dyn # perform operation
fnmsub.d f12, f31, f26, f25, rdn # perform operation
fnmsub.d f12, f31, f26, f25, rmm # perform operation
fnmsub.d f12, f31, f26, f25, rne # perform operation
fnmsub.d f12, f31, f26, f25, rtz # perform operation
fnmsub.d f12, f31, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f31, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f31, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f31, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f31, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f31, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000001)
li x20, 0xa60d220d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000001 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
li x3, 0x90a1fc56 # load x3 with 32 MSBs 0x0000000090a1fc56
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000090a1fc56
sw x3, 0(x2) # store x3 (0x90a1fc56) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000090a1fc56 from memory into f11
fnmsub.d f20, f5, f6, f11, dyn # perform operation
fnmsub.d f20, f5, f6, f11, rdn # perform operation
fnmsub.d f20, f5, f6, f11, rmm # perform operation
fnmsub.d f20, f5, f6, f11, rne # perform operation
fnmsub.d f20, f5, f6, f11, rtz # perform operation
fnmsub.d f20, f5, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f5, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f5, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f5, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f5, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f5, f6, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff7ffffffffffff)
li x10, 0xbd6d565d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
li x3, 0x3d53dde0 # load x3 with 32 MSBs 0x000000003d53dde0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d53dde0
sw x3, 0(x2) # store x3 (0x3d53dde0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000003d53dde0 from memory into f27
fnmsub.d f10, f4, f13, f27, dyn # perform operation
fnmsub.d f10, f4, f13, f27, rdn # perform operation
fnmsub.d f10, f4, f13, f27, rmm # perform operation
fnmsub.d f10, f4, f13, f27, rne # perform operation
fnmsub.d f10, f4, f13, f27, rtz # perform operation
fnmsub.d f10, f4, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f4, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f4, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f4, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f4, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f4, f13, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x5a392534a57711ad)
li x25, 0xc7db8909 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
li x3, 0x1e0806a1 # load x3 with 32 MSBs 0x000000001e0806a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e0806a1
sw x3, 0(x2) # store x3 (0x1e0806a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000001e0806a1 from memory into f10
fnmsub.d f25, f22, f5, f10, dyn # perform operation
fnmsub.d f25, f22, f5, f10, rdn # perform operation
fnmsub.d f25, f22, f5, f10, rmm # perform operation
fnmsub.d f25, f22, f5, f10, rne # perform operation
fnmsub.d f25, f22, f5, f10, rtz # perform operation
fnmsub.d f25, f22, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f22, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f22, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f22, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f22, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f22, f5, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xa6e895993737426c)
li x28, 0xa619dfbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
li x3, 0x30641031 # load x3 with 32 MSBs 0x0000000030641031
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000030641031
sw x3, 0(x2) # store x3 (0x30641031) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000030641031 from memory into f27
fnmsub.d f28, f26, f9, f27, dyn # perform operation
fnmsub.d f28, f26, f9, f27, rdn # perform operation
fnmsub.d f28, f26, f9, f27, rmm # perform operation
fnmsub.d f28, f26, f9, f27, rne # perform operation
fnmsub.d f28, f26, f9, f27, rtz # perform operation
fnmsub.d f28, f26, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f26, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f26, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f26, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f26, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f26, f9, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x0)
li x4, 0x0f0722ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
li x3, 0x94350ec9 # load x3 with 32 MSBs 0x0000000094350ec9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000094350ec9
sw x3, 0(x2) # store x3 (0x94350ec9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000094350ec9 from memory into f17
fnmsub.d f4, f23, f19, f17, dyn # perform operation
fnmsub.d f4, f23, f19, f17, rdn # perform operation
fnmsub.d f4, f23, f19, f17, rmm # perform operation
fnmsub.d f4, f23, f19, f17, rne # perform operation
fnmsub.d f4, f23, f19, f17, rtz # perform operation
fnmsub.d f4, f23, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f23, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f23, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f23, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f23, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f23, f19, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000000)
li x5, 0x6346932f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
li x3, 0x27278807 # load x3 with 32 MSBs 0x0000000027278807
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000027278807
sw x3, 0(x2) # store x3 (0x27278807) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000027278807 from memory into f20
fnmsub.d f5, f29, f13, f20, dyn # perform operation
fnmsub.d f5, f29, f13, f20, rdn # perform operation
fnmsub.d f5, f29, f13, f20, rmm # perform operation
fnmsub.d f5, f29, f13, f20, rne # perform operation
fnmsub.d f5, f29, f13, f20, rtz # perform operation
fnmsub.d f5, f29, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f29, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f29, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f29, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f29, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f29, f13, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff0000000000000)
li x31, 0xa193320d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
li x3, 0x8074bec1 # load x3 with 32 MSBs 0x000000008074bec1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008074bec1
sw x3, 0(x2) # store x3 (0x8074bec1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000008074bec1 from memory into f28
fnmsub.d f31, f24, f27, f28, dyn # perform operation
fnmsub.d f31, f24, f27, f28, rdn # perform operation
fnmsub.d f31, f24, f27, f28, rmm # perform operation
fnmsub.d f31, f24, f27, f28, rne # perform operation
fnmsub.d f31, f24, f27, f28, rtz # perform operation
fnmsub.d f31, f24, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f24, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f24, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f24, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f24, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f24, f27, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff0000000000000)
li x27, 0x43266ae3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0x9cb50a37 # load x3 with 32 MSBs 0x000000009cb50a37
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009cb50a37
sw x3, 0(x2) # store x3 (0x9cb50a37) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000009cb50a37 from memory into f1
fnmsub.d f27, f17, f11, f1, dyn # perform operation
fnmsub.d f27, f17, f11, f1, rdn # perform operation
fnmsub.d f27, f17, f11, f1, rmm # perform operation
fnmsub.d f27, f17, f11, f1, rne # perform operation
fnmsub.d f27, f17, f11, f1, rtz # perform operation
fnmsub.d f27, f17, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f17, f11, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff8000000000000)
li x9, 0x6fcf5c66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
li x3, 0x0c8c59c0 # load x3 with 32 MSBs 0x000000000c8c59c0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c8c59c0
sw x3, 0(x2) # store x3 (0x0c8c59c0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000000c8c59c0 from memory into f7
fnmsub.d f9, f29, f4, f7, dyn # perform operation
fnmsub.d f9, f29, f4, f7, rdn # perform operation
fnmsub.d f9, f29, f4, f7, rmm # perform operation
fnmsub.d f9, f29, f4, f7, rne # perform operation
fnmsub.d f9, f29, f4, f7, rtz # perform operation
fnmsub.d f9, f29, f4, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f29, f4, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f29, f4, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f29, f4, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f29, f4, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f29, f4, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff8000000000000)
li x13, 0xf305bfa5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
li x3, 0xda4aad6d # load x3 with 32 MSBs 0x00000000da4aad6d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da4aad6d
sw x3, 0(x2) # store x3 (0xda4aad6d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000da4aad6d from memory into f7
fnmsub.d f13, f15, f21, f7, dyn # perform operation
fnmsub.d f13, f15, f21, f7, rdn # perform operation
fnmsub.d f13, f15, f21, f7, rmm # perform operation
fnmsub.d f13, f15, f21, f7, rne # perform operation
fnmsub.d f13, f15, f21, f7, rtz # perform operation
fnmsub.d f13, f15, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f15, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f15, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f15, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f15, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f15, f21, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x4000000000000000)
li x13, 0xb1933ad9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
li x3, 0xc5532399 # load x3 with 32 MSBs 0x00000000c5532399
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c5532399
sw x3, 0(x2) # store x3 (0xc5532399) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000c5532399 from memory into f8
fnmsub.d f13, f7, f14, f8, dyn # perform operation
fnmsub.d f13, f7, f14, f8, rdn # perform operation
fnmsub.d f13, f7, f14, f8, rmm # perform operation
fnmsub.d f13, f7, f14, f8, rne # perform operation
fnmsub.d f13, f7, f14, f8, rtz # perform operation
fnmsub.d f13, f7, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f7, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f7, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f7, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f7, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f7, f14, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xc000000000000000)
li x22, 0xe5ca37bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
li x3, 0xc603ebfd # load x3 with 32 MSBs 0x00000000c603ebfd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c603ebfd
sw x3, 0(x2) # store x3 (0xc603ebfd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000c603ebfd from memory into f25
fnmsub.d f22, f9, f29, f25, dyn # perform operation
fnmsub.d f22, f9, f29, f25, rdn # perform operation
fnmsub.d f22, f9, f29, f25, rmm # perform operation
fnmsub.d f22, f9, f29, f25, rne # perform operation
fnmsub.d f22, f9, f29, f25, rtz # perform operation
fnmsub.d f22, f9, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f9, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f9, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f9, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f9, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f9, f29, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x10000000000000)
li x7, 0x8d63fdf9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
li x3, 0xfee3f79c # load x3 with 32 MSBs 0x00000000fee3f79c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fee3f79c
sw x3, 0(x2) # store x3 (0xfee3f79c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000fee3f79c from memory into f6
fnmsub.d f7, f12, f22, f6, dyn # perform operation
fnmsub.d f7, f12, f22, f6, rdn # perform operation
fnmsub.d f7, f12, f22, f6, rmm # perform operation
fnmsub.d f7, f12, f22, f6, rne # perform operation
fnmsub.d f7, f12, f22, f6, rtz # perform operation
fnmsub.d f7, f12, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f12, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f12, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f12, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f12, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f12, f22, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8010000000000000)
li x7, 0x58f39051 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
li x3, 0x739d333a # load x3 with 32 MSBs 0x00000000739d333a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000739d333a
sw x3, 0(x2) # store x3 (0x739d333a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000739d333a from memory into f3
fnmsub.d f7, f1, f29, f3, dyn # perform operation
fnmsub.d f7, f1, f29, f3, rdn # perform operation
fnmsub.d f7, f1, f29, f3, rmm # perform operation
fnmsub.d f7, f1, f29, f3, rne # perform operation
fnmsub.d f7, f1, f29, f3, rtz # perform operation
fnmsub.d f7, f1, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f1, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f1, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f1, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f1, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f1, f29, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fefffffffffffff)
li x3, 0xd4ade0aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
li x3, 0x1244d697 # load x3 with 32 MSBs 0x000000001244d697
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001244d697
sw x3, 0(x2) # store x3 (0x1244d697) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000001244d697 from memory into f30
fnmsub.d f3, f9, f25, f30, dyn # perform operation
fnmsub.d f3, f9, f25, f30, rdn # perform operation
fnmsub.d f3, f9, f25, f30, rmm # perform operation
fnmsub.d f3, f9, f25, f30, rne # perform operation
fnmsub.d f3, f9, f25, f30, rtz # perform operation
fnmsub.d f3, f9, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f9, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f9, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f9, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f9, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f9, f25, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xffefffffffffffff)
li x1, 0xf7290704 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
li x3, 0x88ba39eb # load x3 with 32 MSBs 0x0000000088ba39eb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000088ba39eb
sw x3, 0(x2) # store x3 (0x88ba39eb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000088ba39eb from memory into f30
fnmsub.d f1, f16, f18, f30, dyn # perform operation
fnmsub.d f1, f16, f18, f30, rdn # perform operation
fnmsub.d f1, f16, f18, f30, rmm # perform operation
fnmsub.d f1, f16, f18, f30, rne # perform operation
fnmsub.d f1, f16, f18, f30, rtz # perform operation
fnmsub.d f1, f16, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f16, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f16, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f16, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f16, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f16, f18, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfffffffffffff)
li x7, 0x1e0e3793 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
li x3, 0x729deeb6 # load x3 with 32 MSBs 0x00000000729deeb6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000729deeb6
sw x3, 0(x2) # store x3 (0x729deeb6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000729deeb6 from memory into f18
fnmsub.d f7, f20, f12, f18, dyn # perform operation
fnmsub.d f7, f20, f12, f18, rdn # perform operation
fnmsub.d f7, f20, f12, f18, rmm # perform operation
fnmsub.d f7, f20, f12, f18, rne # perform operation
fnmsub.d f7, f20, f12, f18, rtz # perform operation
fnmsub.d f7, f20, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f20, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f20, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f20, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f20, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f20, f12, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x800fffffffffffff)
li x2, 0x425ef648 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
li x3, 0xe67280ca # load x3 with 32 MSBs 0x00000000e67280ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e67280ca
sw x3, 0(x2) # store x3 (0xe67280ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000e67280ca from memory into f17
fnmsub.d f2, f11, f18, f17, dyn # perform operation
fnmsub.d f2, f11, f18, f17, rdn # perform operation
fnmsub.d f2, f11, f18, f17, rmm # perform operation
fnmsub.d f2, f11, f18, f17, rne # perform operation
fnmsub.d f2, f11, f18, f17, rtz # perform operation
fnmsub.d f2, f11, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f11, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f11, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f11, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f11, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f11, f18, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000)
li x29, 0xbee4d64c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
li x3, 0x8f373b9f # load x3 with 32 MSBs 0x000000008f373b9f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f373b9f
sw x3, 0(x2) # store x3 (0x8f373b9f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000008f373b9f from memory into f18
fnmsub.d f29, f19, f2, f18, dyn # perform operation
fnmsub.d f29, f19, f2, f18, rdn # perform operation
fnmsub.d f29, f19, f2, f18, rmm # perform operation
fnmsub.d f29, f19, f2, f18, rne # perform operation
fnmsub.d f29, f19, f2, f18, rtz # perform operation
fnmsub.d f29, f19, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f19, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f19, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f19, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f19, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f19, f2, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8008000000000000)
li x26, 0xc1d1db39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
li x3, 0x6b1806a7 # load x3 with 32 MSBs 0x000000006b1806a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b1806a7
sw x3, 0(x2) # store x3 (0x6b1806a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000006b1806a7 from memory into f24
fnmsub.d f26, f9, f14, f24, dyn # perform operation
fnmsub.d f26, f9, f14, f24, rdn # perform operation
fnmsub.d f26, f9, f14, f24, rmm # perform operation
fnmsub.d f26, f9, f14, f24, rne # perform operation
fnmsub.d f26, f9, f14, f24, rtz # perform operation
fnmsub.d f26, f9, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f9, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f9, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f9, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f9, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f9, f14, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x1)
li x30, 0xa249c428 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
li x3, 0x838fbead # load x3 with 32 MSBs 0x00000000838fbead
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000838fbead
sw x3, 0(x2) # store x3 (0x838fbead) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000838fbead from memory into f8
fnmsub.d f30, f24, f20, f8, dyn # perform operation
fnmsub.d f30, f24, f20, f8, rdn # perform operation
fnmsub.d f30, f24, f20, f8, rmm # perform operation
fnmsub.d f30, f24, f20, f8, rne # perform operation
fnmsub.d f30, f24, f20, f8, rtz # perform operation
fnmsub.d f30, f24, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f24, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f24, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f24, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f24, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f24, f20, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000001)
li x28, 0x65654e7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
li x3, 0x988d32a5 # load x3 with 32 MSBs 0x00000000988d32a5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000988d32a5
sw x3, 0(x2) # store x3 (0x988d32a5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000988d32a5 from memory into f31
fnmsub.d f28, f20, f9, f31, dyn # perform operation
fnmsub.d f28, f20, f9, f31, rdn # perform operation
fnmsub.d f28, f20, f9, f31, rmm # perform operation
fnmsub.d f28, f20, f9, f31, rne # perform operation
fnmsub.d f28, f20, f9, f31, rtz # perform operation
fnmsub.d f28, f20, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f20, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f20, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f20, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f20, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f20, f9, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000000)
li x13, 0x9acd6da4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
li x3, 0x75af894c # load x3 with 32 MSBs 0x0000000075af894c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075af894c
sw x3, 0(x2) # store x3 (0x75af894c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000075af894c from memory into f17
fnmsub.d f13, f30, f23, f17, dyn # perform operation
fnmsub.d f13, f30, f23, f17, rdn # perform operation
fnmsub.d f13, f30, f23, f17, rmm # perform operation
fnmsub.d f13, f30, f23, f17, rne # perform operation
fnmsub.d f13, f30, f23, f17, rtz # perform operation
fnmsub.d f13, f30, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f30, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f30, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f30, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f30, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f30, f23, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfff0000000000000)
li x9, 0x53ab7560 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
li x3, 0xe7e60759 # load x3 with 32 MSBs 0x00000000e7e60759
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e7e60759
sw x3, 0(x2) # store x3 (0xe7e60759) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000e7e60759 from memory into f8
fnmsub.d f9, f7, f6, f8, dyn # perform operation
fnmsub.d f9, f7, f6, f8, rdn # perform operation
fnmsub.d f9, f7, f6, f8, rmm # perform operation
fnmsub.d f9, f7, f6, f8, rne # perform operation
fnmsub.d f9, f7, f6, f8, rtz # perform operation
fnmsub.d f9, f7, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f7, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f7, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f7, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f7, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f7, f6, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff8000000000000)
li x31, 0x7412f4c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
li x3, 0x47c185d5 # load x3 with 32 MSBs 0x0000000047c185d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000047c185d5
sw x3, 0(x2) # store x3 (0x47c185d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000047c185d5 from memory into f27
fnmsub.d f31, f30, f14, f27, dyn # perform operation
fnmsub.d f31, f30, f14, f27, rdn # perform operation
fnmsub.d f31, f30, f14, f27, rmm # perform operation
fnmsub.d f31, f30, f14, f27, rne # perform operation
fnmsub.d f31, f30, f14, f27, rtz # perform operation
fnmsub.d f31, f30, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f30, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f30, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f30, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f30, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f30, f14, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fffffffffffffff)
li x29, 0x49e0f2c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
li x3, 0x719be1e9 # load x3 with 32 MSBs 0x00000000719be1e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000719be1e9
sw x3, 0(x2) # store x3 (0x719be1e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000719be1e9 from memory into f20
fnmsub.d f29, f6, f28, f20, dyn # perform operation
fnmsub.d f29, f6, f28, f20, rdn # perform operation
fnmsub.d f29, f6, f28, f20, rmm # perform operation
fnmsub.d f29, f6, f28, f20, rne # perform operation
fnmsub.d f29, f6, f28, f20, rtz # perform operation
fnmsub.d f29, f6, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f6, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f6, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f6, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f6, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f6, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000001)
li x29, 0xfa665f5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
li x3, 0x1e361748 # load x3 with 32 MSBs 0x000000001e361748
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e361748
sw x3, 0(x2) # store x3 (0x1e361748) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000001e361748 from memory into f17
fnmsub.d f29, f19, f16, f17, dyn # perform operation
fnmsub.d f29, f19, f16, f17, rdn # perform operation
fnmsub.d f29, f19, f16, f17, rmm # perform operation
fnmsub.d f29, f19, f16, f17, rne # perform operation
fnmsub.d f29, f19, f16, f17, rtz # perform operation
fnmsub.d f29, f19, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f19, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f19, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f19, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f19, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f19, f16, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x30, 0xb2c69c79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
li x3, 0xab8e535a # load x3 with 32 MSBs 0x00000000ab8e535a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ab8e535a
sw x3, 0(x2) # store x3 (0xab8e535a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000ab8e535a from memory into f15
fnmsub.d f30, f29, f2, f15, dyn # perform operation
fnmsub.d f30, f29, f2, f15, rdn # perform operation
fnmsub.d f30, f29, f2, f15, rmm # perform operation
fnmsub.d f30, f29, f2, f15, rne # perform operation
fnmsub.d f30, f29, f2, f15, rtz # perform operation
fnmsub.d f30, f29, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f29, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f29, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f29, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f29, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f29, f2, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x5a392534a57711ad)
li x27, 0x24a1b42a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
li x3, 0xf2f89b15 # load x3 with 32 MSBs 0x00000000f2f89b15
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2f89b15
sw x3, 0(x2) # store x3 (0xf2f89b15) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000f2f89b15 from memory into f6
fnmsub.d f27, f11, f19, f6, dyn # perform operation
fnmsub.d f27, f11, f19, f6, rdn # perform operation
fnmsub.d f27, f11, f19, f6, rmm # perform operation
fnmsub.d f27, f11, f19, f6, rne # perform operation
fnmsub.d f27, f11, f19, f6, rtz # perform operation
fnmsub.d f27, f11, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f11, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f11, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f11, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f11, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f11, f19, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xa6e895993737426c)
li x14, 0x5f8adaf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
li x3, 0x3d85a3a4 # load x3 with 32 MSBs 0x000000003d85a3a4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d85a3a4
sw x3, 0(x2) # store x3 (0x3d85a3a4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000003d85a3a4 from memory into f3
fnmsub.d f14, f25, f10, f3, dyn # perform operation
fnmsub.d f14, f25, f10, f3, rdn # perform operation
fnmsub.d f14, f25, f10, f3, rmm # perform operation
fnmsub.d f14, f25, f10, f3, rne # perform operation
fnmsub.d f14, f25, f10, f3, rtz # perform operation
fnmsub.d f14, f25, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f25, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f25, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f25, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f25, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f25, f10, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x0)
li x8, 0x31b49f10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000000 from memory into f10
li x3, 0xe521fe31 # load x3 with 32 MSBs 0x00000000e521fe31
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e521fe31
sw x3, 0(x2) # store x3 (0xe521fe31) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000e521fe31 from memory into f23
fnmsub.d f8, f3, f10, f23, dyn # perform operation
fnmsub.d f8, f3, f10, f23, rdn # perform operation
fnmsub.d f8, f3, f10, f23, rmm # perform operation
fnmsub.d f8, f3, f10, f23, rne # perform operation
fnmsub.d f8, f3, f10, f23, rtz # perform operation
fnmsub.d f8, f3, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f3, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f3, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f3, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f3, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f3, f10, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000000)
li x23, 0xae6912d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
li x3, 0xa82e59df # load x3 with 32 MSBs 0x00000000a82e59df
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a82e59df
sw x3, 0(x2) # store x3 (0xa82e59df) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000a82e59df from memory into f6
fnmsub.d f23, f10, f20, f6, dyn # perform operation
fnmsub.d f23, f10, f20, f6, rdn # perform operation
fnmsub.d f23, f10, f20, f6, rmm # perform operation
fnmsub.d f23, f10, f20, f6, rne # perform operation
fnmsub.d f23, f10, f20, f6, rtz # perform operation
fnmsub.d f23, f10, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f10, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f10, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f10, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f10, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f10, f20, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff0000000000000)
li x20, 0x5602ad52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0x9f6a4c59 # load x3 with 32 MSBs 0x000000009f6a4c59
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f6a4c59
sw x3, 0(x2) # store x3 (0x9f6a4c59) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000009f6a4c59 from memory into f6
fnmsub.d f20, f3, f17, f6, dyn # perform operation
fnmsub.d f20, f3, f17, f6, rdn # perform operation
fnmsub.d f20, f3, f17, f6, rmm # perform operation
fnmsub.d f20, f3, f17, f6, rne # perform operation
fnmsub.d f20, f3, f17, f6, rtz # perform operation
fnmsub.d f20, f3, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f3, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f3, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f3, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f3, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f3, f17, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff0000000000000)
li x1, 0xcff6f6cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0x09360c8e # load x3 with 32 MSBs 0x0000000009360c8e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000009360c8e
sw x3, 0(x2) # store x3 (0x09360c8e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000009360c8e from memory into f18
fnmsub.d f1, f23, f13, f18, dyn # perform operation
fnmsub.d f1, f23, f13, f18, rdn # perform operation
fnmsub.d f1, f23, f13, f18, rmm # perform operation
fnmsub.d f1, f23, f13, f18, rne # perform operation
fnmsub.d f1, f23, f13, f18, rtz # perform operation
fnmsub.d f1, f23, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f23, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f23, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f23, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f23, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f23, f13, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff8000000000000)
li x28, 0x79e8d8c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
li x3, 0x798d6353 # load x3 with 32 MSBs 0x00000000798d6353
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000798d6353
sw x3, 0(x2) # store x3 (0x798d6353) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000798d6353 from memory into f26
fnmsub.d f28, f7, f23, f26, dyn # perform operation
fnmsub.d f28, f7, f23, f26, rdn # perform operation
fnmsub.d f28, f7, f23, f26, rmm # perform operation
fnmsub.d f28, f7, f23, f26, rne # perform operation
fnmsub.d f28, f7, f23, f26, rtz # perform operation
fnmsub.d f28, f7, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f7, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f7, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f7, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f7, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f7, f23, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff8000000000000)
li x25, 0xe1d42d1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0x61cd160b # load x3 with 32 MSBs 0x0000000061cd160b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000061cd160b
sw x3, 0(x2) # store x3 (0x61cd160b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000061cd160b from memory into f28
fnmsub.d f25, f18, f10, f28, dyn # perform operation
fnmsub.d f25, f18, f10, f28, rdn # perform operation
fnmsub.d f25, f18, f10, f28, rmm # perform operation
fnmsub.d f25, f18, f10, f28, rne # perform operation
fnmsub.d f25, f18, f10, f28, rtz # perform operation
fnmsub.d f25, f18, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f18, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f18, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f18, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f18, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f18, f10, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x4000000000000000)
li x4, 0x5cd11980 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0xb02e15b3 # load x3 with 32 MSBs 0x00000000b02e15b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b02e15b3
sw x3, 0(x2) # store x3 (0xb02e15b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000b02e15b3 from memory into f21
fnmsub.d f4, f17, f26, f21, dyn # perform operation
fnmsub.d f4, f17, f26, f21, rdn # perform operation
fnmsub.d f4, f17, f26, f21, rmm # perform operation
fnmsub.d f4, f17, f26, f21, rne # perform operation
fnmsub.d f4, f17, f26, f21, rtz # perform operation
fnmsub.d f4, f17, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f17, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f17, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f17, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f17, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f17, f26, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xc000000000000000)
li x10, 0x15682a2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xfff0000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
li x3, 0x2881acd3 # load x3 with 32 MSBs 0x000000002881acd3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002881acd3
sw x3, 0(x2) # store x3 (0x2881acd3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000002881acd3 from memory into f14
fnmsub.d f10, f4, f8, f14, dyn # perform operation
fnmsub.d f10, f4, f8, f14, rdn # perform operation
fnmsub.d f10, f4, f8, f14, rmm # perform operation
fnmsub.d f10, f4, f8, f14, rne # perform operation
fnmsub.d f10, f4, f8, f14, rtz # perform operation
fnmsub.d f10, f4, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f4, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f4, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f4, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f4, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f4, f8, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x10000000000000)
li x9, 0x52b42342 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
li x3, 0x45c75ff7 # load x3 with 32 MSBs 0x0000000045c75ff7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000045c75ff7
sw x3, 0(x2) # store x3 (0x45c75ff7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000045c75ff7 from memory into f24
fnmsub.d f9, f15, f10, f24, dyn # perform operation
fnmsub.d f9, f15, f10, f24, rdn # perform operation
fnmsub.d f9, f15, f10, f24, rmm # perform operation
fnmsub.d f9, f15, f10, f24, rne # perform operation
fnmsub.d f9, f15, f10, f24, rtz # perform operation
fnmsub.d f9, f15, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f15, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f15, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f15, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f15, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f15, f10, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8010000000000000)
li x7, 0xa8769a06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
li x3, 0xb5a7fbd5 # load x3 with 32 MSBs 0x00000000b5a7fbd5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b5a7fbd5
sw x3, 0(x2) # store x3 (0xb5a7fbd5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000b5a7fbd5 from memory into f15
fnmsub.d f7, f29, f25, f15, dyn # perform operation
fnmsub.d f7, f29, f25, f15, rdn # perform operation
fnmsub.d f7, f29, f25, f15, rmm # perform operation
fnmsub.d f7, f29, f25, f15, rne # perform operation
fnmsub.d f7, f29, f25, f15, rtz # perform operation
fnmsub.d f7, f29, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f29, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f29, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f29, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f29, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f29, f25, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fefffffffffffff)
li x10, 0x83c21a95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
li x3, 0x8fad6a78 # load x3 with 32 MSBs 0x000000008fad6a78
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008fad6a78
sw x3, 0(x2) # store x3 (0x8fad6a78) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000008fad6a78 from memory into f23
fnmsub.d f10, f20, f6, f23, dyn # perform operation
fnmsub.d f10, f20, f6, f23, rdn # perform operation
fnmsub.d f10, f20, f6, f23, rmm # perform operation
fnmsub.d f10, f20, f6, f23, rne # perform operation
fnmsub.d f10, f20, f6, f23, rtz # perform operation
fnmsub.d f10, f20, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f20, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f20, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f20, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f20, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f20, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xffefffffffffffff)
li x4, 0x0f7899b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
li x3, 0x7bd3127b # load x3 with 32 MSBs 0x000000007bd3127b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007bd3127b
sw x3, 0(x2) # store x3 (0x7bd3127b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000007bd3127b from memory into f8
fnmsub.d f4, f14, f31, f8, dyn # perform operation
fnmsub.d f4, f14, f31, f8, rdn # perform operation
fnmsub.d f4, f14, f31, f8, rmm # perform operation
fnmsub.d f4, f14, f31, f8, rne # perform operation
fnmsub.d f4, f14, f31, f8, rtz # perform operation
fnmsub.d f4, f14, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f14, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f14, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f14, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f14, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f14, f31, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfffffffffffff)
li x12, 0x9ac2a31d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
li x3, 0x0196ac04 # load x3 with 32 MSBs 0x000000000196ac04
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000196ac04
sw x3, 0(x2) # store x3 (0x0196ac04) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000000196ac04 from memory into f14
fnmsub.d f12, f22, f21, f14, dyn # perform operation
fnmsub.d f12, f22, f21, f14, rdn # perform operation
fnmsub.d f12, f22, f21, f14, rmm # perform operation
fnmsub.d f12, f22, f21, f14, rne # perform operation
fnmsub.d f12, f22, f21, f14, rtz # perform operation
fnmsub.d f12, f22, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f22, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f22, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f22, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f22, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f22, f21, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x800fffffffffffff)
li x27, 0xfd09a91b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
li x3, 0xb1227cb3 # load x3 with 32 MSBs 0x00000000b1227cb3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1227cb3
sw x3, 0(x2) # store x3 (0xb1227cb3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000b1227cb3 from memory into f24
fnmsub.d f27, f6, f28, f24, dyn # perform operation
fnmsub.d f27, f6, f28, f24, rdn # perform operation
fnmsub.d f27, f6, f28, f24, rmm # perform operation
fnmsub.d f27, f6, f28, f24, rne # perform operation
fnmsub.d f27, f6, f28, f24, rtz # perform operation
fnmsub.d f27, f6, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f6, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f6, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f6, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f6, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f6, f28, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000)
li x12, 0x6a30de2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
li x3, 0x8fbe06b3 # load x3 with 32 MSBs 0x000000008fbe06b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008fbe06b3
sw x3, 0(x2) # store x3 (0x8fbe06b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000008fbe06b3 from memory into f25
fnmsub.d f12, f23, f28, f25, dyn # perform operation
fnmsub.d f12, f23, f28, f25, rdn # perform operation
fnmsub.d f12, f23, f28, f25, rmm # perform operation
fnmsub.d f12, f23, f28, f25, rne # perform operation
fnmsub.d f12, f23, f28, f25, rtz # perform operation
fnmsub.d f12, f23, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f23, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f23, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f23, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f23, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f23, f28, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8008000000000000)
li x29, 0xd0d95042 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8008000000000000 from memory into f24
li x3, 0x4bb45d07 # load x3 with 32 MSBs 0x000000004bb45d07
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004bb45d07
sw x3, 0(x2) # store x3 (0x4bb45d07) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000004bb45d07 from memory into f18
fnmsub.d f29, f8, f24, f18, dyn # perform operation
fnmsub.d f29, f8, f24, f18, rdn # perform operation
fnmsub.d f29, f8, f24, f18, rmm # perform operation
fnmsub.d f29, f8, f24, f18, rne # perform operation
fnmsub.d f29, f8, f24, f18, rtz # perform operation
fnmsub.d f29, f8, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f8, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f8, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f8, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f8, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f8, f24, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x1)
li x29, 0xabe9ab81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
li x3, 0x7daac456 # load x3 with 32 MSBs 0x000000007daac456
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007daac456
sw x3, 0(x2) # store x3 (0x7daac456) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000007daac456 from memory into f3
fnmsub.d f29, f30, f18, f3, dyn # perform operation
fnmsub.d f29, f30, f18, f3, rdn # perform operation
fnmsub.d f29, f30, f18, f3, rmm # perform operation
fnmsub.d f29, f30, f18, f3, rne # perform operation
fnmsub.d f29, f30, f18, f3, rtz # perform operation
fnmsub.d f29, f30, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f30, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f30, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f30, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f30, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f30, f18, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000001)
li x26, 0x2e023811 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x25c7211b # load x3 with 32 MSBs 0x0000000025c7211b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000025c7211b
sw x3, 0(x2) # store x3 (0x25c7211b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000025c7211b from memory into f27
fnmsub.d f26, f30, f19, f27, dyn # perform operation
fnmsub.d f26, f30, f19, f27, rdn # perform operation
fnmsub.d f26, f30, f19, f27, rmm # perform operation
fnmsub.d f26, f30, f19, f27, rne # perform operation
fnmsub.d f26, f30, f19, f27, rtz # perform operation
fnmsub.d f26, f30, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f30, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f30, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f30, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f30, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f30, f19, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000000)
li x30, 0xe7963bc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000000 from memory into f8
li x3, 0x831dec0f # load x3 with 32 MSBs 0x00000000831dec0f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000831dec0f
sw x3, 0(x2) # store x3 (0x831dec0f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000831dec0f from memory into f24
fnmsub.d f30, f17, f8, f24, dyn # perform operation
fnmsub.d f30, f17, f8, f24, rdn # perform operation
fnmsub.d f30, f17, f8, f24, rmm # perform operation
fnmsub.d f30, f17, f8, f24, rne # perform operation
fnmsub.d f30, f17, f8, f24, rtz # perform operation
fnmsub.d f30, f17, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f17, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f17, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f17, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f17, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f17, f8, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfff0000000000000)
li x16, 0x6be77de8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
li x3, 0x2cfdae55 # load x3 with 32 MSBs 0x000000002cfdae55
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002cfdae55
sw x3, 0(x2) # store x3 (0x2cfdae55) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000002cfdae55 from memory into f19
fnmsub.d f16, f10, f25, f19, dyn # perform operation
fnmsub.d f16, f10, f25, f19, rdn # perform operation
fnmsub.d f16, f10, f25, f19, rmm # perform operation
fnmsub.d f16, f10, f25, f19, rne # perform operation
fnmsub.d f16, f10, f25, f19, rtz # perform operation
fnmsub.d f16, f10, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f10, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f10, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f10, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f10, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f10, f25, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff8000000000000)
li x18, 0xb62786b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0x735536ec # load x3 with 32 MSBs 0x00000000735536ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000735536ec
sw x3, 0(x2) # store x3 (0x735536ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000735536ec from memory into f30
fnmsub.d f18, f3, f24, f30, dyn # perform operation
fnmsub.d f18, f3, f24, f30, rdn # perform operation
fnmsub.d f18, f3, f24, f30, rmm # perform operation
fnmsub.d f18, f3, f24, f30, rne # perform operation
fnmsub.d f18, f3, f24, f30, rtz # perform operation
fnmsub.d f18, f3, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f3, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f3, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f3, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f3, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f3, f24, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fffffffffffffff)
li x4, 0x64866e07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
li x3, 0x31c25b2a # load x3 with 32 MSBs 0x0000000031c25b2a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031c25b2a
sw x3, 0(x2) # store x3 (0x31c25b2a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000031c25b2a from memory into f20
fnmsub.d f4, f27, f16, f20, dyn # perform operation
fnmsub.d f4, f27, f16, f20, rdn # perform operation
fnmsub.d f4, f27, f16, f20, rmm # perform operation
fnmsub.d f4, f27, f16, f20, rne # perform operation
fnmsub.d f4, f27, f16, f20, rtz # perform operation
fnmsub.d f4, f27, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f27, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f27, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f27, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f27, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f27, f16, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000001)
li x6, 0xa818e810 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
li x3, 0x249ed078 # load x3 with 32 MSBs 0x00000000249ed078
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000249ed078
sw x3, 0(x2) # store x3 (0x249ed078) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000249ed078 from memory into f5
fnmsub.d f6, f9, f26, f5, dyn # perform operation
fnmsub.d f6, f9, f26, f5, rdn # perform operation
fnmsub.d f6, f9, f26, f5, rmm # perform operation
fnmsub.d f6, f9, f26, f5, rne # perform operation
fnmsub.d f6, f9, f26, f5, rtz # perform operation
fnmsub.d f6, f9, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f9, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f9, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f9, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f9, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f9, f26, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x28, 0x8cd3708a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
li x3, 0xa193c97e # load x3 with 32 MSBs 0x00000000a193c97e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a193c97e
sw x3, 0(x2) # store x3 (0xa193c97e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000a193c97e from memory into f17
fnmsub.d f28, f3, f13, f17, dyn # perform operation
fnmsub.d f28, f3, f13, f17, rdn # perform operation
fnmsub.d f28, f3, f13, f17, rmm # perform operation
fnmsub.d f28, f3, f13, f17, rne # perform operation
fnmsub.d f28, f3, f13, f17, rtz # perform operation
fnmsub.d f28, f3, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f3, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f3, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f3, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f3, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f3, f13, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x5a392534a57711ad)
li x17, 0xb52db80c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
li x3, 0xf235dcc8 # load x3 with 32 MSBs 0x00000000f235dcc8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f235dcc8
sw x3, 0(x2) # store x3 (0xf235dcc8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000f235dcc8 from memory into f22
fnmsub.d f17, f26, f25, f22, dyn # perform operation
fnmsub.d f17, f26, f25, f22, rdn # perform operation
fnmsub.d f17, f26, f25, f22, rmm # perform operation
fnmsub.d f17, f26, f25, f22, rne # perform operation
fnmsub.d f17, f26, f25, f22, rtz # perform operation
fnmsub.d f17, f26, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f26, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f26, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f26, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f26, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f26, f25, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xa6e895993737426c)
li x3, 0x64c06760 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
li x3, 0x6211b48c # load x3 with 32 MSBs 0x000000006211b48c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006211b48c
sw x3, 0(x2) # store x3 (0x6211b48c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006211b48c from memory into f18
fnmsub.d f3, f27, f29, f18, dyn # perform operation
fnmsub.d f3, f27, f29, f18, rdn # perform operation
fnmsub.d f3, f27, f29, f18, rmm # perform operation
fnmsub.d f3, f27, f29, f18, rne # perform operation
fnmsub.d f3, f27, f29, f18, rtz # perform operation
fnmsub.d f3, f27, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f27, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f27, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f27, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f27, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f27, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x0)
li x30, 0x9389d865 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
li x3, 0x7ff5c940 # load x3 with 32 MSBs 0x000000007ff5c940
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ff5c940
sw x3, 0(x2) # store x3 (0x7ff5c940) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000007ff5c940 from memory into f8
fnmsub.d f30, f7, f22, f8, dyn # perform operation
fnmsub.d f30, f7, f22, f8, rdn # perform operation
fnmsub.d f30, f7, f22, f8, rmm # perform operation
fnmsub.d f30, f7, f22, f8, rne # perform operation
fnmsub.d f30, f7, f22, f8, rtz # perform operation
fnmsub.d f30, f7, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f7, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f7, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f7, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f7, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f7, f22, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000000)
li x13, 0x981f83ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000000 from memory into f28
li x3, 0x0c3fb36c # load x3 with 32 MSBs 0x000000000c3fb36c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c3fb36c
sw x3, 0(x2) # store x3 (0x0c3fb36c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000000c3fb36c from memory into f2
fnmsub.d f13, f12, f28, f2, dyn # perform operation
fnmsub.d f13, f12, f28, f2, rdn # perform operation
fnmsub.d f13, f12, f28, f2, rmm # perform operation
fnmsub.d f13, f12, f28, f2, rne # perform operation
fnmsub.d f13, f12, f28, f2, rtz # perform operation
fnmsub.d f13, f12, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f12, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f12, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f12, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f12, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f12, f28, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff0000000000000)
li x15, 0xf7fd8b83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
li x3, 0x62072ddc # load x3 with 32 MSBs 0x0000000062072ddc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000062072ddc
sw x3, 0(x2) # store x3 (0x62072ddc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000062072ddc from memory into f3
fnmsub.d f15, f11, f8, f3, dyn # perform operation
fnmsub.d f15, f11, f8, f3, rdn # perform operation
fnmsub.d f15, f11, f8, f3, rmm # perform operation
fnmsub.d f15, f11, f8, f3, rne # perform operation
fnmsub.d f15, f11, f8, f3, rtz # perform operation
fnmsub.d f15, f11, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f11, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f11, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f11, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f11, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f11, f8, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff0000000000000)
li x23, 0x0f11111d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0xb22dd563 # load x3 with 32 MSBs 0x00000000b22dd563
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b22dd563
sw x3, 0(x2) # store x3 (0xb22dd563) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000b22dd563 from memory into f15
fnmsub.d f23, f21, f27, f15, dyn # perform operation
fnmsub.d f23, f21, f27, f15, rdn # perform operation
fnmsub.d f23, f21, f27, f15, rmm # perform operation
fnmsub.d f23, f21, f27, f15, rne # perform operation
fnmsub.d f23, f21, f27, f15, rtz # perform operation
fnmsub.d f23, f21, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f21, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f21, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f21, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f21, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f21, f27, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff8000000000000)
li x14, 0x11f68543 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
li x3, 0x0a953804 # load x3 with 32 MSBs 0x000000000a953804
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000a953804
sw x3, 0(x2) # store x3 (0x0a953804) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000000a953804 from memory into f21
fnmsub.d f14, f29, f15, f21, dyn # perform operation
fnmsub.d f14, f29, f15, f21, rdn # perform operation
fnmsub.d f14, f29, f15, f21, rmm # perform operation
fnmsub.d f14, f29, f15, f21, rne # perform operation
fnmsub.d f14, f29, f15, f21, rtz # perform operation
fnmsub.d f14, f29, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f29, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f29, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f29, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f29, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f29, f15, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff8000000000000)
li x1, 0xd70ee244 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
li x3, 0x7f0650b1 # load x3 with 32 MSBs 0x000000007f0650b1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f0650b1
sw x3, 0(x2) # store x3 (0x7f0650b1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000007f0650b1 from memory into f6
fnmsub.d f1, f25, f22, f6, dyn # perform operation
fnmsub.d f1, f25, f22, f6, rdn # perform operation
fnmsub.d f1, f25, f22, f6, rmm # perform operation
fnmsub.d f1, f25, f22, f6, rne # perform operation
fnmsub.d f1, f25, f22, f6, rtz # perform operation
fnmsub.d f1, f25, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f25, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f25, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f25, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f25, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f25, f22, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x4000000000000000)
li x3, 0xa78e08bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
li x3, 0x092c18ba # load x3 with 32 MSBs 0x00000000092c18ba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000092c18ba
sw x3, 0(x2) # store x3 (0x092c18ba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000092c18ba from memory into f10
fnmsub.d f3, f7, f6, f10, dyn # perform operation
fnmsub.d f3, f7, f6, f10, rdn # perform operation
fnmsub.d f3, f7, f6, f10, rmm # perform operation
fnmsub.d f3, f7, f6, f10, rne # perform operation
fnmsub.d f3, f7, f6, f10, rtz # perform operation
fnmsub.d f3, f7, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f7, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f7, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f7, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f7, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f7, f6, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xc000000000000000)
li x27, 0x525b5aea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
li x3, 0x572341c3 # load x3 with 32 MSBs 0x00000000572341c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000572341c3
sw x3, 0(x2) # store x3 (0x572341c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000572341c3 from memory into f6
fnmsub.d f27, f26, f8, f6, dyn # perform operation
fnmsub.d f27, f26, f8, f6, rdn # perform operation
fnmsub.d f27, f26, f8, f6, rmm # perform operation
fnmsub.d f27, f26, f8, f6, rne # perform operation
fnmsub.d f27, f26, f8, f6, rtz # perform operation
fnmsub.d f27, f26, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f26, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f26, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f26, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f26, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f26, f8, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x10000000000000)
li x20, 0xcd053ec7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
li x3, 0xfbc31feb # load x3 with 32 MSBs 0x00000000fbc31feb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fbc31feb
sw x3, 0(x2) # store x3 (0xfbc31feb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000fbc31feb from memory into f5
fnmsub.d f20, f7, f2, f5, dyn # perform operation
fnmsub.d f20, f7, f2, f5, rdn # perform operation
fnmsub.d f20, f7, f2, f5, rmm # perform operation
fnmsub.d f20, f7, f2, f5, rne # perform operation
fnmsub.d f20, f7, f2, f5, rtz # perform operation
fnmsub.d f20, f7, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f7, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f7, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f7, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f7, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f7, f2, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8010000000000000)
li x12, 0xcbc14469 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
li x3, 0xf436f3c1 # load x3 with 32 MSBs 0x00000000f436f3c1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f436f3c1
sw x3, 0(x2) # store x3 (0xf436f3c1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000f436f3c1 from memory into f14
fnmsub.d f12, f16, f27, f14, dyn # perform operation
fnmsub.d f12, f16, f27, f14, rdn # perform operation
fnmsub.d f12, f16, f27, f14, rmm # perform operation
fnmsub.d f12, f16, f27, f14, rne # perform operation
fnmsub.d f12, f16, f27, f14, rtz # perform operation
fnmsub.d f12, f16, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f16, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f16, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f16, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f16, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f16, f27, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fefffffffffffff)
li x17, 0xd5e30d48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
li x3, 0xa9439fb9 # load x3 with 32 MSBs 0x00000000a9439fb9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9439fb9
sw x3, 0(x2) # store x3 (0xa9439fb9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000a9439fb9 from memory into f26
fnmsub.d f17, f8, f28, f26, dyn # perform operation
fnmsub.d f17, f8, f28, f26, rdn # perform operation
fnmsub.d f17, f8, f28, f26, rmm # perform operation
fnmsub.d f17, f8, f28, f26, rne # perform operation
fnmsub.d f17, f8, f28, f26, rtz # perform operation
fnmsub.d f17, f8, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f8, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f8, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f8, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f8, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f8, f28, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xffefffffffffffff)
li x27, 0x8e3bb0e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
li x3, 0xe3b74989 # load x3 with 32 MSBs 0x00000000e3b74989
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e3b74989
sw x3, 0(x2) # store x3 (0xe3b74989) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000e3b74989 from memory into f15
fnmsub.d f27, f21, f7, f15, dyn # perform operation
fnmsub.d f27, f21, f7, f15, rdn # perform operation
fnmsub.d f27, f21, f7, f15, rmm # perform operation
fnmsub.d f27, f21, f7, f15, rne # perform operation
fnmsub.d f27, f21, f7, f15, rtz # perform operation
fnmsub.d f27, f21, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f21, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f21, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f21, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f21, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f21, f7, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfffffffffffff)
li x24, 0xe0bd2e9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
li x3, 0x6b7a1c6f # load x3 with 32 MSBs 0x000000006b7a1c6f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b7a1c6f
sw x3, 0(x2) # store x3 (0x6b7a1c6f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000006b7a1c6f from memory into f5
fnmsub.d f24, f31, f10, f5, dyn # perform operation
fnmsub.d f24, f31, f10, f5, rdn # perform operation
fnmsub.d f24, f31, f10, f5, rmm # perform operation
fnmsub.d f24, f31, f10, f5, rne # perform operation
fnmsub.d f24, f31, f10, f5, rtz # perform operation
fnmsub.d f24, f31, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f31, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f31, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f31, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f31, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f31, f10, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x800fffffffffffff)
li x21, 0xbef6794f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
li x3, 0xe7bdb70c # load x3 with 32 MSBs 0x00000000e7bdb70c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e7bdb70c
sw x3, 0(x2) # store x3 (0xe7bdb70c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000e7bdb70c from memory into f6
fnmsub.d f21, f1, f5, f6, dyn # perform operation
fnmsub.d f21, f1, f5, f6, rdn # perform operation
fnmsub.d f21, f1, f5, f6, rmm # perform operation
fnmsub.d f21, f1, f5, f6, rne # perform operation
fnmsub.d f21, f1, f5, f6, rtz # perform operation
fnmsub.d f21, f1, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f1, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f1, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f1, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f1, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f1, f5, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000)
li x12, 0x63467cc0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
li x3, 0x0b9dd97a # load x3 with 32 MSBs 0x000000000b9dd97a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000b9dd97a
sw x3, 0(x2) # store x3 (0x0b9dd97a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000000b9dd97a from memory into f28
fnmsub.d f12, f23, f2, f28, dyn # perform operation
fnmsub.d f12, f23, f2, f28, rdn # perform operation
fnmsub.d f12, f23, f2, f28, rmm # perform operation
fnmsub.d f12, f23, f2, f28, rne # perform operation
fnmsub.d f12, f23, f2, f28, rtz # perform operation
fnmsub.d f12, f23, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f23, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f23, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f23, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f23, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f23, f2, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8008000000000000)
li x26, 0xbd660bb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
li x3, 0x8432f156 # load x3 with 32 MSBs 0x000000008432f156
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008432f156
sw x3, 0(x2) # store x3 (0x8432f156) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000008432f156 from memory into f23
fnmsub.d f26, f16, f30, f23, dyn # perform operation
fnmsub.d f26, f16, f30, f23, rdn # perform operation
fnmsub.d f26, f16, f30, f23, rmm # perform operation
fnmsub.d f26, f16, f30, f23, rne # perform operation
fnmsub.d f26, f16, f30, f23, rtz # perform operation
fnmsub.d f26, f16, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f16, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f16, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f16, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f16, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f16, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x1)
li x29, 0x90fd9dff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
li x3, 0x3194c305 # load x3 with 32 MSBs 0x000000003194c305
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003194c305
sw x3, 0(x2) # store x3 (0x3194c305) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000003194c305 from memory into f14
fnmsub.d f29, f20, f11, f14, dyn # perform operation
fnmsub.d f29, f20, f11, f14, rdn # perform operation
fnmsub.d f29, f20, f11, f14, rmm # perform operation
fnmsub.d f29, f20, f11, f14, rne # perform operation
fnmsub.d f29, f20, f11, f14, rtz # perform operation
fnmsub.d f29, f20, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f20, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f20, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f20, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f20, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f20, f11, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000001)
li x16, 0x78335d02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
li x3, 0x19b704d2 # load x3 with 32 MSBs 0x0000000019b704d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000019b704d2
sw x3, 0(x2) # store x3 (0x19b704d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000019b704d2 from memory into f18
fnmsub.d f16, f2, f29, f18, dyn # perform operation
fnmsub.d f16, f2, f29, f18, rdn # perform operation
fnmsub.d f16, f2, f29, f18, rmm # perform operation
fnmsub.d f16, f2, f29, f18, rne # perform operation
fnmsub.d f16, f2, f29, f18, rtz # perform operation
fnmsub.d f16, f2, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f2, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f2, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f2, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f2, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f2, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000000)
li x9, 0x4161e6c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
li x3, 0x2d15b3ef # load x3 with 32 MSBs 0x000000002d15b3ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d15b3ef
sw x3, 0(x2) # store x3 (0x2d15b3ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000002d15b3ef from memory into f16
fnmsub.d f9, f12, f7, f16, dyn # perform operation
fnmsub.d f9, f12, f7, f16, rdn # perform operation
fnmsub.d f9, f12, f7, f16, rmm # perform operation
fnmsub.d f9, f12, f7, f16, rne # perform operation
fnmsub.d f9, f12, f7, f16, rtz # perform operation
fnmsub.d f9, f12, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f12, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f12, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f12, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f12, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f12, f7, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfff0000000000000)
li x26, 0xf801941b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
li x3, 0x90189ea3 # load x3 with 32 MSBs 0x0000000090189ea3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000090189ea3
sw x3, 0(x2) # store x3 (0x90189ea3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000090189ea3 from memory into f12
fnmsub.d f26, f19, f3, f12, dyn # perform operation
fnmsub.d f26, f19, f3, f12, rdn # perform operation
fnmsub.d f26, f19, f3, f12, rmm # perform operation
fnmsub.d f26, f19, f3, f12, rne # perform operation
fnmsub.d f26, f19, f3, f12, rtz # perform operation
fnmsub.d f26, f19, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f19, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f19, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f19, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f19, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f19, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff8000000000000)
li x17, 0x92a1dfcb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
li x3, 0xb1f5b025 # load x3 with 32 MSBs 0x00000000b1f5b025
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1f5b025
sw x3, 0(x2) # store x3 (0xb1f5b025) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000b1f5b025 from memory into f11
fnmsub.d f17, f15, f20, f11, dyn # perform operation
fnmsub.d f17, f15, f20, f11, rdn # perform operation
fnmsub.d f17, f15, f20, f11, rmm # perform operation
fnmsub.d f17, f15, f20, f11, rne # perform operation
fnmsub.d f17, f15, f20, f11, rtz # perform operation
fnmsub.d f17, f15, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f15, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f15, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f15, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f15, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f15, f20, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fffffffffffffff)
li x1, 0xa60dff6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
li x3, 0xf6176a92 # load x3 with 32 MSBs 0x00000000f6176a92
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f6176a92
sw x3, 0(x2) # store x3 (0xf6176a92) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000f6176a92 from memory into f17
fnmsub.d f1, f24, f6, f17, dyn # perform operation
fnmsub.d f1, f24, f6, f17, rdn # perform operation
fnmsub.d f1, f24, f6, f17, rmm # perform operation
fnmsub.d f1, f24, f6, f17, rne # perform operation
fnmsub.d f1, f24, f6, f17, rtz # perform operation
fnmsub.d f1, f24, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f24, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f24, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f24, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f24, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f24, f6, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000001)
li x30, 0x4f3832cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff8000000000000 from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
li x3, 0x6966ad66 # load x3 with 32 MSBs 0x000000006966ad66
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006966ad66
sw x3, 0(x2) # store x3 (0x6966ad66) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000006966ad66 from memory into f9
fnmsub.d f30, f28, f22, f9, dyn # perform operation
fnmsub.d f30, f28, f22, f9, rdn # perform operation
fnmsub.d f30, f28, f22, f9, rmm # perform operation
fnmsub.d f30, f28, f22, f9, rne # perform operation
fnmsub.d f30, f28, f22, f9, rtz # perform operation
fnmsub.d f30, f28, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f28, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f28, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f28, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f28, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f28, f22, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x22, 0xcf99662f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
li x3, 0xad55e9a6 # load x3 with 32 MSBs 0x00000000ad55e9a6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ad55e9a6
sw x3, 0(x2) # store x3 (0xad55e9a6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000ad55e9a6 from memory into f17
fnmsub.d f22, f3, f13, f17, dyn # perform operation
fnmsub.d f22, f3, f13, f17, rdn # perform operation
fnmsub.d f22, f3, f13, f17, rmm # perform operation
fnmsub.d f22, f3, f13, f17, rne # perform operation
fnmsub.d f22, f3, f13, f17, rtz # perform operation
fnmsub.d f22, f3, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f3, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f3, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f3, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f3, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f3, f13, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x5a392534a57711ad)
li x22, 0x23fd010f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
li x3, 0x239946f0 # load x3 with 32 MSBs 0x00000000239946f0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000239946f0
sw x3, 0(x2) # store x3 (0x239946f0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000239946f0 from memory into f12
fnmsub.d f22, f21, f11, f12, dyn # perform operation
fnmsub.d f22, f21, f11, f12, rdn # perform operation
fnmsub.d f22, f21, f11, f12, rmm # perform operation
fnmsub.d f22, f21, f11, f12, rne # perform operation
fnmsub.d f22, f21, f11, f12, rtz # perform operation
fnmsub.d f22, f21, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f21, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f21, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f21, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f21, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f21, f11, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xa6e895993737426c)
li x20, 0xb8292cb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
li x3, 0x3d9d3351 # load x3 with 32 MSBs 0x000000003d9d3351
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d9d3351
sw x3, 0(x2) # store x3 (0x3d9d3351) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000003d9d3351 from memory into f3
fnmsub.d f20, f1, f21, f3, dyn # perform operation
fnmsub.d f20, f1, f21, f3, rdn # perform operation
fnmsub.d f20, f1, f21, f3, rmm # perform operation
fnmsub.d f20, f1, f21, f3, rne # perform operation
fnmsub.d f20, f1, f21, f3, rtz # perform operation
fnmsub.d f20, f1, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f1, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f1, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f1, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f1, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f1, f21, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x0)
li x29, 0x073a882b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
li x3, 0xad3e103a # load x3 with 32 MSBs 0x00000000ad3e103a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ad3e103a
sw x3, 0(x2) # store x3 (0xad3e103a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000ad3e103a from memory into f4
fnmsub.d f29, f1, f30, f4, dyn # perform operation
fnmsub.d f29, f1, f30, f4, rdn # perform operation
fnmsub.d f29, f1, f30, f4, rmm # perform operation
fnmsub.d f29, f1, f30, f4, rne # perform operation
fnmsub.d f29, f1, f30, f4, rtz # perform operation
fnmsub.d f29, f1, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f1, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f1, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f1, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f1, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f1, f30, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000000)
li x26, 0x13b30486 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
li x3, 0xe3f477b4 # load x3 with 32 MSBs 0x00000000e3f477b4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e3f477b4
sw x3, 0(x2) # store x3 (0xe3f477b4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000e3f477b4 from memory into f1
fnmsub.d f26, f20, f31, f1, dyn # perform operation
fnmsub.d f26, f20, f31, f1, rdn # perform operation
fnmsub.d f26, f20, f31, f1, rmm # perform operation
fnmsub.d f26, f20, f31, f1, rne # perform operation
fnmsub.d f26, f20, f31, f1, rtz # perform operation
fnmsub.d f26, f20, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f20, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f20, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f20, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f20, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f20, f31, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff0000000000000)
li x6, 0x3773a14f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
li x3, 0xa3d5d30c # load x3 with 32 MSBs 0x00000000a3d5d30c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a3d5d30c
sw x3, 0(x2) # store x3 (0xa3d5d30c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000a3d5d30c from memory into f14
fnmsub.d f6, f4, f30, f14, dyn # perform operation
fnmsub.d f6, f4, f30, f14, rdn # perform operation
fnmsub.d f6, f4, f30, f14, rmm # perform operation
fnmsub.d f6, f4, f30, f14, rne # perform operation
fnmsub.d f6, f4, f30, f14, rtz # perform operation
fnmsub.d f6, f4, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f4, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f4, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f4, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f4, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f4, f30, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff0000000000000)
li x5, 0x88b193de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
li x3, 0x4978a72d # load x3 with 32 MSBs 0x000000004978a72d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004978a72d
sw x3, 0(x2) # store x3 (0x4978a72d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000004978a72d from memory into f27
fnmsub.d f5, f20, f18, f27, dyn # perform operation
fnmsub.d f5, f20, f18, f27, rdn # perform operation
fnmsub.d f5, f20, f18, f27, rmm # perform operation
fnmsub.d f5, f20, f18, f27, rne # perform operation
fnmsub.d f5, f20, f18, f27, rtz # perform operation
fnmsub.d f5, f20, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f20, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f20, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f20, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f20, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f20, f18, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff8000000000000)
li x11, 0x7b53dfe1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
li x3, 0x7b5ae891 # load x3 with 32 MSBs 0x000000007b5ae891
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007b5ae891
sw x3, 0(x2) # store x3 (0x7b5ae891) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000007b5ae891 from memory into f17
fnmsub.d f11, f29, f20, f17, dyn # perform operation
fnmsub.d f11, f29, f20, f17, rdn # perform operation
fnmsub.d f11, f29, f20, f17, rmm # perform operation
fnmsub.d f11, f29, f20, f17, rne # perform operation
fnmsub.d f11, f29, f20, f17, rtz # perform operation
fnmsub.d f11, f29, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f29, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f29, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f29, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f29, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f29, f20, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff8000000000000)
li x24, 0x9d9eb9a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
li x3, 0xfe53a6e6 # load x3 with 32 MSBs 0x00000000fe53a6e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fe53a6e6
sw x3, 0(x2) # store x3 (0xfe53a6e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000fe53a6e6 from memory into f19
fnmsub.d f24, f18, f28, f19, dyn # perform operation
fnmsub.d f24, f18, f28, f19, rdn # perform operation
fnmsub.d f24, f18, f28, f19, rmm # perform operation
fnmsub.d f24, f18, f28, f19, rne # perform operation
fnmsub.d f24, f18, f28, f19, rtz # perform operation
fnmsub.d f24, f18, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f18, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f18, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f18, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f18, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f18, f28, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x4000000000000000)
li x22, 0x4f3a1f26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
li x3, 0xd591f4a1 # load x3 with 32 MSBs 0x00000000d591f4a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d591f4a1
sw x3, 0(x2) # store x3 (0xd591f4a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000d591f4a1 from memory into f15
fnmsub.d f22, f6, f2, f15, dyn # perform operation
fnmsub.d f22, f6, f2, f15, rdn # perform operation
fnmsub.d f22, f6, f2, f15, rmm # perform operation
fnmsub.d f22, f6, f2, f15, rne # perform operation
fnmsub.d f22, f6, f2, f15, rtz # perform operation
fnmsub.d f22, f6, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f6, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f6, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f6, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f6, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f6, f2, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xc000000000000000)
li x4, 0xf51f2703 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
li x3, 0xe5ff7286 # load x3 with 32 MSBs 0x00000000e5ff7286
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e5ff7286
sw x3, 0(x2) # store x3 (0xe5ff7286) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e5ff7286 from memory into f19
fnmsub.d f4, f25, f18, f19, dyn # perform operation
fnmsub.d f4, f25, f18, f19, rdn # perform operation
fnmsub.d f4, f25, f18, f19, rmm # perform operation
fnmsub.d f4, f25, f18, f19, rne # perform operation
fnmsub.d f4, f25, f18, f19, rtz # perform operation
fnmsub.d f4, f25, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f25, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f25, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f25, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f25, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f25, f18, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x10000000000000)
li x8, 0x7da67f63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
li x3, 0xc61674f8 # load x3 with 32 MSBs 0x00000000c61674f8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c61674f8
sw x3, 0(x2) # store x3 (0xc61674f8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000c61674f8 from memory into f21
fnmsub.d f8, f17, f7, f21, dyn # perform operation
fnmsub.d f8, f17, f7, f21, rdn # perform operation
fnmsub.d f8, f17, f7, f21, rmm # perform operation
fnmsub.d f8, f17, f7, f21, rne # perform operation
fnmsub.d f8, f17, f7, f21, rtz # perform operation
fnmsub.d f8, f17, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f17, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f17, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f17, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f17, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f17, f7, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8010000000000000)
li x12, 0x01114a63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0x5002cd8f # load x3 with 32 MSBs 0x000000005002cd8f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005002cd8f
sw x3, 0(x2) # store x3 (0x5002cd8f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000005002cd8f from memory into f17
fnmsub.d f12, f26, f14, f17, dyn # perform operation
fnmsub.d f12, f26, f14, f17, rdn # perform operation
fnmsub.d f12, f26, f14, f17, rmm # perform operation
fnmsub.d f12, f26, f14, f17, rne # perform operation
fnmsub.d f12, f26, f14, f17, rtz # perform operation
fnmsub.d f12, f26, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f26, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f26, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f26, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f26, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f26, f14, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fefffffffffffff)
li x30, 0x6541afd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
li x3, 0xc813436b # load x3 with 32 MSBs 0x00000000c813436b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c813436b
sw x3, 0(x2) # store x3 (0xc813436b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000c813436b from memory into f5
fnmsub.d f30, f14, f16, f5, dyn # perform operation
fnmsub.d f30, f14, f16, f5, rdn # perform operation
fnmsub.d f30, f14, f16, f5, rmm # perform operation
fnmsub.d f30, f14, f16, f5, rne # perform operation
fnmsub.d f30, f14, f16, f5, rtz # perform operation
fnmsub.d f30, f14, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f14, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f14, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f14, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f14, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f14, f16, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xffefffffffffffff)
li x3, 0x3d1e8e6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
li x3, 0x6a5672b8 # load x3 with 32 MSBs 0x000000006a5672b8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006a5672b8
sw x3, 0(x2) # store x3 (0x6a5672b8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000006a5672b8 from memory into f12
fnmsub.d f3, f15, f2, f12, dyn # perform operation
fnmsub.d f3, f15, f2, f12, rdn # perform operation
fnmsub.d f3, f15, f2, f12, rmm # perform operation
fnmsub.d f3, f15, f2, f12, rne # perform operation
fnmsub.d f3, f15, f2, f12, rtz # perform operation
fnmsub.d f3, f15, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f15, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f15, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f15, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f15, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f15, f2, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfffffffffffff)
li x28, 0xee86887f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
li x3, 0xaee4ef1d # load x3 with 32 MSBs 0x00000000aee4ef1d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aee4ef1d
sw x3, 0(x2) # store x3 (0xaee4ef1d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000aee4ef1d from memory into f9
fnmsub.d f28, f3, f19, f9, dyn # perform operation
fnmsub.d f28, f3, f19, f9, rdn # perform operation
fnmsub.d f28, f3, f19, f9, rmm # perform operation
fnmsub.d f28, f3, f19, f9, rne # perform operation
fnmsub.d f28, f3, f19, f9, rtz # perform operation
fnmsub.d f28, f3, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f3, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f3, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f3, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f3, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f3, f19, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x800fffffffffffff)
li x18, 0x8a707821 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
li x3, 0x42fff1bc # load x3 with 32 MSBs 0x0000000042fff1bc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042fff1bc
sw x3, 0(x2) # store x3 (0x42fff1bc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000042fff1bc from memory into f28
fnmsub.d f18, f12, f3, f28, dyn # perform operation
fnmsub.d f18, f12, f3, f28, rdn # perform operation
fnmsub.d f18, f12, f3, f28, rmm # perform operation
fnmsub.d f18, f12, f3, f28, rne # perform operation
fnmsub.d f18, f12, f3, f28, rtz # perform operation
fnmsub.d f18, f12, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f12, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f12, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f12, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f12, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f12, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000)
li x20, 0x932392f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
li x3, 0x608600d6 # load x3 with 32 MSBs 0x00000000608600d6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000608600d6
sw x3, 0(x2) # store x3 (0x608600d6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000608600d6 from memory into f7
fnmsub.d f20, f2, f8, f7, dyn # perform operation
fnmsub.d f20, f2, f8, f7, rdn # perform operation
fnmsub.d f20, f2, f8, f7, rmm # perform operation
fnmsub.d f20, f2, f8, f7, rne # perform operation
fnmsub.d f20, f2, f8, f7, rtz # perform operation
fnmsub.d f20, f2, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f2, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f2, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f2, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f2, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f2, f8, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8008000000000000)
li x26, 0x071b8e4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
li x3, 0xf60513f4 # load x3 with 32 MSBs 0x00000000f60513f4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f60513f4
sw x3, 0(x2) # store x3 (0xf60513f4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000f60513f4 from memory into f28
fnmsub.d f26, f31, f19, f28, dyn # perform operation
fnmsub.d f26, f31, f19, f28, rdn # perform operation
fnmsub.d f26, f31, f19, f28, rmm # perform operation
fnmsub.d f26, f31, f19, f28, rne # perform operation
fnmsub.d f26, f31, f19, f28, rtz # perform operation
fnmsub.d f26, f31, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f31, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f31, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f31, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f31, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f31, f19, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x1)
li x14, 0xe0ee4760 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
li x3, 0x5178e658 # load x3 with 32 MSBs 0x000000005178e658
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005178e658
sw x3, 0(x2) # store x3 (0x5178e658) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000005178e658 from memory into f7
fnmsub.d f14, f20, f1, f7, dyn # perform operation
fnmsub.d f14, f20, f1, f7, rdn # perform operation
fnmsub.d f14, f20, f1, f7, rmm # perform operation
fnmsub.d f14, f20, f1, f7, rne # perform operation
fnmsub.d f14, f20, f1, f7, rtz # perform operation
fnmsub.d f14, f20, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f20, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f20, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f20, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f20, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f20, f1, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000001)
li x12, 0xc814f317 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fffffffffffffff from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
li x3, 0xfd0409ca # load x3 with 32 MSBs 0x00000000fd0409ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fd0409ca
sw x3, 0(x2) # store x3 (0xfd0409ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000fd0409ca from memory into f28
fnmsub.d f12, f10, f26, f28, dyn # perform operation
fnmsub.d f12, f10, f26, f28, rdn # perform operation
fnmsub.d f12, f10, f26, f28, rmm # perform operation
fnmsub.d f12, f10, f26, f28, rne # perform operation
fnmsub.d f12, f10, f26, f28, rtz # perform operation
fnmsub.d f12, f10, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f10, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f10, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f10, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f10, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f10, f26, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000000)
li x11, 0x2f8b60ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
li x3, 0xbeb12462 # load x3 with 32 MSBs 0x00000000beb12462
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000beb12462
sw x3, 0(x2) # store x3 (0xbeb12462) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000beb12462 from memory into f7
fnmsub.d f11, f19, f9, f7, dyn # perform operation
fnmsub.d f11, f19, f9, f7, rdn # perform operation
fnmsub.d f11, f19, f9, f7, rmm # perform operation
fnmsub.d f11, f19, f9, f7, rne # perform operation
fnmsub.d f11, f19, f9, f7, rtz # perform operation
fnmsub.d f11, f19, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f19, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f19, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f19, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f19, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f19, f9, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfff0000000000000)
li x7, 0x1d3191a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
li x3, 0xe0b63c52 # load x3 with 32 MSBs 0x00000000e0b63c52
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e0b63c52
sw x3, 0(x2) # store x3 (0xe0b63c52) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000e0b63c52 from memory into f13
fnmsub.d f7, f25, f17, f13, dyn # perform operation
fnmsub.d f7, f25, f17, f13, rdn # perform operation
fnmsub.d f7, f25, f17, f13, rmm # perform operation
fnmsub.d f7, f25, f17, f13, rne # perform operation
fnmsub.d f7, f25, f17, f13, rtz # perform operation
fnmsub.d f7, f25, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f25, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f25, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f25, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f25, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f25, f17, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff8000000000000)
li x15, 0x66ba227f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
li x3, 0xf8f29a57 # load x3 with 32 MSBs 0x00000000f8f29a57
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f8f29a57
sw x3, 0(x2) # store x3 (0xf8f29a57) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000f8f29a57 from memory into f22
fnmsub.d f15, f31, f25, f22, dyn # perform operation
fnmsub.d f15, f31, f25, f22, rdn # perform operation
fnmsub.d f15, f31, f25, f22, rmm # perform operation
fnmsub.d f15, f31, f25, f22, rne # perform operation
fnmsub.d f15, f31, f25, f22, rtz # perform operation
fnmsub.d f15, f31, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f31, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f31, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f31, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f31, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f31, f25, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fffffffffffffff)
li x28, 0x37e2893d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fffffffffffffff from memory into f13
li x3, 0xbeb61b25 # load x3 with 32 MSBs 0x00000000beb61b25
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000beb61b25
sw x3, 0(x2) # store x3 (0xbeb61b25) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000beb61b25 from memory into f25
fnmsub.d f28, f30, f13, f25, dyn # perform operation
fnmsub.d f28, f30, f13, f25, rdn # perform operation
fnmsub.d f28, f30, f13, f25, rmm # perform operation
fnmsub.d f28, f30, f13, f25, rne # perform operation
fnmsub.d f28, f30, f13, f25, rtz # perform operation
fnmsub.d f28, f30, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f30, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f30, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f30, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f30, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f30, f13, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000001)
li x7, 0x9c262f85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
li x3, 0xb70db6dd # load x3 with 32 MSBs 0x00000000b70db6dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b70db6dd
sw x3, 0(x2) # store x3 (0xb70db6dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000b70db6dd from memory into f29
fnmsub.d f7, f19, f21, f29, dyn # perform operation
fnmsub.d f7, f19, f21, f29, rdn # perform operation
fnmsub.d f7, f19, f21, f29, rmm # perform operation
fnmsub.d f7, f19, f21, f29, rne # perform operation
fnmsub.d f7, f19, f21, f29, rtz # perform operation
fnmsub.d f7, f19, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f19, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f19, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f19, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f19, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f19, f21, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff7ffffffffffff)
li x17, 0x249a0649 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
li x3, 0xcab539fe # load x3 with 32 MSBs 0x00000000cab539fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cab539fe
sw x3, 0(x2) # store x3 (0xcab539fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000cab539fe from memory into f24
fnmsub.d f17, f2, f29, f24, dyn # perform operation
fnmsub.d f17, f2, f29, f24, rdn # perform operation
fnmsub.d f17, f2, f29, f24, rmm # perform operation
fnmsub.d f17, f2, f29, f24, rne # perform operation
fnmsub.d f17, f2, f29, f24, rtz # perform operation
fnmsub.d f17, f2, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f2, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f2, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f2, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f2, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f2, f29, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x5a392534a57711ad)
li x20, 0xe9ba9fa1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
li x3, 0xb8f31554 # load x3 with 32 MSBs 0x00000000b8f31554
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b8f31554
sw x3, 0(x2) # store x3 (0xb8f31554) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000b8f31554 from memory into f28
fnmsub.d f20, f4, f30, f28, dyn # perform operation
fnmsub.d f20, f4, f30, f28, rdn # perform operation
fnmsub.d f20, f4, f30, f28, rmm # perform operation
fnmsub.d f20, f4, f30, f28, rne # perform operation
fnmsub.d f20, f4, f30, f28, rtz # perform operation
fnmsub.d f20, f4, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f4, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f4, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f4, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f4, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f4, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xa6e895993737426c)
li x30, 0x671eadc0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xa6e895993737426c from memory into f23
li x3, 0x2e672204 # load x3 with 32 MSBs 0x000000002e672204
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e672204
sw x3, 0(x2) # store x3 (0x2e672204) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000002e672204 from memory into f25
fnmsub.d f30, f2, f23, f25, dyn # perform operation
fnmsub.d f30, f2, f23, f25, rdn # perform operation
fnmsub.d f30, f2, f23, f25, rmm # perform operation
fnmsub.d f30, f2, f23, f25, rne # perform operation
fnmsub.d f30, f2, f23, f25, rtz # perform operation
fnmsub.d f30, f2, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f2, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f2, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f2, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f2, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f2, f23, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x0)
li x19, 0x6197b7f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
li x3, 0x97969ceb # load x3 with 32 MSBs 0x0000000097969ceb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000097969ceb
sw x3, 0(x2) # store x3 (0x97969ceb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000097969ceb from memory into f31
fnmsub.d f19, f17, f23, f31, dyn # perform operation
fnmsub.d f19, f17, f23, f31, rdn # perform operation
fnmsub.d f19, f17, f23, f31, rmm # perform operation
fnmsub.d f19, f17, f23, f31, rne # perform operation
fnmsub.d f19, f17, f23, f31, rtz # perform operation
fnmsub.d f19, f17, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f17, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f17, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f17, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f17, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f17, f23, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000000)
li x12, 0x17319897 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000000 from memory into f8
li x3, 0xb8b1d9ce # load x3 with 32 MSBs 0x00000000b8b1d9ce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b8b1d9ce
sw x3, 0(x2) # store x3 (0xb8b1d9ce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000b8b1d9ce from memory into f2
fnmsub.d f12, f29, f8, f2, dyn # perform operation
fnmsub.d f12, f29, f8, f2, rdn # perform operation
fnmsub.d f12, f29, f8, f2, rmm # perform operation
fnmsub.d f12, f29, f8, f2, rne # perform operation
fnmsub.d f12, f29, f8, f2, rtz # perform operation
fnmsub.d f12, f29, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f29, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f29, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f29, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f29, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f29, f8, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff0000000000000)
li x17, 0x3da17555 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0xf7ede523 # load x3 with 32 MSBs 0x00000000f7ede523
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f7ede523
sw x3, 0(x2) # store x3 (0xf7ede523) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000f7ede523 from memory into f22
fnmsub.d f17, f12, f11, f22, dyn # perform operation
fnmsub.d f17, f12, f11, f22, rdn # perform operation
fnmsub.d f17, f12, f11, f22, rmm # perform operation
fnmsub.d f17, f12, f11, f22, rne # perform operation
fnmsub.d f17, f12, f11, f22, rtz # perform operation
fnmsub.d f17, f12, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f12, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f12, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f12, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f12, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f12, f11, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff0000000000000)
li x17, 0x119a4324 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0x61ddbe3b # load x3 with 32 MSBs 0x0000000061ddbe3b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000061ddbe3b
sw x3, 0(x2) # store x3 (0x61ddbe3b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000061ddbe3b from memory into f28
fnmsub.d f17, f22, f12, f28, dyn # perform operation
fnmsub.d f17, f22, f12, f28, rdn # perform operation
fnmsub.d f17, f22, f12, f28, rmm # perform operation
fnmsub.d f17, f22, f12, f28, rne # perform operation
fnmsub.d f17, f22, f12, f28, rtz # perform operation
fnmsub.d f17, f22, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f22, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f22, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f22, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f22, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f22, f12, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff8000000000000)
li x24, 0xf2023ddf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0x63acb596 # load x3 with 32 MSBs 0x0000000063acb596
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000063acb596
sw x3, 0(x2) # store x3 (0x63acb596) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000063acb596 from memory into f2
fnmsub.d f24, f21, f31, f2, dyn # perform operation
fnmsub.d f24, f21, f31, f2, rdn # perform operation
fnmsub.d f24, f21, f31, f2, rmm # perform operation
fnmsub.d f24, f21, f31, f2, rne # perform operation
fnmsub.d f24, f21, f31, f2, rtz # perform operation
fnmsub.d f24, f21, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f21, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f21, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f21, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f21, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f21, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff8000000000000)
li x12, 0xfe084b6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000001 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
li x3, 0x58b3b8d8 # load x3 with 32 MSBs 0x0000000058b3b8d8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000058b3b8d8
sw x3, 0(x2) # store x3 (0x58b3b8d8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000058b3b8d8 from memory into f28
fnmsub.d f12, f1, f14, f28, dyn # perform operation
fnmsub.d f12, f1, f14, f28, rdn # perform operation
fnmsub.d f12, f1, f14, f28, rmm # perform operation
fnmsub.d f12, f1, f14, f28, rne # perform operation
fnmsub.d f12, f1, f14, f28, rtz # perform operation
fnmsub.d f12, f1, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f1, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f1, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f1, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f1, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f1, f14, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x4000000000000000)
li x31, 0x54c07a3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000001 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
li x3, 0xa410380d # load x3 with 32 MSBs 0x00000000a410380d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a410380d
sw x3, 0(x2) # store x3 (0xa410380d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000a410380d from memory into f30
fnmsub.d f31, f1, f22, f30, dyn # perform operation
fnmsub.d f31, f1, f22, f30, rdn # perform operation
fnmsub.d f31, f1, f22, f30, rmm # perform operation
fnmsub.d f31, f1, f22, f30, rne # perform operation
fnmsub.d f31, f1, f22, f30, rtz # perform operation
fnmsub.d f31, f1, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f1, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f1, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f1, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f1, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f1, f22, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xc000000000000000)
li x1, 0xfa8a70ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
li x3, 0xd94da43e # load x3 with 32 MSBs 0x00000000d94da43e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d94da43e
sw x3, 0(x2) # store x3 (0xd94da43e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000d94da43e from memory into f12
fnmsub.d f1, f3, f6, f12, dyn # perform operation
fnmsub.d f1, f3, f6, f12, rdn # perform operation
fnmsub.d f1, f3, f6, f12, rmm # perform operation
fnmsub.d f1, f3, f6, f12, rne # perform operation
fnmsub.d f1, f3, f6, f12, rtz # perform operation
fnmsub.d f1, f3, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f3, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f3, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f3, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f3, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f3, f6, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x10000000000000)
li x12, 0x54d56219 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
li x3, 0xd5d2edfb # load x3 with 32 MSBs 0x00000000d5d2edfb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d5d2edfb
sw x3, 0(x2) # store x3 (0xd5d2edfb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000d5d2edfb from memory into f17
fnmsub.d f12, f5, f7, f17, dyn # perform operation
fnmsub.d f12, f5, f7, f17, rdn # perform operation
fnmsub.d f12, f5, f7, f17, rmm # perform operation
fnmsub.d f12, f5, f7, f17, rne # perform operation
fnmsub.d f12, f5, f7, f17, rtz # perform operation
fnmsub.d f12, f5, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f5, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f5, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f5, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f5, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f5, f7, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8010000000000000)
li x30, 0xd4e261e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
li x3, 0xa45c9dbc # load x3 with 32 MSBs 0x00000000a45c9dbc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a45c9dbc
sw x3, 0(x2) # store x3 (0xa45c9dbc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000a45c9dbc from memory into f19
fnmsub.d f30, f11, f15, f19, dyn # perform operation
fnmsub.d f30, f11, f15, f19, rdn # perform operation
fnmsub.d f30, f11, f15, f19, rmm # perform operation
fnmsub.d f30, f11, f15, f19, rne # perform operation
fnmsub.d f30, f11, f15, f19, rtz # perform operation
fnmsub.d f30, f11, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f11, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f11, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f11, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f11, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f11, f15, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fefffffffffffff)
li x4, 0xb0c43ff4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
li x3, 0x95910c36 # load x3 with 32 MSBs 0x0000000095910c36
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095910c36
sw x3, 0(x2) # store x3 (0x95910c36) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000095910c36 from memory into f19
fnmsub.d f4, f8, f14, f19, dyn # perform operation
fnmsub.d f4, f8, f14, f19, rdn # perform operation
fnmsub.d f4, f8, f14, f19, rmm # perform operation
fnmsub.d f4, f8, f14, f19, rne # perform operation
fnmsub.d f4, f8, f14, f19, rtz # perform operation
fnmsub.d f4, f8, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f8, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f8, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f8, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f8, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f8, f14, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xffefffffffffffff)
li x16, 0x55e2cd8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
li x3, 0xe73b2bd9 # load x3 with 32 MSBs 0x00000000e73b2bd9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e73b2bd9
sw x3, 0(x2) # store x3 (0xe73b2bd9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000e73b2bd9 from memory into f21
fnmsub.d f16, f2, f19, f21, dyn # perform operation
fnmsub.d f16, f2, f19, f21, rdn # perform operation
fnmsub.d f16, f2, f19, f21, rmm # perform operation
fnmsub.d f16, f2, f19, f21, rne # perform operation
fnmsub.d f16, f2, f19, f21, rtz # perform operation
fnmsub.d f16, f2, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f2, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f2, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f2, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f2, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f2, f19, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfffffffffffff)
li x24, 0xb00bbae2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
li x3, 0xdc3c76b3 # load x3 with 32 MSBs 0x00000000dc3c76b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc3c76b3
sw x3, 0(x2) # store x3 (0xdc3c76b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000dc3c76b3 from memory into f26
fnmsub.d f24, f15, f17, f26, dyn # perform operation
fnmsub.d f24, f15, f17, f26, rdn # perform operation
fnmsub.d f24, f15, f17, f26, rmm # perform operation
fnmsub.d f24, f15, f17, f26, rne # perform operation
fnmsub.d f24, f15, f17, f26, rtz # perform operation
fnmsub.d f24, f15, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f15, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f15, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f15, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f15, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f15, f17, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x800fffffffffffff)
li x12, 0x63424660 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
li x3, 0x8dc54444 # load x3 with 32 MSBs 0x000000008dc54444
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008dc54444
sw x3, 0(x2) # store x3 (0x8dc54444) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000008dc54444 from memory into f1
fnmsub.d f12, f13, f8, f1, dyn # perform operation
fnmsub.d f12, f13, f8, f1, rdn # perform operation
fnmsub.d f12, f13, f8, f1, rmm # perform operation
fnmsub.d f12, f13, f8, f1, rne # perform operation
fnmsub.d f12, f13, f8, f1, rtz # perform operation
fnmsub.d f12, f13, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f13, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f13, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f13, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f13, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f13, f8, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000)
li x1, 0x26fa5071 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
li x3, 0x85f4d92c # load x3 with 32 MSBs 0x0000000085f4d92c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000085f4d92c
sw x3, 0(x2) # store x3 (0x85f4d92c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000085f4d92c from memory into f5
fnmsub.d f1, f3, f26, f5, dyn # perform operation
fnmsub.d f1, f3, f26, f5, rdn # perform operation
fnmsub.d f1, f3, f26, f5, rmm # perform operation
fnmsub.d f1, f3, f26, f5, rne # perform operation
fnmsub.d f1, f3, f26, f5, rtz # perform operation
fnmsub.d f1, f3, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f3, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f3, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f3, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f3, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f3, f26, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8008000000000000)
li x1, 0x99c38956 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
li x3, 0x153acab9 # load x3 with 32 MSBs 0x00000000153acab9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000153acab9
sw x3, 0(x2) # store x3 (0x153acab9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000153acab9 from memory into f3
fnmsub.d f1, f5, f11, f3, dyn # perform operation
fnmsub.d f1, f5, f11, f3, rdn # perform operation
fnmsub.d f1, f5, f11, f3, rmm # perform operation
fnmsub.d f1, f5, f11, f3, rne # perform operation
fnmsub.d f1, f5, f11, f3, rtz # perform operation
fnmsub.d f1, f5, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f5, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f5, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f5, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f5, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f5, f11, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x1)
li x13, 0x5b8a40cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
li x3, 0xc98b42e0 # load x3 with 32 MSBs 0x00000000c98b42e0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c98b42e0
sw x3, 0(x2) # store x3 (0xc98b42e0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000c98b42e0 from memory into f2
fnmsub.d f13, f8, f6, f2, dyn # perform operation
fnmsub.d f13, f8, f6, f2, rdn # perform operation
fnmsub.d f13, f8, f6, f2, rmm # perform operation
fnmsub.d f13, f8, f6, f2, rne # perform operation
fnmsub.d f13, f8, f6, f2, rtz # perform operation
fnmsub.d f13, f8, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f8, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f8, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f8, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f8, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f8, f6, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000001)
li x8, 0xe8ca8456 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
li x3, 0x59ef0671 # load x3 with 32 MSBs 0x0000000059ef0671
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000059ef0671
sw x3, 0(x2) # store x3 (0x59ef0671) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000059ef0671 from memory into f29
fnmsub.d f8, f23, f25, f29, dyn # perform operation
fnmsub.d f8, f23, f25, f29, rdn # perform operation
fnmsub.d f8, f23, f25, f29, rmm # perform operation
fnmsub.d f8, f23, f25, f29, rne # perform operation
fnmsub.d f8, f23, f25, f29, rtz # perform operation
fnmsub.d f8, f23, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f23, f25, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000000)
li x13, 0xa525d721 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
li x3, 0x87d75847 # load x3 with 32 MSBs 0x0000000087d75847
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000087d75847
sw x3, 0(x2) # store x3 (0x87d75847) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000087d75847 from memory into f9
fnmsub.d f13, f23, f5, f9, dyn # perform operation
fnmsub.d f13, f23, f5, f9, rdn # perform operation
fnmsub.d f13, f23, f5, f9, rmm # perform operation
fnmsub.d f13, f23, f5, f9, rne # perform operation
fnmsub.d f13, f23, f5, f9, rtz # perform operation
fnmsub.d f13, f23, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f23, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f23, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f23, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f23, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f23, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfff0000000000000)
li x25, 0xb6f841f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000000 from memory into f31
li x3, 0xc96e3e4d # load x3 with 32 MSBs 0x00000000c96e3e4d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c96e3e4d
sw x3, 0(x2) # store x3 (0xc96e3e4d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000c96e3e4d from memory into f5
fnmsub.d f25, f13, f31, f5, dyn # perform operation
fnmsub.d f25, f13, f31, f5, rdn # perform operation
fnmsub.d f25, f13, f31, f5, rmm # perform operation
fnmsub.d f25, f13, f31, f5, rne # perform operation
fnmsub.d f25, f13, f31, f5, rtz # perform operation
fnmsub.d f25, f13, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f13, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f13, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f13, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f13, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f13, f31, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff8000000000000)
li x28, 0x9e7654f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
li x3, 0xdf52a6c4 # load x3 with 32 MSBs 0x00000000df52a6c4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000df52a6c4
sw x3, 0(x2) # store x3 (0xdf52a6c4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000df52a6c4 from memory into f1
fnmsub.d f28, f23, f18, f1, dyn # perform operation
fnmsub.d f28, f23, f18, f1, rdn # perform operation
fnmsub.d f28, f23, f18, f1, rmm # perform operation
fnmsub.d f28, f23, f18, f1, rne # perform operation
fnmsub.d f28, f23, f18, f1, rtz # perform operation
fnmsub.d f28, f23, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f23, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f23, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f23, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f23, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f23, f18, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fffffffffffffff)
li x20, 0x69b5da55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
li x3, 0xb4f09218 # load x3 with 32 MSBs 0x00000000b4f09218
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b4f09218
sw x3, 0(x2) # store x3 (0xb4f09218) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000b4f09218 from memory into f15
fnmsub.d f20, f17, f11, f15, dyn # perform operation
fnmsub.d f20, f17, f11, f15, rdn # perform operation
fnmsub.d f20, f17, f11, f15, rmm # perform operation
fnmsub.d f20, f17, f11, f15, rne # perform operation
fnmsub.d f20, f17, f11, f15, rtz # perform operation
fnmsub.d f20, f17, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f17, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f17, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f17, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f17, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f17, f11, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000001)
li x8, 0x88f27425 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
li x3, 0x5d73d45b # load x3 with 32 MSBs 0x000000005d73d45b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d73d45b
sw x3, 0(x2) # store x3 (0x5d73d45b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000005d73d45b from memory into f25
fnmsub.d f8, f14, f22, f25, dyn # perform operation
fnmsub.d f8, f14, f22, f25, rdn # perform operation
fnmsub.d f8, f14, f22, f25, rmm # perform operation
fnmsub.d f8, f14, f22, f25, rne # perform operation
fnmsub.d f8, f14, f22, f25, rtz # perform operation
fnmsub.d f8, f14, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f14, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f14, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f14, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f14, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f14, f22, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff7ffffffffffff)
li x5, 0x1d2a021b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
li x3, 0xb98181dc # load x3 with 32 MSBs 0x00000000b98181dc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b98181dc
sw x3, 0(x2) # store x3 (0xb98181dc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000b98181dc from memory into f3
fnmsub.d f5, f17, f24, f3, dyn # perform operation
fnmsub.d f5, f17, f24, f3, rdn # perform operation
fnmsub.d f5, f17, f24, f3, rmm # perform operation
fnmsub.d f5, f17, f24, f3, rne # perform operation
fnmsub.d f5, f17, f24, f3, rtz # perform operation
fnmsub.d f5, f17, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f17, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f17, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f17, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f17, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f17, f24, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x5a392534a57711ad)
li x2, 0xe8c9f4b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
li x3, 0xac8a496c # load x3 with 32 MSBs 0x00000000ac8a496c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac8a496c
sw x3, 0(x2) # store x3 (0xac8a496c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000ac8a496c from memory into f19
fnmsub.d f2, f17, f10, f19, dyn # perform operation
fnmsub.d f2, f17, f10, f19, rdn # perform operation
fnmsub.d f2, f17, f10, f19, rmm # perform operation
fnmsub.d f2, f17, f10, f19, rne # perform operation
fnmsub.d f2, f17, f10, f19, rtz # perform operation
fnmsub.d f2, f17, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f17, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f17, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f17, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f17, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f17, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xa6e895993737426c)
li x3, 0x5809810d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
li x3, 0x9f3d9e1c # load x3 with 32 MSBs 0x000000009f3d9e1c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f3d9e1c
sw x3, 0(x2) # store x3 (0x9f3d9e1c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000009f3d9e1c from memory into f1
fnmsub.d f3, f17, f26, f1, dyn # perform operation
fnmsub.d f3, f17, f26, f1, rdn # perform operation
fnmsub.d f3, f17, f26, f1, rmm # perform operation
fnmsub.d f3, f17, f26, f1, rne # perform operation
fnmsub.d f3, f17, f26, f1, rtz # perform operation
fnmsub.d f3, f17, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f17, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f17, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f17, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f17, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f17, f26, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x0)
li x27, 0x0addf350 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
li x3, 0xefb72a94 # load x3 with 32 MSBs 0x00000000efb72a94
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000efb72a94
sw x3, 0(x2) # store x3 (0xefb72a94) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000efb72a94 from memory into f14
fnmsub.d f27, f31, f6, f14, dyn # perform operation
fnmsub.d f27, f31, f6, f14, rdn # perform operation
fnmsub.d f27, f31, f6, f14, rmm # perform operation
fnmsub.d f27, f31, f6, f14, rne # perform operation
fnmsub.d f27, f31, f6, f14, rtz # perform operation
fnmsub.d f27, f31, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f31, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f31, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f31, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f31, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f31, f6, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000000)
li x17, 0x551e5d5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
li x3, 0xb30e1496 # load x3 with 32 MSBs 0x00000000b30e1496
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b30e1496
sw x3, 0(x2) # store x3 (0xb30e1496) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b30e1496 from memory into f23
fnmsub.d f17, f16, f30, f23, dyn # perform operation
fnmsub.d f17, f16, f30, f23, rdn # perform operation
fnmsub.d f17, f16, f30, f23, rmm # perform operation
fnmsub.d f17, f16, f30, f23, rne # perform operation
fnmsub.d f17, f16, f30, f23, rtz # perform operation
fnmsub.d f17, f16, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f16, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f16, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f16, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f16, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f16, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff0000000000000)
li x14, 0x7b3a66f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff7ffffffffffff from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
li x3, 0xed4b3f84 # load x3 with 32 MSBs 0x00000000ed4b3f84
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ed4b3f84
sw x3, 0(x2) # store x3 (0xed4b3f84) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000ed4b3f84 from memory into f25
fnmsub.d f14, f27, f7, f25, dyn # perform operation
fnmsub.d f14, f27, f7, f25, rdn # perform operation
fnmsub.d f14, f27, f7, f25, rmm # perform operation
fnmsub.d f14, f27, f7, f25, rne # perform operation
fnmsub.d f14, f27, f7, f25, rtz # perform operation
fnmsub.d f14, f27, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f27, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f27, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f27, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f27, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f27, f7, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff0000000000000)
li x19, 0x7adb6e34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0x6cf1325a # load x3 with 32 MSBs 0x000000006cf1325a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006cf1325a
sw x3, 0(x2) # store x3 (0x6cf1325a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000006cf1325a from memory into f4
fnmsub.d f19, f23, f12, f4, dyn # perform operation
fnmsub.d f19, f23, f12, f4, rdn # perform operation
fnmsub.d f19, f23, f12, f4, rmm # perform operation
fnmsub.d f19, f23, f12, f4, rne # perform operation
fnmsub.d f19, f23, f12, f4, rtz # perform operation
fnmsub.d f19, f23, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f23, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f23, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f23, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f23, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f23, f12, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff8000000000000)
li x5, 0x686e16bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0xec359213 # load x3 with 32 MSBs 0x00000000ec359213
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec359213
sw x3, 0(x2) # store x3 (0xec359213) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000ec359213 from memory into f8
fnmsub.d f5, f12, f18, f8, dyn # perform operation
fnmsub.d f5, f12, f18, f8, rdn # perform operation
fnmsub.d f5, f12, f18, f8, rmm # perform operation
fnmsub.d f5, f12, f18, f8, rne # perform operation
fnmsub.d f5, f12, f18, f8, rtz # perform operation
fnmsub.d f5, f12, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f12, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f12, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f12, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f12, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f12, f18, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff8000000000000)
li x30, 0xa3463704 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
li x3, 0x59bee641 # load x3 with 32 MSBs 0x0000000059bee641
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000059bee641
sw x3, 0(x2) # store x3 (0x59bee641) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000059bee641 from memory into f7
fnmsub.d f30, f31, f8, f7, dyn # perform operation
fnmsub.d f30, f31, f8, f7, rdn # perform operation
fnmsub.d f30, f31, f8, f7, rmm # perform operation
fnmsub.d f30, f31, f8, f7, rne # perform operation
fnmsub.d f30, f31, f8, f7, rtz # perform operation
fnmsub.d f30, f31, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f31, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f31, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f31, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f31, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f31, f8, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x4000000000000000)
li x30, 0xf79471f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff7ffffffffffff from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
li x3, 0xb9cdd827 # load x3 with 32 MSBs 0x00000000b9cdd827
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b9cdd827
sw x3, 0(x2) # store x3 (0xb9cdd827) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000b9cdd827 from memory into f18
fnmsub.d f30, f27, f29, f18, dyn # perform operation
fnmsub.d f30, f27, f29, f18, rdn # perform operation
fnmsub.d f30, f27, f29, f18, rmm # perform operation
fnmsub.d f30, f27, f29, f18, rne # perform operation
fnmsub.d f30, f27, f29, f18, rtz # perform operation
fnmsub.d f30, f27, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f27, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f27, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f27, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f27, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f27, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xc000000000000000)
li x11, 0xe0a2c8fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0x4310cd54 # load x3 with 32 MSBs 0x000000004310cd54
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004310cd54
sw x3, 0(x2) # store x3 (0x4310cd54) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000004310cd54 from memory into f29
fnmsub.d f11, f15, f1, f29, dyn # perform operation
fnmsub.d f11, f15, f1, f29, rdn # perform operation
fnmsub.d f11, f15, f1, f29, rmm # perform operation
fnmsub.d f11, f15, f1, f29, rne # perform operation
fnmsub.d f11, f15, f1, f29, rtz # perform operation
fnmsub.d f11, f15, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f15, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f15, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f15, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f15, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f15, f1, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x10000000000000)
li x29, 0x39282b3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
li x3, 0x2519f216 # load x3 with 32 MSBs 0x000000002519f216
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002519f216
sw x3, 0(x2) # store x3 (0x2519f216) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000002519f216 from memory into f13
fnmsub.d f29, f15, f25, f13, dyn # perform operation
fnmsub.d f29, f15, f25, f13, rdn # perform operation
fnmsub.d f29, f15, f25, f13, rmm # perform operation
fnmsub.d f29, f15, f25, f13, rne # perform operation
fnmsub.d f29, f15, f25, f13, rtz # perform operation
fnmsub.d f29, f15, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f15, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f15, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f15, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f15, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f15, f25, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8010000000000000)
li x24, 0x7c802a53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
li x3, 0x2fc3b898 # load x3 with 32 MSBs 0x000000002fc3b898
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002fc3b898
sw x3, 0(x2) # store x3 (0x2fc3b898) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000002fc3b898 from memory into f28
fnmsub.d f24, f29, f22, f28, dyn # perform operation
fnmsub.d f24, f29, f22, f28, rdn # perform operation
fnmsub.d f24, f29, f22, f28, rmm # perform operation
fnmsub.d f24, f29, f22, f28, rne # perform operation
fnmsub.d f24, f29, f22, f28, rtz # perform operation
fnmsub.d f24, f29, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f29, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f29, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f29, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f29, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f29, f22, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fefffffffffffff)
li x23, 0xdaaaf407 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
li x3, 0xada9aebe # load x3 with 32 MSBs 0x00000000ada9aebe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ada9aebe
sw x3, 0(x2) # store x3 (0xada9aebe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000ada9aebe from memory into f19
fnmsub.d f23, f11, f12, f19, dyn # perform operation
fnmsub.d f23, f11, f12, f19, rdn # perform operation
fnmsub.d f23, f11, f12, f19, rmm # perform operation
fnmsub.d f23, f11, f12, f19, rne # perform operation
fnmsub.d f23, f11, f12, f19, rtz # perform operation
fnmsub.d f23, f11, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f11, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f11, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f11, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f11, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f11, f12, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xffefffffffffffff)
li x12, 0xdadafa6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
li x3, 0xd2da1c76 # load x3 with 32 MSBs 0x00000000d2da1c76
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d2da1c76
sw x3, 0(x2) # store x3 (0xd2da1c76) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000d2da1c76 from memory into f8
fnmsub.d f12, f30, f3, f8, dyn # perform operation
fnmsub.d f12, f30, f3, f8, rdn # perform operation
fnmsub.d f12, f30, f3, f8, rmm # perform operation
fnmsub.d f12, f30, f3, f8, rne # perform operation
fnmsub.d f12, f30, f3, f8, rtz # perform operation
fnmsub.d f12, f30, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f30, f3, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfffffffffffff)
li x26, 0x5e1cdbb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
li x3, 0x2f26ade1 # load x3 with 32 MSBs 0x000000002f26ade1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f26ade1
sw x3, 0(x2) # store x3 (0x2f26ade1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000002f26ade1 from memory into f5
fnmsub.d f26, f24, f10, f5, dyn # perform operation
fnmsub.d f26, f24, f10, f5, rdn # perform operation
fnmsub.d f26, f24, f10, f5, rmm # perform operation
fnmsub.d f26, f24, f10, f5, rne # perform operation
fnmsub.d f26, f24, f10, f5, rtz # perform operation
fnmsub.d f26, f24, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f24, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f24, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f24, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f24, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f24, f10, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x800fffffffffffff)
li x2, 0xc860c440 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
li x3, 0x3de8fcbc # load x3 with 32 MSBs 0x000000003de8fcbc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003de8fcbc
sw x3, 0(x2) # store x3 (0x3de8fcbc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000003de8fcbc from memory into f5
fnmsub.d f2, f14, f22, f5, dyn # perform operation
fnmsub.d f2, f14, f22, f5, rdn # perform operation
fnmsub.d f2, f14, f22, f5, rmm # perform operation
fnmsub.d f2, f14, f22, f5, rne # perform operation
fnmsub.d f2, f14, f22, f5, rtz # perform operation
fnmsub.d f2, f14, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f14, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f14, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f14, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f14, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f14, f22, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000)
li x21, 0x543ec0f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
li x3, 0x4161c5c4 # load x3 with 32 MSBs 0x000000004161c5c4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004161c5c4
sw x3, 0(x2) # store x3 (0x4161c5c4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000004161c5c4 from memory into f16
fnmsub.d f21, f6, f25, f16, dyn # perform operation
fnmsub.d f21, f6, f25, f16, rdn # perform operation
fnmsub.d f21, f6, f25, f16, rmm # perform operation
fnmsub.d f21, f6, f25, f16, rne # perform operation
fnmsub.d f21, f6, f25, f16, rtz # perform operation
fnmsub.d f21, f6, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f6, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f6, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f6, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f6, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f6, f25, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8008000000000000)
li x2, 0x9f6dcfd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
li x3, 0x75a1c32d # load x3 with 32 MSBs 0x0000000075a1c32d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075a1c32d
sw x3, 0(x2) # store x3 (0x75a1c32d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000075a1c32d from memory into f14
fnmsub.d f2, f15, f8, f14, dyn # perform operation
fnmsub.d f2, f15, f8, f14, rdn # perform operation
fnmsub.d f2, f15, f8, f14, rmm # perform operation
fnmsub.d f2, f15, f8, f14, rne # perform operation
fnmsub.d f2, f15, f8, f14, rtz # perform operation
fnmsub.d f2, f15, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f15, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f15, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f15, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f15, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f15, f8, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x1)
li x6, 0xedb94ba5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
li x3, 0x84dede63 # load x3 with 32 MSBs 0x0000000084dede63
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084dede63
sw x3, 0(x2) # store x3 (0x84dede63) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000084dede63 from memory into f7
fnmsub.d f6, f14, f11, f7, dyn # perform operation
fnmsub.d f6, f14, f11, f7, rdn # perform operation
fnmsub.d f6, f14, f11, f7, rmm # perform operation
fnmsub.d f6, f14, f11, f7, rne # perform operation
fnmsub.d f6, f14, f11, f7, rtz # perform operation
fnmsub.d f6, f14, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f14, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f14, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f14, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f14, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f14, f11, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000001)
li x13, 0x6e4b4163 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
li x3, 0x5a9f7ca2 # load x3 with 32 MSBs 0x000000005a9f7ca2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005a9f7ca2
sw x3, 0(x2) # store x3 (0x5a9f7ca2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000005a9f7ca2 from memory into f30
fnmsub.d f13, f16, f22, f30, dyn # perform operation
fnmsub.d f13, f16, f22, f30, rdn # perform operation
fnmsub.d f13, f16, f22, f30, rmm # perform operation
fnmsub.d f13, f16, f22, f30, rne # perform operation
fnmsub.d f13, f16, f22, f30, rtz # perform operation
fnmsub.d f13, f16, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f16, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f16, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f16, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f16, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f16, f22, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000000)
li x30, 0x6ee092fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
li x3, 0xb1e8d814 # load x3 with 32 MSBs 0x00000000b1e8d814
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1e8d814
sw x3, 0(x2) # store x3 (0xb1e8d814) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000b1e8d814 from memory into f1
fnmsub.d f30, f6, f26, f1, dyn # perform operation
fnmsub.d f30, f6, f26, f1, rdn # perform operation
fnmsub.d f30, f6, f26, f1, rmm # perform operation
fnmsub.d f30, f6, f26, f1, rne # perform operation
fnmsub.d f30, f6, f26, f1, rtz # perform operation
fnmsub.d f30, f6, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f6, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f6, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f6, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f6, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f6, f26, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfff0000000000000)
li x14, 0x4d48af40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
li x3, 0x092d7b74 # load x3 with 32 MSBs 0x00000000092d7b74
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000092d7b74
sw x3, 0(x2) # store x3 (0x092d7b74) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000092d7b74 from memory into f30
fnmsub.d f14, f8, f29, f30, dyn # perform operation
fnmsub.d f14, f8, f29, f30, rdn # perform operation
fnmsub.d f14, f8, f29, f30, rmm # perform operation
fnmsub.d f14, f8, f29, f30, rne # perform operation
fnmsub.d f14, f8, f29, f30, rtz # perform operation
fnmsub.d f14, f8, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f8, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f8, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f8, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f8, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f8, f29, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff8000000000000)
li x31, 0xed97910a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
li x3, 0x47362538 # load x3 with 32 MSBs 0x0000000047362538
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000047362538
sw x3, 0(x2) # store x3 (0x47362538) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000047362538 from memory into f2
fnmsub.d f31, f8, f10, f2, dyn # perform operation
fnmsub.d f31, f8, f10, f2, rdn # perform operation
fnmsub.d f31, f8, f10, f2, rmm # perform operation
fnmsub.d f31, f8, f10, f2, rne # perform operation
fnmsub.d f31, f8, f10, f2, rtz # perform operation
fnmsub.d f31, f8, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f8, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f8, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f8, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f8, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f8, f10, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fffffffffffffff)
li x17, 0xd71f86a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fffffffffffffff from memory into f13
li x3, 0x85b7d3e7 # load x3 with 32 MSBs 0x0000000085b7d3e7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000085b7d3e7
sw x3, 0(x2) # store x3 (0x85b7d3e7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000085b7d3e7 from memory into f22
fnmsub.d f17, f9, f13, f22, dyn # perform operation
fnmsub.d f17, f9, f13, f22, rdn # perform operation
fnmsub.d f17, f9, f13, f22, rmm # perform operation
fnmsub.d f17, f9, f13, f22, rne # perform operation
fnmsub.d f17, f9, f13, f22, rtz # perform operation
fnmsub.d f17, f9, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f9, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f9, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f9, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f9, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f9, f13, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000001)
li x6, 0x94427212 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000001 from memory into f24
li x3, 0xbf511c6d # load x3 with 32 MSBs 0x00000000bf511c6d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf511c6d
sw x3, 0(x2) # store x3 (0xbf511c6d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000bf511c6d from memory into f21
fnmsub.d f6, f11, f24, f21, dyn # perform operation
fnmsub.d f6, f11, f24, f21, rdn # perform operation
fnmsub.d f6, f11, f24, f21, rmm # perform operation
fnmsub.d f6, f11, f24, f21, rne # perform operation
fnmsub.d f6, f11, f24, f21, rtz # perform operation
fnmsub.d f6, f11, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f11, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f11, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f11, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f11, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f11, f24, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff7ffffffffffff)
li x26, 0xe18b79ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
li x3, 0xde52110e # load x3 with 32 MSBs 0x00000000de52110e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000de52110e
sw x3, 0(x2) # store x3 (0xde52110e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000de52110e from memory into f16
fnmsub.d f26, f11, f20, f16, dyn # perform operation
fnmsub.d f26, f11, f20, f16, rdn # perform operation
fnmsub.d f26, f11, f20, f16, rmm # perform operation
fnmsub.d f26, f11, f20, f16, rne # perform operation
fnmsub.d f26, f11, f20, f16, rtz # perform operation
fnmsub.d f26, f11, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f11, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f11, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f11, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f11, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f11, f20, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x5a392534a57711ad)
li x30, 0x0729ac8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0x58b0dd1c # load x3 with 32 MSBs 0x0000000058b0dd1c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000058b0dd1c
sw x3, 0(x2) # store x3 (0x58b0dd1c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000058b0dd1c from memory into f22
fnmsub.d f30, f15, f1, f22, dyn # perform operation
fnmsub.d f30, f15, f1, f22, rdn # perform operation
fnmsub.d f30, f15, f1, f22, rmm # perform operation
fnmsub.d f30, f15, f1, f22, rne # perform operation
fnmsub.d f30, f15, f1, f22, rtz # perform operation
fnmsub.d f30, f15, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f15, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f15, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f15, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f15, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f15, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xa6e895993737426c)
li x4, 0x318035ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
li x3, 0x31400bbd # load x3 with 32 MSBs 0x0000000031400bbd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031400bbd
sw x3, 0(x2) # store x3 (0x31400bbd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000031400bbd from memory into f19
fnmsub.d f4, f30, f31, f19, dyn # perform operation
fnmsub.d f4, f30, f31, f19, rdn # perform operation
fnmsub.d f4, f30, f31, f19, rmm # perform operation
fnmsub.d f4, f30, f31, f19, rne # perform operation
fnmsub.d f4, f30, f31, f19, rtz # perform operation
fnmsub.d f4, f30, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f30, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f30, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f30, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f30, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f30, f31, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x0)
li x10, 0x57e158f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0xbbed161f # load x3 with 32 MSBs 0x00000000bbed161f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bbed161f
sw x3, 0(x2) # store x3 (0xbbed161f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000bbed161f from memory into f12
fnmsub.d f10, f13, f2, f12, dyn # perform operation
fnmsub.d f10, f13, f2, f12, rdn # perform operation
fnmsub.d f10, f13, f2, f12, rmm # perform operation
fnmsub.d f10, f13, f2, f12, rne # perform operation
fnmsub.d f10, f13, f2, f12, rtz # perform operation
fnmsub.d f10, f13, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f13, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f13, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f13, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f13, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f13, f2, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000000)
li x3, 0x9bbafa91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
li x3, 0x1e41e43e # load x3 with 32 MSBs 0x000000001e41e43e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e41e43e
sw x3, 0(x2) # store x3 (0x1e41e43e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000001e41e43e from memory into f1
fnmsub.d f3, f27, f18, f1, dyn # perform operation
fnmsub.d f3, f27, f18, f1, rdn # perform operation
fnmsub.d f3, f27, f18, f1, rmm # perform operation
fnmsub.d f3, f27, f18, f1, rne # perform operation
fnmsub.d f3, f27, f18, f1, rtz # perform operation
fnmsub.d f3, f27, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f27, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f27, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f27, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f27, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f27, f18, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff0000000000000)
li x20, 0x8521bcb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
li x3, 0x1be522b8 # load x3 with 32 MSBs 0x000000001be522b8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001be522b8
sw x3, 0(x2) # store x3 (0x1be522b8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000001be522b8 from memory into f27
fnmsub.d f20, f30, f2, f27, dyn # perform operation
fnmsub.d f20, f30, f2, f27, rdn # perform operation
fnmsub.d f20, f30, f2, f27, rmm # perform operation
fnmsub.d f20, f30, f2, f27, rne # perform operation
fnmsub.d f20, f30, f2, f27, rtz # perform operation
fnmsub.d f20, f30, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f30, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f30, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f30, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f30, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f30, f2, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff0000000000000)
li x30, 0x86a4d931 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
li x3, 0x143d0487 # load x3 with 32 MSBs 0x00000000143d0487
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000143d0487
sw x3, 0(x2) # store x3 (0x143d0487) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000143d0487 from memory into f13
fnmsub.d f30, f3, f2, f13, dyn # perform operation
fnmsub.d f30, f3, f2, f13, rdn # perform operation
fnmsub.d f30, f3, f2, f13, rmm # perform operation
fnmsub.d f30, f3, f2, f13, rne # perform operation
fnmsub.d f30, f3, f2, f13, rtz # perform operation
fnmsub.d f30, f3, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f3, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f3, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f3, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f3, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f3, f2, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff8000000000000)
li x9, 0xb821c56c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
li x3, 0x25c620c7 # load x3 with 32 MSBs 0x0000000025c620c7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000025c620c7
sw x3, 0(x2) # store x3 (0x25c620c7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000025c620c7 from memory into f30
fnmsub.d f9, f18, f21, f30, dyn # perform operation
fnmsub.d f9, f18, f21, f30, rdn # perform operation
fnmsub.d f9, f18, f21, f30, rmm # perform operation
fnmsub.d f9, f18, f21, f30, rne # perform operation
fnmsub.d f9, f18, f21, f30, rtz # perform operation
fnmsub.d f9, f18, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f18, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f18, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f18, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f18, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f18, f21, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff8000000000000)
li x29, 0x4d3a3616 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
li x3, 0x3b19f95e # load x3 with 32 MSBs 0x000000003b19f95e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003b19f95e
sw x3, 0(x2) # store x3 (0x3b19f95e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000003b19f95e from memory into f12
fnmsub.d f29, f18, f16, f12, dyn # perform operation
fnmsub.d f29, f18, f16, f12, rdn # perform operation
fnmsub.d f29, f18, f16, f12, rmm # perform operation
fnmsub.d f29, f18, f16, f12, rne # perform operation
fnmsub.d f29, f18, f16, f12, rtz # perform operation
fnmsub.d f29, f18, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f18, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f18, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f18, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f18, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f18, f16, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x4000000000000000)
li x18, 0xaa33376b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
li x3, 0x4d526bce # load x3 with 32 MSBs 0x000000004d526bce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d526bce
sw x3, 0(x2) # store x3 (0x4d526bce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000004d526bce from memory into f2
fnmsub.d f18, f14, f21, f2, dyn # perform operation
fnmsub.d f18, f14, f21, f2, rdn # perform operation
fnmsub.d f18, f14, f21, f2, rmm # perform operation
fnmsub.d f18, f14, f21, f2, rne # perform operation
fnmsub.d f18, f14, f21, f2, rtz # perform operation
fnmsub.d f18, f14, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f14, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f14, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f14, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f14, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f14, f21, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xc000000000000000)
li x7, 0x87077cb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
li x3, 0xf72347e4 # load x3 with 32 MSBs 0x00000000f72347e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f72347e4
sw x3, 0(x2) # store x3 (0xf72347e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000f72347e4 from memory into f13
fnmsub.d f7, f16, f21, f13, dyn # perform operation
fnmsub.d f7, f16, f21, f13, rdn # perform operation
fnmsub.d f7, f16, f21, f13, rmm # perform operation
fnmsub.d f7, f16, f21, f13, rne # perform operation
fnmsub.d f7, f16, f21, f13, rtz # perform operation
fnmsub.d f7, f16, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f16, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f16, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f16, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f16, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f16, f21, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x10000000000000)
li x20, 0x32cf2edc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
li x3, 0x2a86908c # load x3 with 32 MSBs 0x000000002a86908c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a86908c
sw x3, 0(x2) # store x3 (0x2a86908c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000002a86908c from memory into f22
fnmsub.d f20, f2, f31, f22, dyn # perform operation
fnmsub.d f20, f2, f31, f22, rdn # perform operation
fnmsub.d f20, f2, f31, f22, rmm # perform operation
fnmsub.d f20, f2, f31, f22, rne # perform operation
fnmsub.d f20, f2, f31, f22, rtz # perform operation
fnmsub.d f20, f2, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f2, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f2, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f2, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f2, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f2, f31, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8010000000000000)
li x29, 0x9d84ec46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
li x3, 0x50b5f324 # load x3 with 32 MSBs 0x0000000050b5f324
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050b5f324
sw x3, 0(x2) # store x3 (0x50b5f324) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000050b5f324 from memory into f14
fnmsub.d f29, f6, f15, f14, dyn # perform operation
fnmsub.d f29, f6, f15, f14, rdn # perform operation
fnmsub.d f29, f6, f15, f14, rmm # perform operation
fnmsub.d f29, f6, f15, f14, rne # perform operation
fnmsub.d f29, f6, f15, f14, rtz # perform operation
fnmsub.d f29, f6, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f6, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f6, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f6, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f6, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f6, f15, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fefffffffffffff)
li x5, 0x38768b6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
li x3, 0xc4764e82 # load x3 with 32 MSBs 0x00000000c4764e82
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4764e82
sw x3, 0(x2) # store x3 (0xc4764e82) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000c4764e82 from memory into f3
fnmsub.d f5, f1, f24, f3, dyn # perform operation
fnmsub.d f5, f1, f24, f3, rdn # perform operation
fnmsub.d f5, f1, f24, f3, rmm # perform operation
fnmsub.d f5, f1, f24, f3, rne # perform operation
fnmsub.d f5, f1, f24, f3, rtz # perform operation
fnmsub.d f5, f1, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f1, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f1, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f1, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f1, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f1, f24, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xffefffffffffffff)
li x22, 0xb2091648 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
li x3, 0x9eb03bfd # load x3 with 32 MSBs 0x000000009eb03bfd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009eb03bfd
sw x3, 0(x2) # store x3 (0x9eb03bfd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000009eb03bfd from memory into f17
fnmsub.d f22, f10, f5, f17, dyn # perform operation
fnmsub.d f22, f10, f5, f17, rdn # perform operation
fnmsub.d f22, f10, f5, f17, rmm # perform operation
fnmsub.d f22, f10, f5, f17, rne # perform operation
fnmsub.d f22, f10, f5, f17, rtz # perform operation
fnmsub.d f22, f10, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f10, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f10, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f10, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f10, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f10, f5, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfffffffffffff)
li x29, 0x07ac562a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0xe39f1ce2 # load x3 with 32 MSBs 0x00000000e39f1ce2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e39f1ce2
sw x3, 0(x2) # store x3 (0xe39f1ce2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000e39f1ce2 from memory into f22
fnmsub.d f29, f16, f8, f22, dyn # perform operation
fnmsub.d f29, f16, f8, f22, rdn # perform operation
fnmsub.d f29, f16, f8, f22, rmm # perform operation
fnmsub.d f29, f16, f8, f22, rne # perform operation
fnmsub.d f29, f16, f8, f22, rtz # perform operation
fnmsub.d f29, f16, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f16, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f16, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f16, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f16, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f16, f8, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x800fffffffffffff)
li x17, 0x1d19152f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
li x3, 0xabdca9a3 # load x3 with 32 MSBs 0x00000000abdca9a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000abdca9a3
sw x3, 0(x2) # store x3 (0xabdca9a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000abdca9a3 from memory into f11
fnmsub.d f17, f21, f16, f11, dyn # perform operation
fnmsub.d f17, f21, f16, f11, rdn # perform operation
fnmsub.d f17, f21, f16, f11, rmm # perform operation
fnmsub.d f17, f21, f16, f11, rne # perform operation
fnmsub.d f17, f21, f16, f11, rtz # perform operation
fnmsub.d f17, f21, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f21, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f21, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f21, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f21, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f21, f16, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000)
li x30, 0x9ef6b2aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
li x3, 0xeb54e740 # load x3 with 32 MSBs 0x00000000eb54e740
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb54e740
sw x3, 0(x2) # store x3 (0xeb54e740) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000eb54e740 from memory into f12
fnmsub.d f30, f15, f25, f12, dyn # perform operation
fnmsub.d f30, f15, f25, f12, rdn # perform operation
fnmsub.d f30, f15, f25, f12, rmm # perform operation
fnmsub.d f30, f15, f25, f12, rne # perform operation
fnmsub.d f30, f15, f25, f12, rtz # perform operation
fnmsub.d f30, f15, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f15, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f15, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f15, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f15, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f15, f25, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8008000000000000)
li x13, 0x26be4ecc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
li x3, 0x88d53b06 # load x3 with 32 MSBs 0x0000000088d53b06
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000088d53b06
sw x3, 0(x2) # store x3 (0x88d53b06) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000088d53b06 from memory into f23
fnmsub.d f13, f14, f10, f23, dyn # perform operation
fnmsub.d f13, f14, f10, f23, rdn # perform operation
fnmsub.d f13, f14, f10, f23, rmm # perform operation
fnmsub.d f13, f14, f10, f23, rne # perform operation
fnmsub.d f13, f14, f10, f23, rtz # perform operation
fnmsub.d f13, f14, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f14, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f14, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f14, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f14, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f14, f10, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x1)
li x8, 0xd4089bfd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
li x3, 0x66e9bc66 # load x3 with 32 MSBs 0x0000000066e9bc66
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066e9bc66
sw x3, 0(x2) # store x3 (0x66e9bc66) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000066e9bc66 from memory into f20
fnmsub.d f8, f13, f16, f20, dyn # perform operation
fnmsub.d f8, f13, f16, f20, rdn # perform operation
fnmsub.d f8, f13, f16, f20, rmm # perform operation
fnmsub.d f8, f13, f16, f20, rne # perform operation
fnmsub.d f8, f13, f16, f20, rtz # perform operation
fnmsub.d f8, f13, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f13, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f13, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f13, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f13, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f13, f16, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000001)
li x9, 0xc4ebe4c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
li x3, 0xc26797e2 # load x3 with 32 MSBs 0x00000000c26797e2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c26797e2
sw x3, 0(x2) # store x3 (0xc26797e2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000c26797e2 from memory into f14
fnmsub.d f9, f29, f6, f14, dyn # perform operation
fnmsub.d f9, f29, f6, f14, rdn # perform operation
fnmsub.d f9, f29, f6, f14, rmm # perform operation
fnmsub.d f9, f29, f6, f14, rne # perform operation
fnmsub.d f9, f29, f6, f14, rtz # perform operation
fnmsub.d f9, f29, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f29, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f29, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f29, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f29, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f29, f6, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000000)
li x10, 0x654bd60e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
li x3, 0x9d783924 # load x3 with 32 MSBs 0x000000009d783924
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d783924
sw x3, 0(x2) # store x3 (0x9d783924) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000009d783924 from memory into f19
fnmsub.d f10, f21, f30, f19, dyn # perform operation
fnmsub.d f10, f21, f30, f19, rdn # perform operation
fnmsub.d f10, f21, f30, f19, rmm # perform operation
fnmsub.d f10, f21, f30, f19, rne # perform operation
fnmsub.d f10, f21, f30, f19, rtz # perform operation
fnmsub.d f10, f21, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f21, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f21, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f21, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f21, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f21, f30, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfff0000000000000)
li x24, 0x8d8493a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
li x3, 0x87454859 # load x3 with 32 MSBs 0x0000000087454859
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000087454859
sw x3, 0(x2) # store x3 (0x87454859) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000087454859 from memory into f14
fnmsub.d f24, f10, f12, f14, dyn # perform operation
fnmsub.d f24, f10, f12, f14, rdn # perform operation
fnmsub.d f24, f10, f12, f14, rmm # perform operation
fnmsub.d f24, f10, f12, f14, rne # perform operation
fnmsub.d f24, f10, f12, f14, rtz # perform operation
fnmsub.d f24, f10, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f10, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f10, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f10, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f10, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f10, f12, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff8000000000000)
li x13, 0x9ea76964 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
li x3, 0x2af05f63 # load x3 with 32 MSBs 0x000000002af05f63
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002af05f63
sw x3, 0(x2) # store x3 (0x2af05f63) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000002af05f63 from memory into f11
fnmsub.d f13, f3, f29, f11, dyn # perform operation
fnmsub.d f13, f3, f29, f11, rdn # perform operation
fnmsub.d f13, f3, f29, f11, rmm # perform operation
fnmsub.d f13, f3, f29, f11, rne # perform operation
fnmsub.d f13, f3, f29, f11, rtz # perform operation
fnmsub.d f13, f3, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f3, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f3, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f3, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f3, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f3, f29, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fffffffffffffff)
li x8, 0xcb689a8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
li x3, 0x3c75ee48 # load x3 with 32 MSBs 0x000000003c75ee48
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003c75ee48
sw x3, 0(x2) # store x3 (0x3c75ee48) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000003c75ee48 from memory into f15
fnmsub.d f8, f4, f9, f15, dyn # perform operation
fnmsub.d f8, f4, f9, f15, rdn # perform operation
fnmsub.d f8, f4, f9, f15, rmm # perform operation
fnmsub.d f8, f4, f9, f15, rne # perform operation
fnmsub.d f8, f4, f9, f15, rtz # perform operation
fnmsub.d f8, f4, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f4, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f4, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f4, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f4, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f4, f9, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000001)
li x27, 0x9992be58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
li x3, 0x4a45bc53 # load x3 with 32 MSBs 0x000000004a45bc53
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004a45bc53
sw x3, 0(x2) # store x3 (0x4a45bc53) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000004a45bc53 from memory into f25
fnmsub.d f27, f31, f21, f25, dyn # perform operation
fnmsub.d f27, f31, f21, f25, rdn # perform operation
fnmsub.d f27, f31, f21, f25, rmm # perform operation
fnmsub.d f27, f31, f21, f25, rne # perform operation
fnmsub.d f27, f31, f21, f25, rtz # perform operation
fnmsub.d f27, f31, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f31, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f31, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f31, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f31, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f31, f21, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff7ffffffffffff)
li x31, 0xf068ef80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
li x3, 0x50b438c7 # load x3 with 32 MSBs 0x0000000050b438c7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050b438c7
sw x3, 0(x2) # store x3 (0x50b438c7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000050b438c7 from memory into f19
fnmsub.d f31, f27, f6, f19, dyn # perform operation
fnmsub.d f31, f27, f6, f19, rdn # perform operation
fnmsub.d f31, f27, f6, f19, rmm # perform operation
fnmsub.d f31, f27, f6, f19, rne # perform operation
fnmsub.d f31, f27, f6, f19, rtz # perform operation
fnmsub.d f31, f27, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f27, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f27, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f27, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f27, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f27, f6, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x5a392534a57711ad)
li x13, 0x786c101a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
li x3, 0xec7d989d # load x3 with 32 MSBs 0x00000000ec7d989d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec7d989d
sw x3, 0(x2) # store x3 (0xec7d989d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000ec7d989d from memory into f27
fnmsub.d f13, f22, f2, f27, dyn # perform operation
fnmsub.d f13, f22, f2, f27, rdn # perform operation
fnmsub.d f13, f22, f2, f27, rmm # perform operation
fnmsub.d f13, f22, f2, f27, rne # perform operation
fnmsub.d f13, f22, f2, f27, rtz # perform operation
fnmsub.d f13, f22, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f22, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f22, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f22, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f22, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f22, f2, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xa6e895993737426c)
li x4, 0x01782814 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
li x3, 0xa3a795bb # load x3 with 32 MSBs 0x00000000a3a795bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a3a795bb
sw x3, 0(x2) # store x3 (0xa3a795bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000a3a795bb from memory into f15
fnmsub.d f4, f6, f27, f15, dyn # perform operation
fnmsub.d f4, f6, f27, f15, rdn # perform operation
fnmsub.d f4, f6, f27, f15, rmm # perform operation
fnmsub.d f4, f6, f27, f15, rne # perform operation
fnmsub.d f4, f6, f27, f15, rtz # perform operation
fnmsub.d f4, f6, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f6, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f6, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f6, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f6, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f6, f27, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x0)
li x10, 0xeba77251 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000000 from memory into f29
li x3, 0x887aadf9 # load x3 with 32 MSBs 0x00000000887aadf9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000887aadf9
sw x3, 0(x2) # store x3 (0x887aadf9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000887aadf9 from memory into f21
fnmsub.d f10, f2, f29, f21, dyn # perform operation
fnmsub.d f10, f2, f29, f21, rdn # perform operation
fnmsub.d f10, f2, f29, f21, rmm # perform operation
fnmsub.d f10, f2, f29, f21, rne # perform operation
fnmsub.d f10, f2, f29, f21, rtz # perform operation
fnmsub.d f10, f2, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f2, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f2, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f2, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f2, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f2, f29, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000000)
li x2, 0x92ebc22b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
li x3, 0xc82c2cc6 # load x3 with 32 MSBs 0x00000000c82c2cc6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c82c2cc6
sw x3, 0(x2) # store x3 (0xc82c2cc6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000c82c2cc6 from memory into f9
fnmsub.d f2, f20, f12, f9, dyn # perform operation
fnmsub.d f2, f20, f12, f9, rdn # perform operation
fnmsub.d f2, f20, f12, f9, rmm # perform operation
fnmsub.d f2, f20, f12, f9, rne # perform operation
fnmsub.d f2, f20, f12, f9, rtz # perform operation
fnmsub.d f2, f20, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f20, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f20, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f20, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f20, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f20, f12, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff0000000000000)
li x16, 0x93c225ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff0000000000000 from memory into f19
li x3, 0x9656cfc8 # load x3 with 32 MSBs 0x000000009656cfc8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009656cfc8
sw x3, 0(x2) # store x3 (0x9656cfc8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000009656cfc8 from memory into f28
fnmsub.d f16, f12, f19, f28, dyn # perform operation
fnmsub.d f16, f12, f19, f28, rdn # perform operation
fnmsub.d f16, f12, f19, f28, rmm # perform operation
fnmsub.d f16, f12, f19, f28, rne # perform operation
fnmsub.d f16, f12, f19, f28, rtz # perform operation
fnmsub.d f16, f12, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f12, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f12, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f12, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f12, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f12, f19, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff0000000000000)
li x10, 0x12aaf880 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
li x3, 0xd6dac684 # load x3 with 32 MSBs 0x00000000d6dac684
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d6dac684
sw x3, 0(x2) # store x3 (0xd6dac684) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000d6dac684 from memory into f18
fnmsub.d f10, f7, f19, f18, dyn # perform operation
fnmsub.d f10, f7, f19, f18, rdn # perform operation
fnmsub.d f10, f7, f19, f18, rmm # perform operation
fnmsub.d f10, f7, f19, f18, rne # perform operation
fnmsub.d f10, f7, f19, f18, rtz # perform operation
fnmsub.d f10, f7, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f7, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f7, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f7, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f7, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f7, f19, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff8000000000000)
li x6, 0x23591386 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
li x3, 0xb742f6af # load x3 with 32 MSBs 0x00000000b742f6af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b742f6af
sw x3, 0(x2) # store x3 (0xb742f6af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b742f6af from memory into f23
fnmsub.d f6, f29, f21, f23, dyn # perform operation
fnmsub.d f6, f29, f21, f23, rdn # perform operation
fnmsub.d f6, f29, f21, f23, rmm # perform operation
fnmsub.d f6, f29, f21, f23, rne # perform operation
fnmsub.d f6, f29, f21, f23, rtz # perform operation
fnmsub.d f6, f29, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f29, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f29, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f29, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f29, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f29, f21, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff8000000000000)
li x25, 0xd4c595c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
li x3, 0x4f00f9cb # load x3 with 32 MSBs 0x000000004f00f9cb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f00f9cb
sw x3, 0(x2) # store x3 (0x4f00f9cb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000004f00f9cb from memory into f18
fnmsub.d f25, f16, f17, f18, dyn # perform operation
fnmsub.d f25, f16, f17, f18, rdn # perform operation
fnmsub.d f25, f16, f17, f18, rmm # perform operation
fnmsub.d f25, f16, f17, f18, rne # perform operation
fnmsub.d f25, f16, f17, f18, rtz # perform operation
fnmsub.d f25, f16, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f16, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f16, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f16, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f16, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f16, f17, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x4000000000000000)
li x6, 0x99705cb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
li x3, 0x84d73549 # load x3 with 32 MSBs 0x0000000084d73549
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084d73549
sw x3, 0(x2) # store x3 (0x84d73549) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000084d73549 from memory into f2
fnmsub.d f6, f31, f23, f2, dyn # perform operation
fnmsub.d f6, f31, f23, f2, rdn # perform operation
fnmsub.d f6, f31, f23, f2, rmm # perform operation
fnmsub.d f6, f31, f23, f2, rne # perform operation
fnmsub.d f6, f31, f23, f2, rtz # perform operation
fnmsub.d f6, f31, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f31, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f31, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f31, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f31, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f31, f23, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xc000000000000000)
li x2, 0x2958d932 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
li x3, 0xc8ab107f # load x3 with 32 MSBs 0x00000000c8ab107f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c8ab107f
sw x3, 0(x2) # store x3 (0xc8ab107f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000c8ab107f from memory into f14
fnmsub.d f2, f7, f12, f14, dyn # perform operation
fnmsub.d f2, f7, f12, f14, rdn # perform operation
fnmsub.d f2, f7, f12, f14, rmm # perform operation
fnmsub.d f2, f7, f12, f14, rne # perform operation
fnmsub.d f2, f7, f12, f14, rtz # perform operation
fnmsub.d f2, f7, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f7, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f7, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f7, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f7, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f7, f12, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x10000000000000)
li x11, 0xf137d78f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
li x3, 0x8321603d # load x3 with 32 MSBs 0x000000008321603d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008321603d
sw x3, 0(x2) # store x3 (0x8321603d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000008321603d from memory into f19
fnmsub.d f11, f7, f23, f19, dyn # perform operation
fnmsub.d f11, f7, f23, f19, rdn # perform operation
fnmsub.d f11, f7, f23, f19, rmm # perform operation
fnmsub.d f11, f7, f23, f19, rne # perform operation
fnmsub.d f11, f7, f23, f19, rtz # perform operation
fnmsub.d f11, f7, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f7, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f7, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f7, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f7, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f7, f23, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8010000000000000)
li x14, 0x11b3ce0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xa6e895993737426c from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
li x3, 0xdd2d0843 # load x3 with 32 MSBs 0x00000000dd2d0843
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd2d0843
sw x3, 0(x2) # store x3 (0xdd2d0843) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000dd2d0843 from memory into f28
fnmsub.d f14, f11, f23, f28, dyn # perform operation
fnmsub.d f14, f11, f23, f28, rdn # perform operation
fnmsub.d f14, f11, f23, f28, rmm # perform operation
fnmsub.d f14, f11, f23, f28, rne # perform operation
fnmsub.d f14, f11, f23, f28, rtz # perform operation
fnmsub.d f14, f11, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f11, f23, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fefffffffffffff)
li x5, 0xb284fce6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
li x3, 0x8e8bc79f # load x3 with 32 MSBs 0x000000008e8bc79f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e8bc79f
sw x3, 0(x2) # store x3 (0x8e8bc79f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000008e8bc79f from memory into f22
fnmsub.d f5, f20, f12, f22, dyn # perform operation
fnmsub.d f5, f20, f12, f22, rdn # perform operation
fnmsub.d f5, f20, f12, f22, rmm # perform operation
fnmsub.d f5, f20, f12, f22, rne # perform operation
fnmsub.d f5, f20, f12, f22, rtz # perform operation
fnmsub.d f5, f20, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f20, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f20, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f20, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f20, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f20, f12, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xffefffffffffffff)
li x14, 0xe160fa4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
li x3, 0xa04df010 # load x3 with 32 MSBs 0x00000000a04df010
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a04df010
sw x3, 0(x2) # store x3 (0xa04df010) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000a04df010 from memory into f10
fnmsub.d f14, f9, f18, f10, dyn # perform operation
fnmsub.d f14, f9, f18, f10, rdn # perform operation
fnmsub.d f14, f9, f18, f10, rmm # perform operation
fnmsub.d f14, f9, f18, f10, rne # perform operation
fnmsub.d f14, f9, f18, f10, rtz # perform operation
fnmsub.d f14, f9, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f9, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfffffffffffff)
li x25, 0x8b99d6a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
li x3, 0xf9bf881e # load x3 with 32 MSBs 0x00000000f9bf881e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f9bf881e
sw x3, 0(x2) # store x3 (0xf9bf881e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000f9bf881e from memory into f7
fnmsub.d f25, f31, f19, f7, dyn # perform operation
fnmsub.d f25, f31, f19, f7, rdn # perform operation
fnmsub.d f25, f31, f19, f7, rmm # perform operation
fnmsub.d f25, f31, f19, f7, rne # perform operation
fnmsub.d f25, f31, f19, f7, rtz # perform operation
fnmsub.d f25, f31, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f31, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f31, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f31, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f31, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f31, f19, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x800fffffffffffff)
li x11, 0x570ee229 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xa6e895993737426c from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
li x3, 0x6894a557 # load x3 with 32 MSBs 0x000000006894a557
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006894a557
sw x3, 0(x2) # store x3 (0x6894a557) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000006894a557 from memory into f7
fnmsub.d f11, f13, f15, f7, dyn # perform operation
fnmsub.d f11, f13, f15, f7, rdn # perform operation
fnmsub.d f11, f13, f15, f7, rmm # perform operation
fnmsub.d f11, f13, f15, f7, rne # perform operation
fnmsub.d f11, f13, f15, f7, rtz # perform operation
fnmsub.d f11, f13, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f13, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f13, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f13, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f13, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f13, f15, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000)
li x24, 0x146120df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
li x3, 0x5985ea1e # load x3 with 32 MSBs 0x000000005985ea1e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005985ea1e
sw x3, 0(x2) # store x3 (0x5985ea1e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000005985ea1e from memory into f19
fnmsub.d f24, f31, f15, f19, dyn # perform operation
fnmsub.d f24, f31, f15, f19, rdn # perform operation
fnmsub.d f24, f31, f15, f19, rmm # perform operation
fnmsub.d f24, f31, f15, f19, rne # perform operation
fnmsub.d f24, f31, f15, f19, rtz # perform operation
fnmsub.d f24, f31, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f31, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f31, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f31, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f31, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f31, f15, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8008000000000000)
li x9, 0x58a0e780 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0xae202251 # load x3 with 32 MSBs 0x00000000ae202251
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ae202251
sw x3, 0(x2) # store x3 (0xae202251) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000ae202251 from memory into f21
fnmsub.d f9, f27, f23, f21, dyn # perform operation
fnmsub.d f9, f27, f23, f21, rdn # perform operation
fnmsub.d f9, f27, f23, f21, rmm # perform operation
fnmsub.d f9, f27, f23, f21, rne # perform operation
fnmsub.d f9, f27, f23, f21, rtz # perform operation
fnmsub.d f9, f27, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f27, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f27, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f27, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f27, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f27, f23, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x1)
li x11, 0xcd466360 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0x7bace3d4 # load x3 with 32 MSBs 0x000000007bace3d4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007bace3d4
sw x3, 0(x2) # store x3 (0x7bace3d4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000007bace3d4 from memory into f21
fnmsub.d f11, f6, f24, f21, dyn # perform operation
fnmsub.d f11, f6, f24, f21, rdn # perform operation
fnmsub.d f11, f6, f24, f21, rmm # perform operation
fnmsub.d f11, f6, f24, f21, rne # perform operation
fnmsub.d f11, f6, f24, f21, rtz # perform operation
fnmsub.d f11, f6, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f6, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f6, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f6, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f6, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f6, f24, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000001)
li x11, 0x92011d81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
li x3, 0xb7c79850 # load x3 with 32 MSBs 0x00000000b7c79850
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b7c79850
sw x3, 0(x2) # store x3 (0xb7c79850) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000b7c79850 from memory into f16
fnmsub.d f11, f10, f26, f16, dyn # perform operation
fnmsub.d f11, f10, f26, f16, rdn # perform operation
fnmsub.d f11, f10, f26, f16, rmm # perform operation
fnmsub.d f11, f10, f26, f16, rne # perform operation
fnmsub.d f11, f10, f26, f16, rtz # perform operation
fnmsub.d f11, f10, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f10, f26, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000000)
li x24, 0xdec4c5ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
li x3, 0xe3fdcdb5 # load x3 with 32 MSBs 0x00000000e3fdcdb5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e3fdcdb5
sw x3, 0(x2) # store x3 (0xe3fdcdb5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000e3fdcdb5 from memory into f6
fnmsub.d f24, f30, f16, f6, dyn # perform operation
fnmsub.d f24, f30, f16, f6, rdn # perform operation
fnmsub.d f24, f30, f16, f6, rmm # perform operation
fnmsub.d f24, f30, f16, f6, rne # perform operation
fnmsub.d f24, f30, f16, f6, rtz # perform operation
fnmsub.d f24, f30, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f30, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f30, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f30, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f30, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f30, f16, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfff0000000000000)
li x26, 0x54f745b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
li x3, 0xec860035 # load x3 with 32 MSBs 0x00000000ec860035
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec860035
sw x3, 0(x2) # store x3 (0xec860035) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000ec860035 from memory into f2
fnmsub.d f26, f3, f16, f2, dyn # perform operation
fnmsub.d f26, f3, f16, f2, rdn # perform operation
fnmsub.d f26, f3, f16, f2, rmm # perform operation
fnmsub.d f26, f3, f16, f2, rne # perform operation
fnmsub.d f26, f3, f16, f2, rtz # perform operation
fnmsub.d f26, f3, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f3, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f3, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f3, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f3, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f3, f16, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff8000000000000)
li x11, 0xdb7b249b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xa6e895993737426c from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
li x3, 0x999baebb # load x3 with 32 MSBs 0x00000000999baebb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000999baebb
sw x3, 0(x2) # store x3 (0x999baebb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000999baebb from memory into f4
fnmsub.d f11, f23, f3, f4, dyn # perform operation
fnmsub.d f11, f23, f3, f4, rdn # perform operation
fnmsub.d f11, f23, f3, f4, rmm # perform operation
fnmsub.d f11, f23, f3, f4, rne # perform operation
fnmsub.d f11, f23, f3, f4, rtz # perform operation
fnmsub.d f11, f23, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f23, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f23, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f23, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f23, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f23, f3, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fffffffffffffff)
li x25, 0x7434258e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
li x3, 0x8e6500c9 # load x3 with 32 MSBs 0x000000008e6500c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e6500c9
sw x3, 0(x2) # store x3 (0x8e6500c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000008e6500c9 from memory into f21
fnmsub.d f25, f14, f29, f21, dyn # perform operation
fnmsub.d f25, f14, f29, f21, rdn # perform operation
fnmsub.d f25, f14, f29, f21, rmm # perform operation
fnmsub.d f25, f14, f29, f21, rne # perform operation
fnmsub.d f25, f14, f29, f21, rtz # perform operation
fnmsub.d f25, f14, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f14, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f14, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f14, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f14, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f14, f29, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000001)
li x11, 0x8a22b3d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xa6e895993737426c from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000001 from memory into f1
li x3, 0x4f5552b3 # load x3 with 32 MSBs 0x000000004f5552b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f5552b3
sw x3, 0(x2) # store x3 (0x4f5552b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000004f5552b3 from memory into f5
fnmsub.d f11, f13, f1, f5, dyn # perform operation
fnmsub.d f11, f13, f1, f5, rdn # perform operation
fnmsub.d f11, f13, f1, f5, rmm # perform operation
fnmsub.d f11, f13, f1, f5, rne # perform operation
fnmsub.d f11, f13, f1, f5, rtz # perform operation
fnmsub.d f11, f13, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f13, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f13, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f13, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f13, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f13, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff7ffffffffffff)
li x12, 0x1f9779f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
li x3, 0x66c34b81 # load x3 with 32 MSBs 0x0000000066c34b81
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066c34b81
sw x3, 0(x2) # store x3 (0x66c34b81) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000066c34b81 from memory into f14
fnmsub.d f12, f26, f8, f14, dyn # perform operation
fnmsub.d f12, f26, f8, f14, rdn # perform operation
fnmsub.d f12, f26, f8, f14, rmm # perform operation
fnmsub.d f12, f26, f8, f14, rne # perform operation
fnmsub.d f12, f26, f8, f14, rtz # perform operation
fnmsub.d f12, f26, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f26, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f26, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f26, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f26, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f26, f8, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x5a392534a57711ad)
li x23, 0x5c2bc5df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xa6e895993737426c from memory into f4
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
li x3, 0x86fe287a # load x3 with 32 MSBs 0x0000000086fe287a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000086fe287a
sw x3, 0(x2) # store x3 (0x86fe287a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000086fe287a from memory into f18
fnmsub.d f23, f4, f13, f18, dyn # perform operation
fnmsub.d f23, f4, f13, f18, rdn # perform operation
fnmsub.d f23, f4, f13, f18, rmm # perform operation
fnmsub.d f23, f4, f13, f18, rne # perform operation
fnmsub.d f23, f4, f13, f18, rtz # perform operation
fnmsub.d f23, f4, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f4, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f4, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f4, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f4, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f4, f13, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xa6e895993737426c)
li x24, 0x936ad052 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
li x3, 0x0de6a6eb # load x3 with 32 MSBs 0x000000000de6a6eb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000de6a6eb
sw x3, 0(x2) # store x3 (0x0de6a6eb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000000de6a6eb from memory into f27
fnmsub.d f24, f6, f19, f27, dyn # perform operation
fnmsub.d f24, f6, f19, f27, rdn # perform operation
fnmsub.d f24, f6, f19, f27, rmm # perform operation
fnmsub.d f24, f6, f19, f27, rne # perform operation
fnmsub.d f24, f6, f19, f27, rtz # perform operation
fnmsub.d f24, f6, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f6, f19, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
li x30, 0xbcb797c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
li x3, 0x56f41017 # load x3 with 32 MSBs 0x0000000056f41017
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000056f41017
sw x3, 0(x2) # store x3 (0x56f41017) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000056f41017 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
fnmsub.d f30, f9, f25, f27, dyn # perform operation
fnmsub.d f30, f9, f25, f27, rdn # perform operation
fnmsub.d f30, f9, f25, f27, rmm # perform operation
fnmsub.d f30, f9, f25, f27, rne # perform operation
fnmsub.d f30, f9, f25, f27, rtz # perform operation
fnmsub.d f30, f9, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f9, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f9, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f9, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f9, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f9, f25, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8000000000000000)
li x29, 0x51e54df9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
li x3, 0x62bf3ca0 # load x3 with 32 MSBs 0x0000000062bf3ca0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000062bf3ca0
sw x3, 0(x2) # store x3 (0x62bf3ca0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000062bf3ca0 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
fnmsub.d f29, f30, f20, f21, dyn # perform operation
fnmsub.d f29, f30, f20, f21, rdn # perform operation
fnmsub.d f29, f30, f20, f21, rmm # perform operation
fnmsub.d f29, f30, f20, f21, rne # perform operation
fnmsub.d f29, f30, f20, f21, rtz # perform operation
fnmsub.d f29, f30, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f30, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f30, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f30, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f30, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f30, f20, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3ff0000000000000)
li x14, 0xc91ee2e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
li x3, 0xea7311a7 # load x3 with 32 MSBs 0x00000000ea7311a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea7311a7
sw x3, 0(x2) # store x3 (0xea7311a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000ea7311a7 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
fnmsub.d f14, f6, f27, f25, dyn # perform operation
fnmsub.d f14, f6, f27, f25, rdn # perform operation
fnmsub.d f14, f6, f27, f25, rmm # perform operation
fnmsub.d f14, f6, f27, f25, rne # perform operation
fnmsub.d f14, f6, f27, f25, rtz # perform operation
fnmsub.d f14, f6, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f6, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f6, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f6, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f6, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f6, f27, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbff0000000000000)
li x9, 0x3e19134c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000000 from memory into f29
li x3, 0x52e7545c # load x3 with 32 MSBs 0x0000000052e7545c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000052e7545c
sw x3, 0(x2) # store x3 (0x52e7545c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000052e7545c from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
fnmsub.d f9, f29, f2, f31, dyn # perform operation
fnmsub.d f9, f29, f2, f31, rdn # perform operation
fnmsub.d f9, f29, f2, f31, rmm # perform operation
fnmsub.d f9, f29, f2, f31, rne # perform operation
fnmsub.d f9, f29, f2, f31, rtz # perform operation
fnmsub.d f9, f29, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f29, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f29, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f29, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f29, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f29, f2, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3ff8000000000000)
li x24, 0xa058fa6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
li x3, 0x46642788 # load x3 with 32 MSBs 0x0000000046642788
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000046642788
sw x3, 0(x2) # store x3 (0x46642788) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000046642788 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff8000000000000 from memory into f17
fnmsub.d f24, f11, f1, f17, dyn # perform operation
fnmsub.d f24, f11, f1, f17, rdn # perform operation
fnmsub.d f24, f11, f1, f17, rmm # perform operation
fnmsub.d f24, f11, f1, f17, rne # perform operation
fnmsub.d f24, f11, f1, f17, rtz # perform operation
fnmsub.d f24, f11, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f11, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f11, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f11, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f11, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f11, f1, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbff8000000000000)
li x17, 0x72363c41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
li x3, 0xd1cf4e53 # load x3 with 32 MSBs 0x00000000d1cf4e53
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1cf4e53
sw x3, 0(x2) # store x3 (0xd1cf4e53) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000d1cf4e53 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
fnmsub.d f17, f15, f30, f20, dyn # perform operation
fnmsub.d f17, f15, f30, f20, rdn # perform operation
fnmsub.d f17, f15, f30, f20, rmm # perform operation
fnmsub.d f17, f15, f30, f20, rne # perform operation
fnmsub.d f17, f15, f30, f20, rtz # perform operation
fnmsub.d f17, f15, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f15, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f15, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f15, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f15, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f15, f30, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x4000000000000000)
li x4, 0x9fa1b867 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
li x3, 0x1b92fe51 # load x3 with 32 MSBs 0x000000001b92fe51
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b92fe51
sw x3, 0(x2) # store x3 (0x1b92fe51) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000001b92fe51 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
fnmsub.d f4, f1, f31, f30, dyn # perform operation
fnmsub.d f4, f1, f31, f30, rdn # perform operation
fnmsub.d f4, f1, f31, f30, rmm # perform operation
fnmsub.d f4, f1, f31, f30, rne # perform operation
fnmsub.d f4, f1, f31, f30, rtz # perform operation
fnmsub.d f4, f1, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f1, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f1, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f1, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f1, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f1, f31, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc000000000000000)
li x30, 0xffd2ab93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
li x3, 0x45c26ea8 # load x3 with 32 MSBs 0x0000000045c26ea8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000045c26ea8
sw x3, 0(x2) # store x3 (0x45c26ea8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000045c26ea8 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
fnmsub.d f30, f27, f23, f18, dyn # perform operation
fnmsub.d f30, f27, f23, f18, rdn # perform operation
fnmsub.d f30, f27, f23, f18, rmm # perform operation
fnmsub.d f30, f27, f23, f18, rne # perform operation
fnmsub.d f30, f27, f23, f18, rtz # perform operation
fnmsub.d f30, f27, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f27, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f27, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f27, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f27, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f27, f23, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x10000000000000)
li x11, 0xfa0cb377 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
li x3, 0x41d8182e # load x3 with 32 MSBs 0x0000000041d8182e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000041d8182e
sw x3, 0(x2) # store x3 (0x41d8182e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000041d8182e from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
fnmsub.d f11, f6, f5, f21, dyn # perform operation
fnmsub.d f11, f6, f5, f21, rdn # perform operation
fnmsub.d f11, f6, f5, f21, rmm # perform operation
fnmsub.d f11, f6, f5, f21, rne # perform operation
fnmsub.d f11, f6, f5, f21, rtz # perform operation
fnmsub.d f11, f6, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f6, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f6, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f6, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f6, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f6, f5, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8010000000000000)
li x26, 0x838b6959 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
li x3, 0x584520a5 # load x3 with 32 MSBs 0x00000000584520a5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000584520a5
sw x3, 0(x2) # store x3 (0x584520a5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000584520a5 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
fnmsub.d f26, f4, f27, f7, dyn # perform operation
fnmsub.d f26, f4, f27, f7, rdn # perform operation
fnmsub.d f26, f4, f27, f7, rmm # perform operation
fnmsub.d f26, f4, f27, f7, rne # perform operation
fnmsub.d f26, f4, f27, f7, rtz # perform operation
fnmsub.d f26, f4, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f4, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f4, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f4, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f4, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f4, f27, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fefffffffffffff)
li x16, 0xd3400607 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
li x3, 0x20cabb88 # load x3 with 32 MSBs 0x0000000020cabb88
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020cabb88
sw x3, 0(x2) # store x3 (0x20cabb88) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000020cabb88 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
fnmsub.d f16, f25, f15, f14, dyn # perform operation
fnmsub.d f16, f25, f15, f14, rdn # perform operation
fnmsub.d f16, f25, f15, f14, rmm # perform operation
fnmsub.d f16, f25, f15, f14, rne # perform operation
fnmsub.d f16, f25, f15, f14, rtz # perform operation
fnmsub.d f16, f25, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f25, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f25, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f25, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f25, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f25, f15, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffefffffffffffff)
li x25, 0x11861275 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000000 from memory into f10
li x3, 0x58fc431e # load x3 with 32 MSBs 0x0000000058fc431e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000058fc431e
sw x3, 0(x2) # store x3 (0x58fc431e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000058fc431e from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
fnmsub.d f25, f10, f28, f15, dyn # perform operation
fnmsub.d f25, f10, f28, f15, rdn # perform operation
fnmsub.d f25, f10, f28, f15, rmm # perform operation
fnmsub.d f25, f10, f28, f15, rne # perform operation
fnmsub.d f25, f10, f28, f15, rtz # perform operation
fnmsub.d f25, f10, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f10, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f10, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f10, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f10, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f10, f28, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfffffffffffff)
li x21, 0x8f8fcc90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
li x3, 0xc3b745ee # load x3 with 32 MSBs 0x00000000c3b745ee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c3b745ee
sw x3, 0(x2) # store x3 (0xc3b745ee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000c3b745ee from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
fnmsub.d f21, f28, f12, f14, dyn # perform operation
fnmsub.d f21, f28, f12, f14, rdn # perform operation
fnmsub.d f21, f28, f12, f14, rmm # perform operation
fnmsub.d f21, f28, f12, f14, rne # perform operation
fnmsub.d f21, f28, f12, f14, rtz # perform operation
fnmsub.d f21, f28, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f28, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f28, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f28, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f28, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f28, f12, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800fffffffffffff)
li x5, 0x7f5cad5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
li x3, 0x3d3b7e67 # load x3 with 32 MSBs 0x000000003d3b7e67
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d3b7e67
sw x3, 0(x2) # store x3 (0x3d3b7e67) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000003d3b7e67 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
fnmsub.d f5, f21, f14, f19, dyn # perform operation
fnmsub.d f5, f21, f14, f19, rdn # perform operation
fnmsub.d f5, f21, f14, f19, rmm # perform operation
fnmsub.d f5, f21, f14, f19, rne # perform operation
fnmsub.d f5, f21, f14, f19, rtz # perform operation
fnmsub.d f5, f21, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f21, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f21, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f21, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f21, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f21, f14, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8000000000000)
li x30, 0x401f01c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000000 from memory into f18
li x3, 0xbdc7ad5e # load x3 with 32 MSBs 0x00000000bdc7ad5e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bdc7ad5e
sw x3, 0(x2) # store x3 (0xbdc7ad5e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000bdc7ad5e from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
fnmsub.d f30, f18, f11, f10, dyn # perform operation
fnmsub.d f30, f18, f11, f10, rdn # perform operation
fnmsub.d f30, f18, f11, f10, rmm # perform operation
fnmsub.d f30, f18, f11, f10, rne # perform operation
fnmsub.d f30, f18, f11, f10, rtz # perform operation
fnmsub.d f30, f18, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f18, f11, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8008000000000000)
li x12, 0x9a07f536 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
li x3, 0x9565117d # load x3 with 32 MSBs 0x000000009565117d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009565117d
sw x3, 0(x2) # store x3 (0x9565117d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000009565117d from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
fnmsub.d f12, f20, f22, f29, dyn # perform operation
fnmsub.d f12, f20, f22, f29, rdn # perform operation
fnmsub.d f12, f20, f22, f29, rmm # perform operation
fnmsub.d f12, f20, f22, f29, rne # perform operation
fnmsub.d f12, f20, f22, f29, rtz # perform operation
fnmsub.d f12, f20, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f20, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f20, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f20, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f20, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f20, f22, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
li x17, 0x9d73a9e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
li x3, 0xc8ff78c1 # load x3 with 32 MSBs 0x00000000c8ff78c1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c8ff78c1
sw x3, 0(x2) # store x3 (0xc8ff78c1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000c8ff78c1 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
fnmsub.d f17, f9, f22, f24, dyn # perform operation
fnmsub.d f17, f9, f22, f24, rdn # perform operation
fnmsub.d f17, f9, f22, f24, rmm # perform operation
fnmsub.d f17, f9, f22, f24, rne # perform operation
fnmsub.d f17, f9, f22, f24, rtz # perform operation
fnmsub.d f17, f9, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f9, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f9, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f9, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f9, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f9, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8000000000000001)
li x7, 0x4f0d0396 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
li x3, 0x320cd7a8 # load x3 with 32 MSBs 0x00000000320cd7a8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000320cd7a8
sw x3, 0(x2) # store x3 (0x320cd7a8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000320cd7a8 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
fnmsub.d f7, f19, f13, f23, dyn # perform operation
fnmsub.d f7, f19, f13, f23, rdn # perform operation
fnmsub.d f7, f19, f13, f23, rmm # perform operation
fnmsub.d f7, f19, f13, f23, rne # perform operation
fnmsub.d f7, f19, f13, f23, rtz # perform operation
fnmsub.d f7, f19, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f19, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f19, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f19, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f19, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f19, f13, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ff0000000000000)
li x7, 0x7d654e6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0x15b13f6b # load x3 with 32 MSBs 0x0000000015b13f6b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000015b13f6b
sw x3, 0(x2) # store x3 (0x15b13f6b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000015b13f6b from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
fnmsub.d f7, f2, f14, f30, dyn # perform operation
fnmsub.d f7, f2, f14, f30, rdn # perform operation
fnmsub.d f7, f2, f14, f30, rmm # perform operation
fnmsub.d f7, f2, f14, f30, rne # perform operation
fnmsub.d f7, f2, f14, f30, rtz # perform operation
fnmsub.d f7, f2, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f2, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f2, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f2, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f2, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f2, f14, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfff0000000000000)
li x31, 0x9fe6d2cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000000 from memory into f17
li x3, 0x7f114554 # load x3 with 32 MSBs 0x000000007f114554
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f114554
sw x3, 0(x2) # store x3 (0x7f114554) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000007f114554 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
fnmsub.d f31, f17, f7, f19, dyn # perform operation
fnmsub.d f31, f17, f7, f19, rdn # perform operation
fnmsub.d f31, f17, f7, f19, rmm # perform operation
fnmsub.d f31, f17, f7, f19, rne # perform operation
fnmsub.d f31, f17, f7, f19, rtz # perform operation
fnmsub.d f31, f17, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f17, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f17, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f17, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f17, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f17, f7, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ff8000000000000)
li x13, 0x2996b4cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
li x3, 0x835d33ec # load x3 with 32 MSBs 0x00000000835d33ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000835d33ec
sw x3, 0(x2) # store x3 (0x835d33ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000835d33ec from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
fnmsub.d f13, f5, f27, f12, dyn # perform operation
fnmsub.d f13, f5, f27, f12, rdn # perform operation
fnmsub.d f13, f5, f27, f12, rmm # perform operation
fnmsub.d f13, f5, f27, f12, rne # perform operation
fnmsub.d f13, f5, f27, f12, rtz # perform operation
fnmsub.d f13, f5, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f5, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f5, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f5, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f5, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f5, f27, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffffffffffff)
li x29, 0x8fc6eb10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
li x3, 0xb841acb8 # load x3 with 32 MSBs 0x00000000b841acb8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b841acb8
sw x3, 0(x2) # store x3 (0xb841acb8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b841acb8 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
fnmsub.d f29, f12, f23, f11, dyn # perform operation
fnmsub.d f29, f12, f23, f11, rdn # perform operation
fnmsub.d f29, f12, f23, f11, rmm # perform operation
fnmsub.d f29, f12, f23, f11, rne # perform operation
fnmsub.d f29, f12, f23, f11, rtz # perform operation
fnmsub.d f29, f12, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f12, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f12, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f12, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f12, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f12, f23, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ff0000000000001)
li x15, 0xa39f238e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
li x3, 0x3d45fcdf # load x3 with 32 MSBs 0x000000003d45fcdf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d45fcdf
sw x3, 0(x2) # store x3 (0x3d45fcdf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000003d45fcdf from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
fnmsub.d f15, f12, f13, f27, dyn # perform operation
fnmsub.d f15, f12, f13, f27, rdn # perform operation
fnmsub.d f15, f12, f13, f27, rmm # perform operation
fnmsub.d f15, f12, f13, f27, rne # perform operation
fnmsub.d f15, f12, f13, f27, rtz # perform operation
fnmsub.d f15, f12, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f12, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f12, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f12, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f12, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f12, f13, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ff7ffffffffffff)
li x6, 0xd0ae8e70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
li x3, 0x718c6bf0 # load x3 with 32 MSBs 0x00000000718c6bf0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000718c6bf0
sw x3, 0(x2) # store x3 (0x718c6bf0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000718c6bf0 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
fnmsub.d f6, f1, f23, f28, dyn # perform operation
fnmsub.d f6, f1, f23, f28, rdn # perform operation
fnmsub.d f6, f1, f23, f28, rmm # perform operation
fnmsub.d f6, f1, f23, f28, rne # perform operation
fnmsub.d f6, f1, f23, f28, rtz # perform operation
fnmsub.d f6, f1, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f1, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f1, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f1, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f1, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f1, f23, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x5a392534a57711ad)
li x14, 0x80b6fab5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
li x3, 0x5d9cd964 # load x3 with 32 MSBs 0x000000005d9cd964
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d9cd964
sw x3, 0(x2) # store x3 (0x5d9cd964) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000005d9cd964 from memory into f3
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
fnmsub.d f14, f13, f3, f31, dyn # perform operation
fnmsub.d f14, f13, f3, f31, rdn # perform operation
fnmsub.d f14, f13, f3, f31, rmm # perform operation
fnmsub.d f14, f13, f3, f31, rne # perform operation
fnmsub.d f14, f13, f3, f31, rtz # perform operation
fnmsub.d f14, f13, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f13, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f13, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f13, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f13, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f13, f3, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xa6e895993737426c)
li x20, 0x51eda0b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
li x3, 0x12b19cfb # load x3 with 32 MSBs 0x0000000012b19cfb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000012b19cfb
sw x3, 0(x2) # store x3 (0x12b19cfb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000012b19cfb from memory into f21
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
fnmsub.d f20, f6, f21, f3, dyn # perform operation
fnmsub.d f20, f6, f21, f3, rdn # perform operation
fnmsub.d f20, f6, f21, f3, rmm # perform operation
fnmsub.d f20, f6, f21, f3, rne # perform operation
fnmsub.d f20, f6, f21, f3, rtz # perform operation
fnmsub.d f20, f6, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f6, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f6, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f6, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f6, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f6, f21, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x0)
li x9, 0xf77d270e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
li x3, 0x508d515b # load x3 with 32 MSBs 0x00000000508d515b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000508d515b
sw x3, 0(x2) # store x3 (0x508d515b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000508d515b from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
fnmsub.d f9, f4, f20, f19, dyn # perform operation
fnmsub.d f9, f4, f20, f19, rdn # perform operation
fnmsub.d f9, f4, f20, f19, rmm # perform operation
fnmsub.d f9, f4, f20, f19, rne # perform operation
fnmsub.d f9, f4, f20, f19, rtz # perform operation
fnmsub.d f9, f4, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f4, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f4, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f4, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f4, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f4, f20, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8000000000000000)
li x30, 0xcb3b2430 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
li x3, 0xba92e449 # load x3 with 32 MSBs 0x00000000ba92e449
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ba92e449
sw x3, 0(x2) # store x3 (0xba92e449) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000ba92e449 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
fnmsub.d f30, f4, f26, f16, dyn # perform operation
fnmsub.d f30, f4, f26, f16, rdn # perform operation
fnmsub.d f30, f4, f26, f16, rmm # perform operation
fnmsub.d f30, f4, f26, f16, rne # perform operation
fnmsub.d f30, f4, f26, f16, rtz # perform operation
fnmsub.d f30, f4, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f4, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f4, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f4, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f4, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f4, f26, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x3ff0000000000000)
li x31, 0xb5d41833 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
li x3, 0xf89968c3 # load x3 with 32 MSBs 0x00000000f89968c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f89968c3
sw x3, 0(x2) # store x3 (0xf89968c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000f89968c3 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
fnmsub.d f31, f7, f20, f6, dyn # perform operation
fnmsub.d f31, f7, f20, f6, rdn # perform operation
fnmsub.d f31, f7, f20, f6, rmm # perform operation
fnmsub.d f31, f7, f20, f6, rne # perform operation
fnmsub.d f31, f7, f20, f6, rtz # perform operation
fnmsub.d f31, f7, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f7, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f7, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f7, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f7, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f7, f20, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xbff0000000000000)
li x22, 0xbe225355 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
li x3, 0x6d303734 # load x3 with 32 MSBs 0x000000006d303734
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006d303734
sw x3, 0(x2) # store x3 (0x6d303734) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000006d303734 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
fnmsub.d f22, f17, f7, f2, dyn # perform operation
fnmsub.d f22, f17, f7, f2, rdn # perform operation
fnmsub.d f22, f17, f7, f2, rmm # perform operation
fnmsub.d f22, f17, f7, f2, rne # perform operation
fnmsub.d f22, f17, f7, f2, rtz # perform operation
fnmsub.d f22, f17, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f17, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f17, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f17, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f17, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f17, f7, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x3ff8000000000000)
li x28, 0x6866776e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
li x3, 0xbea7299f # load x3 with 32 MSBs 0x00000000bea7299f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bea7299f
sw x3, 0(x2) # store x3 (0xbea7299f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000bea7299f from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
fnmsub.d f28, f7, f1, f5, dyn # perform operation
fnmsub.d f28, f7, f1, f5, rdn # perform operation
fnmsub.d f28, f7, f1, f5, rmm # perform operation
fnmsub.d f28, f7, f1, f5, rne # perform operation
fnmsub.d f28, f7, f1, f5, rtz # perform operation
fnmsub.d f28, f7, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f7, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f7, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f7, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f7, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f7, f1, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xbff8000000000000)
li x21, 0x82adfea8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000000 from memory into f11
li x3, 0x3bd84ea0 # load x3 with 32 MSBs 0x000000003bd84ea0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003bd84ea0
sw x3, 0(x2) # store x3 (0x3bd84ea0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000003bd84ea0 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff8000000000000 from memory into f31
fnmsub.d f21, f11, f2, f31, dyn # perform operation
fnmsub.d f21, f11, f2, f31, rdn # perform operation
fnmsub.d f21, f11, f2, f31, rmm # perform operation
fnmsub.d f21, f11, f2, f31, rne # perform operation
fnmsub.d f21, f11, f2, f31, rtz # perform operation
fnmsub.d f21, f11, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f11, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f11, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f11, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f11, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f11, f2, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x4000000000000000)
li x31, 0x1c1107f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
li x3, 0x5e7f6cf2 # load x3 with 32 MSBs 0x000000005e7f6cf2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e7f6cf2
sw x3, 0(x2) # store x3 (0x5e7f6cf2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000005e7f6cf2 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
fnmsub.d f31, f25, f12, f24, dyn # perform operation
fnmsub.d f31, f25, f12, f24, rdn # perform operation
fnmsub.d f31, f25, f12, f24, rmm # perform operation
fnmsub.d f31, f25, f12, f24, rne # perform operation
fnmsub.d f31, f25, f12, f24, rtz # perform operation
fnmsub.d f31, f25, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f25, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f25, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f25, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f25, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f25, f12, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xc000000000000000)
li x7, 0xe8f2dc79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
li x3, 0x43c95537 # load x3 with 32 MSBs 0x0000000043c95537
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000043c95537
sw x3, 0(x2) # store x3 (0x43c95537) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000043c95537 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
fnmsub.d f7, f18, f20, f21, dyn # perform operation
fnmsub.d f7, f18, f20, f21, rdn # perform operation
fnmsub.d f7, f18, f20, f21, rmm # perform operation
fnmsub.d f7, f18, f20, f21, rne # perform operation
fnmsub.d f7, f18, f20, f21, rtz # perform operation
fnmsub.d f7, f18, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f18, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f18, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f18, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f18, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f18, f20, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x10000000000000)
li x8, 0xcba80b69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
li x3, 0x49e90949 # load x3 with 32 MSBs 0x0000000049e90949
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000049e90949
sw x3, 0(x2) # store x3 (0x49e90949) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000049e90949 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
fnmsub.d f8, f3, f12, f20, dyn # perform operation
fnmsub.d f8, f3, f12, f20, rdn # perform operation
fnmsub.d f8, f3, f12, f20, rmm # perform operation
fnmsub.d f8, f3, f12, f20, rne # perform operation
fnmsub.d f8, f3, f12, f20, rtz # perform operation
fnmsub.d f8, f3, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f3, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f3, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f3, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f3, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f3, f12, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8010000000000000)
li x6, 0x1f562652 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
li x3, 0x19ac3675 # load x3 with 32 MSBs 0x0000000019ac3675
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000019ac3675
sw x3, 0(x2) # store x3 (0x19ac3675) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000019ac3675 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
fnmsub.d f6, f29, f17, f16, dyn # perform operation
fnmsub.d f6, f29, f17, f16, rdn # perform operation
fnmsub.d f6, f29, f17, f16, rmm # perform operation
fnmsub.d f6, f29, f17, f16, rne # perform operation
fnmsub.d f6, f29, f17, f16, rtz # perform operation
fnmsub.d f6, f29, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f29, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f29, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f29, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f29, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f29, f17, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7fefffffffffffff)
li x29, 0xd9dfc831 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
li x3, 0x7b396c58 # load x3 with 32 MSBs 0x000000007b396c58
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007b396c58
sw x3, 0(x2) # store x3 (0x7b396c58) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000007b396c58 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
fnmsub.d f29, f13, f20, f4, dyn # perform operation
fnmsub.d f29, f13, f20, f4, rdn # perform operation
fnmsub.d f29, f13, f20, f4, rmm # perform operation
fnmsub.d f29, f13, f20, f4, rne # perform operation
fnmsub.d f29, f13, f20, f4, rtz # perform operation
fnmsub.d f29, f13, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f13, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f13, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f13, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f13, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f13, f20, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xffefffffffffffff)
li x27, 0x1c2c0da5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
li x3, 0xda36200c # load x3 with 32 MSBs 0x00000000da36200c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da36200c
sw x3, 0(x2) # store x3 (0xda36200c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000da36200c from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
fnmsub.d f27, f9, f24, f29, dyn # perform operation
fnmsub.d f27, f9, f24, f29, rdn # perform operation
fnmsub.d f27, f9, f24, f29, rmm # perform operation
fnmsub.d f27, f9, f24, f29, rne # perform operation
fnmsub.d f27, f9, f24, f29, rtz # perform operation
fnmsub.d f27, f9, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f9, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f9, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f9, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f9, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f9, f24, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xfffffffffffff)
li x28, 0xca3b0407 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
li x3, 0x52193192 # load x3 with 32 MSBs 0x0000000052193192
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000052193192
sw x3, 0(x2) # store x3 (0x52193192) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000052193192 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
fnmsub.d f28, f1, f2, f23, dyn # perform operation
fnmsub.d f28, f1, f2, f23, rdn # perform operation
fnmsub.d f28, f1, f2, f23, rmm # perform operation
fnmsub.d f28, f1, f2, f23, rne # perform operation
fnmsub.d f28, f1, f2, f23, rtz # perform operation
fnmsub.d f28, f1, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f1, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f1, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f1, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f1, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f1, f2, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x800fffffffffffff)
li x8, 0x24a3f888 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
li x3, 0x38b20ba2 # load x3 with 32 MSBs 0x0000000038b20ba2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000038b20ba2
sw x3, 0(x2) # store x3 (0x38b20ba2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000038b20ba2 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
fnmsub.d f8, f29, f4, f17, dyn # perform operation
fnmsub.d f8, f29, f4, f17, rdn # perform operation
fnmsub.d f8, f29, f4, f17, rmm # perform operation
fnmsub.d f8, f29, f4, f17, rne # perform operation
fnmsub.d f8, f29, f4, f17, rtz # perform operation
fnmsub.d f8, f29, f4, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f29, f4, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f29, f4, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f29, f4, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f29, f4, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f29, f4, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8000000000000)
li x19, 0x01e03d8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
li x3, 0xa54af5fc # load x3 with 32 MSBs 0x00000000a54af5fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a54af5fc
sw x3, 0(x2) # store x3 (0xa54af5fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000a54af5fc from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
fnmsub.d f19, f18, f26, f25, dyn # perform operation
fnmsub.d f19, f18, f26, f25, rdn # perform operation
fnmsub.d f19, f18, f26, f25, rmm # perform operation
fnmsub.d f19, f18, f26, f25, rne # perform operation
fnmsub.d f19, f18, f26, f25, rtz # perform operation
fnmsub.d f19, f18, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f18, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f18, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f18, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f18, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f18, f26, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8008000000000000)
li x5, 0xadb4de15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
li x3, 0xbdf19d11 # load x3 with 32 MSBs 0x00000000bdf19d11
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bdf19d11
sw x3, 0(x2) # store x3 (0xbdf19d11) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000bdf19d11 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8008000000000000 from memory into f16
fnmsub.d f5, f31, f18, f16, dyn # perform operation
fnmsub.d f5, f31, f18, f16, rdn # perform operation
fnmsub.d f5, f31, f18, f16, rmm # perform operation
fnmsub.d f5, f31, f18, f16, rne # perform operation
fnmsub.d f5, f31, f18, f16, rtz # perform operation
fnmsub.d f5, f31, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f31, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f31, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f31, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f31, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f31, f18, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x1)
li x8, 0xd2833e33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
li x3, 0x2c82eea5 # load x3 with 32 MSBs 0x000000002c82eea5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002c82eea5
sw x3, 0(x2) # store x3 (0x2c82eea5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000002c82eea5 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
fnmsub.d f8, f1, f14, f27, dyn # perform operation
fnmsub.d f8, f1, f14, f27, rdn # perform operation
fnmsub.d f8, f1, f14, f27, rmm # perform operation
fnmsub.d f8, f1, f14, f27, rne # perform operation
fnmsub.d f8, f1, f14, f27, rtz # perform operation
fnmsub.d f8, f1, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f1, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f1, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f1, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f1, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f1, f14, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8000000000000001)
li x13, 0xcd379d8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
li x3, 0xb2c2df30 # load x3 with 32 MSBs 0x00000000b2c2df30
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2c2df30
sw x3, 0(x2) # store x3 (0xb2c2df30) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000b2c2df30 from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
fnmsub.d f13, f26, f10, f22, dyn # perform operation
fnmsub.d f13, f26, f10, f22, rdn # perform operation
fnmsub.d f13, f26, f10, f22, rmm # perform operation
fnmsub.d f13, f26, f10, f22, rne # perform operation
fnmsub.d f13, f26, f10, f22, rtz # perform operation
fnmsub.d f13, f26, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f26, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f26, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f26, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f26, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f26, f10, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7ff0000000000000)
li x14, 0xca3d22cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
li x3, 0x72865073 # load x3 with 32 MSBs 0x0000000072865073
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000072865073
sw x3, 0(x2) # store x3 (0x72865073) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000072865073 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
fnmsub.d f14, f6, f19, f27, dyn # perform operation
fnmsub.d f14, f6, f19, f27, rdn # perform operation
fnmsub.d f14, f6, f19, f27, rmm # perform operation
fnmsub.d f14, f6, f19, f27, rne # perform operation
fnmsub.d f14, f6, f19, f27, rtz # perform operation
fnmsub.d f14, f6, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f6, f19, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xfff0000000000000)
li x16, 0xcd954992 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
li x3, 0x73e7da4c # load x3 with 32 MSBs 0x0000000073e7da4c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000073e7da4c
sw x3, 0(x2) # store x3 (0x73e7da4c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000073e7da4c from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
fnmsub.d f16, f3, f13, f2, dyn # perform operation
fnmsub.d f16, f3, f13, f2, rdn # perform operation
fnmsub.d f16, f3, f13, f2, rmm # perform operation
fnmsub.d f16, f3, f13, f2, rne # perform operation
fnmsub.d f16, f3, f13, f2, rtz # perform operation
fnmsub.d f16, f3, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f3, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f3, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f3, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f3, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f3, f13, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7ff8000000000000)
li x9, 0x57264892 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
li x3, 0x5ac17dc0 # load x3 with 32 MSBs 0x000000005ac17dc0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005ac17dc0
sw x3, 0(x2) # store x3 (0x5ac17dc0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000005ac17dc0 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
fnmsub.d f9, f7, f19, f6, dyn # perform operation
fnmsub.d f9, f7, f19, f6, rdn # perform operation
fnmsub.d f9, f7, f19, f6, rmm # perform operation
fnmsub.d f9, f7, f19, f6, rne # perform operation
fnmsub.d f9, f7, f19, f6, rtz # perform operation
fnmsub.d f9, f7, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f7, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f7, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f7, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f7, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f7, f19, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7fffffffffffffff)
li x28, 0x71ed0204 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0xdd635f1f # load x3 with 32 MSBs 0x00000000dd635f1f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd635f1f
sw x3, 0(x2) # store x3 (0xdd635f1f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000dd635f1f from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
fnmsub.d f28, f10, f12, f26, dyn # perform operation
fnmsub.d f28, f10, f12, f26, rdn # perform operation
fnmsub.d f28, f10, f12, f26, rmm # perform operation
fnmsub.d f28, f10, f12, f26, rne # perform operation
fnmsub.d f28, f10, f12, f26, rtz # perform operation
fnmsub.d f28, f10, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f10, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f10, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f10, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f10, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f10, f12, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7ff0000000000001)
li x3, 0xff1f850f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
li x3, 0xb6c8d3cd # load x3 with 32 MSBs 0x00000000b6c8d3cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b6c8d3cd
sw x3, 0(x2) # store x3 (0xb6c8d3cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000b6c8d3cd from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
fnmsub.d f3, f7, f30, f15, dyn # perform operation
fnmsub.d f3, f7, f30, f15, rdn # perform operation
fnmsub.d f3, f7, f30, f15, rmm # perform operation
fnmsub.d f3, f7, f30, f15, rne # perform operation
fnmsub.d f3, f7, f30, f15, rtz # perform operation
fnmsub.d f3, f7, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f7, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f7, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f7, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f7, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f7, f30, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7ff7ffffffffffff)
li x31, 0xea48c3e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000000 from memory into f11
li x3, 0xa1bb9a59 # load x3 with 32 MSBs 0x00000000a1bb9a59
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a1bb9a59
sw x3, 0(x2) # store x3 (0xa1bb9a59) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000a1bb9a59 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
fnmsub.d f31, f11, f3, f7, dyn # perform operation
fnmsub.d f31, f11, f3, f7, rdn # perform operation
fnmsub.d f31, f11, f3, f7, rmm # perform operation
fnmsub.d f31, f11, f3, f7, rne # perform operation
fnmsub.d f31, f11, f3, f7, rtz # perform operation
fnmsub.d f31, f11, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f11, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f11, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f11, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f11, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f11, f3, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x5a392534a57711ad)
li x10, 0x9554da88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
li x3, 0x9d01001a # load x3 with 32 MSBs 0x000000009d01001a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d01001a
sw x3, 0(x2) # store x3 (0x9d01001a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000009d01001a from memory into f11
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
fnmsub.d f10, f16, f11, f9, dyn # perform operation
fnmsub.d f10, f16, f11, f9, rdn # perform operation
fnmsub.d f10, f16, f11, f9, rmm # perform operation
fnmsub.d f10, f16, f11, f9, rne # perform operation
fnmsub.d f10, f16, f11, f9, rtz # perform operation
fnmsub.d f10, f16, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f16, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f16, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f16, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f16, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f16, f11, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xa6e895993737426c)
li x8, 0x5300288e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
li x3, 0x485cfbdf # load x3 with 32 MSBs 0x00000000485cfbdf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000485cfbdf
sw x3, 0(x2) # store x3 (0x485cfbdf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000485cfbdf from memory into f15
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
fnmsub.d f8, f30, f15, f10, dyn # perform operation
fnmsub.d f8, f30, f15, f10, rdn # perform operation
fnmsub.d f8, f30, f15, f10, rmm # perform operation
fnmsub.d f8, f30, f15, f10, rne # perform operation
fnmsub.d f8, f30, f15, f10, rtz # perform operation
fnmsub.d f8, f30, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f30, f15, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x0)
li x26, 0xd157fd65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
li x3, 0xaf807bf9 # load x3 with 32 MSBs 0x00000000af807bf9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af807bf9
sw x3, 0(x2) # store x3 (0xaf807bf9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000af807bf9 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
fnmsub.d f26, f21, f20, f2, dyn # perform operation
fnmsub.d f26, f21, f20, f2, rdn # perform operation
fnmsub.d f26, f21, f20, f2, rmm # perform operation
fnmsub.d f26, f21, f20, f2, rne # perform operation
fnmsub.d f26, f21, f20, f2, rtz # perform operation
fnmsub.d f26, f21, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f21, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f21, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f21, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f21, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f21, f20, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8000000000000000)
li x9, 0x34d7f199 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0xe94881e7 # load x3 with 32 MSBs 0x00000000e94881e7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e94881e7
sw x3, 0(x2) # store x3 (0xe94881e7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000e94881e7 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
fnmsub.d f9, f6, f31, f22, dyn # perform operation
fnmsub.d f9, f6, f31, f22, rdn # perform operation
fnmsub.d f9, f6, f31, f22, rmm # perform operation
fnmsub.d f9, f6, f31, f22, rne # perform operation
fnmsub.d f9, f6, f31, f22, rtz # perform operation
fnmsub.d f9, f6, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f6, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f6, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f6, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f6, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f6, f31, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x3ff0000000000000)
li x21, 0x83bc2643 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0xff5da5ea # load x3 with 32 MSBs 0x00000000ff5da5ea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff5da5ea
sw x3, 0(x2) # store x3 (0xff5da5ea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000ff5da5ea from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
fnmsub.d f21, f17, f30, f10, dyn # perform operation
fnmsub.d f21, f17, f30, f10, rdn # perform operation
fnmsub.d f21, f17, f30, f10, rmm # perform operation
fnmsub.d f21, f17, f30, f10, rne # perform operation
fnmsub.d f21, f17, f30, f10, rtz # perform operation
fnmsub.d f21, f17, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f17, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f17, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f17, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f17, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f17, f30, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xbff0000000000000)
li x11, 0xeceabdd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0x3292aa92 # load x3 with 32 MSBs 0x000000003292aa92
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003292aa92
sw x3, 0(x2) # store x3 (0x3292aa92) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000003292aa92 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
fnmsub.d f11, f17, f3, f6, dyn # perform operation
fnmsub.d f11, f17, f3, f6, rdn # perform operation
fnmsub.d f11, f17, f3, f6, rmm # perform operation
fnmsub.d f11, f17, f3, f6, rne # perform operation
fnmsub.d f11, f17, f3, f6, rtz # perform operation
fnmsub.d f11, f17, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f17, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f17, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f17, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f17, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f17, f3, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x3ff8000000000000)
li x4, 0x933c8648 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
li x3, 0xd717d49e # load x3 with 32 MSBs 0x00000000d717d49e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d717d49e
sw x3, 0(x2) # store x3 (0xd717d49e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000d717d49e from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
fnmsub.d f4, f20, f3, f24, dyn # perform operation
fnmsub.d f4, f20, f3, f24, rdn # perform operation
fnmsub.d f4, f20, f3, f24, rmm # perform operation
fnmsub.d f4, f20, f3, f24, rne # perform operation
fnmsub.d f4, f20, f3, f24, rtz # perform operation
fnmsub.d f4, f20, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f20, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f20, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f20, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f20, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f20, f3, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xbff8000000000000)
li x26, 0x6b746cb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
li x3, 0xbcafb1fc # load x3 with 32 MSBs 0x00000000bcafb1fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bcafb1fc
sw x3, 0(x2) # store x3 (0xbcafb1fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000bcafb1fc from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
fnmsub.d f26, f21, f24, f13, dyn # perform operation
fnmsub.d f26, f21, f24, f13, rdn # perform operation
fnmsub.d f26, f21, f24, f13, rmm # perform operation
fnmsub.d f26, f21, f24, f13, rne # perform operation
fnmsub.d f26, f21, f24, f13, rtz # perform operation
fnmsub.d f26, f21, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f21, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f21, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f21, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f21, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f21, f24, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x4000000000000000)
li x25, 0x0be2db04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
li x3, 0x5ce47a4f # load x3 with 32 MSBs 0x000000005ce47a4f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005ce47a4f
sw x3, 0(x2) # store x3 (0x5ce47a4f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000005ce47a4f from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
fnmsub.d f25, f26, f30, f17, dyn # perform operation
fnmsub.d f25, f26, f30, f17, rdn # perform operation
fnmsub.d f25, f26, f30, f17, rmm # perform operation
fnmsub.d f25, f26, f30, f17, rne # perform operation
fnmsub.d f25, f26, f30, f17, rtz # perform operation
fnmsub.d f25, f26, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f26, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f26, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f26, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f26, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f26, f30, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xc000000000000000)
li x2, 0x31522f76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0x45065baa # load x3 with 32 MSBs 0x0000000045065baa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000045065baa
sw x3, 0(x2) # store x3 (0x45065baa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000045065baa from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
fnmsub.d f2, f11, f14, f7, dyn # perform operation
fnmsub.d f2, f11, f14, f7, rdn # perform operation
fnmsub.d f2, f11, f14, f7, rmm # perform operation
fnmsub.d f2, f11, f14, f7, rne # perform operation
fnmsub.d f2, f11, f14, f7, rtz # perform operation
fnmsub.d f2, f11, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f11, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f11, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f11, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f11, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f11, f14, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x10000000000000)
li x21, 0x8636572d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
li x3, 0x7142b0db # load x3 with 32 MSBs 0x000000007142b0db
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007142b0db
sw x3, 0(x2) # store x3 (0x7142b0db) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000007142b0db from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
fnmsub.d f21, f25, f2, f6, dyn # perform operation
fnmsub.d f21, f25, f2, f6, rdn # perform operation
fnmsub.d f21, f25, f2, f6, rmm # perform operation
fnmsub.d f21, f25, f2, f6, rne # perform operation
fnmsub.d f21, f25, f2, f6, rtz # perform operation
fnmsub.d f21, f25, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f25, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f25, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f25, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f25, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f25, f2, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8010000000000000)
li x12, 0x36d71cb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
li x3, 0x96b556cb # load x3 with 32 MSBs 0x0000000096b556cb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000096b556cb
sw x3, 0(x2) # store x3 (0x96b556cb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000096b556cb from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
fnmsub.d f12, f18, f5, f8, dyn # perform operation
fnmsub.d f12, f18, f5, f8, rdn # perform operation
fnmsub.d f12, f18, f5, f8, rmm # perform operation
fnmsub.d f12, f18, f5, f8, rne # perform operation
fnmsub.d f12, f18, f5, f8, rtz # perform operation
fnmsub.d f12, f18, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f18, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f18, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f18, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f18, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f18, f5, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7fefffffffffffff)
li x16, 0xb4f05dff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0x65f44384 # load x3 with 32 MSBs 0x0000000065f44384
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000065f44384
sw x3, 0(x2) # store x3 (0x65f44384) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000065f44384 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
fnmsub.d f16, f1, f7, f14, dyn # perform operation
fnmsub.d f16, f1, f7, f14, rdn # perform operation
fnmsub.d f16, f1, f7, f14, rmm # perform operation
fnmsub.d f16, f1, f7, f14, rne # perform operation
fnmsub.d f16, f1, f7, f14, rtz # perform operation
fnmsub.d f16, f1, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f1, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f1, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f1, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f1, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f1, f7, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xffefffffffffffff)
li x11, 0x1f2b833c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
li x3, 0x48b94dcf # load x3 with 32 MSBs 0x0000000048b94dcf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000048b94dcf
sw x3, 0(x2) # store x3 (0x48b94dcf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000048b94dcf from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
fnmsub.d f11, f23, f15, f3, dyn # perform operation
fnmsub.d f11, f23, f15, f3, rdn # perform operation
fnmsub.d f11, f23, f15, f3, rmm # perform operation
fnmsub.d f11, f23, f15, f3, rne # perform operation
fnmsub.d f11, f23, f15, f3, rtz # perform operation
fnmsub.d f11, f23, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f23, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f23, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f23, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f23, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f23, f15, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xfffffffffffff)
li x6, 0x9c6c95fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0x282289fb # load x3 with 32 MSBs 0x00000000282289fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000282289fb
sw x3, 0(x2) # store x3 (0x282289fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000282289fb from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
fnmsub.d f6, f11, f7, f22, dyn # perform operation
fnmsub.d f6, f11, f7, f22, rdn # perform operation
fnmsub.d f6, f11, f7, f22, rmm # perform operation
fnmsub.d f6, f11, f7, f22, rne # perform operation
fnmsub.d f6, f11, f7, f22, rtz # perform operation
fnmsub.d f6, f11, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f11, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f11, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f11, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f11, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f11, f7, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x800fffffffffffff)
li x22, 0x6a387d74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0xc936fe14 # load x3 with 32 MSBs 0x00000000c936fe14
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c936fe14
sw x3, 0(x2) # store x3 (0xc936fe14) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000c936fe14 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
fnmsub.d f22, f1, f7, f19, dyn # perform operation
fnmsub.d f22, f1, f7, f19, rdn # perform operation
fnmsub.d f22, f1, f7, f19, rmm # perform operation
fnmsub.d f22, f1, f7, f19, rne # perform operation
fnmsub.d f22, f1, f7, f19, rtz # perform operation
fnmsub.d f22, f1, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f1, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f1, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f1, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f1, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f1, f7, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8000000000000)
li x14, 0x33648218 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
li x3, 0x3fb0ae81 # load x3 with 32 MSBs 0x000000003fb0ae81
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003fb0ae81
sw x3, 0(x2) # store x3 (0x3fb0ae81) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000003fb0ae81 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
fnmsub.d f14, f13, f24, f11, dyn # perform operation
fnmsub.d f14, f13, f24, f11, rdn # perform operation
fnmsub.d f14, f13, f24, f11, rmm # perform operation
fnmsub.d f14, f13, f24, f11, rne # perform operation
fnmsub.d f14, f13, f24, f11, rtz # perform operation
fnmsub.d f14, f13, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f13, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f13, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f13, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f13, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f13, f24, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8008000000000000)
li x28, 0xf59f967b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0xab30ed69 # load x3 with 32 MSBs 0x00000000ab30ed69
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ab30ed69
sw x3, 0(x2) # store x3 (0xab30ed69) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000ab30ed69 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
fnmsub.d f28, f6, f12, f5, dyn # perform operation
fnmsub.d f28, f6, f12, f5, rdn # perform operation
fnmsub.d f28, f6, f12, f5, rmm # perform operation
fnmsub.d f28, f6, f12, f5, rne # perform operation
fnmsub.d f28, f6, f12, f5, rtz # perform operation
fnmsub.d f28, f6, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f6, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f6, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f6, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f6, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f6, f12, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x1)
li x20, 0x66b01afa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0x87b30412 # load x3 with 32 MSBs 0x0000000087b30412
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000087b30412
sw x3, 0(x2) # store x3 (0x87b30412) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000087b30412 from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
fnmsub.d f20, f31, f10, f23, dyn # perform operation
fnmsub.d f20, f31, f10, f23, rdn # perform operation
fnmsub.d f20, f31, f10, f23, rmm # perform operation
fnmsub.d f20, f31, f10, f23, rne # perform operation
fnmsub.d f20, f31, f10, f23, rtz # perform operation
fnmsub.d f20, f31, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f31, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f31, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f31, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f31, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f31, f10, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8000000000000001)
li x12, 0xa2c3a02e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
li x3, 0x9d3d36f0 # load x3 with 32 MSBs 0x000000009d3d36f0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d3d36f0
sw x3, 0(x2) # store x3 (0x9d3d36f0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000009d3d36f0 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
fnmsub.d f12, f27, f22, f23, dyn # perform operation
fnmsub.d f12, f27, f22, f23, rdn # perform operation
fnmsub.d f12, f27, f22, f23, rmm # perform operation
fnmsub.d f12, f27, f22, f23, rne # perform operation
fnmsub.d f12, f27, f22, f23, rtz # perform operation
fnmsub.d f12, f27, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f27, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f27, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f27, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f27, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f27, f22, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7ff0000000000000)
li x14, 0xc331f9d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
li x3, 0x649db4f2 # load x3 with 32 MSBs 0x00000000649db4f2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000649db4f2
sw x3, 0(x2) # store x3 (0x649db4f2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000649db4f2 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
fnmsub.d f14, f13, f15, f4, dyn # perform operation
fnmsub.d f14, f13, f15, f4, rdn # perform operation
fnmsub.d f14, f13, f15, f4, rmm # perform operation
fnmsub.d f14, f13, f15, f4, rne # perform operation
fnmsub.d f14, f13, f15, f4, rtz # perform operation
fnmsub.d f14, f13, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f13, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f13, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f13, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f13, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f13, f15, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xfff0000000000000)
li x3, 0x389726cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0xe6606b01 # load x3 with 32 MSBs 0x00000000e6606b01
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e6606b01
sw x3, 0(x2) # store x3 (0xe6606b01) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000e6606b01 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
fnmsub.d f3, f1, f20, f26, dyn # perform operation
fnmsub.d f3, f1, f20, f26, rdn # perform operation
fnmsub.d f3, f1, f20, f26, rmm # perform operation
fnmsub.d f3, f1, f20, f26, rne # perform operation
fnmsub.d f3, f1, f20, f26, rtz # perform operation
fnmsub.d f3, f1, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f1, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f1, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f1, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f1, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f1, f20, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7ff8000000000000)
li x16, 0x8a11b0ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
li x3, 0xc8ac6372 # load x3 with 32 MSBs 0x00000000c8ac6372
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c8ac6372
sw x3, 0(x2) # store x3 (0xc8ac6372) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000c8ac6372 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
fnmsub.d f16, f2, f29, f24, dyn # perform operation
fnmsub.d f16, f2, f29, f24, rdn # perform operation
fnmsub.d f16, f2, f29, f24, rmm # perform operation
fnmsub.d f16, f2, f29, f24, rne # perform operation
fnmsub.d f16, f2, f29, f24, rtz # perform operation
fnmsub.d f16, f2, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f2, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f2, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f2, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f2, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f2, f29, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7fffffffffffffff)
li x16, 0xeebe160c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
li x3, 0xa6ab5c7f # load x3 with 32 MSBs 0x00000000a6ab5c7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a6ab5c7f
sw x3, 0(x2) # store x3 (0xa6ab5c7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000a6ab5c7f from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
fnmsub.d f16, f10, f6, f3, dyn # perform operation
fnmsub.d f16, f10, f6, f3, rdn # perform operation
fnmsub.d f16, f10, f6, f3, rmm # perform operation
fnmsub.d f16, f10, f6, f3, rne # perform operation
fnmsub.d f16, f10, f6, f3, rtz # perform operation
fnmsub.d f16, f10, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f10, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f10, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f10, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f10, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f10, f6, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7ff0000000000001)
li x6, 0xf563a566 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0x2a935cfb # load x3 with 32 MSBs 0x000000002a935cfb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a935cfb
sw x3, 0(x2) # store x3 (0x2a935cfb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000002a935cfb from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
fnmsub.d f6, f31, f26, f27, dyn # perform operation
fnmsub.d f6, f31, f26, f27, rdn # perform operation
fnmsub.d f6, f31, f26, f27, rmm # perform operation
fnmsub.d f6, f31, f26, f27, rne # perform operation
fnmsub.d f6, f31, f26, f27, rtz # perform operation
fnmsub.d f6, f31, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f31, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f31, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f31, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f31, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f31, f26, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7ff7ffffffffffff)
li x3, 0x342adcea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
li x3, 0xc13e41da # load x3 with 32 MSBs 0x00000000c13e41da
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c13e41da
sw x3, 0(x2) # store x3 (0xc13e41da) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000c13e41da from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
fnmsub.d f3, f7, f18, f25, dyn # perform operation
fnmsub.d f3, f7, f18, f25, rdn # perform operation
fnmsub.d f3, f7, f18, f25, rmm # perform operation
fnmsub.d f3, f7, f18, f25, rne # perform operation
fnmsub.d f3, f7, f18, f25, rtz # perform operation
fnmsub.d f3, f7, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f7, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f7, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f7, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f7, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f7, f18, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x5a392534a57711ad)
li x4, 0x15511eae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff0000000000000 from memory into f24
li x3, 0xa5f3a550 # load x3 with 32 MSBs 0x00000000a5f3a550
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a5f3a550
sw x3, 0(x2) # store x3 (0xa5f3a550) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000a5f3a550 from memory into f21
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
fnmsub.d f4, f24, f21, f15, dyn # perform operation
fnmsub.d f4, f24, f21, f15, rdn # perform operation
fnmsub.d f4, f24, f21, f15, rmm # perform operation
fnmsub.d f4, f24, f21, f15, rne # perform operation
fnmsub.d f4, f24, f21, f15, rtz # perform operation
fnmsub.d f4, f24, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f24, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f24, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f24, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f24, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f24, f21, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xa6e895993737426c)
li x16, 0x31e35172 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
li x3, 0x3bdd0393 # load x3 with 32 MSBs 0x000000003bdd0393
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003bdd0393
sw x3, 0(x2) # store x3 (0x3bdd0393) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000003bdd0393 from memory into f6
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
fnmsub.d f16, f27, f6, f21, dyn # perform operation
fnmsub.d f16, f27, f6, f21, rdn # perform operation
fnmsub.d f16, f27, f6, f21, rmm # perform operation
fnmsub.d f16, f27, f6, f21, rne # perform operation
fnmsub.d f16, f27, f6, f21, rtz # perform operation
fnmsub.d f16, f27, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f27, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f27, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f27, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f27, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f27, f6, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x0)
li x17, 0x3b12556c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
li x3, 0x84fe3cf9 # load x3 with 32 MSBs 0x0000000084fe3cf9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084fe3cf9
sw x3, 0(x2) # store x3 (0x84fe3cf9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000084fe3cf9 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
fnmsub.d f17, f5, f1, f28, dyn # perform operation
fnmsub.d f17, f5, f1, f28, rdn # perform operation
fnmsub.d f17, f5, f1, f28, rmm # perform operation
fnmsub.d f17, f5, f1, f28, rne # perform operation
fnmsub.d f17, f5, f1, f28, rtz # perform operation
fnmsub.d f17, f5, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f5, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f5, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f5, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f5, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f5, f1, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8000000000000000)
li x27, 0x4d0479ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
li x3, 0x7fc09fc9 # load x3 with 32 MSBs 0x000000007fc09fc9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007fc09fc9
sw x3, 0(x2) # store x3 (0x7fc09fc9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000007fc09fc9 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
fnmsub.d f27, f23, f20, f1, dyn # perform operation
fnmsub.d f27, f23, f20, f1, rdn # perform operation
fnmsub.d f27, f23, f20, f1, rmm # perform operation
fnmsub.d f27, f23, f20, f1, rne # perform operation
fnmsub.d f27, f23, f20, f1, rtz # perform operation
fnmsub.d f27, f23, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f23, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f23, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f23, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f23, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f23, f20, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x3ff0000000000000)
li x13, 0xe03e98e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
li x3, 0x3ba8b6df # load x3 with 32 MSBs 0x000000003ba8b6df
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003ba8b6df
sw x3, 0(x2) # store x3 (0x3ba8b6df) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000003ba8b6df from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
fnmsub.d f13, f23, f18, f6, dyn # perform operation
fnmsub.d f13, f23, f18, f6, rdn # perform operation
fnmsub.d f13, f23, f18, f6, rmm # perform operation
fnmsub.d f13, f23, f18, f6, rne # perform operation
fnmsub.d f13, f23, f18, f6, rtz # perform operation
fnmsub.d f13, f23, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f23, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f23, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f23, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f23, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f23, f18, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xbff0000000000000)
li x29, 0x4992320d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0xbac62332 # load x3 with 32 MSBs 0x00000000bac62332
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bac62332
sw x3, 0(x2) # store x3 (0xbac62332) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000bac62332 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
fnmsub.d f29, f12, f31, f2, dyn # perform operation
fnmsub.d f29, f12, f31, f2, rdn # perform operation
fnmsub.d f29, f12, f31, f2, rmm # perform operation
fnmsub.d f29, f12, f31, f2, rne # perform operation
fnmsub.d f29, f12, f31, f2, rtz # perform operation
fnmsub.d f29, f12, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f12, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f12, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f12, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f12, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f12, f31, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x3ff8000000000000)
li x6, 0xbff51838 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
li x3, 0x4a8e2c30 # load x3 with 32 MSBs 0x000000004a8e2c30
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004a8e2c30
sw x3, 0(x2) # store x3 (0x4a8e2c30) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000004a8e2c30 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
fnmsub.d f6, f25, f19, f30, dyn # perform operation
fnmsub.d f6, f25, f19, f30, rdn # perform operation
fnmsub.d f6, f25, f19, f30, rmm # perform operation
fnmsub.d f6, f25, f19, f30, rne # perform operation
fnmsub.d f6, f25, f19, f30, rtz # perform operation
fnmsub.d f6, f25, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f25, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f25, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f25, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f25, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f25, f19, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xbff8000000000000)
li x29, 0x5143ffb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
li x3, 0xfed1b3b2 # load x3 with 32 MSBs 0x00000000fed1b3b2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fed1b3b2
sw x3, 0(x2) # store x3 (0xfed1b3b2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000fed1b3b2 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
fnmsub.d f29, f20, f17, f6, dyn # perform operation
fnmsub.d f29, f20, f17, f6, rdn # perform operation
fnmsub.d f29, f20, f17, f6, rmm # perform operation
fnmsub.d f29, f20, f17, f6, rne # perform operation
fnmsub.d f29, f20, f17, f6, rtz # perform operation
fnmsub.d f29, f20, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f20, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f20, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f20, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f20, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f20, f17, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x4000000000000000)
li x1, 0x40e4dd41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
li x3, 0x79d67343 # load x3 with 32 MSBs 0x0000000079d67343
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000079d67343
sw x3, 0(x2) # store x3 (0x79d67343) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000079d67343 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
fnmsub.d f1, f9, f26, f8, dyn # perform operation
fnmsub.d f1, f9, f26, f8, rdn # perform operation
fnmsub.d f1, f9, f26, f8, rmm # perform operation
fnmsub.d f1, f9, f26, f8, rne # perform operation
fnmsub.d f1, f9, f26, f8, rtz # perform operation
fnmsub.d f1, f9, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f9, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f9, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f9, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f9, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f9, f26, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xc000000000000000)
li x15, 0x2b0903ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
li x3, 0x6113b8e4 # load x3 with 32 MSBs 0x000000006113b8e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006113b8e4
sw x3, 0(x2) # store x3 (0x6113b8e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000006113b8e4 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
fnmsub.d f15, f24, f25, f17, dyn # perform operation
fnmsub.d f15, f24, f25, f17, rdn # perform operation
fnmsub.d f15, f24, f25, f17, rmm # perform operation
fnmsub.d f15, f24, f25, f17, rne # perform operation
fnmsub.d f15, f24, f25, f17, rtz # perform operation
fnmsub.d f15, f24, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f24, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f24, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f24, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f24, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f24, f25, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x10000000000000)
li x15, 0x1eb7d00d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
li x3, 0x5b21ead5 # load x3 with 32 MSBs 0x000000005b21ead5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005b21ead5
sw x3, 0(x2) # store x3 (0x5b21ead5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000005b21ead5 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
fnmsub.d f15, f16, f25, f17, dyn # perform operation
fnmsub.d f15, f16, f25, f17, rdn # perform operation
fnmsub.d f15, f16, f25, f17, rmm # perform operation
fnmsub.d f15, f16, f25, f17, rne # perform operation
fnmsub.d f15, f16, f25, f17, rtz # perform operation
fnmsub.d f15, f16, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f16, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f16, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f16, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f16, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f16, f25, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8010000000000000)
li x7, 0xd8d41c36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
li x3, 0x4aed8e6b # load x3 with 32 MSBs 0x000000004aed8e6b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004aed8e6b
sw x3, 0(x2) # store x3 (0x4aed8e6b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000004aed8e6b from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
fnmsub.d f7, f29, f10, f23, dyn # perform operation
fnmsub.d f7, f29, f10, f23, rdn # perform operation
fnmsub.d f7, f29, f10, f23, rmm # perform operation
fnmsub.d f7, f29, f10, f23, rne # perform operation
fnmsub.d f7, f29, f10, f23, rtz # perform operation
fnmsub.d f7, f29, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f29, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f29, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f29, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f29, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f29, f10, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7fefffffffffffff)
li x4, 0x3fdf9511 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
li x3, 0x6a4dbd17 # load x3 with 32 MSBs 0x000000006a4dbd17
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006a4dbd17
sw x3, 0(x2) # store x3 (0x6a4dbd17) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000006a4dbd17 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
fnmsub.d f4, f30, f20, f9, dyn # perform operation
fnmsub.d f4, f30, f20, f9, rdn # perform operation
fnmsub.d f4, f30, f20, f9, rmm # perform operation
fnmsub.d f4, f30, f20, f9, rne # perform operation
fnmsub.d f4, f30, f20, f9, rtz # perform operation
fnmsub.d f4, f30, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f30, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f30, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f30, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f30, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f30, f20, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xffefffffffffffff)
li x31, 0xd9aef5ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
li x3, 0xbfc00e7f # load x3 with 32 MSBs 0x00000000bfc00e7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bfc00e7f
sw x3, 0(x2) # store x3 (0xbfc00e7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000bfc00e7f from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
fnmsub.d f31, f28, f5, f17, dyn # perform operation
fnmsub.d f31, f28, f5, f17, rdn # perform operation
fnmsub.d f31, f28, f5, f17, rmm # perform operation
fnmsub.d f31, f28, f5, f17, rne # perform operation
fnmsub.d f31, f28, f5, f17, rtz # perform operation
fnmsub.d f31, f28, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f28, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f28, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f28, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f28, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f28, f5, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xfffffffffffff)
li x21, 0x8f794235 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
li x3, 0x96560a04 # load x3 with 32 MSBs 0x0000000096560a04
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000096560a04
sw x3, 0(x2) # store x3 (0x96560a04) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000096560a04 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
fnmsub.d f21, f1, f10, f9, dyn # perform operation
fnmsub.d f21, f1, f10, f9, rdn # perform operation
fnmsub.d f21, f1, f10, f9, rmm # perform operation
fnmsub.d f21, f1, f10, f9, rne # perform operation
fnmsub.d f21, f1, f10, f9, rtz # perform operation
fnmsub.d f21, f1, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f1, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f1, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f1, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f1, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f1, f10, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x800fffffffffffff)
li x24, 0x50648c52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
li x3, 0xd012467b # load x3 with 32 MSBs 0x00000000d012467b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d012467b
sw x3, 0(x2) # store x3 (0xd012467b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000d012467b from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
fnmsub.d f24, f23, f13, f16, dyn # perform operation
fnmsub.d f24, f23, f13, f16, rdn # perform operation
fnmsub.d f24, f23, f13, f16, rmm # perform operation
fnmsub.d f24, f23, f13, f16, rne # perform operation
fnmsub.d f24, f23, f13, f16, rtz # perform operation
fnmsub.d f24, f23, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f23, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f23, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f23, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f23, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f23, f13, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8000000000000)
li x4, 0x891cc61c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
li x3, 0x4d5f29dd # load x3 with 32 MSBs 0x000000004d5f29dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d5f29dd
sw x3, 0(x2) # store x3 (0x4d5f29dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000004d5f29dd from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
fnmsub.d f4, f8, f28, f9, dyn # perform operation
fnmsub.d f4, f8, f28, f9, rdn # perform operation
fnmsub.d f4, f8, f28, f9, rmm # perform operation
fnmsub.d f4, f8, f28, f9, rne # perform operation
fnmsub.d f4, f8, f28, f9, rtz # perform operation
fnmsub.d f4, f8, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f8, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f8, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f8, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f8, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f8, f28, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8008000000000000)
li x8, 0x0981b1af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0xafe0326b # load x3 with 32 MSBs 0x00000000afe0326b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000afe0326b
sw x3, 0(x2) # store x3 (0xafe0326b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000afe0326b from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
fnmsub.d f8, f13, f28, f29, dyn # perform operation
fnmsub.d f8, f13, f28, f29, rdn # perform operation
fnmsub.d f8, f13, f28, f29, rmm # perform operation
fnmsub.d f8, f13, f28, f29, rne # perform operation
fnmsub.d f8, f13, f28, f29, rtz # perform operation
fnmsub.d f8, f13, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f13, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f13, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f13, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f13, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f13, f28, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x1)
li x14, 0xc79ed0c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
li x3, 0x136d3520 # load x3 with 32 MSBs 0x00000000136d3520
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000136d3520
sw x3, 0(x2) # store x3 (0x136d3520) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000136d3520 from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
fnmsub.d f14, f23, f2, f10, dyn # perform operation
fnmsub.d f14, f23, f2, f10, rdn # perform operation
fnmsub.d f14, f23, f2, f10, rmm # perform operation
fnmsub.d f14, f23, f2, f10, rne # perform operation
fnmsub.d f14, f23, f2, f10, rtz # perform operation
fnmsub.d f14, f23, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f23, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f23, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f23, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f23, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f23, f2, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8000000000000001)
li x9, 0x3dcb7bea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
li x3, 0x4e3c5111 # load x3 with 32 MSBs 0x000000004e3c5111
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004e3c5111
sw x3, 0(x2) # store x3 (0x4e3c5111) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000004e3c5111 from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
fnmsub.d f9, f28, f16, f26, dyn # perform operation
fnmsub.d f9, f28, f16, f26, rdn # perform operation
fnmsub.d f9, f28, f16, f26, rmm # perform operation
fnmsub.d f9, f28, f16, f26, rne # perform operation
fnmsub.d f9, f28, f16, f26, rtz # perform operation
fnmsub.d f9, f28, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f28, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f28, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f28, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f28, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f28, f16, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7ff0000000000000)
li x6, 0xb640e90c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
li x3, 0x7f3eeb8a # load x3 with 32 MSBs 0x000000007f3eeb8a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f3eeb8a
sw x3, 0(x2) # store x3 (0x7f3eeb8a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000007f3eeb8a from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
fnmsub.d f6, f3, f15, f5, dyn # perform operation
fnmsub.d f6, f3, f15, f5, rdn # perform operation
fnmsub.d f6, f3, f15, f5, rmm # perform operation
fnmsub.d f6, f3, f15, f5, rne # perform operation
fnmsub.d f6, f3, f15, f5, rtz # perform operation
fnmsub.d f6, f3, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f3, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f3, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f3, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f3, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f3, f15, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xfff0000000000000)
li x4, 0x7f230f64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
li x3, 0xb453e3e2 # load x3 with 32 MSBs 0x00000000b453e3e2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b453e3e2
sw x3, 0(x2) # store x3 (0xb453e3e2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000b453e3e2 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
fnmsub.d f4, f26, f15, f8, dyn # perform operation
fnmsub.d f4, f26, f15, f8, rdn # perform operation
fnmsub.d f4, f26, f15, f8, rmm # perform operation
fnmsub.d f4, f26, f15, f8, rne # perform operation
fnmsub.d f4, f26, f15, f8, rtz # perform operation
fnmsub.d f4, f26, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f26, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f26, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f26, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f26, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f26, f15, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7ff8000000000000)
li x21, 0x29369e7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
li x3, 0x20432615 # load x3 with 32 MSBs 0x0000000020432615
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020432615
sw x3, 0(x2) # store x3 (0x20432615) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000020432615 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
fnmsub.d f21, f19, f18, f7, dyn # perform operation
fnmsub.d f21, f19, f18, f7, rdn # perform operation
fnmsub.d f21, f19, f18, f7, rmm # perform operation
fnmsub.d f21, f19, f18, f7, rne # perform operation
fnmsub.d f21, f19, f18, f7, rtz # perform operation
fnmsub.d f21, f19, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f19, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f19, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f19, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f19, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f19, f18, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7fffffffffffffff)
li x29, 0x8cb83e13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
li x3, 0xc036d736 # load x3 with 32 MSBs 0x00000000c036d736
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c036d736
sw x3, 0(x2) # store x3 (0xc036d736) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000c036d736 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
fnmsub.d f29, f31, f16, f27, dyn # perform operation
fnmsub.d f29, f31, f16, f27, rdn # perform operation
fnmsub.d f29, f31, f16, f27, rmm # perform operation
fnmsub.d f29, f31, f16, f27, rne # perform operation
fnmsub.d f29, f31, f16, f27, rtz # perform operation
fnmsub.d f29, f31, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f31, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f31, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f31, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f31, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f31, f16, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7ff0000000000001)
li x15, 0x64200558 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
li x3, 0xc183d8db # load x3 with 32 MSBs 0x00000000c183d8db
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c183d8db
sw x3, 0(x2) # store x3 (0xc183d8db) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000c183d8db from memory into f17
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
fnmsub.d f15, f23, f17, f30, dyn # perform operation
fnmsub.d f15, f23, f17, f30, rdn # perform operation
fnmsub.d f15, f23, f17, f30, rmm # perform operation
fnmsub.d f15, f23, f17, f30, rne # perform operation
fnmsub.d f15, f23, f17, f30, rtz # perform operation
fnmsub.d f15, f23, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f23, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f23, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f23, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f23, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f23, f17, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7ff7ffffffffffff)
li x23, 0xbb3b9be9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0xde07a270 # load x3 with 32 MSBs 0x00000000de07a270
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000de07a270
sw x3, 0(x2) # store x3 (0xde07a270) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000de07a270 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
fnmsub.d f23, f27, f6, f2, dyn # perform operation
fnmsub.d f23, f27, f6, f2, rdn # perform operation
fnmsub.d f23, f27, f6, f2, rmm # perform operation
fnmsub.d f23, f27, f6, f2, rne # perform operation
fnmsub.d f23, f27, f6, f2, rtz # perform operation
fnmsub.d f23, f27, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f27, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f27, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f27, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f27, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f27, f6, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x5a392534a57711ad)
li x18, 0xacfef99a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
li x3, 0xcaf377d4 # load x3 with 32 MSBs 0x00000000caf377d4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000caf377d4
sw x3, 0(x2) # store x3 (0xcaf377d4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000caf377d4 from memory into f21
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
fnmsub.d f18, f28, f21, f9, dyn # perform operation
fnmsub.d f18, f28, f21, f9, rdn # perform operation
fnmsub.d f18, f28, f21, f9, rmm # perform operation
fnmsub.d f18, f28, f21, f9, rne # perform operation
fnmsub.d f18, f28, f21, f9, rtz # perform operation
fnmsub.d f18, f28, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f28, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f28, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f28, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f28, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f28, f21, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xa6e895993737426c)
li x25, 0x8dc3e011 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
li x3, 0x802a8b08 # load x3 with 32 MSBs 0x00000000802a8b08
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000802a8b08
sw x3, 0(x2) # store x3 (0x802a8b08) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000802a8b08 from memory into f3
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
fnmsub.d f25, f7, f3, f17, dyn # perform operation
fnmsub.d f25, f7, f3, f17, rdn # perform operation
fnmsub.d f25, f7, f3, f17, rmm # perform operation
fnmsub.d f25, f7, f3, f17, rne # perform operation
fnmsub.d f25, f7, f3, f17, rtz # perform operation
fnmsub.d f25, f7, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f7, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f7, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f7, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f7, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f7, f3, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x0)
li x10, 0x4d7b1e11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
li x3, 0xba777dd5 # load x3 with 32 MSBs 0x00000000ba777dd5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ba777dd5
sw x3, 0(x2) # store x3 (0xba777dd5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000ba777dd5 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
fnmsub.d f10, f15, f5, f12, dyn # perform operation
fnmsub.d f10, f15, f5, f12, rdn # perform operation
fnmsub.d f10, f15, f5, f12, rmm # perform operation
fnmsub.d f10, f15, f5, f12, rne # perform operation
fnmsub.d f10, f15, f5, f12, rtz # perform operation
fnmsub.d f10, f15, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f15, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f15, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f15, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f15, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f15, f5, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8000000000000000)
li x1, 0x066653ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
li x3, 0xe8daf15b # load x3 with 32 MSBs 0x00000000e8daf15b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8daf15b
sw x3, 0(x2) # store x3 (0xe8daf15b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000e8daf15b from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
fnmsub.d f1, f25, f15, f26, dyn # perform operation
fnmsub.d f1, f25, f15, f26, rdn # perform operation
fnmsub.d f1, f25, f15, f26, rmm # perform operation
fnmsub.d f1, f25, f15, f26, rne # perform operation
fnmsub.d f1, f25, f15, f26, rtz # perform operation
fnmsub.d f1, f25, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f25, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f25, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f25, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f25, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f25, f15, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x3ff0000000000000)
li x27, 0xa1ef2fea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
li x3, 0x193ee2ff # load x3 with 32 MSBs 0x00000000193ee2ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000193ee2ff
sw x3, 0(x2) # store x3 (0x193ee2ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000193ee2ff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
fnmsub.d f27, f28, f29, f17, dyn # perform operation
fnmsub.d f27, f28, f29, f17, rdn # perform operation
fnmsub.d f27, f28, f29, f17, rmm # perform operation
fnmsub.d f27, f28, f29, f17, rne # perform operation
fnmsub.d f27, f28, f29, f17, rtz # perform operation
fnmsub.d f27, f28, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f28, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f28, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f28, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f28, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f28, f29, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xbff0000000000000)
li x15, 0xdaf8ab91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
li x3, 0xbdb4ae5e # load x3 with 32 MSBs 0x00000000bdb4ae5e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bdb4ae5e
sw x3, 0(x2) # store x3 (0xbdb4ae5e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000bdb4ae5e from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
fnmsub.d f15, f8, f4, f13, dyn # perform operation
fnmsub.d f15, f8, f4, f13, rdn # perform operation
fnmsub.d f15, f8, f4, f13, rmm # perform operation
fnmsub.d f15, f8, f4, f13, rne # perform operation
fnmsub.d f15, f8, f4, f13, rtz # perform operation
fnmsub.d f15, f8, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f8, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f8, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f8, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f8, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f8, f4, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x3ff8000000000000)
li x9, 0x715020b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff8000000000000 from memory into f17
li x3, 0xb124e432 # load x3 with 32 MSBs 0x00000000b124e432
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b124e432
sw x3, 0(x2) # store x3 (0xb124e432) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000b124e432 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
fnmsub.d f9, f17, f7, f16, dyn # perform operation
fnmsub.d f9, f17, f7, f16, rdn # perform operation
fnmsub.d f9, f17, f7, f16, rmm # perform operation
fnmsub.d f9, f17, f7, f16, rne # perform operation
fnmsub.d f9, f17, f7, f16, rtz # perform operation
fnmsub.d f9, f17, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f17, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f17, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f17, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f17, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f17, f7, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xbff8000000000000)
li x10, 0xc808ecaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff8000000000000 from memory into f17
li x3, 0x076a2519 # load x3 with 32 MSBs 0x00000000076a2519
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000076a2519
sw x3, 0(x2) # store x3 (0x076a2519) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000076a2519 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
fnmsub.d f10, f17, f21, f15, dyn # perform operation
fnmsub.d f10, f17, f21, f15, rdn # perform operation
fnmsub.d f10, f17, f21, f15, rmm # perform operation
fnmsub.d f10, f17, f21, f15, rne # perform operation
fnmsub.d f10, f17, f21, f15, rtz # perform operation
fnmsub.d f10, f17, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f17, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f17, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f17, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f17, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f17, f21, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x4000000000000000)
li x15, 0x91f05a5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
li x3, 0xf4a30b20 # load x3 with 32 MSBs 0x00000000f4a30b20
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f4a30b20
sw x3, 0(x2) # store x3 (0xf4a30b20) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000f4a30b20 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
fnmsub.d f15, f2, f17, f19, dyn # perform operation
fnmsub.d f15, f2, f17, f19, rdn # perform operation
fnmsub.d f15, f2, f17, f19, rmm # perform operation
fnmsub.d f15, f2, f17, f19, rne # perform operation
fnmsub.d f15, f2, f17, f19, rtz # perform operation
fnmsub.d f15, f2, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f2, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f2, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f2, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f2, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f2, f17, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xc000000000000000)
li x22, 0xa433d890 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
li x3, 0xeeee11d8 # load x3 with 32 MSBs 0x00000000eeee11d8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eeee11d8
sw x3, 0(x2) # store x3 (0xeeee11d8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000eeee11d8 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
fnmsub.d f22, f28, f2, f19, dyn # perform operation
fnmsub.d f22, f28, f2, f19, rdn # perform operation
fnmsub.d f22, f28, f2, f19, rmm # perform operation
fnmsub.d f22, f28, f2, f19, rne # perform operation
fnmsub.d f22, f28, f2, f19, rtz # perform operation
fnmsub.d f22, f28, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f28, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f28, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f28, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f28, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f28, f2, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x10000000000000)
li x28, 0xc0e9ffb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
li x3, 0x5028b236 # load x3 with 32 MSBs 0x000000005028b236
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005028b236
sw x3, 0(x2) # store x3 (0x5028b236) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000005028b236 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
fnmsub.d f28, f4, f8, f23, dyn # perform operation
fnmsub.d f28, f4, f8, f23, rdn # perform operation
fnmsub.d f28, f4, f8, f23, rmm # perform operation
fnmsub.d f28, f4, f8, f23, rne # perform operation
fnmsub.d f28, f4, f8, f23, rtz # perform operation
fnmsub.d f28, f4, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f4, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f4, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f4, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f4, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f4, f8, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8010000000000000)
li x2, 0x3f07a5d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
li x3, 0xc1dfff90 # load x3 with 32 MSBs 0x00000000c1dfff90
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1dfff90
sw x3, 0(x2) # store x3 (0xc1dfff90) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000c1dfff90 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
fnmsub.d f2, f24, f28, f8, dyn # perform operation
fnmsub.d f2, f24, f28, f8, rdn # perform operation
fnmsub.d f2, f24, f28, f8, rmm # perform operation
fnmsub.d f2, f24, f28, f8, rne # perform operation
fnmsub.d f2, f24, f28, f8, rtz # perform operation
fnmsub.d f2, f24, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f24, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f24, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f24, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f24, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f24, f28, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7fefffffffffffff)
li x14, 0x1155b7a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0xdc485c97 # load x3 with 32 MSBs 0x00000000dc485c97
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc485c97
sw x3, 0(x2) # store x3 (0xdc485c97) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000dc485c97 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
fnmsub.d f14, f18, f2, f28, dyn # perform operation
fnmsub.d f14, f18, f2, f28, rdn # perform operation
fnmsub.d f14, f18, f2, f28, rmm # perform operation
fnmsub.d f14, f18, f2, f28, rne # perform operation
fnmsub.d f14, f18, f2, f28, rtz # perform operation
fnmsub.d f14, f18, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f18, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f18, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f18, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f18, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f18, f2, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xffefffffffffffff)
li x30, 0x7cdfe6a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
li x3, 0x11331f43 # load x3 with 32 MSBs 0x0000000011331f43
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000011331f43
sw x3, 0(x2) # store x3 (0x11331f43) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000011331f43 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
fnmsub.d f30, f12, f5, f9, dyn # perform operation
fnmsub.d f30, f12, f5, f9, rdn # perform operation
fnmsub.d f30, f12, f5, f9, rmm # perform operation
fnmsub.d f30, f12, f5, f9, rne # perform operation
fnmsub.d f30, f12, f5, f9, rtz # perform operation
fnmsub.d f30, f12, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f12, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f12, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f12, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f12, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f12, f5, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xfffffffffffff)
li x16, 0x42e6de2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
li x3, 0xec49e949 # load x3 with 32 MSBs 0x00000000ec49e949
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec49e949
sw x3, 0(x2) # store x3 (0xec49e949) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000ec49e949 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
fnmsub.d f16, f3, f13, f1, dyn # perform operation
fnmsub.d f16, f3, f13, f1, rdn # perform operation
fnmsub.d f16, f3, f13, f1, rmm # perform operation
fnmsub.d f16, f3, f13, f1, rne # perform operation
fnmsub.d f16, f3, f13, f1, rtz # perform operation
fnmsub.d f16, f3, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f3, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f3, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f3, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f3, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f3, f13, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x800fffffffffffff)
li x12, 0xb9dbf416 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
li x3, 0x6996aa68 # load x3 with 32 MSBs 0x000000006996aa68
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006996aa68
sw x3, 0(x2) # store x3 (0x6996aa68) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000006996aa68 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
fnmsub.d f12, f19, f5, f21, dyn # perform operation
fnmsub.d f12, f19, f5, f21, rdn # perform operation
fnmsub.d f12, f19, f5, f21, rmm # perform operation
fnmsub.d f12, f19, f5, f21, rne # perform operation
fnmsub.d f12, f19, f5, f21, rtz # perform operation
fnmsub.d f12, f19, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f19, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f19, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f19, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f19, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f19, f5, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8000000000000)
li x3, 0x8bacfcb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
li x3, 0xfafe8dd9 # load x3 with 32 MSBs 0x00000000fafe8dd9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fafe8dd9
sw x3, 0(x2) # store x3 (0xfafe8dd9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000fafe8dd9 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
fnmsub.d f3, f4, f27, f14, dyn # perform operation
fnmsub.d f3, f4, f27, f14, rdn # perform operation
fnmsub.d f3, f4, f27, f14, rmm # perform operation
fnmsub.d f3, f4, f27, f14, rne # perform operation
fnmsub.d f3, f4, f27, f14, rtz # perform operation
fnmsub.d f3, f4, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f4, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f4, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f4, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f4, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f4, f27, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8008000000000000)
li x1, 0xf0afad2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0xd2c8f1a4 # load x3 with 32 MSBs 0x00000000d2c8f1a4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d2c8f1a4
sw x3, 0(x2) # store x3 (0xd2c8f1a4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000d2c8f1a4 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
fnmsub.d f1, f31, f10, f17, dyn # perform operation
fnmsub.d f1, f31, f10, f17, rdn # perform operation
fnmsub.d f1, f31, f10, f17, rmm # perform operation
fnmsub.d f1, f31, f10, f17, rne # perform operation
fnmsub.d f1, f31, f10, f17, rtz # perform operation
fnmsub.d f1, f31, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f31, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f31, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f31, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f31, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f31, f10, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x1)
li x17, 0xcd3269f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
li x3, 0x1676f224 # load x3 with 32 MSBs 0x000000001676f224
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001676f224
sw x3, 0(x2) # store x3 (0x1676f224) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000001676f224 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
fnmsub.d f17, f19, f14, f11, dyn # perform operation
fnmsub.d f17, f19, f14, f11, rdn # perform operation
fnmsub.d f17, f19, f14, f11, rmm # perform operation
fnmsub.d f17, f19, f14, f11, rne # perform operation
fnmsub.d f17, f19, f14, f11, rtz # perform operation
fnmsub.d f17, f19, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f19, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f19, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f19, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f19, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f19, f14, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8000000000000001)
li x28, 0x4ea95b28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
li x3, 0xe419045b # load x3 with 32 MSBs 0x00000000e419045b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e419045b
sw x3, 0(x2) # store x3 (0xe419045b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000e419045b from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
fnmsub.d f28, f2, f8, f29, dyn # perform operation
fnmsub.d f28, f2, f8, f29, rdn # perform operation
fnmsub.d f28, f2, f8, f29, rmm # perform operation
fnmsub.d f28, f2, f8, f29, rne # perform operation
fnmsub.d f28, f2, f8, f29, rtz # perform operation
fnmsub.d f28, f2, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f2, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f2, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f2, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f2, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f2, f8, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7ff0000000000000)
li x3, 0x5636843b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
li x3, 0xcb2acb18 # load x3 with 32 MSBs 0x00000000cb2acb18
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cb2acb18
sw x3, 0(x2) # store x3 (0xcb2acb18) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000cb2acb18 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
fnmsub.d f3, f12, f29, f6, dyn # perform operation
fnmsub.d f3, f12, f29, f6, rdn # perform operation
fnmsub.d f3, f12, f29, f6, rmm # perform operation
fnmsub.d f3, f12, f29, f6, rne # perform operation
fnmsub.d f3, f12, f29, f6, rtz # perform operation
fnmsub.d f3, f12, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f12, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f12, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f12, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f12, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f12, f29, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xfff0000000000000)
li x19, 0xe9ffb8d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
li x3, 0x8c6f44cc # load x3 with 32 MSBs 0x000000008c6f44cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c6f44cc
sw x3, 0(x2) # store x3 (0x8c6f44cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000008c6f44cc from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
fnmsub.d f19, f7, f8, f5, dyn # perform operation
fnmsub.d f19, f7, f8, f5, rdn # perform operation
fnmsub.d f19, f7, f8, f5, rmm # perform operation
fnmsub.d f19, f7, f8, f5, rne # perform operation
fnmsub.d f19, f7, f8, f5, rtz # perform operation
fnmsub.d f19, f7, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f7, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f7, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f7, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f7, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f7, f8, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7ff8000000000000)
li x10, 0xb08e5081 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
li x3, 0xb8da6eb5 # load x3 with 32 MSBs 0x00000000b8da6eb5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b8da6eb5
sw x3, 0(x2) # store x3 (0xb8da6eb5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000b8da6eb5 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff8000000000000 from memory into f4
fnmsub.d f10, f9, f30, f4, dyn # perform operation
fnmsub.d f10, f9, f30, f4, rdn # perform operation
fnmsub.d f10, f9, f30, f4, rmm # perform operation
fnmsub.d f10, f9, f30, f4, rne # perform operation
fnmsub.d f10, f9, f30, f4, rtz # perform operation
fnmsub.d f10, f9, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f9, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f9, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f9, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f9, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f9, f30, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7fffffffffffffff)
li x31, 0x4e1632a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
li x3, 0x90d458e0 # load x3 with 32 MSBs 0x0000000090d458e0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000090d458e0
sw x3, 0(x2) # store x3 (0x90d458e0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000090d458e0 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
fnmsub.d f31, f14, f15, f26, dyn # perform operation
fnmsub.d f31, f14, f15, f26, rdn # perform operation
fnmsub.d f31, f14, f15, f26, rmm # perform operation
fnmsub.d f31, f14, f15, f26, rne # perform operation
fnmsub.d f31, f14, f15, f26, rtz # perform operation
fnmsub.d f31, f14, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f14, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f14, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f14, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f14, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f14, f15, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7ff0000000000001)
li x25, 0xb2979702 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
li x3, 0x80ac8a3e # load x3 with 32 MSBs 0x0000000080ac8a3e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000080ac8a3e
sw x3, 0(x2) # store x3 (0x80ac8a3e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000080ac8a3e from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
fnmsub.d f25, f12, f7, f17, dyn # perform operation
fnmsub.d f25, f12, f7, f17, rdn # perform operation
fnmsub.d f25, f12, f7, f17, rmm # perform operation
fnmsub.d f25, f12, f7, f17, rne # perform operation
fnmsub.d f25, f12, f7, f17, rtz # perform operation
fnmsub.d f25, f12, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f12, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f12, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f12, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f12, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f12, f7, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7ff7ffffffffffff)
li x11, 0x33f4cc06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
li x3, 0xa465ff0e # load x3 with 32 MSBs 0x00000000a465ff0e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a465ff0e
sw x3, 0(x2) # store x3 (0xa465ff0e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000a465ff0e from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
fnmsub.d f11, f21, f16, f18, dyn # perform operation
fnmsub.d f11, f21, f16, f18, rdn # perform operation
fnmsub.d f11, f21, f16, f18, rmm # perform operation
fnmsub.d f11, f21, f16, f18, rne # perform operation
fnmsub.d f11, f21, f16, f18, rtz # perform operation
fnmsub.d f11, f21, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f21, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f21, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f21, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f21, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f21, f16, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x5a392534a57711ad)
li x23, 0xe324393e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
li x3, 0xa087efde # load x3 with 32 MSBs 0x00000000a087efde
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a087efde
sw x3, 0(x2) # store x3 (0xa087efde) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000a087efde from memory into f19
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
fnmsub.d f23, f25, f19, f29, dyn # perform operation
fnmsub.d f23, f25, f19, f29, rdn # perform operation
fnmsub.d f23, f25, f19, f29, rmm # perform operation
fnmsub.d f23, f25, f19, f29, rne # perform operation
fnmsub.d f23, f25, f19, f29, rtz # perform operation
fnmsub.d f23, f25, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f25, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f25, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f25, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f25, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f25, f19, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xa6e895993737426c)
li x11, 0x8240cd00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0xbf8abb1e # load x3 with 32 MSBs 0x00000000bf8abb1e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf8abb1e
sw x3, 0(x2) # store x3 (0xbf8abb1e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000bf8abb1e from memory into f12
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
fnmsub.d f11, f18, f12, f8, dyn # perform operation
fnmsub.d f11, f18, f12, f8, rdn # perform operation
fnmsub.d f11, f18, f12, f8, rmm # perform operation
fnmsub.d f11, f18, f12, f8, rne # perform operation
fnmsub.d f11, f18, f12, f8, rtz # perform operation
fnmsub.d f11, f18, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f18, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f18, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f18, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f18, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f18, f12, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x0)
li x4, 0x73dadcdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
li x3, 0x9f0f13a8 # load x3 with 32 MSBs 0x000000009f0f13a8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f0f13a8
sw x3, 0(x2) # store x3 (0x9f0f13a8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000009f0f13a8 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
fnmsub.d f4, f5, f22, f19, dyn # perform operation
fnmsub.d f4, f5, f22, f19, rdn # perform operation
fnmsub.d f4, f5, f22, f19, rmm # perform operation
fnmsub.d f4, f5, f22, f19, rne # perform operation
fnmsub.d f4, f5, f22, f19, rtz # perform operation
fnmsub.d f4, f5, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f5, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f5, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f5, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f5, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f5, f22, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8000000000000000)
li x26, 0xf08800e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
li x3, 0xeb47ff2e # load x3 with 32 MSBs 0x00000000eb47ff2e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb47ff2e
sw x3, 0(x2) # store x3 (0xeb47ff2e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000eb47ff2e from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
fnmsub.d f26, f15, f17, f14, dyn # perform operation
fnmsub.d f26, f15, f17, f14, rdn # perform operation
fnmsub.d f26, f15, f17, f14, rmm # perform operation
fnmsub.d f26, f15, f17, f14, rne # perform operation
fnmsub.d f26, f15, f17, f14, rtz # perform operation
fnmsub.d f26, f15, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f15, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f15, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f15, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f15, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f15, f17, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x3ff0000000000000)
li x9, 0xe72bd85c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
li x3, 0x4eee35f1 # load x3 with 32 MSBs 0x000000004eee35f1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004eee35f1
sw x3, 0(x2) # store x3 (0x4eee35f1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000004eee35f1 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
fnmsub.d f9, f16, f4, f10, dyn # perform operation
fnmsub.d f9, f16, f4, f10, rdn # perform operation
fnmsub.d f9, f16, f4, f10, rmm # perform operation
fnmsub.d f9, f16, f4, f10, rne # perform operation
fnmsub.d f9, f16, f4, f10, rtz # perform operation
fnmsub.d f9, f16, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f16, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f16, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f16, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f16, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f16, f4, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xbff0000000000000)
li x10, 0x0201176d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
li x3, 0x69f83643 # load x3 with 32 MSBs 0x0000000069f83643
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000069f83643
sw x3, 0(x2) # store x3 (0x69f83643) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000069f83643 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
fnmsub.d f10, f3, f17, f29, dyn # perform operation
fnmsub.d f10, f3, f17, f29, rdn # perform operation
fnmsub.d f10, f3, f17, f29, rmm # perform operation
fnmsub.d f10, f3, f17, f29, rne # perform operation
fnmsub.d f10, f3, f17, f29, rtz # perform operation
fnmsub.d f10, f3, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f3, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f3, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f3, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f3, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f3, f17, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x3ff8000000000000)
li x23, 0xabb68b0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
li x3, 0x37d6a7fd # load x3 with 32 MSBs 0x0000000037d6a7fd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000037d6a7fd
sw x3, 0(x2) # store x3 (0x37d6a7fd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000037d6a7fd from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
fnmsub.d f23, f1, f21, f20, dyn # perform operation
fnmsub.d f23, f1, f21, f20, rdn # perform operation
fnmsub.d f23, f1, f21, f20, rmm # perform operation
fnmsub.d f23, f1, f21, f20, rne # perform operation
fnmsub.d f23, f1, f21, f20, rtz # perform operation
fnmsub.d f23, f1, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f1, f21, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xbff8000000000000)
li x20, 0x45de99f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
li x3, 0x4b236f74 # load x3 with 32 MSBs 0x000000004b236f74
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004b236f74
sw x3, 0(x2) # store x3 (0x4b236f74) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000004b236f74 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
fnmsub.d f20, f25, f4, f12, dyn # perform operation
fnmsub.d f20, f25, f4, f12, rdn # perform operation
fnmsub.d f20, f25, f4, f12, rmm # perform operation
fnmsub.d f20, f25, f4, f12, rne # perform operation
fnmsub.d f20, f25, f4, f12, rtz # perform operation
fnmsub.d f20, f25, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f25, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f25, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f25, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f25, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f25, f4, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x4000000000000000)
li x25, 0xb012ecb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
li x3, 0xaf607813 # load x3 with 32 MSBs 0x00000000af607813
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af607813
sw x3, 0(x2) # store x3 (0xaf607813) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000af607813 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
fnmsub.d f25, f19, f7, f2, dyn # perform operation
fnmsub.d f25, f19, f7, f2, rdn # perform operation
fnmsub.d f25, f19, f7, f2, rmm # perform operation
fnmsub.d f25, f19, f7, f2, rne # perform operation
fnmsub.d f25, f19, f7, f2, rtz # perform operation
fnmsub.d f25, f19, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f19, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f19, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f19, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f19, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f19, f7, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xc000000000000000)
li x4, 0x4bb50667 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
li x3, 0x75079781 # load x3 with 32 MSBs 0x0000000075079781
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075079781
sw x3, 0(x2) # store x3 (0x75079781) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000075079781 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
fnmsub.d f4, f15, f26, f25, dyn # perform operation
fnmsub.d f4, f15, f26, f25, rdn # perform operation
fnmsub.d f4, f15, f26, f25, rmm # perform operation
fnmsub.d f4, f15, f26, f25, rne # perform operation
fnmsub.d f4, f15, f26, f25, rtz # perform operation
fnmsub.d f4, f15, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f15, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f15, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f15, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f15, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f15, f26, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x10000000000000)
li x25, 0xed385ba3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
li x3, 0xa0018749 # load x3 with 32 MSBs 0x00000000a0018749
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a0018749
sw x3, 0(x2) # store x3 (0xa0018749) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000a0018749 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
fnmsub.d f25, f15, f4, f3, dyn # perform operation
fnmsub.d f25, f15, f4, f3, rdn # perform operation
fnmsub.d f25, f15, f4, f3, rmm # perform operation
fnmsub.d f25, f15, f4, f3, rne # perform operation
fnmsub.d f25, f15, f4, f3, rtz # perform operation
fnmsub.d f25, f15, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f15, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f15, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f15, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f15, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f15, f4, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8010000000000000)
li x1, 0x029ccdd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
li x3, 0x1d7fd24c # load x3 with 32 MSBs 0x000000001d7fd24c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d7fd24c
sw x3, 0(x2) # store x3 (0x1d7fd24c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000001d7fd24c from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
fnmsub.d f1, f16, f30, f4, dyn # perform operation
fnmsub.d f1, f16, f30, f4, rdn # perform operation
fnmsub.d f1, f16, f30, f4, rmm # perform operation
fnmsub.d f1, f16, f30, f4, rne # perform operation
fnmsub.d f1, f16, f30, f4, rtz # perform operation
fnmsub.d f1, f16, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f16, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f16, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f16, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f16, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f16, f30, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7fefffffffffffff)
li x16, 0x6463299d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
li x3, 0xa5b93e48 # load x3 with 32 MSBs 0x00000000a5b93e48
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a5b93e48
sw x3, 0(x2) # store x3 (0xa5b93e48) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000a5b93e48 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
fnmsub.d f16, f14, f6, f24, dyn # perform operation
fnmsub.d f16, f14, f6, f24, rdn # perform operation
fnmsub.d f16, f14, f6, f24, rmm # perform operation
fnmsub.d f16, f14, f6, f24, rne # perform operation
fnmsub.d f16, f14, f6, f24, rtz # perform operation
fnmsub.d f16, f14, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f14, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f14, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f14, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f14, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f14, f6, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xffefffffffffffff)
li x15, 0x211142e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0xd2745989 # load x3 with 32 MSBs 0x00000000d2745989
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d2745989
sw x3, 0(x2) # store x3 (0xd2745989) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000d2745989 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
fnmsub.d f15, f10, f16, f9, dyn # perform operation
fnmsub.d f15, f10, f16, f9, rdn # perform operation
fnmsub.d f15, f10, f16, f9, rmm # perform operation
fnmsub.d f15, f10, f16, f9, rne # perform operation
fnmsub.d f15, f10, f16, f9, rtz # perform operation
fnmsub.d f15, f10, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f10, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f10, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f10, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f10, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f10, f16, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xfffffffffffff)
li x26, 0x27bcdadb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
li x3, 0x0d05e4bb # load x3 with 32 MSBs 0x000000000d05e4bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d05e4bb
sw x3, 0(x2) # store x3 (0x0d05e4bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000000d05e4bb from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
fnmsub.d f26, f12, f27, f20, dyn # perform operation
fnmsub.d f26, f12, f27, f20, rdn # perform operation
fnmsub.d f26, f12, f27, f20, rmm # perform operation
fnmsub.d f26, f12, f27, f20, rne # perform operation
fnmsub.d f26, f12, f27, f20, rtz # perform operation
fnmsub.d f26, f12, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f12, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f12, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f12, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f12, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f12, f27, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x800fffffffffffff)
li x28, 0x5b347fd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
li x3, 0xdab0837a # load x3 with 32 MSBs 0x00000000dab0837a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dab0837a
sw x3, 0(x2) # store x3 (0xdab0837a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000dab0837a from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
fnmsub.d f28, f12, f13, f4, dyn # perform operation
fnmsub.d f28, f12, f13, f4, rdn # perform operation
fnmsub.d f28, f12, f13, f4, rmm # perform operation
fnmsub.d f28, f12, f13, f4, rne # perform operation
fnmsub.d f28, f12, f13, f4, rtz # perform operation
fnmsub.d f28, f12, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f12, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f12, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f12, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f12, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f12, f13, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8000000000000)
li x5, 0xda8a0645 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
li x3, 0x6603e443 # load x3 with 32 MSBs 0x000000006603e443
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006603e443
sw x3, 0(x2) # store x3 (0x6603e443) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000006603e443 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0008000000000000 from memory into f18
fnmsub.d f5, f23, f6, f18, dyn # perform operation
fnmsub.d f5, f23, f6, f18, rdn # perform operation
fnmsub.d f5, f23, f6, f18, rmm # perform operation
fnmsub.d f5, f23, f6, f18, rne # perform operation
fnmsub.d f5, f23, f6, f18, rtz # perform operation
fnmsub.d f5, f23, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f23, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f23, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f23, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f23, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f23, f6, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8008000000000000)
li x8, 0x2f8f4fd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
li x3, 0x81761e6a # load x3 with 32 MSBs 0x0000000081761e6a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000081761e6a
sw x3, 0(x2) # store x3 (0x81761e6a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000081761e6a from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
fnmsub.d f8, f18, f20, f2, dyn # perform operation
fnmsub.d f8, f18, f20, f2, rdn # perform operation
fnmsub.d f8, f18, f20, f2, rmm # perform operation
fnmsub.d f8, f18, f20, f2, rne # perform operation
fnmsub.d f8, f18, f20, f2, rtz # perform operation
fnmsub.d f8, f18, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f18, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f18, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f18, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f18, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f18, f20, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x1)
li x8, 0x06c90d87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
li x3, 0x6499b6fb # load x3 with 32 MSBs 0x000000006499b6fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006499b6fb
sw x3, 0(x2) # store x3 (0x6499b6fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000006499b6fb from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
fnmsub.d f8, f25, f1, f17, dyn # perform operation
fnmsub.d f8, f25, f1, f17, rdn # perform operation
fnmsub.d f8, f25, f1, f17, rmm # perform operation
fnmsub.d f8, f25, f1, f17, rne # perform operation
fnmsub.d f8, f25, f1, f17, rtz # perform operation
fnmsub.d f8, f25, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f25, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f25, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f25, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f25, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f25, f1, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8000000000000001)
li x24, 0xdf6e2faa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
li x3, 0x50c773ae # load x3 with 32 MSBs 0x0000000050c773ae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050c773ae
sw x3, 0(x2) # store x3 (0x50c773ae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000050c773ae from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
fnmsub.d f24, f1, f29, f31, dyn # perform operation
fnmsub.d f24, f1, f29, f31, rdn # perform operation
fnmsub.d f24, f1, f29, f31, rmm # perform operation
fnmsub.d f24, f1, f29, f31, rne # perform operation
fnmsub.d f24, f1, f29, f31, rtz # perform operation
fnmsub.d f24, f1, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f1, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f1, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f1, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f1, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f1, f29, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7ff0000000000000)
li x8, 0x0a9d9aa0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
li x3, 0xdc63d5cc # load x3 with 32 MSBs 0x00000000dc63d5cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc63d5cc
sw x3, 0(x2) # store x3 (0xdc63d5cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000dc63d5cc from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
fnmsub.d f8, f9, f7, f20, dyn # perform operation
fnmsub.d f8, f9, f7, f20, rdn # perform operation
fnmsub.d f8, f9, f7, f20, rmm # perform operation
fnmsub.d f8, f9, f7, f20, rne # perform operation
fnmsub.d f8, f9, f7, f20, rtz # perform operation
fnmsub.d f8, f9, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f9, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f9, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f9, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f9, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f9, f7, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xfff0000000000000)
li x31, 0x4ebe7d83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
li x3, 0xbf238c3f # load x3 with 32 MSBs 0x00000000bf238c3f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf238c3f
sw x3, 0(x2) # store x3 (0xbf238c3f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000bf238c3f from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
fnmsub.d f31, f29, f28, f15, dyn # perform operation
fnmsub.d f31, f29, f28, f15, rdn # perform operation
fnmsub.d f31, f29, f28, f15, rmm # perform operation
fnmsub.d f31, f29, f28, f15, rne # perform operation
fnmsub.d f31, f29, f28, f15, rtz # perform operation
fnmsub.d f31, f29, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f29, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f29, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f29, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f29, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f29, f28, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7ff8000000000000)
li x10, 0x4ffe57e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
li x3, 0x25aae25b # load x3 with 32 MSBs 0x0000000025aae25b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000025aae25b
sw x3, 0(x2) # store x3 (0x25aae25b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000025aae25b from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff8000000000000 from memory into f4
fnmsub.d f10, f23, f11, f4, dyn # perform operation
fnmsub.d f10, f23, f11, f4, rdn # perform operation
fnmsub.d f10, f23, f11, f4, rmm # perform operation
fnmsub.d f10, f23, f11, f4, rne # perform operation
fnmsub.d f10, f23, f11, f4, rtz # perform operation
fnmsub.d f10, f23, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f23, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f23, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f23, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f23, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f23, f11, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7fffffffffffffff)
li x21, 0xd6575c91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
li x3, 0x5fc01bbb # load x3 with 32 MSBs 0x000000005fc01bbb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005fc01bbb
sw x3, 0(x2) # store x3 (0x5fc01bbb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000005fc01bbb from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
fnmsub.d f21, f22, f29, f11, dyn # perform operation
fnmsub.d f21, f22, f29, f11, rdn # perform operation
fnmsub.d f21, f22, f29, f11, rmm # perform operation
fnmsub.d f21, f22, f29, f11, rne # perform operation
fnmsub.d f21, f22, f29, f11, rtz # perform operation
fnmsub.d f21, f22, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f22, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f22, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f22, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f22, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f22, f29, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7ff0000000000001)
li x25, 0x1765f51a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
li x3, 0xc0a098b6 # load x3 with 32 MSBs 0x00000000c0a098b6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c0a098b6
sw x3, 0(x2) # store x3 (0xc0a098b6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000c0a098b6 from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
fnmsub.d f25, f7, f3, f22, dyn # perform operation
fnmsub.d f25, f7, f3, f22, rdn # perform operation
fnmsub.d f25, f7, f3, f22, rmm # perform operation
fnmsub.d f25, f7, f3, f22, rne # perform operation
fnmsub.d f25, f7, f3, f22, rtz # perform operation
fnmsub.d f25, f7, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f7, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f7, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f7, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f7, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f7, f3, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7ff7ffffffffffff)
li x5, 0xa609ae55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
li x3, 0x9591d83e # load x3 with 32 MSBs 0x000000009591d83e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009591d83e
sw x3, 0(x2) # store x3 (0x9591d83e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000009591d83e from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
fnmsub.d f5, f8, f22, f19, dyn # perform operation
fnmsub.d f5, f8, f22, f19, rdn # perform operation
fnmsub.d f5, f8, f22, f19, rmm # perform operation
fnmsub.d f5, f8, f22, f19, rne # perform operation
fnmsub.d f5, f8, f22, f19, rtz # perform operation
fnmsub.d f5, f8, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f8, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f8, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f8, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f8, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f8, f22, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x5a392534a57711ad)
li x12, 0xcd76a07f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
li x3, 0x608d21d2 # load x3 with 32 MSBs 0x00000000608d21d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000608d21d2
sw x3, 0(x2) # store x3 (0x608d21d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000608d21d2 from memory into f14
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
fnmsub.d f12, f1, f14, f10, dyn # perform operation
fnmsub.d f12, f1, f14, f10, rdn # perform operation
fnmsub.d f12, f1, f14, f10, rmm # perform operation
fnmsub.d f12, f1, f14, f10, rne # perform operation
fnmsub.d f12, f1, f14, f10, rtz # perform operation
fnmsub.d f12, f1, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f1, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f1, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f1, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f1, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f1, f14, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xa6e895993737426c)
li x29, 0x8764070b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
li x3, 0x9539dc03 # load x3 with 32 MSBs 0x000000009539dc03
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009539dc03
sw x3, 0(x2) # store x3 (0x9539dc03) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000009539dc03 from memory into f10
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
fnmsub.d f29, f17, f10, f12, dyn # perform operation
fnmsub.d f29, f17, f10, f12, rdn # perform operation
fnmsub.d f29, f17, f10, f12, rmm # perform operation
fnmsub.d f29, f17, f10, f12, rne # perform operation
fnmsub.d f29, f17, f10, f12, rtz # perform operation
fnmsub.d f29, f17, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f17, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f17, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f17, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f17, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f17, f10, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x0)
li x1, 0x4e2c6f8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
li x3, 0x17e0d91e # load x3 with 32 MSBs 0x0000000017e0d91e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000017e0d91e
sw x3, 0(x2) # store x3 (0x17e0d91e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000017e0d91e from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
fnmsub.d f1, f25, f24, f26, dyn # perform operation
fnmsub.d f1, f25, f24, f26, rdn # perform operation
fnmsub.d f1, f25, f24, f26, rmm # perform operation
fnmsub.d f1, f25, f24, f26, rne # perform operation
fnmsub.d f1, f25, f24, f26, rtz # perform operation
fnmsub.d f1, f25, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f25, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f25, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f25, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f25, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f25, f24, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8000000000000000)
li x30, 0xd3c25f66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
li x3, 0x9a49e270 # load x3 with 32 MSBs 0x000000009a49e270
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009a49e270
sw x3, 0(x2) # store x3 (0x9a49e270) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000009a49e270 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
fnmsub.d f30, f15, f9, f17, dyn # perform operation
fnmsub.d f30, f15, f9, f17, rdn # perform operation
fnmsub.d f30, f15, f9, f17, rmm # perform operation
fnmsub.d f30, f15, f9, f17, rne # perform operation
fnmsub.d f30, f15, f9, f17, rtz # perform operation
fnmsub.d f30, f15, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f15, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f15, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f15, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f15, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f15, f9, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x3ff0000000000000)
li x4, 0x525c6f79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0x4b60106d # load x3 with 32 MSBs 0x000000004b60106d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004b60106d
sw x3, 0(x2) # store x3 (0x4b60106d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000004b60106d from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
fnmsub.d f4, f12, f15, f17, dyn # perform operation
fnmsub.d f4, f12, f15, f17, rdn # perform operation
fnmsub.d f4, f12, f15, f17, rmm # perform operation
fnmsub.d f4, f12, f15, f17, rne # perform operation
fnmsub.d f4, f12, f15, f17, rtz # perform operation
fnmsub.d f4, f12, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f12, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f12, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f12, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f12, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f12, f15, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xbff0000000000000)
li x10, 0x115e8f9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0x58115006 # load x3 with 32 MSBs 0x0000000058115006
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000058115006
sw x3, 0(x2) # store x3 (0x58115006) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000058115006 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
fnmsub.d f10, f1, f14, f16, dyn # perform operation
fnmsub.d f10, f1, f14, f16, rdn # perform operation
fnmsub.d f10, f1, f14, f16, rmm # perform operation
fnmsub.d f10, f1, f14, f16, rne # perform operation
fnmsub.d f10, f1, f14, f16, rtz # perform operation
fnmsub.d f10, f1, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f1, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f1, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f1, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f1, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f1, f14, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x3ff8000000000000)
li x20, 0x5eb92126 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
li x3, 0xcf2b1a8b # load x3 with 32 MSBs 0x00000000cf2b1a8b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cf2b1a8b
sw x3, 0(x2) # store x3 (0xcf2b1a8b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000cf2b1a8b from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
fnmsub.d f20, f2, f21, f16, dyn # perform operation
fnmsub.d f20, f2, f21, f16, rdn # perform operation
fnmsub.d f20, f2, f21, f16, rmm # perform operation
fnmsub.d f20, f2, f21, f16, rne # perform operation
fnmsub.d f20, f2, f21, f16, rtz # perform operation
fnmsub.d f20, f2, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f2, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f2, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f2, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f2, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f2, f21, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xbff8000000000000)
li x23, 0x81ae532d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0xbd331b1c # load x3 with 32 MSBs 0x00000000bd331b1c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bd331b1c
sw x3, 0(x2) # store x3 (0xbd331b1c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000bd331b1c from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
fnmsub.d f23, f1, f21, f13, dyn # perform operation
fnmsub.d f23, f1, f21, f13, rdn # perform operation
fnmsub.d f23, f1, f21, f13, rmm # perform operation
fnmsub.d f23, f1, f21, f13, rne # perform operation
fnmsub.d f23, f1, f21, f13, rtz # perform operation
fnmsub.d f23, f1, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f1, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f1, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f1, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f1, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f1, f21, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x4000000000000000)
li x27, 0x2d55246d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0x513f0c33 # load x3 with 32 MSBs 0x00000000513f0c33
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000513f0c33
sw x3, 0(x2) # store x3 (0x513f0c33) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000513f0c33 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
fnmsub.d f27, f26, f8, f25, dyn # perform operation
fnmsub.d f27, f26, f8, f25, rdn # perform operation
fnmsub.d f27, f26, f8, f25, rmm # perform operation
fnmsub.d f27, f26, f8, f25, rne # perform operation
fnmsub.d f27, f26, f8, f25, rtz # perform operation
fnmsub.d f27, f26, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f26, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f26, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f26, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f26, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f26, f8, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xc000000000000000)
li x9, 0xcfa83ffc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
li x3, 0xe2d47553 # load x3 with 32 MSBs 0x00000000e2d47553
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e2d47553
sw x3, 0(x2) # store x3 (0xe2d47553) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000e2d47553 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
fnmsub.d f9, f25, f11, f7, dyn # perform operation
fnmsub.d f9, f25, f11, f7, rdn # perform operation
fnmsub.d f9, f25, f11, f7, rmm # perform operation
fnmsub.d f9, f25, f11, f7, rne # perform operation
fnmsub.d f9, f25, f11, f7, rtz # perform operation
fnmsub.d f9, f25, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f25, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f25, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f25, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f25, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f25, f11, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x10000000000000)
li x2, 0x054891dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
li x3, 0x37d17e55 # load x3 with 32 MSBs 0x0000000037d17e55
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000037d17e55
sw x3, 0(x2) # store x3 (0x37d17e55) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000037d17e55 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
fnmsub.d f2, f27, f5, f17, dyn # perform operation
fnmsub.d f2, f27, f5, f17, rdn # perform operation
fnmsub.d f2, f27, f5, f17, rmm # perform operation
fnmsub.d f2, f27, f5, f17, rne # perform operation
fnmsub.d f2, f27, f5, f17, rtz # perform operation
fnmsub.d f2, f27, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f27, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f27, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f27, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f27, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f27, f5, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8010000000000000)
li x27, 0x3cad7ec3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0xff43edf1 # load x3 with 32 MSBs 0x00000000ff43edf1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff43edf1
sw x3, 0(x2) # store x3 (0xff43edf1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000ff43edf1 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
fnmsub.d f27, f1, f21, f24, dyn # perform operation
fnmsub.d f27, f1, f21, f24, rdn # perform operation
fnmsub.d f27, f1, f21, f24, rmm # perform operation
fnmsub.d f27, f1, f21, f24, rne # perform operation
fnmsub.d f27, f1, f21, f24, rtz # perform operation
fnmsub.d f27, f1, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f1, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f1, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f1, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f1, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f1, f21, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7fefffffffffffff)
li x21, 0x0ed09b19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
li x3, 0x1108c3be # load x3 with 32 MSBs 0x000000001108c3be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001108c3be
sw x3, 0(x2) # store x3 (0x1108c3be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000001108c3be from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
fnmsub.d f21, f13, f26, f2, dyn # perform operation
fnmsub.d f21, f13, f26, f2, rdn # perform operation
fnmsub.d f21, f13, f26, f2, rmm # perform operation
fnmsub.d f21, f13, f26, f2, rne # perform operation
fnmsub.d f21, f13, f26, f2, rtz # perform operation
fnmsub.d f21, f13, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f13, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f13, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f13, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f13, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f13, f26, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xffefffffffffffff)
li x1, 0x9733a18b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0xe7cd1a33 # load x3 with 32 MSBs 0x00000000e7cd1a33
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e7cd1a33
sw x3, 0(x2) # store x3 (0xe7cd1a33) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000e7cd1a33 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
fnmsub.d f1, f26, f20, f4, dyn # perform operation
fnmsub.d f1, f26, f20, f4, rdn # perform operation
fnmsub.d f1, f26, f20, f4, rmm # perform operation
fnmsub.d f1, f26, f20, f4, rne # perform operation
fnmsub.d f1, f26, f20, f4, rtz # perform operation
fnmsub.d f1, f26, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f26, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f26, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f26, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f26, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f26, f20, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xfffffffffffff)
li x27, 0xe686432d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
li x3, 0xfae85c05 # load x3 with 32 MSBs 0x00000000fae85c05
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fae85c05
sw x3, 0(x2) # store x3 (0xfae85c05) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000fae85c05 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
fnmsub.d f27, f23, f18, f11, dyn # perform operation
fnmsub.d f27, f23, f18, f11, rdn # perform operation
fnmsub.d f27, f23, f18, f11, rmm # perform operation
fnmsub.d f27, f23, f18, f11, rne # perform operation
fnmsub.d f27, f23, f18, f11, rtz # perform operation
fnmsub.d f27, f23, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f23, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f23, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f23, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f23, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f23, f18, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x800fffffffffffff)
li x18, 0x656edb9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
li x3, 0x3f567ae6 # load x3 with 32 MSBs 0x000000003f567ae6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003f567ae6
sw x3, 0(x2) # store x3 (0x3f567ae6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000003f567ae6 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
fnmsub.d f18, f23, f31, f2, dyn # perform operation
fnmsub.d f18, f23, f31, f2, rdn # perform operation
fnmsub.d f18, f23, f31, f2, rmm # perform operation
fnmsub.d f18, f23, f31, f2, rne # perform operation
fnmsub.d f18, f23, f31, f2, rtz # perform operation
fnmsub.d f18, f23, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f23, f31, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8000000000000)
li x6, 0xb828635a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
li x3, 0xd5a4eefc # load x3 with 32 MSBs 0x00000000d5a4eefc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d5a4eefc
sw x3, 0(x2) # store x3 (0xd5a4eefc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000d5a4eefc from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
fnmsub.d f6, f21, f16, f25, dyn # perform operation
fnmsub.d f6, f21, f16, f25, rdn # perform operation
fnmsub.d f6, f21, f16, f25, rmm # perform operation
fnmsub.d f6, f21, f16, f25, rne # perform operation
fnmsub.d f6, f21, f16, f25, rtz # perform operation
fnmsub.d f6, f21, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f21, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f21, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f21, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f21, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f21, f16, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8008000000000000)
li x8, 0xe8c024f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0x0f51e195 # load x3 with 32 MSBs 0x000000000f51e195
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f51e195
sw x3, 0(x2) # store x3 (0x0f51e195) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000000f51e195 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
fnmsub.d f8, f12, f9, f31, dyn # perform operation
fnmsub.d f8, f12, f9, f31, rdn # perform operation
fnmsub.d f8, f12, f9, f31, rmm # perform operation
fnmsub.d f8, f12, f9, f31, rne # perform operation
fnmsub.d f8, f12, f9, f31, rtz # perform operation
fnmsub.d f8, f12, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f12, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f12, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f12, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f12, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f12, f9, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x1)
li x20, 0x690b76b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
li x3, 0xe3a6717b # load x3 with 32 MSBs 0x00000000e3a6717b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e3a6717b
sw x3, 0(x2) # store x3 (0xe3a6717b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000e3a6717b from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
fnmsub.d f20, f27, f11, f18, dyn # perform operation
fnmsub.d f20, f27, f11, f18, rdn # perform operation
fnmsub.d f20, f27, f11, f18, rmm # perform operation
fnmsub.d f20, f27, f11, f18, rne # perform operation
fnmsub.d f20, f27, f11, f18, rtz # perform operation
fnmsub.d f20, f27, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f27, f11, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8000000000000001)
li x9, 0xcf04fa16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
li x3, 0x996596e3 # load x3 with 32 MSBs 0x00000000996596e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000996596e3
sw x3, 0(x2) # store x3 (0x996596e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000996596e3 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
fnmsub.d f9, f8, f5, f18, dyn # perform operation
fnmsub.d f9, f8, f5, f18, rdn # perform operation
fnmsub.d f9, f8, f5, f18, rmm # perform operation
fnmsub.d f9, f8, f5, f18, rne # perform operation
fnmsub.d f9, f8, f5, f18, rtz # perform operation
fnmsub.d f9, f8, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f8, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f8, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f8, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f8, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f8, f5, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7ff0000000000000)
li x26, 0x3c999c00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0xbcb76f88 # load x3 with 32 MSBs 0x00000000bcb76f88
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bcb76f88
sw x3, 0(x2) # store x3 (0xbcb76f88) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000bcb76f88 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
fnmsub.d f26, f7, f28, f29, dyn # perform operation
fnmsub.d f26, f7, f28, f29, rdn # perform operation
fnmsub.d f26, f7, f28, f29, rmm # perform operation
fnmsub.d f26, f7, f28, f29, rne # perform operation
fnmsub.d f26, f7, f28, f29, rtz # perform operation
fnmsub.d f26, f7, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f7, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f7, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f7, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f7, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f7, f28, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xfff0000000000000)
li x3, 0x62f63c2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
li x3, 0xf82206ee # load x3 with 32 MSBs 0x00000000f82206ee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f82206ee
sw x3, 0(x2) # store x3 (0xf82206ee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000f82206ee from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
fnmsub.d f3, f14, f15, f24, dyn # perform operation
fnmsub.d f3, f14, f15, f24, rdn # perform operation
fnmsub.d f3, f14, f15, f24, rmm # perform operation
fnmsub.d f3, f14, f15, f24, rne # perform operation
fnmsub.d f3, f14, f15, f24, rtz # perform operation
fnmsub.d f3, f14, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f14, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f14, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f14, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f14, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f14, f15, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7ff8000000000000)
li x2, 0x18c37cff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0x84a24026 # load x3 with 32 MSBs 0x0000000084a24026
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084a24026
sw x3, 0(x2) # store x3 (0x84a24026) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000084a24026 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
fnmsub.d f2, f1, f11, f31, dyn # perform operation
fnmsub.d f2, f1, f11, f31, rdn # perform operation
fnmsub.d f2, f1, f11, f31, rmm # perform operation
fnmsub.d f2, f1, f11, f31, rne # perform operation
fnmsub.d f2, f1, f11, f31, rtz # perform operation
fnmsub.d f2, f1, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f1, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f1, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f1, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f1, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f1, f11, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7fffffffffffffff)
li x21, 0x8e6b950c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
li x3, 0x9b409efd # load x3 with 32 MSBs 0x000000009b409efd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b409efd
sw x3, 0(x2) # store x3 (0x9b409efd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000009b409efd from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
fnmsub.d f21, f16, f19, f1, dyn # perform operation
fnmsub.d f21, f16, f19, f1, rdn # perform operation
fnmsub.d f21, f16, f19, f1, rmm # perform operation
fnmsub.d f21, f16, f19, f1, rne # perform operation
fnmsub.d f21, f16, f19, f1, rtz # perform operation
fnmsub.d f21, f16, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f16, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f16, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f16, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f16, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f16, f19, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7ff0000000000001)
li x6, 0x53aaa5d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0x3e02729a # load x3 with 32 MSBs 0x000000003e02729a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e02729a
sw x3, 0(x2) # store x3 (0x3e02729a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000003e02729a from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
fnmsub.d f6, f26, f8, f31, dyn # perform operation
fnmsub.d f6, f26, f8, f31, rdn # perform operation
fnmsub.d f6, f26, f8, f31, rmm # perform operation
fnmsub.d f6, f26, f8, f31, rne # perform operation
fnmsub.d f6, f26, f8, f31, rtz # perform operation
fnmsub.d f6, f26, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f26, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f26, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f26, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f26, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f26, f8, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7ff7ffffffffffff)
li x8, 0x541da682 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
li x3, 0x3df0704e # load x3 with 32 MSBs 0x000000003df0704e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003df0704e
sw x3, 0(x2) # store x3 (0x3df0704e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000003df0704e from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
fnmsub.d f8, f9, f26, f22, dyn # perform operation
fnmsub.d f8, f9, f26, f22, rdn # perform operation
fnmsub.d f8, f9, f26, f22, rmm # perform operation
fnmsub.d f8, f9, f26, f22, rne # perform operation
fnmsub.d f8, f9, f26, f22, rtz # perform operation
fnmsub.d f8, f9, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f9, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f9, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f9, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f9, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f9, f26, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x5a392534a57711ad)
li x30, 0x25004e0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
li x3, 0x205b2612 # load x3 with 32 MSBs 0x00000000205b2612
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000205b2612
sw x3, 0(x2) # store x3 (0x205b2612) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000205b2612 from memory into f18
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
fnmsub.d f30, f11, f18, f13, dyn # perform operation
fnmsub.d f30, f11, f18, f13, rdn # perform operation
fnmsub.d f30, f11, f18, f13, rmm # perform operation
fnmsub.d f30, f11, f18, f13, rne # perform operation
fnmsub.d f30, f11, f18, f13, rtz # perform operation
fnmsub.d f30, f11, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f11, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f11, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f11, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f11, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f11, f18, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xa6e895993737426c)
li x13, 0x18b9b70d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
li x3, 0xd4517680 # load x3 with 32 MSBs 0x00000000d4517680
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d4517680
sw x3, 0(x2) # store x3 (0xd4517680) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000d4517680 from memory into f11
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
fnmsub.d f13, f10, f11, f1, dyn # perform operation
fnmsub.d f13, f10, f11, f1, rdn # perform operation
fnmsub.d f13, f10, f11, f1, rmm # perform operation
fnmsub.d f13, f10, f11, f1, rne # perform operation
fnmsub.d f13, f10, f11, f1, rtz # perform operation
fnmsub.d f13, f10, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f10, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f10, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f10, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f10, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f10, f11, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x0)
li x19, 0x15883245 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0xc0249b29 # load x3 with 32 MSBs 0x00000000c0249b29
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c0249b29
sw x3, 0(x2) # store x3 (0xc0249b29) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000c0249b29 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
fnmsub.d f19, f1, f26, f28, dyn # perform operation
fnmsub.d f19, f1, f26, f28, rdn # perform operation
fnmsub.d f19, f1, f26, f28, rmm # perform operation
fnmsub.d f19, f1, f26, f28, rne # perform operation
fnmsub.d f19, f1, f26, f28, rtz # perform operation
fnmsub.d f19, f1, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f1, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f1, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f1, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f1, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f1, f26, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8000000000000000)
li x15, 0xa5cd33d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
li x3, 0x178540af # load x3 with 32 MSBs 0x00000000178540af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000178540af
sw x3, 0(x2) # store x3 (0x178540af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000178540af from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
fnmsub.d f15, f7, f26, f9, dyn # perform operation
fnmsub.d f15, f7, f26, f9, rdn # perform operation
fnmsub.d f15, f7, f26, f9, rmm # perform operation
fnmsub.d f15, f7, f26, f9, rne # perform operation
fnmsub.d f15, f7, f26, f9, rtz # perform operation
fnmsub.d f15, f7, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f7, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f7, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f7, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f7, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f7, f26, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x3ff0000000000000)
li x9, 0xa2397cdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
li x3, 0x0826e313 # load x3 with 32 MSBs 0x000000000826e313
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000826e313
sw x3, 0(x2) # store x3 (0x0826e313) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000000826e313 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
fnmsub.d f9, f19, f24, f29, dyn # perform operation
fnmsub.d f9, f19, f24, f29, rdn # perform operation
fnmsub.d f9, f19, f24, f29, rmm # perform operation
fnmsub.d f9, f19, f24, f29, rne # perform operation
fnmsub.d f9, f19, f24, f29, rtz # perform operation
fnmsub.d f9, f19, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f19, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f19, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f19, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f19, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f19, f24, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xbff0000000000000)
li x7, 0xc62c8425 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
li x3, 0x69c3832d # load x3 with 32 MSBs 0x0000000069c3832d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000069c3832d
sw x3, 0(x2) # store x3 (0x69c3832d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000069c3832d from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
fnmsub.d f7, f8, f27, f5, dyn # perform operation
fnmsub.d f7, f8, f27, f5, rdn # perform operation
fnmsub.d f7, f8, f27, f5, rmm # perform operation
fnmsub.d f7, f8, f27, f5, rne # perform operation
fnmsub.d f7, f8, f27, f5, rtz # perform operation
fnmsub.d f7, f8, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f8, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f8, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f8, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f8, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f8, f27, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x3ff8000000000000)
li x20, 0x8a3e3903 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
li x3, 0x225565c0 # load x3 with 32 MSBs 0x00000000225565c0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000225565c0
sw x3, 0(x2) # store x3 (0x225565c0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000225565c0 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
fnmsub.d f20, f12, f7, f8, dyn # perform operation
fnmsub.d f20, f12, f7, f8, rdn # perform operation
fnmsub.d f20, f12, f7, f8, rmm # perform operation
fnmsub.d f20, f12, f7, f8, rne # perform operation
fnmsub.d f20, f12, f7, f8, rtz # perform operation
fnmsub.d f20, f12, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f12, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f12, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f12, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f12, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f12, f7, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xbff8000000000000)
li x2, 0xce7bf915 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xc000000000000000 from memory into f26
li x3, 0xbf9e0fa9 # load x3 with 32 MSBs 0x00000000bf9e0fa9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf9e0fa9
sw x3, 0(x2) # store x3 (0xbf9e0fa9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000bf9e0fa9 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
fnmsub.d f2, f26, f13, f19, dyn # perform operation
fnmsub.d f2, f26, f13, f19, rdn # perform operation
fnmsub.d f2, f26, f13, f19, rmm # perform operation
fnmsub.d f2, f26, f13, f19, rne # perform operation
fnmsub.d f2, f26, f13, f19, rtz # perform operation
fnmsub.d f2, f26, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f26, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f26, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f26, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f26, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f26, f13, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x4000000000000000)
li x20, 0xffe97ea6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
li x3, 0x3dbd265b # load x3 with 32 MSBs 0x000000003dbd265b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003dbd265b
sw x3, 0(x2) # store x3 (0x3dbd265b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000003dbd265b from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
fnmsub.d f20, f12, f8, f30, dyn # perform operation
fnmsub.d f20, f12, f8, f30, rdn # perform operation
fnmsub.d f20, f12, f8, f30, rmm # perform operation
fnmsub.d f20, f12, f8, f30, rne # perform operation
fnmsub.d f20, f12, f8, f30, rtz # perform operation
fnmsub.d f20, f12, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f12, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f12, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f12, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f12, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f12, f8, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xc000000000000000)
li x8, 0x260e087b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
li x3, 0x8bb170d2 # load x3 with 32 MSBs 0x000000008bb170d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008bb170d2
sw x3, 0(x2) # store x3 (0x8bb170d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000008bb170d2 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
fnmsub.d f8, f18, f10, f24, dyn # perform operation
fnmsub.d f8, f18, f10, f24, rdn # perform operation
fnmsub.d f8, f18, f10, f24, rmm # perform operation
fnmsub.d f8, f18, f10, f24, rne # perform operation
fnmsub.d f8, f18, f10, f24, rtz # perform operation
fnmsub.d f8, f18, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f18, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f18, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f18, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f18, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f18, f10, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x10000000000000)
li x9, 0x5fad9907 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
li x3, 0x87cd37f5 # load x3 with 32 MSBs 0x0000000087cd37f5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000087cd37f5
sw x3, 0(x2) # store x3 (0x87cd37f5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000087cd37f5 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
fnmsub.d f9, f15, f22, f19, dyn # perform operation
fnmsub.d f9, f15, f22, f19, rdn # perform operation
fnmsub.d f9, f15, f22, f19, rmm # perform operation
fnmsub.d f9, f15, f22, f19, rne # perform operation
fnmsub.d f9, f15, f22, f19, rtz # perform operation
fnmsub.d f9, f15, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f15, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f15, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f15, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f15, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f15, f22, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8010000000000000)
li x14, 0x99fef38d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0x20468f85 # load x3 with 32 MSBs 0x0000000020468f85
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020468f85
sw x3, 0(x2) # store x3 (0x20468f85) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000020468f85 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
fnmsub.d f14, f25, f28, f24, dyn # perform operation
fnmsub.d f14, f25, f28, f24, rdn # perform operation
fnmsub.d f14, f25, f28, f24, rmm # perform operation
fnmsub.d f14, f25, f28, f24, rne # perform operation
fnmsub.d f14, f25, f28, f24, rtz # perform operation
fnmsub.d f14, f25, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f25, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f25, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f25, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f25, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f25, f28, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7fefffffffffffff)
li x22, 0x5d5d9940 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
li x3, 0xaf411dd2 # load x3 with 32 MSBs 0x00000000af411dd2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af411dd2
sw x3, 0(x2) # store x3 (0xaf411dd2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000af411dd2 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
fnmsub.d f22, f13, f30, f9, dyn # perform operation
fnmsub.d f22, f13, f30, f9, rdn # perform operation
fnmsub.d f22, f13, f30, f9, rmm # perform operation
fnmsub.d f22, f13, f30, f9, rne # perform operation
fnmsub.d f22, f13, f30, f9, rtz # perform operation
fnmsub.d f22, f13, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f13, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f13, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f13, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f13, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f13, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xffefffffffffffff)
li x15, 0xec43a821 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
li x3, 0xec0f6fde # load x3 with 32 MSBs 0x00000000ec0f6fde
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec0f6fde
sw x3, 0(x2) # store x3 (0xec0f6fde) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000ec0f6fde from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
fnmsub.d f15, f24, f21, f20, dyn # perform operation
fnmsub.d f15, f24, f21, f20, rdn # perform operation
fnmsub.d f15, f24, f21, f20, rmm # perform operation
fnmsub.d f15, f24, f21, f20, rne # perform operation
fnmsub.d f15, f24, f21, f20, rtz # perform operation
fnmsub.d f15, f24, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f24, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f24, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f24, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f24, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f24, f21, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xfffffffffffff)
li x28, 0x0f5fff05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
li x3, 0x50dc140d # load x3 with 32 MSBs 0x0000000050dc140d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050dc140d
sw x3, 0(x2) # store x3 (0x50dc140d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000050dc140d from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
fnmsub.d f28, f27, f19, f1, dyn # perform operation
fnmsub.d f28, f27, f19, f1, rdn # perform operation
fnmsub.d f28, f27, f19, f1, rmm # perform operation
fnmsub.d f28, f27, f19, f1, rne # perform operation
fnmsub.d f28, f27, f19, f1, rtz # perform operation
fnmsub.d f28, f27, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f27, f19, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x800fffffffffffff)
li x7, 0x8ec98563 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
li x3, 0x9e57cb9c # load x3 with 32 MSBs 0x000000009e57cb9c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e57cb9c
sw x3, 0(x2) # store x3 (0x9e57cb9c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000009e57cb9c from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
fnmsub.d f7, f5, f3, f17, dyn # perform operation
fnmsub.d f7, f5, f3, f17, rdn # perform operation
fnmsub.d f7, f5, f3, f17, rmm # perform operation
fnmsub.d f7, f5, f3, f17, rne # perform operation
fnmsub.d f7, f5, f3, f17, rtz # perform operation
fnmsub.d f7, f5, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f5, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f5, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f5, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f5, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f5, f3, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8000000000000)
li x22, 0xdb63be62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
li x3, 0x3ecab2fe # load x3 with 32 MSBs 0x000000003ecab2fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003ecab2fe
sw x3, 0(x2) # store x3 (0x3ecab2fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000003ecab2fe from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
fnmsub.d f22, f31, f19, f5, dyn # perform operation
fnmsub.d f22, f31, f19, f5, rdn # perform operation
fnmsub.d f22, f31, f19, f5, rmm # perform operation
fnmsub.d f22, f31, f19, f5, rne # perform operation
fnmsub.d f22, f31, f19, f5, rtz # perform operation
fnmsub.d f22, f31, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f31, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f31, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f31, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f31, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f31, f19, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8008000000000000)
li x11, 0x77f5822c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
li x3, 0xfda34984 # load x3 with 32 MSBs 0x00000000fda34984
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fda34984
sw x3, 0(x2) # store x3 (0xfda34984) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000fda34984 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
fnmsub.d f11, f7, f10, f3, dyn # perform operation
fnmsub.d f11, f7, f10, f3, rdn # perform operation
fnmsub.d f11, f7, f10, f3, rmm # perform operation
fnmsub.d f11, f7, f10, f3, rne # perform operation
fnmsub.d f11, f7, f10, f3, rtz # perform operation
fnmsub.d f11, f7, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f7, f10, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x1)
li x19, 0xa002c190 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0xa61cf0f1 # load x3 with 32 MSBs 0x00000000a61cf0f1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a61cf0f1
sw x3, 0(x2) # store x3 (0xa61cf0f1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000a61cf0f1 from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
fnmsub.d f19, f1, f8, f14, dyn # perform operation
fnmsub.d f19, f1, f8, f14, rdn # perform operation
fnmsub.d f19, f1, f8, f14, rmm # perform operation
fnmsub.d f19, f1, f8, f14, rne # perform operation
fnmsub.d f19, f1, f8, f14, rtz # perform operation
fnmsub.d f19, f1, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f1, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f1, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f1, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f1, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f1, f8, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8000000000000001)
li x25, 0x1671bade # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
li x3, 0x52ba778e # load x3 with 32 MSBs 0x0000000052ba778e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000052ba778e
sw x3, 0(x2) # store x3 (0x52ba778e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000052ba778e from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
fnmsub.d f25, f27, f1, f23, dyn # perform operation
fnmsub.d f25, f27, f1, f23, rdn # perform operation
fnmsub.d f25, f27, f1, f23, rmm # perform operation
fnmsub.d f25, f27, f1, f23, rne # perform operation
fnmsub.d f25, f27, f1, f23, rtz # perform operation
fnmsub.d f25, f27, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f27, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f27, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f27, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f27, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f27, f1, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7ff0000000000000)
li x27, 0xab06afa4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
li x3, 0x1bd6da43 # load x3 with 32 MSBs 0x000000001bd6da43
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001bd6da43
sw x3, 0(x2) # store x3 (0x1bd6da43) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000001bd6da43 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
fnmsub.d f27, f10, f2, f29, dyn # perform operation
fnmsub.d f27, f10, f2, f29, rdn # perform operation
fnmsub.d f27, f10, f2, f29, rmm # perform operation
fnmsub.d f27, f10, f2, f29, rne # perform operation
fnmsub.d f27, f10, f2, f29, rtz # perform operation
fnmsub.d f27, f10, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f10, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f10, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f10, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f10, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f10, f2, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xfff0000000000000)
li x27, 0xdca38ff0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
li x3, 0xeff69fb4 # load x3 with 32 MSBs 0x00000000eff69fb4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eff69fb4
sw x3, 0(x2) # store x3 (0xeff69fb4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000eff69fb4 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff0000000000000 from memory into f28
fnmsub.d f27, f6, f24, f28, dyn # perform operation
fnmsub.d f27, f6, f24, f28, rdn # perform operation
fnmsub.d f27, f6, f24, f28, rmm # perform operation
fnmsub.d f27, f6, f24, f28, rne # perform operation
fnmsub.d f27, f6, f24, f28, rtz # perform operation
fnmsub.d f27, f6, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f6, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f6, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f6, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f6, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f6, f24, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7ff8000000000000)
li x26, 0x41a7f019 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
li x3, 0x8ed9794b # load x3 with 32 MSBs 0x000000008ed9794b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008ed9794b
sw x3, 0(x2) # store x3 (0x8ed9794b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000008ed9794b from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
fnmsub.d f26, f20, f22, f6, dyn # perform operation
fnmsub.d f26, f20, f22, f6, rdn # perform operation
fnmsub.d f26, f20, f22, f6, rmm # perform operation
fnmsub.d f26, f20, f22, f6, rne # perform operation
fnmsub.d f26, f20, f22, f6, rtz # perform operation
fnmsub.d f26, f20, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f20, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f20, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f20, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f20, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f20, f22, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7fffffffffffffff)
li x5, 0xdb85b42f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
li x3, 0xcd9a4724 # load x3 with 32 MSBs 0x00000000cd9a4724
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cd9a4724
sw x3, 0(x2) # store x3 (0xcd9a4724) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000cd9a4724 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
fnmsub.d f5, f27, f31, f8, dyn # perform operation
fnmsub.d f5, f27, f31, f8, rdn # perform operation
fnmsub.d f5, f27, f31, f8, rmm # perform operation
fnmsub.d f5, f27, f31, f8, rne # perform operation
fnmsub.d f5, f27, f31, f8, rtz # perform operation
fnmsub.d f5, f27, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f27, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f27, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f27, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f27, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f27, f31, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7ff0000000000001)
li x14, 0x7f05a737 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
li x3, 0x65151163 # load x3 with 32 MSBs 0x0000000065151163
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000065151163
sw x3, 0(x2) # store x3 (0x65151163) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000065151163 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
fnmsub.d f14, f29, f12, f13, dyn # perform operation
fnmsub.d f14, f29, f12, f13, rdn # perform operation
fnmsub.d f14, f29, f12, f13, rmm # perform operation
fnmsub.d f14, f29, f12, f13, rne # perform operation
fnmsub.d f14, f29, f12, f13, rtz # perform operation
fnmsub.d f14, f29, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f29, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f29, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f29, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f29, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f29, f12, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7ff7ffffffffffff)
li x21, 0x7c4142d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
li x3, 0x18ff9073 # load x3 with 32 MSBs 0x0000000018ff9073
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018ff9073
sw x3, 0(x2) # store x3 (0x18ff9073) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000018ff9073 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
fnmsub.d f21, f29, f25, f13, dyn # perform operation
fnmsub.d f21, f29, f25, f13, rdn # perform operation
fnmsub.d f21, f29, f25, f13, rmm # perform operation
fnmsub.d f21, f29, f25, f13, rne # perform operation
fnmsub.d f21, f29, f25, f13, rtz # perform operation
fnmsub.d f21, f29, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f29, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f29, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f29, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f29, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f29, f25, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x5a392534a57711ad)
li x1, 0x1e25b31f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
li x3, 0xe6d02150 # load x3 with 32 MSBs 0x00000000e6d02150
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e6d02150
sw x3, 0(x2) # store x3 (0xe6d02150) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000e6d02150 from memory into f3
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
fnmsub.d f1, f24, f3, f25, dyn # perform operation
fnmsub.d f1, f24, f3, f25, rdn # perform operation
fnmsub.d f1, f24, f3, f25, rmm # perform operation
fnmsub.d f1, f24, f3, f25, rne # perform operation
fnmsub.d f1, f24, f3, f25, rtz # perform operation
fnmsub.d f1, f24, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f24, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f24, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f24, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f24, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f24, f3, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xa6e895993737426c)
li x31, 0x18335096 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xc000000000000000 from memory into f26
li x3, 0xd2649847 # load x3 with 32 MSBs 0x00000000d2649847
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d2649847
sw x3, 0(x2) # store x3 (0xd2649847) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000d2649847 from memory into f5
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
fnmsub.d f31, f26, f5, f30, dyn # perform operation
fnmsub.d f31, f26, f5, f30, rdn # perform operation
fnmsub.d f31, f26, f5, f30, rmm # perform operation
fnmsub.d f31, f26, f5, f30, rne # perform operation
fnmsub.d f31, f26, f5, f30, rtz # perform operation
fnmsub.d f31, f26, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f26, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f26, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f26, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f26, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f26, f5, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x0)
li x18, 0x7e8e4c9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
li x3, 0xfdae8a6c # load x3 with 32 MSBs 0x00000000fdae8a6c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fdae8a6c
sw x3, 0(x2) # store x3 (0xfdae8a6c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000fdae8a6c from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
fnmsub.d f18, f24, f5, f3, dyn # perform operation
fnmsub.d f18, f24, f5, f3, rdn # perform operation
fnmsub.d f18, f24, f5, f3, rmm # perform operation
fnmsub.d f18, f24, f5, f3, rne # perform operation
fnmsub.d f18, f24, f5, f3, rtz # perform operation
fnmsub.d f18, f24, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f24, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f24, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f24, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f24, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f24, f5, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8000000000000000)
li x19, 0x183f9fed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0010000000000000 from memory into f28
li x3, 0xbbadf024 # load x3 with 32 MSBs 0x00000000bbadf024
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bbadf024
sw x3, 0(x2) # store x3 (0xbbadf024) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000bbadf024 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
fnmsub.d f19, f28, f26, f1, dyn # perform operation
fnmsub.d f19, f28, f26, f1, rdn # perform operation
fnmsub.d f19, f28, f26, f1, rmm # perform operation
fnmsub.d f19, f28, f26, f1, rne # perform operation
fnmsub.d f19, f28, f26, f1, rtz # perform operation
fnmsub.d f19, f28, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f28, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f28, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f28, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f28, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f28, f26, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x3ff0000000000000)
li x30, 0x88a62548 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
li x3, 0xf97fa576 # load x3 with 32 MSBs 0x00000000f97fa576
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f97fa576
sw x3, 0(x2) # store x3 (0xf97fa576) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000f97fa576 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
fnmsub.d f30, f31, f11, f18, dyn # perform operation
fnmsub.d f30, f31, f11, f18, rdn # perform operation
fnmsub.d f30, f31, f11, f18, rmm # perform operation
fnmsub.d f30, f31, f11, f18, rne # perform operation
fnmsub.d f30, f31, f11, f18, rtz # perform operation
fnmsub.d f30, f31, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f31, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f31, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f31, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f31, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f31, f11, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xbff0000000000000)
li x2, 0xfda2f588 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
li x3, 0x48e61015 # load x3 with 32 MSBs 0x0000000048e61015
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000048e61015
sw x3, 0(x2) # store x3 (0x48e61015) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000048e61015 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
fnmsub.d f2, f3, f29, f19, dyn # perform operation
fnmsub.d f2, f3, f29, f19, rdn # perform operation
fnmsub.d f2, f3, f29, f19, rmm # perform operation
fnmsub.d f2, f3, f29, f19, rne # perform operation
fnmsub.d f2, f3, f29, f19, rtz # perform operation
fnmsub.d f2, f3, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f3, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f3, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f3, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f3, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f3, f29, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x3ff8000000000000)
li x18, 0xf8b5d5eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0x5931d2cc # load x3 with 32 MSBs 0x000000005931d2cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005931d2cc
sw x3, 0(x2) # store x3 (0x5931d2cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000005931d2cc from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
fnmsub.d f18, f21, f13, f3, dyn # perform operation
fnmsub.d f18, f21, f13, f3, rdn # perform operation
fnmsub.d f18, f21, f13, f3, rmm # perform operation
fnmsub.d f18, f21, f13, f3, rne # perform operation
fnmsub.d f18, f21, f13, f3, rtz # perform operation
fnmsub.d f18, f21, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f21, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f21, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f21, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f21, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f21, f13, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xbff8000000000000)
li x6, 0x7875ae80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
li x3, 0xd447d2e4 # load x3 with 32 MSBs 0x00000000d447d2e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d447d2e4
sw x3, 0(x2) # store x3 (0xd447d2e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000d447d2e4 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
fnmsub.d f6, f24, f1, f26, dyn # perform operation
fnmsub.d f6, f24, f1, f26, rdn # perform operation
fnmsub.d f6, f24, f1, f26, rmm # perform operation
fnmsub.d f6, f24, f1, f26, rne # perform operation
fnmsub.d f6, f24, f1, f26, rtz # perform operation
fnmsub.d f6, f24, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f24, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f24, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f24, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f24, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f24, f1, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x4000000000000000)
li x7, 0xa365a800 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
li x3, 0x8ce4c5eb # load x3 with 32 MSBs 0x000000008ce4c5eb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008ce4c5eb
sw x3, 0(x2) # store x3 (0x8ce4c5eb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000008ce4c5eb from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
fnmsub.d f7, f3, f30, f1, dyn # perform operation
fnmsub.d f7, f3, f30, f1, rdn # perform operation
fnmsub.d f7, f3, f30, f1, rmm # perform operation
fnmsub.d f7, f3, f30, f1, rne # perform operation
fnmsub.d f7, f3, f30, f1, rtz # perform operation
fnmsub.d f7, f3, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f3, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f3, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f3, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f3, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f3, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xc000000000000000)
li x17, 0x549123d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0xf43e51fd # load x3 with 32 MSBs 0x00000000f43e51fd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f43e51fd
sw x3, 0(x2) # store x3 (0xf43e51fd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000f43e51fd from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
fnmsub.d f17, f15, f12, f29, dyn # perform operation
fnmsub.d f17, f15, f12, f29, rdn # perform operation
fnmsub.d f17, f15, f12, f29, rmm # perform operation
fnmsub.d f17, f15, f12, f29, rne # perform operation
fnmsub.d f17, f15, f12, f29, rtz # perform operation
fnmsub.d f17, f15, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f15, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f15, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f15, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f15, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f15, f12, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x10000000000000)
li x10, 0x3a720e0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
li x3, 0x128b7537 # load x3 with 32 MSBs 0x00000000128b7537
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000128b7537
sw x3, 0(x2) # store x3 (0x128b7537) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000128b7537 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
fnmsub.d f10, f1, f15, f7, dyn # perform operation
fnmsub.d f10, f1, f15, f7, rdn # perform operation
fnmsub.d f10, f1, f15, f7, rmm # perform operation
fnmsub.d f10, f1, f15, f7, rne # perform operation
fnmsub.d f10, f1, f15, f7, rtz # perform operation
fnmsub.d f10, f1, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f1, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f1, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f1, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f1, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f1, f15, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8010000000000000)
li x12, 0xdacd6d77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
li x3, 0xa8302e1f # load x3 with 32 MSBs 0x00000000a8302e1f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a8302e1f
sw x3, 0(x2) # store x3 (0xa8302e1f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000a8302e1f from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
fnmsub.d f12, f18, f13, f20, dyn # perform operation
fnmsub.d f12, f18, f13, f20, rdn # perform operation
fnmsub.d f12, f18, f13, f20, rmm # perform operation
fnmsub.d f12, f18, f13, f20, rne # perform operation
fnmsub.d f12, f18, f13, f20, rtz # perform operation
fnmsub.d f12, f18, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f18, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f18, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f18, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f18, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f18, f13, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7fefffffffffffff)
li x6, 0xc2ba55ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
li x3, 0xfd477732 # load x3 with 32 MSBs 0x00000000fd477732
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fd477732
sw x3, 0(x2) # store x3 (0xfd477732) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000fd477732 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
fnmsub.d f6, f17, f13, f26, dyn # perform operation
fnmsub.d f6, f17, f13, f26, rdn # perform operation
fnmsub.d f6, f17, f13, f26, rmm # perform operation
fnmsub.d f6, f17, f13, f26, rne # perform operation
fnmsub.d f6, f17, f13, f26, rtz # perform operation
fnmsub.d f6, f17, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f17, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f17, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f17, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f17, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f17, f13, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xffefffffffffffff)
li x9, 0xe565509e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
li x3, 0x443c7aae # load x3 with 32 MSBs 0x00000000443c7aae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000443c7aae
sw x3, 0(x2) # store x3 (0x443c7aae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000443c7aae from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
fnmsub.d f9, f7, f10, f15, dyn # perform operation
fnmsub.d f9, f7, f10, f15, rdn # perform operation
fnmsub.d f9, f7, f10, f15, rmm # perform operation
fnmsub.d f9, f7, f10, f15, rne # perform operation
fnmsub.d f9, f7, f10, f15, rtz # perform operation
fnmsub.d f9, f7, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f7, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f7, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f7, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f7, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f7, f10, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xfffffffffffff)
li x1, 0xac052bbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
li x3, 0xd4490e94 # load x3 with 32 MSBs 0x00000000d4490e94
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d4490e94
sw x3, 0(x2) # store x3 (0xd4490e94) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000d4490e94 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
fnmsub.d f1, f27, f16, f18, dyn # perform operation
fnmsub.d f1, f27, f16, f18, rdn # perform operation
fnmsub.d f1, f27, f16, f18, rmm # perform operation
fnmsub.d f1, f27, f16, f18, rne # perform operation
fnmsub.d f1, f27, f16, f18, rtz # perform operation
fnmsub.d f1, f27, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f27, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f27, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f27, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f27, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f27, f16, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x800fffffffffffff)
li x31, 0xe4232d56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
li x3, 0x004dd00e # load x3 with 32 MSBs 0x00000000004dd00e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000004dd00e
sw x3, 0(x2) # store x3 (0x004dd00e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000004dd00e from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
fnmsub.d f31, f7, f26, f11, dyn # perform operation
fnmsub.d f31, f7, f26, f11, rdn # perform operation
fnmsub.d f31, f7, f26, f11, rmm # perform operation
fnmsub.d f31, f7, f26, f11, rne # perform operation
fnmsub.d f31, f7, f26, f11, rtz # perform operation
fnmsub.d f31, f7, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f7, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f7, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f7, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f7, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f7, f26, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8000000000000)
li x12, 0x092054da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
li x3, 0x95a095a2 # load x3 with 32 MSBs 0x0000000095a095a2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095a095a2
sw x3, 0(x2) # store x3 (0x95a095a2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000095a095a2 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0008000000000000 from memory into f4
fnmsub.d f12, f26, f13, f4, dyn # perform operation
fnmsub.d f12, f26, f13, f4, rdn # perform operation
fnmsub.d f12, f26, f13, f4, rmm # perform operation
fnmsub.d f12, f26, f13, f4, rne # perform operation
fnmsub.d f12, f26, f13, f4, rtz # perform operation
fnmsub.d f12, f26, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f26, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f26, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f26, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f26, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f26, f13, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8008000000000000)
li x6, 0x2a0b779c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
li x3, 0xa4a09b8f # load x3 with 32 MSBs 0x00000000a4a09b8f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a4a09b8f
sw x3, 0(x2) # store x3 (0xa4a09b8f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000a4a09b8f from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
fnmsub.d f6, f25, f7, f21, dyn # perform operation
fnmsub.d f6, f25, f7, f21, rdn # perform operation
fnmsub.d f6, f25, f7, f21, rmm # perform operation
fnmsub.d f6, f25, f7, f21, rne # perform operation
fnmsub.d f6, f25, f7, f21, rtz # perform operation
fnmsub.d f6, f25, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f25, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f25, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f25, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f25, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f25, f7, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x1)
li x26, 0x769df8ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
li x3, 0x39c6abf8 # load x3 with 32 MSBs 0x0000000039c6abf8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000039c6abf8
sw x3, 0(x2) # store x3 (0x39c6abf8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000039c6abf8 from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
fnmsub.d f26, f10, f16, f8, dyn # perform operation
fnmsub.d f26, f10, f16, f8, rdn # perform operation
fnmsub.d f26, f10, f16, f8, rmm # perform operation
fnmsub.d f26, f10, f16, f8, rne # perform operation
fnmsub.d f26, f10, f16, f8, rtz # perform operation
fnmsub.d f26, f10, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f10, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f10, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f10, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f10, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f10, f16, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8000000000000001)
li x27, 0x8d6820d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
li x3, 0xde6dde96 # load x3 with 32 MSBs 0x00000000de6dde96
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000de6dde96
sw x3, 0(x2) # store x3 (0xde6dde96) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000de6dde96 from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
fnmsub.d f27, f23, f15, f17, dyn # perform operation
fnmsub.d f27, f23, f15, f17, rdn # perform operation
fnmsub.d f27, f23, f15, f17, rmm # perform operation
fnmsub.d f27, f23, f15, f17, rne # perform operation
fnmsub.d f27, f23, f15, f17, rtz # perform operation
fnmsub.d f27, f23, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f23, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f23, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f23, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f23, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f23, f15, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7ff0000000000000)
li x19, 0x586a5f06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0x54423fc3 # load x3 with 32 MSBs 0x0000000054423fc3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000054423fc3
sw x3, 0(x2) # store x3 (0x54423fc3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000054423fc3 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
fnmsub.d f19, f15, f12, f29, dyn # perform operation
fnmsub.d f19, f15, f12, f29, rdn # perform operation
fnmsub.d f19, f15, f12, f29, rmm # perform operation
fnmsub.d f19, f15, f12, f29, rne # perform operation
fnmsub.d f19, f15, f12, f29, rtz # perform operation
fnmsub.d f19, f15, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f15, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f15, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f15, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f15, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f15, f12, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xfff0000000000000)
li x24, 0xfc6ca357 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
li x3, 0xae2171f8 # load x3 with 32 MSBs 0x00000000ae2171f8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ae2171f8
sw x3, 0(x2) # store x3 (0xae2171f8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000ae2171f8 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
fnmsub.d f24, f20, f31, f26, dyn # perform operation
fnmsub.d f24, f20, f31, f26, rdn # perform operation
fnmsub.d f24, f20, f31, f26, rmm # perform operation
fnmsub.d f24, f20, f31, f26, rne # perform operation
fnmsub.d f24, f20, f31, f26, rtz # perform operation
fnmsub.d f24, f20, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f20, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f20, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f20, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f20, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f20, f31, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7ff8000000000000)
li x12, 0xa0ac191e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
li x3, 0xf811ed8f # load x3 with 32 MSBs 0x00000000f811ed8f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f811ed8f
sw x3, 0(x2) # store x3 (0xf811ed8f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000f811ed8f from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
fnmsub.d f12, f2, f21, f13, dyn # perform operation
fnmsub.d f12, f2, f21, f13, rdn # perform operation
fnmsub.d f12, f2, f21, f13, rmm # perform operation
fnmsub.d f12, f2, f21, f13, rne # perform operation
fnmsub.d f12, f2, f21, f13, rtz # perform operation
fnmsub.d f12, f2, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f2, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f2, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f2, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f2, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f2, f21, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7fffffffffffffff)
li x24, 0xe76170dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
li x3, 0x8724c70d # load x3 with 32 MSBs 0x000000008724c70d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008724c70d
sw x3, 0(x2) # store x3 (0x8724c70d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000008724c70d from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
fnmsub.d f24, f1, f28, f31, dyn # perform operation
fnmsub.d f24, f1, f28, f31, rdn # perform operation
fnmsub.d f24, f1, f28, f31, rmm # perform operation
fnmsub.d f24, f1, f28, f31, rne # perform operation
fnmsub.d f24, f1, f28, f31, rtz # perform operation
fnmsub.d f24, f1, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f1, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f1, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f1, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f1, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f1, f28, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7ff0000000000001)
li x16, 0xed7135df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
li x3, 0x3978d748 # load x3 with 32 MSBs 0x000000003978d748
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003978d748
sw x3, 0(x2) # store x3 (0x3978d748) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000003978d748 from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
fnmsub.d f16, f14, f15, f19, dyn # perform operation
fnmsub.d f16, f14, f15, f19, rdn # perform operation
fnmsub.d f16, f14, f15, f19, rmm # perform operation
fnmsub.d f16, f14, f15, f19, rne # perform operation
fnmsub.d f16, f14, f15, f19, rtz # perform operation
fnmsub.d f16, f14, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f14, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f14, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f14, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f14, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f14, f15, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7ff7ffffffffffff)
li x4, 0x74ae906a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
li x3, 0x0d9de7cc # load x3 with 32 MSBs 0x000000000d9de7cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d9de7cc
sw x3, 0(x2) # store x3 (0x0d9de7cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000000d9de7cc from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
fnmsub.d f4, f16, f20, f29, dyn # perform operation
fnmsub.d f4, f16, f20, f29, rdn # perform operation
fnmsub.d f4, f16, f20, f29, rmm # perform operation
fnmsub.d f4, f16, f20, f29, rne # perform operation
fnmsub.d f4, f16, f20, f29, rtz # perform operation
fnmsub.d f4, f16, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f16, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f16, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f16, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f16, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f16, f20, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x5a392534a57711ad)
li x1, 0x06a88134 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
li x3, 0x8663a0cc # load x3 with 32 MSBs 0x000000008663a0cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008663a0cc
sw x3, 0(x2) # store x3 (0x8663a0cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000008663a0cc from memory into f21
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
fnmsub.d f1, f7, f21, f30, dyn # perform operation
fnmsub.d f1, f7, f21, f30, rdn # perform operation
fnmsub.d f1, f7, f21, f30, rmm # perform operation
fnmsub.d f1, f7, f21, f30, rne # perform operation
fnmsub.d f1, f7, f21, f30, rtz # perform operation
fnmsub.d f1, f7, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f7, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f7, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f7, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f7, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f7, f21, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xa6e895993737426c)
li x10, 0x806d0f73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0x63ef9167 # load x3 with 32 MSBs 0x0000000063ef9167
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000063ef9167
sw x3, 0(x2) # store x3 (0x63ef9167) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000063ef9167 from memory into f1
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
fnmsub.d f10, f21, f1, f8, dyn # perform operation
fnmsub.d f10, f21, f1, f8, rdn # perform operation
fnmsub.d f10, f21, f1, f8, rmm # perform operation
fnmsub.d f10, f21, f1, f8, rne # perform operation
fnmsub.d f10, f21, f1, f8, rtz # perform operation
fnmsub.d f10, f21, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f21, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f21, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f21, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f21, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f21, f1, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x0)
li x3, 0x72086dbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0xf2bbc215 # load x3 with 32 MSBs 0x00000000f2bbc215
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2bbc215
sw x3, 0(x2) # store x3 (0xf2bbc215) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000f2bbc215 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
fnmsub.d f3, f14, f17, f20, dyn # perform operation
fnmsub.d f3, f14, f17, f20, rdn # perform operation
fnmsub.d f3, f14, f17, f20, rmm # perform operation
fnmsub.d f3, f14, f17, f20, rne # perform operation
fnmsub.d f3, f14, f17, f20, rtz # perform operation
fnmsub.d f3, f14, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f14, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f14, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f14, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f14, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f14, f17, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8000000000000000)
li x1, 0xa0f6321e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
li x3, 0xf558c689 # load x3 with 32 MSBs 0x00000000f558c689
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f558c689
sw x3, 0(x2) # store x3 (0xf558c689) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000f558c689 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
fnmsub.d f1, f13, f21, f26, dyn # perform operation
fnmsub.d f1, f13, f21, f26, rdn # perform operation
fnmsub.d f1, f13, f21, f26, rmm # perform operation
fnmsub.d f1, f13, f21, f26, rne # perform operation
fnmsub.d f1, f13, f21, f26, rtz # perform operation
fnmsub.d f1, f13, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f13, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f13, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f13, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f13, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f13, f21, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x3ff0000000000000)
li x6, 0xd30c6aca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0x18194758 # load x3 with 32 MSBs 0x0000000018194758
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018194758
sw x3, 0(x2) # store x3 (0x18194758) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000018194758 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
fnmsub.d f6, f14, f22, f11, dyn # perform operation
fnmsub.d f6, f14, f22, f11, rdn # perform operation
fnmsub.d f6, f14, f22, f11, rmm # perform operation
fnmsub.d f6, f14, f22, f11, rne # perform operation
fnmsub.d f6, f14, f22, f11, rtz # perform operation
fnmsub.d f6, f14, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f14, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f14, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f14, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f14, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f14, f22, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xbff0000000000000)
li x25, 0x9e6cc95c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
li x3, 0x0a20030f # load x3 with 32 MSBs 0x000000000a20030f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000a20030f
sw x3, 0(x2) # store x3 (0x0a20030f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000000a20030f from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
fnmsub.d f25, f23, f5, f16, dyn # perform operation
fnmsub.d f25, f23, f5, f16, rdn # perform operation
fnmsub.d f25, f23, f5, f16, rmm # perform operation
fnmsub.d f25, f23, f5, f16, rne # perform operation
fnmsub.d f25, f23, f5, f16, rtz # perform operation
fnmsub.d f25, f23, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f23, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f23, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f23, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f23, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f23, f5, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x3ff8000000000000)
li x30, 0x2c5859ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
li x3, 0xd7cb7d71 # load x3 with 32 MSBs 0x00000000d7cb7d71
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7cb7d71
sw x3, 0(x2) # store x3 (0xd7cb7d71) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000d7cb7d71 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
fnmsub.d f30, f22, f1, f3, dyn # perform operation
fnmsub.d f30, f22, f1, f3, rdn # perform operation
fnmsub.d f30, f22, f1, f3, rmm # perform operation
fnmsub.d f30, f22, f1, f3, rne # perform operation
fnmsub.d f30, f22, f1, f3, rtz # perform operation
fnmsub.d f30, f22, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f22, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f22, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f22, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f22, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f22, f1, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xbff8000000000000)
li x19, 0x5bcfc511 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
li x3, 0x3cf41eee # load x3 with 32 MSBs 0x000000003cf41eee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003cf41eee
sw x3, 0(x2) # store x3 (0x3cf41eee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000003cf41eee from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
fnmsub.d f19, f3, f28, f15, dyn # perform operation
fnmsub.d f19, f3, f28, f15, rdn # perform operation
fnmsub.d f19, f3, f28, f15, rmm # perform operation
fnmsub.d f19, f3, f28, f15, rne # perform operation
fnmsub.d f19, f3, f28, f15, rtz # perform operation
fnmsub.d f19, f3, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f3, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f3, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f3, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f3, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f3, f28, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x4000000000000000)
li x31, 0xd0271063 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
li x3, 0x4b1b1738 # load x3 with 32 MSBs 0x000000004b1b1738
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004b1b1738
sw x3, 0(x2) # store x3 (0x4b1b1738) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000004b1b1738 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
fnmsub.d f31, f27, f1, f24, dyn # perform operation
fnmsub.d f31, f27, f1, f24, rdn # perform operation
fnmsub.d f31, f27, f1, f24, rmm # perform operation
fnmsub.d f31, f27, f1, f24, rne # perform operation
fnmsub.d f31, f27, f1, f24, rtz # perform operation
fnmsub.d f31, f27, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f27, f1, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xc000000000000000)
li x5, 0xb8d60bcd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
li x3, 0x9ecab653 # load x3 with 32 MSBs 0x000000009ecab653
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ecab653
sw x3, 0(x2) # store x3 (0x9ecab653) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000009ecab653 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
fnmsub.d f5, f2, f29, f3, dyn # perform operation
fnmsub.d f5, f2, f29, f3, rdn # perform operation
fnmsub.d f5, f2, f29, f3, rmm # perform operation
fnmsub.d f5, f2, f29, f3, rne # perform operation
fnmsub.d f5, f2, f29, f3, rtz # perform operation
fnmsub.d f5, f2, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f2, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f2, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f2, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f2, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f2, f29, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x10000000000000)
li x21, 0x48b20b39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
li x3, 0x158264cf # load x3 with 32 MSBs 0x00000000158264cf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000158264cf
sw x3, 0(x2) # store x3 (0x158264cf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000158264cf from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
fnmsub.d f21, f15, f20, f22, dyn # perform operation
fnmsub.d f21, f15, f20, f22, rdn # perform operation
fnmsub.d f21, f15, f20, f22, rmm # perform operation
fnmsub.d f21, f15, f20, f22, rne # perform operation
fnmsub.d f21, f15, f20, f22, rtz # perform operation
fnmsub.d f21, f15, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f15, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f15, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f15, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f15, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f15, f20, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8010000000000000)
li x10, 0xb9b8a6ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
li x3, 0x2773d5a2 # load x3 with 32 MSBs 0x000000002773d5a2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002773d5a2
sw x3, 0(x2) # store x3 (0x2773d5a2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000002773d5a2 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
fnmsub.d f10, f16, f5, f3, dyn # perform operation
fnmsub.d f10, f16, f5, f3, rdn # perform operation
fnmsub.d f10, f16, f5, f3, rmm # perform operation
fnmsub.d f10, f16, f5, f3, rne # perform operation
fnmsub.d f10, f16, f5, f3, rtz # perform operation
fnmsub.d f10, f16, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f16, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f16, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f16, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f16, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f16, f5, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7fefffffffffffff)
li x8, 0x30a1e979 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
li x3, 0x538739bf # load x3 with 32 MSBs 0x00000000538739bf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000538739bf
sw x3, 0(x2) # store x3 (0x538739bf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000538739bf from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
fnmsub.d f8, f26, f19, f18, dyn # perform operation
fnmsub.d f8, f26, f19, f18, rdn # perform operation
fnmsub.d f8, f26, f19, f18, rmm # perform operation
fnmsub.d f8, f26, f19, f18, rne # perform operation
fnmsub.d f8, f26, f19, f18, rtz # perform operation
fnmsub.d f8, f26, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f26, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f26, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f26, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f26, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f26, f19, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xffefffffffffffff)
li x5, 0x2e5babf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
li x3, 0x928bf2d0 # load x3 with 32 MSBs 0x00000000928bf2d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000928bf2d0
sw x3, 0(x2) # store x3 (0x928bf2d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000928bf2d0 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
fnmsub.d f5, f31, f16, f26, dyn # perform operation
fnmsub.d f5, f31, f16, f26, rdn # perform operation
fnmsub.d f5, f31, f16, f26, rmm # perform operation
fnmsub.d f5, f31, f16, f26, rne # perform operation
fnmsub.d f5, f31, f16, f26, rtz # perform operation
fnmsub.d f5, f31, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f31, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f31, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f31, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f31, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f31, f16, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xfffffffffffff)
li x4, 0xe91aee22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
li x3, 0x2c7d4443 # load x3 with 32 MSBs 0x000000002c7d4443
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002c7d4443
sw x3, 0(x2) # store x3 (0x2c7d4443) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000002c7d4443 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
fnmsub.d f4, f20, f18, f22, dyn # perform operation
fnmsub.d f4, f20, f18, f22, rdn # perform operation
fnmsub.d f4, f20, f18, f22, rmm # perform operation
fnmsub.d f4, f20, f18, f22, rne # perform operation
fnmsub.d f4, f20, f18, f22, rtz # perform operation
fnmsub.d f4, f20, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f20, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f20, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f20, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f20, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f20, f18, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x800fffffffffffff)
li x5, 0x2ead1b3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
li x3, 0x30a20ff1 # load x3 with 32 MSBs 0x0000000030a20ff1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000030a20ff1
sw x3, 0(x2) # store x3 (0x30a20ff1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000030a20ff1 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
fnmsub.d f5, f21, f11, f25, dyn # perform operation
fnmsub.d f5, f21, f11, f25, rdn # perform operation
fnmsub.d f5, f21, f11, f25, rmm # perform operation
fnmsub.d f5, f21, f11, f25, rne # perform operation
fnmsub.d f5, f21, f11, f25, rtz # perform operation
fnmsub.d f5, f21, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f21, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f21, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f21, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f21, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f21, f11, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8000000000000)
li x5, 0x504e4dd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
li x3, 0xc5158b8a # load x3 with 32 MSBs 0x00000000c5158b8a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c5158b8a
sw x3, 0(x2) # store x3 (0xc5158b8a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000c5158b8a from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
fnmsub.d f5, f23, f13, f30, dyn # perform operation
fnmsub.d f5, f23, f13, f30, rdn # perform operation
fnmsub.d f5, f23, f13, f30, rmm # perform operation
fnmsub.d f5, f23, f13, f30, rne # perform operation
fnmsub.d f5, f23, f13, f30, rtz # perform operation
fnmsub.d f5, f23, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f23, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f23, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f23, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f23, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f23, f13, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8008000000000000)
li x2, 0x5d7d973f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
li x3, 0x46d4fb99 # load x3 with 32 MSBs 0x0000000046d4fb99
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000046d4fb99
sw x3, 0(x2) # store x3 (0x46d4fb99) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000046d4fb99 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
fnmsub.d f2, f16, f7, f14, dyn # perform operation
fnmsub.d f2, f16, f7, f14, rdn # perform operation
fnmsub.d f2, f16, f7, f14, rmm # perform operation
fnmsub.d f2, f16, f7, f14, rne # perform operation
fnmsub.d f2, f16, f7, f14, rtz # perform operation
fnmsub.d f2, f16, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f16, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f16, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f16, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f16, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f16, f7, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x1)
li x21, 0xc40518a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
li x3, 0x539c51ea # load x3 with 32 MSBs 0x00000000539c51ea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000539c51ea
sw x3, 0(x2) # store x3 (0x539c51ea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000539c51ea from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
fnmsub.d f21, f20, f18, f16, dyn # perform operation
fnmsub.d f21, f20, f18, f16, rdn # perform operation
fnmsub.d f21, f20, f18, f16, rmm # perform operation
fnmsub.d f21, f20, f18, f16, rne # perform operation
fnmsub.d f21, f20, f18, f16, rtz # perform operation
fnmsub.d f21, f20, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f20, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f20, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f20, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f20, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f20, f18, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8000000000000001)
li x2, 0x062027a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
li x3, 0x58ca2a38 # load x3 with 32 MSBs 0x0000000058ca2a38
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000058ca2a38
sw x3, 0(x2) # store x3 (0x58ca2a38) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000058ca2a38 from memory into f4
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
fnmsub.d f2, f16, f4, f21, dyn # perform operation
fnmsub.d f2, f16, f4, f21, rdn # perform operation
fnmsub.d f2, f16, f4, f21, rmm # perform operation
fnmsub.d f2, f16, f4, f21, rne # perform operation
fnmsub.d f2, f16, f4, f21, rtz # perform operation
fnmsub.d f2, f16, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f16, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f16, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f16, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f16, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f16, f4, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7ff0000000000000)
li x26, 0x33be2351 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
li x3, 0xe10656ae # load x3 with 32 MSBs 0x00000000e10656ae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e10656ae
sw x3, 0(x2) # store x3 (0xe10656ae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000e10656ae from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
fnmsub.d f26, f8, f23, f29, dyn # perform operation
fnmsub.d f26, f8, f23, f29, rdn # perform operation
fnmsub.d f26, f8, f23, f29, rmm # perform operation
fnmsub.d f26, f8, f23, f29, rne # perform operation
fnmsub.d f26, f8, f23, f29, rtz # perform operation
fnmsub.d f26, f8, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f8, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f8, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f8, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f8, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f8, f23, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xfff0000000000000)
li x12, 0xc3694a56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
li x3, 0x8f26713f # load x3 with 32 MSBs 0x000000008f26713f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f26713f
sw x3, 0(x2) # store x3 (0x8f26713f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000008f26713f from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
fnmsub.d f12, f30, f19, f5, dyn # perform operation
fnmsub.d f12, f30, f19, f5, rdn # perform operation
fnmsub.d f12, f30, f19, f5, rmm # perform operation
fnmsub.d f12, f30, f19, f5, rne # perform operation
fnmsub.d f12, f30, f19, f5, rtz # perform operation
fnmsub.d f12, f30, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f30, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f30, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f30, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f30, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f30, f19, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7ff8000000000000)
li x6, 0xdd60738f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
li x3, 0x54570982 # load x3 with 32 MSBs 0x0000000054570982
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000054570982
sw x3, 0(x2) # store x3 (0x54570982) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000054570982 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
fnmsub.d f6, f2, f21, f26, dyn # perform operation
fnmsub.d f6, f2, f21, f26, rdn # perform operation
fnmsub.d f6, f2, f21, f26, rmm # perform operation
fnmsub.d f6, f2, f21, f26, rne # perform operation
fnmsub.d f6, f2, f21, f26, rtz # perform operation
fnmsub.d f6, f2, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f2, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f2, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f2, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f2, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f2, f21, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7fffffffffffffff)
li x8, 0xd5aea29b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
li x3, 0x8e024cae # load x3 with 32 MSBs 0x000000008e024cae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e024cae
sw x3, 0(x2) # store x3 (0x8e024cae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000008e024cae from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
fnmsub.d f8, f22, f18, f25, dyn # perform operation
fnmsub.d f8, f22, f18, f25, rdn # perform operation
fnmsub.d f8, f22, f18, f25, rmm # perform operation
fnmsub.d f8, f22, f18, f25, rne # perform operation
fnmsub.d f8, f22, f18, f25, rtz # perform operation
fnmsub.d f8, f22, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f22, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f22, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f22, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f22, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f22, f18, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7ff0000000000001)
li x6, 0x7988d103 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
li x3, 0x0f6c668e # load x3 with 32 MSBs 0x000000000f6c668e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f6c668e
sw x3, 0(x2) # store x3 (0x0f6c668e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000000f6c668e from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000001 from memory into f25
fnmsub.d f6, f31, f1, f25, dyn # perform operation
fnmsub.d f6, f31, f1, f25, rdn # perform operation
fnmsub.d f6, f31, f1, f25, rmm # perform operation
fnmsub.d f6, f31, f1, f25, rne # perform operation
fnmsub.d f6, f31, f1, f25, rtz # perform operation
fnmsub.d f6, f31, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f31, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f31, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f31, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f31, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f31, f1, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7ff7ffffffffffff)
li x11, 0x4de9080a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
li x3, 0x175945c6 # load x3 with 32 MSBs 0x00000000175945c6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000175945c6
sw x3, 0(x2) # store x3 (0x175945c6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000175945c6 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
fnmsub.d f11, f9, f27, f30, dyn # perform operation
fnmsub.d f11, f9, f27, f30, rdn # perform operation
fnmsub.d f11, f9, f27, f30, rmm # perform operation
fnmsub.d f11, f9, f27, f30, rne # perform operation
fnmsub.d f11, f9, f27, f30, rtz # perform operation
fnmsub.d f11, f9, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f9, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f9, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f9, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f9, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f9, f27, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x5a392534a57711ad)
li x12, 0xd02822da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
li x3, 0xd019dd7f # load x3 with 32 MSBs 0x00000000d019dd7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d019dd7f
sw x3, 0(x2) # store x3 (0xd019dd7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000d019dd7f from memory into f20
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
fnmsub.d f12, f16, f20, f2, dyn # perform operation
fnmsub.d f12, f16, f20, f2, rdn # perform operation
fnmsub.d f12, f16, f20, f2, rmm # perform operation
fnmsub.d f12, f16, f20, f2, rne # perform operation
fnmsub.d f12, f16, f20, f2, rtz # perform operation
fnmsub.d f12, f16, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f16, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f16, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f16, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f16, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f16, f20, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xa6e895993737426c)
li x24, 0x4e2d286d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
li x3, 0xaa30c551 # load x3 with 32 MSBs 0x00000000aa30c551
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa30c551
sw x3, 0(x2) # store x3 (0xaa30c551) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000aa30c551 from memory into f1
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
fnmsub.d f24, f13, f1, f6, dyn # perform operation
fnmsub.d f24, f13, f1, f6, rdn # perform operation
fnmsub.d f24, f13, f1, f6, rmm # perform operation
fnmsub.d f24, f13, f1, f6, rne # perform operation
fnmsub.d f24, f13, f1, f6, rtz # perform operation
fnmsub.d f24, f13, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f13, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f13, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f13, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f13, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f13, f1, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x0)
li x20, 0xac30f39e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
li x3, 0xad14bfbe # load x3 with 32 MSBs 0x00000000ad14bfbe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ad14bfbe
sw x3, 0(x2) # store x3 (0xad14bfbe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000ad14bfbe from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
fnmsub.d f20, f6, f4, f14, dyn # perform operation
fnmsub.d f20, f6, f4, f14, rdn # perform operation
fnmsub.d f20, f6, f4, f14, rmm # perform operation
fnmsub.d f20, f6, f4, f14, rne # perform operation
fnmsub.d f20, f6, f4, f14, rtz # perform operation
fnmsub.d f20, f6, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f6, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f6, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f6, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f6, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f6, f4, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8000000000000000)
li x20, 0x7532f640 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
li x3, 0xb4bc26a0 # load x3 with 32 MSBs 0x00000000b4bc26a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b4bc26a0
sw x3, 0(x2) # store x3 (0xb4bc26a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000b4bc26a0 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
fnmsub.d f20, f27, f30, f22, dyn # perform operation
fnmsub.d f20, f27, f30, f22, rdn # perform operation
fnmsub.d f20, f27, f30, f22, rmm # perform operation
fnmsub.d f20, f27, f30, f22, rne # perform operation
fnmsub.d f20, f27, f30, f22, rtz # perform operation
fnmsub.d f20, f27, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f27, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f27, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f27, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f27, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f27, f30, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x3ff0000000000000)
li x10, 0x43e813c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
li x3, 0x733db7ee # load x3 with 32 MSBs 0x00000000733db7ee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000733db7ee
sw x3, 0(x2) # store x3 (0x733db7ee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000733db7ee from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
fnmsub.d f10, f27, f26, f15, dyn # perform operation
fnmsub.d f10, f27, f26, f15, rdn # perform operation
fnmsub.d f10, f27, f26, f15, rmm # perform operation
fnmsub.d f10, f27, f26, f15, rne # perform operation
fnmsub.d f10, f27, f26, f15, rtz # perform operation
fnmsub.d f10, f27, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f27, f26, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xbff0000000000000)
li x18, 0xdd29fe41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
li x3, 0xeaed0731 # load x3 with 32 MSBs 0x00000000eaed0731
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eaed0731
sw x3, 0(x2) # store x3 (0xeaed0731) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000eaed0731 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
fnmsub.d f18, f20, f19, f6, dyn # perform operation
fnmsub.d f18, f20, f19, f6, rdn # perform operation
fnmsub.d f18, f20, f19, f6, rmm # perform operation
fnmsub.d f18, f20, f19, f6, rne # perform operation
fnmsub.d f18, f20, f19, f6, rtz # perform operation
fnmsub.d f18, f20, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f20, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f20, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f20, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f20, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f20, f19, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x3ff8000000000000)
li x22, 0x4ebba1e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
li x3, 0xab03e83f # load x3 with 32 MSBs 0x00000000ab03e83f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ab03e83f
sw x3, 0(x2) # store x3 (0xab03e83f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000ab03e83f from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
fnmsub.d f22, f28, f17, f29, dyn # perform operation
fnmsub.d f22, f28, f17, f29, rdn # perform operation
fnmsub.d f22, f28, f17, f29, rmm # perform operation
fnmsub.d f22, f28, f17, f29, rne # perform operation
fnmsub.d f22, f28, f17, f29, rtz # perform operation
fnmsub.d f22, f28, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f28, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f28, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f28, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f28, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f28, f17, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xbff8000000000000)
li x1, 0x1e881e60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
li x3, 0x09a42d15 # load x3 with 32 MSBs 0x0000000009a42d15
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000009a42d15
sw x3, 0(x2) # store x3 (0x09a42d15) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000009a42d15 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
fnmsub.d f1, f2, f22, f8, dyn # perform operation
fnmsub.d f1, f2, f22, f8, rdn # perform operation
fnmsub.d f1, f2, f22, f8, rmm # perform operation
fnmsub.d f1, f2, f22, f8, rne # perform operation
fnmsub.d f1, f2, f22, f8, rtz # perform operation
fnmsub.d f1, f2, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f2, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f2, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f2, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f2, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f2, f22, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x4000000000000000)
li x16, 0xfd84aa89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0x7d58b76c # load x3 with 32 MSBs 0x000000007d58b76c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007d58b76c
sw x3, 0(x2) # store x3 (0x7d58b76c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000007d58b76c from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
fnmsub.d f16, f23, f3, f20, dyn # perform operation
fnmsub.d f16, f23, f3, f20, rdn # perform operation
fnmsub.d f16, f23, f3, f20, rmm # perform operation
fnmsub.d f16, f23, f3, f20, rne # perform operation
fnmsub.d f16, f23, f3, f20, rtz # perform operation
fnmsub.d f16, f23, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f23, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f23, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f23, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f23, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f23, f3, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xc000000000000000)
li x21, 0xa458e8c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
li x3, 0xd5ccc33a # load x3 with 32 MSBs 0x00000000d5ccc33a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d5ccc33a
sw x3, 0(x2) # store x3 (0xd5ccc33a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000d5ccc33a from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
fnmsub.d f21, f3, f20, f24, dyn # perform operation
fnmsub.d f21, f3, f20, f24, rdn # perform operation
fnmsub.d f21, f3, f20, f24, rmm # perform operation
fnmsub.d f21, f3, f20, f24, rne # perform operation
fnmsub.d f21, f3, f20, f24, rtz # perform operation
fnmsub.d f21, f3, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f3, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f3, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f3, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f3, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f3, f20, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x10000000000000)
li x11, 0x1d0a821d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
li x3, 0x6177942a # load x3 with 32 MSBs 0x000000006177942a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006177942a
sw x3, 0(x2) # store x3 (0x6177942a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000006177942a from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
fnmsub.d f11, f12, f28, f29, dyn # perform operation
fnmsub.d f11, f12, f28, f29, rdn # perform operation
fnmsub.d f11, f12, f28, f29, rmm # perform operation
fnmsub.d f11, f12, f28, f29, rne # perform operation
fnmsub.d f11, f12, f28, f29, rtz # perform operation
fnmsub.d f11, f12, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f12, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f12, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f12, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f12, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f12, f28, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8010000000000000)
li x4, 0xae2286a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
li x3, 0x9548cfcf # load x3 with 32 MSBs 0x000000009548cfcf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009548cfcf
sw x3, 0(x2) # store x3 (0x9548cfcf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000009548cfcf from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
fnmsub.d f4, f25, f26, f9, dyn # perform operation
fnmsub.d f4, f25, f26, f9, rdn # perform operation
fnmsub.d f4, f25, f26, f9, rmm # perform operation
fnmsub.d f4, f25, f26, f9, rne # perform operation
fnmsub.d f4, f25, f26, f9, rtz # perform operation
fnmsub.d f4, f25, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f25, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f25, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f25, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f25, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f25, f26, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7fefffffffffffff)
li x20, 0x147fb980 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
li x3, 0x16c9f1f4 # load x3 with 32 MSBs 0x0000000016c9f1f4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000016c9f1f4
sw x3, 0(x2) # store x3 (0x16c9f1f4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000016c9f1f4 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
fnmsub.d f20, f18, f14, f23, dyn # perform operation
fnmsub.d f20, f18, f14, f23, rdn # perform operation
fnmsub.d f20, f18, f14, f23, rmm # perform operation
fnmsub.d f20, f18, f14, f23, rne # perform operation
fnmsub.d f20, f18, f14, f23, rtz # perform operation
fnmsub.d f20, f18, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f18, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f18, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f18, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f18, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f18, f14, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xffefffffffffffff)
li x4, 0xb0fadecc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
li x3, 0x8b3c412a # load x3 with 32 MSBs 0x000000008b3c412a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008b3c412a
sw x3, 0(x2) # store x3 (0x8b3c412a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000008b3c412a from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
fnmsub.d f4, f26, f27, f19, dyn # perform operation
fnmsub.d f4, f26, f27, f19, rdn # perform operation
fnmsub.d f4, f26, f27, f19, rmm # perform operation
fnmsub.d f4, f26, f27, f19, rne # perform operation
fnmsub.d f4, f26, f27, f19, rtz # perform operation
fnmsub.d f4, f26, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f26, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f26, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f26, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f26, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f26, f27, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xfffffffffffff)
li x27, 0xe8e1e7e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
li x3, 0x42975922 # load x3 with 32 MSBs 0x0000000042975922
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042975922
sw x3, 0(x2) # store x3 (0x42975922) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000042975922 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
fnmsub.d f27, f4, f17, f10, dyn # perform operation
fnmsub.d f27, f4, f17, f10, rdn # perform operation
fnmsub.d f27, f4, f17, f10, rmm # perform operation
fnmsub.d f27, f4, f17, f10, rne # perform operation
fnmsub.d f27, f4, f17, f10, rtz # perform operation
fnmsub.d f27, f4, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f4, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f4, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f4, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f4, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f4, f17, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x800fffffffffffff)
li x31, 0xf676dac1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
li x3, 0x4b938181 # load x3 with 32 MSBs 0x000000004b938181
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004b938181
sw x3, 0(x2) # store x3 (0x4b938181) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000004b938181 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
fnmsub.d f31, f19, f28, f9, dyn # perform operation
fnmsub.d f31, f19, f28, f9, rdn # perform operation
fnmsub.d f31, f19, f28, f9, rmm # perform operation
fnmsub.d f31, f19, f28, f9, rne # perform operation
fnmsub.d f31, f19, f28, f9, rtz # perform operation
fnmsub.d f31, f19, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f19, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f19, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f19, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f19, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f19, f28, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8000000000000)
li x26, 0x5476bd33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
li x3, 0x9fa5a2ff # load x3 with 32 MSBs 0x000000009fa5a2ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009fa5a2ff
sw x3, 0(x2) # store x3 (0x9fa5a2ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000009fa5a2ff from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
fnmsub.d f26, f10, f27, f3, dyn # perform operation
fnmsub.d f26, f10, f27, f3, rdn # perform operation
fnmsub.d f26, f10, f27, f3, rmm # perform operation
fnmsub.d f26, f10, f27, f3, rne # perform operation
fnmsub.d f26, f10, f27, f3, rtz # perform operation
fnmsub.d f26, f10, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f10, f27, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8008000000000000)
li x12, 0x05fa43e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
li x3, 0x2caa9946 # load x3 with 32 MSBs 0x000000002caa9946
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002caa9946
sw x3, 0(x2) # store x3 (0x2caa9946) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000002caa9946 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
fnmsub.d f12, f24, f13, f19, dyn # perform operation
fnmsub.d f12, f24, f13, f19, rdn # perform operation
fnmsub.d f12, f24, f13, f19, rmm # perform operation
fnmsub.d f12, f24, f13, f19, rne # perform operation
fnmsub.d f12, f24, f13, f19, rtz # perform operation
fnmsub.d f12, f24, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f24, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f24, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f24, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f24, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f24, f13, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x1)
li x12, 0x381348ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
li x3, 0x45fe467c # load x3 with 32 MSBs 0x0000000045fe467c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000045fe467c
sw x3, 0(x2) # store x3 (0x45fe467c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000045fe467c from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
fnmsub.d f12, f9, f7, f26, dyn # perform operation
fnmsub.d f12, f9, f7, f26, rdn # perform operation
fnmsub.d f12, f9, f7, f26, rmm # perform operation
fnmsub.d f12, f9, f7, f26, rne # perform operation
fnmsub.d f12, f9, f7, f26, rtz # perform operation
fnmsub.d f12, f9, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f9, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f9, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f9, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f9, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f9, f7, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8000000000000001)
li x12, 0x4d51dafa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0x1cf612a0 # load x3 with 32 MSBs 0x000000001cf612a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001cf612a0
sw x3, 0(x2) # store x3 (0x1cf612a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000001cf612a0 from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
fnmsub.d f12, f17, f26, f4, dyn # perform operation
fnmsub.d f12, f17, f26, f4, rdn # perform operation
fnmsub.d f12, f17, f26, f4, rmm # perform operation
fnmsub.d f12, f17, f26, f4, rne # perform operation
fnmsub.d f12, f17, f26, f4, rtz # perform operation
fnmsub.d f12, f17, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f17, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f17, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f17, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f17, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f17, f26, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7ff0000000000000)
li x7, 0x7ed89f00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0x408a7f7b # load x3 with 32 MSBs 0x00000000408a7f7b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000408a7f7b
sw x3, 0(x2) # store x3 (0x408a7f7b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000408a7f7b from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
fnmsub.d f7, f30, f13, f25, dyn # perform operation
fnmsub.d f7, f30, f13, f25, rdn # perform operation
fnmsub.d f7, f30, f13, f25, rmm # perform operation
fnmsub.d f7, f30, f13, f25, rne # perform operation
fnmsub.d f7, f30, f13, f25, rtz # perform operation
fnmsub.d f7, f30, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f30, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f30, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f30, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f30, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f30, f13, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xfff0000000000000)
li x6, 0x1b0d8852 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
li x3, 0x2d52358f # load x3 with 32 MSBs 0x000000002d52358f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d52358f
sw x3, 0(x2) # store x3 (0x2d52358f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000002d52358f from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
fnmsub.d f6, f19, f22, f15, dyn # perform operation
fnmsub.d f6, f19, f22, f15, rdn # perform operation
fnmsub.d f6, f19, f22, f15, rmm # perform operation
fnmsub.d f6, f19, f22, f15, rne # perform operation
fnmsub.d f6, f19, f22, f15, rtz # perform operation
fnmsub.d f6, f19, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f19, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f19, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f19, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f19, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f19, f22, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7ff8000000000000)
li x28, 0xf598b35d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
li x3, 0xb9f6bdff # load x3 with 32 MSBs 0x00000000b9f6bdff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b9f6bdff
sw x3, 0(x2) # store x3 (0xb9f6bdff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000b9f6bdff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
fnmsub.d f28, f2, f13, f31, dyn # perform operation
fnmsub.d f28, f2, f13, f31, rdn # perform operation
fnmsub.d f28, f2, f13, f31, rmm # perform operation
fnmsub.d f28, f2, f13, f31, rne # perform operation
fnmsub.d f28, f2, f13, f31, rtz # perform operation
fnmsub.d f28, f2, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f2, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f2, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f2, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f2, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f2, f13, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7fffffffffffffff)
li x25, 0xd45a8559 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
li x3, 0xe5cd3fe7 # load x3 with 32 MSBs 0x00000000e5cd3fe7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e5cd3fe7
sw x3, 0(x2) # store x3 (0xe5cd3fe7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000e5cd3fe7 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
fnmsub.d f25, f13, f7, f27, dyn # perform operation
fnmsub.d f25, f13, f7, f27, rdn # perform operation
fnmsub.d f25, f13, f7, f27, rmm # perform operation
fnmsub.d f25, f13, f7, f27, rne # perform operation
fnmsub.d f25, f13, f7, f27, rtz # perform operation
fnmsub.d f25, f13, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f13, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f13, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f13, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f13, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f13, f7, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7ff0000000000001)
li x7, 0xf6b60843 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
li x3, 0xa13f5405 # load x3 with 32 MSBs 0x00000000a13f5405
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a13f5405
sw x3, 0(x2) # store x3 (0xa13f5405) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000a13f5405 from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
fnmsub.d f7, f16, f10, f26, dyn # perform operation
fnmsub.d f7, f16, f10, f26, rdn # perform operation
fnmsub.d f7, f16, f10, f26, rmm # perform operation
fnmsub.d f7, f16, f10, f26, rne # perform operation
fnmsub.d f7, f16, f10, f26, rtz # perform operation
fnmsub.d f7, f16, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f16, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f16, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f16, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f16, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f16, f10, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7ff7ffffffffffff)
li x16, 0x19d607f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
li x3, 0xa24cf8fc # load x3 with 32 MSBs 0x00000000a24cf8fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a24cf8fc
sw x3, 0(x2) # store x3 (0xa24cf8fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000a24cf8fc from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
fnmsub.d f16, f4, f10, f28, dyn # perform operation
fnmsub.d f16, f4, f10, f28, rdn # perform operation
fnmsub.d f16, f4, f10, f28, rmm # perform operation
fnmsub.d f16, f4, f10, f28, rne # perform operation
fnmsub.d f16, f4, f10, f28, rtz # perform operation
fnmsub.d f16, f4, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f4, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f4, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f4, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f4, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f4, f10, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x5a392534a57711ad)
li x29, 0x80fe2adb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
li x3, 0x089e6d86 # load x3 with 32 MSBs 0x00000000089e6d86
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000089e6d86
sw x3, 0(x2) # store x3 (0x089e6d86) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000089e6d86 from memory into f6
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
fnmsub.d f29, f2, f6, f14, dyn # perform operation
fnmsub.d f29, f2, f6, f14, rdn # perform operation
fnmsub.d f29, f2, f6, f14, rmm # perform operation
fnmsub.d f29, f2, f6, f14, rne # perform operation
fnmsub.d f29, f2, f6, f14, rtz # perform operation
fnmsub.d f29, f2, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f2, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f2, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f2, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f2, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f2, f6, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xa6e895993737426c)
li x29, 0xe122e741 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
li x3, 0x0ba26e42 # load x3 with 32 MSBs 0x000000000ba26e42
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000ba26e42
sw x3, 0(x2) # store x3 (0x0ba26e42) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000000ba26e42 from memory into f7
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xa6e895993737426c from memory into f23
fnmsub.d f29, f27, f7, f23, dyn # perform operation
fnmsub.d f29, f27, f7, f23, rdn # perform operation
fnmsub.d f29, f27, f7, f23, rmm # perform operation
fnmsub.d f29, f27, f7, f23, rne # perform operation
fnmsub.d f29, f27, f7, f23, rtz # perform operation
fnmsub.d f29, f27, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f27, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f27, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f27, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f27, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f27, f7, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x0)
li x26, 0x655bdfb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
li x3, 0x9283491b # load x3 with 32 MSBs 0x000000009283491b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009283491b
sw x3, 0(x2) # store x3 (0x9283491b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000009283491b from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
fnmsub.d f26, f6, f9, f1, dyn # perform operation
fnmsub.d f26, f6, f9, f1, rdn # perform operation
fnmsub.d f26, f6, f9, f1, rmm # perform operation
fnmsub.d f26, f6, f9, f1, rne # perform operation
fnmsub.d f26, f6, f9, f1, rtz # perform operation
fnmsub.d f26, f6, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f6, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f6, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f6, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f6, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f6, f9, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8000000000000000)
li x5, 0xc5bade4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
li x3, 0xf52813a1 # load x3 with 32 MSBs 0x00000000f52813a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f52813a1
sw x3, 0(x2) # store x3 (0xf52813a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000f52813a1 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
fnmsub.d f5, f26, f23, f13, dyn # perform operation
fnmsub.d f5, f26, f23, f13, rdn # perform operation
fnmsub.d f5, f26, f23, f13, rmm # perform operation
fnmsub.d f5, f26, f23, f13, rne # perform operation
fnmsub.d f5, f26, f23, f13, rtz # perform operation
fnmsub.d f5, f26, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f26, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f26, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f26, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f26, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f26, f23, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x3ff0000000000000)
li x1, 0xd789452d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
li x3, 0x6a545400 # load x3 with 32 MSBs 0x000000006a545400
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006a545400
sw x3, 0(x2) # store x3 (0x6a545400) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000006a545400 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff0000000000000 from memory into f4
fnmsub.d f1, f18, f6, f4, dyn # perform operation
fnmsub.d f1, f18, f6, f4, rdn # perform operation
fnmsub.d f1, f18, f6, f4, rmm # perform operation
fnmsub.d f1, f18, f6, f4, rne # perform operation
fnmsub.d f1, f18, f6, f4, rtz # perform operation
fnmsub.d f1, f18, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f18, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f18, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f18, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f18, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f18, f6, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xbff0000000000000)
li x16, 0x14030819 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
li x3, 0x98e21828 # load x3 with 32 MSBs 0x0000000098e21828
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000098e21828
sw x3, 0(x2) # store x3 (0x98e21828) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000098e21828 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
fnmsub.d f16, f23, f25, f29, dyn # perform operation
fnmsub.d f16, f23, f25, f29, rdn # perform operation
fnmsub.d f16, f23, f25, f29, rmm # perform operation
fnmsub.d f16, f23, f25, f29, rne # perform operation
fnmsub.d f16, f23, f25, f29, rtz # perform operation
fnmsub.d f16, f23, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f23, f25, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x3ff8000000000000)
li x22, 0x5047f2b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
li x3, 0xcb58e552 # load x3 with 32 MSBs 0x00000000cb58e552
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cb58e552
sw x3, 0(x2) # store x3 (0xcb58e552) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000cb58e552 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
fnmsub.d f22, f10, f13, f8, dyn # perform operation
fnmsub.d f22, f10, f13, f8, rdn # perform operation
fnmsub.d f22, f10, f13, f8, rmm # perform operation
fnmsub.d f22, f10, f13, f8, rne # perform operation
fnmsub.d f22, f10, f13, f8, rtz # perform operation
fnmsub.d f22, f10, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f10, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f10, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f10, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f10, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f10, f13, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xbff8000000000000)
li x29, 0x31f31518 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
li x3, 0x1f8885fc # load x3 with 32 MSBs 0x000000001f8885fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001f8885fc
sw x3, 0(x2) # store x3 (0x1f8885fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000001f8885fc from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
fnmsub.d f29, f6, f8, f9, dyn # perform operation
fnmsub.d f29, f6, f8, f9, rdn # perform operation
fnmsub.d f29, f6, f8, f9, rmm # perform operation
fnmsub.d f29, f6, f8, f9, rne # perform operation
fnmsub.d f29, f6, f8, f9, rtz # perform operation
fnmsub.d f29, f6, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f6, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f6, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f6, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f6, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f6, f8, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x4000000000000000)
li x23, 0x2a6e6f79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
li x3, 0xb15c56a4 # load x3 with 32 MSBs 0x00000000b15c56a4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b15c56a4
sw x3, 0(x2) # store x3 (0xb15c56a4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000b15c56a4 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
fnmsub.d f23, f27, f14, f18, dyn # perform operation
fnmsub.d f23, f27, f14, f18, rdn # perform operation
fnmsub.d f23, f27, f14, f18, rmm # perform operation
fnmsub.d f23, f27, f14, f18, rne # perform operation
fnmsub.d f23, f27, f14, f18, rtz # perform operation
fnmsub.d f23, f27, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f27, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f27, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f27, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f27, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f27, f14, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xc000000000000000)
li x13, 0x7990a2ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
li x3, 0x4e07161c # load x3 with 32 MSBs 0x000000004e07161c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004e07161c
sw x3, 0(x2) # store x3 (0x4e07161c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000004e07161c from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
fnmsub.d f13, f19, f14, f11, dyn # perform operation
fnmsub.d f13, f19, f14, f11, rdn # perform operation
fnmsub.d f13, f19, f14, f11, rmm # perform operation
fnmsub.d f13, f19, f14, f11, rne # perform operation
fnmsub.d f13, f19, f14, f11, rtz # perform operation
fnmsub.d f13, f19, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f19, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f19, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f19, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f19, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f19, f14, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x10000000000000)
li x21, 0xc219adb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
li x3, 0xeb80eabc # load x3 with 32 MSBs 0x00000000eb80eabc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb80eabc
sw x3, 0(x2) # store x3 (0xeb80eabc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000eb80eabc from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
fnmsub.d f21, f20, f3, f16, dyn # perform operation
fnmsub.d f21, f20, f3, f16, rdn # perform operation
fnmsub.d f21, f20, f3, f16, rmm # perform operation
fnmsub.d f21, f20, f3, f16, rne # perform operation
fnmsub.d f21, f20, f3, f16, rtz # perform operation
fnmsub.d f21, f20, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f20, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f20, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f20, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f20, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f20, f3, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8010000000000000)
li x16, 0xb6207915 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
li x3, 0xb9e5f34f # load x3 with 32 MSBs 0x00000000b9e5f34f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b9e5f34f
sw x3, 0(x2) # store x3 (0xb9e5f34f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000b9e5f34f from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
fnmsub.d f16, f11, f29, f15, dyn # perform operation
fnmsub.d f16, f11, f29, f15, rdn # perform operation
fnmsub.d f16, f11, f29, f15, rmm # perform operation
fnmsub.d f16, f11, f29, f15, rne # perform operation
fnmsub.d f16, f11, f29, f15, rtz # perform operation
fnmsub.d f16, f11, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f11, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f11, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f11, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f11, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f11, f29, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7fefffffffffffff)
li x14, 0xcb1cf776 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0x1acd3bfa # load x3 with 32 MSBs 0x000000001acd3bfa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001acd3bfa
sw x3, 0(x2) # store x3 (0x1acd3bfa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000001acd3bfa from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
fnmsub.d f14, f29, f12, f31, dyn # perform operation
fnmsub.d f14, f29, f12, f31, rdn # perform operation
fnmsub.d f14, f29, f12, f31, rmm # perform operation
fnmsub.d f14, f29, f12, f31, rne # perform operation
fnmsub.d f14, f29, f12, f31, rtz # perform operation
fnmsub.d f14, f29, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f29, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f29, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f29, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f29, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f29, f12, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xffefffffffffffff)
li x26, 0x64471801 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xffefffffffffffff from memory into f21
li x3, 0x31318017 # load x3 with 32 MSBs 0x0000000031318017
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031318017
sw x3, 0(x2) # store x3 (0x31318017) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000031318017 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
fnmsub.d f26, f21, f7, f9, dyn # perform operation
fnmsub.d f26, f21, f7, f9, rdn # perform operation
fnmsub.d f26, f21, f7, f9, rmm # perform operation
fnmsub.d f26, f21, f7, f9, rne # perform operation
fnmsub.d f26, f21, f7, f9, rtz # perform operation
fnmsub.d f26, f21, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f21, f7, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xfffffffffffff)
li x21, 0xdc2ab737 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
li x3, 0x21816068 # load x3 with 32 MSBs 0x0000000021816068
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000021816068
sw x3, 0(x2) # store x3 (0x21816068) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000021816068 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
fnmsub.d f21, f20, f22, f19, dyn # perform operation
fnmsub.d f21, f20, f22, f19, rdn # perform operation
fnmsub.d f21, f20, f22, f19, rmm # perform operation
fnmsub.d f21, f20, f22, f19, rne # perform operation
fnmsub.d f21, f20, f22, f19, rtz # perform operation
fnmsub.d f21, f20, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f20, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f20, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f20, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f20, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f20, f22, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x800fffffffffffff)
li x17, 0xd2580033 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
li x3, 0x41c4398c # load x3 with 32 MSBs 0x0000000041c4398c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000041c4398c
sw x3, 0(x2) # store x3 (0x41c4398c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000041c4398c from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
fnmsub.d f17, f23, f20, f29, dyn # perform operation
fnmsub.d f17, f23, f20, f29, rdn # perform operation
fnmsub.d f17, f23, f20, f29, rmm # perform operation
fnmsub.d f17, f23, f20, f29, rne # perform operation
fnmsub.d f17, f23, f20, f29, rtz # perform operation
fnmsub.d f17, f23, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f23, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f23, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f23, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f23, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f23, f20, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8000000000000)
li x4, 0xd19f712e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0x254c9879 # load x3 with 32 MSBs 0x00000000254c9879
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000254c9879
sw x3, 0(x2) # store x3 (0x254c9879) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000254c9879 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
fnmsub.d f4, f25, f30, f11, dyn # perform operation
fnmsub.d f4, f25, f30, f11, rdn # perform operation
fnmsub.d f4, f25, f30, f11, rmm # perform operation
fnmsub.d f4, f25, f30, f11, rne # perform operation
fnmsub.d f4, f25, f30, f11, rtz # perform operation
fnmsub.d f4, f25, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f25, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f25, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f25, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f25, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f25, f30, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8008000000000000)
li x12, 0x58f6b127 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xffefffffffffffff from memory into f1
li x3, 0x75c02c43 # load x3 with 32 MSBs 0x0000000075c02c43
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075c02c43
sw x3, 0(x2) # store x3 (0x75c02c43) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000075c02c43 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
fnmsub.d f12, f1, f19, f21, dyn # perform operation
fnmsub.d f12, f1, f19, f21, rdn # perform operation
fnmsub.d f12, f1, f19, f21, rmm # perform operation
fnmsub.d f12, f1, f19, f21, rne # perform operation
fnmsub.d f12, f1, f19, f21, rtz # perform operation
fnmsub.d f12, f1, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f1, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f1, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f1, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f1, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f1, f19, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x1)
li x17, 0x646c9349 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
li x3, 0xf67d692a # load x3 with 32 MSBs 0x00000000f67d692a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f67d692a
sw x3, 0(x2) # store x3 (0xf67d692a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000f67d692a from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
fnmsub.d f17, f23, f10, f13, dyn # perform operation
fnmsub.d f17, f23, f10, f13, rdn # perform operation
fnmsub.d f17, f23, f10, f13, rmm # perform operation
fnmsub.d f17, f23, f10, f13, rne # perform operation
fnmsub.d f17, f23, f10, f13, rtz # perform operation
fnmsub.d f17, f23, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f23, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f23, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f23, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f23, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f23, f10, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8000000000000001)
li x17, 0x62dc0066 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xffefffffffffffff from memory into f1
li x3, 0xa4dcdc09 # load x3 with 32 MSBs 0x00000000a4dcdc09
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a4dcdc09
sw x3, 0(x2) # store x3 (0xa4dcdc09) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000a4dcdc09 from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
fnmsub.d f17, f1, f10, f23, dyn # perform operation
fnmsub.d f17, f1, f10, f23, rdn # perform operation
fnmsub.d f17, f1, f10, f23, rmm # perform operation
fnmsub.d f17, f1, f10, f23, rne # perform operation
fnmsub.d f17, f1, f10, f23, rtz # perform operation
fnmsub.d f17, f1, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f1, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f1, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f1, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f1, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f1, f10, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7ff0000000000000)
li x12, 0x95a5e518 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
li x3, 0xb6be8f24 # load x3 with 32 MSBs 0x00000000b6be8f24
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b6be8f24
sw x3, 0(x2) # store x3 (0xb6be8f24) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000b6be8f24 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
fnmsub.d f12, f20, f10, f4, dyn # perform operation
fnmsub.d f12, f20, f10, f4, rdn # perform operation
fnmsub.d f12, f20, f10, f4, rmm # perform operation
fnmsub.d f12, f20, f10, f4, rne # perform operation
fnmsub.d f12, f20, f10, f4, rtz # perform operation
fnmsub.d f12, f20, f10, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f20, f10, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f20, f10, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f20, f10, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f20, f10, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f20, f10, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xfff0000000000000)
li x9, 0xbc48047f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0x41473883 # load x3 with 32 MSBs 0x0000000041473883
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000041473883
sw x3, 0(x2) # store x3 (0x41473883) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000041473883 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
fnmsub.d f9, f25, f7, f20, dyn # perform operation
fnmsub.d f9, f25, f7, f20, rdn # perform operation
fnmsub.d f9, f25, f7, f20, rmm # perform operation
fnmsub.d f9, f25, f7, f20, rne # perform operation
fnmsub.d f9, f25, f7, f20, rtz # perform operation
fnmsub.d f9, f25, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f25, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f25, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f25, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f25, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f25, f7, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7ff8000000000000)
li x16, 0x30b15fdf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
li x3, 0x540de4ea # load x3 with 32 MSBs 0x00000000540de4ea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000540de4ea
sw x3, 0(x2) # store x3 (0x540de4ea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000540de4ea from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
fnmsub.d f16, f4, f7, f15, dyn # perform operation
fnmsub.d f16, f4, f7, f15, rdn # perform operation
fnmsub.d f16, f4, f7, f15, rmm # perform operation
fnmsub.d f16, f4, f7, f15, rne # perform operation
fnmsub.d f16, f4, f7, f15, rtz # perform operation
fnmsub.d f16, f4, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f4, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f4, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f4, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f4, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f4, f7, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7fffffffffffffff)
li x6, 0x71e72b59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
li x3, 0xaa29564c # load x3 with 32 MSBs 0x00000000aa29564c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa29564c
sw x3, 0(x2) # store x3 (0xaa29564c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000aa29564c from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
fnmsub.d f6, f5, f1, f4, dyn # perform operation
fnmsub.d f6, f5, f1, f4, rdn # perform operation
fnmsub.d f6, f5, f1, f4, rmm # perform operation
fnmsub.d f6, f5, f1, f4, rne # perform operation
fnmsub.d f6, f5, f1, f4, rtz # perform operation
fnmsub.d f6, f5, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f5, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f5, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f5, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f5, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f5, f1, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7ff0000000000001)
li x16, 0x92932cdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
li x3, 0x28ecfdd5 # load x3 with 32 MSBs 0x0000000028ecfdd5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028ecfdd5
sw x3, 0(x2) # store x3 (0x28ecfdd5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000028ecfdd5 from memory into f17
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
fnmsub.d f16, f13, f17, f27, dyn # perform operation
fnmsub.d f16, f13, f17, f27, rdn # perform operation
fnmsub.d f16, f13, f17, f27, rmm # perform operation
fnmsub.d f16, f13, f17, f27, rne # perform operation
fnmsub.d f16, f13, f17, f27, rtz # perform operation
fnmsub.d f16, f13, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f13, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f13, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f13, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f13, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f13, f17, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7ff7ffffffffffff)
li x30, 0x3f48f391 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
li x3, 0x8f12deaa # load x3 with 32 MSBs 0x000000008f12deaa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f12deaa
sw x3, 0(x2) # store x3 (0x8f12deaa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000008f12deaa from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
fnmsub.d f30, f31, f23, f13, dyn # perform operation
fnmsub.d f30, f31, f23, f13, rdn # perform operation
fnmsub.d f30, f31, f23, f13, rmm # perform operation
fnmsub.d f30, f31, f23, f13, rne # perform operation
fnmsub.d f30, f31, f23, f13, rtz # perform operation
fnmsub.d f30, f31, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f31, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f31, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f31, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f31, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f31, f23, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x5a392534a57711ad)
li x19, 0x30bea19b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
li x3, 0x97500ce7 # load x3 with 32 MSBs 0x0000000097500ce7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000097500ce7
sw x3, 0(x2) # store x3 (0x97500ce7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000097500ce7 from memory into f7
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
fnmsub.d f19, f6, f7, f17, dyn # perform operation
fnmsub.d f19, f6, f7, f17, rdn # perform operation
fnmsub.d f19, f6, f7, f17, rmm # perform operation
fnmsub.d f19, f6, f7, f17, rne # perform operation
fnmsub.d f19, f6, f7, f17, rtz # perform operation
fnmsub.d f19, f6, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f6, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f6, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f6, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f6, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f6, f7, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xa6e895993737426c)
li x16, 0xcec41f7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
li x3, 0x4639ff8d # load x3 with 32 MSBs 0x000000004639ff8d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004639ff8d
sw x3, 0(x2) # store x3 (0x4639ff8d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000004639ff8d from memory into f29
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xa6e895993737426c from memory into f13
fnmsub.d f16, f12, f29, f13, dyn # perform operation
fnmsub.d f16, f12, f29, f13, rdn # perform operation
fnmsub.d f16, f12, f29, f13, rmm # perform operation
fnmsub.d f16, f12, f29, f13, rne # perform operation
fnmsub.d f16, f12, f29, f13, rtz # perform operation
fnmsub.d f16, f12, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f12, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f12, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f12, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f12, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f12, f29, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x0)
li x4, 0x21d081ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
li x3, 0xe8dd9bb5 # load x3 with 32 MSBs 0x00000000e8dd9bb5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8dd9bb5
sw x3, 0(x2) # store x3 (0xe8dd9bb5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000e8dd9bb5 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
fnmsub.d f4, f25, f28, f11, dyn # perform operation
fnmsub.d f4, f25, f28, f11, rdn # perform operation
fnmsub.d f4, f25, f28, f11, rmm # perform operation
fnmsub.d f4, f25, f28, f11, rne # perform operation
fnmsub.d f4, f25, f28, f11, rtz # perform operation
fnmsub.d f4, f25, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f25, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f25, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f25, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f25, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f25, f28, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8000000000000000)
li x13, 0xab92d249 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
li x3, 0x51922584 # load x3 with 32 MSBs 0x0000000051922584
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000051922584
sw x3, 0(x2) # store x3 (0x51922584) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000051922584 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
fnmsub.d f13, f18, f30, f31, dyn # perform operation
fnmsub.d f13, f18, f30, f31, rdn # perform operation
fnmsub.d f13, f18, f30, f31, rmm # perform operation
fnmsub.d f13, f18, f30, f31, rne # perform operation
fnmsub.d f13, f18, f30, f31, rtz # perform operation
fnmsub.d f13, f18, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f18, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f18, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f18, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f18, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f18, f30, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x3ff0000000000000)
li x10, 0x62281ad4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
li x3, 0x16222a84 # load x3 with 32 MSBs 0x0000000016222a84
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000016222a84
sw x3, 0(x2) # store x3 (0x16222a84) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000016222a84 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
fnmsub.d f10, f28, f26, f6, dyn # perform operation
fnmsub.d f10, f28, f26, f6, rdn # perform operation
fnmsub.d f10, f28, f26, f6, rmm # perform operation
fnmsub.d f10, f28, f26, f6, rne # perform operation
fnmsub.d f10, f28, f26, f6, rtz # perform operation
fnmsub.d f10, f28, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f28, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f28, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f28, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f28, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f28, f26, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xbff0000000000000)
li x11, 0xdc16b9c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
li x3, 0xb9a0feee # load x3 with 32 MSBs 0x00000000b9a0feee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b9a0feee
sw x3, 0(x2) # store x3 (0xb9a0feee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000b9a0feee from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
fnmsub.d f11, f10, f27, f22, dyn # perform operation
fnmsub.d f11, f10, f27, f22, rdn # perform operation
fnmsub.d f11, f10, f27, f22, rmm # perform operation
fnmsub.d f11, f10, f27, f22, rne # perform operation
fnmsub.d f11, f10, f27, f22, rtz # perform operation
fnmsub.d f11, f10, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f10, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f10, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f10, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f10, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f10, f27, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x3ff8000000000000)
li x7, 0x5e650a08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
li x3, 0xcd99d4ea # load x3 with 32 MSBs 0x00000000cd99d4ea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cd99d4ea
sw x3, 0(x2) # store x3 (0xcd99d4ea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000cd99d4ea from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
fnmsub.d f7, f29, f25, f1, dyn # perform operation
fnmsub.d f7, f29, f25, f1, rdn # perform operation
fnmsub.d f7, f29, f25, f1, rmm # perform operation
fnmsub.d f7, f29, f25, f1, rne # perform operation
fnmsub.d f7, f29, f25, f1, rtz # perform operation
fnmsub.d f7, f29, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f29, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f29, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f29, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f29, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f29, f25, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xbff8000000000000)
li x27, 0x2b1fd25f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
li x3, 0xfef0ffa6 # load x3 with 32 MSBs 0x00000000fef0ffa6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fef0ffa6
sw x3, 0(x2) # store x3 (0xfef0ffa6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000fef0ffa6 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
fnmsub.d f27, f25, f10, f1, dyn # perform operation
fnmsub.d f27, f25, f10, f1, rdn # perform operation
fnmsub.d f27, f25, f10, f1, rmm # perform operation
fnmsub.d f27, f25, f10, f1, rne # perform operation
fnmsub.d f27, f25, f10, f1, rtz # perform operation
fnmsub.d f27, f25, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f25, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f25, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f25, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f25, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f25, f10, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x4000000000000000)
li x28, 0xb43df0e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
li x3, 0xe28125cf # load x3 with 32 MSBs 0x00000000e28125cf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e28125cf
sw x3, 0(x2) # store x3 (0xe28125cf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000e28125cf from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
fnmsub.d f28, f25, f6, f18, dyn # perform operation
fnmsub.d f28, f25, f6, f18, rdn # perform operation
fnmsub.d f28, f25, f6, f18, rmm # perform operation
fnmsub.d f28, f25, f6, f18, rne # perform operation
fnmsub.d f28, f25, f6, f18, rtz # perform operation
fnmsub.d f28, f25, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f25, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f25, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f25, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f25, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f25, f6, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xc000000000000000)
li x16, 0x9c05a09c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
li x3, 0x4c957ecd # load x3 with 32 MSBs 0x000000004c957ecd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004c957ecd
sw x3, 0(x2) # store x3 (0x4c957ecd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000004c957ecd from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
fnmsub.d f16, f25, f7, f10, dyn # perform operation
fnmsub.d f16, f25, f7, f10, rdn # perform operation
fnmsub.d f16, f25, f7, f10, rmm # perform operation
fnmsub.d f16, f25, f7, f10, rne # perform operation
fnmsub.d f16, f25, f7, f10, rtz # perform operation
fnmsub.d f16, f25, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f25, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f25, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f25, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f25, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f25, f7, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x10000000000000)
li x3, 0xa8d36527 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0xe77f551c # load x3 with 32 MSBs 0x00000000e77f551c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e77f551c
sw x3, 0(x2) # store x3 (0xe77f551c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000e77f551c from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
fnmsub.d f3, f30, f22, f26, dyn # perform operation
fnmsub.d f3, f30, f22, f26, rdn # perform operation
fnmsub.d f3, f30, f22, f26, rmm # perform operation
fnmsub.d f3, f30, f22, f26, rne # perform operation
fnmsub.d f3, f30, f22, f26, rtz # perform operation
fnmsub.d f3, f30, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f30, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f30, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f30, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f30, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f30, f22, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8010000000000000)
li x11, 0x621649db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
li x3, 0xeb561dae # load x3 with 32 MSBs 0x00000000eb561dae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb561dae
sw x3, 0(x2) # store x3 (0xeb561dae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000eb561dae from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
fnmsub.d f11, f3, f31, f2, dyn # perform operation
fnmsub.d f11, f3, f31, f2, rdn # perform operation
fnmsub.d f11, f3, f31, f2, rmm # perform operation
fnmsub.d f11, f3, f31, f2, rne # perform operation
fnmsub.d f11, f3, f31, f2, rtz # perform operation
fnmsub.d f11, f3, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f3, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f3, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f3, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f3, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f3, f31, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7fefffffffffffff)
li x9, 0x368e4d16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
li x3, 0xaf980d7d # load x3 with 32 MSBs 0x00000000af980d7d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af980d7d
sw x3, 0(x2) # store x3 (0xaf980d7d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000af980d7d from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
fnmsub.d f9, f28, f10, f31, dyn # perform operation
fnmsub.d f9, f28, f10, f31, rdn # perform operation
fnmsub.d f9, f28, f10, f31, rmm # perform operation
fnmsub.d f9, f28, f10, f31, rne # perform operation
fnmsub.d f9, f28, f10, f31, rtz # perform operation
fnmsub.d f9, f28, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f28, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f28, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f28, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f28, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f28, f10, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xffefffffffffffff)
li x1, 0x0b603d85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0x51fb91d0 # load x3 with 32 MSBs 0x0000000051fb91d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000051fb91d0
sw x3, 0(x2) # store x3 (0x51fb91d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000051fb91d0 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
fnmsub.d f1, f8, f26, f15, dyn # perform operation
fnmsub.d f1, f8, f26, f15, rdn # perform operation
fnmsub.d f1, f8, f26, f15, rmm # perform operation
fnmsub.d f1, f8, f26, f15, rne # perform operation
fnmsub.d f1, f8, f26, f15, rtz # perform operation
fnmsub.d f1, f8, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f8, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f8, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f8, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f8, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f8, f26, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xfffffffffffff)
li x19, 0x1abb1aaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
li x3, 0x2d30be76 # load x3 with 32 MSBs 0x000000002d30be76
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d30be76
sw x3, 0(x2) # store x3 (0x2d30be76) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000002d30be76 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
fnmsub.d f19, f23, f8, f30, dyn # perform operation
fnmsub.d f19, f23, f8, f30, rdn # perform operation
fnmsub.d f19, f23, f8, f30, rmm # perform operation
fnmsub.d f19, f23, f8, f30, rne # perform operation
fnmsub.d f19, f23, f8, f30, rtz # perform operation
fnmsub.d f19, f23, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f23, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f23, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f23, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f23, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f23, f8, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x800fffffffffffff)
li x3, 0xc05d0822 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0xae1eaa70 # load x3 with 32 MSBs 0x00000000ae1eaa70
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ae1eaa70
sw x3, 0(x2) # store x3 (0xae1eaa70) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000ae1eaa70 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
fnmsub.d f3, f30, f9, f6, dyn # perform operation
fnmsub.d f3, f30, f9, f6, rdn # perform operation
fnmsub.d f3, f30, f9, f6, rmm # perform operation
fnmsub.d f3, f30, f9, f6, rne # perform operation
fnmsub.d f3, f30, f9, f6, rtz # perform operation
fnmsub.d f3, f30, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f30, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f30, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f30, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f30, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f30, f9, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8000000000000)
li x20, 0xdcd5d2f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
li x3, 0xd818e9f2 # load x3 with 32 MSBs 0x00000000d818e9f2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d818e9f2
sw x3, 0(x2) # store x3 (0xd818e9f2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000d818e9f2 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
fnmsub.d f20, f14, f3, f22, dyn # perform operation
fnmsub.d f20, f14, f3, f22, rdn # perform operation
fnmsub.d f20, f14, f3, f22, rmm # perform operation
fnmsub.d f20, f14, f3, f22, rne # perform operation
fnmsub.d f20, f14, f3, f22, rtz # perform operation
fnmsub.d f20, f14, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f14, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f14, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f14, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f14, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f14, f3, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8008000000000000)
li x15, 0xf1fba50c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0xf591fdc4 # load x3 with 32 MSBs 0x00000000f591fdc4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f591fdc4
sw x3, 0(x2) # store x3 (0xf591fdc4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000f591fdc4 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
fnmsub.d f15, f30, f23, f12, dyn # perform operation
fnmsub.d f15, f30, f23, f12, rdn # perform operation
fnmsub.d f15, f30, f23, f12, rmm # perform operation
fnmsub.d f15, f30, f23, f12, rne # perform operation
fnmsub.d f15, f30, f23, f12, rtz # perform operation
fnmsub.d f15, f30, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f30, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f30, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f30, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f30, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f30, f23, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x1)
li x13, 0x1c71c322 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0x3323b4a4 # load x3 with 32 MSBs 0x000000003323b4a4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003323b4a4
sw x3, 0(x2) # store x3 (0x3323b4a4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000003323b4a4 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
fnmsub.d f13, f8, f12, f30, dyn # perform operation
fnmsub.d f13, f8, f12, f30, rdn # perform operation
fnmsub.d f13, f8, f12, f30, rmm # perform operation
fnmsub.d f13, f8, f12, f30, rne # perform operation
fnmsub.d f13, f8, f12, f30, rtz # perform operation
fnmsub.d f13, f8, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f8, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f8, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f8, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f8, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f8, f12, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8000000000000001)
li x13, 0x1ac15e64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
li x3, 0xa2e18df3 # load x3 with 32 MSBs 0x00000000a2e18df3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a2e18df3
sw x3, 0(x2) # store x3 (0xa2e18df3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000a2e18df3 from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
fnmsub.d f13, f29, f2, f7, dyn # perform operation
fnmsub.d f13, f29, f2, f7, rdn # perform operation
fnmsub.d f13, f29, f2, f7, rmm # perform operation
fnmsub.d f13, f29, f2, f7, rne # perform operation
fnmsub.d f13, f29, f2, f7, rtz # perform operation
fnmsub.d f13, f29, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f29, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f29, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f29, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f29, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f29, f2, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7ff0000000000000)
li x16, 0xd659e9ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
li x3, 0x3458874c # load x3 with 32 MSBs 0x000000003458874c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003458874c
sw x3, 0(x2) # store x3 (0x3458874c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000003458874c from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
fnmsub.d f16, f29, f13, f1, dyn # perform operation
fnmsub.d f16, f29, f13, f1, rdn # perform operation
fnmsub.d f16, f29, f13, f1, rmm # perform operation
fnmsub.d f16, f29, f13, f1, rne # perform operation
fnmsub.d f16, f29, f13, f1, rtz # perform operation
fnmsub.d f16, f29, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f29, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f29, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f29, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f29, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f29, f13, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xfff0000000000000)
li x7, 0x7c11c91a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
li x3, 0x459e2aad # load x3 with 32 MSBs 0x00000000459e2aad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000459e2aad
sw x3, 0(x2) # store x3 (0x459e2aad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000459e2aad from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000000 from memory into f11
fnmsub.d f7, f26, f8, f11, dyn # perform operation
fnmsub.d f7, f26, f8, f11, rdn # perform operation
fnmsub.d f7, f26, f8, f11, rmm # perform operation
fnmsub.d f7, f26, f8, f11, rne # perform operation
fnmsub.d f7, f26, f8, f11, rtz # perform operation
fnmsub.d f7, f26, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f26, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f26, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f26, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f26, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f26, f8, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7ff8000000000000)
li x17, 0x3dbe2fed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
li x3, 0x98e41a81 # load x3 with 32 MSBs 0x0000000098e41a81
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000098e41a81
sw x3, 0(x2) # store x3 (0x98e41a81) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000098e41a81 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
fnmsub.d f17, f9, f22, f27, dyn # perform operation
fnmsub.d f17, f9, f22, f27, rdn # perform operation
fnmsub.d f17, f9, f22, f27, rmm # perform operation
fnmsub.d f17, f9, f22, f27, rne # perform operation
fnmsub.d f17, f9, f22, f27, rtz # perform operation
fnmsub.d f17, f9, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f9, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f9, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f9, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f9, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f9, f22, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7fffffffffffffff)
li x29, 0x8faa2e0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000fffffffffffff from memory into f16
li x3, 0x6c340dc4 # load x3 with 32 MSBs 0x000000006c340dc4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006c340dc4
sw x3, 0(x2) # store x3 (0x6c340dc4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000006c340dc4 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
fnmsub.d f29, f16, f2, f19, dyn # perform operation
fnmsub.d f29, f16, f2, f19, rdn # perform operation
fnmsub.d f29, f16, f2, f19, rmm # perform operation
fnmsub.d f29, f16, f2, f19, rne # perform operation
fnmsub.d f29, f16, f2, f19, rtz # perform operation
fnmsub.d f29, f16, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f16, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f16, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f16, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f16, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f16, f2, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7ff0000000000001)
li x5, 0xd3f395d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
li x3, 0x351f2e4b # load x3 with 32 MSBs 0x00000000351f2e4b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000351f2e4b
sw x3, 0(x2) # store x3 (0x351f2e4b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000351f2e4b from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
fnmsub.d f5, f21, f23, f7, dyn # perform operation
fnmsub.d f5, f21, f23, f7, rdn # perform operation
fnmsub.d f5, f21, f23, f7, rmm # perform operation
fnmsub.d f5, f21, f23, f7, rne # perform operation
fnmsub.d f5, f21, f23, f7, rtz # perform operation
fnmsub.d f5, f21, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f21, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f21, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f21, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f21, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f21, f23, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7ff7ffffffffffff)
li x6, 0x9d3096d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0xc0b7ba6a # load x3 with 32 MSBs 0x00000000c0b7ba6a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c0b7ba6a
sw x3, 0(x2) # store x3 (0xc0b7ba6a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000c0b7ba6a from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
fnmsub.d f6, f31, f2, f29, dyn # perform operation
fnmsub.d f6, f31, f2, f29, rdn # perform operation
fnmsub.d f6, f31, f2, f29, rmm # perform operation
fnmsub.d f6, f31, f2, f29, rne # perform operation
fnmsub.d f6, f31, f2, f29, rtz # perform operation
fnmsub.d f6, f31, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f31, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f31, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f31, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f31, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f31, f2, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x5a392534a57711ad)
li x7, 0xcdd02b2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
li x3, 0xfdc2e83d # load x3 with 32 MSBs 0x00000000fdc2e83d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fdc2e83d
sw x3, 0(x2) # store x3 (0xfdc2e83d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000fdc2e83d from memory into f12
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
fnmsub.d f7, f6, f12, f25, dyn # perform operation
fnmsub.d f7, f6, f12, f25, rdn # perform operation
fnmsub.d f7, f6, f12, f25, rmm # perform operation
fnmsub.d f7, f6, f12, f25, rne # perform operation
fnmsub.d f7, f6, f12, f25, rtz # perform operation
fnmsub.d f7, f6, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f6, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f6, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f6, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f6, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f6, f12, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xa6e895993737426c)
li x6, 0x53a964f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
li x3, 0xc67d7b85 # load x3 with 32 MSBs 0x00000000c67d7b85
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c67d7b85
sw x3, 0(x2) # store x3 (0xc67d7b85) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000c67d7b85 from memory into f30
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
fnmsub.d f6, f21, f30, f16, dyn # perform operation
fnmsub.d f6, f21, f30, f16, rdn # perform operation
fnmsub.d f6, f21, f30, f16, rmm # perform operation
fnmsub.d f6, f21, f30, f16, rne # perform operation
fnmsub.d f6, f21, f30, f16, rtz # perform operation
fnmsub.d f6, f21, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f21, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f21, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f21, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f21, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f21, f30, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x0)
li x22, 0xccf3d5f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
li x3, 0x0f5d6c7a # load x3 with 32 MSBs 0x000000000f5d6c7a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f5d6c7a
sw x3, 0(x2) # store x3 (0x0f5d6c7a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000000f5d6c7a from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
fnmsub.d f22, f29, f12, f16, dyn # perform operation
fnmsub.d f22, f29, f12, f16, rdn # perform operation
fnmsub.d f22, f29, f12, f16, rmm # perform operation
fnmsub.d f22, f29, f12, f16, rne # perform operation
fnmsub.d f22, f29, f12, f16, rtz # perform operation
fnmsub.d f22, f29, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f29, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f29, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f29, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f29, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f29, f12, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8000000000000000)
li x2, 0x93ac64dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
li x3, 0x1eb136fd # load x3 with 32 MSBs 0x000000001eb136fd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001eb136fd
sw x3, 0(x2) # store x3 (0x1eb136fd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000001eb136fd from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000000 from memory into f11
fnmsub.d f2, f13, f14, f11, dyn # perform operation
fnmsub.d f2, f13, f14, f11, rdn # perform operation
fnmsub.d f2, f13, f14, f11, rmm # perform operation
fnmsub.d f2, f13, f14, f11, rne # perform operation
fnmsub.d f2, f13, f14, f11, rtz # perform operation
fnmsub.d f2, f13, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f13, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f13, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f13, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f13, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f13, f14, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x3ff0000000000000)
li x18, 0x33e85ec6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
li x3, 0xe87a3301 # load x3 with 32 MSBs 0x00000000e87a3301
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e87a3301
sw x3, 0(x2) # store x3 (0xe87a3301) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000e87a3301 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
fnmsub.d f18, f10, f27, f8, dyn # perform operation
fnmsub.d f18, f10, f27, f8, rdn # perform operation
fnmsub.d f18, f10, f27, f8, rmm # perform operation
fnmsub.d f18, f10, f27, f8, rne # perform operation
fnmsub.d f18, f10, f27, f8, rtz # perform operation
fnmsub.d f18, f10, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f10, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f10, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f10, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f10, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f10, f27, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xbff0000000000000)
li x17, 0x59b787c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
li x3, 0x553e99f9 # load x3 with 32 MSBs 0x00000000553e99f9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000553e99f9
sw x3, 0(x2) # store x3 (0x553e99f9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000553e99f9 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
fnmsub.d f17, f16, f26, f4, dyn # perform operation
fnmsub.d f17, f16, f26, f4, rdn # perform operation
fnmsub.d f17, f16, f26, f4, rmm # perform operation
fnmsub.d f17, f16, f26, f4, rne # perform operation
fnmsub.d f17, f16, f26, f4, rtz # perform operation
fnmsub.d f17, f16, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f16, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f16, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f16, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f16, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f16, f26, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x3ff8000000000000)
li x10, 0xad2ec49d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
li x3, 0xceda1e47 # load x3 with 32 MSBs 0x00000000ceda1e47
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ceda1e47
sw x3, 0(x2) # store x3 (0xceda1e47) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000ceda1e47 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
fnmsub.d f10, f12, f5, f24, dyn # perform operation
fnmsub.d f10, f12, f5, f24, rdn # perform operation
fnmsub.d f10, f12, f5, f24, rmm # perform operation
fnmsub.d f10, f12, f5, f24, rne # perform operation
fnmsub.d f10, f12, f5, f24, rtz # perform operation
fnmsub.d f10, f12, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f12, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f12, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f12, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f12, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f12, f5, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xbff8000000000000)
li x18, 0x17737e79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
li x3, 0x7aa72dfe # load x3 with 32 MSBs 0x000000007aa72dfe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007aa72dfe
sw x3, 0(x2) # store x3 (0x7aa72dfe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000007aa72dfe from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
fnmsub.d f18, f28, f12, f11, dyn # perform operation
fnmsub.d f18, f28, f12, f11, rdn # perform operation
fnmsub.d f18, f28, f12, f11, rmm # perform operation
fnmsub.d f18, f28, f12, f11, rne # perform operation
fnmsub.d f18, f28, f12, f11, rtz # perform operation
fnmsub.d f18, f28, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f28, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f28, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f28, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f28, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f28, f12, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x4000000000000000)
li x17, 0xa709478b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
li x3, 0x7df2a240 # load x3 with 32 MSBs 0x000000007df2a240
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007df2a240
sw x3, 0(x2) # store x3 (0x7df2a240) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000007df2a240 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
fnmsub.d f17, f5, f29, f20, dyn # perform operation
fnmsub.d f17, f5, f29, f20, rdn # perform operation
fnmsub.d f17, f5, f29, f20, rmm # perform operation
fnmsub.d f17, f5, f29, f20, rne # perform operation
fnmsub.d f17, f5, f29, f20, rtz # perform operation
fnmsub.d f17, f5, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f5, f29, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xc000000000000000)
li x24, 0x98ae06d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
li x3, 0x9f1037d7 # load x3 with 32 MSBs 0x000000009f1037d7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f1037d7
sw x3, 0(x2) # store x3 (0x9f1037d7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000009f1037d7 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
fnmsub.d f24, f20, f3, f29, dyn # perform operation
fnmsub.d f24, f20, f3, f29, rdn # perform operation
fnmsub.d f24, f20, f3, f29, rmm # perform operation
fnmsub.d f24, f20, f3, f29, rne # perform operation
fnmsub.d f24, f20, f3, f29, rtz # perform operation
fnmsub.d f24, f20, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f20, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f20, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f20, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f20, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f20, f3, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x10000000000000)
li x24, 0x4dd11fdb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
li x3, 0x3767e783 # load x3 with 32 MSBs 0x000000003767e783
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003767e783
sw x3, 0(x2) # store x3 (0x3767e783) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000003767e783 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
fnmsub.d f24, f17, f2, f3, dyn # perform operation
fnmsub.d f24, f17, f2, f3, rdn # perform operation
fnmsub.d f24, f17, f2, f3, rmm # perform operation
fnmsub.d f24, f17, f2, f3, rne # perform operation
fnmsub.d f24, f17, f2, f3, rtz # perform operation
fnmsub.d f24, f17, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f17, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f17, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f17, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f17, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f17, f2, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8010000000000000)
li x4, 0x1850c6d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
li x3, 0x2fc85a85 # load x3 with 32 MSBs 0x000000002fc85a85
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002fc85a85
sw x3, 0(x2) # store x3 (0x2fc85a85) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000002fc85a85 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
fnmsub.d f4, f15, f2, f7, dyn # perform operation
fnmsub.d f4, f15, f2, f7, rdn # perform operation
fnmsub.d f4, f15, f2, f7, rmm # perform operation
fnmsub.d f4, f15, f2, f7, rne # perform operation
fnmsub.d f4, f15, f2, f7, rtz # perform operation
fnmsub.d f4, f15, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f15, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f15, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f15, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f15, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f15, f2, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7fefffffffffffff)
li x15, 0x9581552f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
li x3, 0x2a5c8210 # load x3 with 32 MSBs 0x000000002a5c8210
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a5c8210
sw x3, 0(x2) # store x3 (0x2a5c8210) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000002a5c8210 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
fnmsub.d f15, f1, f26, f2, dyn # perform operation
fnmsub.d f15, f1, f26, f2, rdn # perform operation
fnmsub.d f15, f1, f26, f2, rmm # perform operation
fnmsub.d f15, f1, f26, f2, rne # perform operation
fnmsub.d f15, f1, f26, f2, rtz # perform operation
fnmsub.d f15, f1, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f1, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f1, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f1, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f1, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f1, f26, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xffefffffffffffff)
li x8, 0x95f23501 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0x70f177a1 # load x3 with 32 MSBs 0x0000000070f177a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000070f177a1
sw x3, 0(x2) # store x3 (0x70f177a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000070f177a1 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
fnmsub.d f8, f19, f14, f27, dyn # perform operation
fnmsub.d f8, f19, f14, f27, rdn # perform operation
fnmsub.d f8, f19, f14, f27, rmm # perform operation
fnmsub.d f8, f19, f14, f27, rne # perform operation
fnmsub.d f8, f19, f14, f27, rtz # perform operation
fnmsub.d f8, f19, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f19, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f19, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f19, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f19, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f19, f14, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xfffffffffffff)
li x11, 0xbad9ba9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
li x3, 0xf43fb93c # load x3 with 32 MSBs 0x00000000f43fb93c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f43fb93c
sw x3, 0(x2) # store x3 (0xf43fb93c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000f43fb93c from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000fffffffffffff from memory into f16
fnmsub.d f11, f15, f14, f16, dyn # perform operation
fnmsub.d f11, f15, f14, f16, rdn # perform operation
fnmsub.d f11, f15, f14, f16, rmm # perform operation
fnmsub.d f11, f15, f14, f16, rne # perform operation
fnmsub.d f11, f15, f14, f16, rtz # perform operation
fnmsub.d f11, f15, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f15, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f15, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f15, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f15, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f15, f14, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x800fffffffffffff)
li x20, 0x95192020 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
li x3, 0x0b4db79a # load x3 with 32 MSBs 0x000000000b4db79a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000b4db79a
sw x3, 0(x2) # store x3 (0x0b4db79a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000000b4db79a from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
fnmsub.d f20, f23, f30, f3, dyn # perform operation
fnmsub.d f20, f23, f30, f3, rdn # perform operation
fnmsub.d f20, f23, f30, f3, rmm # perform operation
fnmsub.d f20, f23, f30, f3, rne # perform operation
fnmsub.d f20, f23, f30, f3, rtz # perform operation
fnmsub.d f20, f23, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f23, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f23, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f23, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f23, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f23, f30, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8000000000000)
li x14, 0xf79fa203 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
li x3, 0xa9acf4b5 # load x3 with 32 MSBs 0x00000000a9acf4b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9acf4b5
sw x3, 0(x2) # store x3 (0xa9acf4b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000a9acf4b5 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
fnmsub.d f14, f2, f20, f25, dyn # perform operation
fnmsub.d f14, f2, f20, f25, rdn # perform operation
fnmsub.d f14, f2, f20, f25, rmm # perform operation
fnmsub.d f14, f2, f20, f25, rne # perform operation
fnmsub.d f14, f2, f20, f25, rtz # perform operation
fnmsub.d f14, f2, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f2, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f2, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f2, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f2, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f2, f20, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8008000000000000)
li x26, 0xa3ecfd0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
li x3, 0x2e5e4671 # load x3 with 32 MSBs 0x000000002e5e4671
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e5e4671
sw x3, 0(x2) # store x3 (0x2e5e4671) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000002e5e4671 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
fnmsub.d f26, f6, f10, f25, dyn # perform operation
fnmsub.d f26, f6, f10, f25, rdn # perform operation
fnmsub.d f26, f6, f10, f25, rmm # perform operation
fnmsub.d f26, f6, f10, f25, rne # perform operation
fnmsub.d f26, f6, f10, f25, rtz # perform operation
fnmsub.d f26, f6, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f6, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f6, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f6, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f6, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f6, f10, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x1)
li x3, 0x0176c746 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
li x3, 0xd875f8ab # load x3 with 32 MSBs 0x00000000d875f8ab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d875f8ab
sw x3, 0(x2) # store x3 (0xd875f8ab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000d875f8ab from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
fnmsub.d f3, f26, f16, f11, dyn # perform operation
fnmsub.d f3, f26, f16, f11, rdn # perform operation
fnmsub.d f3, f26, f16, f11, rmm # perform operation
fnmsub.d f3, f26, f16, f11, rne # perform operation
fnmsub.d f3, f26, f16, f11, rtz # perform operation
fnmsub.d f3, f26, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f26, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f26, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f26, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f26, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f26, f16, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8000000000000001)
li x7, 0xabd0709d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
li x3, 0x77a8382c # load x3 with 32 MSBs 0x0000000077a8382c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000077a8382c
sw x3, 0(x2) # store x3 (0x77a8382c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000077a8382c from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
fnmsub.d f7, f21, f11, f22, dyn # perform operation
fnmsub.d f7, f21, f11, f22, rdn # perform operation
fnmsub.d f7, f21, f11, f22, rmm # perform operation
fnmsub.d f7, f21, f11, f22, rne # perform operation
fnmsub.d f7, f21, f11, f22, rtz # perform operation
fnmsub.d f7, f21, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f21, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f21, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f21, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f21, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f21, f11, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7ff0000000000000)
li x5, 0x17ac0f25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
li x3, 0x1b4d987e # load x3 with 32 MSBs 0x000000001b4d987e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b4d987e
sw x3, 0(x2) # store x3 (0x1b4d987e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000001b4d987e from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
fnmsub.d f5, f31, f1, f20, dyn # perform operation
fnmsub.d f5, f31, f1, f20, rdn # perform operation
fnmsub.d f5, f31, f1, f20, rmm # perform operation
fnmsub.d f5, f31, f1, f20, rne # perform operation
fnmsub.d f5, f31, f1, f20, rtz # perform operation
fnmsub.d f5, f31, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f31, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f31, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f31, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f31, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f31, f1, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xfff0000000000000)
li x15, 0x923c4abe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
li x3, 0x4ed23127 # load x3 with 32 MSBs 0x000000004ed23127
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ed23127
sw x3, 0(x2) # store x3 (0x4ed23127) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000004ed23127 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
fnmsub.d f15, f26, f3, f23, dyn # perform operation
fnmsub.d f15, f26, f3, f23, rdn # perform operation
fnmsub.d f15, f26, f3, f23, rmm # perform operation
fnmsub.d f15, f26, f3, f23, rne # perform operation
fnmsub.d f15, f26, f3, f23, rtz # perform operation
fnmsub.d f15, f26, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f26, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f26, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f26, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f26, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f26, f3, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7ff8000000000000)
li x3, 0x88513dfe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
li x3, 0xae46b256 # load x3 with 32 MSBs 0x00000000ae46b256
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ae46b256
sw x3, 0(x2) # store x3 (0xae46b256) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000ae46b256 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
fnmsub.d f3, f7, f29, f18, dyn # perform operation
fnmsub.d f3, f7, f29, f18, rdn # perform operation
fnmsub.d f3, f7, f29, f18, rmm # perform operation
fnmsub.d f3, f7, f29, f18, rne # perform operation
fnmsub.d f3, f7, f29, f18, rtz # perform operation
fnmsub.d f3, f7, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f7, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f7, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f7, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f7, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f7, f29, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7fffffffffffffff)
li x27, 0xb99ac51d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
li x3, 0x1820a3be # load x3 with 32 MSBs 0x000000001820a3be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001820a3be
sw x3, 0(x2) # store x3 (0x1820a3be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000001820a3be from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
fnmsub.d f27, f24, f8, f29, dyn # perform operation
fnmsub.d f27, f24, f8, f29, rdn # perform operation
fnmsub.d f27, f24, f8, f29, rmm # perform operation
fnmsub.d f27, f24, f8, f29, rne # perform operation
fnmsub.d f27, f24, f8, f29, rtz # perform operation
fnmsub.d f27, f24, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f24, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f24, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f24, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f24, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f24, f8, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7ff0000000000001)
li x23, 0x48735c14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
li x3, 0xd1235959 # load x3 with 32 MSBs 0x00000000d1235959
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1235959
sw x3, 0(x2) # store x3 (0xd1235959) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000d1235959 from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
fnmsub.d f23, f1, f20, f7, dyn # perform operation
fnmsub.d f23, f1, f20, f7, rdn # perform operation
fnmsub.d f23, f1, f20, f7, rmm # perform operation
fnmsub.d f23, f1, f20, f7, rne # perform operation
fnmsub.d f23, f1, f20, f7, rtz # perform operation
fnmsub.d f23, f1, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f1, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f1, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f1, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f1, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f1, f20, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7ff7ffffffffffff)
li x16, 0x09bf4e46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
li x3, 0x63149382 # load x3 with 32 MSBs 0x0000000063149382
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000063149382
sw x3, 0(x2) # store x3 (0x63149382) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000063149382 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
fnmsub.d f16, f15, f5, f9, dyn # perform operation
fnmsub.d f16, f15, f5, f9, rdn # perform operation
fnmsub.d f16, f15, f5, f9, rmm # perform operation
fnmsub.d f16, f15, f5, f9, rne # perform operation
fnmsub.d f16, f15, f5, f9, rtz # perform operation
fnmsub.d f16, f15, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f15, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f15, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f15, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f15, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f15, f5, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x5a392534a57711ad)
li x9, 0x387c2ccf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
li x3, 0xf5534e64 # load x3 with 32 MSBs 0x00000000f5534e64
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f5534e64
sw x3, 0(x2) # store x3 (0xf5534e64) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000f5534e64 from memory into f14
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
fnmsub.d f9, f13, f14, f27, dyn # perform operation
fnmsub.d f9, f13, f14, f27, rdn # perform operation
fnmsub.d f9, f13, f14, f27, rmm # perform operation
fnmsub.d f9, f13, f14, f27, rne # perform operation
fnmsub.d f9, f13, f14, f27, rtz # perform operation
fnmsub.d f9, f13, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f13, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f13, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f13, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f13, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f13, f14, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xa6e895993737426c)
li x13, 0x603e53bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x800fffffffffffff from memory into f30
li x3, 0x3d234bc5 # load x3 with 32 MSBs 0x000000003d234bc5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d234bc5
sw x3, 0(x2) # store x3 (0x3d234bc5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000003d234bc5 from memory into f20
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
fnmsub.d f13, f30, f20, f25, dyn # perform operation
fnmsub.d f13, f30, f20, f25, rdn # perform operation
fnmsub.d f13, f30, f20, f25, rmm # perform operation
fnmsub.d f13, f30, f20, f25, rne # perform operation
fnmsub.d f13, f30, f20, f25, rtz # perform operation
fnmsub.d f13, f30, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f30, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f30, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f30, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f30, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f30, f20, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x0)
li x22, 0xebde8e46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
li x3, 0x8d4fdb1a # load x3 with 32 MSBs 0x000000008d4fdb1a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008d4fdb1a
sw x3, 0(x2) # store x3 (0x8d4fdb1a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000008d4fdb1a from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
fnmsub.d f22, f30, f7, f14, dyn # perform operation
fnmsub.d f22, f30, f7, f14, rdn # perform operation
fnmsub.d f22, f30, f7, f14, rmm # perform operation
fnmsub.d f22, f30, f7, f14, rne # perform operation
fnmsub.d f22, f30, f7, f14, rtz # perform operation
fnmsub.d f22, f30, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f30, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f30, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f30, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f30, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f30, f7, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8000000000000000)
li x23, 0x16e41c76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0008000000000000 from memory into f18
li x3, 0xa1ffb0a5 # load x3 with 32 MSBs 0x00000000a1ffb0a5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a1ffb0a5
sw x3, 0(x2) # store x3 (0xa1ffb0a5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000a1ffb0a5 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
fnmsub.d f23, f18, f11, f4, dyn # perform operation
fnmsub.d f23, f18, f11, f4, rdn # perform operation
fnmsub.d f23, f18, f11, f4, rmm # perform operation
fnmsub.d f23, f18, f11, f4, rne # perform operation
fnmsub.d f23, f18, f11, f4, rtz # perform operation
fnmsub.d f23, f18, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f18, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f18, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f18, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f18, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f18, f11, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x3ff0000000000000)
li x18, 0xdb92acdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
li x3, 0x17459a2f # load x3 with 32 MSBs 0x0000000017459a2f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000017459a2f
sw x3, 0(x2) # store x3 (0x17459a2f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000017459a2f from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
fnmsub.d f18, f5, f22, f7, dyn # perform operation
fnmsub.d f18, f5, f22, f7, rdn # perform operation
fnmsub.d f18, f5, f22, f7, rmm # perform operation
fnmsub.d f18, f5, f22, f7, rne # perform operation
fnmsub.d f18, f5, f22, f7, rtz # perform operation
fnmsub.d f18, f5, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f5, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f5, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f5, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f5, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f5, f22, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xbff0000000000000)
li x14, 0xcfd3c8e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
li x3, 0xc8b13e14 # load x3 with 32 MSBs 0x00000000c8b13e14
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c8b13e14
sw x3, 0(x2) # store x3 (0xc8b13e14) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000c8b13e14 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
fnmsub.d f14, f8, f20, f26, dyn # perform operation
fnmsub.d f14, f8, f20, f26, rdn # perform operation
fnmsub.d f14, f8, f20, f26, rmm # perform operation
fnmsub.d f14, f8, f20, f26, rne # perform operation
fnmsub.d f14, f8, f20, f26, rtz # perform operation
fnmsub.d f14, f8, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f8, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f8, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f8, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f8, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f8, f20, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x3ff8000000000000)
li x10, 0xdc69ae77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0xa2c80174 # load x3 with 32 MSBs 0x00000000a2c80174
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a2c80174
sw x3, 0(x2) # store x3 (0xa2c80174) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000a2c80174 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
fnmsub.d f10, f9, f8, f12, dyn # perform operation
fnmsub.d f10, f9, f8, f12, rdn # perform operation
fnmsub.d f10, f9, f8, f12, rmm # perform operation
fnmsub.d f10, f9, f8, f12, rne # perform operation
fnmsub.d f10, f9, f8, f12, rtz # perform operation
fnmsub.d f10, f9, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f9, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f9, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f9, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f9, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f9, f8, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xbff8000000000000)
li x20, 0x0000cca3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0x09fdcb13 # load x3 with 32 MSBs 0x0000000009fdcb13
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000009fdcb13
sw x3, 0(x2) # store x3 (0x09fdcb13) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000009fdcb13 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
fnmsub.d f20, f31, f22, f21, dyn # perform operation
fnmsub.d f20, f31, f22, f21, rdn # perform operation
fnmsub.d f20, f31, f22, f21, rmm # perform operation
fnmsub.d f20, f31, f22, f21, rne # perform operation
fnmsub.d f20, f31, f22, f21, rtz # perform operation
fnmsub.d f20, f31, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f31, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f31, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f31, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f31, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f31, f22, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x4000000000000000)
li x16, 0x26cdfa0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
li x3, 0x930769bd # load x3 with 32 MSBs 0x00000000930769bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000930769bd
sw x3, 0(x2) # store x3 (0x930769bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000930769bd from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
fnmsub.d f16, f28, f7, f15, dyn # perform operation
fnmsub.d f16, f28, f7, f15, rdn # perform operation
fnmsub.d f16, f28, f7, f15, rmm # perform operation
fnmsub.d f16, f28, f7, f15, rne # perform operation
fnmsub.d f16, f28, f7, f15, rtz # perform operation
fnmsub.d f16, f28, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f28, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f28, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f28, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f28, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f28, f7, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xc000000000000000)
li x31, 0xca143678 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
li x3, 0xec7cf779 # load x3 with 32 MSBs 0x00000000ec7cf779
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec7cf779
sw x3, 0(x2) # store x3 (0xec7cf779) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000ec7cf779 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
fnmsub.d f31, f13, f22, f28, dyn # perform operation
fnmsub.d f31, f13, f22, f28, rdn # perform operation
fnmsub.d f31, f13, f22, f28, rmm # perform operation
fnmsub.d f31, f13, f22, f28, rne # perform operation
fnmsub.d f31, f13, f22, f28, rtz # perform operation
fnmsub.d f31, f13, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f13, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f13, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f13, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f13, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f13, f22, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x10000000000000)
li x23, 0x2da2663a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0xc6ffefb3 # load x3 with 32 MSBs 0x00000000c6ffefb3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c6ffefb3
sw x3, 0(x2) # store x3 (0xc6ffefb3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000c6ffefb3 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
fnmsub.d f23, f20, f11, f19, dyn # perform operation
fnmsub.d f23, f20, f11, f19, rdn # perform operation
fnmsub.d f23, f20, f11, f19, rmm # perform operation
fnmsub.d f23, f20, f11, f19, rne # perform operation
fnmsub.d f23, f20, f11, f19, rtz # perform operation
fnmsub.d f23, f20, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f20, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f20, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f20, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f20, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f20, f11, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8010000000000000)
li x14, 0x517666c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
li x3, 0x44c64d46 # load x3 with 32 MSBs 0x0000000044c64d46
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000044c64d46
sw x3, 0(x2) # store x3 (0x44c64d46) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000044c64d46 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8010000000000000 from memory into f12
fnmsub.d f14, f24, f6, f12, dyn # perform operation
fnmsub.d f14, f24, f6, f12, rdn # perform operation
fnmsub.d f14, f24, f6, f12, rmm # perform operation
fnmsub.d f14, f24, f6, f12, rne # perform operation
fnmsub.d f14, f24, f6, f12, rtz # perform operation
fnmsub.d f14, f24, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f24, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f24, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f24, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f24, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f24, f6, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7fefffffffffffff)
li x19, 0x780598ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
li x3, 0xe93cce19 # load x3 with 32 MSBs 0x00000000e93cce19
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e93cce19
sw x3, 0(x2) # store x3 (0xe93cce19) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000e93cce19 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
fnmsub.d f19, f29, f11, f25, dyn # perform operation
fnmsub.d f19, f29, f11, f25, rdn # perform operation
fnmsub.d f19, f29, f11, f25, rmm # perform operation
fnmsub.d f19, f29, f11, f25, rne # perform operation
fnmsub.d f19, f29, f11, f25, rtz # perform operation
fnmsub.d f19, f29, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f29, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f29, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f29, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f29, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f29, f11, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xffefffffffffffff)
li x10, 0xd0d6a0ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
li x3, 0x2dc3d853 # load x3 with 32 MSBs 0x000000002dc3d853
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002dc3d853
sw x3, 0(x2) # store x3 (0x2dc3d853) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000002dc3d853 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
fnmsub.d f10, f13, f3, f28, dyn # perform operation
fnmsub.d f10, f13, f3, f28, rdn # perform operation
fnmsub.d f10, f13, f3, f28, rmm # perform operation
fnmsub.d f10, f13, f3, f28, rne # perform operation
fnmsub.d f10, f13, f3, f28, rtz # perform operation
fnmsub.d f10, f13, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f13, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f13, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f13, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f13, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f13, f3, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xfffffffffffff)
li x31, 0x89ff4611 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
li x3, 0xd720631f # load x3 with 32 MSBs 0x00000000d720631f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d720631f
sw x3, 0(x2) # store x3 (0xd720631f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000d720631f from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
fnmsub.d f31, f30, f18, f14, dyn # perform operation
fnmsub.d f31, f30, f18, f14, rdn # perform operation
fnmsub.d f31, f30, f18, f14, rmm # perform operation
fnmsub.d f31, f30, f18, f14, rne # perform operation
fnmsub.d f31, f30, f18, f14, rtz # perform operation
fnmsub.d f31, f30, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f30, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f30, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f30, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f30, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f30, f18, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x800fffffffffffff)
li x7, 0x8e445980 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
li x3, 0x0b632937 # load x3 with 32 MSBs 0x000000000b632937
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000b632937
sw x3, 0(x2) # store x3 (0x0b632937) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000000b632937 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
fnmsub.d f7, f15, f27, f25, dyn # perform operation
fnmsub.d f7, f15, f27, f25, rdn # perform operation
fnmsub.d f7, f15, f27, f25, rmm # perform operation
fnmsub.d f7, f15, f27, f25, rne # perform operation
fnmsub.d f7, f15, f27, f25, rtz # perform operation
fnmsub.d f7, f15, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f15, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f15, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f15, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f15, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f15, f27, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8000000000000)
li x17, 0xeb0a61c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
li x3, 0xedcac3a8 # load x3 with 32 MSBs 0x00000000edcac3a8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000edcac3a8
sw x3, 0(x2) # store x3 (0xedcac3a8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000edcac3a8 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
fnmsub.d f17, f5, f3, f26, dyn # perform operation
fnmsub.d f17, f5, f3, f26, rdn # perform operation
fnmsub.d f17, f5, f3, f26, rmm # perform operation
fnmsub.d f17, f5, f3, f26, rne # perform operation
fnmsub.d f17, f5, f3, f26, rtz # perform operation
fnmsub.d f17, f5, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f5, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f5, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f5, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f5, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f5, f3, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8008000000000000)
li x28, 0x134e05e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
li x3, 0xaad29bc2 # load x3 with 32 MSBs 0x00000000aad29bc2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aad29bc2
sw x3, 0(x2) # store x3 (0xaad29bc2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000aad29bc2 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
fnmsub.d f28, f1, f12, f8, dyn # perform operation
fnmsub.d f28, f1, f12, f8, rdn # perform operation
fnmsub.d f28, f1, f12, f8, rmm # perform operation
fnmsub.d f28, f1, f12, f8, rne # perform operation
fnmsub.d f28, f1, f12, f8, rtz # perform operation
fnmsub.d f28, f1, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f1, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f1, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f1, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f1, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f1, f12, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x1)
li x20, 0xac4409c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
li x3, 0x773d4a06 # load x3 with 32 MSBs 0x00000000773d4a06
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000773d4a06
sw x3, 0(x2) # store x3 (0x773d4a06) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000773d4a06 from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
fnmsub.d f20, f10, f7, f6, dyn # perform operation
fnmsub.d f20, f10, f7, f6, rdn # perform operation
fnmsub.d f20, f10, f7, f6, rmm # perform operation
fnmsub.d f20, f10, f7, f6, rne # perform operation
fnmsub.d f20, f10, f7, f6, rtz # perform operation
fnmsub.d f20, f10, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f10, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f10, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f10, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f10, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f10, f7, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8000000000000001)
li x14, 0x8ab56e01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0xdbc52258 # load x3 with 32 MSBs 0x00000000dbc52258
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dbc52258
sw x3, 0(x2) # store x3 (0xdbc52258) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000dbc52258 from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
fnmsub.d f14, f20, f11, f6, dyn # perform operation
fnmsub.d f14, f20, f11, f6, rdn # perform operation
fnmsub.d f14, f20, f11, f6, rmm # perform operation
fnmsub.d f14, f20, f11, f6, rne # perform operation
fnmsub.d f14, f20, f11, f6, rtz # perform operation
fnmsub.d f14, f20, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f20, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f20, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f20, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f20, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f20, f11, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7ff0000000000000)
li x1, 0xa3c62f60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0008000000000000 from memory into f4
li x3, 0xcda903b4 # load x3 with 32 MSBs 0x00000000cda903b4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cda903b4
sw x3, 0(x2) # store x3 (0xcda903b4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000cda903b4 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
fnmsub.d f1, f4, f8, f18, dyn # perform operation
fnmsub.d f1, f4, f8, f18, rdn # perform operation
fnmsub.d f1, f4, f8, f18, rmm # perform operation
fnmsub.d f1, f4, f8, f18, rne # perform operation
fnmsub.d f1, f4, f8, f18, rtz # perform operation
fnmsub.d f1, f4, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f4, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f4, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f4, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f4, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f4, f8, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xfff0000000000000)
li x11, 0xacfd131c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0xc5874499 # load x3 with 32 MSBs 0x00000000c5874499
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c5874499
sw x3, 0(x2) # store x3 (0xc5874499) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000c5874499 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
fnmsub.d f11, f31, f5, f30, dyn # perform operation
fnmsub.d f11, f31, f5, f30, rdn # perform operation
fnmsub.d f11, f31, f5, f30, rmm # perform operation
fnmsub.d f11, f31, f5, f30, rne # perform operation
fnmsub.d f11, f31, f5, f30, rtz # perform operation
fnmsub.d f11, f31, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f31, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f31, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f31, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f31, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f31, f5, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7ff8000000000000)
li x12, 0x0007bed0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
li x3, 0x719f3d12 # load x3 with 32 MSBs 0x00000000719f3d12
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000719f3d12
sw x3, 0(x2) # store x3 (0x719f3d12) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000719f3d12 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
fnmsub.d f12, f30, f1, f5, dyn # perform operation
fnmsub.d f12, f30, f1, f5, rdn # perform operation
fnmsub.d f12, f30, f1, f5, rmm # perform operation
fnmsub.d f12, f30, f1, f5, rne # perform operation
fnmsub.d f12, f30, f1, f5, rtz # perform operation
fnmsub.d f12, f30, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f30, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f30, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f30, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f30, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f30, f1, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7fffffffffffffff)
li x21, 0x86f06361 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
li x3, 0x66b99380 # load x3 with 32 MSBs 0x0000000066b99380
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066b99380
sw x3, 0(x2) # store x3 (0x66b99380) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000066b99380 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
fnmsub.d f21, f5, f27, f9, dyn # perform operation
fnmsub.d f21, f5, f27, f9, rdn # perform operation
fnmsub.d f21, f5, f27, f9, rmm # perform operation
fnmsub.d f21, f5, f27, f9, rne # perform operation
fnmsub.d f21, f5, f27, f9, rtz # perform operation
fnmsub.d f21, f5, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f5, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f5, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f5, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f5, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f5, f27, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7ff0000000000001)
li x28, 0x1f099b68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
li x3, 0x1ef295b8 # load x3 with 32 MSBs 0x000000001ef295b8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ef295b8
sw x3, 0(x2) # store x3 (0x1ef295b8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000001ef295b8 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
fnmsub.d f28, f14, f31, f13, dyn # perform operation
fnmsub.d f28, f14, f31, f13, rdn # perform operation
fnmsub.d f28, f14, f31, f13, rmm # perform operation
fnmsub.d f28, f14, f31, f13, rne # perform operation
fnmsub.d f28, f14, f31, f13, rtz # perform operation
fnmsub.d f28, f14, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f14, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f14, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f14, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f14, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f14, f31, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7ff7ffffffffffff)
li x23, 0x4c09d70f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0008000000000000 from memory into f17
li x3, 0x34d3cab8 # load x3 with 32 MSBs 0x0000000034d3cab8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000034d3cab8
sw x3, 0(x2) # store x3 (0x34d3cab8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000034d3cab8 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
fnmsub.d f23, f17, f2, f19, dyn # perform operation
fnmsub.d f23, f17, f2, f19, rdn # perform operation
fnmsub.d f23, f17, f2, f19, rmm # perform operation
fnmsub.d f23, f17, f2, f19, rne # perform operation
fnmsub.d f23, f17, f2, f19, rtz # perform operation
fnmsub.d f23, f17, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f17, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f17, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f17, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f17, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f17, f2, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x5a392534a57711ad)
li x2, 0xafbd972f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
li x3, 0x57152d6e # load x3 with 32 MSBs 0x0000000057152d6e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000057152d6e
sw x3, 0(x2) # store x3 (0x57152d6e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000057152d6e from memory into f18
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
fnmsub.d f2, f12, f18, f27, dyn # perform operation
fnmsub.d f2, f12, f18, f27, rdn # perform operation
fnmsub.d f2, f12, f18, f27, rmm # perform operation
fnmsub.d f2, f12, f18, f27, rne # perform operation
fnmsub.d f2, f12, f18, f27, rtz # perform operation
fnmsub.d f2, f12, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f12, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f12, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f12, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f12, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f12, f18, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xa6e895993737426c)
li x31, 0x461f82b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
li x3, 0x9f688efd # load x3 with 32 MSBs 0x000000009f688efd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f688efd
sw x3, 0(x2) # store x3 (0x9f688efd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000009f688efd from memory into f29
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
fnmsub.d f31, f6, f29, f15, dyn # perform operation
fnmsub.d f31, f6, f29, f15, rdn # perform operation
fnmsub.d f31, f6, f29, f15, rmm # perform operation
fnmsub.d f31, f6, f29, f15, rne # perform operation
fnmsub.d f31, f6, f29, f15, rtz # perform operation
fnmsub.d f31, f6, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f6, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f6, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f6, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f6, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f6, f29, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x0)
li x25, 0xcaaed503 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
li x3, 0x7767e248 # load x3 with 32 MSBs 0x000000007767e248
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007767e248
sw x3, 0(x2) # store x3 (0x7767e248) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000007767e248 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
fnmsub.d f25, f15, f12, f1, dyn # perform operation
fnmsub.d f25, f15, f12, f1, rdn # perform operation
fnmsub.d f25, f15, f12, f1, rmm # perform operation
fnmsub.d f25, f15, f12, f1, rne # perform operation
fnmsub.d f25, f15, f12, f1, rtz # perform operation
fnmsub.d f25, f15, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f15, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f15, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f15, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f15, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f15, f12, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8000000000000000)
li x7, 0x276cba50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0xb8cc9d5a # load x3 with 32 MSBs 0x00000000b8cc9d5a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b8cc9d5a
sw x3, 0(x2) # store x3 (0xb8cc9d5a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000b8cc9d5a from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
fnmsub.d f7, f23, f1, f4, dyn # perform operation
fnmsub.d f7, f23, f1, f4, rdn # perform operation
fnmsub.d f7, f23, f1, f4, rmm # perform operation
fnmsub.d f7, f23, f1, f4, rne # perform operation
fnmsub.d f7, f23, f1, f4, rtz # perform operation
fnmsub.d f7, f23, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f23, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f23, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f23, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f23, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f23, f1, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x3ff0000000000000)
li x17, 0xbe24d8dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
li x3, 0x07cd7651 # load x3 with 32 MSBs 0x0000000007cd7651
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000007cd7651
sw x3, 0(x2) # store x3 (0x07cd7651) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000007cd7651 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
fnmsub.d f17, f19, f31, f22, dyn # perform operation
fnmsub.d f17, f19, f31, f22, rdn # perform operation
fnmsub.d f17, f19, f31, f22, rmm # perform operation
fnmsub.d f17, f19, f31, f22, rne # perform operation
fnmsub.d f17, f19, f31, f22, rtz # perform operation
fnmsub.d f17, f19, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f19, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f19, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f19, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f19, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f19, f31, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xbff0000000000000)
li x22, 0xc04f6ba4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
li x3, 0x84092bdb # load x3 with 32 MSBs 0x0000000084092bdb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084092bdb
sw x3, 0(x2) # store x3 (0x84092bdb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000084092bdb from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
fnmsub.d f22, f8, f24, f7, dyn # perform operation
fnmsub.d f22, f8, f24, f7, rdn # perform operation
fnmsub.d f22, f8, f24, f7, rmm # perform operation
fnmsub.d f22, f8, f24, f7, rne # perform operation
fnmsub.d f22, f8, f24, f7, rtz # perform operation
fnmsub.d f22, f8, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f8, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f8, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f8, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f8, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f8, f24, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x3ff8000000000000)
li x27, 0x9e63375d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
li x3, 0x42b3ef37 # load x3 with 32 MSBs 0x0000000042b3ef37
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042b3ef37
sw x3, 0(x2) # store x3 (0x42b3ef37) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000042b3ef37 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
fnmsub.d f27, f25, f30, f19, dyn # perform operation
fnmsub.d f27, f25, f30, f19, rdn # perform operation
fnmsub.d f27, f25, f30, f19, rmm # perform operation
fnmsub.d f27, f25, f30, f19, rne # perform operation
fnmsub.d f27, f25, f30, f19, rtz # perform operation
fnmsub.d f27, f25, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f25, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f25, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f25, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f25, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f25, f30, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xbff8000000000000)
li x20, 0x47f593da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
li x3, 0x31dec968 # load x3 with 32 MSBs 0x0000000031dec968
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031dec968
sw x3, 0(x2) # store x3 (0x31dec968) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000031dec968 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
fnmsub.d f20, f15, f26, f30, dyn # perform operation
fnmsub.d f20, f15, f26, f30, rdn # perform operation
fnmsub.d f20, f15, f26, f30, rmm # perform operation
fnmsub.d f20, f15, f26, f30, rne # perform operation
fnmsub.d f20, f15, f26, f30, rtz # perform operation
fnmsub.d f20, f15, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f15, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f15, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f15, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f15, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f15, f26, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x4000000000000000)
li x12, 0x13a26882 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
li x3, 0xaf7d42f2 # load x3 with 32 MSBs 0x00000000af7d42f2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af7d42f2
sw x3, 0(x2) # store x3 (0xaf7d42f2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000af7d42f2 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
fnmsub.d f12, f29, f19, f23, dyn # perform operation
fnmsub.d f12, f29, f19, f23, rdn # perform operation
fnmsub.d f12, f29, f19, f23, rmm # perform operation
fnmsub.d f12, f29, f19, f23, rne # perform operation
fnmsub.d f12, f29, f19, f23, rtz # perform operation
fnmsub.d f12, f29, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f29, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f29, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f29, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f29, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f29, f19, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xc000000000000000)
li x8, 0x21d30881 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
li x3, 0xea547c2b # load x3 with 32 MSBs 0x00000000ea547c2b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea547c2b
sw x3, 0(x2) # store x3 (0xea547c2b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000ea547c2b from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
fnmsub.d f8, f10, f7, f11, dyn # perform operation
fnmsub.d f8, f10, f7, f11, rdn # perform operation
fnmsub.d f8, f10, f7, f11, rmm # perform operation
fnmsub.d f8, f10, f7, f11, rne # perform operation
fnmsub.d f8, f10, f7, f11, rtz # perform operation
fnmsub.d f8, f10, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f10, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f10, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f10, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f10, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f10, f7, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x10000000000000)
li x9, 0xf5cf1ba7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
li x3, 0xa4151168 # load x3 with 32 MSBs 0x00000000a4151168
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a4151168
sw x3, 0(x2) # store x3 (0xa4151168) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000a4151168 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
fnmsub.d f9, f8, f30, f5, dyn # perform operation
fnmsub.d f9, f8, f30, f5, rdn # perform operation
fnmsub.d f9, f8, f30, f5, rmm # perform operation
fnmsub.d f9, f8, f30, f5, rne # perform operation
fnmsub.d f9, f8, f30, f5, rtz # perform operation
fnmsub.d f9, f8, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f8, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f8, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f8, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f8, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f8, f30, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8010000000000000)
li x29, 0xc1c646b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
li x3, 0xd1c749a1 # load x3 with 32 MSBs 0x00000000d1c749a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1c749a1
sw x3, 0(x2) # store x3 (0xd1c749a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000d1c749a1 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
fnmsub.d f29, f5, f25, f15, dyn # perform operation
fnmsub.d f29, f5, f25, f15, rdn # perform operation
fnmsub.d f29, f5, f25, f15, rmm # perform operation
fnmsub.d f29, f5, f25, f15, rne # perform operation
fnmsub.d f29, f5, f25, f15, rtz # perform operation
fnmsub.d f29, f5, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f5, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f5, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f5, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f5, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f5, f25, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7fefffffffffffff)
li x28, 0xb4e3c2ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
li x3, 0x0e28dc16 # load x3 with 32 MSBs 0x000000000e28dc16
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000e28dc16
sw x3, 0(x2) # store x3 (0x0e28dc16) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000000e28dc16 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
fnmsub.d f28, f12, f10, f8, dyn # perform operation
fnmsub.d f28, f12, f10, f8, rdn # perform operation
fnmsub.d f28, f12, f10, f8, rmm # perform operation
fnmsub.d f28, f12, f10, f8, rne # perform operation
fnmsub.d f28, f12, f10, f8, rtz # perform operation
fnmsub.d f28, f12, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f12, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f12, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f12, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f12, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f12, f10, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xffefffffffffffff)
li x21, 0x867a3da1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8008000000000000 from memory into f24
li x3, 0x059a76cb # load x3 with 32 MSBs 0x00000000059a76cb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000059a76cb
sw x3, 0(x2) # store x3 (0x059a76cb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000059a76cb from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
fnmsub.d f21, f24, f2, f19, dyn # perform operation
fnmsub.d f21, f24, f2, f19, rdn # perform operation
fnmsub.d f21, f24, f2, f19, rmm # perform operation
fnmsub.d f21, f24, f2, f19, rne # perform operation
fnmsub.d f21, f24, f2, f19, rtz # perform operation
fnmsub.d f21, f24, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f24, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f24, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f24, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f24, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f24, f2, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xfffffffffffff)
li x2, 0x8c79f193 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
li x3, 0xe45a8772 # load x3 with 32 MSBs 0x00000000e45a8772
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e45a8772
sw x3, 0(x2) # store x3 (0xe45a8772) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000e45a8772 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
fnmsub.d f2, f25, f17, f6, dyn # perform operation
fnmsub.d f2, f25, f17, f6, rdn # perform operation
fnmsub.d f2, f25, f17, f6, rmm # perform operation
fnmsub.d f2, f25, f17, f6, rne # perform operation
fnmsub.d f2, f25, f17, f6, rtz # perform operation
fnmsub.d f2, f25, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f25, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f25, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f25, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f25, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f25, f17, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x800fffffffffffff)
li x28, 0x49f0b44d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
li x3, 0x162d03ea # load x3 with 32 MSBs 0x00000000162d03ea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000162d03ea
sw x3, 0(x2) # store x3 (0x162d03ea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000162d03ea from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
fnmsub.d f28, f8, f20, f19, dyn # perform operation
fnmsub.d f28, f8, f20, f19, rdn # perform operation
fnmsub.d f28, f8, f20, f19, rmm # perform operation
fnmsub.d f28, f8, f20, f19, rne # perform operation
fnmsub.d f28, f8, f20, f19, rtz # perform operation
fnmsub.d f28, f8, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f8, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f8, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f8, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f8, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f8, f20, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8000000000000)
li x7, 0x37be8007 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
li x3, 0x8b0eef66 # load x3 with 32 MSBs 0x000000008b0eef66
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008b0eef66
sw x3, 0(x2) # store x3 (0x8b0eef66) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000008b0eef66 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
fnmsub.d f7, f26, f5, f19, dyn # perform operation
fnmsub.d f7, f26, f5, f19, rdn # perform operation
fnmsub.d f7, f26, f5, f19, rmm # perform operation
fnmsub.d f7, f26, f5, f19, rne # perform operation
fnmsub.d f7, f26, f5, f19, rtz # perform operation
fnmsub.d f7, f26, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f26, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f26, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f26, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f26, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f26, f5, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8008000000000000)
li x3, 0x4f351faa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
li x3, 0xbea9da06 # load x3 with 32 MSBs 0x00000000bea9da06
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bea9da06
sw x3, 0(x2) # store x3 (0xbea9da06) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000bea9da06 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
fnmsub.d f3, f31, f8, f14, dyn # perform operation
fnmsub.d f3, f31, f8, f14, rdn # perform operation
fnmsub.d f3, f31, f8, f14, rmm # perform operation
fnmsub.d f3, f31, f8, f14, rne # perform operation
fnmsub.d f3, f31, f8, f14, rtz # perform operation
fnmsub.d f3, f31, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f31, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f31, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f31, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f31, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f31, f8, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x1)
li x23, 0xbf2c4e41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
li x3, 0xc1075158 # load x3 with 32 MSBs 0x00000000c1075158
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1075158
sw x3, 0(x2) # store x3 (0xc1075158) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000c1075158 from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
fnmsub.d f23, f30, f28, f9, dyn # perform operation
fnmsub.d f23, f30, f28, f9, rdn # perform operation
fnmsub.d f23, f30, f28, f9, rmm # perform operation
fnmsub.d f23, f30, f28, f9, rne # perform operation
fnmsub.d f23, f30, f28, f9, rtz # perform operation
fnmsub.d f23, f30, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f30, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f30, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f30, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f30, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f30, f28, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8000000000000001)
li x4, 0x8a929b64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
li x3, 0xda635138 # load x3 with 32 MSBs 0x00000000da635138
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da635138
sw x3, 0(x2) # store x3 (0xda635138) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000da635138 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000001 from memory into f10
fnmsub.d f4, f19, f29, f10, dyn # perform operation
fnmsub.d f4, f19, f29, f10, rdn # perform operation
fnmsub.d f4, f19, f29, f10, rmm # perform operation
fnmsub.d f4, f19, f29, f10, rne # perform operation
fnmsub.d f4, f19, f29, f10, rtz # perform operation
fnmsub.d f4, f19, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f19, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f19, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f19, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f19, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f19, f29, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7ff0000000000000)
li x1, 0x3e9a94b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
li x3, 0x6eeb92fb # load x3 with 32 MSBs 0x000000006eeb92fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006eeb92fb
sw x3, 0(x2) # store x3 (0x6eeb92fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000006eeb92fb from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
fnmsub.d f1, f7, f26, f4, dyn # perform operation
fnmsub.d f1, f7, f26, f4, rdn # perform operation
fnmsub.d f1, f7, f26, f4, rmm # perform operation
fnmsub.d f1, f7, f26, f4, rne # perform operation
fnmsub.d f1, f7, f26, f4, rtz # perform operation
fnmsub.d f1, f7, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f7, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f7, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f7, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f7, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f7, f26, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xfff0000000000000)
li x14, 0x81be0dd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
li x3, 0xde029801 # load x3 with 32 MSBs 0x00000000de029801
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000de029801
sw x3, 0(x2) # store x3 (0xde029801) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000de029801 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
fnmsub.d f14, f1, f24, f29, dyn # perform operation
fnmsub.d f14, f1, f24, f29, rdn # perform operation
fnmsub.d f14, f1, f24, f29, rmm # perform operation
fnmsub.d f14, f1, f24, f29, rne # perform operation
fnmsub.d f14, f1, f24, f29, rtz # perform operation
fnmsub.d f14, f1, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f1, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f1, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f1, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f1, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f1, f24, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7ff8000000000000)
li x8, 0x0c17f5a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
li x3, 0xef70960b # load x3 with 32 MSBs 0x00000000ef70960b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef70960b
sw x3, 0(x2) # store x3 (0xef70960b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000ef70960b from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
fnmsub.d f8, f18, f9, f14, dyn # perform operation
fnmsub.d f8, f18, f9, f14, rdn # perform operation
fnmsub.d f8, f18, f9, f14, rmm # perform operation
fnmsub.d f8, f18, f9, f14, rne # perform operation
fnmsub.d f8, f18, f9, f14, rtz # perform operation
fnmsub.d f8, f18, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f18, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f18, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f18, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f18, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f18, f9, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7fffffffffffffff)
li x26, 0x0e2d29d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
li x3, 0xdeb40c2f # load x3 with 32 MSBs 0x00000000deb40c2f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000deb40c2f
sw x3, 0(x2) # store x3 (0xdeb40c2f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000deb40c2f from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fffffffffffffff from memory into f13
fnmsub.d f26, f10, f4, f13, dyn # perform operation
fnmsub.d f26, f10, f4, f13, rdn # perform operation
fnmsub.d f26, f10, f4, f13, rmm # perform operation
fnmsub.d f26, f10, f4, f13, rne # perform operation
fnmsub.d f26, f10, f4, f13, rtz # perform operation
fnmsub.d f26, f10, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f10, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f10, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f10, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f10, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f10, f4, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7ff0000000000001)
li x10, 0x69fabdc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
li x3, 0x48738032 # load x3 with 32 MSBs 0x0000000048738032
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000048738032
sw x3, 0(x2) # store x3 (0x48738032) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000048738032 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
fnmsub.d f10, f3, f13, f23, dyn # perform operation
fnmsub.d f10, f3, f13, f23, rdn # perform operation
fnmsub.d f10, f3, f13, f23, rmm # perform operation
fnmsub.d f10, f3, f13, f23, rne # perform operation
fnmsub.d f10, f3, f13, f23, rtz # perform operation
fnmsub.d f10, f3, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f3, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f3, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f3, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f3, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f3, f13, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7ff7ffffffffffff)
li x14, 0xb07d4428 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
li x3, 0x19ceaeea # load x3 with 32 MSBs 0x0000000019ceaeea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000019ceaeea
sw x3, 0(x2) # store x3 (0x19ceaeea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000019ceaeea from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
fnmsub.d f14, f26, f22, f19, dyn # perform operation
fnmsub.d f14, f26, f22, f19, rdn # perform operation
fnmsub.d f14, f26, f22, f19, rmm # perform operation
fnmsub.d f14, f26, f22, f19, rne # perform operation
fnmsub.d f14, f26, f22, f19, rtz # perform operation
fnmsub.d f14, f26, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f26, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f26, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f26, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f26, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f26, f22, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x5a392534a57711ad)
li x8, 0x7a06d012 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
li x3, 0x8b2bb5c2 # load x3 with 32 MSBs 0x000000008b2bb5c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008b2bb5c2
sw x3, 0(x2) # store x3 (0x8b2bb5c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000008b2bb5c2 from memory into f17
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
fnmsub.d f8, f3, f17, f23, dyn # perform operation
fnmsub.d f8, f3, f17, f23, rdn # perform operation
fnmsub.d f8, f3, f17, f23, rmm # perform operation
fnmsub.d f8, f3, f17, f23, rne # perform operation
fnmsub.d f8, f3, f17, f23, rtz # perform operation
fnmsub.d f8, f3, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f3, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f3, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f3, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f3, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f3, f17, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xa6e895993737426c)
li x21, 0x95dba878 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
li x3, 0x247a269b # load x3 with 32 MSBs 0x00000000247a269b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000247a269b
sw x3, 0(x2) # store x3 (0x247a269b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000247a269b from memory into f20
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
fnmsub.d f21, f10, f20, f29, dyn # perform operation
fnmsub.d f21, f10, f20, f29, rdn # perform operation
fnmsub.d f21, f10, f20, f29, rmm # perform operation
fnmsub.d f21, f10, f20, f29, rne # perform operation
fnmsub.d f21, f10, f20, f29, rtz # perform operation
fnmsub.d f21, f10, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f10, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f10, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f10, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f10, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f10, f20, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
li x11, 0x41318877 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
li x3, 0xe034a735 # load x3 with 32 MSBs 0x00000000e034a735
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e034a735
sw x3, 0(x2) # store x3 (0xe034a735) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e034a735 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
fnmsub.d f11, f16, f19, f31, dyn # perform operation
fnmsub.d f11, f16, f19, f31, rdn # perform operation
fnmsub.d f11, f16, f19, f31, rmm # perform operation
fnmsub.d f11, f16, f19, f31, rne # perform operation
fnmsub.d f11, f16, f19, f31, rtz # perform operation
fnmsub.d f11, f16, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f16, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f16, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f16, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f16, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f16, f19, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8000000000000000)
li x20, 0x4aa3303c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
li x3, 0x4f83a4a7 # load x3 with 32 MSBs 0x000000004f83a4a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f83a4a7
sw x3, 0(x2) # store x3 (0x4f83a4a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000004f83a4a7 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000000 from memory into f15
fnmsub.d f20, f13, f25, f15, dyn # perform operation
fnmsub.d f20, f13, f25, f15, rdn # perform operation
fnmsub.d f20, f13, f25, f15, rmm # perform operation
fnmsub.d f20, f13, f25, f15, rne # perform operation
fnmsub.d f20, f13, f25, f15, rtz # perform operation
fnmsub.d f20, f13, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f13, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f13, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f13, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f13, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f13, f25, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3ff0000000000000)
li x8, 0xbf776ae5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
li x3, 0x318babd4 # load x3 with 32 MSBs 0x00000000318babd4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000318babd4
sw x3, 0(x2) # store x3 (0x318babd4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000318babd4 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
fnmsub.d f8, f23, f3, f22, dyn # perform operation
fnmsub.d f8, f23, f3, f22, rdn # perform operation
fnmsub.d f8, f23, f3, f22, rmm # perform operation
fnmsub.d f8, f23, f3, f22, rne # perform operation
fnmsub.d f8, f23, f3, f22, rtz # perform operation
fnmsub.d f8, f23, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f23, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f23, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f23, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f23, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f23, f3, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbff0000000000000)
li x24, 0xf8a326dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
li x3, 0x56281cb9 # load x3 with 32 MSBs 0x0000000056281cb9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000056281cb9
sw x3, 0(x2) # store x3 (0x56281cb9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000056281cb9 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
fnmsub.d f24, f3, f11, f2, dyn # perform operation
fnmsub.d f24, f3, f11, f2, rdn # perform operation
fnmsub.d f24, f3, f11, f2, rmm # perform operation
fnmsub.d f24, f3, f11, f2, rne # perform operation
fnmsub.d f24, f3, f11, f2, rtz # perform operation
fnmsub.d f24, f3, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f3, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f3, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f3, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f3, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f3, f11, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3ff8000000000000)
li x20, 0xe9eb3243 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
li x3, 0xe8287c58 # load x3 with 32 MSBs 0x00000000e8287c58
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8287c58
sw x3, 0(x2) # store x3 (0xe8287c58) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000e8287c58 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
fnmsub.d f20, f28, f1, f2, dyn # perform operation
fnmsub.d f20, f28, f1, f2, rdn # perform operation
fnmsub.d f20, f28, f1, f2, rmm # perform operation
fnmsub.d f20, f28, f1, f2, rne # perform operation
fnmsub.d f20, f28, f1, f2, rtz # perform operation
fnmsub.d f20, f28, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f28, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f28, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f28, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f28, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f28, f1, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbff8000000000000)
li x22, 0x7fcf7040 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
li x3, 0x4f1e2e2f # load x3 with 32 MSBs 0x000000004f1e2e2f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f1e2e2f
sw x3, 0(x2) # store x3 (0x4f1e2e2f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000004f1e2e2f from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
fnmsub.d f22, f20, f10, f9, dyn # perform operation
fnmsub.d f22, f20, f10, f9, rdn # perform operation
fnmsub.d f22, f20, f10, f9, rmm # perform operation
fnmsub.d f22, f20, f10, f9, rne # perform operation
fnmsub.d f22, f20, f10, f9, rtz # perform operation
fnmsub.d f22, f20, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f20, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f20, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f20, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f20, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f20, f10, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x4000000000000000)
li x4, 0x149beac3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
li x3, 0x3ad26538 # load x3 with 32 MSBs 0x000000003ad26538
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003ad26538
sw x3, 0(x2) # store x3 (0x3ad26538) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000003ad26538 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
fnmsub.d f4, f6, f23, f19, dyn # perform operation
fnmsub.d f4, f6, f23, f19, rdn # perform operation
fnmsub.d f4, f6, f23, f19, rmm # perform operation
fnmsub.d f4, f6, f23, f19, rne # perform operation
fnmsub.d f4, f6, f23, f19, rtz # perform operation
fnmsub.d f4, f6, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f6, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f6, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f6, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f6, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f6, f23, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc000000000000000)
li x31, 0x849caca6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000001 from memory into f5
li x3, 0xb6896249 # load x3 with 32 MSBs 0x00000000b6896249
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b6896249
sw x3, 0(x2) # store x3 (0xb6896249) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000b6896249 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
fnmsub.d f31, f5, f26, f7, dyn # perform operation
fnmsub.d f31, f5, f26, f7, rdn # perform operation
fnmsub.d f31, f5, f26, f7, rmm # perform operation
fnmsub.d f31, f5, f26, f7, rne # perform operation
fnmsub.d f31, f5, f26, f7, rtz # perform operation
fnmsub.d f31, f5, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f5, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f5, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f5, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f5, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f5, f26, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x10000000000000)
li x23, 0x87295714 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000001 from memory into f15
li x3, 0x387b9991 # load x3 with 32 MSBs 0x00000000387b9991
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000387b9991
sw x3, 0(x2) # store x3 (0x387b9991) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000387b9991 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
fnmsub.d f23, f15, f28, f1, dyn # perform operation
fnmsub.d f23, f15, f28, f1, rdn # perform operation
fnmsub.d f23, f15, f28, f1, rmm # perform operation
fnmsub.d f23, f15, f28, f1, rne # perform operation
fnmsub.d f23, f15, f28, f1, rtz # perform operation
fnmsub.d f23, f15, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f15, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f15, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f15, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f15, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f15, f28, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8010000000000000)
li x11, 0x770fda36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
li x3, 0x4f644b75 # load x3 with 32 MSBs 0x000000004f644b75
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f644b75
sw x3, 0(x2) # store x3 (0x4f644b75) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000004f644b75 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
fnmsub.d f11, f10, f18, f21, dyn # perform operation
fnmsub.d f11, f10, f18, f21, rdn # perform operation
fnmsub.d f11, f10, f18, f21, rmm # perform operation
fnmsub.d f11, f10, f18, f21, rne # perform operation
fnmsub.d f11, f10, f18, f21, rtz # perform operation
fnmsub.d f11, f10, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f10, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f10, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f10, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f10, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f10, f18, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fefffffffffffff)
li x22, 0x8c06aefb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
li x3, 0x99ac4b7f # load x3 with 32 MSBs 0x0000000099ac4b7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000099ac4b7f
sw x3, 0(x2) # store x3 (0x99ac4b7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000099ac4b7f from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
fnmsub.d f22, f17, f21, f30, dyn # perform operation
fnmsub.d f22, f17, f21, f30, rdn # perform operation
fnmsub.d f22, f17, f21, f30, rmm # perform operation
fnmsub.d f22, f17, f21, f30, rne # perform operation
fnmsub.d f22, f17, f21, f30, rtz # perform operation
fnmsub.d f22, f17, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f17, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f17, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f17, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f17, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f17, f21, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffefffffffffffff)
li x6, 0x59806eb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
li x3, 0xdf069483 # load x3 with 32 MSBs 0x00000000df069483
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000df069483
sw x3, 0(x2) # store x3 (0xdf069483) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000df069483 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
fnmsub.d f6, f1, f7, f23, dyn # perform operation
fnmsub.d f6, f1, f7, f23, rdn # perform operation
fnmsub.d f6, f1, f7, f23, rmm # perform operation
fnmsub.d f6, f1, f7, f23, rne # perform operation
fnmsub.d f6, f1, f7, f23, rtz # perform operation
fnmsub.d f6, f1, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f1, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f1, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f1, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f1, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f1, f7, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfffffffffffff)
li x11, 0x3caa70c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0x35807f58 # load x3 with 32 MSBs 0x0000000035807f58
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035807f58
sw x3, 0(x2) # store x3 (0x35807f58) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000035807f58 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
fnmsub.d f11, f24, f13, f15, dyn # perform operation
fnmsub.d f11, f24, f13, f15, rdn # perform operation
fnmsub.d f11, f24, f13, f15, rmm # perform operation
fnmsub.d f11, f24, f13, f15, rne # perform operation
fnmsub.d f11, f24, f13, f15, rtz # perform operation
fnmsub.d f11, f24, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f24, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f24, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f24, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f24, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f24, f13, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800fffffffffffff)
li x8, 0x37fea578 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0x61d5555d # load x3 with 32 MSBs 0x0000000061d5555d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000061d5555d
sw x3, 0(x2) # store x3 (0x61d5555d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000061d5555d from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
fnmsub.d f8, f24, f11, f20, dyn # perform operation
fnmsub.d f8, f24, f11, f20, rdn # perform operation
fnmsub.d f8, f24, f11, f20, rmm # perform operation
fnmsub.d f8, f24, f11, f20, rne # perform operation
fnmsub.d f8, f24, f11, f20, rtz # perform operation
fnmsub.d f8, f24, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f24, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f24, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f24, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f24, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f24, f11, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8000000000000)
li x24, 0x86b08eba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
li x3, 0x221c4271 # load x3 with 32 MSBs 0x00000000221c4271
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000221c4271
sw x3, 0(x2) # store x3 (0x221c4271) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000221c4271 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
fnmsub.d f24, f1, f7, f5, dyn # perform operation
fnmsub.d f24, f1, f7, f5, rdn # perform operation
fnmsub.d f24, f1, f7, f5, rmm # perform operation
fnmsub.d f24, f1, f7, f5, rne # perform operation
fnmsub.d f24, f1, f7, f5, rtz # perform operation
fnmsub.d f24, f1, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f1, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f1, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f1, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f1, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f1, f7, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8008000000000000)
li x10, 0x57f2201b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
li x3, 0x78e61f77 # load x3 with 32 MSBs 0x0000000078e61f77
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000078e61f77
sw x3, 0(x2) # store x3 (0x78e61f77) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000078e61f77 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
fnmsub.d f10, f25, f14, f15, dyn # perform operation
fnmsub.d f10, f25, f14, f15, rdn # perform operation
fnmsub.d f10, f25, f14, f15, rmm # perform operation
fnmsub.d f10, f25, f14, f15, rne # perform operation
fnmsub.d f10, f25, f14, f15, rtz # perform operation
fnmsub.d f10, f25, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f25, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f25, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f25, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f25, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f25, f14, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
li x24, 0x09c088ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
li x3, 0x9be8381a # load x3 with 32 MSBs 0x000000009be8381a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009be8381a
sw x3, 0(x2) # store x3 (0x9be8381a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000009be8381a from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
fnmsub.d f24, f22, f29, f26, dyn # perform operation
fnmsub.d f24, f22, f29, f26, rdn # perform operation
fnmsub.d f24, f22, f29, f26, rmm # perform operation
fnmsub.d f24, f22, f29, f26, rne # perform operation
fnmsub.d f24, f22, f29, f26, rtz # perform operation
fnmsub.d f24, f22, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f22, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f22, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f22, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f22, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f22, f29, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8000000000000001)
li x2, 0x67377b49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
li x3, 0x07131aa4 # load x3 with 32 MSBs 0x0000000007131aa4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000007131aa4
sw x3, 0(x2) # store x3 (0x07131aa4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000007131aa4 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000001 from memory into f10
fnmsub.d f2, f25, f12, f10, dyn # perform operation
fnmsub.d f2, f25, f12, f10, rdn # perform operation
fnmsub.d f2, f25, f12, f10, rmm # perform operation
fnmsub.d f2, f25, f12, f10, rne # perform operation
fnmsub.d f2, f25, f12, f10, rtz # perform operation
fnmsub.d f2, f25, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f25, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f25, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f25, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f25, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f25, f12, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ff0000000000000)
li x13, 0xc8f3eee7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0x349b7955 # load x3 with 32 MSBs 0x00000000349b7955
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000349b7955
sw x3, 0(x2) # store x3 (0x349b7955) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000349b7955 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
fnmsub.d f13, f24, f3, f18, dyn # perform operation
fnmsub.d f13, f24, f3, f18, rdn # perform operation
fnmsub.d f13, f24, f3, f18, rmm # perform operation
fnmsub.d f13, f24, f3, f18, rne # perform operation
fnmsub.d f13, f24, f3, f18, rtz # perform operation
fnmsub.d f13, f24, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f24, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f24, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f24, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f24, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f24, f3, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfff0000000000000)
li x26, 0xbc0a1b4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
li x3, 0xd435a59d # load x3 with 32 MSBs 0x00000000d435a59d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d435a59d
sw x3, 0(x2) # store x3 (0xd435a59d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000d435a59d from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
fnmsub.d f26, f8, f29, f27, dyn # perform operation
fnmsub.d f26, f8, f29, f27, rdn # perform operation
fnmsub.d f26, f8, f29, f27, rmm # perform operation
fnmsub.d f26, f8, f29, f27, rne # perform operation
fnmsub.d f26, f8, f29, f27, rtz # perform operation
fnmsub.d f26, f8, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f8, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f8, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f8, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f8, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f8, f29, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ff8000000000000)
li x10, 0xe2d3a8e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
li x3, 0xf0027bb7 # load x3 with 32 MSBs 0x00000000f0027bb7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f0027bb7
sw x3, 0(x2) # store x3 (0xf0027bb7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000f0027bb7 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
fnmsub.d f10, f29, f23, f12, dyn # perform operation
fnmsub.d f10, f29, f23, f12, rdn # perform operation
fnmsub.d f10, f29, f23, f12, rmm # perform operation
fnmsub.d f10, f29, f23, f12, rne # perform operation
fnmsub.d f10, f29, f23, f12, rtz # perform operation
fnmsub.d f10, f29, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f29, f23, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffffffffffff)
li x16, 0x9cf79ec9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
li x3, 0x76c27281 # load x3 with 32 MSBs 0x0000000076c27281
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000076c27281
sw x3, 0(x2) # store x3 (0x76c27281) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000076c27281 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
fnmsub.d f16, f6, f7, f11, dyn # perform operation
fnmsub.d f16, f6, f7, f11, rdn # perform operation
fnmsub.d f16, f6, f7, f11, rmm # perform operation
fnmsub.d f16, f6, f7, f11, rne # perform operation
fnmsub.d f16, f6, f7, f11, rtz # perform operation
fnmsub.d f16, f6, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f6, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f6, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f6, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f6, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f6, f7, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ff0000000000001)
li x12, 0x7744082b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
li x3, 0x97f59904 # load x3 with 32 MSBs 0x0000000097f59904
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000097f59904
sw x3, 0(x2) # store x3 (0x97f59904) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000097f59904 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
fnmsub.d f12, f1, f13, f26, dyn # perform operation
fnmsub.d f12, f1, f13, f26, rdn # perform operation
fnmsub.d f12, f1, f13, f26, rmm # perform operation
fnmsub.d f12, f1, f13, f26, rne # perform operation
fnmsub.d f12, f1, f13, f26, rtz # perform operation
fnmsub.d f12, f1, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f1, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f1, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f1, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f1, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f1, f13, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ff7ffffffffffff)
li x6, 0xd1ae18d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
li x3, 0x9af68cc2 # load x3 with 32 MSBs 0x000000009af68cc2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009af68cc2
sw x3, 0(x2) # store x3 (0x9af68cc2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000009af68cc2 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
fnmsub.d f6, f18, f31, f10, dyn # perform operation
fnmsub.d f6, f18, f31, f10, rdn # perform operation
fnmsub.d f6, f18, f31, f10, rmm # perform operation
fnmsub.d f6, f18, f31, f10, rne # perform operation
fnmsub.d f6, f18, f31, f10, rtz # perform operation
fnmsub.d f6, f18, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f18, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f18, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f18, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f18, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f18, f31, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x5a392534a57711ad)
li x26, 0x25482dd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
li x3, 0x5e95c050 # load x3 with 32 MSBs 0x000000005e95c050
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e95c050
sw x3, 0(x2) # store x3 (0x5e95c050) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000005e95c050 from memory into f5
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
fnmsub.d f26, f23, f5, f19, dyn # perform operation
fnmsub.d f26, f23, f5, f19, rdn # perform operation
fnmsub.d f26, f23, f5, f19, rmm # perform operation
fnmsub.d f26, f23, f5, f19, rne # perform operation
fnmsub.d f26, f23, f5, f19, rtz # perform operation
fnmsub.d f26, f23, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f23, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f23, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f23, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f23, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f23, f5, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xa6e895993737426c)
li x6, 0xda991706 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
li x3, 0x6c52c716 # load x3 with 32 MSBs 0x000000006c52c716
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006c52c716
sw x3, 0(x2) # store x3 (0x6c52c716) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006c52c716 from memory into f18
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xa6e895993737426c from memory into f23
fnmsub.d f6, f9, f18, f23, dyn # perform operation
fnmsub.d f6, f9, f18, f23, rdn # perform operation
fnmsub.d f6, f9, f18, f23, rmm # perform operation
fnmsub.d f6, f9, f18, f23, rne # perform operation
fnmsub.d f6, f9, f18, f23, rtz # perform operation
fnmsub.d f6, f9, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f9, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f9, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f9, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f9, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f9, f18, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x0)
li x24, 0xe4c94b8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
li x3, 0xf2f25077 # load x3 with 32 MSBs 0x00000000f2f25077
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2f25077
sw x3, 0(x2) # store x3 (0xf2f25077) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000f2f25077 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
fnmsub.d f24, f11, f31, f26, dyn # perform operation
fnmsub.d f24, f11, f31, f26, rdn # perform operation
fnmsub.d f24, f11, f31, f26, rmm # perform operation
fnmsub.d f24, f11, f31, f26, rne # perform operation
fnmsub.d f24, f11, f31, f26, rtz # perform operation
fnmsub.d f24, f11, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f11, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f11, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f11, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f11, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f11, f31, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8000000000000000)
li x20, 0xb9a64e99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
li x3, 0xb2fc70d8 # load x3 with 32 MSBs 0x00000000b2fc70d8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2fc70d8
sw x3, 0(x2) # store x3 (0xb2fc70d8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000b2fc70d8 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
fnmsub.d f20, f18, f27, f26, dyn # perform operation
fnmsub.d f20, f18, f27, f26, rdn # perform operation
fnmsub.d f20, f18, f27, f26, rmm # perform operation
fnmsub.d f20, f18, f27, f26, rne # perform operation
fnmsub.d f20, f18, f27, f26, rtz # perform operation
fnmsub.d f20, f18, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f18, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f18, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f18, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f18, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f18, f27, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x3ff0000000000000)
li x20, 0xf8b6b807 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x07ec6815 # load x3 with 32 MSBs 0x0000000007ec6815
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000007ec6815
sw x3, 0(x2) # store x3 (0x07ec6815) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000007ec6815 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
fnmsub.d f20, f19, f14, f16, dyn # perform operation
fnmsub.d f20, f19, f14, f16, rdn # perform operation
fnmsub.d f20, f19, f14, f16, rmm # perform operation
fnmsub.d f20, f19, f14, f16, rne # perform operation
fnmsub.d f20, f19, f14, f16, rtz # perform operation
fnmsub.d f20, f19, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f19, f14, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xbff0000000000000)
li x23, 0x03f5bd49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
li x3, 0x5a8cdcd4 # load x3 with 32 MSBs 0x000000005a8cdcd4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005a8cdcd4
sw x3, 0(x2) # store x3 (0x5a8cdcd4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000005a8cdcd4 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
fnmsub.d f23, f3, f22, f31, dyn # perform operation
fnmsub.d f23, f3, f22, f31, rdn # perform operation
fnmsub.d f23, f3, f22, f31, rmm # perform operation
fnmsub.d f23, f3, f22, f31, rne # perform operation
fnmsub.d f23, f3, f22, f31, rtz # perform operation
fnmsub.d f23, f3, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f3, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f3, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f3, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f3, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f3, f22, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x3ff8000000000000)
li x9, 0xf5f593bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
li x3, 0x3a5b3352 # load x3 with 32 MSBs 0x000000003a5b3352
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003a5b3352
sw x3, 0(x2) # store x3 (0x3a5b3352) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000003a5b3352 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
fnmsub.d f9, f24, f12, f10, dyn # perform operation
fnmsub.d f9, f24, f12, f10, rdn # perform operation
fnmsub.d f9, f24, f12, f10, rmm # perform operation
fnmsub.d f9, f24, f12, f10, rne # perform operation
fnmsub.d f9, f24, f12, f10, rtz # perform operation
fnmsub.d f9, f24, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f24, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f24, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f24, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f24, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f24, f12, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xbff8000000000000)
li x4, 0x063dc700 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
li x3, 0xbe8823fe # load x3 with 32 MSBs 0x00000000be8823fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000be8823fe
sw x3, 0(x2) # store x3 (0xbe8823fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000be8823fe from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
fnmsub.d f4, f18, f17, f19, dyn # perform operation
fnmsub.d f4, f18, f17, f19, rdn # perform operation
fnmsub.d f4, f18, f17, f19, rmm # perform operation
fnmsub.d f4, f18, f17, f19, rne # perform operation
fnmsub.d f4, f18, f17, f19, rtz # perform operation
fnmsub.d f4, f18, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f18, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f18, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f18, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f18, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f18, f17, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x4000000000000000)
li x7, 0x1f57de42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
li x3, 0xb8dfd2aa # load x3 with 32 MSBs 0x00000000b8dfd2aa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b8dfd2aa
sw x3, 0(x2) # store x3 (0xb8dfd2aa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000b8dfd2aa from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
fnmsub.d f7, f26, f30, f1, dyn # perform operation
fnmsub.d f7, f26, f30, f1, rdn # perform operation
fnmsub.d f7, f26, f30, f1, rmm # perform operation
fnmsub.d f7, f26, f30, f1, rne # perform operation
fnmsub.d f7, f26, f30, f1, rtz # perform operation
fnmsub.d f7, f26, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f26, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f26, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f26, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f26, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f26, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xc000000000000000)
li x28, 0xbba5afae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
li x3, 0xba03f8af # load x3 with 32 MSBs 0x00000000ba03f8af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ba03f8af
sw x3, 0(x2) # store x3 (0xba03f8af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000ba03f8af from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
fnmsub.d f28, f20, f26, f16, dyn # perform operation
fnmsub.d f28, f20, f26, f16, rdn # perform operation
fnmsub.d f28, f20, f26, f16, rmm # perform operation
fnmsub.d f28, f20, f26, f16, rne # perform operation
fnmsub.d f28, f20, f26, f16, rtz # perform operation
fnmsub.d f28, f20, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f20, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f20, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f20, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f20, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f20, f26, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x10000000000000)
li x26, 0x6e798347 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
li x3, 0x7cdcc159 # load x3 with 32 MSBs 0x000000007cdcc159
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007cdcc159
sw x3, 0(x2) # store x3 (0x7cdcc159) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000007cdcc159 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
fnmsub.d f26, f15, f4, f27, dyn # perform operation
fnmsub.d f26, f15, f4, f27, rdn # perform operation
fnmsub.d f26, f15, f4, f27, rmm # perform operation
fnmsub.d f26, f15, f4, f27, rne # perform operation
fnmsub.d f26, f15, f4, f27, rtz # perform operation
fnmsub.d f26, f15, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f15, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f15, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f15, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f15, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f15, f4, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8010000000000000)
li x16, 0x114b6668 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x9821631b # load x3 with 32 MSBs 0x000000009821631b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009821631b
sw x3, 0(x2) # store x3 (0x9821631b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000009821631b from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
fnmsub.d f16, f19, f4, f18, dyn # perform operation
fnmsub.d f16, f19, f4, f18, rdn # perform operation
fnmsub.d f16, f19, f4, f18, rmm # perform operation
fnmsub.d f16, f19, f4, f18, rne # perform operation
fnmsub.d f16, f19, f4, f18, rtz # perform operation
fnmsub.d f16, f19, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f19, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f19, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f19, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f19, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f19, f4, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7fefffffffffffff)
li x1, 0xa9f48afb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
li x3, 0x0a0e3bf6 # load x3 with 32 MSBs 0x000000000a0e3bf6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000a0e3bf6
sw x3, 0(x2) # store x3 (0x0a0e3bf6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000000a0e3bf6 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
fnmsub.d f1, f13, f5, f7, dyn # perform operation
fnmsub.d f1, f13, f5, f7, rdn # perform operation
fnmsub.d f1, f13, f5, f7, rmm # perform operation
fnmsub.d f1, f13, f5, f7, rne # perform operation
fnmsub.d f1, f13, f5, f7, rtz # perform operation
fnmsub.d f1, f13, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f13, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f13, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f13, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f13, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f13, f5, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xffefffffffffffff)
li x2, 0xf095f99c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
li x3, 0xbaa45652 # load x3 with 32 MSBs 0x00000000baa45652
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000baa45652
sw x3, 0(x2) # store x3 (0xbaa45652) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000baa45652 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
fnmsub.d f2, f18, f23, f5, dyn # perform operation
fnmsub.d f2, f18, f23, f5, rdn # perform operation
fnmsub.d f2, f18, f23, f5, rmm # perform operation
fnmsub.d f2, f18, f23, f5, rne # perform operation
fnmsub.d f2, f18, f23, f5, rtz # perform operation
fnmsub.d f2, f18, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f18, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f18, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f18, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f18, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f18, f23, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xfffffffffffff)
li x10, 0x0c27e34f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
li x3, 0x6fba6cde # load x3 with 32 MSBs 0x000000006fba6cde
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006fba6cde
sw x3, 0(x2) # store x3 (0x6fba6cde) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000006fba6cde from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
fnmsub.d f10, f9, f1, f18, dyn # perform operation
fnmsub.d f10, f9, f1, f18, rdn # perform operation
fnmsub.d f10, f9, f1, f18, rmm # perform operation
fnmsub.d f10, f9, f1, f18, rne # perform operation
fnmsub.d f10, f9, f1, f18, rtz # perform operation
fnmsub.d f10, f9, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f9, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f9, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f9, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f9, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f9, f1, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x800fffffffffffff)
li x14, 0x2ffcc14d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
li x3, 0x9670eaae # load x3 with 32 MSBs 0x000000009670eaae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009670eaae
sw x3, 0(x2) # store x3 (0x9670eaae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000009670eaae from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
fnmsub.d f14, f1, f18, f25, dyn # perform operation
fnmsub.d f14, f1, f18, f25, rdn # perform operation
fnmsub.d f14, f1, f18, f25, rmm # perform operation
fnmsub.d f14, f1, f18, f25, rne # perform operation
fnmsub.d f14, f1, f18, f25, rtz # perform operation
fnmsub.d f14, f1, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f1, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f1, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f1, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f1, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f1, f18, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8000000000000)
li x29, 0x6fe25120 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
li x3, 0x20bd91ae # load x3 with 32 MSBs 0x0000000020bd91ae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020bd91ae
sw x3, 0(x2) # store x3 (0x20bd91ae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000020bd91ae from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
fnmsub.d f29, f4, f28, f9, dyn # perform operation
fnmsub.d f29, f4, f28, f9, rdn # perform operation
fnmsub.d f29, f4, f28, f9, rmm # perform operation
fnmsub.d f29, f4, f28, f9, rne # perform operation
fnmsub.d f29, f4, f28, f9, rtz # perform operation
fnmsub.d f29, f4, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f4, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f4, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f4, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f4, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f4, f28, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8008000000000000)
li x30, 0x3f60f203 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
li x3, 0xbb1fd125 # load x3 with 32 MSBs 0x00000000bb1fd125
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb1fd125
sw x3, 0(x2) # store x3 (0xbb1fd125) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000bb1fd125 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
fnmsub.d f30, f22, f15, f7, dyn # perform operation
fnmsub.d f30, f22, f15, f7, rdn # perform operation
fnmsub.d f30, f22, f15, f7, rmm # perform operation
fnmsub.d f30, f22, f15, f7, rne # perform operation
fnmsub.d f30, f22, f15, f7, rtz # perform operation
fnmsub.d f30, f22, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f22, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f22, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f22, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f22, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f22, f15, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x1)
li x28, 0xf897a3e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
li x3, 0x86a5beba # load x3 with 32 MSBs 0x0000000086a5beba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000086a5beba
sw x3, 0(x2) # store x3 (0x86a5beba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000086a5beba from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
fnmsub.d f28, f21, f22, f24, dyn # perform operation
fnmsub.d f28, f21, f22, f24, rdn # perform operation
fnmsub.d f28, f21, f22, f24, rmm # perform operation
fnmsub.d f28, f21, f22, f24, rne # perform operation
fnmsub.d f28, f21, f22, f24, rtz # perform operation
fnmsub.d f28, f21, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f21, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f21, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f21, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f21, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f21, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8000000000000001)
li x9, 0x1209ba1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
li x3, 0xeacaa914 # load x3 with 32 MSBs 0x00000000eacaa914
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eacaa914
sw x3, 0(x2) # store x3 (0xeacaa914) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000eacaa914 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
fnmsub.d f9, f28, f29, f30, dyn # perform operation
fnmsub.d f9, f28, f29, f30, rdn # perform operation
fnmsub.d f9, f28, f29, f30, rmm # perform operation
fnmsub.d f9, f28, f29, f30, rne # perform operation
fnmsub.d f9, f28, f29, f30, rtz # perform operation
fnmsub.d f9, f28, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f28, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f28, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f28, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f28, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f28, f29, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7ff0000000000000)
li x28, 0xaf081466 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
li x3, 0x2f276d61 # load x3 with 32 MSBs 0x000000002f276d61
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f276d61
sw x3, 0(x2) # store x3 (0x2f276d61) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000002f276d61 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
fnmsub.d f28, f13, f21, f27, dyn # perform operation
fnmsub.d f28, f13, f21, f27, rdn # perform operation
fnmsub.d f28, f13, f21, f27, rmm # perform operation
fnmsub.d f28, f13, f21, f27, rne # perform operation
fnmsub.d f28, f13, f21, f27, rtz # perform operation
fnmsub.d f28, f13, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f13, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f13, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f13, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f13, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f13, f21, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xfff0000000000000)
li x7, 0xb19e67f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
li x3, 0x97d8b21e # load x3 with 32 MSBs 0x0000000097d8b21e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000097d8b21e
sw x3, 0(x2) # store x3 (0x97d8b21e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000097d8b21e from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
fnmsub.d f7, f9, f14, f24, dyn # perform operation
fnmsub.d f7, f9, f14, f24, rdn # perform operation
fnmsub.d f7, f9, f14, f24, rmm # perform operation
fnmsub.d f7, f9, f14, f24, rne # perform operation
fnmsub.d f7, f9, f14, f24, rtz # perform operation
fnmsub.d f7, f9, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f9, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f9, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f9, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f9, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f9, f14, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7ff8000000000000)
li x23, 0x1b151b5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000001 from memory into f14
li x3, 0x2b8a55af # load x3 with 32 MSBs 0x000000002b8a55af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002b8a55af
sw x3, 0(x2) # store x3 (0x2b8a55af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000002b8a55af from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff8000000000000 from memory into f4
fnmsub.d f23, f14, f6, f4, dyn # perform operation
fnmsub.d f23, f14, f6, f4, rdn # perform operation
fnmsub.d f23, f14, f6, f4, rmm # perform operation
fnmsub.d f23, f14, f6, f4, rne # perform operation
fnmsub.d f23, f14, f6, f4, rtz # perform operation
fnmsub.d f23, f14, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f14, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f14, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f14, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f14, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f14, f6, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7fffffffffffffff)
li x23, 0x4ddcc03d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
li x3, 0x6fcf2a12 # load x3 with 32 MSBs 0x000000006fcf2a12
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006fcf2a12
sw x3, 0(x2) # store x3 (0x6fcf2a12) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000006fcf2a12 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
fnmsub.d f23, f3, f15, f14, dyn # perform operation
fnmsub.d f23, f3, f15, f14, rdn # perform operation
fnmsub.d f23, f3, f15, f14, rmm # perform operation
fnmsub.d f23, f3, f15, f14, rne # perform operation
fnmsub.d f23, f3, f15, f14, rtz # perform operation
fnmsub.d f23, f3, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f3, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f3, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f3, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f3, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f3, f15, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7ff0000000000001)
li x9, 0x8b2c9938 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
li x3, 0xbbea09fe # load x3 with 32 MSBs 0x00000000bbea09fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bbea09fe
sw x3, 0(x2) # store x3 (0xbbea09fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000bbea09fe from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
fnmsub.d f9, f17, f23, f22, dyn # perform operation
fnmsub.d f9, f17, f23, f22, rdn # perform operation
fnmsub.d f9, f17, f23, f22, rmm # perform operation
fnmsub.d f9, f17, f23, f22, rne # perform operation
fnmsub.d f9, f17, f23, f22, rtz # perform operation
fnmsub.d f9, f17, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f17, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f17, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f17, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f17, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f17, f23, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7ff7ffffffffffff)
li x23, 0x90f2f1c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
li x3, 0x1ac2e08c # load x3 with 32 MSBs 0x000000001ac2e08c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ac2e08c
sw x3, 0(x2) # store x3 (0x1ac2e08c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000001ac2e08c from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
fnmsub.d f23, f2, f29, f17, dyn # perform operation
fnmsub.d f23, f2, f29, f17, rdn # perform operation
fnmsub.d f23, f2, f29, f17, rmm # perform operation
fnmsub.d f23, f2, f29, f17, rne # perform operation
fnmsub.d f23, f2, f29, f17, rtz # perform operation
fnmsub.d f23, f2, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f2, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f2, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f2, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f2, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f2, f29, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x5a392534a57711ad)
li x3, 0xd56a9efd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
li x3, 0xe13cc68c # load x3 with 32 MSBs 0x00000000e13cc68c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e13cc68c
sw x3, 0(x2) # store x3 (0xe13cc68c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000e13cc68c from memory into f17
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
fnmsub.d f3, f2, f17, f24, dyn # perform operation
fnmsub.d f3, f2, f17, f24, rdn # perform operation
fnmsub.d f3, f2, f17, f24, rmm # perform operation
fnmsub.d f3, f2, f17, f24, rne # perform operation
fnmsub.d f3, f2, f17, f24, rtz # perform operation
fnmsub.d f3, f2, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f2, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f2, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f2, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f2, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f2, f17, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xa6e895993737426c)
li x26, 0xcc3221be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x9753cd74 # load x3 with 32 MSBs 0x000000009753cd74
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009753cd74
sw x3, 0(x2) # store x3 (0x9753cd74) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000009753cd74 from memory into f14
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
fnmsub.d f26, f19, f14, f12, dyn # perform operation
fnmsub.d f26, f19, f14, f12, rdn # perform operation
fnmsub.d f26, f19, f14, f12, rmm # perform operation
fnmsub.d f26, f19, f14, f12, rne # perform operation
fnmsub.d f26, f19, f14, f12, rtz # perform operation
fnmsub.d f26, f19, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f19, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f19, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f19, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f19, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f19, f14, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x0)
li x13, 0x1f103fbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0xf393a03a # load x3 with 32 MSBs 0x00000000f393a03a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f393a03a
sw x3, 0(x2) # store x3 (0xf393a03a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000f393a03a from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
fnmsub.d f13, f15, f21, f23, dyn # perform operation
fnmsub.d f13, f15, f21, f23, rdn # perform operation
fnmsub.d f13, f15, f21, f23, rmm # perform operation
fnmsub.d f13, f15, f21, f23, rne # perform operation
fnmsub.d f13, f15, f21, f23, rtz # perform operation
fnmsub.d f13, f15, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f15, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f15, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f15, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f15, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f15, f21, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8000000000000000)
li x21, 0x0ee0692a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
li x3, 0x7c9278e8 # load x3 with 32 MSBs 0x000000007c9278e8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007c9278e8
sw x3, 0(x2) # store x3 (0x7c9278e8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000007c9278e8 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
fnmsub.d f21, f24, f8, f23, dyn # perform operation
fnmsub.d f21, f24, f8, f23, rdn # perform operation
fnmsub.d f21, f24, f8, f23, rmm # perform operation
fnmsub.d f21, f24, f8, f23, rne # perform operation
fnmsub.d f21, f24, f8, f23, rtz # perform operation
fnmsub.d f21, f24, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f24, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f24, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f24, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f24, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f24, f8, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x3ff0000000000000)
li x31, 0x1489b6a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
li x3, 0xcfe2cb26 # load x3 with 32 MSBs 0x00000000cfe2cb26
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cfe2cb26
sw x3, 0(x2) # store x3 (0xcfe2cb26) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000cfe2cb26 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
fnmsub.d f31, f6, f10, f17, dyn # perform operation
fnmsub.d f31, f6, f10, f17, rdn # perform operation
fnmsub.d f31, f6, f10, f17, rmm # perform operation
fnmsub.d f31, f6, f10, f17, rne # perform operation
fnmsub.d f31, f6, f10, f17, rtz # perform operation
fnmsub.d f31, f6, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f6, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f6, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f6, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f6, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f6, f10, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xbff0000000000000)
li x25, 0x2a2efa24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
li x3, 0x0fb70137 # load x3 with 32 MSBs 0x000000000fb70137
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000fb70137
sw x3, 0(x2) # store x3 (0x0fb70137) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000000fb70137 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
fnmsub.d f25, f17, f22, f1, dyn # perform operation
fnmsub.d f25, f17, f22, f1, rdn # perform operation
fnmsub.d f25, f17, f22, f1, rmm # perform operation
fnmsub.d f25, f17, f22, f1, rne # perform operation
fnmsub.d f25, f17, f22, f1, rtz # perform operation
fnmsub.d f25, f17, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f17, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f17, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f17, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f17, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f17, f22, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x3ff8000000000000)
li x8, 0xf2658c4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
li x3, 0x3340dee5 # load x3 with 32 MSBs 0x000000003340dee5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003340dee5
sw x3, 0(x2) # store x3 (0x3340dee5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000003340dee5 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
fnmsub.d f8, f23, f30, f1, dyn # perform operation
fnmsub.d f8, f23, f30, f1, rdn # perform operation
fnmsub.d f8, f23, f30, f1, rmm # perform operation
fnmsub.d f8, f23, f30, f1, rne # perform operation
fnmsub.d f8, f23, f30, f1, rtz # perform operation
fnmsub.d f8, f23, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f23, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f23, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f23, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f23, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f23, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xbff8000000000000)
li x1, 0x30475cdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
li x3, 0x2ce0e8be # load x3 with 32 MSBs 0x000000002ce0e8be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ce0e8be
sw x3, 0(x2) # store x3 (0x2ce0e8be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000002ce0e8be from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff8000000000000 from memory into f31
fnmsub.d f1, f7, f2, f31, dyn # perform operation
fnmsub.d f1, f7, f2, f31, rdn # perform operation
fnmsub.d f1, f7, f2, f31, rmm # perform operation
fnmsub.d f1, f7, f2, f31, rne # perform operation
fnmsub.d f1, f7, f2, f31, rtz # perform operation
fnmsub.d f1, f7, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f7, f2, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x4000000000000000)
li x10, 0x1053a91a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
li x3, 0x35b5daea # load x3 with 32 MSBs 0x0000000035b5daea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035b5daea
sw x3, 0(x2) # store x3 (0x35b5daea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000035b5daea from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
fnmsub.d f10, f25, f15, f2, dyn # perform operation
fnmsub.d f10, f25, f15, f2, rdn # perform operation
fnmsub.d f10, f25, f15, f2, rmm # perform operation
fnmsub.d f10, f25, f15, f2, rne # perform operation
fnmsub.d f10, f25, f15, f2, rtz # perform operation
fnmsub.d f10, f25, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f25, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f25, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f25, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f25, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f25, f15, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xc000000000000000)
li x9, 0xcd0f06e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
li x3, 0x9f4ce87b # load x3 with 32 MSBs 0x000000009f4ce87b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f4ce87b
sw x3, 0(x2) # store x3 (0x9f4ce87b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000009f4ce87b from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
fnmsub.d f9, f17, f24, f29, dyn # perform operation
fnmsub.d f9, f17, f24, f29, rdn # perform operation
fnmsub.d f9, f17, f24, f29, rmm # perform operation
fnmsub.d f9, f17, f24, f29, rne # perform operation
fnmsub.d f9, f17, f24, f29, rtz # perform operation
fnmsub.d f9, f17, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f17, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f17, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f17, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f17, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f17, f24, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x10000000000000)
li x4, 0x09b42260 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
li x3, 0x16dad808 # load x3 with 32 MSBs 0x0000000016dad808
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000016dad808
sw x3, 0(x2) # store x3 (0x16dad808) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000016dad808 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
fnmsub.d f4, f12, f25, f26, dyn # perform operation
fnmsub.d f4, f12, f25, f26, rdn # perform operation
fnmsub.d f4, f12, f25, f26, rmm # perform operation
fnmsub.d f4, f12, f25, f26, rne # perform operation
fnmsub.d f4, f12, f25, f26, rtz # perform operation
fnmsub.d f4, f12, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f12, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f12, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f12, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f12, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f12, f25, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8010000000000000)
li x21, 0x3b3873bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
li x3, 0x9c260892 # load x3 with 32 MSBs 0x000000009c260892
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009c260892
sw x3, 0(x2) # store x3 (0x9c260892) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000009c260892 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8010000000000000 from memory into f1
fnmsub.d f21, f19, f28, f1, dyn # perform operation
fnmsub.d f21, f19, f28, f1, rdn # perform operation
fnmsub.d f21, f19, f28, f1, rmm # perform operation
fnmsub.d f21, f19, f28, f1, rne # perform operation
fnmsub.d f21, f19, f28, f1, rtz # perform operation
fnmsub.d f21, f19, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f19, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f19, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f19, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f19, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f19, f28, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7fefffffffffffff)
li x20, 0x8c23e397 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
li x3, 0xf1af5cd8 # load x3 with 32 MSBs 0x00000000f1af5cd8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f1af5cd8
sw x3, 0(x2) # store x3 (0xf1af5cd8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000f1af5cd8 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
fnmsub.d f20, f7, f18, f17, dyn # perform operation
fnmsub.d f20, f7, f18, f17, rdn # perform operation
fnmsub.d f20, f7, f18, f17, rmm # perform operation
fnmsub.d f20, f7, f18, f17, rne # perform operation
fnmsub.d f20, f7, f18, f17, rtz # perform operation
fnmsub.d f20, f7, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f7, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f7, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f7, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f7, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f7, f18, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xffefffffffffffff)
li x16, 0x6522231b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
li x3, 0xeb5e46fd # load x3 with 32 MSBs 0x00000000eb5e46fd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb5e46fd
sw x3, 0(x2) # store x3 (0xeb5e46fd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000eb5e46fd from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
fnmsub.d f16, f24, f15, f23, dyn # perform operation
fnmsub.d f16, f24, f15, f23, rdn # perform operation
fnmsub.d f16, f24, f15, f23, rmm # perform operation
fnmsub.d f16, f24, f15, f23, rne # perform operation
fnmsub.d f16, f24, f15, f23, rtz # perform operation
fnmsub.d f16, f24, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f24, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f24, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f24, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f24, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f24, f15, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xfffffffffffff)
li x9, 0x8e96a2da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
li x3, 0x962134da # load x3 with 32 MSBs 0x00000000962134da
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000962134da
sw x3, 0(x2) # store x3 (0x962134da) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000962134da from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000fffffffffffff from memory into f4
fnmsub.d f9, f7, f27, f4, dyn # perform operation
fnmsub.d f9, f7, f27, f4, rdn # perform operation
fnmsub.d f9, f7, f27, f4, rmm # perform operation
fnmsub.d f9, f7, f27, f4, rne # perform operation
fnmsub.d f9, f7, f27, f4, rtz # perform operation
fnmsub.d f9, f7, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f7, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f7, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f7, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f7, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f7, f27, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x800fffffffffffff)
li x27, 0x034db6f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
li x3, 0x5ce6c77d # load x3 with 32 MSBs 0x000000005ce6c77d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005ce6c77d
sw x3, 0(x2) # store x3 (0x5ce6c77d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000005ce6c77d from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
fnmsub.d f27, f9, f1, f24, dyn # perform operation
fnmsub.d f27, f9, f1, f24, rdn # perform operation
fnmsub.d f27, f9, f1, f24, rmm # perform operation
fnmsub.d f27, f9, f1, f24, rne # perform operation
fnmsub.d f27, f9, f1, f24, rtz # perform operation
fnmsub.d f27, f9, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f9, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f9, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f9, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f9, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f9, f1, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8000000000000)
li x8, 0xaf8300fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
li x3, 0xb3548723 # load x3 with 32 MSBs 0x00000000b3548723
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3548723
sw x3, 0(x2) # store x3 (0xb3548723) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000b3548723 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
fnmsub.d f8, f28, f12, f10, dyn # perform operation
fnmsub.d f8, f28, f12, f10, rdn # perform operation
fnmsub.d f8, f28, f12, f10, rmm # perform operation
fnmsub.d f8, f28, f12, f10, rne # perform operation
fnmsub.d f8, f28, f12, f10, rtz # perform operation
fnmsub.d f8, f28, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f28, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f28, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f28, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f28, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f28, f12, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8008000000000000)
li x10, 0x47a8735f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
li x3, 0x5507da81 # load x3 with 32 MSBs 0x000000005507da81
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005507da81
sw x3, 0(x2) # store x3 (0x5507da81) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000005507da81 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
fnmsub.d f10, f13, f8, f22, dyn # perform operation
fnmsub.d f10, f13, f8, f22, rdn # perform operation
fnmsub.d f10, f13, f8, f22, rmm # perform operation
fnmsub.d f10, f13, f8, f22, rne # perform operation
fnmsub.d f10, f13, f8, f22, rtz # perform operation
fnmsub.d f10, f13, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f13, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f13, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f13, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f13, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f13, f8, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x1)
li x25, 0x33816ab7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
li x3, 0x0904b5eb # load x3 with 32 MSBs 0x000000000904b5eb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000904b5eb
sw x3, 0(x2) # store x3 (0x0904b5eb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000000904b5eb from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
fnmsub.d f25, f13, f27, f7, dyn # perform operation
fnmsub.d f25, f13, f27, f7, rdn # perform operation
fnmsub.d f25, f13, f27, f7, rmm # perform operation
fnmsub.d f25, f13, f27, f7, rne # perform operation
fnmsub.d f25, f13, f27, f7, rtz # perform operation
fnmsub.d f25, f13, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f13, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f13, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f13, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f13, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f13, f27, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8000000000000001)
li x3, 0x856edcb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
li x3, 0x06b704f5 # load x3 with 32 MSBs 0x0000000006b704f5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000006b704f5
sw x3, 0(x2) # store x3 (0x06b704f5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000006b704f5 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
fnmsub.d f3, f29, f30, f31, dyn # perform operation
fnmsub.d f3, f29, f30, f31, rdn # perform operation
fnmsub.d f3, f29, f30, f31, rmm # perform operation
fnmsub.d f3, f29, f30, f31, rne # perform operation
fnmsub.d f3, f29, f30, f31, rtz # perform operation
fnmsub.d f3, f29, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f29, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f29, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f29, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f29, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f29, f30, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7ff0000000000000)
li x29, 0xae7a5e46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
li x3, 0xf4226028 # load x3 with 32 MSBs 0x00000000f4226028
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f4226028
sw x3, 0(x2) # store x3 (0xf4226028) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000f4226028 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
fnmsub.d f29, f28, f12, f16, dyn # perform operation
fnmsub.d f29, f28, f12, f16, rdn # perform operation
fnmsub.d f29, f28, f12, f16, rmm # perform operation
fnmsub.d f29, f28, f12, f16, rne # perform operation
fnmsub.d f29, f28, f12, f16, rtz # perform operation
fnmsub.d f29, f28, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f28, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f28, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f28, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f28, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f28, f12, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xfff0000000000000)
li x8, 0x9c13d6ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
li x3, 0x62d7f940 # load x3 with 32 MSBs 0x0000000062d7f940
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000062d7f940
sw x3, 0(x2) # store x3 (0x62d7f940) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000062d7f940 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
fnmsub.d f8, f12, f1, f24, dyn # perform operation
fnmsub.d f8, f12, f1, f24, rdn # perform operation
fnmsub.d f8, f12, f1, f24, rmm # perform operation
fnmsub.d f8, f12, f1, f24, rne # perform operation
fnmsub.d f8, f12, f1, f24, rtz # perform operation
fnmsub.d f8, f12, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f12, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f12, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f12, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f12, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f12, f1, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7ff8000000000000)
li x4, 0x16d77059 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
li x3, 0xfad36e50 # load x3 with 32 MSBs 0x00000000fad36e50
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fad36e50
sw x3, 0(x2) # store x3 (0xfad36e50) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000fad36e50 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
fnmsub.d f4, f30, f17, f11, dyn # perform operation
fnmsub.d f4, f30, f17, f11, rdn # perform operation
fnmsub.d f4, f30, f17, f11, rmm # perform operation
fnmsub.d f4, f30, f17, f11, rne # perform operation
fnmsub.d f4, f30, f17, f11, rtz # perform operation
fnmsub.d f4, f30, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f30, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f30, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f30, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f30, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f30, f17, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7fffffffffffffff)
li x8, 0x46f82019 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
li x3, 0x4a85ba94 # load x3 with 32 MSBs 0x000000004a85ba94
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004a85ba94
sw x3, 0(x2) # store x3 (0x4a85ba94) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000004a85ba94 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
fnmsub.d f8, f23, f31, f15, dyn # perform operation
fnmsub.d f8, f23, f31, f15, rdn # perform operation
fnmsub.d f8, f23, f31, f15, rmm # perform operation
fnmsub.d f8, f23, f31, f15, rne # perform operation
fnmsub.d f8, f23, f31, f15, rtz # perform operation
fnmsub.d f8, f23, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f23, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f23, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f23, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f23, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f23, f31, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7ff0000000000001)
li x3, 0xb89560fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
li x3, 0x7c467e91 # load x3 with 32 MSBs 0x000000007c467e91
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007c467e91
sw x3, 0(x2) # store x3 (0x7c467e91) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000007c467e91 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
fnmsub.d f3, f28, f27, f29, dyn # perform operation
fnmsub.d f3, f28, f27, f29, rdn # perform operation
fnmsub.d f3, f28, f27, f29, rmm # perform operation
fnmsub.d f3, f28, f27, f29, rne # perform operation
fnmsub.d f3, f28, f27, f29, rtz # perform operation
fnmsub.d f3, f28, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f28, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f28, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f28, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f28, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f28, f27, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7ff7ffffffffffff)
li x5, 0xe4daf499 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000000 from memory into f8
li x3, 0x2405e222 # load x3 with 32 MSBs 0x000000002405e222
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002405e222
sw x3, 0(x2) # store x3 (0x2405e222) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000002405e222 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
fnmsub.d f5, f8, f31, f9, dyn # perform operation
fnmsub.d f5, f8, f31, f9, rdn # perform operation
fnmsub.d f5, f8, f31, f9, rmm # perform operation
fnmsub.d f5, f8, f31, f9, rne # perform operation
fnmsub.d f5, f8, f31, f9, rtz # perform operation
fnmsub.d f5, f8, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f8, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f8, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f8, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f8, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f8, f31, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x5a392534a57711ad)
li x14, 0x9ba106f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
li x3, 0x66139ee4 # load x3 with 32 MSBs 0x0000000066139ee4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066139ee4
sw x3, 0(x2) # store x3 (0x66139ee4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000066139ee4 from memory into f23
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
fnmsub.d f14, f6, f23, f20, dyn # perform operation
fnmsub.d f14, f6, f23, f20, rdn # perform operation
fnmsub.d f14, f6, f23, f20, rmm # perform operation
fnmsub.d f14, f6, f23, f20, rne # perform operation
fnmsub.d f14, f6, f23, f20, rtz # perform operation
fnmsub.d f14, f6, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f6, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f6, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f6, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f6, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f6, f23, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xa6e895993737426c)
li x11, 0xe22027d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000000 from memory into f8
li x3, 0xe8e9f68e # load x3 with 32 MSBs 0x00000000e8e9f68e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8e9f68e
sw x3, 0(x2) # store x3 (0xe8e9f68e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e8e9f68e from memory into f19
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
fnmsub.d f11, f8, f19, f20, dyn # perform operation
fnmsub.d f11, f8, f19, f20, rdn # perform operation
fnmsub.d f11, f8, f19, f20, rmm # perform operation
fnmsub.d f11, f8, f19, f20, rne # perform operation
fnmsub.d f11, f8, f19, f20, rtz # perform operation
fnmsub.d f11, f8, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f8, f19, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x0)
li x18, 0x0ce682e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
li x3, 0x007fe56b # load x3 with 32 MSBs 0x00000000007fe56b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000007fe56b
sw x3, 0(x2) # store x3 (0x007fe56b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000007fe56b from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000000 from memory into f10
fnmsub.d f18, f8, f28, f10, dyn # perform operation
fnmsub.d f18, f8, f28, f10, rdn # perform operation
fnmsub.d f18, f8, f28, f10, rmm # perform operation
fnmsub.d f18, f8, f28, f10, rne # perform operation
fnmsub.d f18, f8, f28, f10, rtz # perform operation
fnmsub.d f18, f8, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f8, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f8, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f8, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f8, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f8, f28, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8000000000000000)
li x29, 0x16758e81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0xfbcfd744 # load x3 with 32 MSBs 0x00000000fbcfd744
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fbcfd744
sw x3, 0(x2) # store x3 (0xfbcfd744) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000fbcfd744 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
fnmsub.d f29, f5, f1, f12, dyn # perform operation
fnmsub.d f29, f5, f1, f12, rdn # perform operation
fnmsub.d f29, f5, f1, f12, rmm # perform operation
fnmsub.d f29, f5, f1, f12, rne # perform operation
fnmsub.d f29, f5, f1, f12, rtz # perform operation
fnmsub.d f29, f5, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f5, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f5, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f5, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f5, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f5, f1, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x3ff0000000000000)
li x29, 0xff9c4e85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
li x3, 0x64e71cb6 # load x3 with 32 MSBs 0x0000000064e71cb6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000064e71cb6
sw x3, 0(x2) # store x3 (0x64e71cb6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000064e71cb6 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
fnmsub.d f29, f21, f28, f25, dyn # perform operation
fnmsub.d f29, f21, f28, f25, rdn # perform operation
fnmsub.d f29, f21, f28, f25, rmm # perform operation
fnmsub.d f29, f21, f28, f25, rne # perform operation
fnmsub.d f29, f21, f28, f25, rtz # perform operation
fnmsub.d f29, f21, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f21, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f21, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f21, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f21, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f21, f28, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xbff0000000000000)
li x20, 0x6a2872a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
li x3, 0x3e5169d7 # load x3 with 32 MSBs 0x000000003e5169d7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e5169d7
sw x3, 0(x2) # store x3 (0x3e5169d7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000003e5169d7 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
fnmsub.d f20, f24, f12, f31, dyn # perform operation
fnmsub.d f20, f24, f12, f31, rdn # perform operation
fnmsub.d f20, f24, f12, f31, rmm # perform operation
fnmsub.d f20, f24, f12, f31, rne # perform operation
fnmsub.d f20, f24, f12, f31, rtz # perform operation
fnmsub.d f20, f24, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f24, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f24, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f24, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f24, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f24, f12, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x3ff8000000000000)
li x13, 0x997073d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
li x3, 0x2b930372 # load x3 with 32 MSBs 0x000000002b930372
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002b930372
sw x3, 0(x2) # store x3 (0x2b930372) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000002b930372 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
fnmsub.d f13, f14, f12, f4, dyn # perform operation
fnmsub.d f13, f14, f12, f4, rdn # perform operation
fnmsub.d f13, f14, f12, f4, rmm # perform operation
fnmsub.d f13, f14, f12, f4, rne # perform operation
fnmsub.d f13, f14, f12, f4, rtz # perform operation
fnmsub.d f13, f14, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f14, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f14, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f14, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f14, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f14, f12, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xbff8000000000000)
li x2, 0x869477ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
li x3, 0x2b71fc5d # load x3 with 32 MSBs 0x000000002b71fc5d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002b71fc5d
sw x3, 0(x2) # store x3 (0x2b71fc5d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000002b71fc5d from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
fnmsub.d f2, f16, f1, f27, dyn # perform operation
fnmsub.d f2, f16, f1, f27, rdn # perform operation
fnmsub.d f2, f16, f1, f27, rmm # perform operation
fnmsub.d f2, f16, f1, f27, rne # perform operation
fnmsub.d f2, f16, f1, f27, rtz # perform operation
fnmsub.d f2, f16, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f16, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f16, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f16, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f16, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f16, f1, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x4000000000000000)
li x26, 0xce3f36a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
li x3, 0x2d393d99 # load x3 with 32 MSBs 0x000000002d393d99
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d393d99
sw x3, 0(x2) # store x3 (0x2d393d99) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000002d393d99 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
fnmsub.d f26, f17, f4, f27, dyn # perform operation
fnmsub.d f26, f17, f4, f27, rdn # perform operation
fnmsub.d f26, f17, f4, f27, rmm # perform operation
fnmsub.d f26, f17, f4, f27, rne # perform operation
fnmsub.d f26, f17, f4, f27, rtz # perform operation
fnmsub.d f26, f17, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f17, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f17, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f17, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f17, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f17, f4, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xc000000000000000)
li x4, 0x66165cd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
li x3, 0xf9c0bb64 # load x3 with 32 MSBs 0x00000000f9c0bb64
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f9c0bb64
sw x3, 0(x2) # store x3 (0xf9c0bb64) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000f9c0bb64 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
fnmsub.d f4, f19, f8, f2, dyn # perform operation
fnmsub.d f4, f19, f8, f2, rdn # perform operation
fnmsub.d f4, f19, f8, f2, rmm # perform operation
fnmsub.d f4, f19, f8, f2, rne # perform operation
fnmsub.d f4, f19, f8, f2, rtz # perform operation
fnmsub.d f4, f19, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f19, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f19, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f19, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f19, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f19, f8, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x10000000000000)
li x21, 0xbe4b2a20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
li x3, 0x2a50a033 # load x3 with 32 MSBs 0x000000002a50a033
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a50a033
sw x3, 0(x2) # store x3 (0x2a50a033) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000002a50a033 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
fnmsub.d f21, f23, f31, f14, dyn # perform operation
fnmsub.d f21, f23, f31, f14, rdn # perform operation
fnmsub.d f21, f23, f31, f14, rmm # perform operation
fnmsub.d f21, f23, f31, f14, rne # perform operation
fnmsub.d f21, f23, f31, f14, rtz # perform operation
fnmsub.d f21, f23, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f23, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f23, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f23, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f23, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f23, f31, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8010000000000000)
li x25, 0x79585fa9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
li x3, 0xa202ca5c # load x3 with 32 MSBs 0x00000000a202ca5c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a202ca5c
sw x3, 0(x2) # store x3 (0xa202ca5c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000a202ca5c from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
fnmsub.d f25, f22, f24, f3, dyn # perform operation
fnmsub.d f25, f22, f24, f3, rdn # perform operation
fnmsub.d f25, f22, f24, f3, rmm # perform operation
fnmsub.d f25, f22, f24, f3, rne # perform operation
fnmsub.d f25, f22, f24, f3, rtz # perform operation
fnmsub.d f25, f22, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f22, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f22, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f22, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f22, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f22, f24, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7fefffffffffffff)
li x24, 0xad614e7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
li x3, 0xb7c0ca48 # load x3 with 32 MSBs 0x00000000b7c0ca48
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b7c0ca48
sw x3, 0(x2) # store x3 (0xb7c0ca48) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b7c0ca48 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
fnmsub.d f24, f21, f23, f6, dyn # perform operation
fnmsub.d f24, f21, f23, f6, rdn # perform operation
fnmsub.d f24, f21, f23, f6, rmm # perform operation
fnmsub.d f24, f21, f23, f6, rne # perform operation
fnmsub.d f24, f21, f23, f6, rtz # perform operation
fnmsub.d f24, f21, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f21, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f21, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f21, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f21, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f21, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xffefffffffffffff)
li x10, 0x152ea0fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
li x3, 0xc317b537 # load x3 with 32 MSBs 0x00000000c317b537
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c317b537
sw x3, 0(x2) # store x3 (0xc317b537) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000c317b537 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
fnmsub.d f10, f7, f22, f9, dyn # perform operation
fnmsub.d f10, f7, f22, f9, rdn # perform operation
fnmsub.d f10, f7, f22, f9, rmm # perform operation
fnmsub.d f10, f7, f22, f9, rne # perform operation
fnmsub.d f10, f7, f22, f9, rtz # perform operation
fnmsub.d f10, f7, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f7, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f7, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f7, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f7, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f7, f22, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xfffffffffffff)
li x17, 0xf455b913 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000000 from memory into f31
li x3, 0x11342a4b # load x3 with 32 MSBs 0x0000000011342a4b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000011342a4b
sw x3, 0(x2) # store x3 (0x11342a4b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000011342a4b from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
fnmsub.d f17, f31, f4, f21, dyn # perform operation
fnmsub.d f17, f31, f4, f21, rdn # perform operation
fnmsub.d f17, f31, f4, f21, rmm # perform operation
fnmsub.d f17, f31, f4, f21, rne # perform operation
fnmsub.d f17, f31, f4, f21, rtz # perform operation
fnmsub.d f17, f31, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f31, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f31, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f31, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f31, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f31, f4, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x800fffffffffffff)
li x1, 0x4fe39786 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
li x3, 0x83ff6825 # load x3 with 32 MSBs 0x0000000083ff6825
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000083ff6825
sw x3, 0(x2) # store x3 (0x83ff6825) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000083ff6825 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
fnmsub.d f1, f15, f7, f5, dyn # perform operation
fnmsub.d f1, f15, f7, f5, rdn # perform operation
fnmsub.d f1, f15, f7, f5, rmm # perform operation
fnmsub.d f1, f15, f7, f5, rne # perform operation
fnmsub.d f1, f15, f7, f5, rtz # perform operation
fnmsub.d f1, f15, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f15, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f15, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f15, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f15, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f15, f7, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8000000000000)
li x18, 0x846e933a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
li x3, 0x5b0fc3b7 # load x3 with 32 MSBs 0x000000005b0fc3b7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005b0fc3b7
sw x3, 0(x2) # store x3 (0x5b0fc3b7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000005b0fc3b7 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
fnmsub.d f18, f22, f3, f25, dyn # perform operation
fnmsub.d f18, f22, f3, f25, rdn # perform operation
fnmsub.d f18, f22, f3, f25, rmm # perform operation
fnmsub.d f18, f22, f3, f25, rne # perform operation
fnmsub.d f18, f22, f3, f25, rtz # perform operation
fnmsub.d f18, f22, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f22, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f22, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f22, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f22, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f22, f3, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8008000000000000)
li x20, 0xee873cd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xfff0000000000000 from memory into f4
li x3, 0x6e1c8a50 # load x3 with 32 MSBs 0x000000006e1c8a50
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006e1c8a50
sw x3, 0(x2) # store x3 (0x6e1c8a50) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000006e1c8a50 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
fnmsub.d f20, f4, f26, f3, dyn # perform operation
fnmsub.d f20, f4, f26, f3, rdn # perform operation
fnmsub.d f20, f4, f26, f3, rmm # perform operation
fnmsub.d f20, f4, f26, f3, rne # perform operation
fnmsub.d f20, f4, f26, f3, rtz # perform operation
fnmsub.d f20, f4, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f4, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f4, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f4, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f4, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f4, f26, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x1)
li x21, 0x5794f00f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
li x3, 0xba6ea0bf # load x3 with 32 MSBs 0x00000000ba6ea0bf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ba6ea0bf
sw x3, 0(x2) # store x3 (0xba6ea0bf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000ba6ea0bf from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
fnmsub.d f21, f27, f28, f29, dyn # perform operation
fnmsub.d f21, f27, f28, f29, rdn # perform operation
fnmsub.d f21, f27, f28, f29, rmm # perform operation
fnmsub.d f21, f27, f28, f29, rne # perform operation
fnmsub.d f21, f27, f28, f29, rtz # perform operation
fnmsub.d f21, f27, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f27, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f27, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f27, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f27, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f27, f28, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8000000000000001)
li x18, 0x5f2dc8ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0x31a34cc6 # load x3 with 32 MSBs 0x0000000031a34cc6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031a34cc6
sw x3, 0(x2) # store x3 (0x31a34cc6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000031a34cc6 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
fnmsub.d f18, f5, f14, f29, dyn # perform operation
fnmsub.d f18, f5, f14, f29, rdn # perform operation
fnmsub.d f18, f5, f14, f29, rmm # perform operation
fnmsub.d f18, f5, f14, f29, rne # perform operation
fnmsub.d f18, f5, f14, f29, rtz # perform operation
fnmsub.d f18, f5, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f5, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f5, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f5, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f5, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f5, f14, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7ff0000000000000)
li x21, 0x3677975a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
li x3, 0xd3f3dc0b # load x3 with 32 MSBs 0x00000000d3f3dc0b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d3f3dc0b
sw x3, 0(x2) # store x3 (0xd3f3dc0b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000d3f3dc0b from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
fnmsub.d f21, f16, f5, f19, dyn # perform operation
fnmsub.d f21, f16, f5, f19, rdn # perform operation
fnmsub.d f21, f16, f5, f19, rmm # perform operation
fnmsub.d f21, f16, f5, f19, rne # perform operation
fnmsub.d f21, f16, f5, f19, rtz # perform operation
fnmsub.d f21, f16, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f16, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f16, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f16, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f16, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f16, f5, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xfff0000000000000)
li x15, 0xc3ed0508 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
li x3, 0x21ad54d5 # load x3 with 32 MSBs 0x0000000021ad54d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000021ad54d5
sw x3, 0(x2) # store x3 (0x21ad54d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000021ad54d5 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
fnmsub.d f15, f20, f25, f6, dyn # perform operation
fnmsub.d f15, f20, f25, f6, rdn # perform operation
fnmsub.d f15, f20, f25, f6, rmm # perform operation
fnmsub.d f15, f20, f25, f6, rne # perform operation
fnmsub.d f15, f20, f25, f6, rtz # perform operation
fnmsub.d f15, f20, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f20, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f20, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f20, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f20, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f20, f25, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7ff8000000000000)
li x11, 0x07cea24a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0x5e1e5d82 # load x3 with 32 MSBs 0x000000005e1e5d82
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e1e5d82
sw x3, 0(x2) # store x3 (0x5e1e5d82) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000005e1e5d82 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
fnmsub.d f11, f5, f27, f18, dyn # perform operation
fnmsub.d f11, f5, f27, f18, rdn # perform operation
fnmsub.d f11, f5, f27, f18, rmm # perform operation
fnmsub.d f11, f5, f27, f18, rne # perform operation
fnmsub.d f11, f5, f27, f18, rtz # perform operation
fnmsub.d f11, f5, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f5, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f5, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f5, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f5, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f5, f27, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7fffffffffffffff)
li x24, 0xb0e9e39a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
li x3, 0x20bbde20 # load x3 with 32 MSBs 0x0000000020bbde20
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020bbde20
sw x3, 0(x2) # store x3 (0x20bbde20) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000020bbde20 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
fnmsub.d f24, f2, f1, f21, dyn # perform operation
fnmsub.d f24, f2, f1, f21, rdn # perform operation
fnmsub.d f24, f2, f1, f21, rmm # perform operation
fnmsub.d f24, f2, f1, f21, rne # perform operation
fnmsub.d f24, f2, f1, f21, rtz # perform operation
fnmsub.d f24, f2, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f2, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f2, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f2, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f2, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f2, f1, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7ff0000000000001)
li x12, 0xe67dcd08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
li x3, 0xaa852a17 # load x3 with 32 MSBs 0x00000000aa852a17
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa852a17
sw x3, 0(x2) # store x3 (0xaa852a17) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000aa852a17 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
fnmsub.d f12, f8, f29, f2, dyn # perform operation
fnmsub.d f12, f8, f29, f2, rdn # perform operation
fnmsub.d f12, f8, f29, f2, rmm # perform operation
fnmsub.d f12, f8, f29, f2, rne # perform operation
fnmsub.d f12, f8, f29, f2, rtz # perform operation
fnmsub.d f12, f8, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f8, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f8, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f8, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f8, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f8, f29, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7ff7ffffffffffff)
li x20, 0x942f88f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
li x3, 0xb1e0abdb # load x3 with 32 MSBs 0x00000000b1e0abdb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1e0abdb
sw x3, 0(x2) # store x3 (0xb1e0abdb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000b1e0abdb from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
fnmsub.d f20, f13, f28, f7, dyn # perform operation
fnmsub.d f20, f13, f28, f7, rdn # perform operation
fnmsub.d f20, f13, f28, f7, rmm # perform operation
fnmsub.d f20, f13, f28, f7, rne # perform operation
fnmsub.d f20, f13, f28, f7, rtz # perform operation
fnmsub.d f20, f13, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f13, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f13, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f13, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f13, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f13, f28, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x5a392534a57711ad)
li x5, 0x9ace40f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000000 from memory into f31
li x3, 0x3a4c11c3 # load x3 with 32 MSBs 0x000000003a4c11c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003a4c11c3
sw x3, 0(x2) # store x3 (0x3a4c11c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000003a4c11c3 from memory into f16
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
fnmsub.d f5, f31, f16, f29, dyn # perform operation
fnmsub.d f5, f31, f16, f29, rdn # perform operation
fnmsub.d f5, f31, f16, f29, rmm # perform operation
fnmsub.d f5, f31, f16, f29, rne # perform operation
fnmsub.d f5, f31, f16, f29, rtz # perform operation
fnmsub.d f5, f31, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f31, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f31, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f31, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f31, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f31, f16, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xa6e895993737426c)
li x11, 0x8152c1f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
li x3, 0x7722435c # load x3 with 32 MSBs 0x000000007722435c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007722435c
sw x3, 0(x2) # store x3 (0x7722435c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000007722435c from memory into f30
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
fnmsub.d f11, f2, f30, f6, dyn # perform operation
fnmsub.d f11, f2, f30, f6, rdn # perform operation
fnmsub.d f11, f2, f30, f6, rmm # perform operation
fnmsub.d f11, f2, f30, f6, rne # perform operation
fnmsub.d f11, f2, f30, f6, rtz # perform operation
fnmsub.d f11, f2, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f2, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f2, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f2, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f2, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f2, f30, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x0)
li x25, 0xadb94fa0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
li x3, 0x1ed0c88f # load x3 with 32 MSBs 0x000000001ed0c88f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ed0c88f
sw x3, 0(x2) # store x3 (0x1ed0c88f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000001ed0c88f from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
fnmsub.d f25, f10, f3, f15, dyn # perform operation
fnmsub.d f25, f10, f3, f15, rdn # perform operation
fnmsub.d f25, f10, f3, f15, rmm # perform operation
fnmsub.d f25, f10, f3, f15, rne # perform operation
fnmsub.d f25, f10, f3, f15, rtz # perform operation
fnmsub.d f25, f10, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f10, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f10, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f10, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f10, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f10, f3, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8000000000000000)
li x25, 0x3634c3bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
li x3, 0xbf5348a7 # load x3 with 32 MSBs 0x00000000bf5348a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf5348a7
sw x3, 0(x2) # store x3 (0xbf5348a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000bf5348a7 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
fnmsub.d f25, f21, f14, f30, dyn # perform operation
fnmsub.d f25, f21, f14, f30, rdn # perform operation
fnmsub.d f25, f21, f14, f30, rmm # perform operation
fnmsub.d f25, f21, f14, f30, rne # perform operation
fnmsub.d f25, f21, f14, f30, rtz # perform operation
fnmsub.d f25, f21, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f21, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f21, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f21, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f21, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f21, f14, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x3ff0000000000000)
li x15, 0xcaa8a84e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
li x3, 0x023ca04e # load x3 with 32 MSBs 0x00000000023ca04e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000023ca04e
sw x3, 0(x2) # store x3 (0x023ca04e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000023ca04e from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
fnmsub.d f15, f13, f20, f23, dyn # perform operation
fnmsub.d f15, f13, f20, f23, rdn # perform operation
fnmsub.d f15, f13, f20, f23, rmm # perform operation
fnmsub.d f15, f13, f20, f23, rne # perform operation
fnmsub.d f15, f13, f20, f23, rtz # perform operation
fnmsub.d f15, f13, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f13, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f13, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f13, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f13, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f13, f20, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xbff0000000000000)
li x4, 0xdaceb5ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
li x3, 0x35f4b8f5 # load x3 with 32 MSBs 0x0000000035f4b8f5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035f4b8f5
sw x3, 0(x2) # store x3 (0x35f4b8f5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000035f4b8f5 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
fnmsub.d f4, f2, f29, f15, dyn # perform operation
fnmsub.d f4, f2, f29, f15, rdn # perform operation
fnmsub.d f4, f2, f29, f15, rmm # perform operation
fnmsub.d f4, f2, f29, f15, rne # perform operation
fnmsub.d f4, f2, f29, f15, rtz # perform operation
fnmsub.d f4, f2, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f2, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f2, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f2, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f2, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f2, f29, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x3ff8000000000000)
li x15, 0x5d7afa71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
li x3, 0xf1845ad3 # load x3 with 32 MSBs 0x00000000f1845ad3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f1845ad3
sw x3, 0(x2) # store x3 (0xf1845ad3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000f1845ad3 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
fnmsub.d f15, f17, f2, f10, dyn # perform operation
fnmsub.d f15, f17, f2, f10, rdn # perform operation
fnmsub.d f15, f17, f2, f10, rmm # perform operation
fnmsub.d f15, f17, f2, f10, rne # perform operation
fnmsub.d f15, f17, f2, f10, rtz # perform operation
fnmsub.d f15, f17, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f17, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f17, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f17, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f17, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f17, f2, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xbff8000000000000)
li x7, 0x30e0ba43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
li x3, 0x880563b7 # load x3 with 32 MSBs 0x00000000880563b7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000880563b7
sw x3, 0(x2) # store x3 (0x880563b7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000880563b7 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
fnmsub.d f7, f30, f4, f11, dyn # perform operation
fnmsub.d f7, f30, f4, f11, rdn # perform operation
fnmsub.d f7, f30, f4, f11, rmm # perform operation
fnmsub.d f7, f30, f4, f11, rne # perform operation
fnmsub.d f7, f30, f4, f11, rtz # perform operation
fnmsub.d f7, f30, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f30, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f30, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f30, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f30, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f30, f4, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x4000000000000000)
li x9, 0xdcb99b25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
li x3, 0xa985935a # load x3 with 32 MSBs 0x00000000a985935a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a985935a
sw x3, 0(x2) # store x3 (0xa985935a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000a985935a from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
fnmsub.d f9, f25, f14, f27, dyn # perform operation
fnmsub.d f9, f25, f14, f27, rdn # perform operation
fnmsub.d f9, f25, f14, f27, rmm # perform operation
fnmsub.d f9, f25, f14, f27, rne # perform operation
fnmsub.d f9, f25, f14, f27, rtz # perform operation
fnmsub.d f9, f25, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f25, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f25, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f25, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f25, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f25, f14, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xc000000000000000)
li x4, 0x91a289c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff8000000000000 from memory into f9
li x3, 0x41fca75c # load x3 with 32 MSBs 0x0000000041fca75c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000041fca75c
sw x3, 0(x2) # store x3 (0x41fca75c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000041fca75c from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
fnmsub.d f4, f9, f25, f22, dyn # perform operation
fnmsub.d f4, f9, f25, f22, rdn # perform operation
fnmsub.d f4, f9, f25, f22, rmm # perform operation
fnmsub.d f4, f9, f25, f22, rne # perform operation
fnmsub.d f4, f9, f25, f22, rtz # perform operation
fnmsub.d f4, f9, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f9, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f9, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f9, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f9, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f9, f25, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x10000000000000)
li x5, 0xd3305d69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
li x3, 0x1a91b1c7 # load x3 with 32 MSBs 0x000000001a91b1c7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001a91b1c7
sw x3, 0(x2) # store x3 (0x1a91b1c7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000001a91b1c7 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
fnmsub.d f5, f3, f4, f7, dyn # perform operation
fnmsub.d f5, f3, f4, f7, rdn # perform operation
fnmsub.d f5, f3, f4, f7, rmm # perform operation
fnmsub.d f5, f3, f4, f7, rne # perform operation
fnmsub.d f5, f3, f4, f7, rtz # perform operation
fnmsub.d f5, f3, f4, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f3, f4, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f3, f4, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f3, f4, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f3, f4, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f3, f4, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8010000000000000)
li x17, 0x7242384f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff8000000000000 from memory into f4
li x3, 0x39bcf0dd # load x3 with 32 MSBs 0x0000000039bcf0dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000039bcf0dd
sw x3, 0(x2) # store x3 (0x39bcf0dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000039bcf0dd from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
fnmsub.d f17, f4, f18, f29, dyn # perform operation
fnmsub.d f17, f4, f18, f29, rdn # perform operation
fnmsub.d f17, f4, f18, f29, rmm # perform operation
fnmsub.d f17, f4, f18, f29, rne # perform operation
fnmsub.d f17, f4, f18, f29, rtz # perform operation
fnmsub.d f17, f4, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f4, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f4, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f4, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f4, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f4, f18, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7fefffffffffffff)
li x3, 0x2e0c8c11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
li x3, 0x35e9c800 # load x3 with 32 MSBs 0x0000000035e9c800
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035e9c800
sw x3, 0(x2) # store x3 (0x35e9c800) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000035e9c800 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
fnmsub.d f3, f26, f31, f2, dyn # perform operation
fnmsub.d f3, f26, f31, f2, rdn # perform operation
fnmsub.d f3, f26, f31, f2, rmm # perform operation
fnmsub.d f3, f26, f31, f2, rne # perform operation
fnmsub.d f3, f26, f31, f2, rtz # perform operation
fnmsub.d f3, f26, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f26, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f26, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f26, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f26, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f26, f31, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xffefffffffffffff)
li x27, 0x50956df5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
li x3, 0x6442cb2f # load x3 with 32 MSBs 0x000000006442cb2f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006442cb2f
sw x3, 0(x2) # store x3 (0x6442cb2f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000006442cb2f from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
fnmsub.d f27, f25, f16, f30, dyn # perform operation
fnmsub.d f27, f25, f16, f30, rdn # perform operation
fnmsub.d f27, f25, f16, f30, rmm # perform operation
fnmsub.d f27, f25, f16, f30, rne # perform operation
fnmsub.d f27, f25, f16, f30, rtz # perform operation
fnmsub.d f27, f25, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f25, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f25, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f25, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f25, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f25, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xfffffffffffff)
li x21, 0xbca0e513 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
li x3, 0xe4c1ae7d # load x3 with 32 MSBs 0x00000000e4c1ae7d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4c1ae7d
sw x3, 0(x2) # store x3 (0xe4c1ae7d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000e4c1ae7d from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
fnmsub.d f21, f19, f15, f7, dyn # perform operation
fnmsub.d f21, f19, f15, f7, rdn # perform operation
fnmsub.d f21, f19, f15, f7, rmm # perform operation
fnmsub.d f21, f19, f15, f7, rne # perform operation
fnmsub.d f21, f19, f15, f7, rtz # perform operation
fnmsub.d f21, f19, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f19, f15, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x800fffffffffffff)
li x30, 0xe49a902b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
li x3, 0x77f84010 # load x3 with 32 MSBs 0x0000000077f84010
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000077f84010
sw x3, 0(x2) # store x3 (0x77f84010) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000077f84010 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
fnmsub.d f30, f18, f25, f11, dyn # perform operation
fnmsub.d f30, f18, f25, f11, rdn # perform operation
fnmsub.d f30, f18, f25, f11, rmm # perform operation
fnmsub.d f30, f18, f25, f11, rne # perform operation
fnmsub.d f30, f18, f25, f11, rtz # perform operation
fnmsub.d f30, f18, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f18, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f18, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f18, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f18, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f18, f25, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8000000000000)
li x15, 0x778d7d7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
li x3, 0x0f308c96 # load x3 with 32 MSBs 0x000000000f308c96
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f308c96
sw x3, 0(x2) # store x3 (0x0f308c96) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000000f308c96 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
fnmsub.d f15, f22, f8, f2, dyn # perform operation
fnmsub.d f15, f22, f8, f2, rdn # perform operation
fnmsub.d f15, f22, f8, f2, rmm # perform operation
fnmsub.d f15, f22, f8, f2, rne # perform operation
fnmsub.d f15, f22, f8, f2, rtz # perform operation
fnmsub.d f15, f22, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f22, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f22, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f22, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f22, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f22, f8, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8008000000000000)
li x1, 0x80fb9428 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
li x3, 0xf84527fa # load x3 with 32 MSBs 0x00000000f84527fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f84527fa
sw x3, 0(x2) # store x3 (0xf84527fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000f84527fa from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
fnmsub.d f1, f15, f27, f17, dyn # perform operation
fnmsub.d f1, f15, f27, f17, rdn # perform operation
fnmsub.d f1, f15, f27, f17, rmm # perform operation
fnmsub.d f1, f15, f27, f17, rne # perform operation
fnmsub.d f1, f15, f27, f17, rtz # perform operation
fnmsub.d f1, f15, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f15, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f15, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f15, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f15, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f15, f27, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x1)
li x10, 0x4d3648fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
li x3, 0x68e5d177 # load x3 with 32 MSBs 0x0000000068e5d177
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000068e5d177
sw x3, 0(x2) # store x3 (0x68e5d177) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000068e5d177 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
fnmsub.d f10, f11, f22, f12, dyn # perform operation
fnmsub.d f10, f11, f22, f12, rdn # perform operation
fnmsub.d f10, f11, f22, f12, rmm # perform operation
fnmsub.d f10, f11, f22, f12, rne # perform operation
fnmsub.d f10, f11, f22, f12, rtz # perform operation
fnmsub.d f10, f11, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f11, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f11, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f11, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f11, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f11, f22, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8000000000000001)
li x2, 0x9ae66178 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
li x3, 0x0b456ded # load x3 with 32 MSBs 0x000000000b456ded
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000b456ded
sw x3, 0(x2) # store x3 (0x0b456ded) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000000b456ded from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
fnmsub.d f2, f19, f30, f26, dyn # perform operation
fnmsub.d f2, f19, f30, f26, rdn # perform operation
fnmsub.d f2, f19, f30, f26, rmm # perform operation
fnmsub.d f2, f19, f30, f26, rne # perform operation
fnmsub.d f2, f19, f30, f26, rtz # perform operation
fnmsub.d f2, f19, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f19, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f19, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f19, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f19, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f19, f30, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7ff0000000000000)
li x29, 0x05760e05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
li x3, 0xc1c3bf06 # load x3 with 32 MSBs 0x00000000c1c3bf06
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1c3bf06
sw x3, 0(x2) # store x3 (0xc1c3bf06) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000c1c3bf06 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
fnmsub.d f29, f20, f16, f26, dyn # perform operation
fnmsub.d f29, f20, f16, f26, rdn # perform operation
fnmsub.d f29, f20, f16, f26, rmm # perform operation
fnmsub.d f29, f20, f16, f26, rne # perform operation
fnmsub.d f29, f20, f16, f26, rtz # perform operation
fnmsub.d f29, f20, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f20, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f20, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f20, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f20, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f20, f16, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xfff0000000000000)
li x31, 0x4d3b145e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
li x3, 0x9a60a248 # load x3 with 32 MSBs 0x000000009a60a248
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009a60a248
sw x3, 0(x2) # store x3 (0x9a60a248) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000009a60a248 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
fnmsub.d f31, f20, f2, f27, dyn # perform operation
fnmsub.d f31, f20, f2, f27, rdn # perform operation
fnmsub.d f31, f20, f2, f27, rmm # perform operation
fnmsub.d f31, f20, f2, f27, rne # perform operation
fnmsub.d f31, f20, f2, f27, rtz # perform operation
fnmsub.d f31, f20, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f20, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f20, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f20, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f20, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f20, f2, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7ff8000000000000)
li x31, 0xd91286ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff8000000000000 from memory into f4
li x3, 0x52f1ccca # load x3 with 32 MSBs 0x0000000052f1ccca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000052f1ccca
sw x3, 0(x2) # store x3 (0x52f1ccca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000052f1ccca from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
fnmsub.d f31, f4, f14, f21, dyn # perform operation
fnmsub.d f31, f4, f14, f21, rdn # perform operation
fnmsub.d f31, f4, f14, f21, rmm # perform operation
fnmsub.d f31, f4, f14, f21, rne # perform operation
fnmsub.d f31, f4, f14, f21, rtz # perform operation
fnmsub.d f31, f4, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f4, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f4, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f4, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f4, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f4, f14, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7fffffffffffffff)
li x18, 0x691bd3a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
li x3, 0x9fe4dae8 # load x3 with 32 MSBs 0x000000009fe4dae8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009fe4dae8
sw x3, 0(x2) # store x3 (0x9fe4dae8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000009fe4dae8 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
fnmsub.d f18, f20, f17, f4, dyn # perform operation
fnmsub.d f18, f20, f17, f4, rdn # perform operation
fnmsub.d f18, f20, f17, f4, rmm # perform operation
fnmsub.d f18, f20, f17, f4, rne # perform operation
fnmsub.d f18, f20, f17, f4, rtz # perform operation
fnmsub.d f18, f20, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f20, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f20, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f20, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f20, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f20, f17, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7ff0000000000001)
li x10, 0x2559e6cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0xd7b9c596 # load x3 with 32 MSBs 0x00000000d7b9c596
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7b9c596
sw x3, 0(x2) # store x3 (0xd7b9c596) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000d7b9c596 from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
fnmsub.d f10, f24, f1, f30, dyn # perform operation
fnmsub.d f10, f24, f1, f30, rdn # perform operation
fnmsub.d f10, f24, f1, f30, rmm # perform operation
fnmsub.d f10, f24, f1, f30, rne # perform operation
fnmsub.d f10, f24, f1, f30, rtz # perform operation
fnmsub.d f10, f24, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f24, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f24, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f24, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f24, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f24, f1, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7ff7ffffffffffff)
li x2, 0xbbf10ed9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
li x3, 0x5969b1f7 # load x3 with 32 MSBs 0x000000005969b1f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005969b1f7
sw x3, 0(x2) # store x3 (0x5969b1f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000005969b1f7 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff7ffffffffffff from memory into f4
fnmsub.d f2, f19, f7, f4, dyn # perform operation
fnmsub.d f2, f19, f7, f4, rdn # perform operation
fnmsub.d f2, f19, f7, f4, rmm # perform operation
fnmsub.d f2, f19, f7, f4, rne # perform operation
fnmsub.d f2, f19, f7, f4, rtz # perform operation
fnmsub.d f2, f19, f7, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f19, f7, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f19, f7, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f19, f7, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f19, f7, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f19, f7, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x5a392534a57711ad)
li x2, 0xb798dd4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0xc05c8a7d # load x3 with 32 MSBs 0x00000000c05c8a7d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c05c8a7d
sw x3, 0(x2) # store x3 (0xc05c8a7d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000c05c8a7d from memory into f3
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
fnmsub.d f2, f7, f3, f12, dyn # perform operation
fnmsub.d f2, f7, f3, f12, rdn # perform operation
fnmsub.d f2, f7, f3, f12, rmm # perform operation
fnmsub.d f2, f7, f3, f12, rne # perform operation
fnmsub.d f2, f7, f3, f12, rtz # perform operation
fnmsub.d f2, f7, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f7, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f7, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f7, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f7, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f7, f3, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xa6e895993737426c)
li x27, 0xcec1168b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0xfb981759 # load x3 with 32 MSBs 0x00000000fb981759
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fb981759
sw x3, 0(x2) # store x3 (0xfb981759) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000fb981759 from memory into f21
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xa6e895993737426c from memory into f4
fnmsub.d f27, f24, f21, f4, dyn # perform operation
fnmsub.d f27, f24, f21, f4, rdn # perform operation
fnmsub.d f27, f24, f21, f4, rmm # perform operation
fnmsub.d f27, f24, f21, f4, rne # perform operation
fnmsub.d f27, f24, f21, f4, rtz # perform operation
fnmsub.d f27, f24, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f24, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f24, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f24, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f24, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f24, f21, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x0)
li x5, 0x67a66724 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
li x3, 0x86d2ff58 # load x3 with 32 MSBs 0x0000000086d2ff58
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000086d2ff58
sw x3, 0(x2) # store x3 (0x86d2ff58) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000086d2ff58 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
fnmsub.d f5, f25, f31, f2, dyn # perform operation
fnmsub.d f5, f25, f31, f2, rdn # perform operation
fnmsub.d f5, f25, f31, f2, rmm # perform operation
fnmsub.d f5, f25, f31, f2, rne # perform operation
fnmsub.d f5, f25, f31, f2, rtz # perform operation
fnmsub.d f5, f25, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f25, f31, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8000000000000000)
li x28, 0x9c34f464 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
li x3, 0xfde7c8f9 # load x3 with 32 MSBs 0x00000000fde7c8f9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fde7c8f9
sw x3, 0(x2) # store x3 (0xfde7c8f9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000fde7c8f9 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000000 from memory into f2
fnmsub.d f28, f9, f23, f2, dyn # perform operation
fnmsub.d f28, f9, f23, f2, rdn # perform operation
fnmsub.d f28, f9, f23, f2, rmm # perform operation
fnmsub.d f28, f9, f23, f2, rne # perform operation
fnmsub.d f28, f9, f23, f2, rtz # perform operation
fnmsub.d f28, f9, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f9, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f9, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f9, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f9, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f9, f23, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x3ff0000000000000)
li x19, 0x9119ec77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
li x3, 0xc7d18419 # load x3 with 32 MSBs 0x00000000c7d18419
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c7d18419
sw x3, 0(x2) # store x3 (0xc7d18419) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000c7d18419 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
fnmsub.d f19, f17, f27, f31, dyn # perform operation
fnmsub.d f19, f17, f27, f31, rdn # perform operation
fnmsub.d f19, f17, f27, f31, rmm # perform operation
fnmsub.d f19, f17, f27, f31, rne # perform operation
fnmsub.d f19, f17, f27, f31, rtz # perform operation
fnmsub.d f19, f17, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f17, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f17, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f17, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f17, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f17, f27, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xbff0000000000000)
li x21, 0x1d674ed9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0xda44aa91 # load x3 with 32 MSBs 0x00000000da44aa91
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da44aa91
sw x3, 0(x2) # store x3 (0xda44aa91) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000da44aa91 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
fnmsub.d f21, f12, f11, f20, dyn # perform operation
fnmsub.d f21, f12, f11, f20, rdn # perform operation
fnmsub.d f21, f12, f11, f20, rmm # perform operation
fnmsub.d f21, f12, f11, f20, rne # perform operation
fnmsub.d f21, f12, f11, f20, rtz # perform operation
fnmsub.d f21, f12, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f12, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f12, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f12, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f12, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f12, f11, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x3ff8000000000000)
li x14, 0x902f9d6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
li x3, 0x07cc62fa # load x3 with 32 MSBs 0x0000000007cc62fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000007cc62fa
sw x3, 0(x2) # store x3 (0x07cc62fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000007cc62fa from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
fnmsub.d f14, f18, f30, f24, dyn # perform operation
fnmsub.d f14, f18, f30, f24, rdn # perform operation
fnmsub.d f14, f18, f30, f24, rmm # perform operation
fnmsub.d f14, f18, f30, f24, rne # perform operation
fnmsub.d f14, f18, f30, f24, rtz # perform operation
fnmsub.d f14, f18, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f18, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f18, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f18, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f18, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f18, f30, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xbff8000000000000)
li x23, 0x937eafe2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
li x3, 0x9535fba3 # load x3 with 32 MSBs 0x000000009535fba3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009535fba3
sw x3, 0(x2) # store x3 (0x9535fba3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000009535fba3 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
fnmsub.d f23, f14, f29, f3, dyn # perform operation
fnmsub.d f23, f14, f29, f3, rdn # perform operation
fnmsub.d f23, f14, f29, f3, rmm # perform operation
fnmsub.d f23, f14, f29, f3, rne # perform operation
fnmsub.d f23, f14, f29, f3, rtz # perform operation
fnmsub.d f23, f14, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f14, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f14, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f14, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f14, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f14, f29, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x4000000000000000)
li x4, 0xbcbf2ac0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
li x3, 0x611fd93c # load x3 with 32 MSBs 0x00000000611fd93c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000611fd93c
sw x3, 0(x2) # store x3 (0x611fd93c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000611fd93c from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
fnmsub.d f4, f14, f15, f12, dyn # perform operation
fnmsub.d f4, f14, f15, f12, rdn # perform operation
fnmsub.d f4, f14, f15, f12, rmm # perform operation
fnmsub.d f4, f14, f15, f12, rne # perform operation
fnmsub.d f4, f14, f15, f12, rtz # perform operation
fnmsub.d f4, f14, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f14, f15, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xc000000000000000)
li x2, 0x9ef1689b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
li x3, 0xd91e92bf # load x3 with 32 MSBs 0x00000000d91e92bf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d91e92bf
sw x3, 0(x2) # store x3 (0xd91e92bf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000d91e92bf from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
fnmsub.d f2, f30, f31, f15, dyn # perform operation
fnmsub.d f2, f30, f31, f15, rdn # perform operation
fnmsub.d f2, f30, f31, f15, rmm # perform operation
fnmsub.d f2, f30, f31, f15, rne # perform operation
fnmsub.d f2, f30, f31, f15, rtz # perform operation
fnmsub.d f2, f30, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f30, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f30, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f30, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f30, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f30, f31, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x10000000000000)
li x31, 0xdb5a2cb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
li x3, 0x6b28da82 # load x3 with 32 MSBs 0x000000006b28da82
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b28da82
sw x3, 0(x2) # store x3 (0x6b28da82) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000006b28da82 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
fnmsub.d f31, f18, f10, f2, dyn # perform operation
fnmsub.d f31, f18, f10, f2, rdn # perform operation
fnmsub.d f31, f18, f10, f2, rmm # perform operation
fnmsub.d f31, f18, f10, f2, rne # perform operation
fnmsub.d f31, f18, f10, f2, rtz # perform operation
fnmsub.d f31, f18, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f18, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f18, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f18, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f18, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f18, f10, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8010000000000000)
li x28, 0x9559faff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
li x3, 0xed6d805b # load x3 with 32 MSBs 0x00000000ed6d805b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ed6d805b
sw x3, 0(x2) # store x3 (0xed6d805b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000ed6d805b from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
fnmsub.d f28, f24, f30, f20, dyn # perform operation
fnmsub.d f28, f24, f30, f20, rdn # perform operation
fnmsub.d f28, f24, f30, f20, rmm # perform operation
fnmsub.d f28, f24, f30, f20, rne # perform operation
fnmsub.d f28, f24, f30, f20, rtz # perform operation
fnmsub.d f28, f24, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f24, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f24, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f24, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f24, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f24, f30, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7fefffffffffffff)
li x27, 0x953007dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
li x3, 0x10f3d64a # load x3 with 32 MSBs 0x0000000010f3d64a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000010f3d64a
sw x3, 0(x2) # store x3 (0x10f3d64a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000010f3d64a from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
fnmsub.d f27, f24, f12, f23, dyn # perform operation
fnmsub.d f27, f24, f12, f23, rdn # perform operation
fnmsub.d f27, f24, f12, f23, rmm # perform operation
fnmsub.d f27, f24, f12, f23, rne # perform operation
fnmsub.d f27, f24, f12, f23, rtz # perform operation
fnmsub.d f27, f24, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f24, f12, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xffefffffffffffff)
li x13, 0xd638e69d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
li x3, 0x46e83374 # load x3 with 32 MSBs 0x0000000046e83374
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000046e83374
sw x3, 0(x2) # store x3 (0x46e83374) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000046e83374 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
fnmsub.d f13, f7, f27, f29, dyn # perform operation
fnmsub.d f13, f7, f27, f29, rdn # perform operation
fnmsub.d f13, f7, f27, f29, rmm # perform operation
fnmsub.d f13, f7, f27, f29, rne # perform operation
fnmsub.d f13, f7, f27, f29, rtz # perform operation
fnmsub.d f13, f7, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f7, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f7, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f7, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f7, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f7, f27, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xfffffffffffff)
li x25, 0x126baebe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
li x3, 0xa9935ae2 # load x3 with 32 MSBs 0x00000000a9935ae2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9935ae2
sw x3, 0(x2) # store x3 (0xa9935ae2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000a9935ae2 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
fnmsub.d f25, f20, f27, f17, dyn # perform operation
fnmsub.d f25, f20, f27, f17, rdn # perform operation
fnmsub.d f25, f20, f27, f17, rmm # perform operation
fnmsub.d f25, f20, f27, f17, rne # perform operation
fnmsub.d f25, f20, f27, f17, rtz # perform operation
fnmsub.d f25, f20, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f20, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f20, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f20, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f20, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f20, f27, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x800fffffffffffff)
li x27, 0xe0e09745 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
li x3, 0x1f701656 # load x3 with 32 MSBs 0x000000001f701656
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001f701656
sw x3, 0(x2) # store x3 (0x1f701656) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000001f701656 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x800fffffffffffff from memory into f30
fnmsub.d f27, f18, f31, f30, dyn # perform operation
fnmsub.d f27, f18, f31, f30, rdn # perform operation
fnmsub.d f27, f18, f31, f30, rmm # perform operation
fnmsub.d f27, f18, f31, f30, rne # perform operation
fnmsub.d f27, f18, f31, f30, rtz # perform operation
fnmsub.d f27, f18, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f18, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f18, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f18, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f18, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f18, f31, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8000000000000)
li x18, 0xd1e30951 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
li x3, 0x5a9e2925 # load x3 with 32 MSBs 0x000000005a9e2925
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005a9e2925
sw x3, 0(x2) # store x3 (0x5a9e2925) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000005a9e2925 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
fnmsub.d f18, f17, f30, f21, dyn # perform operation
fnmsub.d f18, f17, f30, f21, rdn # perform operation
fnmsub.d f18, f17, f30, f21, rmm # perform operation
fnmsub.d f18, f17, f30, f21, rne # perform operation
fnmsub.d f18, f17, f30, f21, rtz # perform operation
fnmsub.d f18, f17, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f17, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f17, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f17, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f17, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f17, f30, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8008000000000000)
li x20, 0xc8c54ebc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
li x3, 0x123027e1 # load x3 with 32 MSBs 0x00000000123027e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000123027e1
sw x3, 0(x2) # store x3 (0x123027e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000123027e1 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
fnmsub.d f20, f19, f22, f23, dyn # perform operation
fnmsub.d f20, f19, f22, f23, rdn # perform operation
fnmsub.d f20, f19, f22, f23, rmm # perform operation
fnmsub.d f20, f19, f22, f23, rne # perform operation
fnmsub.d f20, f19, f22, f23, rtz # perform operation
fnmsub.d f20, f19, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f19, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f19, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f19, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f19, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f19, f22, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x1)
li x1, 0x8df46236 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
li x3, 0xa83763b9 # load x3 with 32 MSBs 0x00000000a83763b9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a83763b9
sw x3, 0(x2) # store x3 (0xa83763b9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000a83763b9 from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
fnmsub.d f1, f4, f9, f31, dyn # perform operation
fnmsub.d f1, f4, f9, f31, rdn # perform operation
fnmsub.d f1, f4, f9, f31, rmm # perform operation
fnmsub.d f1, f4, f9, f31, rne # perform operation
fnmsub.d f1, f4, f9, f31, rtz # perform operation
fnmsub.d f1, f4, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f4, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f4, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f4, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f4, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f4, f9, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8000000000000001)
li x4, 0x7562a94f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fffffffffffffff from memory into f13
li x3, 0x3dc4dbc8 # load x3 with 32 MSBs 0x000000003dc4dbc8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003dc4dbc8
sw x3, 0(x2) # store x3 (0x3dc4dbc8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000003dc4dbc8 from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
fnmsub.d f4, f13, f2, f1, dyn # perform operation
fnmsub.d f4, f13, f2, f1, rdn # perform operation
fnmsub.d f4, f13, f2, f1, rmm # perform operation
fnmsub.d f4, f13, f2, f1, rne # perform operation
fnmsub.d f4, f13, f2, f1, rtz # perform operation
fnmsub.d f4, f13, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f13, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f13, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f13, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f13, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f13, f2, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7ff0000000000000)
li x19, 0x08a96d82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
li x3, 0x6effa984 # load x3 with 32 MSBs 0x000000006effa984
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006effa984
sw x3, 0(x2) # store x3 (0x6effa984) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000006effa984 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
fnmsub.d f19, f26, f2, f28, dyn # perform operation
fnmsub.d f19, f26, f2, f28, rdn # perform operation
fnmsub.d f19, f26, f2, f28, rmm # perform operation
fnmsub.d f19, f26, f2, f28, rne # perform operation
fnmsub.d f19, f26, f2, f28, rtz # perform operation
fnmsub.d f19, f26, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f26, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f26, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f26, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f26, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f26, f2, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xfff0000000000000)
li x31, 0x56903a77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
li x3, 0x748c1c9b # load x3 with 32 MSBs 0x00000000748c1c9b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000748c1c9b
sw x3, 0(x2) # store x3 (0x748c1c9b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000748c1c9b from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
fnmsub.d f31, f17, f28, f14, dyn # perform operation
fnmsub.d f31, f17, f28, f14, rdn # perform operation
fnmsub.d f31, f17, f28, f14, rmm # perform operation
fnmsub.d f31, f17, f28, f14, rne # perform operation
fnmsub.d f31, f17, f28, f14, rtz # perform operation
fnmsub.d f31, f17, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f17, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f17, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f17, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f17, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f17, f28, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7ff8000000000000)
li x20, 0x599c859b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
li x3, 0x27a7d930 # load x3 with 32 MSBs 0x0000000027a7d930
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000027a7d930
sw x3, 0(x2) # store x3 (0x27a7d930) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000027a7d930 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
fnmsub.d f20, f1, f31, f2, dyn # perform operation
fnmsub.d f20, f1, f31, f2, rdn # perform operation
fnmsub.d f20, f1, f31, f2, rmm # perform operation
fnmsub.d f20, f1, f31, f2, rne # perform operation
fnmsub.d f20, f1, f31, f2, rtz # perform operation
fnmsub.d f20, f1, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f1, f31, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7fffffffffffffff)
li x4, 0x29690725 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
li x3, 0x799f2b74 # load x3 with 32 MSBs 0x00000000799f2b74
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000799f2b74
sw x3, 0(x2) # store x3 (0x799f2b74) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000799f2b74 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
fnmsub.d f4, f30, f22, f6, dyn # perform operation
fnmsub.d f4, f30, f22, f6, rdn # perform operation
fnmsub.d f4, f30, f22, f6, rmm # perform operation
fnmsub.d f4, f30, f22, f6, rne # perform operation
fnmsub.d f4, f30, f22, f6, rtz # perform operation
fnmsub.d f4, f30, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f30, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f30, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f30, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f30, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f30, f22, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7ff0000000000001)
li x7, 0xbc995a1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
li x3, 0xd46ff06b # load x3 with 32 MSBs 0x00000000d46ff06b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d46ff06b
sw x3, 0(x2) # store x3 (0xd46ff06b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000d46ff06b from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
fnmsub.d f7, f16, f10, f19, dyn # perform operation
fnmsub.d f7, f16, f10, f19, rdn # perform operation
fnmsub.d f7, f16, f10, f19, rmm # perform operation
fnmsub.d f7, f16, f10, f19, rne # perform operation
fnmsub.d f7, f16, f10, f19, rtz # perform operation
fnmsub.d f7, f16, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f16, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f16, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f16, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f16, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f16, f10, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7ff7ffffffffffff)
li x16, 0x7af257b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0x3ef743af # load x3 with 32 MSBs 0x000000003ef743af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003ef743af
sw x3, 0(x2) # store x3 (0x3ef743af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000003ef743af from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
fnmsub.d f16, f12, f24, f28, dyn # perform operation
fnmsub.d f16, f12, f24, f28, rdn # perform operation
fnmsub.d f16, f12, f24, f28, rmm # perform operation
fnmsub.d f16, f12, f24, f28, rne # perform operation
fnmsub.d f16, f12, f24, f28, rtz # perform operation
fnmsub.d f16, f12, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f12, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f12, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f12, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f12, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f12, f24, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x5a392534a57711ad)
li x11, 0x2e603a08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
li x3, 0x0219010d # load x3 with 32 MSBs 0x000000000219010d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000219010d
sw x3, 0(x2) # store x3 (0x0219010d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000000219010d from memory into f4
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
fnmsub.d f11, f22, f4, f31, dyn # perform operation
fnmsub.d f11, f22, f4, f31, rdn # perform operation
fnmsub.d f11, f22, f4, f31, rmm # perform operation
fnmsub.d f11, f22, f4, f31, rne # perform operation
fnmsub.d f11, f22, f4, f31, rtz # perform operation
fnmsub.d f11, f22, f4, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f22, f4, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f22, f4, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f22, f4, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f22, f4, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f22, f4, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xa6e895993737426c)
li x28, 0x823d66e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
li x3, 0x6880772c # load x3 with 32 MSBs 0x000000006880772c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006880772c
sw x3, 0(x2) # store x3 (0x6880772c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000006880772c from memory into f15
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
fnmsub.d f28, f11, f15, f9, dyn # perform operation
fnmsub.d f28, f11, f15, f9, rdn # perform operation
fnmsub.d f28, f11, f15, f9, rmm # perform operation
fnmsub.d f28, f11, f15, f9, rne # perform operation
fnmsub.d f28, f11, f15, f9, rtz # perform operation
fnmsub.d f28, f11, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f11, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f11, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f11, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f11, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f11, f15, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x0)
li x24, 0x0d00f72b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
li x3, 0x34a1e832 # load x3 with 32 MSBs 0x0000000034a1e832
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000034a1e832
sw x3, 0(x2) # store x3 (0x34a1e832) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000034a1e832 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
fnmsub.d f24, f17, f19, f1, dyn # perform operation
fnmsub.d f24, f17, f19, f1, rdn # perform operation
fnmsub.d f24, f17, f19, f1, rmm # perform operation
fnmsub.d f24, f17, f19, f1, rne # perform operation
fnmsub.d f24, f17, f19, f1, rtz # perform operation
fnmsub.d f24, f17, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f24, f17, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f24, f17, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f24, f17, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f24, f17, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f24, f17, f19, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8000000000000000)
li x15, 0x0b1ea23a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
li x3, 0x917f96db # load x3 with 32 MSBs 0x00000000917f96db
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000917f96db
sw x3, 0(x2) # store x3 (0x917f96db) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000917f96db from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
fnmsub.d f15, f18, f9, f4, dyn # perform operation
fnmsub.d f15, f18, f9, f4, rdn # perform operation
fnmsub.d f15, f18, f9, f4, rmm # perform operation
fnmsub.d f15, f18, f9, f4, rne # perform operation
fnmsub.d f15, f18, f9, f4, rtz # perform operation
fnmsub.d f15, f18, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f15, f18, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f15, f18, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f15, f18, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f15, f18, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f15, f18, f9, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x3ff0000000000000)
li x3, 0xcc878906 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
li x3, 0xf5fae8c0 # load x3 with 32 MSBs 0x00000000f5fae8c0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f5fae8c0
sw x3, 0(x2) # store x3 (0xf5fae8c0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000f5fae8c0 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
fnmsub.d f3, f2, f8, f9, dyn # perform operation
fnmsub.d f3, f2, f8, f9, rdn # perform operation
fnmsub.d f3, f2, f8, f9, rmm # perform operation
fnmsub.d f3, f2, f8, f9, rne # perform operation
fnmsub.d f3, f2, f8, f9, rtz # perform operation
fnmsub.d f3, f2, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f2, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f2, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f2, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f2, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f2, f8, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xbff0000000000000)
li x22, 0x8ecd1798 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
li x3, 0x94c9500d # load x3 with 32 MSBs 0x0000000094c9500d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000094c9500d
sw x3, 0(x2) # store x3 (0x94c9500d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000094c9500d from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
fnmsub.d f22, f15, f9, f4, dyn # perform operation
fnmsub.d f22, f15, f9, f4, rdn # perform operation
fnmsub.d f22, f15, f9, f4, rmm # perform operation
fnmsub.d f22, f15, f9, f4, rne # perform operation
fnmsub.d f22, f15, f9, f4, rtz # perform operation
fnmsub.d f22, f15, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f15, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f15, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f15, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f15, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f15, f9, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x3ff8000000000000)
li x26, 0x53212620 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
li x3, 0x5ba73d89 # load x3 with 32 MSBs 0x000000005ba73d89
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005ba73d89
sw x3, 0(x2) # store x3 (0x5ba73d89) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000005ba73d89 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
fnmsub.d f26, f14, f1, f21, dyn # perform operation
fnmsub.d f26, f14, f1, f21, rdn # perform operation
fnmsub.d f26, f14, f1, f21, rmm # perform operation
fnmsub.d f26, f14, f1, f21, rne # perform operation
fnmsub.d f26, f14, f1, f21, rtz # perform operation
fnmsub.d f26, f14, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f14, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f14, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f14, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f14, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f14, f1, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xbff8000000000000)
li x31, 0x937b4f1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
li x3, 0x7f66a936 # load x3 with 32 MSBs 0x000000007f66a936
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f66a936
sw x3, 0(x2) # store x3 (0x7f66a936) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000007f66a936 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
fnmsub.d f31, f13, f5, f7, dyn # perform operation
fnmsub.d f31, f13, f5, f7, rdn # perform operation
fnmsub.d f31, f13, f5, f7, rmm # perform operation
fnmsub.d f31, f13, f5, f7, rne # perform operation
fnmsub.d f31, f13, f5, f7, rtz # perform operation
fnmsub.d f31, f13, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f13, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f13, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f13, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f13, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f13, f5, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x4000000000000000)
li x28, 0x53a2b460 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
li x3, 0x9f5eb0cc # load x3 with 32 MSBs 0x000000009f5eb0cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f5eb0cc
sw x3, 0(x2) # store x3 (0x9f5eb0cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000009f5eb0cc from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
fnmsub.d f28, f2, f14, f11, dyn # perform operation
fnmsub.d f28, f2, f14, f11, rdn # perform operation
fnmsub.d f28, f2, f14, f11, rmm # perform operation
fnmsub.d f28, f2, f14, f11, rne # perform operation
fnmsub.d f28, f2, f14, f11, rtz # perform operation
fnmsub.d f28, f2, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f2, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f2, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f2, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f2, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f2, f14, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xc000000000000000)
li x8, 0x565c78c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
li x3, 0xd2b7616e # load x3 with 32 MSBs 0x00000000d2b7616e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d2b7616e
sw x3, 0(x2) # store x3 (0xd2b7616e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000d2b7616e from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
fnmsub.d f8, f7, f14, f1, dyn # perform operation
fnmsub.d f8, f7, f14, f1, rdn # perform operation
fnmsub.d f8, f7, f14, f1, rmm # perform operation
fnmsub.d f8, f7, f14, f1, rne # perform operation
fnmsub.d f8, f7, f14, f1, rtz # perform operation
fnmsub.d f8, f7, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f7, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f7, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f7, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f7, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f7, f14, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x10000000000000)
li x5, 0x0e203ad6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
li x3, 0x482bffa5 # load x3 with 32 MSBs 0x00000000482bffa5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000482bffa5
sw x3, 0(x2) # store x3 (0x482bffa5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000482bffa5 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
fnmsub.d f5, f17, f31, f25, dyn # perform operation
fnmsub.d f5, f17, f31, f25, rdn # perform operation
fnmsub.d f5, f17, f31, f25, rmm # perform operation
fnmsub.d f5, f17, f31, f25, rne # perform operation
fnmsub.d f5, f17, f31, f25, rtz # perform operation
fnmsub.d f5, f17, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f17, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f17, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f17, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f17, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f17, f31, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8010000000000000)
li x13, 0xea99ffcd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
li x3, 0x6690205d # load x3 with 32 MSBs 0x000000006690205d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006690205d
sw x3, 0(x2) # store x3 (0x6690205d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006690205d from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
fnmsub.d f13, f15, f18, f2, dyn # perform operation
fnmsub.d f13, f15, f18, f2, rdn # perform operation
fnmsub.d f13, f15, f18, f2, rmm # perform operation
fnmsub.d f13, f15, f18, f2, rne # perform operation
fnmsub.d f13, f15, f18, f2, rtz # perform operation
fnmsub.d f13, f15, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f15, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f15, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f15, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f15, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f15, f18, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7fefffffffffffff)
li x29, 0xc9fa2038 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
li x3, 0x54b92a6a # load x3 with 32 MSBs 0x0000000054b92a6a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000054b92a6a
sw x3, 0(x2) # store x3 (0x54b92a6a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000054b92a6a from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
fnmsub.d f29, f8, f22, f7, dyn # perform operation
fnmsub.d f29, f8, f22, f7, rdn # perform operation
fnmsub.d f29, f8, f22, f7, rmm # perform operation
fnmsub.d f29, f8, f22, f7, rne # perform operation
fnmsub.d f29, f8, f22, f7, rtz # perform operation
fnmsub.d f29, f8, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f8, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f8, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f8, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f8, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f8, f22, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xffefffffffffffff)
li x5, 0xff1193b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000001 from memory into f1
li x3, 0x0fd6160b # load x3 with 32 MSBs 0x000000000fd6160b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000fd6160b
sw x3, 0(x2) # store x3 (0x0fd6160b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000000fd6160b from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
fnmsub.d f5, f1, f31, f4, dyn # perform operation
fnmsub.d f5, f1, f31, f4, rdn # perform operation
fnmsub.d f5, f1, f31, f4, rmm # perform operation
fnmsub.d f5, f1, f31, f4, rne # perform operation
fnmsub.d f5, f1, f31, f4, rtz # perform operation
fnmsub.d f5, f1, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f1, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f1, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f1, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f1, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f1, f31, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xfffffffffffff)
li x7, 0x7b992973 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
li x3, 0x18c840d5 # load x3 with 32 MSBs 0x0000000018c840d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018c840d5
sw x3, 0(x2) # store x3 (0x18c840d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000018c840d5 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
fnmsub.d f7, f26, f3, f21, dyn # perform operation
fnmsub.d f7, f26, f3, f21, rdn # perform operation
fnmsub.d f7, f26, f3, f21, rmm # perform operation
fnmsub.d f7, f26, f3, f21, rne # perform operation
fnmsub.d f7, f26, f3, f21, rtz # perform operation
fnmsub.d f7, f26, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f26, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f26, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f26, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f26, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f26, f3, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x800fffffffffffff)
li x26, 0x4450a645 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
li x3, 0x84b130f6 # load x3 with 32 MSBs 0x0000000084b130f6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084b130f6
sw x3, 0(x2) # store x3 (0x84b130f6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000084b130f6 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
fnmsub.d f26, f14, f30, f11, dyn # perform operation
fnmsub.d f26, f14, f30, f11, rdn # perform operation
fnmsub.d f26, f14, f30, f11, rmm # perform operation
fnmsub.d f26, f14, f30, f11, rne # perform operation
fnmsub.d f26, f14, f30, f11, rtz # perform operation
fnmsub.d f26, f14, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f14, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f14, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f14, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f14, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f14, f30, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8000000000000)
li x30, 0x8722bd4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0x34303a49 # load x3 with 32 MSBs 0x0000000034303a49
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000034303a49
sw x3, 0(x2) # store x3 (0x34303a49) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000034303a49 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
fnmsub.d f30, f4, f19, f1, dyn # perform operation
fnmsub.d f30, f4, f19, f1, rdn # perform operation
fnmsub.d f30, f4, f19, f1, rmm # perform operation
fnmsub.d f30, f4, f19, f1, rne # perform operation
fnmsub.d f30, f4, f19, f1, rtz # perform operation
fnmsub.d f30, f4, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f4, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f4, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f4, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f4, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f4, f19, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8008000000000000)
li x21, 0x3167a153 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
li x3, 0x21cb1baf # load x3 with 32 MSBs 0x0000000021cb1baf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000021cb1baf
sw x3, 0(x2) # store x3 (0x21cb1baf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000021cb1baf from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
fnmsub.d f21, f5, f11, f12, dyn # perform operation
fnmsub.d f21, f5, f11, f12, rdn # perform operation
fnmsub.d f21, f5, f11, f12, rmm # perform operation
fnmsub.d f21, f5, f11, f12, rne # perform operation
fnmsub.d f21, f5, f11, f12, rtz # perform operation
fnmsub.d f21, f5, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f5, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f5, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f5, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f5, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f5, f11, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x1)
li x14, 0xe6b3edc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0x83a0c9f7 # load x3 with 32 MSBs 0x0000000083a0c9f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000083a0c9f7
sw x3, 0(x2) # store x3 (0x83a0c9f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000083a0c9f7 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
fnmsub.d f14, f4, f5, f2, dyn # perform operation
fnmsub.d f14, f4, f5, f2, rdn # perform operation
fnmsub.d f14, f4, f5, f2, rmm # perform operation
fnmsub.d f14, f4, f5, f2, rne # perform operation
fnmsub.d f14, f4, f5, f2, rtz # perform operation
fnmsub.d f14, f4, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f4, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f4, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f4, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f4, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f4, f5, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8000000000000001)
li x11, 0x933bcad5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
li x3, 0xeffb5b4f # load x3 with 32 MSBs 0x00000000effb5b4f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000effb5b4f
sw x3, 0(x2) # store x3 (0xeffb5b4f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000effb5b4f from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
fnmsub.d f11, f15, f8, f6, dyn # perform operation
fnmsub.d f11, f15, f8, f6, rdn # perform operation
fnmsub.d f11, f15, f8, f6, rmm # perform operation
fnmsub.d f11, f15, f8, f6, rne # perform operation
fnmsub.d f11, f15, f8, f6, rtz # perform operation
fnmsub.d f11, f15, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f15, f8, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7ff0000000000000)
li x7, 0xbc0d73af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
li x3, 0x933e0cc6 # load x3 with 32 MSBs 0x00000000933e0cc6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000933e0cc6
sw x3, 0(x2) # store x3 (0x933e0cc6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000933e0cc6 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
fnmsub.d f7, f6, f25, f27, dyn # perform operation
fnmsub.d f7, f6, f25, f27, rdn # perform operation
fnmsub.d f7, f6, f25, f27, rmm # perform operation
fnmsub.d f7, f6, f25, f27, rne # perform operation
fnmsub.d f7, f6, f25, f27, rtz # perform operation
fnmsub.d f7, f6, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f6, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f6, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f6, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f6, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f6, f25, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xfff0000000000000)
li x29, 0x019d103e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
li x3, 0xecb9f0ac # load x3 with 32 MSBs 0x00000000ecb9f0ac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ecb9f0ac
sw x3, 0(x2) # store x3 (0xecb9f0ac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000ecb9f0ac from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
fnmsub.d f29, f18, f19, f12, dyn # perform operation
fnmsub.d f29, f18, f19, f12, rdn # perform operation
fnmsub.d f29, f18, f19, f12, rmm # perform operation
fnmsub.d f29, f18, f19, f12, rne # perform operation
fnmsub.d f29, f18, f19, f12, rtz # perform operation
fnmsub.d f29, f18, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f18, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f18, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f18, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f18, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f18, f19, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7ff8000000000000)
li x28, 0xc0f2779b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
li x3, 0x232be270 # load x3 with 32 MSBs 0x00000000232be270
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000232be270
sw x3, 0(x2) # store x3 (0x232be270) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000232be270 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
fnmsub.d f28, f22, f2, f15, dyn # perform operation
fnmsub.d f28, f22, f2, f15, rdn # perform operation
fnmsub.d f28, f22, f2, f15, rmm # perform operation
fnmsub.d f28, f22, f2, f15, rne # perform operation
fnmsub.d f28, f22, f2, f15, rtz # perform operation
fnmsub.d f28, f22, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f22, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f22, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f22, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f22, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f22, f2, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7fffffffffffffff)
li x31, 0x91532769 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
li x3, 0x9682985b # load x3 with 32 MSBs 0x000000009682985b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009682985b
sw x3, 0(x2) # store x3 (0x9682985b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000009682985b from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
fnmsub.d f31, f22, f17, f27, dyn # perform operation
fnmsub.d f31, f22, f17, f27, rdn # perform operation
fnmsub.d f31, f22, f17, f27, rmm # perform operation
fnmsub.d f31, f22, f17, f27, rne # perform operation
fnmsub.d f31, f22, f17, f27, rtz # perform operation
fnmsub.d f31, f22, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f22, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f22, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f22, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f22, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f22, f17, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7ff0000000000001)
li x10, 0x5f0e1151 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
li x3, 0xa90a7165 # load x3 with 32 MSBs 0x00000000a90a7165
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a90a7165
sw x3, 0(x2) # store x3 (0xa90a7165) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000a90a7165 from memory into f4
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
fnmsub.d f10, f16, f4, f22, dyn # perform operation
fnmsub.d f10, f16, f4, f22, rdn # perform operation
fnmsub.d f10, f16, f4, f22, rmm # perform operation
fnmsub.d f10, f16, f4, f22, rne # perform operation
fnmsub.d f10, f16, f4, f22, rtz # perform operation
fnmsub.d f10, f16, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f16, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f16, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f16, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f16, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f16, f4, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7ff7ffffffffffff)
li x29, 0x31ecde14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0x72b1b266 # load x3 with 32 MSBs 0x0000000072b1b266
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000072b1b266
sw x3, 0(x2) # store x3 (0x72b1b266) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000072b1b266 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
fnmsub.d f29, f3, f31, f30, dyn # perform operation
fnmsub.d f29, f3, f31, f30, rdn # perform operation
fnmsub.d f29, f3, f31, f30, rmm # perform operation
fnmsub.d f29, f3, f31, f30, rne # perform operation
fnmsub.d f29, f3, f31, f30, rtz # perform operation
fnmsub.d f29, f3, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f3, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f3, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f3, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f3, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f3, f31, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x5a392534a57711ad)
li x21, 0x0343d92c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0x42ee0393 # load x3 with 32 MSBs 0x0000000042ee0393
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042ee0393
sw x3, 0(x2) # store x3 (0x42ee0393) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000042ee0393 from memory into f2
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
fnmsub.d f21, f29, f2, f13, dyn # perform operation
fnmsub.d f21, f29, f2, f13, rdn # perform operation
fnmsub.d f21, f29, f2, f13, rmm # perform operation
fnmsub.d f21, f29, f2, f13, rne # perform operation
fnmsub.d f21, f29, f2, f13, rtz # perform operation
fnmsub.d f21, f29, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f29, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f29, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f29, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f29, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f29, f2, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xa6e895993737426c)
li x19, 0x9dbd32b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0x55ff3ab2 # load x3 with 32 MSBs 0x0000000055ff3ab2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000055ff3ab2
sw x3, 0(x2) # store x3 (0x55ff3ab2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000055ff3ab2 from memory into f2
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
fnmsub.d f19, f4, f2, f6, dyn # perform operation
fnmsub.d f19, f4, f2, f6, rdn # perform operation
fnmsub.d f19, f4, f2, f6, rmm # perform operation
fnmsub.d f19, f4, f2, f6, rne # perform operation
fnmsub.d f19, f4, f2, f6, rtz # perform operation
fnmsub.d f19, f4, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f4, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f4, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f4, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f4, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f4, f2, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x0)
li x20, 0x3a6d3494 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
li x3, 0xe5d2cded # load x3 with 32 MSBs 0x00000000e5d2cded
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e5d2cded
sw x3, 0(x2) # store x3 (0xe5d2cded) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000e5d2cded from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
fnmsub.d f20, f25, f13, f27, dyn # perform operation
fnmsub.d f20, f25, f13, f27, rdn # perform operation
fnmsub.d f20, f25, f13, f27, rmm # perform operation
fnmsub.d f20, f25, f13, f27, rne # perform operation
fnmsub.d f20, f25, f13, f27, rtz # perform operation
fnmsub.d f20, f25, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f25, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f25, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f25, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f25, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f25, f13, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8000000000000000)
li x21, 0x27b581e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
li x3, 0x95cdc2d3 # load x3 with 32 MSBs 0x0000000095cdc2d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095cdc2d3
sw x3, 0(x2) # store x3 (0x95cdc2d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000095cdc2d3 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
fnmsub.d f21, f28, f31, f27, dyn # perform operation
fnmsub.d f21, f28, f31, f27, rdn # perform operation
fnmsub.d f21, f28, f31, f27, rmm # perform operation
fnmsub.d f21, f28, f31, f27, rne # perform operation
fnmsub.d f21, f28, f31, f27, rtz # perform operation
fnmsub.d f21, f28, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f28, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f28, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f28, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f28, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f28, f31, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x3ff0000000000000)
li x9, 0xbbd35f89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
li x3, 0x899b2be4 # load x3 with 32 MSBs 0x00000000899b2be4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000899b2be4
sw x3, 0(x2) # store x3 (0x899b2be4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000899b2be4 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
fnmsub.d f9, f1, f11, f13, dyn # perform operation
fnmsub.d f9, f1, f11, f13, rdn # perform operation
fnmsub.d f9, f1, f11, f13, rmm # perform operation
fnmsub.d f9, f1, f11, f13, rne # perform operation
fnmsub.d f9, f1, f11, f13, rtz # perform operation
fnmsub.d f9, f1, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f1, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f1, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f1, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f1, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f1, f11, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xbff0000000000000)
li x20, 0x962dac0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
li x3, 0x762cdbfd # load x3 with 32 MSBs 0x00000000762cdbfd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000762cdbfd
sw x3, 0(x2) # store x3 (0x762cdbfd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000762cdbfd from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
fnmsub.d f20, f16, f3, f11, dyn # perform operation
fnmsub.d f20, f16, f3, f11, rdn # perform operation
fnmsub.d f20, f16, f3, f11, rmm # perform operation
fnmsub.d f20, f16, f3, f11, rne # perform operation
fnmsub.d f20, f16, f3, f11, rtz # perform operation
fnmsub.d f20, f16, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f16, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f16, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f16, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f16, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f16, f3, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x3ff8000000000000)
li x30, 0x34ef8b14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
li x3, 0x15498722 # load x3 with 32 MSBs 0x0000000015498722
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000015498722
sw x3, 0(x2) # store x3 (0x15498722) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000015498722 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
fnmsub.d f30, f26, f19, f4, dyn # perform operation
fnmsub.d f30, f26, f19, f4, rdn # perform operation
fnmsub.d f30, f26, f19, f4, rmm # perform operation
fnmsub.d f30, f26, f19, f4, rne # perform operation
fnmsub.d f30, f26, f19, f4, rtz # perform operation
fnmsub.d f30, f26, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f26, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f26, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f26, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f26, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f26, f19, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xbff8000000000000)
li x29, 0xadd1bf52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
li x3, 0x7ca5c173 # load x3 with 32 MSBs 0x000000007ca5c173
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ca5c173
sw x3, 0(x2) # store x3 (0x7ca5c173) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000007ca5c173 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
fnmsub.d f29, f30, f12, f6, dyn # perform operation
fnmsub.d f29, f30, f12, f6, rdn # perform operation
fnmsub.d f29, f30, f12, f6, rmm # perform operation
fnmsub.d f29, f30, f12, f6, rne # perform operation
fnmsub.d f29, f30, f12, f6, rtz # perform operation
fnmsub.d f29, f30, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f30, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f30, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f30, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f30, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f30, f12, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x4000000000000000)
li x7, 0x0ebbc88c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
li x3, 0x82817c1b # load x3 with 32 MSBs 0x0000000082817c1b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000082817c1b
sw x3, 0(x2) # store x3 (0x82817c1b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000082817c1b from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
fnmsub.d f7, f5, f21, f11, dyn # perform operation
fnmsub.d f7, f5, f21, f11, rdn # perform operation
fnmsub.d f7, f5, f21, f11, rmm # perform operation
fnmsub.d f7, f5, f21, f11, rne # perform operation
fnmsub.d f7, f5, f21, f11, rtz # perform operation
fnmsub.d f7, f5, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f5, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f5, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f5, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f5, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f5, f21, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xc000000000000000)
li x2, 0x18d3f581 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
li x3, 0xe8097779 # load x3 with 32 MSBs 0x00000000e8097779
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8097779
sw x3, 0(x2) # store x3 (0xe8097779) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000e8097779 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
fnmsub.d f2, f23, f13, f5, dyn # perform operation
fnmsub.d f2, f23, f13, f5, rdn # perform operation
fnmsub.d f2, f23, f13, f5, rmm # perform operation
fnmsub.d f2, f23, f13, f5, rne # perform operation
fnmsub.d f2, f23, f13, f5, rtz # perform operation
fnmsub.d f2, f23, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f23, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f23, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f23, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f23, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f23, f13, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x10000000000000)
li x21, 0x87108bbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff7ffffffffffff from memory into f4
li x3, 0x60e42af0 # load x3 with 32 MSBs 0x0000000060e42af0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000060e42af0
sw x3, 0(x2) # store x3 (0x60e42af0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000060e42af0 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
fnmsub.d f21, f4, f18, f26, dyn # perform operation
fnmsub.d f21, f4, f18, f26, rdn # perform operation
fnmsub.d f21, f4, f18, f26, rmm # perform operation
fnmsub.d f21, f4, f18, f26, rne # perform operation
fnmsub.d f21, f4, f18, f26, rtz # perform operation
fnmsub.d f21, f4, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f4, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f4, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f4, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f4, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f4, f18, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8010000000000000)
li x11, 0xdd7978d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
li x3, 0x8ec5ee69 # load x3 with 32 MSBs 0x000000008ec5ee69
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008ec5ee69
sw x3, 0(x2) # store x3 (0x8ec5ee69) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000008ec5ee69 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
fnmsub.d f11, f19, f5, f10, dyn # perform operation
fnmsub.d f11, f19, f5, f10, rdn # perform operation
fnmsub.d f11, f19, f5, f10, rmm # perform operation
fnmsub.d f11, f19, f5, f10, rne # perform operation
fnmsub.d f11, f19, f5, f10, rtz # perform operation
fnmsub.d f11, f19, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f19, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f19, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f19, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f19, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f19, f5, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7fefffffffffffff)
li x20, 0xfa796c1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
li x3, 0x206ed83a # load x3 with 32 MSBs 0x00000000206ed83a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000206ed83a
sw x3, 0(x2) # store x3 (0x206ed83a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000206ed83a from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
fnmsub.d f20, f10, f14, f26, dyn # perform operation
fnmsub.d f20, f10, f14, f26, rdn # perform operation
fnmsub.d f20, f10, f14, f26, rmm # perform operation
fnmsub.d f20, f10, f14, f26, rne # perform operation
fnmsub.d f20, f10, f14, f26, rtz # perform operation
fnmsub.d f20, f10, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f20, f10, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f20, f10, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f20, f10, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f20, f10, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f20, f10, f14, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xffefffffffffffff)
li x3, 0xb0137bb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
li x3, 0x0dde0944 # load x3 with 32 MSBs 0x000000000dde0944
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000dde0944
sw x3, 0(x2) # store x3 (0x0dde0944) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000000dde0944 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
fnmsub.d f3, f20, f7, f18, dyn # perform operation
fnmsub.d f3, f20, f7, f18, rdn # perform operation
fnmsub.d f3, f20, f7, f18, rmm # perform operation
fnmsub.d f3, f20, f7, f18, rne # perform operation
fnmsub.d f3, f20, f7, f18, rtz # perform operation
fnmsub.d f3, f20, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f20, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f20, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f20, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f20, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f20, f7, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xfffffffffffff)
li x28, 0xd10e3fcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0xceb1c73b # load x3 with 32 MSBs 0x00000000ceb1c73b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ceb1c73b
sw x3, 0(x2) # store x3 (0xceb1c73b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000ceb1c73b from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
fnmsub.d f28, f11, f24, f20, dyn # perform operation
fnmsub.d f28, f11, f24, f20, rdn # perform operation
fnmsub.d f28, f11, f24, f20, rmm # perform operation
fnmsub.d f28, f11, f24, f20, rne # perform operation
fnmsub.d f28, f11, f24, f20, rtz # perform operation
fnmsub.d f28, f11, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f11, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f11, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f11, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f11, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f11, f24, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x800fffffffffffff)
li x25, 0xce6b825f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
li x3, 0x7675e16d # load x3 with 32 MSBs 0x000000007675e16d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007675e16d
sw x3, 0(x2) # store x3 (0x7675e16d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000007675e16d from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
fnmsub.d f25, f26, f22, f27, dyn # perform operation
fnmsub.d f25, f26, f22, f27, rdn # perform operation
fnmsub.d f25, f26, f22, f27, rmm # perform operation
fnmsub.d f25, f26, f22, f27, rne # perform operation
fnmsub.d f25, f26, f22, f27, rtz # perform operation
fnmsub.d f25, f26, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f26, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f26, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f26, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f26, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f26, f22, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8000000000000)
li x29, 0xb1218d0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
li x3, 0x3105270d # load x3 with 32 MSBs 0x000000003105270d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003105270d
sw x3, 0(x2) # store x3 (0x3105270d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000003105270d from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
fnmsub.d f29, f31, f10, f16, dyn # perform operation
fnmsub.d f29, f31, f10, f16, rdn # perform operation
fnmsub.d f29, f31, f10, f16, rmm # perform operation
fnmsub.d f29, f31, f10, f16, rne # perform operation
fnmsub.d f29, f31, f10, f16, rtz # perform operation
fnmsub.d f29, f31, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f31, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f31, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f31, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f31, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f31, f10, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8008000000000000)
li x25, 0x858c5316 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
li x3, 0xd4e61a63 # load x3 with 32 MSBs 0x00000000d4e61a63
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d4e61a63
sw x3, 0(x2) # store x3 (0xd4e61a63) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000d4e61a63 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
fnmsub.d f25, f19, f27, f29, dyn # perform operation
fnmsub.d f25, f19, f27, f29, rdn # perform operation
fnmsub.d f25, f19, f27, f29, rmm # perform operation
fnmsub.d f25, f19, f27, f29, rne # perform operation
fnmsub.d f25, f19, f27, f29, rtz # perform operation
fnmsub.d f25, f19, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f25, f19, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f25, f19, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f25, f19, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f25, f19, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f25, f19, f27, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x1)
li x27, 0x3089726b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
li x3, 0x14152087 # load x3 with 32 MSBs 0x0000000014152087
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014152087
sw x3, 0(x2) # store x3 (0x14152087) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000014152087 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
fnmsub.d f27, f25, f31, f30, dyn # perform operation
fnmsub.d f27, f25, f31, f30, rdn # perform operation
fnmsub.d f27, f25, f31, f30, rmm # perform operation
fnmsub.d f27, f25, f31, f30, rne # perform operation
fnmsub.d f27, f25, f31, f30, rtz # perform operation
fnmsub.d f27, f25, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f25, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f25, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f25, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f25, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f25, f31, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8000000000000001)
li x6, 0x611df178 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
li x3, 0x428e9f68 # load x3 with 32 MSBs 0x00000000428e9f68
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000428e9f68
sw x3, 0(x2) # store x3 (0x428e9f68) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000428e9f68 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
fnmsub.d f6, f28, f25, f4, dyn # perform operation
fnmsub.d f6, f28, f25, f4, rdn # perform operation
fnmsub.d f6, f28, f25, f4, rmm # perform operation
fnmsub.d f6, f28, f25, f4, rne # perform operation
fnmsub.d f6, f28, f25, f4, rtz # perform operation
fnmsub.d f6, f28, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f28, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f28, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f28, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f28, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f28, f25, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7ff0000000000000)
li x16, 0x6f86f3ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff7ffffffffffff from memory into f27
li x3, 0xbc9e4cec # load x3 with 32 MSBs 0x00000000bc9e4cec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc9e4cec
sw x3, 0(x2) # store x3 (0xbc9e4cec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000bc9e4cec from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
fnmsub.d f16, f27, f12, f6, dyn # perform operation
fnmsub.d f16, f27, f12, f6, rdn # perform operation
fnmsub.d f16, f27, f12, f6, rmm # perform operation
fnmsub.d f16, f27, f12, f6, rne # perform operation
fnmsub.d f16, f27, f12, f6, rtz # perform operation
fnmsub.d f16, f27, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f27, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f27, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f27, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f27, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f27, f12, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xfff0000000000000)
li x1, 0xcf68edd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
li x3, 0x46e7e550 # load x3 with 32 MSBs 0x0000000046e7e550
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000046e7e550
sw x3, 0(x2) # store x3 (0x46e7e550) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000046e7e550 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
fnmsub.d f1, f8, f14, f9, dyn # perform operation
fnmsub.d f1, f8, f14, f9, rdn # perform operation
fnmsub.d f1, f8, f14, f9, rmm # perform operation
fnmsub.d f1, f8, f14, f9, rne # perform operation
fnmsub.d f1, f8, f14, f9, rtz # perform operation
fnmsub.d f1, f8, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f8, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f8, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f8, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f8, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f8, f14, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7ff8000000000000)
li x29, 0x590628fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
li x3, 0xa9c5ed34 # load x3 with 32 MSBs 0x00000000a9c5ed34
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9c5ed34
sw x3, 0(x2) # store x3 (0xa9c5ed34) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000a9c5ed34 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
fnmsub.d f29, f19, f22, f24, dyn # perform operation
fnmsub.d f29, f19, f22, f24, rdn # perform operation
fnmsub.d f29, f19, f22, f24, rmm # perform operation
fnmsub.d f29, f19, f22, f24, rne # perform operation
fnmsub.d f29, f19, f22, f24, rtz # perform operation
fnmsub.d f29, f19, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f19, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f19, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f19, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f19, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f19, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7fffffffffffffff)
li x12, 0x72128ab7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
li x3, 0x95790f00 # load x3 with 32 MSBs 0x0000000095790f00
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095790f00
sw x3, 0(x2) # store x3 (0x95790f00) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000095790f00 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
fnmsub.d f12, f26, f4, f1, dyn # perform operation
fnmsub.d f12, f26, f4, f1, rdn # perform operation
fnmsub.d f12, f26, f4, f1, rmm # perform operation
fnmsub.d f12, f26, f4, f1, rne # perform operation
fnmsub.d f12, f26, f4, f1, rtz # perform operation
fnmsub.d f12, f26, f4, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f26, f4, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f26, f4, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f26, f4, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f26, f4, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f26, f4, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7ff0000000000001)
li x11, 0x6cae65ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
li x3, 0x545d2641 # load x3 with 32 MSBs 0x00000000545d2641
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000545d2641
sw x3, 0(x2) # store x3 (0x545d2641) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000545d2641 from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
fnmsub.d f11, f13, f3, f18, dyn # perform operation
fnmsub.d f11, f13, f3, f18, rdn # perform operation
fnmsub.d f11, f13, f3, f18, rmm # perform operation
fnmsub.d f11, f13, f3, f18, rne # perform operation
fnmsub.d f11, f13, f3, f18, rtz # perform operation
fnmsub.d f11, f13, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f13, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f13, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f13, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f13, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f13, f3, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7ff7ffffffffffff)
li x10, 0x00506350 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
li x3, 0x0173bd18 # load x3 with 32 MSBs 0x000000000173bd18
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000173bd18
sw x3, 0(x2) # store x3 (0x0173bd18) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000000173bd18 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
fnmsub.d f10, f25, f16, f17, dyn # perform operation
fnmsub.d f10, f25, f16, f17, rdn # perform operation
fnmsub.d f10, f25, f16, f17, rmm # perform operation
fnmsub.d f10, f25, f16, f17, rne # perform operation
fnmsub.d f10, f25, f16, f17, rtz # perform operation
fnmsub.d f10, f25, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f25, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f25, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f25, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f25, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f25, f16, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x5a392534a57711ad)
li x31, 0x3af8e719 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
li x3, 0xdd896d7e # load x3 with 32 MSBs 0x00000000dd896d7e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd896d7e
sw x3, 0(x2) # store x3 (0xdd896d7e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000dd896d7e from memory into f17
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
fnmsub.d f31, f9, f17, f22, dyn # perform operation
fnmsub.d f31, f9, f17, f22, rdn # perform operation
fnmsub.d f31, f9, f17, f22, rmm # perform operation
fnmsub.d f31, f9, f17, f22, rne # perform operation
fnmsub.d f31, f9, f17, f22, rtz # perform operation
fnmsub.d f31, f9, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f9, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f9, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f9, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f9, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f9, f17, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xa6e895993737426c)
li x18, 0xb627e5af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0xee7a78bd # load x3 with 32 MSBs 0x00000000ee7a78bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee7a78bd
sw x3, 0(x2) # store x3 (0xee7a78bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000ee7a78bd from memory into f3
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
fnmsub.d f18, f11, f3, f17, dyn # perform operation
fnmsub.d f18, f11, f3, f17, rdn # perform operation
fnmsub.d f18, f11, f3, f17, rmm # perform operation
fnmsub.d f18, f11, f3, f17, rne # perform operation
fnmsub.d f18, f11, f3, f17, rtz # perform operation
fnmsub.d f18, f11, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f11, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f11, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f11, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f11, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f11, f3, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x0)
li x13, 0xa3568c38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0x4330c099 # load x3 with 32 MSBs 0x000000004330c099
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004330c099
sw x3, 0(x2) # store x3 (0x4330c099) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000004330c099 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
fnmsub.d f13, f16, f2, f11, dyn # perform operation
fnmsub.d f13, f16, f2, f11, rdn # perform operation
fnmsub.d f13, f16, f2, f11, rmm # perform operation
fnmsub.d f13, f16, f2, f11, rne # perform operation
fnmsub.d f13, f16, f2, f11, rtz # perform operation
fnmsub.d f13, f16, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f16, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f16, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f16, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f16, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f16, f2, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8000000000000000)
li x5, 0xb4fc11b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
li x3, 0x0c2dbcc1 # load x3 with 32 MSBs 0x000000000c2dbcc1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c2dbcc1
sw x3, 0(x2) # store x3 (0x0c2dbcc1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000000c2dbcc1 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
fnmsub.d f5, f25, f6, f1, dyn # perform operation
fnmsub.d f5, f25, f6, f1, rdn # perform operation
fnmsub.d f5, f25, f6, f1, rmm # perform operation
fnmsub.d f5, f25, f6, f1, rne # perform operation
fnmsub.d f5, f25, f6, f1, rtz # perform operation
fnmsub.d f5, f25, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f25, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f25, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f25, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f25, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f25, f6, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x3ff0000000000000)
li x17, 0xeb0d82db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
li x3, 0x147debf0 # load x3 with 32 MSBs 0x00000000147debf0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000147debf0
sw x3, 0(x2) # store x3 (0x147debf0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000147debf0 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff0000000000000 from memory into f24
fnmsub.d f17, f27, f19, f24, dyn # perform operation
fnmsub.d f17, f27, f19, f24, rdn # perform operation
fnmsub.d f17, f27, f19, f24, rmm # perform operation
fnmsub.d f17, f27, f19, f24, rne # perform operation
fnmsub.d f17, f27, f19, f24, rtz # perform operation
fnmsub.d f17, f27, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f27, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f27, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f27, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f27, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f27, f19, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xbff0000000000000)
li x26, 0xc1d4f931 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
li x3, 0xa845ef70 # load x3 with 32 MSBs 0x00000000a845ef70
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a845ef70
sw x3, 0(x2) # store x3 (0xa845ef70) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000a845ef70 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
fnmsub.d f26, f18, f19, f25, dyn # perform operation
fnmsub.d f26, f18, f19, f25, rdn # perform operation
fnmsub.d f26, f18, f19, f25, rmm # perform operation
fnmsub.d f26, f18, f19, f25, rne # perform operation
fnmsub.d f26, f18, f19, f25, rtz # perform operation
fnmsub.d f26, f18, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f26, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f26, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f26, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f26, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f26, f18, f19, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x3ff8000000000000)
li x17, 0x829d17c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
li x3, 0x1041daa9 # load x3 with 32 MSBs 0x000000001041daa9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001041daa9
sw x3, 0(x2) # store x3 (0x1041daa9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000001041daa9 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
fnmsub.d f17, f22, f10, f16, dyn # perform operation
fnmsub.d f17, f22, f10, f16, rdn # perform operation
fnmsub.d f17, f22, f10, f16, rmm # perform operation
fnmsub.d f17, f22, f10, f16, rne # perform operation
fnmsub.d f17, f22, f10, f16, rtz # perform operation
fnmsub.d f17, f22, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f22, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f22, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f22, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f22, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f22, f10, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xbff8000000000000)
li x30, 0x3daf300c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
li x3, 0x582613bd # load x3 with 32 MSBs 0x00000000582613bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000582613bd
sw x3, 0(x2) # store x3 (0x582613bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000582613bd from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
fnmsub.d f30, f20, f24, f1, dyn # perform operation
fnmsub.d f30, f20, f24, f1, rdn # perform operation
fnmsub.d f30, f20, f24, f1, rmm # perform operation
fnmsub.d f30, f20, f24, f1, rne # perform operation
fnmsub.d f30, f20, f24, f1, rtz # perform operation
fnmsub.d f30, f20, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f20, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f20, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f20, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f20, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f20, f24, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x4000000000000000)
li x2, 0x41adbac8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0x3de5b56b # load x3 with 32 MSBs 0x000000003de5b56b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003de5b56b
sw x3, 0(x2) # store x3 (0x3de5b56b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000003de5b56b from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
fnmsub.d f2, f31, f17, f30, dyn # perform operation
fnmsub.d f2, f31, f17, f30, rdn # perform operation
fnmsub.d f2, f31, f17, f30, rmm # perform operation
fnmsub.d f2, f31, f17, f30, rne # perform operation
fnmsub.d f2, f31, f17, f30, rtz # perform operation
fnmsub.d f2, f31, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f2, f31, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f2, f31, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f2, f31, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f2, f31, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f2, f31, f17, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xc000000000000000)
li x23, 0x4d5ff298 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
li x3, 0xf558a07f # load x3 with 32 MSBs 0x00000000f558a07f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f558a07f
sw x3, 0(x2) # store x3 (0xf558a07f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000f558a07f from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xc000000000000000 from memory into f4
fnmsub.d f23, f20, f31, f4, dyn # perform operation
fnmsub.d f23, f20, f31, f4, rdn # perform operation
fnmsub.d f23, f20, f31, f4, rmm # perform operation
fnmsub.d f23, f20, f31, f4, rne # perform operation
fnmsub.d f23, f20, f31, f4, rtz # perform operation
fnmsub.d f23, f20, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f20, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f20, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f20, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f20, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f20, f31, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x10000000000000)
li x11, 0xd5611314 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0x6290deaa # load x3 with 32 MSBs 0x000000006290deaa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006290deaa
sw x3, 0(x2) # store x3 (0x6290deaa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000006290deaa from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
fnmsub.d f11, f1, f15, f16, dyn # perform operation
fnmsub.d f11, f1, f15, f16, rdn # perform operation
fnmsub.d f11, f1, f15, f16, rmm # perform operation
fnmsub.d f11, f1, f15, f16, rne # perform operation
fnmsub.d f11, f1, f15, f16, rtz # perform operation
fnmsub.d f11, f1, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f1, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f1, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f1, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f1, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f1, f15, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8010000000000000)
li x16, 0xa4732cae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
li x3, 0x56ea7bb4 # load x3 with 32 MSBs 0x0000000056ea7bb4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000056ea7bb4
sw x3, 0(x2) # store x3 (0x56ea7bb4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000056ea7bb4 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
fnmsub.d f16, f11, f27, f19, dyn # perform operation
fnmsub.d f16, f11, f27, f19, rdn # perform operation
fnmsub.d f16, f11, f27, f19, rmm # perform operation
fnmsub.d f16, f11, f27, f19, rne # perform operation
fnmsub.d f16, f11, f27, f19, rtz # perform operation
fnmsub.d f16, f11, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f11, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f11, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f11, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f11, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f11, f27, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7fefffffffffffff)
li x4, 0xceecd4f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0xa9233fa5 # load x3 with 32 MSBs 0x00000000a9233fa5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9233fa5
sw x3, 0(x2) # store x3 (0xa9233fa5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000a9233fa5 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
fnmsub.d f4, f31, f14, f1, dyn # perform operation
fnmsub.d f4, f31, f14, f1, rdn # perform operation
fnmsub.d f4, f31, f14, f1, rmm # perform operation
fnmsub.d f4, f31, f14, f1, rne # perform operation
fnmsub.d f4, f31, f14, f1, rtz # perform operation
fnmsub.d f4, f31, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f4, f31, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f4, f31, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f4, f31, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f4, f31, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f4, f31, f14, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xffefffffffffffff)
li x11, 0xbd22c3bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
li x3, 0x3920d841 # load x3 with 32 MSBs 0x000000003920d841
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003920d841
sw x3, 0(x2) # store x3 (0x3920d841) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000003920d841 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
fnmsub.d f11, f22, f30, f15, dyn # perform operation
fnmsub.d f11, f22, f30, f15, rdn # perform operation
fnmsub.d f11, f22, f30, f15, rmm # perform operation
fnmsub.d f11, f22, f30, f15, rne # perform operation
fnmsub.d f11, f22, f30, f15, rtz # perform operation
fnmsub.d f11, f22, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f22, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f22, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f22, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f22, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f22, f30, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xfffffffffffff)
li x27, 0x67aad9c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
li x3, 0xb9ec6c1e # load x3 with 32 MSBs 0x00000000b9ec6c1e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b9ec6c1e
sw x3, 0(x2) # store x3 (0xb9ec6c1e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000b9ec6c1e from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
fnmsub.d f27, f30, f28, f13, dyn # perform operation
fnmsub.d f27, f30, f28, f13, rdn # perform operation
fnmsub.d f27, f30, f28, f13, rmm # perform operation
fnmsub.d f27, f30, f28, f13, rne # perform operation
fnmsub.d f27, f30, f28, f13, rtz # perform operation
fnmsub.d f27, f30, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f30, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f30, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f30, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f30, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f30, f28, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x800fffffffffffff)
li x19, 0xa3580935 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
li x3, 0x0f9b04d8 # load x3 with 32 MSBs 0x000000000f9b04d8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f9b04d8
sw x3, 0(x2) # store x3 (0x0f9b04d8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000000f9b04d8 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
fnmsub.d f19, f8, f17, f10, dyn # perform operation
fnmsub.d f19, f8, f17, f10, rdn # perform operation
fnmsub.d f19, f8, f17, f10, rmm # perform operation
fnmsub.d f19, f8, f17, f10, rne # perform operation
fnmsub.d f19, f8, f17, f10, rtz # perform operation
fnmsub.d f19, f8, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f8, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f8, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f8, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f8, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f8, f17, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8000000000000)
li x9, 0xbd92f2dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
li x3, 0xc4e0f8dd # load x3 with 32 MSBs 0x00000000c4e0f8dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4e0f8dd
sw x3, 0(x2) # store x3 (0xc4e0f8dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000c4e0f8dd from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
fnmsub.d f9, f11, f6, f1, dyn # perform operation
fnmsub.d f9, f11, f6, f1, rdn # perform operation
fnmsub.d f9, f11, f6, f1, rmm # perform operation
fnmsub.d f9, f11, f6, f1, rne # perform operation
fnmsub.d f9, f11, f6, f1, rtz # perform operation
fnmsub.d f9, f11, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f11, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f11, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f11, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f11, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f11, f6, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8008000000000000)
li x8, 0x83cde704 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
li x3, 0x6fb5652c # load x3 with 32 MSBs 0x000000006fb5652c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006fb5652c
sw x3, 0(x2) # store x3 (0x6fb5652c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000006fb5652c from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8008000000000000 from memory into f4
fnmsub.d f8, f28, f15, f4, dyn # perform operation
fnmsub.d f8, f28, f15, f4, rdn # perform operation
fnmsub.d f8, f28, f15, f4, rmm # perform operation
fnmsub.d f8, f28, f15, f4, rne # perform operation
fnmsub.d f8, f28, f15, f4, rtz # perform operation
fnmsub.d f8, f28, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f8, f28, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f8, f28, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f8, f28, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f8, f28, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f8, f28, f15, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x1)
li x12, 0xed7d9502 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
li x3, 0x495b4652 # load x3 with 32 MSBs 0x00000000495b4652
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000495b4652
sw x3, 0(x2) # store x3 (0x495b4652) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000495b4652 from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
fnmsub.d f12, f3, f15, f24, dyn # perform operation
fnmsub.d f12, f3, f15, f24, rdn # perform operation
fnmsub.d f12, f3, f15, f24, rmm # perform operation
fnmsub.d f12, f3, f15, f24, rne # perform operation
fnmsub.d f12, f3, f15, f24, rtz # perform operation
fnmsub.d f12, f3, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f3, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f3, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f3, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f3, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f3, f15, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8000000000000001)
li x1, 0x634b50f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
li x3, 0x01c892c2 # load x3 with 32 MSBs 0x0000000001c892c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000001c892c2
sw x3, 0(x2) # store x3 (0x01c892c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000001c892c2 from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
fnmsub.d f1, f24, f3, f21, dyn # perform operation
fnmsub.d f1, f24, f3, f21, rdn # perform operation
fnmsub.d f1, f24, f3, f21, rmm # perform operation
fnmsub.d f1, f24, f3, f21, rne # perform operation
fnmsub.d f1, f24, f3, f21, rtz # perform operation
fnmsub.d f1, f24, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f24, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f24, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f24, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f24, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f24, f3, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7ff0000000000000)
li x19, 0xc953548c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
li x3, 0x6113a2cf # load x3 with 32 MSBs 0x000000006113a2cf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006113a2cf
sw x3, 0(x2) # store x3 (0x6113a2cf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000006113a2cf from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
fnmsub.d f19, f3, f29, f24, dyn # perform operation
fnmsub.d f19, f3, f29, f24, rdn # perform operation
fnmsub.d f19, f3, f29, f24, rmm # perform operation
fnmsub.d f19, f3, f29, f24, rne # perform operation
fnmsub.d f19, f3, f29, f24, rtz # perform operation
fnmsub.d f19, f3, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f3, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f3, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f3, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f3, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f3, f29, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xfff0000000000000)
li x13, 0x2078d75f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
li x3, 0x1e2d94e8 # load x3 with 32 MSBs 0x000000001e2d94e8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e2d94e8
sw x3, 0(x2) # store x3 (0x1e2d94e8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000001e2d94e8 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000000 from memory into f11
fnmsub.d f13, f29, f21, f11, dyn # perform operation
fnmsub.d f13, f29, f21, f11, rdn # perform operation
fnmsub.d f13, f29, f21, f11, rmm # perform operation
fnmsub.d f13, f29, f21, f11, rne # perform operation
fnmsub.d f13, f29, f21, f11, rtz # perform operation
fnmsub.d f13, f29, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f13, f29, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f13, f29, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f13, f29, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f13, f29, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f13, f29, f21, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7ff8000000000000)
li x5, 0x34400fa5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
li x3, 0x1a9c9942 # load x3 with 32 MSBs 0x000000001a9c9942
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001a9c9942
sw x3, 0(x2) # store x3 (0x1a9c9942) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000001a9c9942 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
fnmsub.d f5, f28, f31, f23, dyn # perform operation
fnmsub.d f5, f28, f31, f23, rdn # perform operation
fnmsub.d f5, f28, f31, f23, rmm # perform operation
fnmsub.d f5, f28, f31, f23, rne # perform operation
fnmsub.d f5, f28, f31, f23, rtz # perform operation
fnmsub.d f5, f28, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f28, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f28, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f28, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f28, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f28, f31, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7fffffffffffffff)
li x29, 0x4dfe3aab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
li x3, 0x1ebdb895 # load x3 with 32 MSBs 0x000000001ebdb895
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ebdb895
sw x3, 0(x2) # store x3 (0x1ebdb895) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000001ebdb895 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
fnmsub.d f29, f22, f12, f7, dyn # perform operation
fnmsub.d f29, f22, f12, f7, rdn # perform operation
fnmsub.d f29, f22, f12, f7, rmm # perform operation
fnmsub.d f29, f22, f12, f7, rne # perform operation
fnmsub.d f29, f22, f12, f7, rtz # perform operation
fnmsub.d f29, f22, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f29, f22, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f29, f22, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f29, f22, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f29, f22, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f29, f22, f12, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7ff0000000000001)
li x19, 0x0a30c986 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0x5e9347d4 # load x3 with 32 MSBs 0x000000005e9347d4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e9347d4
sw x3, 0(x2) # store x3 (0x5e9347d4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000005e9347d4 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
fnmsub.d f19, f31, f5, f11, dyn # perform operation
fnmsub.d f19, f31, f5, f11, rdn # perform operation
fnmsub.d f19, f31, f5, f11, rmm # perform operation
fnmsub.d f19, f31, f5, f11, rne # perform operation
fnmsub.d f19, f31, f5, f11, rtz # perform operation
fnmsub.d f19, f31, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f19, f31, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f19, f31, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f19, f31, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f19, f31, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f19, f31, f5, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7ff7ffffffffffff)
li x11, 0x7da3f933 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
li x3, 0x537093da # load x3 with 32 MSBs 0x00000000537093da
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000537093da
sw x3, 0(x2) # store x3 (0x537093da) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000537093da from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
fnmsub.d f11, f6, f27, f9, dyn # perform operation
fnmsub.d f11, f6, f27, f9, rdn # perform operation
fnmsub.d f11, f6, f27, f9, rmm # perform operation
fnmsub.d f11, f6, f27, f9, rne # perform operation
fnmsub.d f11, f6, f27, f9, rtz # perform operation
fnmsub.d f11, f6, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f6, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f6, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f6, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f6, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f6, f27, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x5a392534a57711ad)
li x1, 0xce11d80f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
li x3, 0x0af7032f # load x3 with 32 MSBs 0x000000000af7032f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000af7032f
sw x3, 0(x2) # store x3 (0x0af7032f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000000af7032f from memory into f6
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
fnmsub.d f1, f17, f6, f4, dyn # perform operation
fnmsub.d f1, f17, f6, f4, rdn # perform operation
fnmsub.d f1, f17, f6, f4, rmm # perform operation
fnmsub.d f1, f17, f6, f4, rne # perform operation
fnmsub.d f1, f17, f6, f4, rtz # perform operation
fnmsub.d f1, f17, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f1, f17, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f1, f17, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f1, f17, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f1, f17, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f1, f17, f6, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xa6e895993737426c)
li x16, 0x6b38ce8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
li x3, 0x8fc9acb8 # load x3 with 32 MSBs 0x000000008fc9acb8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008fc9acb8
sw x3, 0(x2) # store x3 (0x8fc9acb8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000008fc9acb8 from memory into f30
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
fnmsub.d f16, f24, f30, f20, dyn # perform operation
fnmsub.d f16, f24, f30, f20, rdn # perform operation
fnmsub.d f16, f24, f30, f20, rmm # perform operation
fnmsub.d f16, f24, f30, f20, rne # perform operation
fnmsub.d f16, f24, f30, f20, rtz # perform operation
fnmsub.d f16, f24, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f24, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f24, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f24, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f24, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f24, f30, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x0)
li x5, 0x57e943fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
li x3, 0xa99519fe # load x3 with 32 MSBs 0x00000000a99519fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a99519fe
sw x3, 0(x2) # store x3 (0xa99519fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000a99519fe from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
fnmsub.d f5, f22, f3, f25, dyn # perform operation
fnmsub.d f5, f22, f3, f25, rdn # perform operation
fnmsub.d f5, f22, f3, f25, rmm # perform operation
fnmsub.d f5, f22, f3, f25, rne # perform operation
fnmsub.d f5, f22, f3, f25, rtz # perform operation
fnmsub.d f5, f22, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f22, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f22, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f22, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f22, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f22, f3, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8000000000000000)
li x30, 0x504d5343 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0xdae1c0cd # load x3 with 32 MSBs 0x00000000dae1c0cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dae1c0cd
sw x3, 0(x2) # store x3 (0xdae1c0cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000dae1c0cd from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
fnmsub.d f30, f6, f3, f31, dyn # perform operation
fnmsub.d f30, f6, f3, f31, rdn # perform operation
fnmsub.d f30, f6, f3, f31, rmm # perform operation
fnmsub.d f30, f6, f3, f31, rne # perform operation
fnmsub.d f30, f6, f3, f31, rtz # perform operation
fnmsub.d f30, f6, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f30, f6, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f30, f6, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f30, f6, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f30, f6, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f30, f6, f3, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x3ff0000000000000)
li x5, 0xb7e7a21f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
li x3, 0x14649970 # load x3 with 32 MSBs 0x0000000014649970
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014649970
sw x3, 0(x2) # store x3 (0x14649970) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000014649970 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
fnmsub.d f5, f31, f30, f17, dyn # perform operation
fnmsub.d f5, f31, f30, f17, rdn # perform operation
fnmsub.d f5, f31, f30, f17, rmm # perform operation
fnmsub.d f5, f31, f30, f17, rne # perform operation
fnmsub.d f5, f31, f30, f17, rtz # perform operation
fnmsub.d f5, f31, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f31, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f31, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f31, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f31, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f31, f30, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xbff0000000000000)
li x6, 0x45451d5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
li x3, 0xc6e9275b # load x3 with 32 MSBs 0x00000000c6e9275b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c6e9275b
sw x3, 0(x2) # store x3 (0xc6e9275b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000c6e9275b from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
fnmsub.d f6, f7, f16, f30, dyn # perform operation
fnmsub.d f6, f7, f16, f30, rdn # perform operation
fnmsub.d f6, f7, f16, f30, rmm # perform operation
fnmsub.d f6, f7, f16, f30, rne # perform operation
fnmsub.d f6, f7, f16, f30, rtz # perform operation
fnmsub.d f6, f7, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f7, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f7, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f7, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f7, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f7, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x3ff8000000000000)
li x5, 0x13c63bfd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
li x3, 0x3910c21d # load x3 with 32 MSBs 0x000000003910c21d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003910c21d
sw x3, 0(x2) # store x3 (0x3910c21d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000003910c21d from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
fnmsub.d f5, f29, f31, f15, dyn # perform operation
fnmsub.d f5, f29, f31, f15, rdn # perform operation
fnmsub.d f5, f29, f31, f15, rmm # perform operation
fnmsub.d f5, f29, f31, f15, rne # perform operation
fnmsub.d f5, f29, f31, f15, rtz # perform operation
fnmsub.d f5, f29, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f5, f29, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f5, f29, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f5, f29, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f5, f29, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f5, f29, f31, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xbff8000000000000)
li x16, 0x84a03c2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
li x3, 0xf0296798 # load x3 with 32 MSBs 0x00000000f0296798
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f0296798
sw x3, 0(x2) # store x3 (0xf0296798) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000f0296798 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
fnmsub.d f16, f3, f1, f6, dyn # perform operation
fnmsub.d f16, f3, f1, f6, rdn # perform operation
fnmsub.d f16, f3, f1, f6, rmm # perform operation
fnmsub.d f16, f3, f1, f6, rne # perform operation
fnmsub.d f16, f3, f1, f6, rtz # perform operation
fnmsub.d f16, f3, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f3, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f3, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f3, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f3, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f3, f1, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x4000000000000000)
li x9, 0x0b4db1ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
li x3, 0xc20ae4ae # load x3 with 32 MSBs 0x00000000c20ae4ae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c20ae4ae
sw x3, 0(x2) # store x3 (0xc20ae4ae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000c20ae4ae from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
fnmsub.d f9, f24, f17, f2, dyn # perform operation
fnmsub.d f9, f24, f17, f2, rdn # perform operation
fnmsub.d f9, f24, f17, f2, rmm # perform operation
fnmsub.d f9, f24, f17, f2, rne # perform operation
fnmsub.d f9, f24, f17, f2, rtz # perform operation
fnmsub.d f9, f24, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f24, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f24, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f24, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f24, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f24, f17, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xc000000000000000)
li x23, 0xe1b20ba6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
li x3, 0xc7b48b34 # load x3 with 32 MSBs 0x00000000c7b48b34
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c7b48b34
sw x3, 0(x2) # store x3 (0xc7b48b34) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000c7b48b34 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
fnmsub.d f23, f12, f4, f28, dyn # perform operation
fnmsub.d f23, f12, f4, f28, rdn # perform operation
fnmsub.d f23, f12, f4, f28, rmm # perform operation
fnmsub.d f23, f12, f4, f28, rne # perform operation
fnmsub.d f23, f12, f4, f28, rtz # perform operation
fnmsub.d f23, f12, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f23, f12, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f23, f12, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f23, f12, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f23, f12, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f23, f12, f4, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x10000000000000)
li x22, 0x3c0db24f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
li x3, 0xba984576 # load x3 with 32 MSBs 0x00000000ba984576
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ba984576
sw x3, 0(x2) # store x3 (0xba984576) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000ba984576 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
fnmsub.d f22, f1, f14, f10, dyn # perform operation
fnmsub.d f22, f1, f14, f10, rdn # perform operation
fnmsub.d f22, f1, f14, f10, rmm # perform operation
fnmsub.d f22, f1, f14, f10, rne # perform operation
fnmsub.d f22, f1, f14, f10, rtz # perform operation
fnmsub.d f22, f1, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f22, f1, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f22, f1, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f22, f1, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f22, f1, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f22, f1, f14, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8010000000000000)
li x3, 0x85b7c4e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
li x3, 0xebd6faaf # load x3 with 32 MSBs 0x00000000ebd6faaf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ebd6faaf
sw x3, 0(x2) # store x3 (0xebd6faaf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000ebd6faaf from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
fnmsub.d f3, f24, f9, f7, dyn # perform operation
fnmsub.d f3, f24, f9, f7, rdn # perform operation
fnmsub.d f3, f24, f9, f7, rmm # perform operation
fnmsub.d f3, f24, f9, f7, rne # perform operation
fnmsub.d f3, f24, f9, f7, rtz # perform operation
fnmsub.d f3, f24, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f3, f24, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f3, f24, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f3, f24, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f3, f24, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f3, f24, f9, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7fefffffffffffff)
li x14, 0x5ca82017 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
li x3, 0xdbd3015c # load x3 with 32 MSBs 0x00000000dbd3015c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dbd3015c
sw x3, 0(x2) # store x3 (0xdbd3015c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000dbd3015c from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
fnmsub.d f14, f26, f8, f13, dyn # perform operation
fnmsub.d f14, f26, f8, f13, rdn # perform operation
fnmsub.d f14, f26, f8, f13, rmm # perform operation
fnmsub.d f14, f26, f8, f13, rne # perform operation
fnmsub.d f14, f26, f8, f13, rtz # perform operation
fnmsub.d f14, f26, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f14, f26, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f14, f26, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f14, f26, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f14, f26, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f14, f26, f8, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xffefffffffffffff)
li x9, 0xc21aac42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xa6e895993737426c from memory into f11
li x3, 0x78274b83 # load x3 with 32 MSBs 0x0000000078274b83
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000078274b83
sw x3, 0(x2) # store x3 (0x78274b83) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000078274b83 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
fnmsub.d f9, f11, f15, f10, dyn # perform operation
fnmsub.d f9, f11, f15, f10, rdn # perform operation
fnmsub.d f9, f11, f15, f10, rmm # perform operation
fnmsub.d f9, f11, f15, f10, rne # perform operation
fnmsub.d f9, f11, f15, f10, rtz # perform operation
fnmsub.d f9, f11, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f9, f11, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f9, f11, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f9, f11, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f9, f11, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f9, f11, f15, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xfffffffffffff)
li x16, 0xfb3cbb93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
li x3, 0x4748c6ae # load x3 with 32 MSBs 0x000000004748c6ae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004748c6ae
sw x3, 0(x2) # store x3 (0x4748c6ae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000004748c6ae from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
fnmsub.d f16, f5, f17, f27, dyn # perform operation
fnmsub.d f16, f5, f17, f27, rdn # perform operation
fnmsub.d f16, f5, f17, f27, rmm # perform operation
fnmsub.d f16, f5, f17, f27, rne # perform operation
fnmsub.d f16, f5, f17, f27, rtz # perform operation
fnmsub.d f16, f5, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f16, f5, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f16, f5, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f16, f5, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f16, f5, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f16, f5, f17, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x800fffffffffffff)
li x27, 0x305d3456 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
li x3, 0x8bb39c46 # load x3 with 32 MSBs 0x000000008bb39c46
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008bb39c46
sw x3, 0(x2) # store x3 (0x8bb39c46) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000008bb39c46 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
fnmsub.d f27, f22, f5, f26, dyn # perform operation
fnmsub.d f27, f22, f5, f26, rdn # perform operation
fnmsub.d f27, f22, f5, f26, rmm # perform operation
fnmsub.d f27, f22, f5, f26, rne # perform operation
fnmsub.d f27, f22, f5, f26, rtz # perform operation
fnmsub.d f27, f22, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f27, f22, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f27, f22, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f27, f22, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f27, f22, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f27, f22, f5, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8000000000000)
li x12, 0x44ceebd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
li x3, 0x0437e84e # load x3 with 32 MSBs 0x000000000437e84e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000437e84e
sw x3, 0(x2) # store x3 (0x0437e84e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000000437e84e from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
fnmsub.d f12, f20, f16, f21, dyn # perform operation
fnmsub.d f12, f20, f16, f21, rdn # perform operation
fnmsub.d f12, f20, f16, f21, rmm # perform operation
fnmsub.d f12, f20, f16, f21, rne # perform operation
fnmsub.d f12, f20, f16, f21, rtz # perform operation
fnmsub.d f12, f20, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f12, f20, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f12, f20, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f12, f20, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f12, f20, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f12, f20, f16, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8008000000000000)
li x6, 0x0bc98bf2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xa6e895993737426c from memory into f4
li x3, 0x60763f07 # load x3 with 32 MSBs 0x0000000060763f07
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000060763f07
sw x3, 0(x2) # store x3 (0x60763f07) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000060763f07 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
fnmsub.d f6, f4, f23, f8, dyn # perform operation
fnmsub.d f6, f4, f23, f8, rdn # perform operation
fnmsub.d f6, f4, f23, f8, rmm # perform operation
fnmsub.d f6, f4, f23, f8, rne # perform operation
fnmsub.d f6, f4, f23, f8, rtz # perform operation
fnmsub.d f6, f4, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f4, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f4, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f4, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f4, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f4, f23, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x1)
li x11, 0x5958420c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
li x3, 0xf227b722 # load x3 with 32 MSBs 0x00000000f227b722
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f227b722
sw x3, 0(x2) # store x3 (0xf227b722) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000f227b722 from memory into f17
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
fnmsub.d f11, f20, f17, f16, dyn # perform operation
fnmsub.d f11, f20, f17, f16, rdn # perform operation
fnmsub.d f11, f20, f17, f16, rmm # perform operation
fnmsub.d f11, f20, f17, f16, rne # perform operation
fnmsub.d f11, f20, f17, f16, rtz # perform operation
fnmsub.d f11, f20, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f11, f20, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f11, f20, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f11, f20, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f11, f20, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f11, f20, f17, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8000000000000001)
li x10, 0x57d79f51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
li x3, 0xadbca955 # load x3 with 32 MSBs 0x00000000adbca955
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000adbca955
sw x3, 0(x2) # store x3 (0xadbca955) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000adbca955 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
fnmsub.d f10, f7, f29, f4, dyn # perform operation
fnmsub.d f10, f7, f29, f4, rdn # perform operation
fnmsub.d f10, f7, f29, f4, rmm # perform operation
fnmsub.d f10, f7, f29, f4, rne # perform operation
fnmsub.d f10, f7, f29, f4, rtz # perform operation
fnmsub.d f10, f7, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f7, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f7, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f7, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f7, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f7, f29, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7ff0000000000000)
li x17, 0x098d2e6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0xe6319bce # load x3 with 32 MSBs 0x00000000e6319bce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e6319bce
sw x3, 0(x2) # store x3 (0xe6319bce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000e6319bce from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
fnmsub.d f17, f6, f30, f16, dyn # perform operation
fnmsub.d f17, f6, f30, f16, rdn # perform operation
fnmsub.d f17, f6, f30, f16, rmm # perform operation
fnmsub.d f17, f6, f30, f16, rne # perform operation
fnmsub.d f17, f6, f30, f16, rtz # perform operation
fnmsub.d f17, f6, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f17, f6, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f17, f6, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f17, f6, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f17, f6, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f17, f6, f30, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xfff0000000000000)
li x18, 0x5c50420c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
li x3, 0xe7f3b2de # load x3 with 32 MSBs 0x00000000e7f3b2de
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e7f3b2de
sw x3, 0(x2) # store x3 (0xe7f3b2de) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000e7f3b2de from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xfff0000000000000 from memory into f4
fnmsub.d f18, f12, f5, f4, dyn # perform operation
fnmsub.d f18, f12, f5, f4, rdn # perform operation
fnmsub.d f18, f12, f5, f4, rmm # perform operation
fnmsub.d f18, f12, f5, f4, rne # perform operation
fnmsub.d f18, f12, f5, f4, rtz # perform operation
fnmsub.d f18, f12, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f18, f12, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f18, f12, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f18, f12, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f18, f12, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f18, f12, f5, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7ff8000000000000)
li x21, 0xa882bfd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
li x3, 0x5fc08657 # load x3 with 32 MSBs 0x000000005fc08657
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005fc08657
sw x3, 0(x2) # store x3 (0x5fc08657) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000005fc08657 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
fnmsub.d f21, f5, f13, f17, dyn # perform operation
fnmsub.d f21, f5, f13, f17, rdn # perform operation
fnmsub.d f21, f5, f13, f17, rmm # perform operation
fnmsub.d f21, f5, f13, f17, rne # perform operation
fnmsub.d f21, f5, f13, f17, rtz # perform operation
fnmsub.d f21, f5, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f21, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f21, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f21, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f21, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f21, f5, f13, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7fffffffffffffff)
li x6, 0x62181daa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
li x3, 0x9d4a255d # load x3 with 32 MSBs 0x000000009d4a255d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d4a255d
sw x3, 0(x2) # store x3 (0x9d4a255d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000009d4a255d from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
fnmsub.d f6, f20, f22, f28, dyn # perform operation
fnmsub.d f6, f20, f22, f28, rdn # perform operation
fnmsub.d f6, f20, f22, f28, rmm # perform operation
fnmsub.d f6, f20, f22, f28, rne # perform operation
fnmsub.d f6, f20, f22, f28, rtz # perform operation
fnmsub.d f6, f20, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f6, f20, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f6, f20, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f6, f20, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f6, f20, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f6, f20, f22, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7ff0000000000001)
li x7, 0xbb35083a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
li x3, 0xa52b715e # load x3 with 32 MSBs 0x00000000a52b715e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a52b715e
sw x3, 0(x2) # store x3 (0xa52b715e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000a52b715e from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
fnmsub.d f7, f22, f18, f4, dyn # perform operation
fnmsub.d f7, f22, f18, f4, rdn # perform operation
fnmsub.d f7, f22, f18, f4, rmm # perform operation
fnmsub.d f7, f22, f18, f4, rne # perform operation
fnmsub.d f7, f22, f18, f4, rtz # perform operation
fnmsub.d f7, f22, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f7, f22, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f7, f22, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f7, f22, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f7, f22, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f7, f22, f18, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7ff7ffffffffffff)
li x31, 0xf59adccb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
li x3, 0x90a06df9 # load x3 with 32 MSBs 0x0000000090a06df9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000090a06df9
sw x3, 0(x2) # store x3 (0x90a06df9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000090a06df9 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
fnmsub.d f31, f8, f6, f10, dyn # perform operation
fnmsub.d f31, f8, f6, f10, rdn # perform operation
fnmsub.d f31, f8, f6, f10, rmm # perform operation
fnmsub.d f31, f8, f6, f10, rne # perform operation
fnmsub.d f31, f8, f6, f10, rtz # perform operation
fnmsub.d f31, f8, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f31, f8, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f31, f8, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f31, f8, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f31, f8, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f31, f8, f6, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x5a392534a57711ad)
li x10, 0xdfcdb188 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
li x3, 0xa3841f5f # load x3 with 32 MSBs 0x00000000a3841f5f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a3841f5f
sw x3, 0(x2) # store x3 (0xa3841f5f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000a3841f5f from memory into f19
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
fnmsub.d f10, f9, f19, f12, dyn # perform operation
fnmsub.d f10, f9, f19, f12, rdn # perform operation
fnmsub.d f10, f9, f19, f12, rmm # perform operation
fnmsub.d f10, f9, f19, f12, rne # perform operation
fnmsub.d f10, f9, f19, f12, rtz # perform operation
fnmsub.d f10, f9, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f10, f9, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f10, f9, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f10, f9, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f10, f9, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f10, f9, f19, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xa6e895993737426c)
li x28, 0xfa037b52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
li x3, 0x90d29543 # load x3 with 32 MSBs 0x0000000090d29543
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000090d29543
sw x3, 0(x2) # store x3 (0x90d29543) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000090d29543 from memory into f31
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
fnmsub.d f28, f30, f31, f6, dyn # perform operation
fnmsub.d f28, f30, f31, f6, rdn # perform operation
fnmsub.d f28, f30, f31, f6, rmm # perform operation
fnmsub.d f28, f30, f31, f6, rne # perform operation
fnmsub.d f28, f30, f31, f6, rtz # perform operation
fnmsub.d f28, f30, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.d f28, f30, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.d f28, f30, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.d f28, f30, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.d f28, f30, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.d f28, f30, f31, f6 # perform operation

# Testcase cp_fd (Test destination fd = x0)
li x0, 0x255361c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4dc28f2d # load x3 with 32 MSBs 0x000000004dc28f2d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004dc28f2d
sw x3, 0(x2) # store x3 (0x4dc28f2d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000004dc28f2d from memory into f21
li x3, 0x32772cd2 # load x3 with 32 MSBs 0x0000000032772cd2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000032772cd2
sw x3, 0(x2) # store x3 (0x32772cd2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000032772cd2 from memory into f2
li x3, 0x221bbcbd # load x3 with 32 MSBs 0x00000000221bbcbd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000221bbcbd
sw x3, 0(x2) # store x3 (0x221bbcbd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000221bbcbd from memory into f6
fnmsub.d f0, f21, f2, f6 # perform operation

# Testcase cp_fd (Test destination fd = x1)
li x1, 0x8911093e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2ad042e3 # load x3 with 32 MSBs 0x000000002ad042e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ad042e3
sw x3, 0(x2) # store x3 (0x2ad042e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000002ad042e3 from memory into f18
li x3, 0x9a1a7c2e # load x3 with 32 MSBs 0x000000009a1a7c2e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009a1a7c2e
sw x3, 0(x2) # store x3 (0x9a1a7c2e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000009a1a7c2e from memory into f15
li x3, 0xc7a6f153 # load x3 with 32 MSBs 0x00000000c7a6f153
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c7a6f153
sw x3, 0(x2) # store x3 (0xc7a6f153) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000c7a6f153 from memory into f23
fnmsub.d f1, f18, f15, f23 # perform operation

# Testcase cp_fd (Test destination fd = x2)
li x2, 0xb2ae4970 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf1af82c4 # load x3 with 32 MSBs 0x00000000f1af82c4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f1af82c4
sw x3, 0(x2) # store x3 (0xf1af82c4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000f1af82c4 from memory into f29
li x3, 0xf47c08f4 # load x3 with 32 MSBs 0x00000000f47c08f4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f47c08f4
sw x3, 0(x2) # store x3 (0xf47c08f4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000f47c08f4 from memory into f31
li x3, 0x366006ea # load x3 with 32 MSBs 0x00000000366006ea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000366006ea
sw x3, 0(x2) # store x3 (0x366006ea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000366006ea from memory into f15
fnmsub.d f2, f29, f31, f15 # perform operation

# Testcase cp_fd (Test destination fd = x3)
li x3, 0xbf6f4456 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x802d38c0 # load x3 with 32 MSBs 0x00000000802d38c0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000802d38c0
sw x3, 0(x2) # store x3 (0x802d38c0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000802d38c0 from memory into f31
li x3, 0x8142f1e7 # load x3 with 32 MSBs 0x000000008142f1e7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008142f1e7
sw x3, 0(x2) # store x3 (0x8142f1e7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000008142f1e7 from memory into f16
li x3, 0xaef23d08 # load x3 with 32 MSBs 0x00000000aef23d08
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aef23d08
sw x3, 0(x2) # store x3 (0xaef23d08) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000aef23d08 from memory into f8
fnmsub.d f3, f31, f16, f8 # perform operation

# Testcase cp_fd (Test destination fd = x4)
li x4, 0x1831ccbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x954331b5 # load x3 with 32 MSBs 0x00000000954331b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000954331b5
sw x3, 0(x2) # store x3 (0x954331b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000954331b5 from memory into f2
li x3, 0x4068cbec # load x3 with 32 MSBs 0x000000004068cbec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004068cbec
sw x3, 0(x2) # store x3 (0x4068cbec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000004068cbec from memory into f8
li x3, 0x02180a50 # load x3 with 32 MSBs 0x0000000002180a50
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000002180a50
sw x3, 0(x2) # store x3 (0x02180a50) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000002180a50 from memory into f9
fnmsub.d f4, f2, f8, f9 # perform operation

# Testcase cp_fd (Test destination fd = x5)
li x5, 0x432a499b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x354d45e1 # load x3 with 32 MSBs 0x00000000354d45e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000354d45e1
sw x3, 0(x2) # store x3 (0x354d45e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000354d45e1 from memory into f12
li x3, 0x39920a14 # load x3 with 32 MSBs 0x0000000039920a14
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000039920a14
sw x3, 0(x2) # store x3 (0x39920a14) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000039920a14 from memory into f13
li x3, 0xbfee658b # load x3 with 32 MSBs 0x00000000bfee658b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bfee658b
sw x3, 0(x2) # store x3 (0xbfee658b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000bfee658b from memory into f3
fnmsub.d f5, f12, f13, f3 # perform operation

# Testcase cp_fd (Test destination fd = x6)
li x6, 0x9649bc3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3d2a7e8e # load x3 with 32 MSBs 0x000000003d2a7e8e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d2a7e8e
sw x3, 0(x2) # store x3 (0x3d2a7e8e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000003d2a7e8e from memory into f9
li x3, 0x1a1fbe70 # load x3 with 32 MSBs 0x000000001a1fbe70
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001a1fbe70
sw x3, 0(x2) # store x3 (0x1a1fbe70) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000001a1fbe70 from memory into f19
li x3, 0xd367cab1 # load x3 with 32 MSBs 0x00000000d367cab1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d367cab1
sw x3, 0(x2) # store x3 (0xd367cab1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000d367cab1 from memory into f23
fnmsub.d f6, f9, f19, f23 # perform operation

# Testcase cp_fd (Test destination fd = x7)
li x7, 0x05f71173 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x14b6ab45 # load x3 with 32 MSBs 0x0000000014b6ab45
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014b6ab45
sw x3, 0(x2) # store x3 (0x14b6ab45) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000014b6ab45 from memory into f23
li x3, 0x96fcdc0f # load x3 with 32 MSBs 0x0000000096fcdc0f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000096fcdc0f
sw x3, 0(x2) # store x3 (0x96fcdc0f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000096fcdc0f from memory into f3
li x3, 0x848c2e47 # load x3 with 32 MSBs 0x00000000848c2e47
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000848c2e47
sw x3, 0(x2) # store x3 (0x848c2e47) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000848c2e47 from memory into f16
fnmsub.d f7, f23, f3, f16 # perform operation

# Testcase cp_fd (Test destination fd = x8)
li x8, 0xd613f051 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2ba61acc # load x3 with 32 MSBs 0x000000002ba61acc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ba61acc
sw x3, 0(x2) # store x3 (0x2ba61acc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000002ba61acc from memory into f17
li x3, 0x47095900 # load x3 with 32 MSBs 0x0000000047095900
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000047095900
sw x3, 0(x2) # store x3 (0x47095900) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000047095900 from memory into f26
li x3, 0x1fe671af # load x3 with 32 MSBs 0x000000001fe671af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001fe671af
sw x3, 0(x2) # store x3 (0x1fe671af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000001fe671af from memory into f9
fnmsub.d f8, f17, f26, f9 # perform operation

# Testcase cp_fd (Test destination fd = x9)
li x9, 0xf4ca374d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd7bd59e3 # load x3 with 32 MSBs 0x00000000d7bd59e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7bd59e3
sw x3, 0(x2) # store x3 (0xd7bd59e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000d7bd59e3 from memory into f30
li x3, 0x7e9b9f41 # load x3 with 32 MSBs 0x000000007e9b9f41
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007e9b9f41
sw x3, 0(x2) # store x3 (0x7e9b9f41) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000007e9b9f41 from memory into f19
li x3, 0x205e4e4b # load x3 with 32 MSBs 0x00000000205e4e4b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000205e4e4b
sw x3, 0(x2) # store x3 (0x205e4e4b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000205e4e4b from memory into f16
fnmsub.d f9, f30, f19, f16 # perform operation

# Testcase cp_fd (Test destination fd = x10)
li x10, 0x5d3e5d65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5ecc2f9a # load x3 with 32 MSBs 0x000000005ecc2f9a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005ecc2f9a
sw x3, 0(x2) # store x3 (0x5ecc2f9a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000005ecc2f9a from memory into f19
li x3, 0x750b738b # load x3 with 32 MSBs 0x00000000750b738b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000750b738b
sw x3, 0(x2) # store x3 (0x750b738b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000750b738b from memory into f30
li x3, 0xf902192c # load x3 with 32 MSBs 0x00000000f902192c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f902192c
sw x3, 0(x2) # store x3 (0xf902192c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000f902192c from memory into f5
fnmsub.d f10, f19, f30, f5 # perform operation

# Testcase cp_fd (Test destination fd = x11)
li x11, 0x76f5daf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x309e0a06 # load x3 with 32 MSBs 0x00000000309e0a06
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000309e0a06
sw x3, 0(x2) # store x3 (0x309e0a06) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000309e0a06 from memory into f25
li x3, 0xafc32921 # load x3 with 32 MSBs 0x00000000afc32921
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000afc32921
sw x3, 0(x2) # store x3 (0xafc32921) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000afc32921 from memory into f13
li x3, 0x1647f7d1 # load x3 with 32 MSBs 0x000000001647f7d1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001647f7d1
sw x3, 0(x2) # store x3 (0x1647f7d1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000001647f7d1 from memory into f26
fnmsub.d f11, f25, f13, f26 # perform operation

# Testcase cp_fd (Test destination fd = x12)
li x12, 0x0d1b0774 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa44e525c # load x3 with 32 MSBs 0x00000000a44e525c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a44e525c
sw x3, 0(x2) # store x3 (0xa44e525c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000a44e525c from memory into f14
li x3, 0x002e5177 # load x3 with 32 MSBs 0x00000000002e5177
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000002e5177
sw x3, 0(x2) # store x3 (0x002e5177) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000002e5177 from memory into f17
li x3, 0xbb956baa # load x3 with 32 MSBs 0x00000000bb956baa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb956baa
sw x3, 0(x2) # store x3 (0xbb956baa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000bb956baa from memory into f2
fnmsub.d f12, f14, f17, f2 # perform operation

# Testcase cp_fd (Test destination fd = x13)
li x13, 0x1cfa3621 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe5373217 # load x3 with 32 MSBs 0x00000000e5373217
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e5373217
sw x3, 0(x2) # store x3 (0xe5373217) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000e5373217 from memory into f28
li x3, 0xe3476ab2 # load x3 with 32 MSBs 0x00000000e3476ab2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e3476ab2
sw x3, 0(x2) # store x3 (0xe3476ab2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000e3476ab2 from memory into f23
li x3, 0xf25f57a9 # load x3 with 32 MSBs 0x00000000f25f57a9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f25f57a9
sw x3, 0(x2) # store x3 (0xf25f57a9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000f25f57a9 from memory into f16
fnmsub.d f13, f28, f23, f16 # perform operation

# Testcase cp_fd (Test destination fd = x14)
li x14, 0xe14806c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3e18aca9 # load x3 with 32 MSBs 0x000000003e18aca9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e18aca9
sw x3, 0(x2) # store x3 (0x3e18aca9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000003e18aca9 from memory into f15
li x3, 0x6c104baf # load x3 with 32 MSBs 0x000000006c104baf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006c104baf
sw x3, 0(x2) # store x3 (0x6c104baf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006c104baf from memory into f18
li x3, 0xb560a0ee # load x3 with 32 MSBs 0x00000000b560a0ee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b560a0ee
sw x3, 0(x2) # store x3 (0xb560a0ee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000b560a0ee from memory into f12
fnmsub.d f14, f15, f18, f12 # perform operation

# Testcase cp_fd (Test destination fd = x15)
li x15, 0xd192f9e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2bbf9835 # load x3 with 32 MSBs 0x000000002bbf9835
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002bbf9835
sw x3, 0(x2) # store x3 (0x2bbf9835) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000002bbf9835 from memory into f30
li x3, 0x68518021 # load x3 with 32 MSBs 0x0000000068518021
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000068518021
sw x3, 0(x2) # store x3 (0x68518021) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000068518021 from memory into f21
li x3, 0x517dede3 # load x3 with 32 MSBs 0x00000000517dede3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000517dede3
sw x3, 0(x2) # store x3 (0x517dede3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000517dede3 from memory into f29
fnmsub.d f15, f30, f21, f29 # perform operation

# Testcase cp_fd (Test destination fd = x16)
li x16, 0x97511b91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6d1f7a50 # load x3 with 32 MSBs 0x000000006d1f7a50
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006d1f7a50
sw x3, 0(x2) # store x3 (0x6d1f7a50) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000006d1f7a50 from memory into f7
li x3, 0xa087c268 # load x3 with 32 MSBs 0x00000000a087c268
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a087c268
sw x3, 0(x2) # store x3 (0xa087c268) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000a087c268 from memory into f27
li x3, 0xe034d4cc # load x3 with 32 MSBs 0x00000000e034d4cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e034d4cc
sw x3, 0(x2) # store x3 (0xe034d4cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000e034d4cc from memory into f4
fnmsub.d f16, f7, f27, f4 # perform operation

# Testcase cp_fd (Test destination fd = x17)
li x17, 0x0a75249d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x019b709f # load x3 with 32 MSBs 0x00000000019b709f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000019b709f
sw x3, 0(x2) # store x3 (0x019b709f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000019b709f from memory into f9
li x3, 0x4c0c7d1e # load x3 with 32 MSBs 0x000000004c0c7d1e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004c0c7d1e
sw x3, 0(x2) # store x3 (0x4c0c7d1e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000004c0c7d1e from memory into f22
li x3, 0xca548392 # load x3 with 32 MSBs 0x00000000ca548392
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ca548392
sw x3, 0(x2) # store x3 (0xca548392) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000ca548392 from memory into f18
fnmsub.d f17, f9, f22, f18 # perform operation

# Testcase cp_fd (Test destination fd = x18)
li x18, 0x866a1329 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd92d01a7 # load x3 with 32 MSBs 0x00000000d92d01a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d92d01a7
sw x3, 0(x2) # store x3 (0xd92d01a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000d92d01a7 from memory into f23
li x3, 0x79ec0dad # load x3 with 32 MSBs 0x0000000079ec0dad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000079ec0dad
sw x3, 0(x2) # store x3 (0x79ec0dad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000079ec0dad from memory into f31
li x3, 0x258c2faa # load x3 with 32 MSBs 0x00000000258c2faa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000258c2faa
sw x3, 0(x2) # store x3 (0x258c2faa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000258c2faa from memory into f12
fnmsub.d f18, f23, f31, f12 # perform operation

# Testcase cp_fd (Test destination fd = x19)
li x19, 0xa6dc87b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x516094a2 # load x3 with 32 MSBs 0x00000000516094a2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000516094a2
sw x3, 0(x2) # store x3 (0x516094a2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000516094a2 from memory into f31
li x3, 0xeb2f1f8b # load x3 with 32 MSBs 0x00000000eb2f1f8b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb2f1f8b
sw x3, 0(x2) # store x3 (0xeb2f1f8b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000eb2f1f8b from memory into f3
li x3, 0xa799aadf # load x3 with 32 MSBs 0x00000000a799aadf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a799aadf
sw x3, 0(x2) # store x3 (0xa799aadf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000a799aadf from memory into f7
fnmsub.d f19, f31, f3, f7 # perform operation

# Testcase cp_fd (Test destination fd = x20)
li x20, 0xb6c6fc6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcc8d6b85 # load x3 with 32 MSBs 0x00000000cc8d6b85
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cc8d6b85
sw x3, 0(x2) # store x3 (0xcc8d6b85) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000cc8d6b85 from memory into f29
li x3, 0x6b199994 # load x3 with 32 MSBs 0x000000006b199994
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b199994
sw x3, 0(x2) # store x3 (0x6b199994) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000006b199994 from memory into f27
li x3, 0x9b23f62a # load x3 with 32 MSBs 0x000000009b23f62a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b23f62a
sw x3, 0(x2) # store x3 (0x9b23f62a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000009b23f62a from memory into f11
fnmsub.d f20, f29, f27, f11 # perform operation

# Testcase cp_fd (Test destination fd = x21)
li x21, 0x2447e045 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb37f787b # load x3 with 32 MSBs 0x00000000b37f787b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b37f787b
sw x3, 0(x2) # store x3 (0xb37f787b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000b37f787b from memory into f9
li x3, 0x9870be39 # load x3 with 32 MSBs 0x000000009870be39
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009870be39
sw x3, 0(x2) # store x3 (0x9870be39) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000009870be39 from memory into f15
li x3, 0x47a419aa # load x3 with 32 MSBs 0x0000000047a419aa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000047a419aa
sw x3, 0(x2) # store x3 (0x47a419aa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000047a419aa from memory into f13
fnmsub.d f21, f9, f15, f13 # perform operation

# Testcase cp_fd (Test destination fd = x22)
li x22, 0x3aaca09e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x72e56219 # load x3 with 32 MSBs 0x0000000072e56219
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000072e56219
sw x3, 0(x2) # store x3 (0x72e56219) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000072e56219 from memory into f13
li x3, 0x156006e8 # load x3 with 32 MSBs 0x00000000156006e8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000156006e8
sw x3, 0(x2) # store x3 (0x156006e8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000156006e8 from memory into f16
li x3, 0x4285952b # load x3 with 32 MSBs 0x000000004285952b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004285952b
sw x3, 0(x2) # store x3 (0x4285952b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000004285952b from memory into f19
fnmsub.d f22, f13, f16, f19 # perform operation

# Testcase cp_fd (Test destination fd = x23)
li x23, 0x24eef7a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xac37212e # load x3 with 32 MSBs 0x00000000ac37212e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac37212e
sw x3, 0(x2) # store x3 (0xac37212e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000ac37212e from memory into f2
li x3, 0x2a010980 # load x3 with 32 MSBs 0x000000002a010980
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a010980
sw x3, 0(x2) # store x3 (0x2a010980) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000002a010980 from memory into f31
li x3, 0xe279472d # load x3 with 32 MSBs 0x00000000e279472d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e279472d
sw x3, 0(x2) # store x3 (0xe279472d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000e279472d from memory into f13
fnmsub.d f23, f2, f31, f13 # perform operation

# Testcase cp_fd (Test destination fd = x24)
li x24, 0x53e9e9f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x152403e8 # load x3 with 32 MSBs 0x00000000152403e8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000152403e8
sw x3, 0(x2) # store x3 (0x152403e8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000152403e8 from memory into f2
li x3, 0x4d8a11f2 # load x3 with 32 MSBs 0x000000004d8a11f2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d8a11f2
sw x3, 0(x2) # store x3 (0x4d8a11f2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000004d8a11f2 from memory into f15
li x3, 0xf19b7dbe # load x3 with 32 MSBs 0x00000000f19b7dbe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f19b7dbe
sw x3, 0(x2) # store x3 (0xf19b7dbe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000f19b7dbe from memory into f5
fnmsub.d f24, f2, f15, f5 # perform operation

# Testcase cp_fd (Test destination fd = x25)
li x25, 0x67572faf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x583c3d10 # load x3 with 32 MSBs 0x00000000583c3d10
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000583c3d10
sw x3, 0(x2) # store x3 (0x583c3d10) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000583c3d10 from memory into f7
li x3, 0x41a80f8e # load x3 with 32 MSBs 0x0000000041a80f8e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000041a80f8e
sw x3, 0(x2) # store x3 (0x41a80f8e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000041a80f8e from memory into f26
li x3, 0x413f084d # load x3 with 32 MSBs 0x00000000413f084d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000413f084d
sw x3, 0(x2) # store x3 (0x413f084d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000413f084d from memory into f29
fnmsub.d f25, f7, f26, f29 # perform operation

# Testcase cp_fd (Test destination fd = x26)
li x26, 0x14728279 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1e4792fc # load x3 with 32 MSBs 0x000000001e4792fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e4792fc
sw x3, 0(x2) # store x3 (0x1e4792fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000001e4792fc from memory into f12
li x3, 0xac7dd3fc # load x3 with 32 MSBs 0x00000000ac7dd3fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac7dd3fc
sw x3, 0(x2) # store x3 (0xac7dd3fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000ac7dd3fc from memory into f17
li x3, 0xa5c5650b # load x3 with 32 MSBs 0x00000000a5c5650b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a5c5650b
sw x3, 0(x2) # store x3 (0xa5c5650b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000a5c5650b from memory into f7
fnmsub.d f26, f12, f17, f7 # perform operation

# Testcase cp_fd (Test destination fd = x27)
li x27, 0xfbb01ad3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc81072eb # load x3 with 32 MSBs 0x00000000c81072eb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c81072eb
sw x3, 0(x2) # store x3 (0xc81072eb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000c81072eb from memory into f24
li x3, 0x5634c4e7 # load x3 with 32 MSBs 0x000000005634c4e7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005634c4e7
sw x3, 0(x2) # store x3 (0x5634c4e7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000005634c4e7 from memory into f4
li x3, 0x0b89f363 # load x3 with 32 MSBs 0x000000000b89f363
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000b89f363
sw x3, 0(x2) # store x3 (0x0b89f363) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000000b89f363 from memory into f22
fnmsub.d f27, f24, f4, f22 # perform operation

# Testcase cp_fd (Test destination fd = x28)
li x28, 0x1905ec6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2d8e65ff # load x3 with 32 MSBs 0x000000002d8e65ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d8e65ff
sw x3, 0(x2) # store x3 (0x2d8e65ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000002d8e65ff from memory into f7
li x3, 0x5babec8d # load x3 with 32 MSBs 0x000000005babec8d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005babec8d
sw x3, 0(x2) # store x3 (0x5babec8d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000005babec8d from memory into f26
li x3, 0x1e441f2b # load x3 with 32 MSBs 0x000000001e441f2b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e441f2b
sw x3, 0(x2) # store x3 (0x1e441f2b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000001e441f2b from memory into f18
fnmsub.d f28, f7, f26, f18 # perform operation

# Testcase cp_fd (Test destination fd = x29)
li x29, 0xec73b585 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1323a984 # load x3 with 32 MSBs 0x000000001323a984
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001323a984
sw x3, 0(x2) # store x3 (0x1323a984) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000001323a984 from memory into f6
li x3, 0x2f44c66c # load x3 with 32 MSBs 0x000000002f44c66c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f44c66c
sw x3, 0(x2) # store x3 (0x2f44c66c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000002f44c66c from memory into f27
li x3, 0x30109284 # load x3 with 32 MSBs 0x0000000030109284
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000030109284
sw x3, 0(x2) # store x3 (0x30109284) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000030109284 from memory into f19
fnmsub.d f29, f6, f27, f19 # perform operation

# Testcase cp_fd (Test destination fd = x30)
li x30, 0xd0b19e87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xabb063dd # load x3 with 32 MSBs 0x00000000abb063dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000abb063dd
sw x3, 0(x2) # store x3 (0xabb063dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000abb063dd from memory into f2
li x3, 0x2ca54910 # load x3 with 32 MSBs 0x000000002ca54910
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ca54910
sw x3, 0(x2) # store x3 (0x2ca54910) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000002ca54910 from memory into f18
li x3, 0x278841bc # load x3 with 32 MSBs 0x00000000278841bc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000278841bc
sw x3, 0(x2) # store x3 (0x278841bc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000278841bc from memory into f3
fnmsub.d f30, f2, f18, f3 # perform operation

# Testcase cp_fd (Test destination fd = x31)
li x31, 0x8939debc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe6af0cd9 # load x3 with 32 MSBs 0x00000000e6af0cd9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e6af0cd9
sw x3, 0(x2) # store x3 (0xe6af0cd9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000e6af0cd9 from memory into f7
li x3, 0x04e20d97 # load x3 with 32 MSBs 0x0000000004e20d97
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000004e20d97
sw x3, 0(x2) # store x3 (0x04e20d97) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000004e20d97 from memory into f25
li x3, 0xbb477e52 # load x3 with 32 MSBs 0x00000000bb477e52
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb477e52
sw x3, 0(x2) # store x3 (0xbb477e52) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000bb477e52 from memory into f18
fnmsub.d f31, f7, f25, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f0)
li x18, 0xcb79ef63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x476b6c6f # load x3 with 32 MSBs 0x00000000476b6c6f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000476b6c6f
sw x3, 0(x2) # store x3 (0x476b6c6f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000476b6c6f from memory into f0
li x3, 0xc53f6d41 # load x3 with 32 MSBs 0x00000000c53f6d41
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c53f6d41
sw x3, 0(x2) # store x3 (0xc53f6d41) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000c53f6d41 from memory into f4
li x3, 0x6b85d33f # load x3 with 32 MSBs 0x000000006b85d33f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b85d33f
sw x3, 0(x2) # store x3 (0x6b85d33f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000006b85d33f from memory into f3
fnmsub.d f18, f0, f4, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
li x27, 0xae1ca176 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x71bca93b # load x3 with 32 MSBs 0x0000000071bca93b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000071bca93b
sw x3, 0(x2) # store x3 (0x71bca93b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000071bca93b from memory into f1
li x3, 0xf5202e0e # load x3 with 32 MSBs 0x00000000f5202e0e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f5202e0e
sw x3, 0(x2) # store x3 (0xf5202e0e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000f5202e0e from memory into f23
li x3, 0xc1b7f4ee # load x3 with 32 MSBs 0x00000000c1b7f4ee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1b7f4ee
sw x3, 0(x2) # store x3 (0xc1b7f4ee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000c1b7f4ee from memory into f19
fnmsub.d f27, f1, f23, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
li x27, 0x07e9fd48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x167d288f # load x3 with 32 MSBs 0x00000000167d288f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000167d288f
sw x3, 0(x2) # store x3 (0x167d288f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000167d288f from memory into f2
li x3, 0xae707144 # load x3 with 32 MSBs 0x00000000ae707144
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ae707144
sw x3, 0(x2) # store x3 (0xae707144) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000ae707144 from memory into f4
li x3, 0xe7ac9bd5 # load x3 with 32 MSBs 0x00000000e7ac9bd5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e7ac9bd5
sw x3, 0(x2) # store x3 (0xe7ac9bd5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000e7ac9bd5 from memory into f22
fnmsub.d f27, f2, f4, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
li x2, 0x6aed773c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0f640eb6 # load x3 with 32 MSBs 0x000000000f640eb6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f640eb6
sw x3, 0(x2) # store x3 (0x0f640eb6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000000f640eb6 from memory into f3
li x3, 0x8715440a # load x3 with 32 MSBs 0x000000008715440a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008715440a
sw x3, 0(x2) # store x3 (0x8715440a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000008715440a from memory into f14
li x3, 0x97b30414 # load x3 with 32 MSBs 0x0000000097b30414
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000097b30414
sw x3, 0(x2) # store x3 (0x97b30414) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000097b30414 from memory into f9
fnmsub.d f2, f3, f14, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
li x3, 0x3ae59a90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8b48dd30 # load x3 with 32 MSBs 0x000000008b48dd30
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008b48dd30
sw x3, 0(x2) # store x3 (0x8b48dd30) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000008b48dd30 from memory into f4
li x3, 0x2e74f9b1 # load x3 with 32 MSBs 0x000000002e74f9b1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e74f9b1
sw x3, 0(x2) # store x3 (0x2e74f9b1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000002e74f9b1 from memory into f28
li x3, 0x73760f09 # load x3 with 32 MSBs 0x0000000073760f09
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000073760f09
sw x3, 0(x2) # store x3 (0x73760f09) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000073760f09 from memory into f1
fnmsub.d f3, f4, f28, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
li x29, 0xfb6e7af7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1c2554f0 # load x3 with 32 MSBs 0x000000001c2554f0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001c2554f0
sw x3, 0(x2) # store x3 (0x1c2554f0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000001c2554f0 from memory into f5
li x3, 0x93d2db36 # load x3 with 32 MSBs 0x0000000093d2db36
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000093d2db36
sw x3, 0(x2) # store x3 (0x93d2db36) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000093d2db36 from memory into f8
li x3, 0x03648b6e # load x3 with 32 MSBs 0x0000000003648b6e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000003648b6e
sw x3, 0(x2) # store x3 (0x03648b6e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000003648b6e from memory into f1
fnmsub.d f29, f5, f8, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
li x30, 0xc14829b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf8011af0 # load x3 with 32 MSBs 0x00000000f8011af0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f8011af0
sw x3, 0(x2) # store x3 (0xf8011af0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000f8011af0 from memory into f6
li x3, 0x78e4fdec # load x3 with 32 MSBs 0x0000000078e4fdec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000078e4fdec
sw x3, 0(x2) # store x3 (0x78e4fdec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000078e4fdec from memory into f18
li x3, 0xc864e8cb # load x3 with 32 MSBs 0x00000000c864e8cb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c864e8cb
sw x3, 0(x2) # store x3 (0xc864e8cb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000c864e8cb from memory into f31
fnmsub.d f30, f6, f18, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
li x10, 0x42bf8731 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9e85e9a7 # load x3 with 32 MSBs 0x000000009e85e9a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e85e9a7
sw x3, 0(x2) # store x3 (0x9e85e9a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000009e85e9a7 from memory into f7
li x3, 0x1bcf99ad # load x3 with 32 MSBs 0x000000001bcf99ad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001bcf99ad
sw x3, 0(x2) # store x3 (0x1bcf99ad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000001bcf99ad from memory into f13
li x3, 0x8c5e0b4a # load x3 with 32 MSBs 0x000000008c5e0b4a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c5e0b4a
sw x3, 0(x2) # store x3 (0x8c5e0b4a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000008c5e0b4a from memory into f11
fnmsub.d f10, f7, f13, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
li x25, 0x34a8cc07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5188c2ec # load x3 with 32 MSBs 0x000000005188c2ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005188c2ec
sw x3, 0(x2) # store x3 (0x5188c2ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000005188c2ec from memory into f8
li x3, 0x9ee299a3 # load x3 with 32 MSBs 0x000000009ee299a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ee299a3
sw x3, 0(x2) # store x3 (0x9ee299a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000009ee299a3 from memory into f4
li x3, 0x34f9fad3 # load x3 with 32 MSBs 0x0000000034f9fad3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000034f9fad3
sw x3, 0(x2) # store x3 (0x34f9fad3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000034f9fad3 from memory into f3
fnmsub.d f25, f8, f4, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
li x20, 0xaaf98ddf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbe3ab234 # load x3 with 32 MSBs 0x00000000be3ab234
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000be3ab234
sw x3, 0(x2) # store x3 (0xbe3ab234) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000be3ab234 from memory into f9
li x3, 0x3c1708cd # load x3 with 32 MSBs 0x000000003c1708cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003c1708cd
sw x3, 0(x2) # store x3 (0x3c1708cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000003c1708cd from memory into f7
li x3, 0x158193eb # load x3 with 32 MSBs 0x00000000158193eb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000158193eb
sw x3, 0(x2) # store x3 (0x158193eb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000158193eb from memory into f22
fnmsub.d f20, f9, f7, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
li x25, 0xe9f98218 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4fa926c5 # load x3 with 32 MSBs 0x000000004fa926c5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004fa926c5
sw x3, 0(x2) # store x3 (0x4fa926c5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000004fa926c5 from memory into f10
li x3, 0x7732c208 # load x3 with 32 MSBs 0x000000007732c208
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007732c208
sw x3, 0(x2) # store x3 (0x7732c208) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000007732c208 from memory into f14
li x3, 0xa56aaf74 # load x3 with 32 MSBs 0x00000000a56aaf74
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a56aaf74
sw x3, 0(x2) # store x3 (0xa56aaf74) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000a56aaf74 from memory into f21
fnmsub.d f25, f10, f14, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
li x1, 0x5e986ce1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd77dcfb3 # load x3 with 32 MSBs 0x00000000d77dcfb3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d77dcfb3
sw x3, 0(x2) # store x3 (0xd77dcfb3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000d77dcfb3 from memory into f11
li x3, 0x1722c3b0 # load x3 with 32 MSBs 0x000000001722c3b0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001722c3b0
sw x3, 0(x2) # store x3 (0x1722c3b0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000001722c3b0 from memory into f14
li x3, 0x19deee4f # load x3 with 32 MSBs 0x0000000019deee4f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000019deee4f
sw x3, 0(x2) # store x3 (0x19deee4f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000019deee4f from memory into f15
fnmsub.d f1, f11, f14, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
li x5, 0x46867aaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc3b22b03 # load x3 with 32 MSBs 0x00000000c3b22b03
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c3b22b03
sw x3, 0(x2) # store x3 (0xc3b22b03) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000c3b22b03 from memory into f12
li x3, 0x0977f1ec # load x3 with 32 MSBs 0x000000000977f1ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000977f1ec
sw x3, 0(x2) # store x3 (0x0977f1ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000000977f1ec from memory into f27
li x3, 0xa8cef506 # load x3 with 32 MSBs 0x00000000a8cef506
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a8cef506
sw x3, 0(x2) # store x3 (0xa8cef506) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000a8cef506 from memory into f6
fnmsub.d f5, f12, f27, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
li x25, 0x8ec0f93e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x74779c80 # load x3 with 32 MSBs 0x0000000074779c80
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000074779c80
sw x3, 0(x2) # store x3 (0x74779c80) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000074779c80 from memory into f13
li x3, 0xe3ef235e # load x3 with 32 MSBs 0x00000000e3ef235e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e3ef235e
sw x3, 0(x2) # store x3 (0xe3ef235e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000e3ef235e from memory into f5
li x3, 0xbbf64667 # load x3 with 32 MSBs 0x00000000bbf64667
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bbf64667
sw x3, 0(x2) # store x3 (0xbbf64667) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000bbf64667 from memory into f17
fnmsub.d f25, f13, f5, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
li x13, 0xfd08cde2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x171b82ba # load x3 with 32 MSBs 0x00000000171b82ba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000171b82ba
sw x3, 0(x2) # store x3 (0x171b82ba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000171b82ba from memory into f14
li x3, 0x1a56bd54 # load x3 with 32 MSBs 0x000000001a56bd54
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001a56bd54
sw x3, 0(x2) # store x3 (0x1a56bd54) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000001a56bd54 from memory into f15
li x3, 0x1f63d6f4 # load x3 with 32 MSBs 0x000000001f63d6f4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001f63d6f4
sw x3, 0(x2) # store x3 (0x1f63d6f4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000001f63d6f4 from memory into f24
fnmsub.d f13, f14, f15, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
li x13, 0x33d674e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc1257385 # load x3 with 32 MSBs 0x00000000c1257385
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1257385
sw x3, 0(x2) # store x3 (0xc1257385) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000c1257385 from memory into f15
li x3, 0x0cd48502 # load x3 with 32 MSBs 0x000000000cd48502
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000cd48502
sw x3, 0(x2) # store x3 (0x0cd48502) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000000cd48502 from memory into f5
li x3, 0x39f38812 # load x3 with 32 MSBs 0x0000000039f38812
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000039f38812
sw x3, 0(x2) # store x3 (0x39f38812) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000039f38812 from memory into f25
fnmsub.d f13, f15, f5, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
li x2, 0xeed9d3ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe30e5161 # load x3 with 32 MSBs 0x00000000e30e5161
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e30e5161
sw x3, 0(x2) # store x3 (0xe30e5161) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000e30e5161 from memory into f16
li x3, 0xa900a160 # load x3 with 32 MSBs 0x00000000a900a160
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a900a160
sw x3, 0(x2) # store x3 (0xa900a160) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000a900a160 from memory into f1
li x3, 0x7dc347b6 # load x3 with 32 MSBs 0x000000007dc347b6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007dc347b6
sw x3, 0(x2) # store x3 (0x7dc347b6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000007dc347b6 from memory into f22
fnmsub.d f2, f16, f1, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
li x21, 0x488ea7c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x149c595d # load x3 with 32 MSBs 0x00000000149c595d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000149c595d
sw x3, 0(x2) # store x3 (0x149c595d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000149c595d from memory into f17
li x3, 0xaf3e706a # load x3 with 32 MSBs 0x00000000af3e706a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af3e706a
sw x3, 0(x2) # store x3 (0xaf3e706a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000af3e706a from memory into f13
li x3, 0xf4498c19 # load x3 with 32 MSBs 0x00000000f4498c19
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f4498c19
sw x3, 0(x2) # store x3 (0xf4498c19) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000f4498c19 from memory into f12
fnmsub.d f21, f17, f13, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
li x3, 0x01c068d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x74f19134 # load x3 with 32 MSBs 0x0000000074f19134
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000074f19134
sw x3, 0(x2) # store x3 (0x74f19134) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000074f19134 from memory into f18
li x3, 0x9be14bf9 # load x3 with 32 MSBs 0x000000009be14bf9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009be14bf9
sw x3, 0(x2) # store x3 (0x9be14bf9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000009be14bf9 from memory into f24
li x3, 0x6bb92dd3 # load x3 with 32 MSBs 0x000000006bb92dd3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006bb92dd3
sw x3, 0(x2) # store x3 (0x6bb92dd3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000006bb92dd3 from memory into f29
fnmsub.d f3, f18, f24, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
li x19, 0xfaf63ba6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3701af23 # load x3 with 32 MSBs 0x000000003701af23
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003701af23
sw x3, 0(x2) # store x3 (0x3701af23) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000003701af23 from memory into f19
li x3, 0x4ed81942 # load x3 with 32 MSBs 0x000000004ed81942
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ed81942
sw x3, 0(x2) # store x3 (0x4ed81942) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000004ed81942 from memory into f20
li x3, 0x787411d2 # load x3 with 32 MSBs 0x00000000787411d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000787411d2
sw x3, 0(x2) # store x3 (0x787411d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000787411d2 from memory into f22
fnmsub.d f19, f19, f20, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
li x21, 0xdfc35fb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2e86bb29 # load x3 with 32 MSBs 0x000000002e86bb29
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e86bb29
sw x3, 0(x2) # store x3 (0x2e86bb29) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000002e86bb29 from memory into f20
li x3, 0xf87deb56 # load x3 with 32 MSBs 0x00000000f87deb56
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f87deb56
sw x3, 0(x2) # store x3 (0xf87deb56) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000f87deb56 from memory into f23
li x3, 0x33ef7aa8 # load x3 with 32 MSBs 0x0000000033ef7aa8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000033ef7aa8
sw x3, 0(x2) # store x3 (0x33ef7aa8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000033ef7aa8 from memory into f18
fnmsub.d f21, f20, f23, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
li x25, 0xa1be2797 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbdab74dd # load x3 with 32 MSBs 0x00000000bdab74dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bdab74dd
sw x3, 0(x2) # store x3 (0xbdab74dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000bdab74dd from memory into f21
li x3, 0x3e832910 # load x3 with 32 MSBs 0x000000003e832910
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e832910
sw x3, 0(x2) # store x3 (0x3e832910) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000003e832910 from memory into f19
li x3, 0xdd19883b # load x3 with 32 MSBs 0x00000000dd19883b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd19883b
sw x3, 0(x2) # store x3 (0xdd19883b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000dd19883b from memory into f31
fnmsub.d f25, f21, f19, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
li x6, 0x36cd582a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8b6c8305 # load x3 with 32 MSBs 0x000000008b6c8305
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008b6c8305
sw x3, 0(x2) # store x3 (0x8b6c8305) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000008b6c8305 from memory into f22
li x3, 0x51f030be # load x3 with 32 MSBs 0x0000000051f030be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000051f030be
sw x3, 0(x2) # store x3 (0x51f030be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000051f030be from memory into f31
li x3, 0xe3b30c74 # load x3 with 32 MSBs 0x00000000e3b30c74
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e3b30c74
sw x3, 0(x2) # store x3 (0xe3b30c74) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e3b30c74 from memory into f19
fnmsub.d f6, f22, f31, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
li x30, 0x344e5952 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3189ee43 # load x3 with 32 MSBs 0x000000003189ee43
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003189ee43
sw x3, 0(x2) # store x3 (0x3189ee43) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000003189ee43 from memory into f23
li x3, 0x1455db93 # load x3 with 32 MSBs 0x000000001455db93
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001455db93
sw x3, 0(x2) # store x3 (0x1455db93) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000001455db93 from memory into f26
li x3, 0xc0770818 # load x3 with 32 MSBs 0x00000000c0770818
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c0770818
sw x3, 0(x2) # store x3 (0xc0770818) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000c0770818 from memory into f31
fnmsub.d f30, f23, f26, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
li x19, 0xe2c4a810 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9cae218c # load x3 with 32 MSBs 0x000000009cae218c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009cae218c
sw x3, 0(x2) # store x3 (0x9cae218c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000009cae218c from memory into f24
li x3, 0x22d0e03d # load x3 with 32 MSBs 0x0000000022d0e03d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000022d0e03d
sw x3, 0(x2) # store x3 (0x22d0e03d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000022d0e03d from memory into f22
li x3, 0xc06d3967 # load x3 with 32 MSBs 0x00000000c06d3967
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c06d3967
sw x3, 0(x2) # store x3 (0xc06d3967) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000c06d3967 from memory into f20
fnmsub.d f19, f24, f22, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
li x25, 0x5b507c0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x39c97e4a # load x3 with 32 MSBs 0x0000000039c97e4a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000039c97e4a
sw x3, 0(x2) # store x3 (0x39c97e4a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000039c97e4a from memory into f25
li x3, 0x4d2d5165 # load x3 with 32 MSBs 0x000000004d2d5165
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d2d5165
sw x3, 0(x2) # store x3 (0x4d2d5165) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000004d2d5165 from memory into f19
li x3, 0xdc13bae5 # load x3 with 32 MSBs 0x00000000dc13bae5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc13bae5
sw x3, 0(x2) # store x3 (0xdc13bae5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000dc13bae5 from memory into f22
fnmsub.d f25, f25, f19, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
li x16, 0xf3022cdb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdc41b03b # load x3 with 32 MSBs 0x00000000dc41b03b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc41b03b
sw x3, 0(x2) # store x3 (0xdc41b03b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000dc41b03b from memory into f26
li x3, 0xe64844fa # load x3 with 32 MSBs 0x00000000e64844fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e64844fa
sw x3, 0(x2) # store x3 (0xe64844fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000e64844fa from memory into f13
li x3, 0x29bec03f # load x3 with 32 MSBs 0x0000000029bec03f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000029bec03f
sw x3, 0(x2) # store x3 (0x29bec03f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000029bec03f from memory into f18
fnmsub.d f16, f26, f13, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
li x20, 0x94a10e5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x29855d07 # load x3 with 32 MSBs 0x0000000029855d07
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000029855d07
sw x3, 0(x2) # store x3 (0x29855d07) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000029855d07 from memory into f27
li x3, 0xbb62e5f5 # load x3 with 32 MSBs 0x00000000bb62e5f5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb62e5f5
sw x3, 0(x2) # store x3 (0xbb62e5f5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000bb62e5f5 from memory into f4
li x3, 0xd0bc4fbe # load x3 with 32 MSBs 0x00000000d0bc4fbe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0bc4fbe
sw x3, 0(x2) # store x3 (0xd0bc4fbe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000d0bc4fbe from memory into f6
fnmsub.d f20, f27, f4, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
li x11, 0xc7ab3793 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc88d1b93 # load x3 with 32 MSBs 0x00000000c88d1b93
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c88d1b93
sw x3, 0(x2) # store x3 (0xc88d1b93) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000c88d1b93 from memory into f28
li x3, 0x53c0144f # load x3 with 32 MSBs 0x0000000053c0144f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000053c0144f
sw x3, 0(x2) # store x3 (0x53c0144f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000053c0144f from memory into f26
li x3, 0xa3fce75d # load x3 with 32 MSBs 0x00000000a3fce75d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a3fce75d
sw x3, 0(x2) # store x3 (0xa3fce75d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000a3fce75d from memory into f15
fnmsub.d f11, f28, f26, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
li x25, 0xa13a18e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbecfff5d # load x3 with 32 MSBs 0x00000000becfff5d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000becfff5d
sw x3, 0(x2) # store x3 (0xbecfff5d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000becfff5d from memory into f29
li x3, 0x87691dfe # load x3 with 32 MSBs 0x0000000087691dfe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000087691dfe
sw x3, 0(x2) # store x3 (0x87691dfe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000087691dfe from memory into f9
li x3, 0x1ed3053f # load x3 with 32 MSBs 0x000000001ed3053f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ed3053f
sw x3, 0(x2) # store x3 (0x1ed3053f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000001ed3053f from memory into f21
fnmsub.d f25, f29, f9, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
li x6, 0xdc888b93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8d1d0d5a # load x3 with 32 MSBs 0x000000008d1d0d5a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008d1d0d5a
sw x3, 0(x2) # store x3 (0x8d1d0d5a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000008d1d0d5a from memory into f30
li x3, 0x5ae3b2f6 # load x3 with 32 MSBs 0x000000005ae3b2f6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005ae3b2f6
sw x3, 0(x2) # store x3 (0x5ae3b2f6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000005ae3b2f6 from memory into f14
li x3, 0x7fe06a5a # load x3 with 32 MSBs 0x000000007fe06a5a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007fe06a5a
sw x3, 0(x2) # store x3 (0x7fe06a5a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000007fe06a5a from memory into f2
fnmsub.d f6, f30, f14, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
li x3, 0xc60fd81c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6b72c945 # load x3 with 32 MSBs 0x000000006b72c945
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b72c945
sw x3, 0(x2) # store x3 (0x6b72c945) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000006b72c945 from memory into f31
li x3, 0x2698c07b # load x3 with 32 MSBs 0x000000002698c07b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002698c07b
sw x3, 0(x2) # store x3 (0x2698c07b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000002698c07b from memory into f13
li x3, 0xceaaf10e # load x3 with 32 MSBs 0x00000000ceaaf10e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ceaaf10e
sw x3, 0(x2) # store x3 (0xceaaf10e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000ceaaf10e from memory into f29
fnmsub.d f3, f31, f13, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
li x23, 0x9c550685 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa02e0c21 # load x3 with 32 MSBs 0x00000000a02e0c21
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a02e0c21
sw x3, 0(x2) # store x3 (0xa02e0c21) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000a02e0c21 from memory into f30
li x3, 0xef336a9c # load x3 with 32 MSBs 0x00000000ef336a9c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef336a9c
sw x3, 0(x2) # store x3 (0xef336a9c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000ef336a9c from memory into f0
li x3, 0x0fb30a8c # load x3 with 32 MSBs 0x000000000fb30a8c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000fb30a8c
sw x3, 0(x2) # store x3 (0x0fb30a8c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000000fb30a8c from memory into f17
fnmsub.d f23, f30, f0, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
li x21, 0x74714126 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc87eb0b7 # load x3 with 32 MSBs 0x00000000c87eb0b7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c87eb0b7
sw x3, 0(x2) # store x3 (0xc87eb0b7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000c87eb0b7 from memory into f28
li x3, 0xf50b2154 # load x3 with 32 MSBs 0x00000000f50b2154
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f50b2154
sw x3, 0(x2) # store x3 (0xf50b2154) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000f50b2154 from memory into f1
li x3, 0xf8e204e8 # load x3 with 32 MSBs 0x00000000f8e204e8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f8e204e8
sw x3, 0(x2) # store x3 (0xf8e204e8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000f8e204e8 from memory into f12
fnmsub.d f21, f28, f1, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
li x23, 0xbc7e9658 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa4b80de1 # load x3 with 32 MSBs 0x00000000a4b80de1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a4b80de1
sw x3, 0(x2) # store x3 (0xa4b80de1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000a4b80de1 from memory into f25
li x3, 0x59e1ad1e # load x3 with 32 MSBs 0x0000000059e1ad1e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000059e1ad1e
sw x3, 0(x2) # store x3 (0x59e1ad1e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000059e1ad1e from memory into f2
li x3, 0x7bf3077c # load x3 with 32 MSBs 0x000000007bf3077c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007bf3077c
sw x3, 0(x2) # store x3 (0x7bf3077c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000007bf3077c from memory into f15
fnmsub.d f23, f25, f2, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
li x30, 0xa0910713 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa5b097ba # load x3 with 32 MSBs 0x00000000a5b097ba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a5b097ba
sw x3, 0(x2) # store x3 (0xa5b097ba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000a5b097ba from memory into f7
li x3, 0x70886328 # load x3 with 32 MSBs 0x0000000070886328
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000070886328
sw x3, 0(x2) # store x3 (0x70886328) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000070886328 from memory into f3
li x3, 0x248f3361 # load x3 with 32 MSBs 0x00000000248f3361
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000248f3361
sw x3, 0(x2) # store x3 (0x248f3361) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000248f3361 from memory into f25
fnmsub.d f30, f7, f3, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
li x20, 0xd149efb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaaffbdb6 # load x3 with 32 MSBs 0x00000000aaffbdb6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aaffbdb6
sw x3, 0(x2) # store x3 (0xaaffbdb6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000aaffbdb6 from memory into f21
li x3, 0x1ade022d # load x3 with 32 MSBs 0x000000001ade022d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ade022d
sw x3, 0(x2) # store x3 (0x1ade022d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000001ade022d from memory into f4
li x3, 0x5830ade3 # load x3 with 32 MSBs 0x000000005830ade3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005830ade3
sw x3, 0(x2) # store x3 (0x5830ade3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000005830ade3 from memory into f29
fnmsub.d f20, f21, f4, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
li x14, 0xb3351aeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdbb2bda2 # load x3 with 32 MSBs 0x00000000dbb2bda2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dbb2bda2
sw x3, 0(x2) # store x3 (0xdbb2bda2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000dbb2bda2 from memory into f12
li x3, 0xd6d534c7 # load x3 with 32 MSBs 0x00000000d6d534c7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d6d534c7
sw x3, 0(x2) # store x3 (0xd6d534c7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000d6d534c7 from memory into f5
li x3, 0x4c26781e # load x3 with 32 MSBs 0x000000004c26781e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004c26781e
sw x3, 0(x2) # store x3 (0x4c26781e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000004c26781e from memory into f10
fnmsub.d f14, f12, f5, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
li x9, 0x3ac5cc3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8bdb6ab9 # load x3 with 32 MSBs 0x000000008bdb6ab9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008bdb6ab9
sw x3, 0(x2) # store x3 (0x8bdb6ab9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000008bdb6ab9 from memory into f1
li x3, 0x9c1c9da2 # load x3 with 32 MSBs 0x000000009c1c9da2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009c1c9da2
sw x3, 0(x2) # store x3 (0x9c1c9da2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000009c1c9da2 from memory into f6
li x3, 0x7ea16fec # load x3 with 32 MSBs 0x000000007ea16fec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ea16fec
sw x3, 0(x2) # store x3 (0x7ea16fec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000007ea16fec from memory into f31
fnmsub.d f9, f1, f6, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
li x27, 0x554dadde # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfbe280fb # load x3 with 32 MSBs 0x00000000fbe280fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fbe280fb
sw x3, 0(x2) # store x3 (0xfbe280fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000fbe280fb from memory into f16
li x3, 0xaad0f865 # load x3 with 32 MSBs 0x00000000aad0f865
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aad0f865
sw x3, 0(x2) # store x3 (0xaad0f865) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000aad0f865 from memory into f7
li x3, 0x2ed1a6cb # load x3 with 32 MSBs 0x000000002ed1a6cb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ed1a6cb
sw x3, 0(x2) # store x3 (0x2ed1a6cb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000002ed1a6cb from memory into f19
fnmsub.d f27, f16, f7, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
li x15, 0xf4090791 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x471371a5 # load x3 with 32 MSBs 0x00000000471371a5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000471371a5
sw x3, 0(x2) # store x3 (0x471371a5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000471371a5 from memory into f18
li x3, 0xddd309a7 # load x3 with 32 MSBs 0x00000000ddd309a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ddd309a7
sw x3, 0(x2) # store x3 (0xddd309a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000ddd309a7 from memory into f8
li x3, 0x4b3dfef3 # load x3 with 32 MSBs 0x000000004b3dfef3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004b3dfef3
sw x3, 0(x2) # store x3 (0x4b3dfef3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000004b3dfef3 from memory into f14
fnmsub.d f15, f18, f8, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
li x17, 0xac7d235f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x20f79178 # load x3 with 32 MSBs 0x0000000020f79178
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020f79178
sw x3, 0(x2) # store x3 (0x20f79178) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000020f79178 from memory into f15
li x3, 0xe948524c # load x3 with 32 MSBs 0x00000000e948524c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e948524c
sw x3, 0(x2) # store x3 (0xe948524c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000e948524c from memory into f9
li x3, 0x20a66825 # load x3 with 32 MSBs 0x0000000020a66825
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020a66825
sw x3, 0(x2) # store x3 (0x20a66825) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000020a66825 from memory into f20
fnmsub.d f17, f15, f9, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
li x17, 0xade1a3e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfdefa82d # load x3 with 32 MSBs 0x00000000fdefa82d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fdefa82d
sw x3, 0(x2) # store x3 (0xfdefa82d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000fdefa82d from memory into f22
li x3, 0x265db7f1 # load x3 with 32 MSBs 0x00000000265db7f1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000265db7f1
sw x3, 0(x2) # store x3 (0x265db7f1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000265db7f1 from memory into f10
li x3, 0x15c7ceb3 # load x3 with 32 MSBs 0x0000000015c7ceb3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000015c7ceb3
sw x3, 0(x2) # store x3 (0x15c7ceb3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000015c7ceb3 from memory into f31
fnmsub.d f17, f22, f10, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
li x25, 0x179f60c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcf4ee511 # load x3 with 32 MSBs 0x00000000cf4ee511
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cf4ee511
sw x3, 0(x2) # store x3 (0xcf4ee511) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000cf4ee511 from memory into f22
li x3, 0xfad310bb # load x3 with 32 MSBs 0x00000000fad310bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fad310bb
sw x3, 0(x2) # store x3 (0xfad310bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000fad310bb from memory into f11
li x3, 0xa1e88a44 # load x3 with 32 MSBs 0x00000000a1e88a44
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a1e88a44
sw x3, 0(x2) # store x3 (0xa1e88a44) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000a1e88a44 from memory into f19
fnmsub.d f25, f22, f11, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
li x22, 0xa2cf3d05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0065e474 # load x3 with 32 MSBs 0x000000000065e474
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000065e474
sw x3, 0(x2) # store x3 (0x0065e474) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000000065e474 from memory into f7
li x3, 0x0b8671b3 # load x3 with 32 MSBs 0x000000000b8671b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000b8671b3
sw x3, 0(x2) # store x3 (0x0b8671b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000000b8671b3 from memory into f12
li x3, 0x913cc298 # load x3 with 32 MSBs 0x00000000913cc298
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000913cc298
sw x3, 0(x2) # store x3 (0x913cc298) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000913cc298 from memory into f16
fnmsub.d f22, f7, f12, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
li x31, 0x52f7b4f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaef57a85 # load x3 with 32 MSBs 0x00000000aef57a85
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aef57a85
sw x3, 0(x2) # store x3 (0xaef57a85) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000aef57a85 from memory into f11
li x3, 0xaa3dbd22 # load x3 with 32 MSBs 0x00000000aa3dbd22
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa3dbd22
sw x3, 0(x2) # store x3 (0xaa3dbd22) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000aa3dbd22 from memory into f13
li x3, 0x0d0ff838 # load x3 with 32 MSBs 0x000000000d0ff838
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d0ff838
sw x3, 0(x2) # store x3 (0x0d0ff838) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000000d0ff838 from memory into f25
fnmsub.d f31, f11, f13, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
li x29, 0x9eee377c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc517e7ae # load x3 with 32 MSBs 0x00000000c517e7ae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c517e7ae
sw x3, 0(x2) # store x3 (0xc517e7ae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000c517e7ae from memory into f16
li x3, 0x2e2c56cc # load x3 with 32 MSBs 0x000000002e2c56cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e2c56cc
sw x3, 0(x2) # store x3 (0x2e2c56cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000002e2c56cc from memory into f14
li x3, 0x7aa67bfc # load x3 with 32 MSBs 0x000000007aa67bfc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007aa67bfc
sw x3, 0(x2) # store x3 (0x7aa67bfc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000007aa67bfc from memory into f7
fnmsub.d f29, f16, f14, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
li x24, 0xad5418e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaae6cef2 # load x3 with 32 MSBs 0x00000000aae6cef2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aae6cef2
sw x3, 0(x2) # store x3 (0xaae6cef2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000aae6cef2 from memory into f1
li x3, 0x29c257ac # load x3 with 32 MSBs 0x0000000029c257ac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000029c257ac
sw x3, 0(x2) # store x3 (0x29c257ac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000029c257ac from memory into f15
li x3, 0x4d2b23d0 # load x3 with 32 MSBs 0x000000004d2b23d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d2b23d0
sw x3, 0(x2) # store x3 (0x4d2b23d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000004d2b23d0 from memory into f28
fnmsub.d f24, f1, f15, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
li x6, 0x23c6c0ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6eeb8bd1 # load x3 with 32 MSBs 0x000000006eeb8bd1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006eeb8bd1
sw x3, 0(x2) # store x3 (0x6eeb8bd1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000006eeb8bd1 from memory into f9
li x3, 0xab5d7a9a # load x3 with 32 MSBs 0x00000000ab5d7a9a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ab5d7a9a
sw x3, 0(x2) # store x3 (0xab5d7a9a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000ab5d7a9a from memory into f16
li x3, 0x49218818 # load x3 with 32 MSBs 0x0000000049218818
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000049218818
sw x3, 0(x2) # store x3 (0x49218818) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000049218818 from memory into f10
fnmsub.d f6, f9, f16, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
li x29, 0x846bdc62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6b1ef874 # load x3 with 32 MSBs 0x000000006b1ef874
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b1ef874
sw x3, 0(x2) # store x3 (0x6b1ef874) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000006b1ef874 from memory into f6
li x3, 0xf96b31b7 # load x3 with 32 MSBs 0x00000000f96b31b7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f96b31b7
sw x3, 0(x2) # store x3 (0xf96b31b7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000f96b31b7 from memory into f17
li x3, 0x0fe69454 # load x3 with 32 MSBs 0x000000000fe69454
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000fe69454
sw x3, 0(x2) # store x3 (0x0fe69454) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000000fe69454 from memory into f3
fnmsub.d f29, f6, f17, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
li x24, 0xb2c681c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf76f2b39 # load x3 with 32 MSBs 0x00000000f76f2b39
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f76f2b39
sw x3, 0(x2) # store x3 (0xf76f2b39) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000f76f2b39 from memory into f11
li x3, 0x636130e4 # load x3 with 32 MSBs 0x00000000636130e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000636130e4
sw x3, 0(x2) # store x3 (0x636130e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000636130e4 from memory into f18
li x3, 0x1e06a1cb # load x3 with 32 MSBs 0x000000001e06a1cb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e06a1cb
sw x3, 0(x2) # store x3 (0x1e06a1cb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000001e06a1cb from memory into f19
fnmsub.d f24, f11, f18, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
li x15, 0x8c9484dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x95f4e2d8 # load x3 with 32 MSBs 0x0000000095f4e2d8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095f4e2d8
sw x3, 0(x2) # store x3 (0x95f4e2d8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000095f4e2d8 from memory into f14
li x3, 0xd542f454 # load x3 with 32 MSBs 0x00000000d542f454
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d542f454
sw x3, 0(x2) # store x3 (0xd542f454) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000d542f454 from memory into f19
li x3, 0x09b2e1cf # load x3 with 32 MSBs 0x0000000009b2e1cf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000009b2e1cf
sw x3, 0(x2) # store x3 (0x09b2e1cf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000009b2e1cf from memory into f25
fnmsub.d f15, f14, f19, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
li x12, 0xe617c780 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc541cc46 # load x3 with 32 MSBs 0x00000000c541cc46
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c541cc46
sw x3, 0(x2) # store x3 (0xc541cc46) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000c541cc46 from memory into f17
li x3, 0x545c3282 # load x3 with 32 MSBs 0x00000000545c3282
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000545c3282
sw x3, 0(x2) # store x3 (0x545c3282) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000545c3282 from memory into f20
li x3, 0x21525955 # load x3 with 32 MSBs 0x0000000021525955
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000021525955
sw x3, 0(x2) # store x3 (0x21525955) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000021525955 from memory into f22
fnmsub.d f12, f17, f20, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
li x16, 0xd1f2f1db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf1d3c8fb # load x3 with 32 MSBs 0x00000000f1d3c8fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f1d3c8fb
sw x3, 0(x2) # store x3 (0xf1d3c8fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000f1d3c8fb from memory into f17
li x3, 0x55e607b6 # load x3 with 32 MSBs 0x0000000055e607b6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000055e607b6
sw x3, 0(x2) # store x3 (0x55e607b6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000055e607b6 from memory into f21
li x3, 0x5e3cb5d7 # load x3 with 32 MSBs 0x000000005e3cb5d7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e3cb5d7
sw x3, 0(x2) # store x3 (0x5e3cb5d7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000005e3cb5d7 from memory into f21
fnmsub.d f16, f17, f21, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
li x24, 0x2cae46af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5ef1e0eb # load x3 with 32 MSBs 0x000000005ef1e0eb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005ef1e0eb
sw x3, 0(x2) # store x3 (0x5ef1e0eb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000005ef1e0eb from memory into f10
li x3, 0x661c6dae # load x3 with 32 MSBs 0x00000000661c6dae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000661c6dae
sw x3, 0(x2) # store x3 (0x661c6dae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000661c6dae from memory into f22
li x3, 0xae2f8915 # load x3 with 32 MSBs 0x00000000ae2f8915
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ae2f8915
sw x3, 0(x2) # store x3 (0xae2f8915) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000ae2f8915 from memory into f16
fnmsub.d f24, f10, f22, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
li x5, 0x02867020 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeffa92ad # load x3 with 32 MSBs 0x00000000effa92ad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000effa92ad
sw x3, 0(x2) # store x3 (0xeffa92ad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000effa92ad from memory into f13
li x3, 0xf21c7106 # load x3 with 32 MSBs 0x00000000f21c7106
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f21c7106
sw x3, 0(x2) # store x3 (0xf21c7106) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000f21c7106 from memory into f23
li x3, 0xe22411a8 # load x3 with 32 MSBs 0x00000000e22411a8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e22411a8
sw x3, 0(x2) # store x3 (0xe22411a8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000e22411a8 from memory into f9
fnmsub.d f5, f13, f23, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
li x20, 0x1121a394 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbde68c73 # load x3 with 32 MSBs 0x00000000bde68c73
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bde68c73
sw x3, 0(x2) # store x3 (0xbde68c73) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000bde68c73 from memory into f9
li x3, 0xdaeda1d0 # load x3 with 32 MSBs 0x00000000daeda1d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000daeda1d0
sw x3, 0(x2) # store x3 (0xdaeda1d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000daeda1d0 from memory into f24
li x3, 0x9cf1751e # load x3 with 32 MSBs 0x000000009cf1751e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009cf1751e
sw x3, 0(x2) # store x3 (0x9cf1751e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000009cf1751e from memory into f2
fnmsub.d f20, f9, f24, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
li x6, 0x16e0cfa5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2c799f8f # load x3 with 32 MSBs 0x000000002c799f8f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002c799f8f
sw x3, 0(x2) # store x3 (0x2c799f8f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000002c799f8f from memory into f17
li x3, 0x75a9a5a1 # load x3 with 32 MSBs 0x0000000075a9a5a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075a9a5a1
sw x3, 0(x2) # store x3 (0x75a9a5a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000075a9a5a1 from memory into f25
li x3, 0xa488ecd5 # load x3 with 32 MSBs 0x00000000a488ecd5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a488ecd5
sw x3, 0(x2) # store x3 (0xa488ecd5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000a488ecd5 from memory into f24
fnmsub.d f6, f17, f25, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
li x24, 0x2dc5622e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9cc74368 # load x3 with 32 MSBs 0x000000009cc74368
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009cc74368
sw x3, 0(x2) # store x3 (0x9cc74368) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000009cc74368 from memory into f3
li x3, 0x53ba88b5 # load x3 with 32 MSBs 0x0000000053ba88b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000053ba88b5
sw x3, 0(x2) # store x3 (0x53ba88b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000053ba88b5 from memory into f26
li x3, 0xdd740796 # load x3 with 32 MSBs 0x00000000dd740796
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd740796
sw x3, 0(x2) # store x3 (0xdd740796) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000dd740796 from memory into f2
fnmsub.d f24, f3, f26, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
li x12, 0xa3fce8ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x837b2b56 # load x3 with 32 MSBs 0x00000000837b2b56
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000837b2b56
sw x3, 0(x2) # store x3 (0x837b2b56) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000837b2b56 from memory into f6
li x3, 0xff54f7a3 # load x3 with 32 MSBs 0x00000000ff54f7a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff54f7a3
sw x3, 0(x2) # store x3 (0xff54f7a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000ff54f7a3 from memory into f27
li x3, 0x907f7c52 # load x3 with 32 MSBs 0x00000000907f7c52
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000907f7c52
sw x3, 0(x2) # store x3 (0x907f7c52) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000907f7c52 from memory into f19
fnmsub.d f12, f6, f27, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
li x4, 0xf238fdd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3e50ddfe # load x3 with 32 MSBs 0x000000003e50ddfe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e50ddfe
sw x3, 0(x2) # store x3 (0x3e50ddfe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000003e50ddfe from memory into f3
li x3, 0x7d491a24 # load x3 with 32 MSBs 0x000000007d491a24
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007d491a24
sw x3, 0(x2) # store x3 (0x7d491a24) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000007d491a24 from memory into f28
li x3, 0xd12232d2 # load x3 with 32 MSBs 0x00000000d12232d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d12232d2
sw x3, 0(x2) # store x3 (0xd12232d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000d12232d2 from memory into f13
fnmsub.d f4, f3, f28, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
li x4, 0x07ff8a08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x54790bfd # load x3 with 32 MSBs 0x0000000054790bfd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000054790bfd
sw x3, 0(x2) # store x3 (0x54790bfd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000054790bfd from memory into f24
li x3, 0xce560895 # load x3 with 32 MSBs 0x00000000ce560895
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ce560895
sw x3, 0(x2) # store x3 (0xce560895) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000ce560895 from memory into f29
li x3, 0xf13afe49 # load x3 with 32 MSBs 0x00000000f13afe49
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f13afe49
sw x3, 0(x2) # store x3 (0xf13afe49) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000f13afe49 from memory into f2
fnmsub.d f4, f24, f29, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
li x27, 0xfe66b8b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf6f5c89 # load x3 with 32 MSBs 0x00000000bf6f5c89
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf6f5c89
sw x3, 0(x2) # store x3 (0xbf6f5c89) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000bf6f5c89 from memory into f5
li x3, 0xa2430c86 # load x3 with 32 MSBs 0x00000000a2430c86
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a2430c86
sw x3, 0(x2) # store x3 (0xa2430c86) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000a2430c86 from memory into f30
li x3, 0xfdd1a10d # load x3 with 32 MSBs 0x00000000fdd1a10d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fdd1a10d
sw x3, 0(x2) # store x3 (0xfdd1a10d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000fdd1a10d from memory into f11
fnmsub.d f27, f5, f30, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
li x5, 0x7d210986 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xecb5a361 # load x3 with 32 MSBs 0x00000000ecb5a361
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ecb5a361
sw x3, 0(x2) # store x3 (0xecb5a361) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000ecb5a361 from memory into f12
li x3, 0x7ae9f2c8 # load x3 with 32 MSBs 0x000000007ae9f2c8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ae9f2c8
sw x3, 0(x2) # store x3 (0x7ae9f2c8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000007ae9f2c8 from memory into f31
li x3, 0x72999e5d # load x3 with 32 MSBs 0x0000000072999e5d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000072999e5d
sw x3, 0(x2) # store x3 (0x72999e5d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000072999e5d from memory into f17
fnmsub.d f5, f12, f31, f17 # perform operation

.EQU NUMTESTS,1


self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 8

.end
